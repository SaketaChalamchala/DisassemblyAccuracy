; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Common\ArchiveOpenCallback.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator->
PUBLIC	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
PUBLIC	?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z		; COpenCallbackImp::SetTotal
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__catchsym$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z$0
__unwindtable$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z$2
__ehfuncinfo$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\archiveopencallback.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv94 = -40						; size = 4
tv93 = -36						; size = 4
tv72 = -32						; size = 4
tv92 = -28						; size = 4
tv91 = -24						; size = 4
$T70111 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_files$ = 12						; size = 4
_bytes$ = 16						; size = 4
?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z PROC		; COpenCallbackImp::SetTotal
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 18
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
	mov	DWORD PTR tv91[ebp], eax
	cmp	DWORD PTR tv91[ebp], 0
	je	SHORT $LN2@SetTotal
; Line 20
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator->
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _bytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _files$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv93[ebp]
	jmp	SHORT $LN4@SetTotal
$LN2@SetTotal:
; Line 21
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+144], 0
	jne	SHORT $LN1@SetTotal
; Line 22
	xor	eax, eax
	jmp	SHORT $LN4@SetTotal
$LN1@SetTotal:
; Line 23
	mov	esi, esp
	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _files$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+144]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	jmp	SHORT $LN4@SetTotal
__catch$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z$0:
; Line 24
	mov	DWORD PTR $T70111[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@SetTotal
	ret	0
	mov	eax, __tryend$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z$1
	ret	0
__tryend$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN4@SetTotal
$LN9@SetTotal:
	mov	eax, DWORD PTR $T70111[ebp]
$LN4@SetTotal:
; Line 25
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetTotal@COpenCallbackImp@@UAGJPB_K0@Z ENDP		; COpenCallbackImp::SetTotal
PUBLIC	?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z	; COpenCallbackImp::SetCompleted
xdata$x	SEGMENT
__catchsym$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z$0
__unwindtable$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z$2
__ehfuncinfo$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv94 = -40						; size = 4
tv93 = -36						; size = 4
tv72 = -32						; size = 4
tv92 = -28						; size = 4
tv91 = -24						; size = 4
$T70136 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_files$ = 12						; size = 4
_bytes$ = 16						; size = 4
?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z PROC	; COpenCallbackImp::SetCompleted
; Line 28
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 29
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
	mov	DWORD PTR tv91[ebp], eax
	cmp	DWORD PTR tv91[ebp], 0
	je	SHORT $LN2@SetComplet
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator->
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _bytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _files$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	eax, DWORD PTR tv93[ebp]
	jmp	SHORT $LN4@SetComplet
$LN2@SetComplet:
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+144], 0
	jne	SHORT $LN1@SetComplet
; Line 33
	xor	eax, eax
	jmp	SHORT $LN4@SetComplet
$LN1@SetComplet:
; Line 34
	mov	esi, esp
	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _files$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+144]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv94[ebp], eax
	mov	eax, DWORD PTR tv94[ebp]
	jmp	SHORT $LN4@SetComplet
__catch$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z$0:
; Line 35
	mov	DWORD PTR $T70136[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@SetComplet
	ret	0
	mov	eax, __tryend$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z$1
	ret	0
__tryend$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN4@SetComplet
$LN9@SetComplet:
	mov	eax, DWORD PTR $T70136[ebp]
$LN4@SetComplet:
; Line 36
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetCompleted@COpenCallbackImp@@UAGJPB_K0@Z ENDP	; COpenCallbackImp::SetCompleted
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
PUBLIC	?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z ; COpenCallbackImp::GetProperty
EXTRN	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::CPropVariant::Detach
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__catchsym$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$3
__unwindtable$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv178 = -61						; size = 1
tv77 = -60						; size = 4
tv71 = -56						; size = 4
tv177 = -52						; size = 4
$T70150 = -48						; size = 4
$T70149 = -44						; size = 4
_prop$69406 = -36					; size = 16
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_propID$ = 12						; size = 4
_value$ = 16						; size = 4
?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z PROC ; COpenCallbackImp::GetProperty
; Line 39
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 40
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 41
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv177[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+84]
	test	ecx, ecx
	je	SHORT $LN14@GetPropert
; Line 43
	mov	edx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 4
	je	SHORT $LN11@GetPropert
	jmp	SHORT $LN12@GetPropert
$LN11@GetPropert:
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN12@GetPropert:
; Line 47
	jmp	$LN10@GetPropert
$LN14@GetPropert:
; Line 48
	mov	ecx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR tv77[ebp]
	sub	edx, 4
	mov	DWORD PTR tv77[ebp], edx
	cmp	DWORD PTR tv77[ebp], 8
	ja	$LN10@GetPropert
	mov	eax, DWORD PTR tv77[ebp]
	jmp	DWORD PTR $LN28@GetPropert[eax*4]
$LN7@GetPropert:
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetPropert
$LN6@GetPropert:
; Line 51
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	mov	BYTE PTR tv178[ebp], al
	movzx	edx, BYTE PTR tv178[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetPropert
$LN5@GetPropert:
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	push	edx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetPropert
$LN4@GetPropert:
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetPropert
$LN3@GetPropert:
; Line 54
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetPropert
$LN2@GetPropert:
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetPropert
$LN1@GetPropert:
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN10@GetPropert:
; Line 58
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 59
	mov	DWORD PTR $T70149[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$69406[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T70149[ebp]
	jmp	SHORT $LN16@GetPropert
__catch$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$0:
; Line 60
	mov	DWORD PTR $T70150[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN22@GetPropert
	ret	0
	mov	eax, __tryend$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN16@GetPropert
$LN22@GetPropert:
	mov	eax, DWORD PTR $T70150[ebp]
$LN16@GetPropert:
; Line 61
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@GetPropert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN27@GetPropert:
	DD	1
	DD	$LN26@GetPropert
$LN26@GetPropert:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN24@GetPropert
$LN24@GetPropert:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	3
$LN28@GetPropert:
	DD	$LN7@GetPropert
	DD	$LN10@GetPropert
	DD	$LN6@GetPropert
	DD	$LN5@GetPropert
	DD	$LN10@GetPropert
	DD	$LN4@GetPropert
	DD	$LN3@GetPropert
	DD	$LN2@GetPropert
	DD	$LN1@GetPropert
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$69406[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetProperty@COpenCallbackImp@@UAGJKPAUtagPROPVARIANT@@@Z ENDP ; COpenCallbackImp::GetProperty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
_TEXT	ENDS
PUBLIC	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NFind::CFileInfoBase::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z PROC ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ENDP ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
_TEXT	ENDS
PUBLIC	?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ ; CMyComPtr<IInStream>::Detach
PUBLIC	??4?$CMyComPtr@UIArchiveOpenCallback@@@@QAEPAUIArchiveOpenCallback@@PAU1@@Z ; CMyComPtr<IArchiveOpenCallback>::operator=
PUBLIC	?Add@?$CRecordVector@_N@@QAEI_N@Z		; CRecordVector<bool>::Add
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
PUBLIC	?Add@?$CRecordVector@_K@@QAEI_K@Z		; CRecordVector<unsigned __int64>::Add
PUBLIC	??1?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
PUBLIC	?Open@CInFileStream@@QAE_NPB_W@Z		; CInFileStream::Open
PUBLIC	??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z ; CMyComPtr<IInStream>::CMyComPtr<IInStream>
PUBLIC	??0CInFileStreamVol@@QAE@XZ			; CInFileStreamVol::CInFileStreamVol
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z ; COpenCallbackImp::GetStream
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	__imp__GetLastError@0:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NFind::CFileInfo::Find
EXTRN	?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z:PROC ; NWindows::NFile::NName::GetFullPath
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
xdata$x	SEGMENT
__catchsym$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$0
__tryblocktable$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z DD 00H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$6
__ehfuncinfo$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$5
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv235 = -156						; size = 4
tv234 = -152						; size = 4
tv233 = -148						; size = 4
tv232 = -141						; size = 1
tv154 = -140						; size = 4
tv153 = -136						; size = 4
tv231 = -132						; size = 4
tv229 = -128						; size = 4
tv228 = -122						; size = 1
tv227 = -121						; size = 1
tv226 = -120						; size = 4
tv225 = -113						; size = 1
tv224 = -112						; size = 4
tv223 = -108						; size = 4
tv222 = -104						; size = 4
$T70187 = -100						; size = 4
$T70186 = -96						; size = 4
$T70185 = -92						; size = 12
$T70184 = -80						; size = 4
$T70181 = -76						; size = 4
$T70180 = -72						; size = 4
$T70179 = -68						; size = 4
$T70178 = -64						; size = 4
$T70177 = -60						; size = 4
_inStreamTemp$69524 = -52				; size = 4
_inFile$69482 = -44					; size = 4
_fullPath$69472 = -36					; size = 12
___result__$69470 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_name$ = 12						; size = 4
_inStream$ = 16						; size = 4
?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z PROC ; COpenCallbackImp::GetStream
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\archiveopencallback.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 140				; 0000008cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-156]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 78
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 79
	mov	eax, DWORD PTR _inStream$[ebp]
	mov	DWORD PTR [eax], 0
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+84]
	test	edx, edx
	je	SHORT $LN7@GetStream
; Line 81
	mov	eax, 1
	jmp	$LN9@GetStream
$LN7@GetStream:
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN6@GetStream
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+140]
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+140]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv222[ebp], eax
	mov	ecx, DWORD PTR tv222[ebp]
	mov	DWORD PTR ___result__$69470[ebp], ecx
	cmp	DWORD PTR ___result__$69470[ebp], 0
	je	SHORT $LN6@GetStream
	mov	eax, DWORD PTR ___result__$69470[ebp]
	jmp	$LN9@GetStream
$LN6@GetStream:
; Line 86
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv223[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv224[ebp], eax
	lea	edx, DWORD PTR _fullPath$69472[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv224[ebp]
	push	ecx
	call	?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z ; NWindows::NFile::NName::GetFullPath
	mov	BYTE PTR tv225[ebp], al
	movzx	edx, BYTE PTR tv225[ebp]
	test	edx, edx
	jne	SHORT $LN4@GetStream
; Line 88
	mov	DWORD PTR $T70177[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T70177[ebp]
	jmp	$LN9@GetStream
$LN4@GetStream:
; Line 89
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv226[ebp], eax
	mov	eax, DWORD PTR tv226[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	mov	BYTE PTR tv227[ebp], al
	movzx	ecx, BYTE PTR tv227[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@GetStream
; Line 90
	mov	DWORD PTR $T70178[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T70178[ebp]
	jmp	$LN9@GetStream
$LN3@GetStream:
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	mov	BYTE PTR tv228[ebp], al
	movzx	edx, BYTE PTR tv228[ebp]
	test	edx, edx
	je	SHORT $LN2@GetStream
; Line 92
	mov	DWORD PTR $T70179[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T70179[ebp]
	jmp	$LN9@GetStream
$LN2@GetStream:
; Line 93
	push	104					; 00000068H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv229[ebp], eax
	mov	eax, DWORD PTR tv229[ebp]
	mov	DWORD PTR $T70181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	cmp	DWORD PTR $T70181[ebp], 0
	je	SHORT $LN11@GetStream
	mov	ecx, DWORD PTR $T70181[ebp]
	call	??0CInFileStreamVol@@QAE@XZ
	mov	DWORD PTR tv231[ebp], eax
	mov	ecx, DWORD PTR tv231[ebp]
	mov	DWORD PTR tv153[ebp], ecx
	jmp	SHORT $LN12@GetStream
$LN11@GetStream:
	mov	DWORD PTR tv153[ebp], 0
$LN12@GetStream:
	mov	edx, DWORD PTR tv153[ebp]
	mov	DWORD PTR $T70180[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	eax, DWORD PTR $T70180[ebp]
	mov	DWORD PTR _inFile$69482[ebp], eax
; Line 94
	mov	ecx, DWORD PTR _inFile$69482[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inStreamTemp$69524[ebp]
	call	??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z ; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 95
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv154[ebp], eax
	mov	edx, DWORD PTR tv154[ebp]
	push	edx
	mov	ecx, DWORD PTR _inFile$69482[ebp]
	call	?Open@CInFileStream@@QAE_NPB_W@Z	; CInFileStream::Open
	mov	BYTE PTR tv232[ebp], al
	movzx	eax, BYTE PTR tv232[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetStream
; Line 96
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T70184[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _inStreamTemp$69524[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T70184[ebp]
	jmp	$LN9@GetStream
$LN1@GetStream:
; Line 98
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR [ecx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?Add@?$CRecordVector@_K@@QAEI_K@Z	; CRecordVector<unsigned __int64>::Add
; Line 99
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T70185[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR tv233[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	edx, DWORD PTR $T70185[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR $T70185[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 100
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?Add@?$CRecordVector@_N@@QAEI_N@Z	; CRecordVector<bool>::Add
	mov	DWORD PTR tv234[ebp], eax
	mov	eax, DWORD PTR _inFile$69482[ebp]
	mov	ecx, DWORD PTR tv234[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 101
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	mov	eax, DWORD PTR _inFile$69482[ebp]
	mov	DWORD PTR [eax+92], edx
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _inFile$69482[ebp]
	add	ecx, 96					; 00000060H
	call	??4?$CMyComPtr@UIArchiveOpenCallback@@@@QAEPAUIArchiveOpenCallback@@PAU1@@Z ; CMyComPtr<IArchiveOpenCallback>::operator=
; Line 104
	lea	ecx, DWORD PTR _inStreamTemp$69524[ebp]
	call	?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ ; CMyComPtr<IInStream>::Detach
	mov	DWORD PTR tv235[ebp], eax
	mov	edx, DWORD PTR _inStream$[ebp]
	mov	eax, DWORD PTR tv235[ebp]
	mov	DWORD PTR [edx], eax
; Line 105
	mov	DWORD PTR $T70186[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _inStreamTemp$69524[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T70186[ebp]
	jmp	SHORT $LN9@GetStream
__catch$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$0:
; Line 106
	mov	DWORD PTR $T70187[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN20@GetStream
	ret	0
	mov	eax, __tryend$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$1
	ret	0
__tryend$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@GetStream
$LN20@GetStream:
	mov	eax, DWORD PTR $T70187[ebp]
$LN9@GetStream:
; Line 107
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@GetStream
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 156				; 0000009cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN26@GetStream:
	DD	2
	DD	$LN25@GetStream
$LN25@GetStream:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN22@GetStream
	DD	-52					; ffffffccH
	DD	4
	DD	$LN23@GetStream
$LN23@GetStream:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN22@GetStream:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$2:
	lea	ecx, DWORD PTR _fullPath$69472[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$3:
	mov	eax, DWORD PTR $T70181[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$4:
	lea	ecx, DWORD PTR _inStreamTemp$69524[ebp]
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z$5:
	lea	ecx, DWORD PTR $T70185[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStream@COpenCallbackImp@@UAGJPB_WPAPAUIInStream@@@Z ENDP ; COpenCallbackImp::GetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T70208 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T70208[ebp], ecx
	mov	edx, DWORD PTR $T70208[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
EXTRN	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NIO::CInFile::Open
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Open@CInFileStream@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
?Open@CInFileStream@@QAE_NPB_W@Z PROC			; CInFileStream::Open, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 69
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::Open
; Line 71
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Open@CInFileStream@@QAE_NPB_W@Z ENDP			; CInFileStream::Open
_TEXT	ENDS
PUBLIC	??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ	; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>
PUBLIC	??_7CInFileStreamVol@@6BIStreamGetProps2@@@	; CInFileStreamVol::`vftable'
PUBLIC	??_7CInFileStreamVol@@6BIStreamGetProps@@@	; CInFileStreamVol::`vftable'
PUBLIC	??_7CInFileStreamVol@@6BIStreamGetSize@@@	; CInFileStreamVol::`vftable'
PUBLIC	??_7CInFileStreamVol@@6BIInStream@@@		; CInFileStreamVol::`vftable'
PUBLIC	??_R4CInFileStreamVol@@6BIInStream@@@		; CInFileStreamVol::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUCInFileStreamVol@@@8			; CInFileStreamVol `RTTI Type Descriptor'
PUBLIC	??_R3CInFileStreamVol@@8			; CInFileStreamVol::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CInFileStreamVol@@8			; CInFileStreamVol::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CInFileStreamVol@@8		; CInFileStreamVol::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CInFileStream@@8			; CInFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCInFileStream@@@8			; CInFileStream `RTTI Type Descriptor'
PUBLIC	??_R3CInFileStream@@8				; CInFileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CInFileStream@@8				; CInFileStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IInStream@@8			; IInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIInStream@@@8				; IInStream `RTTI Type Descriptor'
PUBLIC	??_R3IInStream@@8				; IInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInStream@@8				; IInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IStreamGetSize@@8			; IStreamGetSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUIStreamGetSize@@@8			; IStreamGetSize `RTTI Type Descriptor'
PUBLIC	??_R3IStreamGetSize@@8				; IStreamGetSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IStreamGetSize@@8				; IStreamGetSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IStreamGetSize@@8			; IStreamGetSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@IStreamGetProps@@8			; IStreamGetProps::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUIStreamGetProps@@@8			; IStreamGetProps `RTTI Type Descriptor'
PUBLIC	??_R3IStreamGetProps@@8				; IStreamGetProps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IStreamGetProps@@8				; IStreamGetProps::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IStreamGetProps@@8		; IStreamGetProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@IStreamGetProps2@@8		; IStreamGetProps2::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUIStreamGetProps2@@@8			; IStreamGetProps2 `RTTI Type Descriptor'
PUBLIC	??_R3IStreamGetProps2@@8			; IStreamGetProps2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IStreamGetProps2@@8			; IStreamGetProps2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IStreamGetProps2@@8		; IStreamGetProps2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
PUBLIC	?AddRef@CInFileStream@@UAGKXZ			; CInFileStream::AddRef
PUBLIC	?Release@CInFileStream@@UAGKXZ			; CInFileStream::Release
PUBLIC	??_R4CInFileStreamVol@@6BIStreamGetSize@@@	; CInFileStreamVol::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CInFileStream::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CInFileStream@@W3AGKXZ			; [thunk]:CInFileStream::AddRef`adjustor{4}'
PUBLIC	?Release@CInFileStream@@W3AGKXZ			; [thunk]:CInFileStream::Release`adjustor{4}'
PUBLIC	??_R4CInFileStreamVol@@6BIStreamGetProps@@@	; CInFileStreamVol::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:CInFileStream::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CInFileStream@@W7AGKXZ			; [thunk]:CInFileStream::AddRef`adjustor{8}'
PUBLIC	?Release@CInFileStream@@W7AGKXZ			; [thunk]:CInFileStream::Release`adjustor{8}'
PUBLIC	??_R4CInFileStreamVol@@6BIStreamGetProps2@@@	; CInFileStreamVol::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CInFileStream::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CInFileStream@@WM@AGKXZ			; [thunk]:CInFileStream::AddRef`adjustor{12}'
PUBLIC	?Release@CInFileStream@@WM@AGKXZ		; [thunk]:CInFileStream::Release`adjustor{12}'
EXTRN	??1CInFileStream@@UAE@XZ:PROC			; CInFileStream::~CInFileStream
EXTRN	??0CInFileStream@@QAE@XZ:PROC			; CInFileStream::CInFileStream
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Read@CInFileStream@@UAGJPAXIPAI@Z:PROC		; CInFileStream::Read
EXTRN	?Seek@CInFileStream@@UAGJ_JIPA_K@Z:PROC		; CInFileStream::Seek
EXTRN	??_ECInFileStreamVol@@UAEPAXI@Z:PROC		; CInFileStreamVol::`vector deleting destructor'
EXTRN	?GetSize@CInFileStream@@UAGJPA_K@Z:PROC		; CInFileStream::GetSize
EXTRN	?GetProps@CInFileStream@@UAGJPA_KPAU_FILETIME@@11PAI@Z:PROC ; CInFileStream::GetProps
EXTRN	?GetProps2@CInFileStream@@UAGJPAUCStreamFileProps@@@Z:PROC ; CInFileStream::GetProps2
;	COMDAT ??_R4CInFileStreamVol@@6BIStreamGetProps2@@@
rdata$r	SEGMENT
??_R4CInFileStreamVol@@6BIStreamGetProps2@@@ DD 00H	; CInFileStreamVol::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AUCInFileStreamVol@@@8
	DD	FLAT:??_R3CInFileStreamVol@@8
rdata$r	ENDS
;	COMDAT ??_R4CInFileStreamVol@@6BIStreamGetProps@@@
rdata$r	SEGMENT
??_R4CInFileStreamVol@@6BIStreamGetProps@@@ DD 00H	; CInFileStreamVol::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AUCInFileStreamVol@@@8
	DD	FLAT:??_R3CInFileStreamVol@@8
rdata$r	ENDS
;	COMDAT ??_R4CInFileStreamVol@@6BIStreamGetSize@@@
rdata$r	SEGMENT
??_R4CInFileStreamVol@@6BIStreamGetSize@@@ DD 00H	; CInFileStreamVol::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AUCInFileStreamVol@@@8
	DD	FLAT:??_R3CInFileStreamVol@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IStreamGetProps2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IStreamGetProps2@@8 DD FLAT:??_R0?AUIStreamGetProps2@@@8 ; IStreamGetProps2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_R2IStreamGetProps2@@8
rdata$r	SEGMENT
??_R2IStreamGetProps2@@8 DD FLAT:??_R1A@?0A@EA@IStreamGetProps2@@8 ; IStreamGetProps2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IStreamGetProps2@@8
rdata$r	SEGMENT
??_R3IStreamGetProps2@@8 DD 00H				; IStreamGetProps2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIStreamGetProps2@@@8
_DATA	SEGMENT
??_R0?AUIStreamGetProps2@@@8 DD FLAT:??_7type_info@@6B@	; IStreamGetProps2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIStreamGetProps2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@IStreamGetProps2@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@IStreamGetProps2@@8 DD FLAT:??_R0?AUIStreamGetProps2@@@8 ; IStreamGetProps2::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IStreamGetProps@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IStreamGetProps@@8 DD FLAT:??_R0?AUIStreamGetProps@@@8 ; IStreamGetProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_R2IStreamGetProps@@8
rdata$r	SEGMENT
??_R2IStreamGetProps@@8 DD FLAT:??_R1A@?0A@EA@IStreamGetProps@@8 ; IStreamGetProps::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IStreamGetProps@@8
rdata$r	SEGMENT
??_R3IStreamGetProps@@8 DD 00H				; IStreamGetProps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIStreamGetProps@@@8
_DATA	SEGMENT
??_R0?AUIStreamGetProps@@@8 DD FLAT:??_7type_info@@6B@	; IStreamGetProps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIStreamGetProps@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@IStreamGetProps@@8
rdata$r	SEGMENT
??_R17?0A@EA@IStreamGetProps@@8 DD FLAT:??_R0?AUIStreamGetProps@@@8 ; IStreamGetProps::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IStreamGetSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IStreamGetSize@@8 DD FLAT:??_R0?AUIStreamGetSize@@@8 ; IStreamGetSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_R2IStreamGetSize@@8
rdata$r	SEGMENT
??_R2IStreamGetSize@@8 DD FLAT:??_R1A@?0A@EA@IStreamGetSize@@8 ; IStreamGetSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IStreamGetSize@@8
rdata$r	SEGMENT
??_R3IStreamGetSize@@8 DD 00H				; IStreamGetSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIStreamGetSize@@@8
_DATA	SEGMENT
??_R0?AUIStreamGetSize@@@8 DD FLAT:??_7type_info@@6B@	; IStreamGetSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIStreamGetSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@IStreamGetSize@@8
rdata$r	SEGMENT
??_R13?0A@EA@IStreamGetSize@@8 DD FLAT:??_R0?AUIStreamGetSize@@@8 ; IStreamGetSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2IInStream@@8
rdata$r	SEGMENT
??_R2IInStream@@8 DD FLAT:??_R1A@?0A@EA@IInStream@@8	; IInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IInStream@@8
rdata$r	SEGMENT
??_R3IInStream@@8 DD 00H				; IInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInStream@@@8
_DATA	SEGMENT
??_R0?AUIInStream@@@8 DD FLAT:??_7type_info@@6B@	; IInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInStream@@8 DD FLAT:??_R0?AUIInStream@@@8 ; IInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CInFileStream@@8
rdata$r	SEGMENT
??_R2CInFileStream@@8 DD FLAT:??_R1A@?0A@EA@CInFileStream@@8 ; CInFileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IInStream@@8
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IStreamGetSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@IStreamGetProps@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@IStreamGetProps2@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CInFileStream@@8
rdata$r	SEGMENT
??_R3CInFileStream@@8 DD 00H				; CInFileStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCInFileStream@@@8
_DATA	SEGMENT
??_R0?AVCInFileStream@@@8 DD FLAT:??_7type_info@@6B@	; CInFileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCInFileStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CInFileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CInFileStream@@8 DD FLAT:??_R0?AVCInFileStream@@@8 ; CInFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CInFileStreamVol@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CInFileStreamVol@@8 DD FLAT:??_R0?AUCInFileStreamVol@@@8 ; CInFileStreamVol::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CInFileStreamVol@@8
rdata$r	ENDS
;	COMDAT ??_R2CInFileStreamVol@@8
rdata$r	SEGMENT
??_R2CInFileStreamVol@@8 DD FLAT:??_R1A@?0A@EA@CInFileStreamVol@@8 ; CInFileStreamVol::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CInFileStream@@8
	DD	FLAT:??_R1A@?0A@EA@IInStream@@8
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IStreamGetSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@IStreamGetProps@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@IStreamGetProps2@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CInFileStreamVol@@8
rdata$r	SEGMENT
??_R3CInFileStreamVol@@8 DD 00H				; CInFileStreamVol::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2CInFileStreamVol@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCInFileStreamVol@@@8
_DATA	SEGMENT
??_R0?AUCInFileStreamVol@@@8 DD FLAT:??_7type_info@@6B@	; CInFileStreamVol `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInFileStreamVol@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CInFileStreamVol@@6BIInStream@@@
rdata$r	SEGMENT
??_R4CInFileStreamVol@@6BIInStream@@@ DD 00H		; CInFileStreamVol::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUCInFileStreamVol@@@8
	DD	FLAT:??_R3CInFileStreamVol@@8
rdata$r	ENDS
;	COMDAT ??_7CInFileStreamVol@@6BIStreamGetProps2@@@
CONST	SEGMENT
??_7CInFileStreamVol@@6BIStreamGetProps2@@@ DD FLAT:??_R4CInFileStreamVol@@6BIStreamGetProps2@@@ ; CInFileStreamVol::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@WM@AGKXZ
	DD	FLAT:?Release@CInFileStream@@WM@AGKXZ
	DD	FLAT:?GetProps2@CInFileStream@@UAGJPAUCStreamFileProps@@@Z
CONST	ENDS
;	COMDAT ??_7CInFileStreamVol@@6BIStreamGetProps@@@
CONST	SEGMENT
??_7CInFileStreamVol@@6BIStreamGetProps@@@ DD FLAT:??_R4CInFileStreamVol@@6BIStreamGetProps@@@ ; CInFileStreamVol::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@W7AGKXZ
	DD	FLAT:?Release@CInFileStream@@W7AGKXZ
	DD	FLAT:?GetProps@CInFileStream@@UAGJPA_KPAU_FILETIME@@11PAI@Z
CONST	ENDS
;	COMDAT ??_7CInFileStreamVol@@6BIStreamGetSize@@@
CONST	SEGMENT
??_7CInFileStreamVol@@6BIStreamGetSize@@@ DD FLAT:??_R4CInFileStreamVol@@6BIStreamGetSize@@@ ; CInFileStreamVol::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@W3AGKXZ
	DD	FLAT:?Release@CInFileStream@@W3AGKXZ
	DD	FLAT:?GetSize@CInFileStream@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CInFileStreamVol@@6BIInStream@@@
CONST	SEGMENT
??_7CInFileStreamVol@@6BIInStream@@@ DD FLAT:??_R4CInFileStreamVol@@6BIInStream@@@ ; CInFileStreamVol::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@UAGKXZ
	DD	FLAT:?Release@CInFileStream@@UAGKXZ
	DD	FLAT:?Read@CInFileStream@@UAGJPAXIPAI@Z
	DD	FLAT:?Seek@CInFileStream@@UAGJ_JIPA_K@Z
	DD	FLAT:??_ECInFileStreamVol@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CInFileStreamVol@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CInFileStreamVol@@QAE@XZ$0
__ehfuncinfo$??0CInFileStreamVol@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CInFileStreamVol@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CInFileStreamVol@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CInFileStreamVol@@QAE@XZ PROC			; CInFileStreamVol::CInFileStreamVol, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CInFileStreamVol@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInFileStream@@QAE@XZ		; CInFileStream::CInFileStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CInFileStreamVol@@6BIInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CInFileStreamVol@@6BIStreamGetSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CInFileStreamVol@@6BIStreamGetProps@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CInFileStreamVol@@6BIStreamGetProps2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CInFileStreamVol@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CInFileStream@@UAE@XZ		; CInFileStream::~CInFileStream
__ehhandler$??0CInFileStreamVol@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CInFileStreamVol@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CInFileStreamVol@@QAE@XZ ENDP			; CInFileStreamVol::CInFileStreamVol
PUBLIC	_==@8
EXTRN	_IID_IStreamGetProps2:BYTE
EXTRN	_IID_IStreamGetProps:BYTE
EXTRN	_IID_IStreamGetSize:BYTE
EXTRN	_IID_IInStream:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z PROC ; CInFileStream::QueryInterface, COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN10@QueryInter:
	push	OFFSET _IID_IInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN8@QueryInter:
; Line 79
	push	OFFSET _IID_IStreamGetSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN14@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter
$LN6@QueryInter:
; Line 81
	push	OFFSET _IID_IStreamGetProps
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN16@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter
$LN4@QueryInter:
; Line 82
	push	OFFSET _IID_IStreamGetProps2
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN18@QueryInter
$LN17@QueryInter:
	mov	DWORD PTR tv144[ebp], 0
$LN18@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter
$LN2@QueryInter:
; Line 84
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter
$LN9@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
	xor	eax, eax
$LN11@QueryInter:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; CInFileStream::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CInFileStream@@UAGKXZ PROC			; CInFileStream::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CInFileStream@@UAGKXZ ENDP			; CInFileStream::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T70240 = -8						; size = 4
$T70239 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CInFileStream@@UAGKXZ PROC			; CInFileStream::Release, COMDAT
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T70240[ebp], edx
	mov	eax, DWORD PTR $T70240[ebp]
	mov	DWORD PTR $T70239[ebp], eax
	cmp	DWORD PTR $T70239[ebp], 0
	je	SHORT $LN4@Release
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T70239[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T70239[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CInFileStream@@UAGKXZ ENDP			; CInFileStream::Release
_TEXT	ENDS
PUBLIC	??1CInFileStreamVol@@UAE@XZ			; CInFileStreamVol::~CInFileStreamVol
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCInFileStreamVol@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCInFileStreamVol@@UAEPAXI@Z PROC			; CInFileStreamVol::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CInFileStreamVol@@UAE@XZ		; CInFileStreamVol::~CInFileStreamVol
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCInFileStreamVol@@UAEPAXI@Z ENDP			; CInFileStreamVol::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ	; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
PUBLIC	??A?$CRecordVector@_N@@QAEAA_NI@Z		; CRecordVector<bool>::operator[]
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\archiveopencallback.cpp
xdata$x	SEGMENT
__unwindtable$??1CInFileStreamVol@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CInFileStreamVol@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CInFileStreamVol@@UAE@XZ$1
__ehfuncinfo$??1CInFileStreamVol@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CInFileStreamVol@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CInFileStreamVol@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CInFileStreamVol@@UAE@XZ PROC			; CInFileStreamVol::~CInFileStreamVol, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CInFileStreamVol@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CInFileStreamVol@@6BIInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CInFileStreamVol@@6BIStreamGetSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CInFileStreamVol@@6BIStreamGetProps@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CInFileStreamVol@@6BIStreamGetProps2@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
	test	eax, eax
	je	SHORT $LN2@CInFileStr@2
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	add	ecx, 116				; 00000074H
	call	??A?$CRecordVector@_N@@QAEAA_NI@Z	; CRecordVector<bool>::operator[]
	mov	BYTE PTR [eax], 0
$LN2@CInFileStr@2:
; Line 73
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CInFileStream@@UAE@XZ		; CInFileStream::~CInFileStream
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CInFileStreamVol@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CInFileStream@@UAE@XZ		; CInFileStream::~CInFileStream
__unwindfunclet$??1CInFileStreamVol@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	jmp	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
__ehhandler$??1CInFileStreamVol@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CInFileStreamVol@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CInFileStreamVol@@UAE@XZ ENDP			; CInFileStreamVol::~CInFileStreamVol
PUBLIC	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
PUBLIC	??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator->
PUBLIC	??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *
PUBLIC	??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>
PUBLIC	??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator&
PUBLIC	??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>
PUBLIC	?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z ; COpenCallbackImp::CryptoGetTextPassword
EXTRN	_IID_ICryptoGetTextPassword:BYTE
xdata$x	SEGMENT
__catchsym$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$0
__tryblocktable$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$3
__unwindtable$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv147 = -68						; size = 4
tv146 = -64						; size = 4
tv85 = -60						; size = 4
tv145 = -56						; size = 4
tv144 = -52						; size = 4
tv143 = -48						; size = 4
tv142 = -44						; size = 4
tv141 = -40						; size = 4
$T70258 = -36						; size = 4
$T70257 = -32						; size = 4
_getTextPassword$69577 = -24				; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_password$ = 12						; size = 4
?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z PROC ; COpenCallbackImp::CryptoGetTextPassword
; Line 111
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 52					; 00000034H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 112
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
	mov	DWORD PTR tv141[ebp], eax
	cmp	DWORD PTR tv141[ebp], 0
	je	$LN3@CryptoGetT
; Line 115
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	call	??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 116
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	call	??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator&
	mov	DWORD PTR tv143[ebp], eax
	mov	eax, DWORD PTR tv143[ebp]
	push	eax
	push	OFFSET _IID_ICryptoGetTextPassword
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>
; Line 117
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	call	??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *
	mov	DWORD PTR tv144[ebp], eax
	cmp	DWORD PTR tv144[ebp], 0
	je	SHORT $LN2@CryptoGetT
; Line 118
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	call	??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator->
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR _password$[ebp]
	push	edx
	mov	eax, DWORD PTR tv85[ebp]
	push	eax
	mov	ecx, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR tv146[ebp]
	mov	DWORD PTR $T70257[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	call	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
	mov	eax, DWORD PTR $T70257[ebp]
	jmp	SHORT $LN5@CryptoGetT
$LN2@CryptoGetT:
; Line 119
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	call	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
$LN3@CryptoGetT:
; Line 120
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+132], 0
	jne	SHORT $LN1@CryptoGetT
; Line 121
	mov	eax, -2147467263			; 80004001H
	jmp	SHORT $LN5@CryptoGetT
$LN1@CryptoGetT:
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+128], 1
; Line 123
	mov	esi, esp
	mov	ecx, DWORD PTR _password$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+132]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv147[ebp], eax
	mov	eax, DWORD PTR tv147[ebp]
	jmp	SHORT $LN5@CryptoGetT
__catch$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$0:
; Line 124
	mov	DWORD PTR $T70258[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN11@CryptoGetT
	ret	0
	mov	eax, __tryend$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$1
	ret	0
__tryend$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN5@CryptoGetT
$LN11@CryptoGetT:
	mov	eax, DWORD PTR $T70258[ebp]
$LN5@CryptoGetT:
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@CryptoGetT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN16@CryptoGetT:
	DD	1
	DD	$LN15@CryptoGetT
$LN15@CryptoGetT:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN13@CryptoGetT
$LN13@CryptoGetT:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z$2:
	lea	ecx, DWORD PTR _getTextPassword$69577[ebp]
	jmp	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
__ehhandler$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoGetTextPassword@COpenCallbackImp@@UAGJPAPA_W@Z ENDP ; COpenCallbackImp::CryptoGetTextPassword
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\common\myvector.h
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T70276 = -24						; size = 4
$T70275 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70276[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T70276[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T70276[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T70275[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T70275[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T70276[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
PUBLIC	?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ	; CRecordVector<bool>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@_N@@QAEI_N@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 1
?Add@?$CRecordVector@_N@@QAEI_N@Z PROC			; CRecordVector<bool>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ ; CRecordVector<bool>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _item$[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv71[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@_N@@QAEI_N@Z ENDP			; CRecordVector<bool>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@_N@@QAEAA_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@_N@@QAEAA_NI@Z PROC			; CRecordVector<bool>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _index$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@_N@@QAEAA_NI@Z ENDP			; CRecordVector<bool>::operator[]
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ	; CRecordVector<unsigned __int64>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@_K@@QAEI_K@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 8
?Add@?$CRecordVector@_K@@QAEI_K@Z PROC			; CRecordVector<unsigned __int64>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ ; CRecordVector<unsigned __int64>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*8], edx
	mov	edx, DWORD PTR _item$[ebp+4]
	mov	DWORD PTR [eax+ecx*8+4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Add@?$CRecordVector@_K@@QAEI_K@Z ENDP			; CRecordVector<unsigned __int64>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ PROC	; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ PROC	; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ PROC ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ENDP ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ PROC ; CMyComPtr<IArchiveOpenCallback>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ENDP ; CMyComPtr<IArchiveOpenCallback>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIArchiveOpenCallback@@@@QAEPAUIArchiveOpenCallback@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIArchiveOpenCallback@@@@QAEPAUIArchiveOpenCallback@@PAU1@@Z PROC ; CMyComPtr<IArchiveOpenCallback>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIArchiveOpenCallback@@@@QAEPAUIArchiveOpenCallback@@PAU1@@Z ENDP ; CMyComPtr<IArchiveOpenCallback>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z PROC	; CMyComPtr<IInStream>::CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z ENDP	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ PROC ; CMyComPtr<IInStream>::Detach, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx
; Line 47
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 48
	mov	eax, DWORD PTR _pt$[ebp]
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@XZ ENDP ; CMyComPtr<IInStream>::Detach
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ PROC	; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ PROC	; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ PROC ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ENDP ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ PROC ; CMyComPtr<ICryptoGetTextPassword>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ ENDP ; CMyComPtr<ICryptoGetTextPassword>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ PROC ; CMyComPtr<ICryptoGetTextPassword>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ENDP ; CMyComPtr<ICryptoGetTextPassword>::operator->
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ
_TEXT	SEGMENT
$T70323 = -20						; size = 4
$T70322 = -16						; size = 4
_p$69690 = -12						; size = 4
_newCapacity$69689 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ PROC	; CRecordVector<bool>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69689[ebp], ecx
; Line 23
	mov	edx, DWORD PTR _newCapacity$69689[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70322[ebp], eax
	mov	eax, DWORD PTR $T70322[ebp]
	mov	DWORD PTR _p$69690[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69690[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70323[ebp], edx
	mov	eax, DWORD PTR $T70323[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69690[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69689[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ ENDP	; CRecordVector<bool>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ
_TEXT	SEGMENT
$T70327 = -20						; size = 4
$T70326 = -16						; size = 4
_p$69701 = -12						; size = 4
_newCapacity$69700 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ PROC	; CRecordVector<unsigned __int64>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@2
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69700[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$69700[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70326[ebp], eax
	mov	eax, DWORD PTR $T70326[ebp]
	mov	DWORD PTR _p$69701[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@2
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69701[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@2:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70327[ebp], edx
	mov	eax, DWORD PTR $T70327[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69701[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69700[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@2:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@_K@@AAEXXZ ENDP	; CRecordVector<unsigned __int64>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T70331 = -20						; size = 4
$T70330 = -16						; size = 4
_p$69712 = -12						; size = 4
_newCapacity$69711 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@3
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69711[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$69711[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70330[ebp], eax
	mov	eax, DWORD PTR $T70330[ebp]
	mov	DWORD PTR _p$69712[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@3
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69712[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@3:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70331[ebp], edx
	mov	eax, DWORD PTR $T70331[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69712[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69711[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@3:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z PROC ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _pp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z ENDP ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CInFileStream@@WM@AGKXZ PROC			; [thunk]:CInFileStream::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CInFileStream@@UAGKXZ		; CInFileStream::AddRef
?AddRef@CInFileStream@@WM@AGKXZ ENDP			; [thunk]:CInFileStream::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CInFileStream::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CInFileStream::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CInFileStream::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CInFileStream::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CInFileStream::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CInFileStream::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@W3AGKXZ
_TEXT	SEGMENT
?Release@CInFileStream@@W3AGKXZ PROC			; [thunk]:CInFileStream::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CInFileStream@@UAGKXZ		; CInFileStream::Release
?Release@CInFileStream@@W3AGKXZ ENDP			; [thunk]:CInFileStream::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@W7AGKXZ
_TEXT	SEGMENT
?Release@CInFileStream@@W7AGKXZ PROC			; [thunk]:CInFileStream::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CInFileStream@@UAGKXZ		; CInFileStream::Release
?Release@CInFileStream@@W7AGKXZ ENDP			; [thunk]:CInFileStream::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CInFileStream@@W3AGKXZ PROC			; [thunk]:CInFileStream::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CInFileStream@@UAGKXZ		; CInFileStream::AddRef
?AddRef@CInFileStream@@W3AGKXZ ENDP			; [thunk]:CInFileStream::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CInFileStream@@WM@AGKXZ PROC			; [thunk]:CInFileStream::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CInFileStream@@UAGKXZ		; CInFileStream::Release
?Release@CInFileStream@@WM@AGKXZ ENDP			; [thunk]:CInFileStream::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CInFileStream@@W7AGKXZ PROC			; [thunk]:CInFileStream::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CInFileStream@@UAGKXZ		; CInFileStream::AddRef
?AddRef@CInFileStream@@W7AGKXZ ENDP			; [thunk]:CInFileStream::AddRef`adjustor{8}'
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\PropVariant.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kMemException DD FLAT:$SG67246
_DATA	ENDS
CONST	SEGMENT
$SG67246 DB	'out of memory', 00H
CONST	ENDS
PUBLIC	?PropVarEm_Alloc_Bstr@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@I@Z ; NWindows::NCOM::PropVarEm_Alloc_Bstr
EXTRN	__imp__SysAllocStringLen@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\propvariant.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_p$ = 8							; size = 4
_numChars$ = 12						; size = 4
?PropVarEm_Alloc_Bstr@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@I@Z PROC ; NWindows::NCOM::PropVarEm_Alloc_Bstr
; Line 13
	push	ebp
	mov	ebp, esp
	push	esi
; Line 14
	mov	esi, esp
	mov	eax, DWORD PTR _numChars$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 15
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN1@PropVarEm_
; Line 17
	mov	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 18
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], -2147024882		; 8007000eH
; Line 19
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN2@PropVarEm_
$LN1@PropVarEm_:
; Line 21
	mov	eax, 8
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 22
	xor	eax, eax
$LN2@PropVarEm_:
; Line 23
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?PropVarEm_Alloc_Bstr@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@I@Z ENDP ; NWindows::NCOM::PropVarEm_Alloc_Bstr
_TEXT	ENDS
PUBLIC	?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z ; NWindows::NCOM::PropVarEm_Set_Str
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67210 = -12						; size = 4
_dest$ = -8						; size = 4
_len$ = -4						; size = 4
_p$ = 8							; size = 4
_s$ = 12						; size = 4
?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z PROC ; NWindows::NCOM::PropVarEm_Set_Str
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 27
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 28
	mov	esi, esp
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 29
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN4@PropVarEm_@2
; Line 31
	mov	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _p$[ebp]
	mov	WORD PTR [edx], cx
; Line 32
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+8], -2147024882		; 8007000eH
; Line 33
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN5@PropVarEm_@2
$LN4@PropVarEm_@2:
; Line 35
	mov	ecx, 8
	mov	edx, DWORD PTR _p$[ebp]
	mov	WORD PTR [edx], cx
; Line 36
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _dest$[ebp], ecx
; Line 37
	mov	DWORD PTR _i$67210[ebp], 0
	jmp	SHORT $LN3@PropVarEm_@2
$LN2@PropVarEm_@2:
	mov	edx, DWORD PTR _i$67210[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67210[ebp], edx
$LN3@PropVarEm_@2:
	mov	eax, DWORD PTR _i$67210[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	ja	SHORT $LN1@PropVarEm_@2
; Line 38
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR _i$67210[ebp]
	movzx	dx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _i$67210[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	jmp	SHORT $LN2@PropVarEm_@2
$LN1@PropVarEm_@2:
; Line 39
	xor	eax, eax
$LN5@PropVarEm_@2:
; Line 40
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z ENDP ; NWindows::NCOM::PropVarEm_Set_Str
_TEXT	ENDS
PUBLIC	?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::InternalCopy
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@ABUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::CPropVariant
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@ABUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::CPropVariant::CPropVariant
; _this$ = ecx
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 45
	mov	edx, DWORD PTR _varSrc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::InternalCopy
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CPropVariant@NCOM@NWindows@@QAE@ABUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z	; NWindows::NCOM::CPropVariant::CPropVariant
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z PROC	; NWindows::NCOM::CPropVariant::CPropVariant
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 51
	mov	edx, DWORD PTR _varSrc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::InternalCopy
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CPropVariant@NCOM@NWindows@@QAE@ABV012@@Z ENDP	; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PA_W@Z	; NWindows::NCOM::CPropVariant::operator=
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@PA_W@Z	; NWindows::NCOM::CPropVariant::CPropVariant
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bstrSrc$ = 8						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@PA_W@Z PROC		; NWindows::NCOM::CPropVariant::CPropVariant
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 57
	mov	edx, DWORD PTR _bstrSrc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PA_W@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CPropVariant@NCOM@NWindows@@QAE@PA_W@Z ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z	; NWindows::NCOM::CPropVariant::operator=
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@PB_W@Z	; NWindows::NCOM::CPropVariant::CPropVariant
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpszSrc$ = 8						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@PB_W@Z PROC		; NWindows::NCOM::CPropVariant::CPropVariant
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 63
	mov	edx, DWORD PTR _lpszSrc$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CPropVariant@NCOM@NWindows@@QAE@PB_W@Z ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _varSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::InternalCopy
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
; Line 70
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABV012@@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_varSrc$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _varSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::InternalCopy
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
; Line 75
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_this$ = -4						; size = 4
_bstrSrc$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PA_W@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 78
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 79
	mov	eax, DWORD PTR _bstrSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
; Line 81
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PA_W@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	__TI2CPAD
PUBLIC	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
PUBLIC	__CTA2PAD
PUBLIC	__CT??_R0PAD@84
PUBLIC	??_R0PAD@8					; char * `RTTI Type Descriptor'
PUBLIC	__CT??_R0PAX@84
PUBLIC	??_R0PAX@8					; void * `RTTI Type Descriptor'
EXTRN	__imp__SysAllocString@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0PAX@8
_DATA	SEGMENT
??_R0PAX@8 DD	FLAT:??_7type_info@@6B@			; void * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAX', 00H
_DATA	ENDS
;	COMDAT __CT??_R0PAX@84
xdata$x	SEGMENT
__CT??_R0PAX@84 DD 01H
	DD	FLAT:??_R0PAX@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0PAD@8
_DATA	SEGMENT
??_R0PAD@8 DD	FLAT:??_7type_info@@6B@			; char * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAD', 00H
_DATA	ENDS
;	COMDAT __CT??_R0PAD@84
xdata$x	SEGMENT
__CT??_R0PAD@84 DD 01H
	DD	FLAT:??_R0PAD@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA2PAD
xdata$x	SEGMENT
__CTA2PAD DD	02H
	DD	FLAT:__CT??_R0PAD@84
	DD	FLAT:__CT??_R0PAX@84
xdata$x	ENDS
;	COMDAT __TI2CPAD
xdata$x	SEGMENT
__TI2CPAD DD	01H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2PAD
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67517 = -8						; size = 4
_this$ = -4						; size = 4
_lpszSrc$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
; Line 88
	mov	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 89
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 90
	mov	esi, esp
	mov	ecx, DWORD PTR _lpszSrc$[ebp]
	push	ecx
	call	DWORD PTR __imp__SysAllocString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN1@operator
	cmp	DWORD PTR _lpszSrc$[ebp], 0
	je	SHORT $LN1@operator
; Line 93
	mov	ecx, DWORD PTR _kMemException
	mov	DWORD PTR $T67517[ebp], ecx
	push	OFFSET __TI2CPAD
	lea	edx, DWORD PTR $T67517[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@operator:
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
$LN3@operator:
; Line 98
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T67520 = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z PROC ; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
; Line 103
	mov	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 104
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 105
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 106
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN1@operator@2
; Line 107
	mov	eax, DWORD PTR _kMemException
	mov	DWORD PTR $T67520[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T67520[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@operator@2:
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
$LN3@operator@2:
; Line 109
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ENDP ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
PUBLIC	?GetRawPtr@UString2@@QBEPB_WXZ			; UString2::GetRawPtr
PUBLIC	?Len@UString2@@QBEIXZ				; UString2::Len
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString2@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T67526 = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString2@@@Z PROC ; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.cpp
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
; Line 120
	mov	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 121
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 122
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString2@@QBEIXZ			; UString2::Len
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?GetRawPtr@UString2@@QBEPB_WXZ		; UString2::GetRawPtr
	push	eax
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 123
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN1@operator@3
; Line 124
	mov	eax, DWORD PTR _kMemException
	mov	DWORD PTR $T67526[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T67526[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@operator@3:
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
$LN3@operator@3:
; Line 140
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString2@@@Z ENDP ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString2@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString2@@QBEIXZ PROC				; UString2::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 677
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString2@@QBEIXZ ENDP				; UString2::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetRawPtr@UString2@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRawPtr@UString2@@QBEPB_WXZ PROC			; UString2::GetRawPtr, COMDAT
; _this$ = ecx
; Line 682
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRawPtr@UString2@@QBEPB_WXZ ENDP			; UString2::GetRawPtr
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T67532 = -20						; size = 4
_i$67283 = -16						; size = 4
_dest$67282 = -12					; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.cpp
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
; Line 145
	mov	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 146
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 147
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 148
	mov	esi, esp
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 149
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN5@operator@4
; Line 151
	mov	eax, DWORD PTR _kMemException
	mov	DWORD PTR $T67532[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T67532[ebp]
	push	ecx
	call	__CxxThrowException@8
; Line 155
	jmp	SHORT $LN4@operator@4
$LN5@operator@4:
; Line 157
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _dest$67282[ebp], eax
; Line 158
	mov	DWORD PTR _i$67283[ebp], 0
	jmp	SHORT $LN3@operator@4
$LN2@operator@4:
	mov	ecx, DWORD PTR _i$67283[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67283[ebp], ecx
$LN3@operator@4:
	mov	edx, DWORD PTR _i$67283[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	ja	SHORT $LN4@operator@4
; Line 159
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$67283[ebp]
	movzx	cx, BYTE PTR [eax]
	mov	edx, DWORD PTR _i$67283[ebp]
	mov	eax, DWORD PTR _dest$67282[ebp]
	mov	WORD PTR [eax+edx*2], cx
	jmp	SHORT $LN2@operator@4
$LN4@operator@4:
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
$LN7@operator@4:
; Line 162
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bSrc$ = 8						; size = 1
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 11					; 0000000bH
	je	SHORT $LN1@operator@5
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
; Line 169
	mov	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@5:
; Line 171
	movzx	ecx, BYTE PTR _bSrc$[ebp]
	neg	ecx
	sbb	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+8], cx
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
; Line 173
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	?AllocBstr@CPropVariant@NCOM@NWindows@@QAEPA_WI@Z ; NWindows::NCOM::CPropVariant::AllocBstr
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T67535 = -8						; size = 4
_this$ = -4						; size = 4
_numChars$ = 8						; size = 4
?AllocBstr@CPropVariant@NCOM@NWindows@@QAEPA_WI@Z PROC	; NWindows::NCOM::CPropVariant::AllocBstr
; _this$ = ecx
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@AllocBstr
; Line 178
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
$LN2@AllocBstr:
; Line 179
	mov	edx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
; Line 180
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+2], cx
; Line 181
	mov	esi, esp
	mov	eax, DWORD PTR _numChars$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__SysAllocStringLen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 182
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN1@AllocBstr
; Line 184
	mov	eax, DWORD PTR _kMemException
	mov	DWORD PTR $T67535[ebp], eax
	push	OFFSET __TI2CPAD
	lea	ecx, DWORD PTR $T67535[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@AllocBstr:
; Line 188
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
$LN4@AllocBstr:
; Line 189
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AllocBstr@CPropVariant@NCOM@NWindows@@QAEPA_WI@Z ENDP	; NWindows::NCOM::CPropVariant::AllocBstr
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@E@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 1
??4CPropVariant@NCOM@NWindows@@QAEAAV012@E@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 17					; 00000011H
	je	SHORT $LN1@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
	mov	edx, 17					; 00000011H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@6:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [ecx+8], dl
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@E@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@H@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@H@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 3
	je	SHORT $LN1@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
	mov	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@7:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@H@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 199
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN1@operator@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
	mov	edx, 19					; 00000013H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@8:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 8
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 200
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 21					; 00000015H
	je	SHORT $LN1@operator@9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
	mov	edx, 21					; 00000015H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@9:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _value$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_J@Z	; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 8
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_J@Z PROC	; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 20					; 00000014H
	je	SHORT $LN1@operator@10
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
	mov	edx, 20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@10:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _value$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??4CPropVariant@NCOM@NWindows@@QAEAAV012@_J@Z ENDP	; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z PROC ; NWindows::NCOM::CPropVariant::operator=
; _this$ = ecx
; Line 202
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 64					; 00000040H
	je	SHORT $LN1@operator@11
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::InternalClear
	mov	edx, 64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
$LN1@operator@11:
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ENDP ; NWindows::NCOM::CPropVariant::operator=
_TEXT	ENDS
PUBLIC	?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::PropVariant_Clear
EXTRN	__imp__VariantClear@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -4						; size = 4
_prop$ = 8						; size = 4
?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::PropVariant_Clear
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 206
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 64			; 00000040H
	ja	SHORT $LN2@PropVarian
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN6@PropVarian[edx]
	jmp	DWORD PTR $LN7@PropVarian[eax*4]
$LN1@PropVarian:
; Line 225
	xor	ecx, ecx
	mov	edx, DWORD PTR _prop$[ebp]
	mov	WORD PTR [edx], cx
; Line 226
	xor	eax, eax
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 227
	xor	edx, edx
	mov	eax, DWORD PTR _prop$[ebp]
	mov	WORD PTR [eax+4], dx
; Line 228
	xor	ecx, ecx
	mov	edx, DWORD PTR _prop$[ebp]
	mov	WORD PTR [edx+6], cx
; Line 229
	mov	eax, DWORD PTR _prop$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
; Line 230
	xor	eax, eax
	jmp	SHORT $LN4@PropVarian
$LN2@PropVarian:
; Line 232
	mov	esi, esp
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	call	DWORD PTR __imp__VariantClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@PropVarian:
; Line 235
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@PropVarian:
	DD	$LN1@PropVarian
	DD	$LN2@PropVarian
$LN6@PropVarian:
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::PropVariant_Clear
_TEXT	ENDS
PUBLIC	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ PROC		; NWindows::NCOM::CPropVariant::Clear
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@Clear
; Line 240
	xor	eax, eax
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 241
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::PropVariant_Clear
$LN2@Clear:
; Line 242
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ENDP		; NWindows::NCOM::CPropVariant::Clear
_TEXT	ENDS
PUBLIC	?Copy@CPropVariant@NCOM@NWindows@@QAEJPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Copy
EXTRN	__imp__VariantCopy@8:PROC
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?Copy@CPropVariant@NCOM@NWindows@@QAEJPBUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::CPropVariant::Copy
; _this$ = ecx
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__VariantClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 247
	mov	ecx, DWORD PTR _pSrc$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR tv66[ebp], edx
	mov	eax, DWORD PTR tv66[ebp]
	sub	eax, 2
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 62			; 0000003eH
	ja	SHORT $LN2@Copy
	mov	ecx, DWORD PTR tv66[ebp]
	movzx	edx, BYTE PTR $LN6@Copy[ecx]
	jmp	DWORD PTR $LN7@Copy[edx*4]
$LN1@Copy:
; Line 265
	mov	esi, esp
	push	16					; 00000010H
	mov	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	xor	eax, eax
	jmp	SHORT $LN4@Copy
$LN2@Copy:
; Line 268
	mov	esi, esp
	mov	edx, DWORD PTR _pSrc$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__VariantCopy@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Copy:
; Line 269
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@Copy:
	DD	$LN1@Copy
	DD	$LN2@Copy
$LN6@Copy:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	0
	DB	0
	DB	1
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?Copy@CPropVariant@NCOM@NWindows@@QAEJPBUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::CPropVariant::Copy
_TEXT	ENDS
PUBLIC	?Attach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Attach
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?Attach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::CPropVariant::Attach
; _this$ = ecx
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 274
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	mov	DWORD PTR _hr$[ebp], eax
; Line 275
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Attach
; Line 276
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@Attach
$LN1@Attach:
; Line 277
	push	16					; 00000010H
	mov	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 278
	xor	edx, edx
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	WORD PTR [eax], dx
; Line 279
	xor	eax, eax
$LN2@Attach:
; Line 280
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::CPropVariant::Attach
_TEXT	ENDS
PUBLIC	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_hr$67377 = -8						; size = 4
_this$ = -4						; size = 4
_pDest$ = 8						; size = 4
?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::CPropVariant::Detach
; _this$ = ecx
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 284
	mov	eax, DWORD PTR _pDest$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@Detach
; Line 286
	mov	edx, DWORD PTR _pDest$[ebp]
	push	edx
	call	?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::PropVariant_Clear
	mov	DWORD PTR _hr$67377[ebp], eax
; Line 287
	cmp	DWORD PTR _hr$67377[ebp], 0
	jge	SHORT $LN2@Detach
; Line 288
	mov	eax, DWORD PTR _hr$67377[ebp]
	jmp	SHORT $LN3@Detach
$LN2@Detach:
; Line 290
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 291
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
; Line 292
	xor	eax, eax
$LN3@Detach:
; Line 293
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::CPropVariant::Detach
; Function compile flags: /Odtp /RTCsu
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ PROC	; NWindows::NCOM::CPropVariant::InternalClear
; _this$ = ecx
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@InternalCl
; Line 298
	xor	eax, eax
	jmp	SHORT $LN3@InternalCl
$LN2@InternalCl:
; Line 299
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	mov	DWORD PTR _hr$[ebp], eax
; Line 300
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@InternalCl
; Line 302
	mov	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax], dx
; Line 303
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN1@InternalCl:
; Line 305
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@InternalCl:
; Line 306
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InternalClear@CPropVariant@NCOM@NWindows@@QAEJXZ ENDP	; NWindows::NCOM::CPropVariant::InternalClear
; Function compile flags: /Odtp /RTCsu
$T67553 = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pSrc$ = 8						; size = 4
?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z PROC ; NWindows::NCOM::CPropVariant::InternalCopy
; _this$ = ecx
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Copy@CPropVariant@NCOM@NWindows@@QAEJPBUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Copy
	mov	DWORD PTR _hr$[ebp], eax
; Line 311
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@InternalCo
; Line 313
	cmp	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
	jne	SHORT $LN1@InternalCo
; Line 314
	mov	ecx, DWORD PTR _kMemException
	mov	DWORD PTR $T67553[ebp], ecx
	push	OFFSET __TI2CPAD
	lea	edx, DWORD PTR $T67553[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@InternalCo:
; Line 315
	mov	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 316
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN4@InternalCo:
; Line 318
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?InternalCopy@CPropVariant@NCOM@NWindows@@QAEXPBUtagPROPVARIANT@@@Z ENDP ; NWindows::NCOM::CPropVariant::InternalCopy
_TEXT	ENDS
PUBLIC	??$MyCompare@_K@@YGH_K0@Z			; MyCompare<unsigned __int64>
PUBLIC	??$MyCompare@_J@@YGH_J0@Z			; MyCompare<__int64>
PUBLIC	??$MyCompare@K@@YGHKK@Z				; MyCompare<unsigned long>
PUBLIC	??$MyCompare@J@@YGHJJ@Z				; MyCompare<long>
PUBLIC	??$MyCompare@F@@YGHFF@Z				; MyCompare<short>
PUBLIC	??$MyCompare@E@@YGHEE@Z				; MyCompare<unsigned char>
PUBLIC	??$MyCompare@G@@YGHGG@Z				; MyCompare<unsigned short>
PUBLIC	?Compare@CPropVariant@NCOM@NWindows@@QAEHABV123@@Z ; NWindows::NCOM::CPropVariant::Compare
EXTRN	__imp__CompareFileTime@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv128 = -8						; size = 4
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?Compare@CPropVariant@NCOM@NWindows@@QAEHABV123@@Z PROC	; NWindows::NCOM::CPropVariant::Compare
; _this$ = ecx
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _a$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	je	SHORT $LN15@Compare
; Line 323
	mov	ecx, DWORD PTR _a$[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	??$MyCompare@G@@YGHGG@Z			; MyCompare<unsigned short>
	jmp	$LN16@Compare
$LN15@Compare:
; Line 324
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR tv128[ebp], eax
	cmp	DWORD PTR tv128[ebp], 64		; 00000040H
	ja	$LN1@Compare
	mov	ecx, DWORD PTR tv128[ebp]
	movzx	edx, BYTE PTR $LN18@Compare[ecx]
	jmp	DWORD PTR $LN19@Compare[edx*4]
$LN12@Compare:
; Line 326
	xor	eax, eax
	jmp	$LN16@Compare
$LN11@Compare:
; Line 328
	mov	eax, DWORD PTR _a$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	push	eax
	call	??$MyCompare@E@@YGHEE@Z			; MyCompare<unsigned char>
	jmp	$LN16@Compare
$LN10@Compare:
; Line 329
	mov	ecx, DWORD PTR _a$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	push	ecx
	call	??$MyCompare@F@@YGHFF@Z			; MyCompare<short>
	jmp	$LN16@Compare
$LN9@Compare:
; Line 330
	mov	edx, DWORD PTR _a$[ebp]
	movzx	eax, WORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	push	edx
	call	??$MyCompare@G@@YGHGG@Z			; MyCompare<unsigned short>
	jmp	$LN16@Compare
$LN8@Compare:
; Line 331
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	??$MyCompare@J@@YGHJJ@Z			; MyCompare<long>
	jmp	$LN16@Compare
$LN7@Compare:
; Line 332
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$MyCompare@K@@YGHKK@Z			; MyCompare<unsigned long>
	jmp	SHORT $LN16@Compare
$LN6@Compare:
; Line 334
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	call	??$MyCompare@_J@@YGH_J0@Z		; MyCompare<__int64>
	jmp	SHORT $LN16@Compare
$LN5@Compare:
; Line 335
	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	call	??$MyCompare@_K@@YGH_K0@Z		; MyCompare<unsigned __int64>
	jmp	SHORT $LN16@Compare
$LN4@Compare:
; Line 336
	mov	edx, DWORD PTR _a$[ebp]
	movzx	eax, WORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	push	edx
	call	??$MyCompare@F@@YGHFF@Z			; MyCompare<short>
	neg	eax
	jmp	SHORT $LN16@Compare
$LN3@Compare:
; Line 337
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	DWORD PTR __imp__CompareFileTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN16@Compare
$LN2@Compare:
; Line 338
	xor	eax, eax
	jmp	SHORT $LN16@Compare
$LN1@Compare:
; Line 339
	xor	eax, eax
$LN16@Compare:
; Line 341
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN19@Compare:
	DD	$LN12@Compare
	DD	$LN10@Compare
	DD	$LN8@Compare
	DD	$LN2@Compare
	DD	$LN4@Compare
	DD	$LN11@Compare
	DD	$LN9@Compare
	DD	$LN7@Compare
	DD	$LN6@Compare
	DD	$LN5@Compare
	DD	$LN3@Compare
	DD	$LN1@Compare
$LN18@Compare:
	DB	0
	DB	11					; 0000000bH
	DB	1
	DB	2
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	3
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	4
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	10					; 0000000aH
?Compare@CPropVariant@NCOM@NWindows@@QAEHABV123@@Z ENDP	; NWindows::NCOM::CPropVariant::Compare
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@G@@YGHGG@Z
_TEXT	SEGMENT
tv71 = -4						; size = 4
_a$ = 8							; size = 2
_b$ = 12						; size = 2
??$MyCompare@G@@YGHGG@Z PROC				; MyCompare<unsigned short>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, WORD PTR _a$[ebp]
	movzx	ecx, WORD PTR _b$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN3@MyCompare
	mov	DWORD PTR tv71[ebp], -1
	jmp	SHORT $LN4@MyCompare
$LN3@MyCompare:
	movzx	edx, WORD PTR _a$[ebp]
	movzx	eax, WORD PTR _b$[ebp]
	xor	ecx, ecx
	cmp	edx, eax
	setne	cl
	mov	DWORD PTR tv71[ebp], ecx
$LN4@MyCompare:
	mov	eax, DWORD PTR tv71[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@G@@YGHGG@Z ENDP				; MyCompare<unsigned short>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@E@@YGHEE@Z
_TEXT	SEGMENT
tv71 = -4						; size = 4
_a$ = 8							; size = 1
_b$ = 12						; size = 1
??$MyCompare@E@@YGHEE@Z PROC				; MyCompare<unsigned char>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, BYTE PTR _a$[ebp]
	movzx	ecx, BYTE PTR _b$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN3@MyCompare@2
	mov	DWORD PTR tv71[ebp], -1
	jmp	SHORT $LN4@MyCompare@2
$LN3@MyCompare@2:
	movzx	edx, BYTE PTR _a$[ebp]
	movzx	eax, BYTE PTR _b$[ebp]
	xor	ecx, ecx
	cmp	edx, eax
	setne	cl
	mov	DWORD PTR tv71[ebp], ecx
$LN4@MyCompare@2:
	mov	eax, DWORD PTR tv71[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@E@@YGHEE@Z ENDP				; MyCompare<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@F@@YGHFF@Z
_TEXT	SEGMENT
tv71 = -4						; size = 4
_a$ = 8							; size = 2
_b$ = 12						; size = 2
??$MyCompare@F@@YGHFF@Z PROC				; MyCompare<short>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movsx	eax, WORD PTR _a$[ebp]
	movsx	ecx, WORD PTR _b$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN3@MyCompare@3
	mov	DWORD PTR tv71[ebp], -1
	jmp	SHORT $LN4@MyCompare@3
$LN3@MyCompare@3:
	movsx	edx, WORD PTR _a$[ebp]
	movsx	eax, WORD PTR _b$[ebp]
	xor	ecx, ecx
	cmp	edx, eax
	setne	cl
	mov	DWORD PTR tv71[ebp], ecx
$LN4@MyCompare@3:
	mov	eax, DWORD PTR tv71[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@F@@YGHFF@Z ENDP				; MyCompare<short>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@J@@YGHJJ@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyCompare@J@@YGHJJ@Z PROC				; MyCompare<long>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN3@MyCompare@4
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN4@MyCompare@4
$LN3@MyCompare@4:
	mov	ecx, DWORD PTR _a$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR _b$[ebp]
	setne	dl
	mov	DWORD PTR tv67[ebp], edx
$LN4@MyCompare@4:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@J@@YGHJJ@Z ENDP				; MyCompare<long>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@K@@YGHKK@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyCompare@K@@YGHKK@Z PROC				; MyCompare<unsigned long>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyCompare@5
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN4@MyCompare@5
$LN3@MyCompare@5:
	mov	ecx, DWORD PTR _a$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR _b$[ebp]
	setne	dl
	mov	DWORD PTR tv67[ebp], edx
$LN4@MyCompare@5:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@K@@YGHKK@Z ENDP				; MyCompare<unsigned long>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@_J@@YGH_J0@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
tv67 = -4						; size = 4
_a$ = 8							; size = 8
_b$ = 16						; size = 8
??$MyCompare@_J@@YGH_J0@Z PROC				; MyCompare<__int64>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	jg	SHORT $LN5@MyCompare@6
	jl	SHORT $LN7@MyCompare@6
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	ecx, DWORD PTR _b$[ebp]
	jae	SHORT $LN5@MyCompare@6
$LN7@MyCompare@6:
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN6@MyCompare@6
$LN5@MyCompare@6:
	mov	edx, DWORD PTR _a$[ebp]
	cmp	edx, DWORD PTR _b$[ebp]
	jne	SHORT $LN3@MyCompare@6
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	jne	SHORT $LN3@MyCompare@6
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@MyCompare@6
$LN3@MyCompare@6:
	mov	DWORD PTR tv66[ebp], 1
$LN4@MyCompare@6:
	mov	ecx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv67[ebp], ecx
$LN6@MyCompare@6:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$MyCompare@_J@@YGH_J0@Z ENDP				; MyCompare<__int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@_K@@YGH_K0@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
tv67 = -4						; size = 4
_a$ = 8							; size = 8
_b$ = 16						; size = 8
??$MyCompare@_K@@YGH_K0@Z PROC				; MyCompare<unsigned __int64>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	ja	SHORT $LN5@MyCompare@7
	jb	SHORT $LN7@MyCompare@7
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	ecx, DWORD PTR _b$[ebp]
	jae	SHORT $LN5@MyCompare@7
$LN7@MyCompare@7:
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN6@MyCompare@7
$LN5@MyCompare@7:
	mov	edx, DWORD PTR _a$[ebp]
	cmp	edx, DWORD PTR _b$[ebp]
	jne	SHORT $LN3@MyCompare@7
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	jne	SHORT $LN3@MyCompare@7
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@MyCompare@7
$LN3@MyCompare@7:
	mov	DWORD PTR tv66[ebp], 1
$LN4@MyCompare@7:
	mov	ecx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv67[ebp], ecx
$LN6@MyCompare@7:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$MyCompare@_K@@YGH_K0@Z ENDP				; MyCompare<unsigned __int64>
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Common\StdOutStream.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kFileOpenMode DD FLAT:$SG69876
_DATA	ENDS
CONST	SEGMENT
$SG69876 DB	'wt', 00H
CONST	ENDS
PUBLIC	?Close@CStdOutStream@@QAE_NXZ			; CStdOutStream::Close
PUBLIC	?Open@CStdOutStream@@QAE_NPBD@Z			; CStdOutStream::Open
EXTRN	__imp__fopen:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
?Open@CStdOutStream@@QAE_NPBD@Z PROC			; CStdOutStream::Open
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CStdOutStream@@QAE_NXZ		; CStdOutStream::Close
; Line 24
	mov	esi, esp
	mov	eax, DWORD PTR _kFileOpenMode
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], cl
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 27
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Open@CStdOutStream@@QAE_NPBD@Z ENDP			; CStdOutStream::Open
_TEXT	ENDS
EXTRN	__imp__fclose:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CStdOutStream@@QAE_NXZ PROC			; CStdOutStream::Close
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN2@Close
; Line 32
	mov	al, 1
	jmp	SHORT $LN3@Close
$LN2@Close:
; Line 33
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@Close
; Line 34
	xor	al, al
	jmp	SHORT $LN3@Close
$LN1@Close:
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 36
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 0
; Line 37
	mov	al, 1
$LN3@Close:
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CStdOutStream@@QAE_NXZ ENDP			; CStdOutStream::Close
_TEXT	ENDS
PUBLIC	?Flush@CStdOutStream@@QAE_NXZ			; CStdOutStream::Flush
EXTRN	__imp__fflush:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@CStdOutStream@@QAE_NXZ PROC			; CStdOutStream::Flush
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 43
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@CStdOutStream@@QAE_NXZ ENDP			; CStdOutStream::Flush
_TEXT	ENDS
PUBLIC	??6CStdOutStream@@QAEAAV0@D@Z			; CStdOutStream::operator<<
PUBLIC	?endl@@YGAAVCStdOutStream@@AAV1@@Z		; endl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_outStream$ = 8						; size = 4
?endl@@YGAAVCStdOutStream@@AAV1@@Z PROC			; endl
; Line 46
	push	ebp
	mov	ebp, esp
; Line 47
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	??6CStdOutStream@@QAEAAV0@D@Z		; CStdOutStream::operator<<
; Line 48
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?endl@@YGAAVCStdOutStream@@AAV1@@Z ENDP			; endl
_TEXT	ENDS
EXTRN	__imp__fputc:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@D@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??6CStdOutStream@@QAEAAV0@D@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	movzx	edx, BYTE PTR _c$[ebp]
	push	edx
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
; Line 44
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@D@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??6CStdOutStream@@QAEAAV0@PB_W@Z		; CStdOutStream::operator<<
EXTRN	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z:PROC ; UnicodeStringToMultiByte2
EXTRN	?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z:PROC ; ConvertUnicodeToUTF8
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
EXTRN	?g_CodePage@@3HA:DWORD				; g_CodePage
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$??6CStdOutStream@@QAEAAV0@PB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$2
__ehfuncinfo$??6CStdOutStream@@QAEAAV0@PB_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??6CStdOutStream@@QAEAAV0@PB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T70121 = -68						; size = 4
$T70120 = -64						; size = 12
$T70119 = -52						; size = 12
_dest$ = -36						; size = 12
_codePage$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PB_W@Z PROC			; CStdOutStream::operator<<
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.cpp
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??6CStdOutStream@@QAEAAV0@PB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR ?g_CodePage@@3HA		; g_CodePage
	mov	DWORD PTR _codePage$[ebp], eax
; Line 53
	cmp	DWORD PTR _codePage$[ebp], -1
	jne	SHORT $LN3@operator
; Line 54
	mov	DWORD PTR _codePage$[ebp], 1
$LN3@operator:
; Line 55
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 56
	cmp	DWORD PTR _codePage$[ebp], 65001	; 0000fde9H
	jne	SHORT $LN2@operator
; Line 57
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T70119[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	eax, DWORD PTR $T70119[ebp]
	push	eax
	call	?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z ; ConvertUnicodeToUTF8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T70119[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 58
	jmp	SHORT $LN1@operator
$LN2@operator:
; Line 59
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T70120[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _codePage$[ebp]
	push	edx
	lea	eax, DWORD PTR $T70120[ebp]
	push	eax
	lea	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z ; UnicodeStringToMultiByte2
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T70120[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN1@operator:
; Line 60
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	DWORD PTR $T70121[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T70121[ebp]
; Line 61
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@operator:
	DD	1
	DD	$LN11@operator
$LN11@operator:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN9@operator
$LN9@operator:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$0:
	lea	ecx, DWORD PTR _dest$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$1:
	lea	ecx, DWORD PTR $T70119[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??6CStdOutStream@@QAEAAV0@PB_W@Z$2:
	lea	ecx, DWORD PTR $T70120[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??6CStdOutStream@@QAEAAV0@PB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??6CStdOutStream@@QAEAAV0@PB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??6CStdOutStream@@QAEAAV0@PB_W@Z ENDP			; CStdOutStream::operator<<
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T70139 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T70139[ebp], ecx
	mov	edx, DWORD PTR $T70139[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T70144 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T70144[ebp], ecx
	mov	edx, DWORD PTR $T70144[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z ; StdOut_Convert_UString_to_AString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_codePage$ = -4						; size = 4
_s$ = 8							; size = 4
_temp$ = 12						; size = 4
?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z PROC ; StdOut_Convert_UString_to_AString
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 65
	mov	eax, DWORD PTR ?g_CodePage@@3HA		; g_CodePage
	mov	DWORD PTR _codePage$[ebp], eax
; Line 66
	cmp	DWORD PTR _codePage$[ebp], -1
	jne	SHORT $LN3@StdOut_Con
; Line 67
	mov	DWORD PTR _codePage$[ebp], 1
$LN3@StdOut_Con:
; Line 68
	cmp	DWORD PTR _codePage$[ebp], 65001	; 0000fde9H
	jne	SHORT $LN2@StdOut_Con
; Line 69
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z ; ConvertUnicodeToUTF8
; Line 70
	jmp	SHORT $LN4@StdOut_Con
$LN2@StdOut_Con:
; Line 71
	mov	eax, DWORD PTR _codePage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	call	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z ; UnicodeStringToMultiByte2
$LN4@StdOut_Con:
; Line 72
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z ENDP ; StdOut_Convert_UString_to_AString
_TEXT	ENDS
PUBLIC	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
_temp$ = 12						; size = 4
?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z PROC ; CStdOutStream::PrintUString
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z ; StdOut_Convert_UString_to_AString
; Line 77
	mov	ecx, DWORD PTR _temp$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 78
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ENDP ; CStdOutStream::PrintUString
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??6CStdOutStream@@QAEAAV0@H@Z			; CStdOutStream::operator<<
EXTRN	?ConvertInt64ToString@@YGX_JPAD@Z:PROC		; ConvertInt64ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -44						; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@H@Z PROC			; CStdOutStream::operator<<
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	eax, DWORD PTR _number$[ebp]
	cdq
	push	edx
	push	eax
	call	?ConvertInt64ToString@@YGX_JPAD@Z	; ConvertInt64ToString
; Line 84
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 85
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@operator@2:
	DD	1
	DD	$LN4@operator@2
$LN4@operator@2:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN3@operator@2
$LN3@operator@2:
	DB	115					; 00000073H
	DB	0
??6CStdOutStream@@QAEAAV0@H@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??6CStdOutStream@@QAEAAV0@_J@Z			; CStdOutStream::operator<<
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -44						; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 8
??6CStdOutStream@@QAEAAV0@_J@Z PROC			; CStdOutStream::operator<<
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	call	?ConvertInt64ToString@@YGX_JPAD@Z	; ConvertInt64ToString
; Line 91
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 92
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN5@operator@3:
	DD	1
	DD	$LN4@operator@3
$LN4@operator@3:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN3@operator@3
$LN3@operator@3:
	DB	115					; 00000073H
	DB	0
??6CStdOutStream@@QAEAAV0@_J@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??6CStdOutStream@@QAEAAV0@I@Z			; CStdOutStream::operator<<
EXTRN	?ConvertUInt32ToString@@YGXIPAD@Z:PROC		; ConvertUInt32ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@I@Z PROC			; CStdOutStream::operator<<
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 98
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 99
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@operator@4:
	DD	1
	DD	$LN4@operator@4
$LN4@operator@4:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN3@operator@4
$LN3@operator@4:
	DB	115					; 00000073H
	DB	0
??6CStdOutStream@@QAEAAV0@I@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??6CStdOutStream@@QAEAAV0@_K@Z			; CStdOutStream::operator<<
EXTRN	?ConvertUInt64ToString@@YGX_KPAD@Z:PROC		; ConvertUInt64ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -44						; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 8
??6CStdOutStream@@QAEAAV0@_K@Z PROC			; CStdOutStream::operator<<
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _number$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _number$[ebp]
	push	edx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 105
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 106
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN5@operator@5:
	DD	1
	DD	$LN4@operator@5
$LN4@operator@5:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN3@operator@5
$LN3@operator@5:
	DB	115					; 00000073H
	DB	0
??6CStdOutStream@@QAEAAV0@_K@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	??0CStdOutStream@@QAE@PAU_iobuf@@@Z		; CStdOutStream::CStdOutStream
EXTRN	_atexit:PROC
EXTRN	__imp____iob_func:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_StdOut@@YAXXZ
text$yc	SEGMENT
??__Eg_StdOut@@YAXXZ PROC				; `dynamic initializer for 'g_StdOut'', COMDAT
; Line 18
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??0CStdOutStream@@QAE@PAU_iobuf@@@Z	; CStdOutStream::CStdOutStream
	push	OFFSET ??__Fg_StdOut@@YAXXZ		; `dynamic atexit destructor for 'g_StdOut''
	call	_atexit
	add	esp, 4
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_StdOut@@YAXXZ ENDP				; `dynamic initializer for 'g_StdOut''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??0CStdOutStream@@QAE@PAU_iobuf@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
??0CStdOutStream@@QAE@PAU_iobuf@@@Z PROC		; CStdOutStream::CStdOutStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CStdOutStream@@QAE@PAU_iobuf@@@Z ENDP		; CStdOutStream::CStdOutStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__Eg_StdErr@@YAXXZ
text$yc	SEGMENT
??__Eg_StdErr@@YAXXZ PROC				; `dynamic initializer for 'g_StdErr'', COMDAT
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, OFFSET ?g_StdErr@@3VCStdOutStream@@A ; g_StdErr
	call	??0CStdOutStream@@QAE@PAU_iobuf@@@Z	; CStdOutStream::CStdOutStream
	push	OFFSET ??__Fg_StdErr@@YAXXZ		; `dynamic atexit destructor for 'g_StdErr''
	call	_atexit
	add	esp, 4
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_StdErr@@YAXXZ ENDP				; `dynamic initializer for 'g_StdErr''
text$yc	ENDS
PUBLIC	??1CStdOutStream@@QAE@XZ			; CStdOutStream::~CStdOutStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_StdOut@@YAXXZ
text$yd	SEGMENT
??__Fg_StdOut@@YAXXZ PROC				; `dynamic atexit destructor for 'g_StdOut'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??1CStdOutStream@@QAE@XZ		; CStdOutStream::~CStdOutStream
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_StdOut@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_StdOut''
; Function compile flags: /Odtp /RTCsu
text$yd	ENDS
;	COMDAT ??1CStdOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CStdOutStream@@QAE@XZ PROC				; CStdOutStream::~CStdOutStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CStdOutStream@@QAE_NXZ		; CStdOutStream::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CStdOutStream@@QAE@XZ ENDP				; CStdOutStream::~CStdOutStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__Fg_StdErr@@YAXXZ
text$yd	SEGMENT
??__Fg_StdErr@@YAXXZ PROC				; `dynamic atexit destructor for 'g_StdErr'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?g_StdErr@@3VCStdOutStream@@A ; g_StdErr
	call	??1CStdOutStream@@QAE@XZ		; CStdOutStream::~CStdOutStream
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_StdErr@@YAXXZ ENDP				; `dynamic atexit destructor for 'g_StdErr''
text$yd	ENDS
PUBLIC	?g_StdErr@@3VCStdOutStream@@A			; g_StdErr
PUBLIC	?g_StdOut@@3VCStdOutStream@@A			; g_StdOut
_BSS	SEGMENT
?g_StdErr@@3VCStdOutStream@@A DQ 01H DUP (?)		; g_StdErr
?g_StdOut@@3VCStdOutStream@@A DQ 01H DUP (?)		; g_StdOut
_BSS	ENDS
CRT$XCU	SEGMENT
_g_StdOut$initializer$ DD FLAT:??__Eg_StdOut@@YAXXZ
_g_StdErr$initializer$ DD FLAT:??__Eg_StdErr@@YAXXZ
CRT$XCU	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Cab\CabIn.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG69230 DB	'[ERROR-LONG-PATH]', 00H
CONST	ENDS
PUBLIC	__TI1?AUCUnexpectedEndException@NCab@NArchive@@
PUBLIC	?Skip@CInArchive@NCab@NArchive@@AAEXI@Z		; NArchive::NCab::CInArchive::Skip
PUBLIC	__CTA1?AUCUnexpectedEndException@NCab@NArchive@@
PUBLIC	__CT??_R0?AUCUnexpectedEndException@NCab@NArchive@@@81
PUBLIC	??_R0?AUCUnexpectedEndException@NCab@NArchive@@@8 ; NArchive::NCab::CUnexpectedEndException `RTTI Type Descriptor'
EXTRN	?Skip@CInBufferBase@@QAEII@Z:PROC		; CInBufferBase::Skip
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCUnexpectedEndException@NCab@NArchive@@@8
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
_DATA	SEGMENT
??_R0?AUCUnexpectedEndException@NCab@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::NCab::CUnexpectedEndException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCUnexpectedEndException@NCab@NArchive@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AUCUnexpectedEndException@NCab@NArchive@@@81
xdata$x	SEGMENT
__CT??_R0?AUCUnexpectedEndException@NCab@NArchive@@@81 DD 00H
	DD	FLAT:??_R0?AUCUnexpectedEndException@NCab@NArchive@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1?AUCUnexpectedEndException@NCab@NArchive@@
xdata$x	SEGMENT
__CTA1?AUCUnexpectedEndException@NCab@NArchive@@ DD 01H
	DD	FLAT:__CT??_R0?AUCUnexpectedEndException@NCab@NArchive@@@81
xdata$x	ENDS
;	COMDAT __TI1?AUCUnexpectedEndException@NCab@NArchive@@
xdata$x	SEGMENT
__TI1?AUCUnexpectedEndException@NCab@NArchive@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AUCUnexpectedEndException@NCab@NArchive@@
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
$T70068 = -6						; size = 1
$T70067 = -5						; size = 1
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?Skip@CInArchive@NCab@NArchive@@AAEXI@Z PROC		; NArchive::NCab::CInArchive::Skip
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 24
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Skip@CInBufferBase@@QAEII@Z		; CInBufferBase::Skip
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN3@Skip
; Line 25
	xor	ecx, ecx
	mov	BYTE PTR $T70068[ebp], cl
	mov	dl, BYTE PTR $T70068[ebp]
	mov	BYTE PTR $T70067[ebp], dl
	push	OFFSET __TI1?AUCUnexpectedEndException@NCab@NArchive@@
	lea	eax, DWORD PTR $T70067[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@Skip:
; Line 26
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Skip@CInArchive@NCab@NArchive@@AAEXI@Z ENDP		; NArchive::NCab::CInArchive::Skip
_TEXT	ENDS
PUBLIC	?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z	; NArchive::NCab::CInArchive::Read
EXTRN	?ReadBytes@CInBufferBase@@QAEIPAEI@Z:PROC	; CInBufferBase::ReadBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T70079 = -6						; size = 1
$T70078 = -5						; size = 1
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z PROC		; NArchive::NCab::CInArchive::Read
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBytes@CInBufferBase@@QAEIPAEI@Z	; CInBufferBase::ReadBytes
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN3@Read
; Line 31
	xor	edx, edx
	mov	BYTE PTR $T70079[ebp], dl
	mov	al, BYTE PTR $T70079[ebp]
	mov	BYTE PTR $T70078[ebp], al
	push	OFFSET __TI1?AUCUnexpectedEndException@NCab@NArchive@@
	lea	ecx, DWORD PTR $T70078[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN3@Read:
; Line 32
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z ENDP		; NArchive::NCab::CInArchive::Read
_TEXT	ENDS
PUBLIC	?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z	; CBuffer<unsigned char>::ChangeSize_KeepData
PUBLIC	?Size@?$CBuffer@E@@QBEIXZ			; CBuffer<unsigned char>::Size
PUBLIC	??B?$CBuffer@E@@QAEPAEXZ			; CBuffer<unsigned char>::operator unsigned char *
PUBLIC	?ReadByte@CInBufferBase@@QAE_NAAE@Z		; CInBufferBase::ReadByte
PUBLIC	?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z ; NArchive::NCab::CInArchive::ReadName
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
EXTRN	?SetFrom@AString@@QAEXPBDI@Z:PROC		; AString::SetFrom
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T70084 = -36						; size = 1
$T70083 = -35						; size = 1
$T70082 = -34						; size = 1
$T70081 = -33						; size = 1
_b$69225 = -25						; size = 1
_b$69213 = -13						; size = 1
_i$69208 = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z PROC ; NArchive::NCab::CInArchive::ReadName
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	DWORD PTR _i$69208[ebp], 0
	jmp	SHORT $LN10@ReadName
$LN9@ReadName:
	mov	eax, DWORD PTR _i$69208[ebp]
	add	eax, 1
	mov	DWORD PTR _i$69208[ebp], eax
$LN10@ReadName:
	cmp	DWORD PTR _i$69208[ebp], 8192		; 00002000H
	jae	$LN4@ReadName
; Line 39
	lea	ecx, DWORD PTR _b$69213[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CInBufferBase@@QAE_NAAE@Z	; CInBufferBase::ReadByte
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@ReadName
; Line 40
	xor	eax, eax
	mov	BYTE PTR $T70082[ebp], al
	mov	cl, BYTE PTR $T70082[ebp]
	mov	BYTE PTR $T70081[ebp], cl
	push	OFFSET __TI1?AUCUnexpectedEndException@NCab@NArchive@@
	lea	edx, DWORD PTR $T70081[ebp]
	push	edx
	call	__CxxThrowException@8
$LN7@ReadName:
; Line 41
	movzx	eax, BYTE PTR _b$69213[ebp]
	test	eax, eax
	jne	SHORT $LN6@ReadName
; Line 43
	mov	ecx, DWORD PTR _i$69208[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?SetFrom@AString@@QAEXPBDI@Z		; AString::SetFrom
; Line 44
	jmp	$LN12@ReadName
$LN6@ReadName:
; Line 46
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	cmp	eax, DWORD PTR _i$69208[ebp]
	jne	SHORT $LN5@ReadName
; Line 47
	mov	edx, DWORD PTR _i$69208[ebp]
	push	edx
	mov	eax, DWORD PTR _i$69208[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z ; CBuffer<unsigned char>::ChangeSize_KeepData
$LN5@ReadName:
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	mov	ecx, DWORD PTR _i$69208[ebp]
	mov	dl, BYTE PTR _b$69213[ebp]
	mov	BYTE PTR [eax+ecx], dl
; Line 49
	jmp	$LN9@ReadName
$LN4@ReadName:
; Line 54
	lea	eax, DWORD PTR _b$69225[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CInBufferBase@@QAE_NAAE@Z	; CInBufferBase::ReadByte
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@ReadName
; Line 55
	xor	edx, edx
	mov	BYTE PTR $T70084[ebp], dl
	mov	al, BYTE PTR $T70084[ebp]
	mov	BYTE PTR $T70083[ebp], al
	push	OFFSET __TI1?AUCUnexpectedEndException@NCab@NArchive@@
	lea	ecx, DWORD PTR $T70083[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@ReadName:
; Line 56
	movzx	edx, BYTE PTR _b$69225[ebp]
	test	edx, edx
	jne	SHORT $LN1@ReadName
; Line 57
	jmp	SHORT $LN3@ReadName
$LN1@ReadName:
; Line 58
	jmp	SHORT $LN4@ReadName
$LN3@ReadName:
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+49], 1
; Line 61
	push	OFFSET $SG69230
	mov	ecx, DWORD PTR _s$[ebp]
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
$LN12@ReadName:
; Line 62
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@ReadName
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN16@ReadName:
	DD	2
	DD	$LN15@ReadName
$LN15@ReadName:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN13@ReadName
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN14@ReadName
$LN14@ReadName:
	DB	98					; 00000062H
	DB	0
$LN13@ReadName:
	DB	98					; 00000062H
	DB	0
?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z ENDP ; NArchive::NCab::CInArchive::ReadName
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 4
?ReadByte@CInBufferBase@@QAE_NAAE@Z PROC		; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 66
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _b$[ebp]
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 68
	mov	al, 1
$LN2@ReadByte:
; Line 69
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadByte@CInBufferBase@@QAE_NAAE@Z ENDP		; CInBufferBase::ReadByte
_TEXT	ENDS
PUBLIC	?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z ; NArchive::NCab::CInArchive::ReadOtherArc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_oa$ = 8						; size = 4
?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z PROC ; NArchive::NCab::CInArchive::ReadOtherArc
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _oa$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z ; NArchive::NCab::CInArchive::ReadName
; Line 67
	mov	ecx, DWORD PTR _oa$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z ; NArchive::NCab::CInArchive::ReadName
; Line 68
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z ENDP ; NArchive::NCab::CInArchive::ReadOtherArc
_TEXT	ENDS
PUBLIC	?Find@CSignatureFinder@NCab@NArchive@@QAEJXZ	; NArchive::NCab::CSignatureFinder::Find
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv350 = -72						; size = 4
tv342 = -68						; size = 8
tv311 = -60						; size = 4
tv308 = -56						; size = 8
___result__$69297 = -48					; size = 4
_processedSize$69295 = -40				; size = 4
_rem2$69292 = -32					; size = 8
_rem$69288 = -24					; size = 4
_num$69287 = -20					; size = 4
_i$69280 = -16						; size = 4
_b$69272 = -9						; size = 1
_p$69271 = -8						; size = 4
_this$ = -4						; size = 4
?Find@CSignatureFinder@NCab@NArchive@@QAEJXZ PROC	; NArchive::NCab::CSignatureFinder::Find
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN20@Find:
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+8]
	mov	cl, BYTE PTR [ecx]
	mov	BYTE PTR [eax+edx], cl
$LN18@Find:
; Line 109
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+20]
	jb	$LN17@Find
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _p$69271[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _b$69272[ebp], dl
$LN16@Find:
; Line 115
	mov	eax, DWORD PTR _p$69271[ebp]
	movzx	ecx, BYTE PTR [eax]
	movzx	edx, BYTE PTR _b$69272[ebp]
	cmp	ecx, edx
	jne	SHORT $LN14@Find
	jmp	SHORT $LN15@Find
$LN14@Find:
	mov	eax, DWORD PTR _p$69271[ebp]
	add	eax, 1
	mov	DWORD PTR _p$69271[ebp], eax
; Line 116
	mov	ecx, DWORD PTR _p$69271[ebp]
	movzx	edx, BYTE PTR [ecx]
	movzx	eax, BYTE PTR _b$69272[ebp]
	cmp	edx, eax
	jne	SHORT $LN13@Find
	jmp	SHORT $LN15@Find
$LN13@Find:
	mov	ecx, DWORD PTR _p$69271[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$69271[ebp], ecx
; Line 117
	jmp	SHORT $LN16@Find
$LN15@Find:
; Line 118
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$69271[ebp]
	sub	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 119
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+20]
	jae	SHORT $LN12@Find
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+20]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 122
	jmp	SHORT $LN17@Find
$LN12@Find:
; Line 125
	mov	DWORD PTR _i$69280[ebp], 1
	jmp	SHORT $LN11@Find
$LN10@Find:
	mov	ecx, DWORD PTR _i$69280[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$69280[ebp], ecx
$LN11@Find:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$69280[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jae	SHORT $LN9@Find
	mov	ecx, DWORD PTR _p$69271[ebp]
	add	ecx, DWORD PTR _i$69280[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, DWORD PTR _i$69280[ebp]
	movzx	ecx, BYTE PTR [ecx+eax]
	cmp	edx, ecx
	jne	SHORT $LN9@Find
	jmp	SHORT $LN10@Find
$LN9@Find:
; Line 126
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$69280[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN8@Find
; Line 127
	xor	eax, eax
	jmp	$LN21@Find
$LN8@Find:
; Line 128
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 129
	jmp	$LN18@Find
$LN17@Find:
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+24]
	jb	SHORT $LN7@Find
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 1
	not	edx
	mov	eax, DWORD PTR _this$[ebp]
	and	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _num$69287[ebp], edx
; Line 134
	mov	ecx, DWORD PTR _num$69287[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+40]
	adc	edx, DWORD PTR [eax+44]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], edx
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR _num$69287[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, DWORD PTR _num$69287[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 137
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _num$69287[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Find:
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+28]
	sub	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _rem$69288[ebp], eax
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	je	$LN6@Find
; Line 142
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+40]
	adc	ecx, DWORD PTR [edx+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+48]
	mov	DWORD PTR tv308[ebp], eax
	mov	DWORD PTR tv308[ebp+4], ecx
	mov	DWORD PTR tv311[ebp], edx
	mov	eax, DWORD PTR tv311[ebp]
	mov	ecx, DWORD PTR tv308[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN5@Find
	ja	SHORT $LN23@Find
	mov	edx, DWORD PTR tv311[ebp]
	mov	eax, DWORD PTR tv308[ebp]
	cmp	eax, DWORD PTR [edx]
	jbe	SHORT $LN5@Find
$LN23@Find:
; Line 143
	mov	eax, 1
	jmp	$LN21@Find
$LN5@Find:
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	xor	eax, eax
	mov	esi, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [esi+40]
	adc	eax, DWORD PTR [esi+44]
	mov	esi, DWORD PTR [edx]
	sub	esi, ecx
	mov	ecx, DWORD PTR [edx+4]
	sbb	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	xor	edx, edx
	add	esi, eax
	adc	ecx, edx
	mov	DWORD PTR _rem2$69292[ebp], esi
	mov	DWORD PTR _rem2$69292[ebp+4], ecx
; Line 145
	mov	eax, DWORD PTR _rem$69288[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], ecx
	mov	edx, DWORD PTR tv342[ebp+4]
	cmp	edx, DWORD PTR _rem2$69292[ebp+4]
	jb	SHORT $LN6@Find
	ja	SHORT $LN24@Find
	mov	eax, DWORD PTR tv342[ebp]
	cmp	eax, DWORD PTR _rem2$69292[ebp]
	jbe	SHORT $LN6@Find
$LN24@Find:
; Line 146
	mov	ecx, DWORD PTR _rem2$69292[ebp]
	mov	DWORD PTR _rem$69288[ebp], ecx
$LN6@Find:
; Line 150
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv350[ebp], edx
	mov	eax, DWORD PTR tv350[ebp]
	mov	ecx, DWORD PTR tv350[ebp]
	mov	edx, DWORD PTR [eax+40]
	or	edx, DWORD PTR [ecx+44]
	jne	SHORT $LN3@Find
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	sub	edx, DWORD PTR [ecx+20]
	cmp	DWORD PTR _rem$69288[ebp], edx
	jne	SHORT $LN3@Find
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rem$69288[ebp]
	sub	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _rem$69288[ebp], ecx
$LN3@Find:
; Line 152
	mov	esi, esp
	lea	edx, DWORD PTR _processedSize$69295[ebp]
	push	edx
	mov	eax, DWORD PTR _rem$69288[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$69297[ebp], eax
	cmp	DWORD PTR ___result__$69297[ebp], 0
	je	SHORT $LN2@Find
	mov	eax, DWORD PTR ___result__$69297[ebp]
	jmp	SHORT $LN21@Find
$LN2@Find:
; Line 153
	cmp	DWORD PTR _processedSize$69295[ebp], 0
	jne	SHORT $LN1@Find
; Line 154
	mov	eax, 1
	jmp	SHORT $LN21@Find
$LN1@Find:
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, DWORD PTR _processedSize$69295[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 156
	jmp	$LN20@Find
$LN21@Find:
; Line 157
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@Find
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@Find:
	DD	1
	DD	$LN26@Find
$LN26@Find:
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN25@Find
$LN25@Find:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Find@CSignatureFinder@NCab@NArchive@@QAEJXZ ENDP	; NArchive::NCab::CSignatureFinder::Find
_TEXT	ENDS
PUBLIC	?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z	; NArchive::NCab::CInArcInfo::Parse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z PROC	; NArchive::NCab::CInArcInfo::Parse
; _this$ = ecx
; Line 160
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN4@Parse
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN5@Parse
$LN4@Parse:
; Line 163
	xor	al, al
	jmp	$LN6@Parse
$LN5@Parse:
; Line 164
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+76], ecx
; Line 165
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+76], 36			; 00000024H
	jae	SHORT $LN3@Parse
; Line 166
	xor	al, al
	jmp	SHORT $LN6@Parse
$LN3@Parse:
; Line 167
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax+30]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 7
	jbe	SHORT $LN2@Parse
; Line 169
	xor	al, al
	jmp	SHORT $LN6@Parse
$LN2@Parse:
; Line 170
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+80], eax
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+80], 0
	je	SHORT $LN1@Parse
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	cmp	ecx, DWORD PTR [eax+76]
	jbe	SHORT $LN1@Parse
; Line 172
	xor	al, al
	jmp	SHORT $LN6@Parse
$LN1@Parse:
; Line 173
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR [eax+24]
	mov	BYTE PTR [edx], cl
; Line 174
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR [eax+25]
	mov	BYTE PTR [edx+1], cl
; Line 175
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+26]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 176
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 177
	mov	al, 1
$LN6@Parse:
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z ENDP	; NArchive::NCab::CInArcInfo::Parse
_TEXT	ENDS
PUBLIC	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z	; NArchive::NCab::CItem::GetFolderIndex
PUBLIC	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
PUBLIC	?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ ; CObjectVector<NArchive::NCab::CItem>::AddNewInReserved
PUBLIC	?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CItem>::ClearAndReserve
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
PUBLIC	?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z ; CRecordVector<NArchive::NCab::CFolder>::AddInReserved
PUBLIC	?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z ; CRecordVector<NArchive::NCab::CFolder>::ClearAndReserve
PUBLIC	?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CArchInfo::IsThereNext
PUBLIC	?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CArchInfo::IsTherePrev
PUBLIC	?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::ReserveBlockPresent
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
PUBLIC	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
PUBLIC	?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z ; NArchive::NCab::CSignatureFinder::GetTotalCapacity
PUBLIC	?SetBuf@CInBufferBase@@QAEXPAEIII@Z		; CInBufferBase::SetBuf
PUBLIC	??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator->
PUBLIC	?Alloc@?$CBuffer@E@@QAEXI@Z			; CBuffer<unsigned char>::Alloc
PUBLIC	?Init@CLimitedSequentialInStream@@QAEX_K@Z	; CLimitedSequentialInStream::Init
PUBLIC	?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z ; CLimitedSequentialInStream::SetStream
PUBLIC	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
PUBLIC	??0CLimitedSequentialInStream@@QAE@XZ		; CLimitedSequentialInStream::CLimitedSequentialInStream
PUBLIC	??1?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::~CBuffer<unsigned char>
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??0?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::CBuffer<unsigned char>
PUBLIC	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
PUBLIC	?Clear@CDatabase@NCab@NArchive@@QAEXXZ		; NArchive::NCab::CDatabase::Clear
PUBLIC	__$ArrayPad$
PUBLIC	?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z ; NArchive::NCab::CInArchive::Open2
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
EXTRN	_memcpy:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_memcmp:PROC
EXTRN	?kMarker@NHeader@NCab@NArchive@@3QBEB:QWORD	; NArchive::NCab::NHeader::kMarker
EXTRN	?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z:PROC ; ReadStream_FALSE
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$3
__ehfuncinfo$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv482 = -356						; size = 4
tv789 = -352						; size = 8
tv786 = -344						; size = 8
tv293 = -336						; size = 4
tv680 = -332						; size = 4
tv192 = -328						; size = 4
tv162 = -324						; size = 4
tv77 = -320						; size = 4
$T70116 = -316						; size = 4
$T70115 = -312						; size = 4
$T70114 = -308						; size = 4
$T70111 = -304						; size = 4
$T70110 = -300						; size = 4
$T70109 = -296						; size = 4
$T70108 = -292						; size = 4
$T70107 = -288						; size = 4
$T70104 = -284						; size = 4
$T70103 = -280						; size = 4
$T70102 = -276						; size = 4
_pureTime$69411 = -272					; size = 2
_pureDate$69408 = -268					; size = 2
_item$69401 = -264					; size = 4
___result__$69395 = -260				; size = 4
_folder$69389 = -252					; size = 8
_i$ = -240						; size = 4
_nextSize$ = -236					; size = 4
_p$ = -228						; size = 16
_remInFinder$69369 = -208				; size = 4
___result__$69361 = -204				; size = 4
_finder$69357 = -196					; size = 56
___result__$69349 = -136				; size = 4
_numProcessedBytes$69348 = -128				; size = 4
___result__$69340 = -120				; size = 4
_kBufSize$69339 = -116					; size = 4
_header$69338 = -108					; size = 32
_kMainHeaderSize$69337 = -72				; size = 4
_limitedStream$ = -64					; size = 4
_limitedStreamSpec$ = -56				; size = 4
_startInBuf$ = -52					; size = 8
_ai$ = -44						; size = 4
_buffer$ = -36						; size = 8
___result__$69329 = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_db$ = 8						; size = 4
_searchHeaderSizeLimit$ = 12				; size = 4
?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z PROC ; NArchive::NCab::CInArchive::Open2
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 344				; 00000158H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+49], 0
; Line 184
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+50], 0
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+51], 0
; Line 187
	mov	ecx, DWORD PTR _db$[ebp]
	call	?Clear@CDatabase@NCab@NArchive@@QAEXXZ	; NArchive::NCab::CDatabase::Clear
; Line 188
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 120				; 00000078H
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	push	ecx
	push	1
	push	0
	push	0
	mov	edx, DWORD PTR tv77[ebp]
	push	edx
	mov	eax, DWORD PTR tv77[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$69329[ebp], eax
	cmp	DWORD PTR ___result__$69329[ebp], 0
	je	SHORT $LN25@Open2
	mov	eax, DWORD PTR ___result__$69329[ebp]
	jmp	$LN26@Open2
$LN25@Open2:
; Line 191
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 192
	mov	eax, DWORD PTR _db$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _ai$[ebp], eax
; Line 193
	mov	DWORD PTR _startInBuf$[ebp], 0
	mov	DWORD PTR _startInBuf$[ebp+4], 0
; Line 195
	mov	DWORD PTR _limitedStreamSpec$[ebp], 0
; Line 196
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 202
	mov	DWORD PTR _kMainHeaderSize$69337[ebp], 32 ; 00000020H
; Line 204
	mov	DWORD PTR _kBufSize$69339[ebp], 32768	; 00008000H
; Line 205
	push	32					; 00000020H
	lea	ecx, DWORD PTR _header$69338[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 120				; 00000078H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	push	eax
	call	?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z ; ReadStream_FALSE
	mov	DWORD PTR ___result__$69340[ebp], eax
	cmp	DWORD PTR ___result__$69340[ebp], 0
	je	SHORT $LN24@Open2
	mov	edx, DWORD PTR ___result__$69340[ebp]
	mov	DWORD PTR $T70102[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70102[ebp]
	jmp	$LN26@Open2
$LN24@Open2:
; Line 206
	push	8
	push	OFFSET ?kMarker@NHeader@NCab@NArchive@@3QBEB ; NArchive::NCab::NHeader::kMarker
	lea	eax, DWORD PTR _header$69338[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN23@Open2
	lea	ecx, DWORD PTR _header$69338[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ai$[ebp]
	call	?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z ; NArchive::NCab::CInArcInfo::Parse
	movzx	edx, al
	test	edx, edx
	je	$LN23@Open2
; Line 208
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70104[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T70104[ebp], 0
	je	SHORT $LN28@Open2
	mov	ecx, DWORD PTR $T70104[ebp]
	call	??0CLimitedSequentialInStream@@QAE@XZ
	mov	DWORD PTR tv162[ebp], eax
	jmp	SHORT $LN29@Open2
$LN28@Open2:
	mov	DWORD PTR tv162[ebp], 0
$LN29@Open2:
	mov	eax, DWORD PTR tv162[ebp]
	mov	DWORD PTR $T70103[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T70103[ebp]
	mov	DWORD PTR _limitedStreamSpec$[ebp], ecx
; Line 209
	mov	edx, DWORD PTR _limitedStreamSpec$[ebp]
	push	edx
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 210
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 120				; 00000078H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	push	eax
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	call	?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z ; CLimitedSequentialInStream::SetStream
; Line 211
	mov	eax, DWORD PTR _ai$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	sub	ecx, 8
	xor	edx, edx
	push	edx
	push	ecx
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	call	?Init@CLimitedSequentialInStream@@QAEX_K@Z ; CLimitedSequentialInStream::Init
; Line 212
	push	32768					; 00008000H
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 213
	push	32					; 00000020H
	lea	eax, DWORD PTR _header$69338[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 215
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator->
	mov	DWORD PTR tv192[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _numProcessedBytes$69348[ebp]
	push	ecx
	push	32736					; 00007fe0H
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	add	eax, 32					; 00000020H
	push	eax
	mov	edx, DWORD PTR tv192[ebp]
	push	edx
	mov	eax, DWORD PTR tv192[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$69349[ebp], eax
	cmp	DWORD PTR ___result__$69349[ebp], 0
	je	SHORT $LN22@Open2
	mov	eax, DWORD PTR ___result__$69349[ebp]
	mov	DWORD PTR $T70107[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70107[ebp]
	jmp	$LN26@Open2
$LN22@Open2:
; Line 216
	push	32					; 00000020H
	mov	ecx, DWORD PTR _numProcessedBytes$69348[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	push	32768					; 00008000H
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBuf@CInBufferBase@@QAEXPAEIII@Z	; CInBufferBase::SetBuf
; Line 218
	jmp	$LN21@Open2
$LN23@Open2:
; Line 220
	cmp	DWORD PTR _searchHeaderSizeLimit$[ebp], 0
	je	SHORT $LN20@Open2
	mov	edx, DWORD PTR _searchHeaderSizeLimit$[ebp]
	mov	DWORD PTR tv680[ebp], edx
	mov	eax, DWORD PTR tv680[ebp]
	mov	ecx, DWORD PTR tv680[ebp]
	mov	edx, DWORD PTR [eax]
	or	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN20@Open2
; Line 221
	mov	DWORD PTR $T70108[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70108[ebp]
	jmp	$LN26@Open2
$LN20@Open2:
; Line 225
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 120				; 00000078H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR _finder$69357[ebp+32], eax
; Line 226
	mov	DWORD PTR _finder$69357[ebp+12], OFFSET ?kMarker@NHeader@NCab@NArchive@@3QBEB ; NArchive::NCab::NHeader::kMarker
; Line 227
	mov	DWORD PTR _finder$69357[ebp+16], 8
; Line 228
	mov	eax, DWORD PTR _searchHeaderSizeLimit$[ebp]
	mov	DWORD PTR _finder$69357[ebp+48], eax
; Line 230
	push	32					; 00000020H
	push	32768					; 00008000H
	lea	ecx, DWORD PTR _finder$69357[ebp]
	call	?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z ; NArchive::NCab::CSignatureFinder::GetTotalCapacity
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 231
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	mov	DWORD PTR _finder$69357[ebp], eax
; Line 233
	push	32					; 00000020H
	lea	ecx, DWORD PTR _header$69338[ebp]
	push	ecx
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 234
	mov	edx, DWORD PTR _db$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR _finder$69357[ebp+40], eax
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR _finder$69357[ebp+44], ecx
; Line 235
	mov	DWORD PTR _finder$69357[ebp+8], 32	; 00000020H
; Line 236
	mov	DWORD PTR _finder$69357[ebp+4], 1
$LN19@Open2:
; Line 240
	lea	ecx, DWORD PTR _finder$69357[ebp]
	call	?Find@CSignatureFinder@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CSignatureFinder::Find
	mov	DWORD PTR ___result__$69361[ebp], eax
	cmp	DWORD PTR ___result__$69361[ebp], 0
	je	SHORT $LN17@Open2
	mov	edx, DWORD PTR ___result__$69361[ebp]
	mov	DWORD PTR $T70109[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70109[ebp]
	jmp	$LN26@Open2
$LN17@Open2:
; Line 241
	mov	eax, DWORD PTR _finder$69357[ebp]
	add	eax, DWORD PTR _finder$69357[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ai$[ebp]
	call	?Parse@CInArcInfo@NCab@NArchive@@QAE_NPBE@Z ; NArchive::NCab::CInArcInfo::Parse
	movzx	ecx, al
	test	ecx, ecx
	je	$LN16@Open2
; Line 243
	mov	edx, DWORD PTR _finder$69357[ebp+4]
	xor	eax, eax
	add	edx, DWORD PTR _finder$69357[ebp+40]
	adc	eax, DWORD PTR _finder$69357[ebp+44]
	mov	ecx, DWORD PTR _db$[ebp]
	mov	DWORD PTR [ecx+24], edx
	mov	DWORD PTR [ecx+28], eax
; Line 244
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70111[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T70111[ebp], 0
	je	SHORT $LN30@Open2
	mov	ecx, DWORD PTR $T70111[ebp]
	call	??0CLimitedSequentialInStream@@QAE@XZ
	mov	DWORD PTR tv293[ebp], eax
	jmp	SHORT $LN31@Open2
$LN30@Open2:
	mov	DWORD PTR tv293[ebp], 0
$LN31@Open2:
	mov	edx, DWORD PTR tv293[ebp]
	mov	DWORD PTR $T70110[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T70110[ebp]
	mov	DWORD PTR _limitedStreamSpec$[ebp], eax
; Line 245
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 120				; 00000078H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	push	eax
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	call	?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z ; CLimitedSequentialInStream::SetStream
; Line 246
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 247
	mov	edx, DWORD PTR _finder$69357[ebp+8]
	sub	edx, DWORD PTR _finder$69357[ebp+4]
	mov	DWORD PTR _remInFinder$69369[ebp], edx
; Line 248
	mov	eax, DWORD PTR _ai$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	cmp	ecx, DWORD PTR _remInFinder$69369[ebp]
	ja	SHORT $LN15@Open2
; Line 250
	push	0
	push	0
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	call	?Init@CLimitedSequentialInStream@@QAEX_K@Z ; CLimitedSequentialInStream::Init
; Line 251
	mov	edx, DWORD PTR _ai$[ebp]
	mov	eax, DWORD PTR _finder$69357[ebp+4]
	add	eax, DWORD PTR [edx+76]
	mov	DWORD PTR _finder$69357[ebp+8], eax
; Line 253
	jmp	SHORT $LN14@Open2
$LN15@Open2:
; Line 254
	mov	ecx, DWORD PTR _ai$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	sub	edx, DWORD PTR _remInFinder$69369[ebp]
	xor	eax, eax
	push	eax
	push	edx
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	call	?Init@CLimitedSequentialInStream@@QAEX_K@Z ; CLimitedSequentialInStream::Init
$LN14@Open2:
; Line 256
	mov	ecx, DWORD PTR _finder$69357[ebp+4]
	xor	edx, edx
	mov	DWORD PTR _startInBuf$[ebp], ecx
	mov	DWORD PTR _startInBuf$[ebp+4], edx
; Line 257
	mov	eax, DWORD PTR _finder$69357[ebp+4]
	add	eax, 32					; 00000020H
	push	eax
	mov	ecx, DWORD PTR _finder$69357[ebp+8]
	push	ecx
	push	32768					; 00008000H
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBuf@CInBufferBase@@QAEXPAEIII@Z	; CInBufferBase::SetBuf
; Line 258
	jmp	SHORT $LN21@Open2
$LN16@Open2:
; Line 260
	mov	edx, DWORD PTR _finder$69357[ebp+4]
	add	edx, 1
	mov	DWORD PTR _finder$69357[ebp+4], edx
; Line 261
	jmp	$LN19@Open2
$LN21@Open2:
; Line 265
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 1
; Line 267
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Line 268
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN13@Open2
; Line 269
	push	4096					; 00001000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
$LN13@Open2:
; Line 272
	mov	ecx, DWORD PTR _ai$[ebp]
	call	?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::ReserveBlockPresent
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 4
	add	ecx, 4
	mov	DWORD PTR _nextSize$[ebp], ecx
; Line 273
	mov	edx, DWORD PTR _nextSize$[ebp]
	push	edx
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z ; NArchive::NCab::CInArchive::Read
; Line 274
	movzx	ecx, WORD PTR _p$[ebp]
	mov	edx, DWORD PTR _ai$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 275
	movzx	eax, WORD PTR _p$[ebp+2]
	mov	ecx, DWORD PTR _ai$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 277
	mov	ecx, DWORD PTR _ai$[ebp]
	call	?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::ReserveBlockPresent
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@Open2
; Line 279
	mov	eax, DWORD PTR _ai$[ebp]
	mov	cx, WORD PTR _p$[ebp+4]
	mov	WORD PTR [eax+24], cx
; Line 280
	mov	edx, DWORD PTR _ai$[ebp]
	mov	al, BYTE PTR _p$[ebp+6]
	mov	BYTE PTR [edx+26], al
; Line 281
	mov	ecx, DWORD PTR _ai$[ebp]
	mov	dl, BYTE PTR _p$[ebp+7]
	mov	BYTE PTR [ecx+27], dl
; Line 282
	mov	eax, DWORD PTR _ai$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Skip@CInArchive@NCab@NArchive@@AAEXI@Z	; NArchive::NCab::CInArchive::Skip
$LN12@Open2:
; Line 285
	mov	ecx, DWORD PTR _ai$[ebp]
	call	?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::IsTherePrev
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@Open2
	mov	eax, DWORD PTR _ai$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z ; NArchive::NCab::CInArchive::ReadOtherArc
$LN11@Open2:
; Line 286
	mov	ecx, DWORD PTR _ai$[ebp]
	call	?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::IsThereNext
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@Open2
	mov	edx, DWORD PTR _ai$[ebp]
	add	edx, 52					; 00000034H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadOtherArc@CInArchive@NCab@NArchive@@AAEXAAUCOtherArc@23@@Z ; NArchive::NCab::CInArchive::ReadOtherArc
$LN10@Open2:
; Line 289
	mov	eax, DWORD PTR _ai$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _db$[ebp]
	call	?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z ; CRecordVector<NArchive::NCab::CFolder>::ClearAndReserve
; Line 290
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@Open2
$LN8@Open2:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@Open2:
	mov	eax, DWORD PTR _ai$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN7@Open2
; Line 292
	push	8
	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z ; NArchive::NCab::CInArchive::Read
; Line 294
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _folder$69389[ebp], eax
; Line 295
	mov	cx, WORD PTR _p$[ebp+4]
	mov	WORD PTR _folder$69389[ebp+4], cx
; Line 296
	mov	dl, BYTE PTR _p$[ebp+6]
	mov	BYTE PTR _folder$69389[ebp+6], dl
; Line 297
	mov	al, BYTE PTR _p$[ebp+7]
	mov	BYTE PTR _folder$69389[ebp+7], al
; Line 298
	mov	ecx, DWORD PTR _ai$[ebp]
	movzx	edx, BYTE PTR [ecx+26]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Skip@CInArchive@NCab@NArchive@@AAEXI@Z	; NArchive::NCab::CInArchive::Skip
; Line 299
	mov	eax, DWORD PTR _folder$69389[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _folder$69389[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$[ebp]
	call	?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z ; CRecordVector<NArchive::NCab::CFolder>::AddInReserved
; Line 300
	jmp	$LN8@Open2
$LN7@Open2:
; Line 304
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	sub	eax, DWORD PTR _startInBuf$[ebp]
	sbb	edx, DWORD PTR _startInBuf$[ebp+4]
	mov	ecx, DWORD PTR _ai$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	xor	esi, esi
	mov	DWORD PTR tv786[ebp], eax
	mov	DWORD PTR tv786[ebp+4], edx
	mov	DWORD PTR tv789[ebp], ecx
	mov	DWORD PTR tv789[ebp+4], esi
	mov	edx, DWORD PTR tv786[ebp]
	cmp	edx, DWORD PTR tv789[ebp]
	jne	SHORT $LN36@Open2
	mov	eax, DWORD PTR tv786[ebp+4]
	cmp	eax, DWORD PTR tv789[ebp+4]
	je	$LN6@Open2
$LN36@Open2:
; Line 308
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 120				; 00000078H
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv482[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _ai$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	xor	eax, eax
	mov	ecx, DWORD PTR _db$[ebp]
	add	edx, DWORD PTR [ecx+24]
	adc	eax, DWORD PTR [ecx+28]
	push	eax
	push	edx
	mov	edx, DWORD PTR tv482[ebp]
	push	edx
	mov	eax, DWORD PTR tv482[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$69395[ebp], eax
	cmp	DWORD PTR ___result__$69395[ebp], 0
	je	SHORT $LN5@Open2
	mov	eax, DWORD PTR ___result__$69395[ebp]
	mov	DWORD PTR $T70114[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70114[ebp]
	jmp	$LN26@Open2
$LN5@Open2:
; Line 309
	mov	ecx, DWORD PTR _ai$[ebp]
	mov	edx, DWORD PTR _ai$[ebp]
	mov	eax, DWORD PTR [ecx+76]
	sub	eax, DWORD PTR [edx+80]
	xor	ecx, ecx
	push	ecx
	push	eax
	mov	ecx, DWORD PTR _limitedStreamSpec$[ebp]
	call	?Init@CLimitedSequentialInStream@@QAEX_K@Z ; CLimitedSequentialInStream::Init
; Line 310
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
$LN6@Open2:
; Line 313
	mov	edx, DWORD PTR _ai$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 12					; 0000000cH
	call	?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CItem>::ClearAndReserve
; Line 314
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Open2
$LN3@Open2:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@Open2:
	mov	edx, DWORD PTR _ai$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	$LN2@Open2
; Line 316
	push	16					; 00000010H
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Read@CInArchive@NCab@NArchive@@AAEXPAEI@Z ; NArchive::NCab::CInArchive::Read
; Line 317
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 12					; 0000000cH
	call	?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ ; CObjectVector<NArchive::NCab::CItem>::AddNewInReserved
	mov	DWORD PTR _item$69401[ebp], eax
; Line 318
	mov	edx, DWORD PTR _item$69401[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 319
	mov	ecx, DWORD PTR _item$69401[ebp]
	mov	edx, DWORD PTR _p$[ebp+4]
	mov	DWORD PTR [ecx+12], edx
; Line 320
	movzx	eax, WORD PTR _p$[ebp+8]
	mov	ecx, DWORD PTR _item$69401[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 321
	mov	dx, WORD PTR _p$[ebp+10]
	mov	WORD PTR _pureDate$69408[ebp], dx
; Line 322
	mov	ax, WORD PTR _p$[ebp+12]
	mov	WORD PTR _pureTime$69411[ebp], ax
; Line 323
	movzx	ecx, WORD PTR _pureDate$69408[ebp]
	shl	ecx, 16					; 00000010H
	movzx	edx, WORD PTR _pureTime$69411[ebp]
	or	ecx, edx
	mov	eax, DWORD PTR _item$69401[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 324
	mov	ecx, DWORD PTR _item$69401[ebp]
	mov	dx, WORD PTR _p$[ebp+14]
	mov	WORD PTR [ecx+30], dx
; Line 326
	mov	eax, DWORD PTR _item$69401[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadName@CInArchive@NCab@NArchive@@AAEXAAVAString@@@Z ; NArchive::NCab::CInArchive::ReadName
; Line 327
	mov	ecx, DWORD PTR _db$[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	push	eax
	mov	ecx, DWORD PTR _item$69401[ebp]
	call	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ; NArchive::NCab::CItem::GetFolderIndex
	mov	esi, eax
	mov	ecx, DWORD PTR _db$[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	cmp	esi, eax
	jl	SHORT $LN1@Open2
; Line 329
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+51], 1
; Line 330
	mov	DWORD PTR $T70115[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70115[ebp]
	jmp	SHORT $LN26@Open2
$LN1@Open2:
; Line 332
	jmp	$LN3@Open2
$LN2@Open2:
; Line 336
	mov	DWORD PTR $T70116[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T70116[ebp]
$LN26@Open2:
; Line 337
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@Open2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN46@Open2:
	DD	7
	DD	$LN45@Open2
$LN45@Open2:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN37@Open2
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN38@Open2
	DD	-108					; ffffff94H
	DD	32					; 00000020H
	DD	$LN39@Open2
	DD	-128					; ffffff80H
	DD	4
	DD	$LN40@Open2
	DD	-196					; ffffff3cH
	DD	56					; 00000038H
	DD	$LN41@Open2
	DD	-228					; ffffff1cH
	DD	16					; 00000010H
	DD	$LN42@Open2
	DD	-252					; ffffff04H
	DD	8
	DD	$LN43@Open2
$LN43@Open2:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN42@Open2:
	DB	112					; 00000070H
	DB	0
$LN41@Open2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN40@Open2:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN39@Open2:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN38@Open2:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN37@Open2:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$0:
	lea	ecx, DWORD PTR _buffer$[ebp]
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$1:
	lea	ecx, DWORD PTR _limitedStream$[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$2:
	mov	eax, DWORD PTR $T70104[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z$3:
	mov	eax, DWORD PTR $T70111[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-356]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z ENDP ; NArchive::NCab::CInArchive::Open2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z PROC ; CLimitedSequentialInStream::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\limitedstreams.h
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CLimitedSequentialInStream@@QAEXPAUISequentialInStream@@@Z ENDP ; CLimitedSequentialInStream::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CLimitedSequentialInStream@@QAEX_K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_streamSize$ = 8					; size = 8
?Init@CLimitedSequentialInStream@@QAEX_K@Z PROC		; CLimitedSequentialInStream::Init, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _streamSize$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _streamSize$[ebp+4]
	mov	DWORD PTR [eax+20], edx
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+32], 0
; Line 27
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@CLimitedSequentialInStream@@QAEX_K@Z ENDP		; CLimitedSequentialInStream::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetBuf@CInBufferBase@@QAEXPAEIII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_bufSize$ = 12						; size = 4
_end$ = 16						; size = 4
_pos$ = 20						; size = 4
?SetBuf@CInBufferBase@@QAEXPAEIII@Z PROC		; CInBufferBase::SetBuf, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 50
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _bufSize$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 51
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
; Line 52
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _pos$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 53
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _end$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 59
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetBuf@CInBufferBase@@QAEXPAEIII@Z ENDP		; CInBufferBase::SetBuf
_TEXT	ENDS
PUBLIC	?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::ContinuedToNext
PUBLIC	?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::ContinuedFromPrev
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numFolders$ = 8					; size = 4
?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z PROC	; NArchive::NCab::CItem::GetFolderIndex, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabitem.h
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CItem::ContinuedFromPrev
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@GetFolderI
; Line 57
	xor	eax, eax
	jmp	SHORT $LN3@GetFolderI
$LN2@GetFolderI:
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CItem::ContinuedToNext
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetFolderI
; Line 59
	mov	eax, DWORD PTR _numFolders$[ebp]
	sub	eax, 1
	jmp	SHORT $LN3@GetFolderI
$LN1@GetFolderI:
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
$LN3@GetFolderI:
; Line 61
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ENDP	; NArchive::NCab::CItem::GetFolderIndex
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CItem::ContinuedFromPrev, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 65533		; 0000fffdH
	je	SHORT $LN3@ContinuedF
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 65535		; 0000ffffH
	je	SHORT $LN3@ContinuedF
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@ContinuedF
$LN3@ContinuedF:
	mov	DWORD PTR tv68[ebp], 1
$LN4@ContinuedF:
	mov	al, BYTE PTR tv68[ebp]
; Line 45
	mov	esp, ebp
	pop	ebp
	ret	0
?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CItem::ContinuedFromPrev
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CItem::ContinuedToNext, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 65534		; 0000fffeH
	je	SHORT $LN3@ContinuedT
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 65535		; 0000ffffH
	je	SHORT $LN3@ContinuedT
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@ContinuedT
$LN3@ContinuedT:
	mov	DWORD PTR tv68[ebp], 1
$LN4@ContinuedT:
	mov	al, BYTE PTR tv68[ebp]
; Line 52
	mov	esp, ebp
	pop	ebp
	ret	0
?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CItem::ContinuedToNext
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ PROC ; NArchive::NCab::CArchInfo::ReserveBlockPresent, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 4
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ENDP ; NArchive::NCab::CArchInfo::ReserveBlockPresent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CArchInfo::IsTherePrev, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CArchInfo::IsTherePrev
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CArchInfo::IsThereNext, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 2
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CArchInfo::IsThereNext
_TEXT	ENDS
PUBLIC	?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ ; CObjectVector<NArchive::NCab::CItem>::Clear
PUBLIC	?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CFolder>::Clear
PUBLIC	?Clear@CArchInfo@NCab@NArchive@@QAEXXZ		; NArchive::NCab::CArchInfo::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CDatabase@NCab@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CDatabase@NCab@NArchive@@QAEXXZ PROC		; NArchive::NCab::CDatabase::Clear, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Clear@CArchInfo@NCab@NArchive@@QAEXXZ	; NArchive::NCab::CArchInfo::Clear
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CFolder>::Clear
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ ; CObjectVector<NArchive::NCab::CItem>::Clear
; Line 89
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CDatabase@NCab@NArchive@@QAEXXZ ENDP		; NArchive::NCab::CDatabase::Clear
_TEXT	ENDS
PUBLIC	?Clear@COtherArc@NCab@NArchive@@QAEXXZ		; NArchive::NCab::COtherArc::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CArchInfo@NCab@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CArchInfo@NCab@NArchive@@QAEXXZ PROC		; NArchive::NCab::CArchInfo::Clear, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+24], ax
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+26], 0
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+27], 0
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Clear@COtherArc@NCab@NArchive@@QAEXXZ	; NArchive::NCab::COtherArc::Clear
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Clear@COtherArc@NCab@NArchive@@QAEXXZ	; NArchive::NCab::COtherArc::Clear
; Line 65
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CArchInfo@NCab@NArchive@@QAEXXZ ENDP		; NArchive::NCab::CArchInfo::Clear
_TEXT	ENDS
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@COtherArc@NCab@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@COtherArc@NCab@NArchive@@QAEXXZ PROC		; NArchive::NCab::COtherArc::Clear, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 25
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@COtherArc@NCab@NArchive@@QAEXXZ ENDP		; NArchive::NCab::COtherArc::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_basicSize$ = 8						; size = 4
_headerSize$ = 12					; size = 4
?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z PROC ; NArchive::NCab::CSignatureFinder::GetTotalCapacity, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _headerSize$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 90
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 32			; 00000020H
	jmp	SHORT $LN3@GetTotalCa
$LN2@GetTotalCa:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN3@GetTotalCa:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN1@GetTotalCa
	jmp	SHORT $LN2@GetTotalCa
$LN1@GetTotalCa:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _basicSize$[ebp]
	add	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	add	eax, 16					; 00000010H
; Line 93
	mov	esp, ebp
	pop	ebp
	ret	8
?GetTotalCapacity@CSignatureFinder@NCab@NArchive@@QAEIII@Z ENDP ; NArchive::NCab::CSignatureFinder::GetTotalCapacity
_TEXT	ENDS
PUBLIC	??_7CLimitedSequentialInStream@@6B@		; CLimitedSequentialInStream::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??_R4CLimitedSequentialInStream@@6B@		; CLimitedSequentialInStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCLimitedSequentialInStream@@@8		; CLimitedSequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3CLimitedSequentialInStream@@8		; CLimitedSequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CLimitedSequentialInStream@@8		; CLimitedSequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CLimitedSequentialInStream@@8	; CLimitedSequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z ; CLimitedSequentialInStream::QueryInterface
PUBLIC	?AddRef@CLimitedSequentialInStream@@UAGKXZ	; CLimitedSequentialInStream::AddRef
PUBLIC	?Release@CLimitedSequentialInStream@@UAGKXZ	; CLimitedSequentialInStream::Release
EXTRN	?Read@CLimitedSequentialInStream@@UAGJPAXIPAI@Z:PROC ; CLimitedSequentialInStream::Read
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CLimitedSequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CLimitedSequentialInStream@@8 DD FLAT:??_R0?AVCLimitedSequentialInStream@@@8 ; CLimitedSequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CLimitedSequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CLimitedSequentialInStream@@8
rdata$r	SEGMENT
??_R2CLimitedSequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@CLimitedSequentialInStream@@8 ; CLimitedSequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CLimitedSequentialInStream@@8
rdata$r	SEGMENT
??_R3CLimitedSequentialInStream@@8 DD 00H		; CLimitedSequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CLimitedSequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCLimitedSequentialInStream@@@8
_DATA	SEGMENT
??_R0?AVCLimitedSequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; CLimitedSequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCLimitedSequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CLimitedSequentialInStream@@6B@
rdata$r	SEGMENT
??_R4CLimitedSequentialInStream@@6B@ DD 00H		; CLimitedSequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCLimitedSequentialInStream@@@8
	DD	FLAT:??_R3CLimitedSequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7CLimitedSequentialInStream@@6B@
CONST	SEGMENT
??_7CLimitedSequentialInStream@@6B@ DD FLAT:??_R4CLimitedSequentialInStream@@6B@ ; CLimitedSequentialInStream::`vftable'
	DD	FLAT:?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CLimitedSequentialInStream@@UAGKXZ
	DD	FLAT:?Release@CLimitedSequentialInStream@@UAGKXZ
	DD	FLAT:?Read@CLimitedSequentialInStream@@UAGJPAXIPAI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CLimitedSequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLimitedSequentialInStream@@QAE@XZ PROC		; CLimitedSequentialInStream::CLimitedSequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CLimitedSequentialInStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CLimitedSequentialInStream@@QAE@XZ ENDP		; CLimitedSequentialInStream::CLimitedSequentialInStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ISequentialInStream:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z PROC ; CLimitedSequentialInStream::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\limitedstreams.h
; Line 29
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN3@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ISequentialInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN5@QueryInter
$LN3@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN5@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CLimitedSequentialInStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; CLimitedSequentialInStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CLimitedSequentialInStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CLimitedSequentialInStream@@UAGKXZ PROC		; CLimitedSequentialInStream::AddRef, COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CLimitedSequentialInStream@@UAGKXZ ENDP		; CLimitedSequentialInStream::AddRef
_TEXT	ENDS
PUBLIC	??_GCLimitedSequentialInStream@@QAEPAXI@Z	; CLimitedSequentialInStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CLimitedSequentialInStream@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T70187 = -8						; size = 4
$T70186 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CLimitedSequentialInStream@@UAGKXZ PROC	; CLimitedSequentialInStream::Release, COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T70187[ebp], edx
	mov	eax, DWORD PTR $T70187[ebp]
	mov	DWORD PTR $T70186[ebp], eax
	cmp	DWORD PTR $T70186[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T70186[ebp]
	call	??_GCLimitedSequentialInStream@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CLimitedSequentialInStream@@UAGKXZ ENDP	; CLimitedSequentialInStream::Release
_TEXT	ENDS
PUBLIC	??1CLimitedSequentialInStream@@QAE@XZ		; CLimitedSequentialInStream::~CLimitedSequentialInStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCLimitedSequentialInStream@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCLimitedSequentialInStream@@QAEPAXI@Z PROC		; CLimitedSequentialInStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CLimitedSequentialInStream@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCLimitedSequentialInStream@@QAEPAXI@Z ENDP		; CLimitedSequentialInStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CLimitedSequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLimitedSequentialInStream@@QAE@XZ PROC		; CLimitedSequentialInStream::~CLimitedSequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CLimitedSequentialInStream@@QAE@XZ ENDP		; CLimitedSequentialInStream::~CLimitedSequentialInStream
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z ; NArchive::NCab::CInArchive::Open
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
;	COMDAT ??_R0?AUCInBufferException@@@8
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$3
__catchsym$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$3 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$0
	DD	08H
	DD	FLAT:??_R0?AUCUnexpectedEndException@NCab@NArchive@@@8
	DD	00H
	DD	FLAT:__catch$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$1
__ehfuncinfo$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -44						; size = 4
$T70206 = -40						; size = 4
$T70205 = -36						; size = 4
_e$69435 = -28						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_db$ = 8						; size = 4
_searchHeaderSizeLimit$ = 12				; size = 4
?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z PROC ; NArchive::NCab::CInArchive::Open
; _this$ = ecx
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 342
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 343
	mov	eax, DWORD PTR _searchHeaderSizeLimit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _db$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open2@CInArchive@NCab@NArchive@@AAEJAAUCDatabaseEx@23@PB_K@Z ; NArchive::NCab::CInArchive::Open2
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR tv76[ebp]
	jmp	SHORT $LN2@Open
__catch$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$0:
; Line 345
	mov	edx, DWORD PTR _e$69435[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T70205[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN8@Open
	ret	0
	mov	eax, __tryend$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$2
	ret	0
__catch$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$1:
; Line 346
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+50], 1
	mov	DWORD PTR $T70206[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@Open
	ret	0
	mov	eax, __tryend$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$2
	ret	0
__tryend$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z$2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Open
$LN10@Open:
	mov	eax, DWORD PTR $T70206[ebp]
	jmp	SHORT $LN2@Open
$LN9@Open:
	jmp	SHORT $LN2@Open
$LN8@Open:
; Line 345
	mov	eax, DWORD PTR $T70205[ebp]
$LN2@Open:
; Line 347
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN16@Open:
	DD	1
	DD	$LN15@Open
$LN15@Open:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN13@Open
$LN13@Open:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z ENDP ; NArchive::NCab::CInArchive::Open
PUBLIC	??8@YG_NABVAString@@0@Z				; operator==
PUBLIC	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
PUBLIC	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
PUBLIC	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
PUBLIC	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
PUBLIC	?AreItemsEqual@CMvDatabaseEx@NCab@NArchive@@AAE_NII@Z ; NArchive::NCab::CMvDatabaseEx::AreItemsEqual
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv146 = -32						; size = 4
_item2$ = -28						; size = 4
_item1$ = -24						; size = 4
_db2$ = -20						; size = 4
_db1$ = -16						; size = 4
_p2$ = -12						; size = 4
_p1$ = -8						; size = 4
_this$ = -4						; size = 4
_i1$ = 8						; size = 4
_i2$ = 12						; size = 4
?AreItemsEqual@CMvDatabaseEx@NCab@NArchive@@AAE_NII@Z PROC ; NArchive::NCab::CMvDatabaseEx::AreItemsEqual
; _this$ = ecx
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 375
	mov	eax, DWORD PTR _i1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR _p1$[ebp], eax
; Line 376
	mov	ecx, DWORD PTR _i2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR _p2$[ebp], eax
; Line 377
	mov	edx, DWORD PTR _p1$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db1$[ebp], eax
; Line 378
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db2$[ebp], eax
; Line 379
	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _db1$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item1$[ebp], eax
; Line 380
	mov	edx, DWORD PTR _p2$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _db2$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item2$[ebp], eax
; Line 384
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	esi, eax
	mov	edx, DWORD PTR _p2$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	cmp	esi, eax
	jne	SHORT $LN3@AreItemsEq
	mov	eax, DWORD PTR _item1$[ebp]
	mov	ecx, DWORD PTR _item2$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+12]
	jne	SHORT $LN3@AreItemsEq
	mov	eax, DWORD PTR _item1$[ebp]
	mov	ecx, DWORD PTR _item2$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN3@AreItemsEq
	mov	eax, DWORD PTR _item2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _item1$[ebp]
	push	ecx
	call	??8@YG_NABVAString@@0@Z			; operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@AreItemsEq
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN4@AreItemsEq
$LN3@AreItemsEq:
	mov	DWORD PTR tv146[ebp], 0
$LN4@AreItemsEq:
	mov	al, BYTE PTR tv146[ebp]
; Line 385
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AreItemsEqual@CMvDatabaseEx@NCab@NArchive@@AAE_NII@Z ENDP ; NArchive::NCab::CMvDatabaseEx::AreItemsEqual
_TEXT	ENDS
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8@YG_NABVAString@@0@Z
_TEXT	SEGMENT
tv77 = -4						; size = 4
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
??8@YG_NABVAString@@0@Z PROC				; operator==, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 390
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	esi, eax
	mov	ecx, DWORD PTR _s2$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	ecx, DWORD PTR _s2$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv77[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??8@YG_NABVAString@@0@Z ENDP				; operator==
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@H@@QBEABHI@Z			; CRecordVector<int>::operator[]
PUBLIC	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z
_TEXT	SEGMENT
_db$ = -8						; size = 4
_this$ = -4						; size = 4
_mvi$ = 8						; size = 4
?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z PROC ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _mvi$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db$[ebp], eax
; Line 133
	mov	edx, DWORD PTR _mvi$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??A?$CRecordVector@H@@QBEABHI@Z		; CRecordVector<int>::operator[]
	mov	esi, eax
	mov	ecx, DWORD PTR _db$[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	push	eax
	mov	ecx, DWORD PTR _mvi$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	ecx, eax
	call	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ; NArchive::NCab::CItem::GetFolderIndex
	add	eax, DWORD PTR [esi]
; Line 134
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ENDP ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@I@@QAEII@Z			; CRecordVector<unsigned int>::Add
PUBLIC	?Size@?$CRecordVector@I@@QBEIXZ			; CRecordVector<unsigned int>::Size
PUBLIC	?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z ; CRecordVector<NArchive::NCab::CMvItem>::DeleteFrom
PUBLIC	?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z ; CRecordVector<NArchive::NCab::CMvItem>::Sort
PUBLIC	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
PUBLIC	?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z ; CRecordVector<NArchive::NCab::CMvItem>::Add
PUBLIC	?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CItem>::Size
PUBLIC	?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ ; NArchive::NCab::CDatabase::GetNumberOfNewFolders
PUBLIC	?Add@?$CRecordVector@H@@QAEIH@Z			; CRecordVector<int>::Add
PUBLIC	?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CDatabase::IsTherePrevFolder
PUBLIC	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
PUBLIC	?Clear@?$CRecordVector@I@@QAEXXZ		; CRecordVector<unsigned int>::Clear
PUBLIC	?Clear@?$CRecordVector@H@@QAEXXZ		; CRecordVector<int>::Clear
PUBLIC	?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CMvItem>::Clear
PUBLIC	?FillSortAndShrink@CMvDatabaseEx@NCab@NArchive@@QAEXXZ ; NArchive::NCab::CMvDatabaseEx::FillSortAndShrink
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv164 = -60						; size = 4
_folderIndex$69515 = -56				; size = 4
_i$69511 = -52						; size = 4
_i$69506 = -48						; size = 4
_j$69505 = -44						; size = 4
_i$69499 = -40						; size = 4
_mvItem$69498 = -32					; size = 8
_curOffset$69496 = -20					; size = 4
_db$69495 = -16						; size = 4
_v$69491 = -12						; size = 4
_offset$ = -8						; size = 4
_this$ = -4						; size = 4
?FillSortAndShrink@CMvDatabaseEx@NCab@NArchive@@QAEXXZ PROC ; NArchive::NCab::CMvDatabaseEx::FillSortAndShrink
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 389
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CMvItem>::Clear
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Clear@?$CRecordVector@H@@QAEXXZ	; CRecordVector<int>::Clear
; Line 391
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Clear@?$CRecordVector@I@@QAEXXZ	; CRecordVector<unsigned int>::Clear
; Line 392
	mov	DWORD PTR _offset$[ebp], 0
; Line 393
	mov	DWORD PTR _v$69491[ebp], 0
	jmp	SHORT $LN16@FillSortAn
$LN15@FillSortAn:
	mov	eax, DWORD PTR _v$69491[ebp]
	add	eax, 1
	mov	DWORD PTR _v$69491[ebp], eax
$LN16@FillSortAn:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	cmp	DWORD PTR _v$69491[ebp], eax
	jae	$LN14@FillSortAn
; Line 395
	mov	ecx, DWORD PTR _v$69491[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db$69495[ebp], eax
; Line 396
	mov	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _curOffset$69496[ebp], edx
; Line 397
	mov	ecx, DWORD PTR _db$69495[ebp]
	call	?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CDatabase::IsTherePrevFolder
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@FillSortAn
; Line 398
	mov	ecx, DWORD PTR _curOffset$69496[ebp]
	sub	ecx, 1
	mov	DWORD PTR _curOffset$69496[ebp], ecx
$LN13@FillSortAn:
; Line 399
	mov	edx, DWORD PTR _curOffset$69496[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Add@?$CRecordVector@H@@QAEIH@Z		; CRecordVector<int>::Add
; Line 400
	mov	ecx, DWORD PTR _db$69495[ebp]
	call	?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ ; NArchive::NCab::CDatabase::GetNumberOfNewFolders
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 403
	mov	eax, DWORD PTR _v$69491[ebp]
	mov	DWORD PTR _mvItem$69498[ebp], eax
; Line 404
	mov	DWORD PTR _i$69499[ebp], 0
	jmp	SHORT $LN12@FillSortAn
$LN11@FillSortAn:
	mov	ecx, DWORD PTR _i$69499[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$69499[ebp], ecx
$LN12@FillSortAn:
	mov	ecx, DWORD PTR _db$69495[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CItem>::Size
	cmp	DWORD PTR _i$69499[ebp], eax
	jae	SHORT $LN10@FillSortAn
; Line 406
	mov	edx, DWORD PTR _i$69499[ebp]
	mov	DWORD PTR _mvItem$69498[ebp+4], edx
; Line 407
	mov	eax, DWORD PTR _mvItem$69498[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _mvItem$69498[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z ; CRecordVector<NArchive::NCab::CMvItem>::Add
; Line 408
	jmp	SHORT $LN11@FillSortAn
$LN10@FillSortAn:
; Line 409
	jmp	$LN15@FillSortAn
$LN14@FillSortAn:
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
	cmp	eax, 1
	jbe	$LN9@FillSortAn
; Line 413
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	push	OFFSET ?CompareMvItems@NCab@NArchive@@YGHPBUCMvItem@12@0PAX@Z ; NArchive::NCab::CompareMvItems
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z ; CRecordVector<NArchive::NCab::CMvItem>::Sort
; Line 414
	mov	DWORD PTR _j$69505[ebp], 1
; Line 415
	mov	DWORD PTR _i$69506[ebp], 1
; Line 416
	jmp	SHORT $LN8@FillSortAn
$LN7@FillSortAn:
	mov	eax, DWORD PTR _i$69506[ebp]
	add	eax, 1
	mov	DWORD PTR _i$69506[ebp], eax
$LN8@FillSortAn:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
	cmp	DWORD PTR _i$69506[ebp], eax
	jae	SHORT $LN6@FillSortAn
; Line 417
	mov	ecx, DWORD PTR _i$69506[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _i$69506[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AreItemsEqual@CMvDatabaseEx@NCab@NArchive@@AAE_NII@Z ; NArchive::NCab::CMvDatabaseEx::AreItemsEqual
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@FillSortAn
; Line 418
	mov	ecx, DWORD PTR _j$69505[ebp]
	mov	DWORD PTR tv164[ebp], ecx
	mov	edx, DWORD PTR _j$69505[ebp]
	add	edx, 1
	mov	DWORD PTR _j$69505[ebp], edx
	mov	eax, DWORD PTR tv164[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	esi, eax
	mov	ecx, DWORD PTR _i$69506[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [esi+4], eax
$LN5@FillSortAn:
; Line 419
	jmp	SHORT $LN7@FillSortAn
$LN6@FillSortAn:
	mov	ecx, DWORD PTR _j$69505[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z ; CRecordVector<NArchive::NCab::CMvItem>::DeleteFrom
$LN9@FillSortAn:
; Line 422
	mov	DWORD PTR _i$69511[ebp], 0
	jmp	SHORT $LN4@FillSortAn
$LN3@FillSortAn:
	mov	edx, DWORD PTR _i$69511[ebp]
	add	edx, 1
	mov	DWORD PTR _i$69511[ebp], edx
$LN4@FillSortAn:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
	cmp	DWORD PTR _i$69511[ebp], eax
	jae	SHORT $LN17@FillSortAn
; Line 424
	mov	eax, DWORD PTR _i$69511[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR _folderIndex$69515[ebp], eax
; Line 425
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Size@?$CRecordVector@I@@QBEIXZ		; CRecordVector<unsigned int>::Size
	cmp	DWORD PTR _folderIndex$69515[ebp], eax
	jl	SHORT $LN1@FillSortAn
; Line 426
	mov	ecx, DWORD PTR _i$69511[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Add@?$CRecordVector@I@@QAEII@Z		; CRecordVector<unsigned int>::Add
$LN1@FillSortAn:
; Line 427
	jmp	SHORT $LN3@FillSortAn
$LN17@FillSortAn:
; Line 428
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@FillSortAn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN21@FillSortAn:
	DD	1
	DD	$LN20@FillSortAn
$LN20@FillSortAn:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN19@FillSortAn
$LN19@FillSortAn:
	DB	109					; 0000006dH
	DB	118					; 00000076H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
?FillSortAndShrink@CMvDatabaseEx@NCab@NArchive@@QAEXXZ ENDP ; NArchive::NCab::CMvDatabaseEx::FillSortAndShrink
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_i$68825 = -8						; size = 4
_this$ = -4						; size = 4
?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ PROC ; NArchive::NCab::CDatabase::IsTherePrevFolder, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	DWORD PTR _i$68825[ebp], 0
	jmp	SHORT $LN4@IsTherePre
$LN3@IsTherePre:
	mov	eax, DWORD PTR _i$68825[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68825[ebp], eax
$LN4@IsTherePre:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CItem>::Size
	cmp	DWORD PTR _i$68825[ebp], eax
	jae	SHORT $LN2@IsTherePre
; Line 94
	mov	ecx, DWORD PTR _i$68825[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	ecx, eax
	call	?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CItem::ContinuedFromPrev
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@IsTherePre
; Line 95
	mov	al, 1
	jmp	SHORT $LN5@IsTherePre
$LN1@IsTherePre:
; Line 96
	jmp	SHORT $LN3@IsTherePre
$LN2@IsTherePre:
	xor	al, al
$LN5@IsTherePre:
; Line 97
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ ENDP ; NArchive::NCab::CDatabase::IsTherePrevFolder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ PROC ; NArchive::NCab::CDatabase::GetNumberOfNewFolders, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR _res$[ebp], eax
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CDatabase::IsTherePrevFolder
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@GetNumberO
; Line 103
	mov	ecx, DWORD PTR _res$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _res$[ebp], ecx
$LN1@GetNumberO:
; Line 104
	mov	eax, DWORD PTR _res$[ebp]
; Line 105
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumberOfNewFolders@CDatabase@NCab@NArchive@@QBEHXZ ENDP ; NArchive::NCab::CDatabase::GetNumberOfNewFolders
_TEXT	ENDS
PUBLIC	??$MyCompare@I@@YGHII@Z				; MyCompare<unsigned int>
PUBLIC	??$MyCompare@H@@YGHHH@Z				; MyCompare<int>
PUBLIC	?IsDir@CItem@NCab@NArchive@@QBE_NXZ		; NArchive::NCab::CItem::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___tt$69474 = -48					; size = 4
___tt$69472 = -44					; size = 4
___tt$69465 = -40					; size = 4
___tt$69458 = -36					; size = 4
_f2$ = -32						; size = 4
_f1$ = -28						; size = 4
_isDir2$ = -22						; size = 1
_isDir1$ = -21						; size = 1
_item2$ = -20						; size = 4
_item1$ = -16						; size = 4
_db2$ = -12						; size = 4
_db1$ = -8						; size = 4
_mvDb$ = -4						; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
_param$ = 16						; size = 4
?CompareMvItems@NCab@NArchive@@YGHPBUCMvItem@12@0PAX@Z PROC ; NArchive::NCab::CompareMvItems
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 355
	mov	eax, DWORD PTR _param$[ebp]
	mov	DWORD PTR _mvDb$[ebp], eax
; Line 356
	mov	ecx, DWORD PTR _p1$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _mvDb$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db1$[ebp], eax
; Line 357
	mov	eax, DWORD PTR _p2$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _mvDb$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db2$[ebp], eax
; Line 358
	mov	edx, DWORD PTR _p1$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _db1$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item1$[ebp], eax
; Line 359
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _db2$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item2$[ebp], eax
; Line 360
	mov	ecx, DWORD PTR _item1$[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	mov	BYTE PTR _isDir1$[ebp], al
; Line 361
	mov	ecx, DWORD PTR _item2$[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	mov	BYTE PTR _isDir2$[ebp], al
; Line 362
	movzx	eax, BYTE PTR _isDir1$[ebp]
	test	eax, eax
	je	SHORT $LN6@CompareMvI
	movzx	ecx, BYTE PTR _isDir2$[ebp]
	test	ecx, ecx
	jne	SHORT $LN6@CompareMvI
	or	eax, -1
	jmp	$LN7@CompareMvI
$LN6@CompareMvI:
; Line 363
	movzx	edx, BYTE PTR _isDir2$[ebp]
	test	edx, edx
	je	SHORT $LN5@CompareMvI
	movzx	eax, BYTE PTR _isDir1$[ebp]
	test	eax, eax
	jne	SHORT $LN5@CompareMvI
	mov	eax, 1
	jmp	$LN7@CompareMvI
$LN5@CompareMvI:
; Line 364
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _mvDb$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR _f1$[ebp], eax
; Line 365
	mov	edx, DWORD PTR _p2$[ebp]
	push	edx
	mov	ecx, DWORD PTR _mvDb$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR _f2$[ebp], eax
; Line 366
	mov	eax, DWORD PTR _f2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f1$[ebp]
	push	ecx
	call	??$MyCompare@H@@YGHHH@Z			; MyCompare<int>
	mov	DWORD PTR ___tt$69458[ebp], eax
	cmp	DWORD PTR ___tt$69458[ebp], 0
	je	SHORT $LN4@CompareMvI
	mov	eax, DWORD PTR ___tt$69458[ebp]
	jmp	SHORT $LN7@CompareMvI
$LN4@CompareMvI:
; Line 367
	mov	edx, DWORD PTR _item2$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _item1$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	??$MyCompare@I@@YGHII@Z			; MyCompare<unsigned int>
	mov	DWORD PTR ___tt$69465[ebp], eax
	cmp	DWORD PTR ___tt$69465[ebp], 0
	je	SHORT $LN3@CompareMvI
	mov	eax, DWORD PTR ___tt$69465[ebp]
	jmp	SHORT $LN7@CompareMvI
$LN3@CompareMvI:
; Line 368
	mov	eax, DWORD PTR _item2$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _item1$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	??$MyCompare@I@@YGHII@Z			; MyCompare<unsigned int>
	mov	DWORD PTR ___tt$69472[ebp], eax
	cmp	DWORD PTR ___tt$69472[ebp], 0
	je	SHORT $LN2@CompareMvI
	mov	eax, DWORD PTR ___tt$69472[ebp]
	jmp	SHORT $LN7@CompareMvI
$LN2@CompareMvI:
; Line 369
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$MyCompare@I@@YGHII@Z			; MyCompare<unsigned int>
	mov	DWORD PTR ___tt$69474[ebp], eax
	cmp	DWORD PTR ___tt$69474[ebp], 0
	je	SHORT $LN1@CompareMvI
	mov	eax, DWORD PTR ___tt$69474[ebp]
	jmp	SHORT $LN7@CompareMvI
$LN1@CompareMvI:
; Line 370
	mov	edx, DWORD PTR _p2$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$MyCompare@I@@YGHII@Z			; MyCompare<unsigned int>
$LN7@CompareMvI:
; Line 371
	pop	edi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CompareMvItems@NCab@NArchive@@YGHPBUCMvItem@12@0PAX@Z ENDP ; NArchive::NCab::CompareMvItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDir@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CItem@NCab@NArchive@@QBE_NXZ PROC		; NArchive::NCab::CItem::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabitem.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+30]
	and	eax, 16					; 00000010H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CItem@NCab@NArchive@@QBE_NXZ ENDP		; NArchive::NCab::CItem::IsDir
_TEXT	ENDS
PUBLIC	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ	; NArchive::NCab::CItem::GetEndOffset
PUBLIC	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
PUBLIC	?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ ; CRecordVector<NArchive::NCab::CFolder>::Front
PUBLIC	?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ ; CRecordVector<NArchive::NCab::CFolder>::Back
PUBLIC	?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ ; CRecordVector<NArchive::NCab::CFolder>::IsEmpty
PUBLIC	?Check@CMvDatabaseEx@NCab@NArchive@@QAE_NXZ	; NArchive::NCab::CMvDatabaseEx::Check
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv260 = -76						; size = 8
tv246 = -68						; size = 8
_folderIndex$69547 = -60				; size = 4
_item$69545 = -56					; size = 4
_fIndex$69542 = -52					; size = 4
_mvItem$69541 = -48					; size = 4
_i$69537 = -44						; size = 4
_prevFolder$ = -40					; size = 4
_endPos$ = -36						; size = 8
_beginPos$ = -28					; size = 4
_f1$69531 = -24						; size = 4
_f0$69530 = -20						; size = 4
_db0$69527 = -16					; size = 4
_db1$69525 = -12					; size = 4
_v$69521 = -8						; size = 4
_this$ = -4						; size = 4
?Check@CMvDatabaseEx@NCab@NArchive@@QAE_NXZ PROC	; NArchive::NCab::CMvDatabaseEx::Check
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.cpp
; Line 431
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 432
	mov	DWORD PTR _v$69521[ebp], 1
	jmp	SHORT $LN17@Check
$LN16@Check:
	mov	eax, DWORD PTR _v$69521[ebp]
	add	eax, 1
	mov	DWORD PTR _v$69521[ebp], eax
$LN17@Check:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	cmp	DWORD PTR _v$69521[ebp], eax
	jae	$LN15@Check
; Line 434
	mov	ecx, DWORD PTR _v$69521[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db1$69525[ebp], eax
; Line 435
	mov	ecx, DWORD PTR _db1$69525[ebp]
	call	?IsTherePrevFolder@CDatabase@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CDatabase::IsTherePrevFolder
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@Check
; Line 437
	mov	eax, DWORD PTR _v$69521[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db0$69527[ebp], eax
; Line 438
	mov	ecx, DWORD PTR _db0$69527[ebp]
	call	?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ ; CRecordVector<NArchive::NCab::CFolder>::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@Check
	mov	ecx, DWORD PTR _db1$69525[ebp]
	call	?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ ; CRecordVector<NArchive::NCab::CFolder>::IsEmpty
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN13@Check
$LN12@Check:
; Line 439
	xor	al, al
	jmp	$LN18@Check
$LN13@Check:
; Line 440
	mov	ecx, DWORD PTR _db0$69527[ebp]
	call	?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ ; CRecordVector<NArchive::NCab::CFolder>::Back
	mov	DWORD PTR _f0$69530[ebp], eax
; Line 441
	mov	ecx, DWORD PTR _db1$69525[ebp]
	call	?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ ; CRecordVector<NArchive::NCab::CFolder>::Front
	mov	DWORD PTR _f1$69531[ebp], eax
; Line 443
	mov	eax, DWORD PTR _f0$69530[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	mov	edx, DWORD PTR _f1$69531[ebp]
	movzx	eax, BYTE PTR [edx+6]
	cmp	ecx, eax
	jne	SHORT $LN10@Check
	mov	ecx, DWORD PTR _f0$69530[ebp]
	movzx	edx, BYTE PTR [ecx+7]
	mov	eax, DWORD PTR _f1$69531[ebp]
	movzx	ecx, BYTE PTR [eax+7]
	cmp	edx, ecx
	je	SHORT $LN14@Check
$LN10@Check:
; Line 444
	xor	al, al
	jmp	$LN18@Check
$LN14@Check:
; Line 446
	jmp	$LN16@Check
$LN15@Check:
; Line 447
	mov	DWORD PTR _beginPos$[ebp], 0
; Line 448
	mov	DWORD PTR _endPos$[ebp], 0
	mov	DWORD PTR _endPos$[ebp+4], 0
; Line 449
	mov	DWORD PTR _prevFolder$[ebp], -2		; fffffffeH
; Line 450
	mov	DWORD PTR _i$69537[ebp], 0
	jmp	SHORT $LN9@Check
$LN8@Check:
	mov	edx, DWORD PTR _i$69537[ebp]
	add	edx, 1
	mov	DWORD PTR _i$69537[ebp], edx
$LN9@Check:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
	cmp	DWORD PTR _i$69537[ebp], eax
	jae	$LN7@Check
; Line 452
	mov	eax, DWORD PTR _i$69537[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR _mvItem$69541[ebp], eax
; Line 453
	mov	ecx, DWORD PTR _mvItem$69541[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR _fIndex$69542[ebp], eax
; Line 454
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Size@?$CRecordVector@I@@QBEIXZ		; CRecordVector<unsigned int>::Size
	cmp	DWORD PTR _fIndex$69542[ebp], eax
	jl	SHORT $LN6@Check
; Line 455
	xor	al, al
	jmp	$LN18@Check
$LN6@Check:
; Line 456
	mov	edx, DWORD PTR _mvItem$69541[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _mvItem$69541[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item$69545[ebp], eax
; Line 457
	mov	ecx, DWORD PTR _item$69545[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Check
; Line 458
	jmp	$LN8@Check
$LN5@Check:
; Line 459
	mov	ecx, DWORD PTR _mvItem$69541[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR _folderIndex$69547[ebp], eax
; Line 460
	mov	edx, DWORD PTR _folderIndex$69547[ebp]
	cmp	edx, DWORD PTR _prevFolder$[ebp]
	je	SHORT $LN4@Check
; Line 461
	mov	eax, DWORD PTR _folderIndex$69547[ebp]
	mov	DWORD PTR _prevFolder$[ebp], eax
; Line 462
	jmp	SHORT $LN3@Check
$LN4@Check:
; Line 463
	mov	ecx, DWORD PTR _item$69545[ebp]
	mov	edx, DWORD PTR [ecx+12]
	xor	eax, eax
	mov	DWORD PTR tv246[ebp], edx
	mov	DWORD PTR tv246[ebp+4], eax
	mov	ecx, DWORD PTR tv246[ebp+4]
	cmp	ecx, DWORD PTR _endPos$[ebp+4]
	ja	SHORT $LN3@Check
	jb	SHORT $LN20@Check
	mov	edx, DWORD PTR tv246[ebp]
	cmp	edx, DWORD PTR _endPos$[ebp]
	jae	SHORT $LN3@Check
$LN20@Check:
	mov	eax, DWORD PTR _item$69545[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _beginPos$[ebp]
	jne	SHORT $LN1@Check
	mov	ecx, DWORD PTR _item$69545[ebp]
	call	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CItem::GetEndOffset
	mov	DWORD PTR tv260[ebp], eax
	mov	DWORD PTR tv260[ebp+4], edx
	mov	edx, DWORD PTR tv260[ebp]
	cmp	edx, DWORD PTR _endPos$[ebp]
	jne	SHORT $LN1@Check
	mov	eax, DWORD PTR tv260[ebp+4]
	cmp	eax, DWORD PTR _endPos$[ebp+4]
	je	SHORT $LN3@Check
$LN1@Check:
; Line 464
	xor	al, al
	jmp	SHORT $LN18@Check
$LN3@Check:
; Line 465
	mov	ecx, DWORD PTR _item$69545[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _beginPos$[ebp], edx
; Line 466
	mov	ecx, DWORD PTR _item$69545[ebp]
	call	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CItem::GetEndOffset
	mov	DWORD PTR _endPos$[ebp], eax
	mov	DWORD PTR _endPos$[ebp+4], edx
; Line 467
	jmp	$LN8@Check
$LN7@Check:
; Line 468
	mov	al, 1
$LN18@Check:
; Line 469
	pop	edi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Check@CMvDatabaseEx@NCab@NArchive@@QAE_NXZ ENDP	; NArchive::NCab::CMvDatabaseEx::Check
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ PROC		; NArchive::NCab::CItem::GetEndOffset, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabitem.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	xor	edx, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ENDP		; NArchive::NCab::CItem::GetEndOffset
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@2
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@2:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@2
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@2:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator IInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator IInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@I@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@I@@QBEIXZ PROC			; CRecordVector<unsigned int>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@I@@QBEIXZ ENDP			; CRecordVector<unsigned int>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@I@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@I@@QAEXXZ PROC			; CRecordVector<unsigned int>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@I@@QAEXXZ ENDP			; CRecordVector<unsigned int>::Clear
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ	; CRecordVector<unsigned int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@I@@QAEII@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@I@@QAEII@Z PROC			; CRecordVector<unsigned int>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ ; CRecordVector<unsigned int>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@I@@QAEII@Z ENDP			; CRecordVector<unsigned int>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
$T70277 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::~CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T70277[ebp], ecx
	mov	edx, DWORD PTR $T70277[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QAEPAEXZ PROC				; CBuffer<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QAEPAEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CBuffer@E@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CBuffer@E@@QBEIXZ PROC				; CBuffer<unsigned char>::Size, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CBuffer@E@@QBEIXZ ENDP				; CBuffer<unsigned char>::Size
_TEXT	ENDS
PUBLIC	?Free@?$CBuffer@E@@QAEXXZ			; CBuffer<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Alloc@?$CBuffer@E@@QAEXI@Z
_TEXT	SEGMENT
$T70284 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?Alloc@?$CBuffer@E@@QAEXI@Z PROC			; CBuffer<unsigned char>::Alloc, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN3@Alloc
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 48
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN3@Alloc
; Line 50
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70284[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T70284[ebp]
	mov	DWORD PTR [eax], ecx
; Line 51
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@Alloc:
; Line 54
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Alloc@?$CBuffer@E@@QAEXI@Z ENDP			; CBuffer<unsigned char>::Alloc
_TEXT	ENDS
PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z
_TEXT	SEGMENT
$T70288 = -16						; size = 4
$T70287 = -12						; size = 4
_newBuffer$ = -8					; size = 4
_this$ = -4						; size = 4
_newSize$ = 8						; size = 4
_keepSize$ = 12						; size = 4
?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z PROC		; CBuffer<unsigned char>::ChangeSize_KeepData, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newSize$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@ChangeSize
; Line 76
	jmp	SHORT $LN4@ChangeSize
$LN3@ChangeSize:
; Line 77
	mov	DWORD PTR _newBuffer$[ebp], 0
; Line 78
	cmp	DWORD PTR _newSize$[ebp], 0
	je	SHORT $LN2@ChangeSize
; Line 80
	mov	edx, DWORD PTR _newSize$[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70287[ebp], eax
	mov	eax, DWORD PTR $T70287[ebp]
	mov	DWORD PTR _newBuffer$[ebp], eax
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@ChangeSize
; Line 82
	mov	edx, DWORD PTR _newSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _keepSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	push	eax
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _newBuffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@ChangeSize:
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T70288[ebp], ecx
	mov	edx, DWORD PTR $T70288[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newBuffer$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 86
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newSize$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@ChangeSize:
; Line 87
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ChangeSize_KeepData@?$CBuffer@E@@QAEXII@Z ENDP		; CBuffer<unsigned char>::ChangeSize_KeepData
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ PROC ; CRecordVector<NArchive::NCab::CFolder>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ PROC ; CRecordVector<NArchive::NCab::CFolder>::IsEmpty, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBE_NXZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z
_TEXT	SEGMENT
$T70296 = -12						; size = 4
$T70295 = -8						; size = 4
_this$ = -4						; size = 4
_newCapacity$ = 8					; size = 4
?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z PROC ; CRecordVector<NArchive::NCab::CFolder>::ClearAndReserve, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CFolder>::Clear
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN2@ClearAndRe
; Line 78
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T70295[ebp], eax
	mov	ecx, DWORD PTR $T70295[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 79
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 81
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70296[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T70296[ebp]
	mov	DWORD PTR [eax], ecx
; Line 82
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN2@ClearAndRe:
; Line 84
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearAndReserve@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXI@Z ENDP ; CRecordVector<NArchive::NCab::CFolder>::ClearAndReserve
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ PROC ; CRecordVector<NArchive::NCab::CFolder>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXXZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_item$ = 8						; size = 8
?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z PROC ; CRecordVector<NArchive::NCab::CFolder>::AddInReserved, COMDAT
; _this$ = ecx
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*8], edx
	mov	edx, DWORD PTR _item$[ebp+4]
	mov	DWORD PTR [eax+ecx*8+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 207
	mov	esp, ebp
	pop	ebp
	ret	8
?AddInReserved@?$CRecordVector@UCFolder@NCab@NArchive@@@@QAEXUCFolder@NCab@NArchive@@@Z ENDP ; CRecordVector<NArchive::NCab::CFolder>::AddInReserved
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ PROC ; CRecordVector<NArchive::NCab::CFolder>::Front, COMDAT
; _this$ = ecx
; Line 229
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?Front@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::Front
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ PROC ; CRecordVector<NArchive::NCab::CFolder>::Back, COMDAT
; _this$ = ecx
; Line 231
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*8-8]
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@XZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::Back
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ PROC ; CObjectVector<NArchive::NCab::CItem>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ENDP ; CObjectVector<NArchive::NCab::CItem>::Size
_TEXT	ENDS
PUBLIC	?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::ClearAndReserve
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newCapacity$ = 8					; size = 4
?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z PROC ; CObjectVector<NArchive::NCab::CItem>::ClearAndReserve, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ ; CObjectVector<NArchive::NCab::CItem>::Clear
	mov	eax, DWORD PTR _newCapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z ; CRecordVector<void *>::ClearAndReserve
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearAndReserve@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXI@Z ENDP ; CObjectVector<NArchive::NCab::CItem>::ClearAndReserve
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CItem>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CItem>::operator[]
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CItem>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CItem>::operator[]
_TEXT	ENDS
PUBLIC	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z	; CRecordVector<void *>::AddInReserved
PUBLIC	??0CItem@NCab@NArchive@@QAE@XZ			; NArchive::NCab::CItem::CItem
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ$0
__ehfuncinfo$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ
_TEXT	SEGMENT
tv71 = -32						; size = 4
$T70316 = -28						; size = 4
$T70315 = -24						; size = 4
_p$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ PROC ; CObjectVector<NArchive::NCab::CItem>::AddNewInReserved, COMDAT
; _this$ = ecx
; Line 471
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 472
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70316[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T70316[ebp], 0
	je	SHORT $LN3@AddNewInRe
	mov	ecx, DWORD PTR $T70316[ebp]
	call	??0CItem@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@AddNewInRe
$LN3@AddNewInRe:
	mov	DWORD PTR tv71[ebp], 0
$LN4@AddNewInRe:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T70315[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T70315[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 473
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ; CRecordVector<void *>::AddInReserved
; Line 474
	mov	eax, DWORD PTR _p$[ebp]
; Line 475
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ$0:
	mov	eax, DWORD PTR $T70316[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNewInReserved@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@XZ ENDP ; CObjectVector<NArchive::NCab::CItem>::AddNewInReserved
PUBLIC	?Clear@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::Clear
PUBLIC	??_GCItem@NCab@NArchive@@QAEPAXI@Z		; NArchive::NCab::CItem::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ
_TEXT	SEGMENT
tv75 = -20						; size = 4
$T70329 = -16						; size = 4
$T70328 = -12						; size = 4
_i$69678 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ PROC ; CObjectVector<NArchive::NCab::CItem>::Clear, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$69678[ebp], eax
$LN2@Clear:
	cmp	DWORD PTR _i$69678[ebp], 0
	je	SHORT $LN1@Clear
; Line 501
	mov	eax, DWORD PTR _i$69678[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$69678[ebp], eax
	mov	ecx, DWORD PTR _i$69678[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T70329[ebp], edx
	mov	eax, DWORD PTR $T70329[ebp]
	mov	DWORD PTR $T70328[ebp], eax
	cmp	DWORD PTR $T70328[ebp], 0
	je	SHORT $LN5@Clear
	push	1
	mov	ecx, DWORD PTR $T70328[ebp]
	call	??_GCItem@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 502
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 503
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CObjectVector@UCItem@NCab@NArchive@@@@QAEXXZ ENDP ; CObjectVector<NArchive::NCab::CItem>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::DeleteFrom, COMDAT
; _this$ = ecx
; Line 136
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 139
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXI@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::DeleteFrom
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ ; CRecordVector<NArchive::NCab::CMvItem>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 8
?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ ; CRecordVector<NArchive::NCab::CMvItem>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*8], edx
	mov	edx, DWORD PTR _item$[ebp+4]
	mov	DWORD PTR [eax+ecx*8+4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Add@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEIUCMvItem@NCab@NArchive@@@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
_TEXT	ENDS
PUBLIC	?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z ; CRecordVector<NArchive::NCab::CMvItem>::SortRefDown
PUBLIC	?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ ; CRecordVector<NArchive::NCab::CMvItem>::Front
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z
_TEXT	SEGMENT
_temp$69724 = -28					; size = 8
_i$69717 = -16						; size = 4
_p$ = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_compare$ = 8						; size = 4
_param$ = 12						; size = 4
?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::Sort, COMDAT
; _this$ = ecx
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _size$[ebp], ecx
; Line 344
	cmp	DWORD PTR _size$[ebp], 1
	ja	SHORT $LN7@Sort@2
; Line 345
	jmp	$LN8@Sort@2
$LN7@Sort@2:
; Line 346
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ ; CRecordVector<NArchive::NCab::CMvItem>::Front
	sub	eax, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 348
	mov	edx, DWORD PTR _size$[ebp]
	shr	edx, 1
	mov	DWORD PTR _i$69717[ebp], edx
$LN6@Sort@2:
; Line 350
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$69717[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z ; CRecordVector<NArchive::NCab::CMvItem>::SortRefDown
; Line 351
	mov	edx, DWORD PTR _i$69717[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$69717[ebp], edx
	jne	SHORT $LN6@Sort@2
$LN3@Sort@2:
; Line 355
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _temp$69724[ebp], edx
	mov	DWORD PTR _temp$69724[ebp+4], eax
; Line 356
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	esi, DWORD PTR _p$[ebp]
	mov	DWORD PTR [esi+ecx*8], edx
	mov	DWORD PTR [esi+ecx*8+4], eax
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 1
	mov	DWORD PTR _size$[ebp], edx
; Line 357
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _temp$69724[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _temp$69724[ebp+4]
	mov	DWORD PTR [eax+12], edx
; Line 358
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z ; CRecordVector<NArchive::NCab::CMvItem>::SortRefDown
; Line 360
	cmp	DWORD PTR _size$[ebp], 1
	ja	SHORT $LN3@Sort@2
$LN8@Sort@2:
; Line 361
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Sort@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN12@Sort@2:
	DD	1
	DD	$LN11@Sort@2
$LN11@Sort@2:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN10@Sort@2
$LN10@Sort@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?Sort@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXP6GHPBUCMvItem@NCab@NArchive@@0PAX@Z1@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Sort
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@H@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@H@@QAEXXZ PROC			; CRecordVector<int>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@H@@QAEXXZ ENDP			; CRecordVector<int>::Clear
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ	; CRecordVector<int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@H@@QAEIH@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@H@@QAEIH@Z PROC			; CRecordVector<int>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ ; CRecordVector<int>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@H@@QAEIH@Z ENDP			; CRecordVector<int>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@H@@QBEABHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@H@@QBEABHI@Z PROC			; CRecordVector<int>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@H@@QBEABHI@Z ENDP			; CRecordVector<int>::operator[]
_TEXT	ENDS
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CItem@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CItem@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CItem::CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CItem@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CItem::CItem
_TEXT	ENDS
PUBLIC	??1CItem@NCab@NArchive@@QAE@XZ			; NArchive::NCab::CItem::~CItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCItem@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCItem@NCab@NArchive@@QAEPAXI@Z PROC			; NArchive::NCab::CItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CItem@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCItem@NCab@NArchive@@QAEPAXI@Z ENDP			; NArchive::NCab::CItem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CItem@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CItem@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CItem::~CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CItem@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CItem::~CItem
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T70369 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T70369[ebp], ecx
	mov	edx, DWORD PTR $T70369[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
$T70375 = -12						; size = 4
$T70374 = -8						; size = 4
_this$ = -4						; size = 4
_newCapacity$ = 8					; size = 4
?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z PROC	; CRecordVector<void *>::ClearAndReserve, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN2@ClearAndRe@2
; Line 78
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T70374[ebp], eax
	mov	ecx, DWORD PTR $T70374[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 79
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 81
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70375[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T70375[ebp]
	mov	DWORD PTR [eax], ecx
; Line 82
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN2@ClearAndRe@2:
; Line 84
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearAndReserve@?$CRecordVector@PAX@@QAEXI@Z ENDP	; CRecordVector<void *>::ClearAndReserve
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@PAX@@QAEXXZ PROC			; CRecordVector<void *>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@PAX@@QAEXXZ ENDP			; CRecordVector<void *>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z PROC	; CRecordVector<void *>::AddInReserved, COMDAT
; _this$ = ecx
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 207
	mov	esp, ebp
	pop	ebp
	ret	4
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ENDP	; CRecordVector<void *>::AddInReserved
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ
_TEXT	SEGMENT
$T70387 = -20						; size = 4
$T70386 = -16						; size = 4
_p$69771 = -12						; size = 4
_newCapacity$69770 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ PROC	; CRecordVector<unsigned int>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69770[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$69770[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70386[ebp], eax
	mov	eax, DWORD PTR $T70386[ebp]
	mov	DWORD PTR _p$69771[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69771[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70387[ebp], edx
	mov	eax, DWORD PTR $T70387[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69771[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69770[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ ENDP	; CRecordVector<unsigned int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CBuffer@E@@QAEXXZ
_TEXT	SEGMENT
$T70390 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CBuffer@E@@QAEXXZ PROC				; CBuffer<unsigned char>::Free, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Free
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70390[ebp], edx
	mov	eax, DWORD PTR $T70390[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN1@Free:
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 22
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CBuffer@E@@QAEXXZ ENDP				; CBuffer<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ
_TEXT	SEGMENT
$T70394 = -20						; size = 4
$T70393 = -16						; size = 4
_p$69798 = -12						; size = 4
_newCapacity$69797 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::ReserveOnePosition, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@2
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69797[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$69797[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70393[ebp], eax
	mov	eax, DWORD PTR $T70393[ebp]
	mov	DWORD PTR _p$69798[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@2
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69798[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@2:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70394[ebp], edx
	mov	eax, DWORD PTR $T70394[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69798[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69797[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@2:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@UCMvItem@NCab@NArchive@@@@AAEXXZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::Front, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?Front@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@XZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Front
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z
_TEXT	SEGMENT
_s$69812 = -20						; size = 4
_temp$ = -12						; size = 8
_p$ = 8							; size = 4
_k$ = 12						; size = 4
_size$ = 16						; size = 4
_compare$ = 20						; size = 4
_param$ = 24						; size = 4
?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::SortRefDown, COMDAT
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 325
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _temp$[ebp], edx
	mov	DWORD PTR _temp$[ebp+4], eax
$LN5@SortRefDow:
; Line 328
	mov	ecx, DWORD PTR _k$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _s$69812[ebp], ecx
; Line 329
	mov	edx, DWORD PTR _s$69812[ebp]
	cmp	edx, DWORD PTR _size$[ebp]
	jbe	SHORT $LN3@SortRefDow
; Line 330
	jmp	$LN4@SortRefDow
$LN3@SortRefDow:
; Line 331
	mov	eax, DWORD PTR _s$69812[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jae	SHORT $LN2@SortRefDow
	mov	esi, esp
	mov	ecx, DWORD PTR _param$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$69812[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	push	ecx
	mov	edx, DWORD PTR _s$69812[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+8]
	push	ecx
	call	DWORD PTR _compare$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN2@SortRefDow
; Line 332
	mov	edx, DWORD PTR _s$69812[ebp]
	add	edx, 1
	mov	DWORD PTR _s$69812[ebp], edx
$LN2@SortRefDow:
; Line 333
	mov	esi, esp
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$69812[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	call	DWORD PTR _compare$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN1@SortRefDow
; Line 334
	jmp	SHORT $LN4@SortRefDow
$LN1@SortRefDow:
; Line 335
	mov	edx, DWORD PTR _s$69812[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR [eax+edx*8+4]
	mov	eax, DWORD PTR _k$[ebp]
	mov	esi, DWORD PTR _p$[ebp]
	mov	DWORD PTR [esi+eax*8], ecx
	mov	DWORD PTR [esi+eax*8+4], edx
; Line 336
	mov	ecx, DWORD PTR _s$69812[ebp]
	mov	DWORD PTR _k$[ebp], ecx
; Line 337
	jmp	$LN5@SortRefDow
$LN4@SortRefDow:
; Line 338
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
	mov	ecx, DWORD PTR _temp$[ebp+4]
	mov	DWORD PTR [eax+edx*8+4], ecx
; Line 339
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@SortRefDow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN10@SortRefDow:
	DD	1
	DD	$LN9@SortRefDow
$LN9@SortRefDow:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN8@SortRefDow
$LN8@SortRefDow:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?SortRefDown@?$CRecordVector@UCMvItem@NCab@NArchive@@@@SGXPAUCMvItem@NCab@NArchive@@IIP6GHPBU234@1PAX@Z2@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::SortRefDown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ
_TEXT	SEGMENT
$T70405 = -20						; size = 4
$T70404 = -16						; size = 4
_p$69820 = -12						; size = 4
_newCapacity$69819 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ PROC	; CRecordVector<int>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@3
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69819[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$69819[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T70404[ebp], eax
	mov	eax, DWORD PTR $T70404[ebp]
	mov	DWORD PTR _p$69820[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@3
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69820[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@3:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T70405[ebp], edx
	mov	eax, DWORD PTR $T70405[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69820[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69819[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@3:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ ENDP	; CRecordVector<int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@H@@YGHHH@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyCompare@H@@YGHHH@Z PROC				; MyCompare<int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN3@MyCompare
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN4@MyCompare
$LN3@MyCompare:
	mov	ecx, DWORD PTR _a$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR _b$[ebp]
	setne	dl
	mov	DWORD PTR tv67[ebp], edx
$LN4@MyCompare:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@H@@YGHHH@Z ENDP				; MyCompare<int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@I@@YGHII@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyCompare@I@@YGHII@Z PROC				; MyCompare<unsigned int>, COMDAT
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyCompare@2
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN4@MyCompare@2
$LN3@MyCompare@2:
	mov	ecx, DWORD PTR _a$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR _b$[ebp]
	setne	dl
	mov	DWORD PTR tv67[ebp], edx
$LN4@MyCompare@2:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@I@@YGHII@Z ENDP				; MyCompare<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Cab\CabHandler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_kProps	DB	03H
	DB	07H
	DB	0cH
	DB	09H
	DB	016H
	DB	01bH
	ORG $+2
_kArcProps DB	04fH
	DB	016H
	DB	026H
	DB	027H
	DB	050H
	DB	031H
	ORG $+2
$SG71355 DB	'None', 00H
	ORG $+3
$SG71356 DB	'MSZip', 00H
	ORG $+2
$SG71357 DB	'Quantum', 00H
$SG71358 DB	'LZX', 00H
_kMethods DD	FLAT:$SG71355
	DD	FLAT:$SG71356
	DD	FLAT:$SG71357
	DD	FLAT:$SG71358
$SG71445 DB	'.cab', 00H
	ORG $+3
$SG71614 DB	'Can''t open volume: ', 00H
CONST	ENDS
PUBLIC	?GetNumberOfProperties@CHandler@NCab@NArchive@@UAGJPAI@Z ; NArchive::NCab::CHandler::GetNumberOfProperties
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumberOfProperties@CHandler@NCab@NArchive@@UAGJPAI@Z PROC ; NArchive::NCab::CHandler::GetNumberOfProperties
; Line 71
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 6
	xor	eax, eax
	pop	ebp
	ret	8
?GetNumberOfProperties@CHandler@NCab@NArchive@@UAGJPAI@Z ENDP ; NArchive::NCab::CHandler::GetNumberOfProperties
_TEXT	ENDS
PUBLIC	?GetPropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z ; NArchive::NCab::CHandler::GetPropertyInfo
EXTRN	?k7z_PROPID_To_VARTYPE@@3QBEB:BYTE		; k7z_PROPID_To_VARTYPE
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
_varType$ = 24						; size = 4
?GetPropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z PROC ; NArchive::NCab::CHandler::GetPropertyInfo
; Line 71
	push	ebp
	mov	ebp, esp
	cmp	DWORD PTR _index$[ebp], 6
	jb	SHORT $LN1@GetPropert
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@GetPropert
$LN1@GetPropert:
	mov	eax, DWORD PTR _index$[ebp]
	movzx	ecx, BYTE PTR _kProps[eax]
	mov	edx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	dx, BYTE PTR ?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]
	mov	eax, DWORD PTR _varType$[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
$LN2@GetPropert:
	pop	ebp
	ret	20					; 00000014H
?GetPropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z ENDP ; NArchive::NCab::CHandler::GetPropertyInfo
_TEXT	ENDS
PUBLIC	?GetNumberOfArchiveProperties@CHandler@NCab@NArchive@@UAGJPAI@Z ; NArchive::NCab::CHandler::GetNumberOfArchiveProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumberOfArchiveProperties@CHandler@NCab@NArchive@@UAGJPAI@Z PROC ; NArchive::NCab::CHandler::GetNumberOfArchiveProperties
; Line 72
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 6
	xor	eax, eax
	pop	ebp
	ret	8
?GetNumberOfArchiveProperties@CHandler@NCab@NArchive@@UAGJPAI@Z ENDP ; NArchive::NCab::CHandler::GetNumberOfArchiveProperties
_TEXT	ENDS
PUBLIC	?GetArchivePropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z ; NArchive::NCab::CHandler::GetArchivePropertyInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
_varType$ = 24						; size = 4
?GetArchivePropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z PROC ; NArchive::NCab::CHandler::GetArchivePropertyInfo
; Line 72
	push	ebp
	mov	ebp, esp
	cmp	DWORD PTR _index$[ebp], 6
	jb	SHORT $LN1@GetArchive
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@GetArchive
$LN1@GetArchive:
	mov	eax, DWORD PTR _index$[ebp]
	movzx	ecx, BYTE PTR _kArcProps[eax]
	mov	edx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	dx, BYTE PTR ?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]
	mov	eax, DWORD PTR _varType$[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
$LN2@GetArchive:
	pop	ebp
	ret	20					; 00000014H
?GetArchivePropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z ENDP ; NArchive::NCab::CHandler::GetArchivePropertyInfo
_TEXT	ENDS
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?GetMethod@CFolder@NCab@NArchive@@QBEEXZ	; NArchive::NCab::CFolder::GetMethod
PUBLIC	??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CFolder>::operator[]
PUBLIC	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
PUBLIC	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
PUBLIC	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
PUBLIC	__$ArrayPad$
PUBLIC	?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z ; NArchive::NCab::CHandler::GetArchiveProperty
EXTRN	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::CPropVariant::Detach
EXTRN	?ConvertUInt32ToString@@YGXIPAD@Z:PROC		; ConvertUInt32ToString
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
EXTRN	?Add_Space_if_NotEmpty@AString@@QAEXXZ:PROC	; AString::Add_Space_if_NotEmpty
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__catchsym$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 00H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$5
__ehfuncinfo$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv405 = -360						; size = 4
tv404 = -356						; size = 4
tv403 = -352						; size = 4
tv402 = -348						; size = 4
tv401 = -341						; size = 1
tv400 = -340						; size = 4
tv399 = -336						; size = 4
tv398 = -332						; size = 4
tv397 = -328						; size = 4
tv396 = -324						; size = 4
tv395 = -320						; size = 4
tv394 = -316						; size = 4
tv393 = -312						; size = 4
tv392 = -308						; size = 4
tv391 = -304						; size = 4
tv390 = -300						; size = 4
tv389 = -296						; size = 4
tv388 = -292						; size = 4
tv387 = -285						; size = 1
tv386 = -284						; size = 4
tv385 = -280						; size = 4
tv384 = -276						; size = 4
tv351 = -272						; size = 4
tv67 = -268						; size = 4
tv350 = -264						; size = 4
$T73275 = -260						; size = 4
$T73274 = -256						; size = 4
_temp$71444 = -248					; size = 32
_s$71443 = -208						; size = 12
_ai$71441 = -192					; size = 4
_db$71440 = -188					; size = 4
_v$71432 = -184						; size = 4
_ai$71423 = -180					; size = 4
_db$71422 = -176					; size = 4
_v$71414 = -172						; size = 4
_sum$71413 = -168					; size = 8
_v$71407 = -160						; size = 4
_numFolders$71406 = -156				; size = 4
_temp$71404 = -148					; size = 32
_i$71399 = -112						; size = 4
_s$71398 = -104						; size = 12
_di$71396 = -88						; size = 4
_method$71392 = -84					; size = 4
_folder$71391 = -80					; size = 4
_i$71387 = -76						; size = 4
_folders$71386 = -72					; size = 4
_v$71381 = -68						; size = 4
_params$71380 = -60					; size = 8
_mask$71379 = -48					; size = 4
_prop$71373 = -40					; size = 16
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_propID$ = 12						; size = 4
_value$ = 16						; size = 4
?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z PROC ; NArchive::NCab::CHandler::GetArchiveProperty
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 100
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 101
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv350[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 102
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 4
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 76			; 0000004cH
	ja	$LN40@GetArchive@2
	mov	edx, DWORD PTR tv67[ebp]
	movzx	eax, BYTE PTR $LN53@GetArchive@2[edx]
	jmp	DWORD PTR $LN63@GetArchive@2[eax*4]
$LN39@GetArchive@2:
; Line 106
	mov	DWORD PTR _mask$71379[ebp], 0
; Line 107
	mov	DWORD PTR _params$71380[ebp], 0
	mov	DWORD PTR _params$71380[ebp+4], 0
; Line 109
	mov	DWORD PTR _v$71381[ebp], 0
	jmp	SHORT $LN38@GetArchive@2
$LN37@GetArchive@2:
	mov	ecx, DWORD PTR _v$71381[ebp]
	add	ecx, 1
	mov	DWORD PTR _v$71381[ebp], ecx
$LN38@GetArchive@2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv351[ebp], eax
	mov	edx, DWORD PTR _v$71381[ebp]
	cmp	edx, DWORD PTR tv351[ebp]
	jae	$LN36@GetArchive@2
; Line 111
	mov	eax, DWORD PTR _v$71381[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv384[ebp], eax
	mov	ecx, DWORD PTR tv384[ebp]
	mov	DWORD PTR _folders$71386[ebp], ecx
; Line 112
	mov	DWORD PTR _i$71387[ebp], 0
	jmp	SHORT $LN35@GetArchive@2
$LN34@GetArchive@2:
	mov	edx, DWORD PTR _i$71387[ebp]
	add	edx, 1
	mov	DWORD PTR _i$71387[ebp], edx
$LN35@GetArchive@2:
	mov	ecx, DWORD PTR _folders$71386[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR tv385[ebp], eax
	mov	eax, DWORD PTR _i$71387[ebp]
	cmp	eax, DWORD PTR tv385[ebp]
	jae	SHORT $LN33@GetArchive@2
; Line 114
	mov	ecx, DWORD PTR _i$71387[ebp]
	push	ecx
	mov	ecx, DWORD PTR _folders$71386[ebp]
	call	??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CFolder>::operator[]
	mov	DWORD PTR tv386[ebp], eax
	mov	edx, DWORD PTR tv386[ebp]
	mov	DWORD PTR _folder$71391[ebp], edx
; Line 115
	mov	ecx, DWORD PTR _folder$71391[ebp]
	call	?GetMethod@CFolder@NCab@NArchive@@QBEEXZ ; NArchive::NCab::CFolder::GetMethod
	mov	BYTE PTR tv387[ebp], al
	movzx	eax, BYTE PTR tv387[ebp]
	mov	DWORD PTR _method$71392[ebp], eax
; Line 116
	mov	edx, 1
	mov	ecx, DWORD PTR _method$71392[ebp]
	shl	edx, cl
	or	edx, DWORD PTR _mask$71379[ebp]
	mov	DWORD PTR _mask$71379[ebp], edx
; Line 118
	cmp	DWORD PTR _method$71392[ebp], 3
	je	SHORT $LN31@GetArchive@2
	cmp	DWORD PTR _method$71392[ebp], 2
	jne	SHORT $LN32@GetArchive@2
$LN31@GetArchive@2:
; Line 120
	xor	eax, eax
	cmp	DWORD PTR _method$71392[ebp], 2
	setne	al
	mov	DWORD PTR _di$71396[ebp], eax
; Line 121
	mov	ecx, DWORD PTR _folder$71391[ebp]
	movzx	edx, BYTE PTR [ecx+7]
	mov	eax, DWORD PTR _di$71396[ebp]
	cmp	DWORD PTR _params$71380[ebp+eax*4], edx
	jae	SHORT $LN32@GetArchive@2
; Line 122
	mov	ecx, DWORD PTR _folder$71391[ebp]
	movzx	edx, BYTE PTR [ecx+7]
	mov	eax, DWORD PTR _di$71396[ebp]
	mov	DWORD PTR _params$71380[ebp+eax*4], edx
$LN32@GetArchive@2:
; Line 124
	jmp	$LN34@GetArchive@2
$LN33@GetArchive@2:
; Line 125
	jmp	$LN37@GetArchive@2
$LN36@GetArchive@2:
; Line 128
	lea	ecx, DWORD PTR _s$71398[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR tv388[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 130
	mov	DWORD PTR _i$71399[ebp], 0
	jmp	SHORT $LN29@GetArchive@2
$LN28@GetArchive@2:
	mov	ecx, DWORD PTR _i$71399[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$71399[ebp], ecx
$LN29@GetArchive@2:
	cmp	DWORD PTR _i$71399[ebp], 16		; 00000010H
	jae	SHORT $LN27@GetArchive@2
; Line 132
	mov	edx, 1
	mov	ecx, DWORD PTR _i$71399[ebp]
	shl	edx, cl
	and	edx, DWORD PTR _mask$71379[ebp]
	jne	SHORT $LN26@GetArchive@2
; Line 133
	jmp	SHORT $LN28@GetArchive@2
$LN26@GetArchive@2:
; Line 134
	lea	ecx, DWORD PTR _s$71398[ebp]
	call	?Add_Space_if_NotEmpty@AString@@QAEXXZ	; AString::Add_Space_if_NotEmpty
; Line 136
	xor	eax, eax
	cmp	DWORD PTR _i$71399[ebp], 2
	setne	al
	mov	ecx, DWORD PTR _params$71380[ebp+eax*4]
	push	ecx
	mov	edx, DWORD PTR _i$71399[ebp]
	push	edx
	lea	eax, DWORD PTR _temp$71404[ebp]
	push	eax
	call	?SetMethodName@NCab@NArchive@@YGXPADII@Z ; NArchive::NCab::SetMethodName
; Line 137
	lea	ecx, DWORD PTR _temp$71404[ebp]
	push	ecx
	lea	ecx, DWORD PTR _s$71398[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 138
	jmp	SHORT $LN28@GetArchive@2
$LN27@GetArchive@2:
; Line 140
	lea	ecx, DWORD PTR _s$71398[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	mov	DWORD PTR tv389[ebp], eax
	mov	edx, DWORD PTR tv389[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 141
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _s$71398[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	jmp	$LN40@GetArchive@2
$LN25@GetArchive@2:
; Line 146
	mov	DWORD PTR _numFolders$71406[ebp], 0
; Line 147
	mov	DWORD PTR _v$71407[ebp], 0
	jmp	SHORT $LN24@GetArchive@2
$LN23@GetArchive@2:
	mov	eax, DWORD PTR _v$71407[ebp]
	add	eax, 1
	mov	DWORD PTR _v$71407[ebp], eax
$LN24@GetArchive@2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv390[ebp], eax
	mov	ecx, DWORD PTR _v$71407[ebp]
	cmp	ecx, DWORD PTR tv390[ebp]
	jae	SHORT $LN22@GetArchive@2
; Line 148
	mov	edx, DWORD PTR _v$71407[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv391[ebp], eax
	mov	ecx, DWORD PTR tv391[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR tv392[ebp], eax
	mov	eax, DWORD PTR _numFolders$71406[ebp]
	add	eax, DWORD PTR tv392[ebp]
	mov	DWORD PTR _numFolders$71406[ebp], eax
	jmp	SHORT $LN23@GetArchive@2
$LN22@GetArchive@2:
; Line 149
	mov	ecx, DWORD PTR _numFolders$71406[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 150
	jmp	$LN40@GetArchive@2
$LN21@GetArchive@2:
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv393[ebp], eax
	cmp	DWORD PTR tv393[ebp], 1
	jbe	$LN20@GetArchive@2
; Line 157
	mov	DWORD PTR _sum$71413[ebp], 0
	mov	DWORD PTR _sum$71413[ebp+4], 0
; Line 158
	mov	DWORD PTR _v$71414[ebp], 0
	jmp	SHORT $LN19@GetArchive@2
$LN18@GetArchive@2:
	mov	edx, DWORD PTR _v$71414[ebp]
	add	edx, 1
	mov	DWORD PTR _v$71414[ebp], edx
$LN19@GetArchive@2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv394[ebp], eax
	mov	eax, DWORD PTR _v$71414[ebp]
	cmp	eax, DWORD PTR tv394[ebp]
	jae	SHORT $LN17@GetArchive@2
; Line 159
	mov	ecx, DWORD PTR _v$71414[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv395[ebp], eax
	mov	edx, DWORD PTR tv395[ebp]
	mov	eax, DWORD PTR [edx+108]
	xor	ecx, ecx
	add	eax, DWORD PTR _sum$71413[ebp]
	adc	ecx, DWORD PTR _sum$71413[ebp+4]
	mov	DWORD PTR _sum$71413[ebp], eax
	mov	DWORD PTR _sum$71413[ebp+4], ecx
	jmp	SHORT $LN18@GetArchive@2
$LN17@GetArchive@2:
; Line 160
	mov	edx, DWORD PTR _sum$71413[ebp+4]
	push	edx
	mov	eax, DWORD PTR _sum$71413[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN20@GetArchive@2:
; Line 162
	jmp	$LN40@GetArchive@2
$LN16@GetArchive@2:
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv396[ebp], eax
	mov	ecx, DWORD PTR tv396[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 167
	jmp	$LN40@GetArchive@2
$LN15@GetArchive@2:
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv397[ebp], eax
	cmp	DWORD PTR tv397[ebp], 1
	jne	SHORT $LN14@GetArchive@2
; Line 173
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv398[ebp], eax
	mov	edx, DWORD PTR tv398[ebp]
	mov	DWORD PTR _db$71422[ebp], edx
; Line 174
	mov	eax, DWORD PTR _db$71422[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _ai$71423[ebp], eax
; Line 175
	mov	ecx, DWORD PTR _ai$71423[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
$LN14@GetArchive@2:
; Line 177
	jmp	$LN40@GetArchive@2
$LN13@GetArchive@2:
; Line 182
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv399[ebp], eax
	cmp	DWORD PTR tv399[ebp], 0
	je	SHORT $LN12@GetArchive@2
; Line 184
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv400[ebp], eax
	mov	eax, DWORD PTR tv400[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
$LN12@GetArchive@2:
; Line 186
	jmp	$LN40@GetArchive@2
$LN11@GetArchive@2:
; Line 194
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR [edx+80]
	push	ecx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 195
	jmp	$LN40@GetArchive@2
$LN10@GetArchive@2:
; Line 202
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	xor	ecx, ecx
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 203
	jmp	$LN40@GetArchive@2
$LN9@GetArchive@2:
; Line 207
	mov	DWORD PTR _v$71432[ebp], 0
; Line 208
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+68]
	test	eax, eax
	jne	SHORT $LN8@GetArchive@2
	mov	ecx, DWORD PTR _v$71432[ebp]
	or	ecx, 1
	mov	DWORD PTR _v$71432[ebp], ecx
$LN8@GetArchive@2:
; Line 209
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+69]
	test	eax, eax
	je	SHORT $LN7@GetArchive@2
	mov	ecx, DWORD PTR _v$71432[ebp]
	or	ecx, 2
	mov	DWORD PTR _v$71432[ebp], ecx
$LN7@GetArchive@2:
; Line 210
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+70]
	test	eax, eax
	je	SHORT $LN6@GetArchive@2
	mov	ecx, DWORD PTR _v$71432[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR _v$71432[ebp], ecx
$LN6@GetArchive@2:
; Line 211
	mov	edx, DWORD PTR _v$71432[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 212
	jmp	$LN40@GetArchive@2
$LN5@GetArchive@2:
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	mov	BYTE PTR tv401[ebp], al
	movzx	eax, BYTE PTR tv401[ebp]
	test	eax, eax
	jne	SHORT $LN4@GetArchive@2
; Line 217
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN4@GetArchive@2:
; Line 218
	jmp	$LN40@GetArchive@2
$LN3@GetArchive@2:
; Line 222
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv402[ebp], eax
	cmp	DWORD PTR tv402[ebp], 1
	jne	$LN40@GetArchive@2
; Line 224
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv403[ebp], eax
	mov	edx, DWORD PTR tv403[ebp]
	mov	DWORD PTR _db$71440[ebp], edx
; Line 225
	mov	eax, DWORD PTR _db$71440[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _ai$71441[ebp], eax
; Line 226
	mov	ecx, DWORD PTR _ai$71441[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	$LN40@GetArchive@2
; Line 228
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR tv404[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 230
	lea	edx, DWORD PTR _temp$71444[ebp]
	push	edx
	mov	eax, DWORD PTR _ai$71441[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 231
	lea	edx, DWORD PTR _temp$71444[ebp]
	push	edx
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 232
	lea	eax, DWORD PTR _temp$71444[ebp]
	push	eax
	mov	ecx, DWORD PTR _ai$71441[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 233
	push	95					; 0000005fH
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 234
	lea	eax, DWORD PTR _temp$71444[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 235
	push	OFFSET $SG71445
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 236
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	mov	DWORD PTR tv405[ebp], eax
	mov	ecx, DWORD PTR tv405[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 237
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _s$71443[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN40@GetArchive@2:
; Line 268
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 269
	mov	DWORD PTR $T73274[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$71373[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T73274[ebp]
	jmp	SHORT $LN43@GetArchive@2
__catch$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0:
; Line 270
	mov	DWORD PTR $T73275[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN51@GetArchive@2
	ret	0
	mov	eax, __tryend$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN43@GetArchive@2
$LN51@GetArchive@2:
	mov	eax, DWORD PTR $T73275[ebp]
$LN43@GetArchive@2:
; Line 271
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN62@GetArchive@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN62@GetArchive@2:
	DD	6
	DD	$LN61@GetArchive@2
$LN61@GetArchive@2:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN54@GetArchive@2
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN55@GetArchive@2
	DD	-104					; ffffff98H
	DD	12					; 0000000cH
	DD	$LN56@GetArchive@2
	DD	-148					; ffffff6cH
	DD	32					; 00000020H
	DD	$LN57@GetArchive@2
	DD	-208					; ffffff30H
	DD	12					; 0000000cH
	DD	$LN58@GetArchive@2
	DD	-248					; ffffff08H
	DD	32					; 00000020H
	DD	$LN59@GetArchive@2
$LN59@GetArchive@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN58@GetArchive@2:
	DB	115					; 00000073H
	DB	0
$LN57@GetArchive@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN56@GetArchive@2:
	DB	115					; 00000073H
	DB	0
$LN55@GetArchive@2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	0
$LN54@GetArchive@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	2
$LN63@GetArchive@2:
	DD	$LN3@GetArchive@2
	DD	$LN39@GetArchive@2
	DD	$LN11@GetArchive@2
	DD	$LN25@GetArchive@2
	DD	$LN16@GetArchive@2
	DD	$LN10@GetArchive@2
	DD	$LN13@GetArchive@2
	DD	$LN5@GetArchive@2
	DD	$LN9@GetArchive@2
	DD	$LN21@GetArchive@2
	DD	$LN15@GetArchive@2
	DD	$LN40@GetArchive@2
$LN53@GetArchive@2:
	DB	0
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	1
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	2
	DB	11					; 0000000bH
	DB	3
	DB	4
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	5
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	6
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	7
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	8
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	9
	DB	10					; 0000000aH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$71373[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3:
	lea	ecx, DWORD PTR _s$71398[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4:
	lea	ecx, DWORD PTR _s$71443[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z ENDP ; NArchive::NCab::CHandler::GetArchiveProperty
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T73308 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T73308[ebp], ecx
	mov	edx, DWORD PTR $T73308[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetMethod@CFolder@NCab@NArchive@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMethod@CFolder@NCab@NArchive@@QBEEXZ PROC		; NArchive::NCab::CFolder::GetMethod, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabitem.h
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+6]
	and	eax, 15					; 0000000fH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMethod@CFolder@NCab@NArchive@@QBEEXZ ENDP		; NArchive::NCab::CFolder::GetMethod
_TEXT	ENDS
PUBLIC	?MyStpCpy@@YGPADPADPBD@Z			; MyStpCpy
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = 8							; size = 4
_method$ = 12						; size = 4
_param$ = 16						; size = 4
?SetMethodName@NCab@NArchive@@YGXPADII@Z PROC		; NArchive::NCab::SetMethodName
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
; Line 85
	push	ebp
	mov	ebp, esp
; Line 86
	cmp	DWORD PTR _method$[ebp], 4
	jae	SHORT $LN2@SetMethodN
; Line 88
	mov	eax, DWORD PTR _method$[ebp]
	mov	ecx, DWORD PTR _kMethods[eax*4]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?MyStpCpy@@YGPADPADPBD@Z		; MyStpCpy
	mov	DWORD PTR _s$[ebp], eax
; Line 90
	cmp	DWORD PTR _method$[ebp], 3
	je	SHORT $LN1@SetMethodN
	cmp	DWORD PTR _method$[ebp], 2
	je	SHORT $LN1@SetMethodN
; Line 91
	jmp	SHORT $LN3@SetMethodN
$LN1@SetMethodN:
; Line 92
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 58			; 0000003aH
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
; Line 93
	mov	edx, DWORD PTR _param$[ebp]
	mov	DWORD PTR _method$[ebp], edx
$LN2@SetMethodN:
; Line 95
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _method$[ebp]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
$LN3@SetMethodN:
; Line 96
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?SetMethodName@NCab@NArchive@@YGXPADII@Z ENDP		; NArchive::NCab::SetMethodName
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStpCpy@@YGPADPADPBD@Z
_TEXT	SEGMENT
_c$66119 = -1						; size = 1
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
?MyStpCpy@@YGPADPADPBD@Z PROC				; MyStpCpy, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN3@MyStpCpy:
; Line 41
	mov	eax, DWORD PTR _src$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$66119[ebp], cl
; Line 42
	mov	edx, DWORD PTR _dest$[ebp]
	mov	al, BYTE PTR _c$66119[ebp]
	mov	BYTE PTR [edx], al
; Line 43
	movsx	ecx, BYTE PTR _c$66119[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@MyStpCpy
; Line 44
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	SHORT $LN4@MyStpCpy
$LN1@MyStpCpy:
; Line 45
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 1
	mov	DWORD PTR _src$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 1
	mov	DWORD PTR _dest$[ebp], eax
; Line 47
	jmp	SHORT $LN3@MyStpCpy
$LN4@MyStpCpy:
; Line 48
	mov	esp, ebp
	pop	ebp
	ret	8
?MyStpCpy@@YGPADPADPBD@Z ENDP				; MyStpCpy
_TEXT	ENDS
PUBLIC	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
PUBLIC	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z	; NArchive::NCab::CItem::GetFolderIndex
PUBLIC	?GetWinAttrib@CItem@NCab@NArchive@@QBEIXZ	; NArchive::NCab::CItem::GetWinAttrib
PUBLIC	?IsDir@CItem@NCab@NArchive@@QBE_NXZ		; NArchive::NCab::CItem::IsDir
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?WinNameToOSName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z ; NArchive::NItemName::WinNameToOSName
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?IsNameUTF@CItem@NCab@NArchive@@QBE_NXZ		; NArchive::NCab::CItem::IsNameUTF
PUBLIC	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
PUBLIC	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
PUBLIC	__$ArrayPad$
PUBLIC	?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z ; NArchive::NCab::CHandler::GetProperty
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@H@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	__imp__LocalFileTimeToFileTime@8:PROC
EXTRN	?DosTimeToFileTime@NTime@NWindows@@YG_NIAAU_FILETIME@@@Z:PROC ; NWindows::NTime::DosTimeToFileTime
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z:PROC ; MultiByteToUnicodeString
EXTRN	?ConvertUTF8ToUnicode@@YG_NABVAString@@AAVUString@@@Z:PROC ; ConvertUTF8ToUnicode
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
xdata$x	SEGMENT
__catchsym$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z DD 00H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$6
__ehfuncinfo$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$5
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv230 = -268						; size = 4
tv229 = -261						; size = 1
tv228 = -260						; size = 4
tv227 = -256						; size = 4
tv226 = -252						; size = 4
tv225 = -248						; size = 4
tv224 = -241						; size = 1
tv223 = -240						; size = 4
tv211 = -236						; size = 4
tv222 = -232						; size = 4
tv209 = -228						; size = 4
tv221 = -224						; size = 4
tv220 = -217						; size = 1
tv219 = -216						; size = 4
tv86 = -212						; size = 4
tv218 = -208						; size = 4
tv217 = -204						; size = 4
tv216 = -200						; size = 4
tv215 = -196						; size = 4
$T73330 = -192						; size = 4
$T73329 = -188						; size = 4
$T73328 = -184						; size = 12
$T73327 = -172						; size = 12
_s$71485 = -156						; size = 32
_folder$71484 = -120					; size = 4
_realFolderIndex$71483 = -116				; size = 4
_utcFileTime$71478 = -108				; size = 8
_localFileTime$71477 = -92				; size = 8
_unicodeName$71467 = -76				; size = 12
_item$71461 = -60					; size = 4
_itemIndex$71460 = -56					; size = 4
_db$71459 = -52						; size = 4
_mvItem$71458 = -48					; size = 4
_prop$71457 = -40					; size = 16
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_propID$ = 16						; size = 4
_value$ = 20						; size = 4
?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z PROC ; NArchive::NCab::CHandler::GetProperty
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 275
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 276
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv215[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 278
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR _mvItem$71458[ebp], ecx
; Line 279
	mov	edx, DWORD PTR _mvItem$71458[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv217[ebp], eax
	mov	ecx, DWORD PTR tv217[ebp]
	mov	DWORD PTR _db$71459[ebp], ecx
; Line 280
	mov	edx, DWORD PTR _mvItem$71458[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _itemIndex$71460[ebp], eax
; Line 281
	mov	ecx, DWORD PTR _itemIndex$71460[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$71459[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR _item$71461[ebp], edx
; Line 282
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv86[ebp], ecx
	cmp	DWORD PTR tv86[ebp], 24			; 00000018H
	ja	$LN13@GetPropert@2
	mov	edx, DWORD PTR tv86[ebp]
	movzx	eax, BYTE PTR $LN27@GetPropert@2[edx]
	jmp	DWORD PTR $LN36@GetPropert@2[eax*4]
$LN12@GetPropert@2:
; Line 286
	lea	ecx, DWORD PTR _unicodeName$71467[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv219[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 287
	mov	ecx, DWORD PTR _item$71461[ebp]
	call	?IsNameUTF@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsNameUTF
	mov	BYTE PTR tv220[ebp], al
	movzx	ecx, BYTE PTR tv220[ebp]
	test	ecx, ecx
	je	SHORT $LN11@GetPropert@2
; Line 288
	lea	edx, DWORD PTR _unicodeName$71467[ebp]
	push	edx
	mov	eax, DWORD PTR _item$71461[ebp]
	push	eax
	call	?ConvertUTF8ToUnicode@@YG_NABVAString@@AAVUString@@@Z ; ConvertUTF8ToUnicode
; Line 289
	jmp	SHORT $LN10@GetPropert@2
$LN11@GetPropert@2:
; Line 290
	push	0
	mov	ecx, DWORD PTR _item$71461[ebp]
	push	ecx
	lea	edx, DWORD PTR $T73327[ebp]
	push	edx
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	DWORD PTR tv221[ebp], eax
	mov	eax, DWORD PTR tv221[ebp]
	mov	DWORD PTR tv209[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	ecx, DWORD PTR tv209[ebp]
	push	ecx
	lea	ecx, DWORD PTR _unicodeName$71467[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T73327[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN10@GetPropert@2:
; Line 291
	lea	edx, DWORD PTR _unicodeName$71467[ebp]
	push	edx
	lea	eax, DWORD PTR $T73328[ebp]
	push	eax
	call	?WinNameToOSName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z ; NArchive::NItemName::WinNameToOSName
	mov	DWORD PTR tv222[ebp], eax
	mov	ecx, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv211[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	mov	ecx, DWORD PTR tv211[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv223[ebp], eax
	mov	edx, DWORD PTR tv223[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PB_W@Z ; NWindows::NCOM::CPropVariant::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T73328[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 292
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _unicodeName$71467[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN13@GetPropert@2
$LN9@GetPropert@2:
; Line 295
	mov	ecx, DWORD PTR _item$71461[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	mov	BYTE PTR tv224[ebp], al
	movzx	eax, BYTE PTR tv224[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN13@GetPropert@2
$LN8@GetPropert@2:
; Line 296
	mov	ecx, DWORD PTR _item$71461[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN13@GetPropert@2
$LN7@GetPropert@2:
; Line 297
	mov	ecx, DWORD PTR _item$71461[ebp]
	call	?GetWinAttrib@CItem@NCab@NArchive@@QBEIXZ ; NArchive::NCab::CItem::GetWinAttrib
	mov	DWORD PTR tv225[ebp], eax
	mov	eax, DWORD PTR tv225[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN13@GetPropert@2
$LN6@GetPropert@2:
; Line 302
	lea	ecx, DWORD PTR _localFileTime$71477[ebp]
	push	ecx
	mov	edx, DWORD PTR _item$71461[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?DosTimeToFileTime@NTime@NWindows@@YG_NIAAU_FILETIME@@@Z ; NWindows::NTime::DosTimeToFileTime
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@GetPropert@2
; Line 304
	mov	esi, esp
	lea	edx, DWORD PTR _utcFileTime$71478[ebp]
	push	edx
	lea	eax, DWORD PTR _localFileTime$71477[ebp]
	push	eax
	call	DWORD PTR __imp__LocalFileTimeToFileTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@GetPropert@2
; Line 305
	mov	DWORD PTR _utcFileTime$71478[ebp], 0
	mov	ecx, DWORD PTR _utcFileTime$71478[ebp]
	mov	DWORD PTR _utcFileTime$71478[ebp+4], ecx
$LN4@GetPropert@2:
; Line 307
	jmp	SHORT $LN3@GetPropert@2
$LN5@GetPropert@2:
; Line 308
	mov	DWORD PTR _utcFileTime$71478[ebp], 0
	mov	edx, DWORD PTR _utcFileTime$71478[ebp]
	mov	DWORD PTR _utcFileTime$71478[ebp+4], edx
$LN3@GetPropert@2:
; Line 309
	lea	eax, DWORD PTR _utcFileTime$71478[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 310
	jmp	$LN13@GetPropert@2
$LN2@GetPropert@2:
; Line 315
	mov	ecx, DWORD PTR _db$71459[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR tv226[ebp], eax
	mov	ecx, DWORD PTR tv226[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$71461[ebp]
	call	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ; NArchive::NCab::CItem::GetFolderIndex
	mov	DWORD PTR tv227[ebp], eax
	mov	edx, DWORD PTR tv227[ebp]
	mov	DWORD PTR _realFolderIndex$71483[ebp], edx
; Line 316
	mov	eax, DWORD PTR _realFolderIndex$71483[ebp]
	push	eax
	mov	ecx, DWORD PTR _db$71459[ebp]
	call	??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CFolder>::operator[]
	mov	DWORD PTR tv228[ebp], eax
	mov	ecx, DWORD PTR tv228[ebp]
	mov	DWORD PTR _folder$71484[ebp], ecx
; Line 318
	mov	ecx, DWORD PTR _folder$71484[ebp]
	call	?GetMethod@CFolder@NCab@NArchive@@QBEEXZ ; NArchive::NCab::CFolder::GetMethod
	mov	BYTE PTR tv229[ebp], al
	mov	edx, DWORD PTR _folder$71484[ebp]
	movzx	eax, BYTE PTR [edx+7]
	push	eax
	movzx	ecx, BYTE PTR tv229[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$71485[ebp]
	push	edx
	call	?SetMethodName@NCab@NArchive@@YGXPADII@Z ; NArchive::NCab::SetMethodName
; Line 319
	lea	eax, DWORD PTR _s$71485[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 320
	jmp	SHORT $LN13@GetPropert@2
$LN1@GetPropert@2:
; Line 323
	mov	ecx, DWORD PTR _mvItem$71458[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR tv230[ebp], eax
	mov	edx, DWORD PTR tv230[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@H@Z ; NWindows::NCOM::CPropVariant::operator=
$LN13@GetPropert@2:
; Line 333
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 334
	mov	DWORD PTR $T73329[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$71457[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T73329[ebp]
	jmp	SHORT $LN16@GetPropert@2
__catch$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0:
; Line 335
	mov	DWORD PTR $T73330[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN25@GetPropert@2
	ret	0
	mov	eax, __tryend$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN16@GetPropert@2
$LN25@GetPropert@2:
	mov	eax, DWORD PTR $T73330[ebp]
$LN16@GetPropert@2:
; Line 336
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@GetPropert@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN35@GetPropert@2:
	DD	5
	DD	$LN34@GetPropert@2
$LN34@GetPropert@2:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN28@GetPropert@2
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN29@GetPropert@2
	DD	-92					; ffffffa4H
	DD	8
	DD	$LN30@GetPropert@2
	DD	-108					; ffffff94H
	DD	8
	DD	$LN31@GetPropert@2
	DD	-156					; ffffff64H
	DD	32					; 00000020H
	DD	$LN32@GetPropert@2
$LN32@GetPropert@2:
	DB	115					; 00000073H
	DB	0
$LN31@GetPropert@2:
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN30@GetPropert@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN29@GetPropert@2:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN28@GetPropert@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	3
$LN36@GetPropert@2:
	DD	$LN12@GetPropert@2
	DD	$LN9@GetPropert@2
	DD	$LN8@GetPropert@2
	DD	$LN7@GetPropert@2
	DD	$LN6@GetPropert@2
	DD	$LN2@GetPropert@2
	DD	$LN1@GetPropert@2
	DD	$LN13@GetPropert@2
$LN27@GetPropert@2:
	DB	0
	DB	7
	DB	7
	DB	1
	DB	2
	DB	7
	DB	3
	DB	7
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$71457[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$3:
	lea	ecx, DWORD PTR _unicodeName$71467[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$4:
	lea	ecx, DWORD PTR $T73327[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$5:
	lea	ecx, DWORD PTR $T73328[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z ENDP ; NArchive::NCab::CHandler::GetProperty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T73356 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T73356[ebp], ecx
	mov	edx, DWORD PTR $T73356[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WinNameToOSName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z
_TEXT	SEGMENT
$T73362 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
?WinNameToOSName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z PROC ; NArchive::NItemName::WinNameToOSName, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\itemnameutils.h
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T73362[ebp], 0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	ecx, DWORD PTR $T73362[ebp]
	or	ecx, 1
	mov	DWORD PTR $T73362[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WinNameToOSName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z ENDP ; NArchive::NItemName::WinNameToOSName
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetWinAttrib@CItem@NCab@NArchive@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWinAttrib@CItem@NCab@NArchive@@QBEIXZ PROC		; NArchive::NCab::CItem::GetWinAttrib, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabitem.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+30]
	and	eax, -129				; ffffff7fH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWinAttrib@CItem@NCab@NArchive@@QBEIXZ ENDP		; NArchive::NCab::CItem::GetWinAttrib
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsNameUTF@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsNameUTF@CItem@NCab@NArchive@@QBE_NXZ PROC		; NArchive::NCab::CItem::IsNameUTF, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+30]
	and	eax, 128				; 00000080H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsNameUTF@CItem@NCab@NArchive@@QBE_NXZ ENDP		; NArchive::NCab::CItem::IsNameUTF
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDir@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CItem@NCab@NArchive@@QBE_NXZ PROC		; NArchive::NCab::CItem::IsDir, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+30]
	and	eax, 16					; 00000010H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CItem@NCab@NArchive@@QBE_NXZ ENDP		; NArchive::NCab::CItem::IsDir
_TEXT	ENDS
PUBLIC	?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::ContinuedToNext
PUBLIC	?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::ContinuedFromPrev
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numFolders$ = 8					; size = 4
?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z PROC	; NArchive::NCab::CItem::GetFolderIndex, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CItem::ContinuedFromPrev
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@GetFolderI
; Line 57
	xor	eax, eax
	jmp	SHORT $LN3@GetFolderI
$LN2@GetFolderI:
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CItem::ContinuedToNext
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetFolderI
; Line 59
	mov	eax, DWORD PTR _numFolders$[ebp]
	sub	eax, 1
	jmp	SHORT $LN3@GetFolderI
$LN1@GetFolderI:
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
$LN3@GetFolderI:
; Line 61
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ENDP	; NArchive::NCab::CItem::GetFolderIndex
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CItem::ContinuedFromPrev, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 65533		; 0000fffdH
	je	SHORT $LN3@ContinuedF
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 65535		; 0000ffffH
	je	SHORT $LN3@ContinuedF
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@ContinuedF
$LN3@ContinuedF:
	mov	DWORD PTR tv68[ebp], 1
$LN4@ContinuedF:
	mov	al, BYTE PTR tv68[ebp]
; Line 45
	mov	esp, ebp
	pop	ebp
	ret	0
?ContinuedFromPrev@CItem@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CItem::ContinuedFromPrev
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CItem::ContinuedToNext, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 65534		; 0000fffeH
	je	SHORT $LN3@ContinuedT
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 65535		; 0000ffffH
	je	SHORT $LN3@ContinuedT
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@ContinuedT
$LN3@ContinuedT:
	mov	DWORD PTR tv68[ebp], 1
$LN4@ContinuedT:
	mov	al, BYTE PTR tv68[ebp]
; Line 52
	mov	esp, ebp
	pop	ebp
	ret	0
?ContinuedToNext@CItem@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CItem::ContinuedToNext
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@H@@QBEABHI@Z			; CRecordVector<int>::operator[]
PUBLIC	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z
_TEXT	SEGMENT
_db$ = -8						; size = 4
_this$ = -4						; size = 4
_mvi$ = 8						; size = 4
?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z PROC ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _mvi$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR _db$[ebp], eax
; Line 133
	mov	edx, DWORD PTR _mvi$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??A?$CRecordVector@H@@QBEABHI@Z		; CRecordVector<int>::operator[]
	mov	esi, eax
	mov	ecx, DWORD PTR _db$[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	push	eax
	mov	ecx, DWORD PTR _mvi$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _db$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	ecx, eax
	call	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ; NArchive::NCab::CItem::GetFolderIndex
	add	eax, DWORD PTR [esi]
; Line 134
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ENDP ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
_TEXT	ENDS
PUBLIC	??I?$CMyComPtr@UIInStream@@@@QAEPAPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator&
PUBLIC	??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::operator->
PUBLIC	??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ ; CMyComPtr<IArchiveOpenVolumeCallback>::operator!
PUBLIC	?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CArchInfo::IsThereNext
PUBLIC	?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CArchInfo::IsTherePrev
PUBLIC	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
PUBLIC	?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal
PUBLIC	??1CInArchive@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CInArchive::~CInArchive
PUBLIC	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
PUBLIC	??1?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
PUBLIC	??1CDatabaseEx@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CDatabaseEx::~CDatabaseEx
PUBLIC	?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::Insert
PUBLIC	?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CItem>::Size
PUBLIC	?Back@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Back
PUBLIC	?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty
PUBLIC	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@ABV0@@Z ; CMyComPtr<IInStream>::operator=
PUBLIC	??0CDatabaseEx@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CDatabaseEx::CDatabaseEx
PUBLIC	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
PUBLIC	??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z ; CMyComPtr<IInStream>::CMyComPtr<IInStream>
PUBLIC	??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::operator&
PUBLIC	??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::CMyComPtr<IArchiveOpenVolumeCallback>
PUBLIC	??0CInArchive@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CInArchive::CInArchive
PUBLIC	?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z ; NArchive::NCab::CHandler::Open
EXTRN	?Check@CMvDatabaseEx@NCab@NArchive@@QAE_NXZ:PROC ; NArchive::NCab::CMvDatabaseEx::Check
EXTRN	?FillSortAndShrink@CMvDatabaseEx@NCab@NArchive@@QAEXXZ:PROC ; NArchive::NCab::CMvDatabaseEx::FillSortAndShrink
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	?AddAscii@UString@@QAEXPBD@Z:PROC		; UString::AddAscii
EXTRN	?Add_LF@UString@@QAEXXZ:PROC			; UString::Add_LF
EXTRN	?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z:PROC ; NArchive::NCab::CInArchive::Open
EXTRN	_IID_IArchiveOpenVolumeCallback:BYTE
xdata$x	SEGMENT
__catchsym$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0
__tryblocktable$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 00H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$7
__ehfuncinfo$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$6
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv558 = -471						; size = 1
tv557 = -470						; size = 1
tv556 = -469						; size = 1
tv555 = -468						; size = 4
tv554 = -464						; size = 4
tv553 = -460						; size = 4
tv447 = -456						; size = 4
tv552 = -452						; size = 4
tv551 = -448						; size = 4
tv550 = -442						; size = 1
tv549 = -441						; size = 1
tv548 = -440						; size = 4
tv547 = -433						; size = 1
tv546 = -432						; size = 4
tv545 = -425						; size = 1
tv544 = -424						; size = 4
tv543 = -420						; size = 4
tv542 = -413						; size = 1
tv541 = -412						; size = 4
tv540 = -408						; size = 4
tv265 = -404						; size = 4
tv539 = -400						; size = 4
tv538 = -396						; size = 4
tv537 = -389						; size = 1
tv536 = -388						; size = 4
tv535 = -384						; size = 4
tv534 = -377						; size = 1
tv533 = -376						; size = 4
tv532 = -372						; size = 4
tv89 = -368						; size = 4
tv531 = -364						; size = 4
tv530 = -360						; size = 4
tv529 = -356						; size = 4
$T73392 = -352						; size = 4
$T73391 = -348						; size = 4
$T73390 = -344						; size = 4
$T73389 = -340						; size = 4
$T73388 = -336						; size = 4
$T73387 = -332						; size = 4
$T73386 = -328						; size = 4
_result$71607 = -324					; size = 4
_fullName$71605 = -316					; size = 12
_ai$71601 = -300					; size = 4
_ai$71597 = -296					; size = 4
_ai$71593 = -292					; size = 4
_otherArc$71590 = -288					; size = 4
___result__$71584 = -284				; size = 4
_prevArc$71564 = -280					; size = 4
_cabNumber$71552 = -276					; size = 4
_lastArc$71551 = -272					; size = 4
_res$71548 = -268					; size = 4
_db$71547 = -260					; size = 128
_numTempVolumes$71543 = -128				; size = 4
_numItems$71542 = -120					; size = 8
_prevChecked$71541 = -105				; size = 1
_nextStream$71540 = -100				; size = 4
_openVolumeCallback$71537 = -88				; size = 4
_archive$71499 = -76					; size = 56
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_maxCheckStartPosition$ = 16				; size = 4
_callback$ = 20						; size = 4
?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z PROC ; NArchive::NCab::CHandler::Open
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
; Line 341
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 456				; 000001c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 342
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 343
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 345
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??0CInArchive@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR tv529[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 346
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::CMyComPtr<IArchiveOpenVolumeCallback>
	mov	DWORD PTR tv530[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 347
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::operator&
	mov	DWORD PTR tv531[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv531[ebp]
	push	ecx
	push	OFFSET _IID_IArchiveOpenVolumeCallback
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 349
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z ; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 350
	mov	BYTE PTR _prevChecked$71541[ebp], 0
; Line 351
	mov	DWORD PTR _numItems$71542[ebp], 0
	mov	DWORD PTR _numItems$71542[ebp+4], 0
; Line 352
	mov	DWORD PTR _numTempVolumes$71543[ebp], 0
$LN46@Open:
; Line 355
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv89[ebp], eax
	cmp	DWORD PTR tv89[ebp], 0
	je	$LN45@Open
; Line 357
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??0CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR tv532[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 358
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	push	ecx
	lea	ecx, DWORD PTR _db$71547[ebp+120]
	call	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@ABV0@@Z ; CMyComPtr<IInStream>::operator=
; Line 359
	mov	edx, DWORD PTR _maxCheckStartPosition$[ebp]
	push	edx
	lea	eax, DWORD PTR _db$71547[ebp]
	push	eax
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	?Open@CInArchive@NCab@NArchive@@QAEJAAUCDatabaseEx@23@PB_K@Z ; NArchive::NCab::CInArchive::Open
	mov	DWORD PTR tv533[ebp], eax
	mov	ecx, DWORD PTR tv533[ebp]
	mov	DWORD PTR _res$71548[ebp], ecx
; Line 360
	movzx	edx, BYTE PTR _archive$71499[ebp+51]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	or	ecx, edx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+69], cl
; Line 361
	movzx	eax, BYTE PTR _archive$71499[ebp+49]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+69]
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+69], dl
; Line 362
	movzx	ecx, BYTE PTR _archive$71499[ebp+50]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+70]
	or	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+70], al
; Line 364
	cmp	DWORD PTR _res$71548[ebp], 0
	jne	$LN44@Open
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty
	mov	BYTE PTR tv534[ebp], al
	movzx	edx, BYTE PTR tv534[ebp]
	test	edx, edx
	jne	$LN44@Open
; Line 366
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Back@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Back
	mov	DWORD PTR tv535[ebp], eax
	mov	eax, DWORD PTR tv535[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _lastArc$71551[ebp], eax
; Line 367
	mov	ecx, DWORD PTR _db$71547[ebp+52]
	mov	DWORD PTR _cabNumber$71552[ebp], ecx
; Line 368
	mov	edx, DWORD PTR _lastArc$71551[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR _db$71547[ebp+48]
	je	SHORT $LN43@Open
; Line 369
	mov	DWORD PTR _res$71548[ebp], 1
	jmp	$LN44@Open
$LN43@Open:
; Line 370
	movzx	ecx, BYTE PTR _prevChecked$71541[ebp]
	test	ecx, ecx
	je	SHORT $LN41@Open
; Line 372
	mov	edx, DWORD PTR _lastArc$71551[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 1
	cmp	DWORD PTR _cabNumber$71552[ebp], eax
	je	SHORT $LN40@Open
; Line 373
	mov	DWORD PTR _res$71548[ebp], 1
$LN40@Open:
; Line 374
	jmp	SHORT $LN44@Open
$LN41@Open:
; Line 375
	mov	ecx, DWORD PTR _lastArc$71551[ebp]
	mov	edx, DWORD PTR _cabNumber$71552[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jb	SHORT $LN38@Open
; Line 376
	mov	DWORD PTR _res$71548[ebp], 1
	jmp	SHORT $LN44@Open
$LN38@Open:
; Line 377
	cmp	DWORD PTR _numTempVolumes$71543[ebp], 0
	je	SHORT $LN44@Open
; Line 379
	mov	eax, DWORD PTR _numTempVolumes$71543[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv536[ebp], eax
	mov	ecx, DWORD PTR tv536[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _prevArc$71564[ebp], ecx
; Line 380
	mov	edx, DWORD PTR _prevArc$71564[ebp]
	mov	eax, DWORD PTR [edx+20]
	add	eax, 1
	cmp	DWORD PTR _cabNumber$71552[ebp], eax
	je	SHORT $LN44@Open
; Line 381
	mov	DWORD PTR _res$71548[ebp], 1
$LN44@Open:
; Line 385
	movzx	ecx, BYTE PTR _archive$71499[ebp+48]
	test	ecx, ecx
	jne	SHORT $LN33@Open
	cmp	DWORD PTR _res$71548[ebp], 0
	jne	SHORT $LN34@Open
$LN33@Open:
; Line 387
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+68], 1
; Line 388
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty
	mov	BYTE PTR tv537[ebp], al
	movzx	eax, BYTE PTR tv537[ebp]
	test	eax, eax
	je	SHORT $LN34@Open
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _db$71547[ebp+24]
	mov	DWORD PTR [ecx+80], edx
	mov	eax, DWORD PTR _db$71547[ebp+28]
	mov	DWORD PTR [ecx+84], eax
; Line 391
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _db$71547[ebp+108]
	mov	DWORD PTR [ecx+72], edx
$LN34@Open:
; Line 395
	cmp	DWORD PTR _res$71548[ebp], 0
	jne	$LN31@Open
; Line 397
	lea	ecx, DWORD PTR _db$71547[ebp+12]
	call	?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CItem>::Size
	mov	DWORD PTR tv538[ebp], eax
	mov	eax, DWORD PTR tv538[ebp]
	xor	ecx, ecx
	add	eax, DWORD PTR _numItems$71542[ebp]
	adc	ecx, DWORD PTR _numItems$71542[ebp+4]
	mov	DWORD PTR _numItems$71542[ebp], eax
	mov	DWORD PTR _numItems$71542[ebp+4], ecx
; Line 398
	movzx	edx, BYTE PTR _prevChecked$71541[ebp]
	test	edx, edx
	je	SHORT $LN50@Open
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv539[ebp], eax
	mov	eax, DWORD PTR tv539[ebp]
	mov	DWORD PTR tv265[ebp], eax
	jmp	SHORT $LN51@Open
$LN50@Open:
	mov	ecx, DWORD PTR _numTempVolumes$71543[ebp]
	mov	DWORD PTR tv265[ebp], ecx
$LN51@Open:
	lea	edx, DWORD PTR _db$71547[ebp]
	push	edx
	mov	eax, DWORD PTR tv265[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::Insert
; Line 399
	movzx	ecx, BYTE PTR _prevChecked$71541[ebp]
	test	ecx, ecx
	jne	SHORT $LN30@Open
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv540[ebp], eax
	cmp	DWORD PTR tv540[ebp], 1
	jbe	SHORT $LN30@Open
; Line 401
	mov	edx, DWORD PTR _numTempVolumes$71543[ebp]
	add	edx, 1
	mov	DWORD PTR _numTempVolumes$71543[ebp], edx
; Line 402
	mov	eax, DWORD PTR _numTempVolumes$71543[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv541[ebp], eax
	mov	ecx, DWORD PTR _db$71547[ebp+52]
	add	ecx, 1
	mov	edx, DWORD PTR tv541[ebp]
	cmp	ecx, DWORD PTR [edx+52]
	jne	SHORT $LN30@Open
; Line 403
	mov	DWORD PTR _numTempVolumes$71543[ebp], 0
$LN30@Open:
; Line 406
	jmp	$LN28@Open
$LN31@Open:
; Line 408
	cmp	DWORD PTR _res$71548[ebp], 1
	je	SHORT $LN27@Open
; Line 409
	mov	eax, DWORD PTR _res$71548[ebp]
	mov	DWORD PTR $T73386[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73386[ebp]
	jmp	$LN48@Open
$LN27@Open:
; Line 410
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty
	mov	BYTE PTR tv542[ebp], al
	movzx	ecx, BYTE PTR tv542[ebp]
	test	ecx, ecx
	je	SHORT $LN26@Open
; Line 411
	mov	DWORD PTR $T73387[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73387[ebp]
	jmp	$LN48@Open
$LN26@Open:
; Line 412
	movzx	edx, BYTE PTR _prevChecked$71541[ebp]
	test	edx, edx
	je	SHORT $LN25@Open
; Line 413
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	$LN45@Open
$LN25@Open:
; Line 414
	mov	BYTE PTR _prevChecked$71541[ebp], 1
; Line 415
	cmp	DWORD PTR _numTempVolumes$71543[ebp], 0
	je	SHORT $LN28@Open
; Line 417
	mov	eax, DWORD PTR _numTempVolumes$71543[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal
; Line 418
	mov	DWORD PTR _numTempVolumes$71543[ebp], 0
$LN28@Open:
; Line 422
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _numItems$71542[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv543[ebp], eax
	mov	eax, DWORD PTR tv543[ebp]
	mov	DWORD PTR ___result__$71584[ebp], eax
	cmp	DWORD PTR ___result__$71584[ebp], 0
	je	SHORT $LN23@Open
	mov	ecx, DWORD PTR ___result__$71584[ebp]
	mov	DWORD PTR $T73388[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73388[ebp]
	jmp	$LN48@Open
$LN23@Open:
; Line 424
	push	0
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
$LN22@Open:
; Line 428
	mov	DWORD PTR _otherArc$71590[ebp], 0
; Line 429
	movzx	edx, BYTE PTR _prevChecked$71541[ebp]
	test	edx, edx
	jne	$LN20@Open
; Line 431
	cmp	DWORD PTR _numTempVolumes$71543[ebp], 0
	jne	SHORT $LN19@Open
; Line 433
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv544[ebp], eax
	mov	eax, DWORD PTR tv544[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _ai$71593[ebp], eax
; Line 434
	mov	ecx, DWORD PTR _ai$71593[ebp]
	call	?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::IsTherePrev
	mov	BYTE PTR tv545[ebp], al
	movzx	ecx, BYTE PTR tv545[ebp]
	test	ecx, ecx
	je	SHORT $LN18@Open
; Line 435
	mov	edx, DWORD PTR _ai$71593[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR _otherArc$71590[ebp], edx
; Line 436
	jmp	SHORT $LN17@Open
$LN18@Open:
; Line 437
	mov	BYTE PTR _prevChecked$71541[ebp], 1
$LN17@Open:
; Line 439
	jmp	SHORT $LN20@Open
$LN19@Open:
; Line 441
	mov	eax, DWORD PTR _numTempVolumes$71543[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv546[ebp], eax
	mov	ecx, DWORD PTR tv546[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _ai$71597[ebp], ecx
; Line 442
	mov	ecx, DWORD PTR _ai$71597[ebp]
	call	?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::IsThereNext
	mov	BYTE PTR tv547[ebp], al
	movzx	edx, BYTE PTR tv547[ebp]
	test	edx, edx
	je	SHORT $LN15@Open
; Line 443
	mov	eax, DWORD PTR _ai$71597[ebp]
	add	eax, 52					; 00000034H
	mov	DWORD PTR _otherArc$71590[ebp], eax
; Line 444
	jmp	SHORT $LN20@Open
$LN15@Open:
; Line 446
	mov	BYTE PTR _prevChecked$71541[ebp], 1
; Line 447
	mov	ecx, DWORD PTR _numTempVolumes$71543[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal
; Line 448
	mov	DWORD PTR _numTempVolumes$71543[ebp], 0
$LN20@Open:
; Line 452
	cmp	DWORD PTR _otherArc$71590[ebp], 0
	jne	SHORT $LN13@Open
; Line 454
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Back@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Back
	mov	DWORD PTR tv548[ebp], eax
	mov	edx, DWORD PTR tv548[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR _ai$71601[ebp], edx
; Line 455
	mov	ecx, DWORD PTR _ai$71601[ebp]
	call	?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::IsThereNext
	mov	BYTE PTR tv549[ebp], al
	movzx	eax, BYTE PTR tv549[ebp]
	test	eax, eax
	je	SHORT $LN13@Open
; Line 456
	mov	ecx, DWORD PTR _ai$71601[ebp]
	add	ecx, 52					; 00000034H
	mov	DWORD PTR _otherArc$71590[ebp], ecx
$LN13@Open:
; Line 458
	cmp	DWORD PTR _otherArc$71590[ebp], 0
	jne	SHORT $LN11@Open
; Line 459
	jmp	$LN21@Open
$LN11@Open:
; Line 460
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ ; CMyComPtr<IArchiveOpenVolumeCallback>::operator!
	mov	BYTE PTR tv550[ebp], al
	movzx	edx, BYTE PTR tv550[ebp]
	test	edx, edx
	je	SHORT $LN10@Open
; Line 461
	jmp	$LN21@Open
$LN10@Open:
; Line 463
	push	0
	mov	eax, DWORD PTR _otherArc$71590[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	push	ecx
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	DWORD PTR tv551[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 464
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::operator->
	mov	DWORD PTR tv552[ebp], eax
	mov	edx, DWORD PTR tv552[ebp]
	mov	DWORD PTR tv447[ebp], edx
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??I?$CMyComPtr@UIInStream@@@@QAEPAPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator&
	mov	DWORD PTR tv553[ebp], eax
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv554[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv553[ebp]
	push	eax
	mov	ecx, DWORD PTR tv554[ebp]
	push	ecx
	mov	edx, DWORD PTR tv447[ebp]
	push	edx
	mov	eax, DWORD PTR tv447[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv555[ebp], eax
	mov	eax, DWORD PTR tv555[ebp]
	mov	DWORD PTR _result$71607[ebp], eax
; Line 465
	cmp	DWORD PTR _result$71607[ebp], 0
	jne	SHORT $LN9@Open
; Line 466
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN21@Open
$LN9@Open:
; Line 467
	cmp	DWORD PTR _result$71607[ebp], 1
	je	SHORT $LN8@Open
; Line 468
	mov	ecx, DWORD PTR _result$71607[ebp]
	mov	DWORD PTR $T73389[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73389[ebp]
	jmp	$LN48@Open
$LN8@Open:
; Line 470
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	mov	BYTE PTR tv556[ebp], al
	movzx	edx, BYTE PTR tv556[ebp]
	test	edx, edx
	jne	SHORT $LN7@Open
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Add_LF@UString@@QAEXXZ			; UString::Add_LF
$LN7@Open:
; Line 472
	push	OFFSET $SG71614
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 473
	lea	eax, DWORD PTR _fullName$71605[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 475
	movzx	ecx, BYTE PTR _prevChecked$71541[ebp]
	test	ecx, ecx
	je	SHORT $LN6@Open
; Line 476
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	SHORT $LN21@Open
$LN6@Open:
; Line 477
	mov	BYTE PTR _prevChecked$71541[ebp], 1
; Line 478
	cmp	DWORD PTR _numTempVolumes$71543[ebp], 0
	je	SHORT $LN5@Open
; Line 480
	mov	edx, DWORD PTR _numTempVolumes$71543[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal
; Line 481
	mov	DWORD PTR _numTempVolumes$71543[ebp], 0
$LN5@Open:
; Line 483
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN22@Open
$LN21@Open:
; Line 485
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _db$71547[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	$LN46@Open
$LN45@Open:
; Line 487
	cmp	DWORD PTR _numTempVolumes$71543[ebp], 0
	je	SHORT $LN4@Open
; Line 489
	mov	eax, DWORD PTR _numTempVolumes$71543[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal
; Line 490
	mov	DWORD PTR _numTempVolumes$71543[ebp], 0
$LN4@Open:
; Line 492
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty
	mov	BYTE PTR tv557[ebp], al
	movzx	ecx, BYTE PTR tv557[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Open
; Line 493
	mov	DWORD PTR $T73390[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73390[ebp]
	jmp	$LN48@Open
; Line 494
	jmp	SHORT $LN2@Open
$LN3@Open:
; Line 496
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?FillSortAndShrink@CMvDatabaseEx@NCab@NArchive@@QAEXXZ ; NArchive::NCab::CMvDatabaseEx::FillSortAndShrink
; Line 497
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Check@CMvDatabaseEx@NCab@NArchive@@QAE_NXZ ; NArchive::NCab::CMvDatabaseEx::Check
	mov	BYTE PTR tv558[ebp], al
	movzx	edx, BYTE PTR tv558[ebp]
	test	edx, edx
	jne	SHORT $LN2@Open
; Line 498
	mov	DWORD PTR $T73391[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73391[ebp]
	jmp	SHORT $LN48@Open
$LN2@Open:
; Line 501
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _archive$71499[ebp]
	call	??1CInArchive@NCab@NArchive@@QAE@XZ
	jmp	SHORT $LN52@Open
__catch$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0:
	mov	DWORD PTR $T73392[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN60@Open
	ret	0
	mov	eax, $LN52@Open
	ret	0
$LN52@Open:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN59@Open
$LN60@Open:
	mov	eax, DWORD PTR $T73392[ebp]
	jmp	SHORT $LN48@Open
$LN59@Open:
; Line 502
	xor	eax, eax
$LN48@Open:
; Line 503
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN70@Open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN70@Open:
	DD	6
	DD	$LN69@Open
$LN69@Open:
	DD	-76					; ffffffb4H
	DD	56					; 00000038H
	DD	$LN62@Open
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN63@Open
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN64@Open
	DD	-120					; ffffff88H
	DD	8
	DD	$LN65@Open
	DD	-260					; fffffefcH
	DD	128					; 00000080H
	DD	$LN66@Open
	DD	-316					; fffffec4H
	DD	12					; 0000000cH
	DD	$LN67@Open
$LN67@Open:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN66@Open:
	DB	100					; 00000064H
	DB	98					; 00000062H
	DB	0
$LN65@Open:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	0
$LN64@Open:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN63@Open:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN62@Open:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2:
	lea	ecx, DWORD PTR _archive$71499[ebp]
	jmp	??1CInArchive@NCab@NArchive@@QAE@XZ
__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$3:
	lea	ecx, DWORD PTR _openVolumeCallback$71537[ebp]
	jmp	??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$4:
	lea	ecx, DWORD PTR _nextStream$71540[ebp]
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$5:
	lea	ecx, DWORD PTR _db$71547[ebp]
	jmp	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
__unwindfunclet$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$6:
	lea	ecx, DWORD PTR _fullName$71605[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-476]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z ENDP ; NArchive::NCab::CHandler::Open
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CArchInfo::IsTherePrev, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTherePrev@CArchInfo@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CArchInfo::IsTherePrev
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ PROC	; NArchive::NCab::CArchInfo::IsThereNext, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 2
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsThereNext@CArchInfo@NCab@NArchive@@QBE_NXZ ENDP	; NArchive::NCab::CArchInfo::IsThereNext
_TEXT	ENDS
PUBLIC	??0?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::CBuffer<unsigned char>
EXTRN	??0CInBufferBase@@QAE@XZ:PROC			; CInBufferBase::CInBufferBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInArchive@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInArchive@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CInArchive::CInArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInArchive@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CInArchive::CInArchive
_TEXT	ENDS
PUBLIC	??1?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInArchive@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInArchive@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CInArchive::~CInArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInArchive@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CInArchive::~CInArchive
_TEXT	ENDS
PUBLIC	??1CDatabase@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CDatabase::~CDatabase
PUBLIC	??0?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
PUBLIC	??0CDatabase@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CDatabase::CDatabase
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDatabaseEx@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDatabaseEx@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CDatabaseEx@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDatabaseEx@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDatabaseEx@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDatabaseEx@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CDatabaseEx::CDatabaseEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDatabase@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??0?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDatabaseEx@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDatabase@NCab@NArchive@@QAE@XZ
__ehhandler$??0CDatabaseEx@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDatabaseEx@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CDatabaseEx::CDatabaseEx
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDatabaseEx@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDatabaseEx@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CDatabaseEx@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDatabaseEx@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatabaseEx@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CDatabaseEx::~CDatabaseEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDatabase@NCab@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDatabaseEx@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDatabase@NCab@NArchive@@QAE@XZ
__ehhandler$??1CDatabaseEx@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatabaseEx@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CDatabaseEx::~CDatabaseEx
PUBLIC	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
PUBLIC	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
PUBLIC	??0CInArcInfo@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CInArcInfo::CInArcInfo
PUBLIC	??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>
PUBLIC	??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDatabase@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@XZ$1
__ehfuncinfo$??0CDatabase@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDatabase@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDatabase@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDatabase@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CDatabase::CDatabase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDatabase@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0CInArcInfo@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
__ehhandler$??0CDatabase@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDatabase@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDatabase@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CDatabase::CDatabase
PUBLIC	??1CInArcInfo@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CInArcInfo::~CInArcInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDatabase@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$1
__ehfuncinfo$??1CDatabase@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CDatabase@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDatabase@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatabase@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CDatabase::~CDatabase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatabase@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1CInArcInfo@NCab@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
__ehhandler$??1CDatabase@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatabase@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatabase@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CDatabase::~CDatabase
PUBLIC	??0CArchInfo@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CArchInfo::CArchInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInArcInfo@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInArcInfo@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CInArcInfo::CInArcInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CArchInfo@NCab@NArchive@@QAE@XZ	; NArchive::NCab::CArchInfo::CArchInfo
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInArcInfo@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CInArcInfo::CInArcInfo
_TEXT	ENDS
PUBLIC	??1COtherArc@NCab@NArchive@@QAE@XZ		; NArchive::NCab::COtherArc::~COtherArc
PUBLIC	??0COtherArc@NCab@NArchive@@QAE@XZ		; NArchive::NCab::COtherArc::COtherArc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CArchInfo@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CArchInfo@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CArchInfo@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CArchInfo@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CArchInfo@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CArchInfo@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CArchInfo::CArchInfo, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CArchInfo@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0COtherArc@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0COtherArc@NCab@NArchive@@QAE@XZ
; Line 52
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+24], ax
; Line 53
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+26], 0
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+27], 0
; Line 55
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CArchInfo@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1COtherArc@NCab@NArchive@@QAE@XZ
__ehhandler$??0CArchInfo@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CArchInfo@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CArchInfo@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CArchInfo::CArchInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0COtherArc@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COtherArc@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??0COtherArc@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0COtherArc@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0COtherArc@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0COtherArc@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::COtherArc::COtherArc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0COtherArc@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0COtherArc@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0COtherArc@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0COtherArc@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0COtherArc@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::COtherArc::COtherArc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1COtherArc@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1COtherArc@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1COtherArc@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1COtherArc@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1COtherArc@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1COtherArc@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::COtherArc::~COtherArc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1COtherArc@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1COtherArc@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1COtherArc@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1COtherArc@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1COtherArc@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::COtherArc::~COtherArc
PUBLIC	??1CArchInfo@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CArchInfo::~CArchInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInArcInfo@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInArcInfo@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CInArcInfo::~CInArcInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CArchInfo@NCab@NArchive@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInArcInfo@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CInArcInfo::~CInArcInfo
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CArchInfo@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CArchInfo@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CArchInfo@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CArchInfo@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CArchInfo@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CArchInfo@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CArchInfo::~CArchInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CArchInfo@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1COtherArc@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1COtherArc@NCab@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CArchInfo@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1COtherArc@NCab@NArchive@@QAE@XZ
__ehhandler$??1CArchInfo@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CArchInfo@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CArchInfo@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CArchInfo::~CArchInfo
PUBLIC	?Clear@CMvDatabaseEx@NCab@NArchive@@QAEXXZ	; NArchive::NCab::CMvDatabaseEx::Clear
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?Close@CHandler@NCab@NArchive@@UAGJXZ		; NArchive::NCab::CHandler::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Close@CHandler@NCab@NArchive@@UAGJXZ PROC		; NArchive::NCab::CHandler::Close
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
; Line 506
	push	ebp
	mov	ebp, esp
; Line 507
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 0
; Line 509
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+69], 0
; Line 510
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+70], 0
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 513
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
	mov	DWORD PTR [ecx+84], 0
; Line 515
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Clear@CMvDatabaseEx@NCab@NArchive@@QAEXXZ ; NArchive::NCab::CMvDatabaseEx::Clear
; Line 516
	xor	eax, eax
; Line 517
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?Close@CHandler@NCab@NArchive@@UAGJXZ ENDP		; NArchive::NCab::CHandler::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
PUBLIC	?Clear@?$CRecordVector@I@@QAEXXZ		; CRecordVector<unsigned int>::Clear
PUBLIC	?Clear@?$CRecordVector@H@@QAEXXZ		; CRecordVector<int>::Clear
PUBLIC	?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CMvItem>::Clear
PUBLIC	?Clear@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CMvDatabaseEx@NCab@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CMvDatabaseEx@NCab@NArchive@@QAEXXZ PROC		; NArchive::NCab::CMvDatabaseEx::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 137
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Clear
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::NCab::CMvItem>::Clear
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Clear@?$CRecordVector@H@@QAEXXZ	; CRecordVector<int>::Clear
; Line 141
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Clear@?$CRecordVector@I@@QAEXXZ	; CRecordVector<unsigned int>::Clear
; Line 142
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CMvDatabaseEx@NCab@NArchive@@QAEXXZ ENDP		; NArchive::NCab::CMvDatabaseEx::Clear
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z ; CMyComPtr<IArchiveExtractCallback>::operator=
PUBLIC	?Init@CFolderOutStream@NCab@NArchive@@QAEXPBVCMvDatabaseEx@23@PBV?$CRecordVector@_N@@I_KPAUIArchiveExtractCallback@@_N@Z ; NArchive::NCab::CFolderOutStream::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_database$ = 8						; size = 4
_extractStatuses$ = 12					; size = 4
_startIndex$ = 16					; size = 4
_folderSize$ = 20					; size = 8
_extractCallback$ = 28					; size = 4
_testMode$ = 32						; size = 1
?Init@CFolderOutStream@NCab@NArchive@@QAEXPBVCMvDatabaseEx@23@PBV?$CRecordVector@_N@@I_KPAUIArchiveExtractCallback@@_N@Z PROC ; NArchive::NCab::CFolderOutStream::Init
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
; Line 586
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 587
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _database$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 588
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _extractStatuses$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 589
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _startIndex$[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 590
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _folderSize$[ebp]
	mov	DWORD PTR [eax+64], ecx
	mov	edx, DWORD PTR _folderSize$[ebp+4]
	mov	DWORD PTR [eax+68], edx
; Line 592
	mov	eax, DWORD PTR _extractCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z ; CMyComPtr<IArchiveExtractCallback>::operator=
; Line 593
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _testMode$[ebp]
	mov	BYTE PTR [ecx+48], dl
; Line 595
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
; Line 596
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0
	mov	DWORD PTR [ecx+76], 0
; Line 597
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+57], 0
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], 1
; Line 599
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28], 0
; Line 600
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 601
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Init@CFolderOutStream@NCab@NArchive@@QAEXPBVCMvDatabaseEx@23@PBV?$CRecordVector@_N@@I_KPAUIArchiveExtractCallback@@_N@Z ENDP ; NArchive::NCab::CFolderOutStream::Init
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
PUBLIC	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
PUBLIC	?CloseFileWithResOp@CFolderOutStream@NCab@NArchive@@AAEJH@Z ; NArchive::NCab::CFolderOutStream::CloseFileWithResOp
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
_resOp$ = 8						; size = 4
?CloseFileWithResOp@CFolderOutStream@NCab@NArchive@@AAEJH@Z PROC ; NArchive::NCab::CFolderOutStream::CloseFileWithResOp
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 606
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+57], 0
; Line 607
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], edx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _resOp$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 609
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CloseFileWithResOp@CFolderOutStream@NCab@NArchive@@AAEJH@Z ENDP ; NArchive::NCab::CFolderOutStream::CloseFileWithResOp
_TEXT	ENDS
PUBLIC	?CloseFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::CloseFile
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseFile@CFolderOutStream@NCab@NArchive@@AAEJXZ PROC	; NArchive::NCab::CFolderOutStream::CloseFile
; _this$ = ecx
; Line 612
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+56]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -2					; fffffffeH
	add	ecx, 2
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseFileWithResOp@CFolderOutStream@NCab@NArchive@@AAEJH@Z ; NArchive::NCab::CFolderOutStream::CloseFileWithResOp
; Line 616
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CloseFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ENDP	; NArchive::NCab::CFolderOutStream::CloseFile
_TEXT	ENDS
PUBLIC	??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ	; CMyComPtr<ISequentialOutStream>::operator!
PUBLIC	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
PUBLIC	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
PUBLIC	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	?FreeTempBuf@CFolderOutStream@NCab@NArchive@@AAEXXZ ; NArchive::NCab::CFolderOutStream::FreeTempBuf
PUBLIC	??A?$CRecordVector@_N@@QBEAB_NI@Z		; CRecordVector<bool>::operator[]
PUBLIC	?Size@?$CRecordVector@_N@@QBEIXZ		; CRecordVector<bool>::Size
PUBLIC	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
PUBLIC	?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::OpenFile
EXTRN	_MyAlloc@4:PROC
xdata$x	SEGMENT
__unwindtable$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ$0
__ehfuncinfo$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv279 = -100						; size = 4
tv253 = -96						; size = 4
tv248 = -92						; size = 4
tv225 = -88						; size = 4
tv205 = -84						; size = 4
$T73526 = -80						; size = 4
$T73525 = -76						; size = 4
$T73524 = -72						; size = 4
___result__$71935 = -68					; size = 4
_askMode$ = -64						; size = 4
___result__$71931 = -60					; size = 4
___result__$71925 = -56					; size = 4
_stream$71924 = -48					; size = 4
_item2$71907 = -40					; size = 4
_mvItem2$71906 = -36					; size = 4
_curIndex$71807 = -32					; size = 4
_numExtractItems$71806 = -28				; size = 4
_item$71805 = -24					; size = 4
_mvItem$71804 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ PROC	; NArchive::NCab::CFolderOutStream::OpenFile
; _this$ = ecx
; Line 619
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-100]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 620
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	$LN21@OpenFile
; Line 622
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+40]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR _mvItem$71804[ebp], eax
; Line 623
	mov	edx, DWORD PTR _mvItem$71804[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _mvItem$71804[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item$71805[ebp], eax
; Line 624
	mov	DWORD PTR _numExtractItems$71806[ebp], 0
; Line 627
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _curIndex$71807[ebp], edx
	jmp	SHORT $LN20@OpenFile
$LN19@OpenFile:
	mov	eax, DWORD PTR _curIndex$71807[ebp]
	add	eax, 1
	mov	DWORD PTR _curIndex$71807[ebp], eax
$LN20@OpenFile:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+12]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	cmp	DWORD PTR _curIndex$71807[ebp], eax
	jae	$LN18@OpenFile
; Line 629
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	add	eax, DWORD PTR _curIndex$71807[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR _mvItem2$71906[ebp], eax
; Line 630
	mov	edx, DWORD PTR _mvItem2$71906[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _mvItem2$71906[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item2$71907[ebp], eax
; Line 633
	mov	ecx, DWORD PTR _item$71805[ebp]
	mov	edx, DWORD PTR _item2$71907[ebp]
	mov	eax, DWORD PTR [ecx+12]
	cmp	eax, DWORD PTR [edx+12]
	jne	SHORT $LN16@OpenFile
	mov	ecx, DWORD PTR _item$71805[ebp]
	mov	edx, DWORD PTR _item2$71907[ebp]
	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN16@OpenFile
	mov	ecx, DWORD PTR _item$71805[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN17@OpenFile
$LN16@OpenFile:
; Line 634
	jmp	SHORT $LN18@OpenFile
$LN17@OpenFile:
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+48]
	test	eax, eax
	jne	SHORT $LN15@OpenFile
	mov	ecx, DWORD PTR _curIndex$71807[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	??A?$CRecordVector@_N@@QBEAB_NI@Z	; CRecordVector<bool>::operator[]
	movzx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN15@OpenFile
; Line 636
	mov	ecx, DWORD PTR _numExtractItems$71806[ebp]
	add	ecx, 1
	mov	DWORD PTR _numExtractItems$71806[ebp], ecx
$LN15@OpenFile:
; Line 637
	jmp	$LN19@OpenFile
$LN18@OpenFile:
; Line 639
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _curIndex$71807[ebp]
	sub	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 640
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN14@OpenFile
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 1
$LN14@OpenFile:
; Line 642
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28], 0
; Line 644
	cmp	DWORD PTR _numExtractItems$71806[ebp], 1
	jbe	SHORT $LN13@OpenFile
; Line 646
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN11@OpenFile
	mov	eax, DWORD PTR _item$71805[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+20]
	jbe	SHORT $LN12@OpenFile
$LN11@OpenFile:
; Line 648
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeTempBuf@CFolderOutStream@NCab@NArchive@@AAEXXZ ; NArchive::NCab::CFolderOutStream::FreeTempBuf
; Line 649
	mov	eax, DWORD PTR _item$71805[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_MyAlloc@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 650
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _item$71805[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+20], edx
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN12@OpenFile
; Line 652
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN22@OpenFile
$LN12@OpenFile:
; Line 654
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28], 1
; Line 655
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _item$71805[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+32], ecx
	jmp	$LN21@OpenFile
$LN13@OpenFile:
; Line 657
	cmp	DWORD PTR _numExtractItems$71806[ebp], 1
	jne	$LN21@OpenFile
$LN7@OpenFile:
; Line 659
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	$LN21@OpenFile
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	??A?$CRecordVector@_N@@QBEAB_NI@Z	; CRecordVector<bool>::operator[]
	movzx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	$LN21@OpenFile
; Line 661
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 662
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv205[ebp], eax
	mov	esi, esp
	push	2
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+40]
	push	edx
	mov	ecx, DWORD PTR tv205[ebp]
	push	ecx
	mov	edx, DWORD PTR tv205[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71925[ebp], eax
	cmp	DWORD PTR ___result__$71925[ebp], 0
	je	SHORT $LN5@OpenFile
	mov	edx, DWORD PTR ___result__$71925[ebp]
	mov	DWORD PTR $T73524[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T73524[ebp]
	jmp	$LN22@OpenFile
$LN5@OpenFile:
; Line 663
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	test	eax, eax
	je	SHORT $LN4@OpenFile
; Line 664
	mov	DWORD PTR $T73525[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T73525[ebp]
	jmp	$LN22@OpenFile
$LN4@OpenFile:
; Line 665
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv225[ebp], eax
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR tv225[ebp]
	push	eax
	mov	ecx, DWORD PTR tv225[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71931[ebp], eax
	cmp	DWORD PTR ___result__$71931[ebp], 0
	je	SHORT $LN3@OpenFile
	mov	ecx, DWORD PTR ___result__$71931[ebp]
	mov	DWORD PTR $T73526[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T73526[ebp]
	jmp	$LN22@OpenFile
$LN3@OpenFile:
; Line 666
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 667
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+57], 1
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::CloseFile
; Line 669
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stream$71924[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	jmp	$LN7@OpenFile
$LN21@OpenFile:
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	??A?$CRecordVector@_N@@QBEAB_NI@Z	; CRecordVector<bool>::operator[]
	movzx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN24@OpenFile
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+48]
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	DWORD PTR tv248[ebp], edx
	jmp	SHORT $LN25@OpenFile
$LN24@OpenFile:
	mov	DWORD PTR tv248[ebp], 2
$LN25@OpenFile:
	mov	eax, DWORD PTR tv248[ebp]
	mov	DWORD PTR _askMode$[ebp], eax
; Line 677
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv253[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _askMode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+40]
	push	eax
	mov	edx, DWORD PTR tv253[ebp]
	push	edx
	mov	eax, DWORD PTR tv253[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71935[ebp], eax
	cmp	DWORD PTR ___result__$71935[ebp], 0
	je	SHORT $LN2@OpenFile
	mov	eax, DWORD PTR ___result__$71935[ebp]
	jmp	SHORT $LN22@OpenFile
$LN2@OpenFile:
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ ; CMyComPtr<ISequentialOutStream>::operator!
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@OpenFile
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+48]
	test	edx, edx
	jne	SHORT $LN1@OpenFile
; Line 679
	mov	DWORD PTR _askMode$[ebp], 2
$LN1@OpenFile:
; Line 680
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv279[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _askMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv279[ebp]
	push	ecx
	mov	edx, DWORD PTR tv279[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@OpenFile:
; Line 681
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@OpenFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 100				; 00000064H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN30@OpenFile:
	DD	1
	DD	$LN29@OpenFile
$LN29@OpenFile:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN27@OpenFile
$LN27@OpenFile:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ$0:
	lea	ecx, DWORD PTR _stream$71924[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__ehhandler$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ENDP	; NArchive::NCab::CFolderOutStream::OpenFile
EXTRN	_MyFree@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?FreeTempBuf@CFolderOutStream@NCab@NArchive@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FreeTempBuf@CFolderOutStream@NCab@NArchive@@AAEXXZ PROC ; NArchive::NCab::CFolderOutStream::FreeTempBuf, COMDAT
; _this$ = ecx
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_MyFree@4
; Line 553
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 554
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FreeTempBuf@CFolderOutStream@NCab@NArchive@@AAEXXZ ENDP ; NArchive::NCab::CFolderOutStream::FreeTempBuf
_TEXT	ENDS
PUBLIC	?WriteEmptyFiles@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::WriteEmptyFiles
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv141 = -36						; size = 4
___result__$71954 = -32					; size = 4
___result__$71952 = -28					; size = 4
_result$71951 = -24					; size = 4
_fileSize$71948 = -20					; size = 8
_item$71947 = -12					; size = 4
_mvItem$71946 = -8					; size = 4
_this$ = -4						; size = 4
?WriteEmptyFiles@CFolderOutStream@NCab@NArchive@@QAEJXZ PROC ; NArchive::NCab::CFolderOutStream::WriteEmptyFiles
; _this$ = ecx
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 685
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+57]
	test	ecx, ecx
	je	SHORT $LN7@WriteEmpty
; Line 686
	xor	eax, eax
	jmp	$LN8@WriteEmpty
$LN7@WriteEmpty:
; Line 687
	jmp	SHORT $LN6@WriteEmpty
$LN5@WriteEmpty:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax
$LN6@WriteEmpty:
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], eax
	jae	$LN4@WriteEmpty
; Line 689
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+40]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR _mvItem$71946[ebp], eax
; Line 690
	mov	eax, DWORD PTR _mvItem$71946[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _mvItem$71946[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR _item$71947[ebp], eax
; Line 691
	mov	edx, DWORD PTR _item$71947[ebp]
	mov	eax, DWORD PTR [edx+16]
	xor	ecx, ecx
	mov	DWORD PTR _fileSize$71948[ebp], eax
	mov	DWORD PTR _fileSize$71948[ebp+4], ecx
; Line 692
	mov	edx, DWORD PTR _fileSize$71948[ebp]
	or	edx, DWORD PTR _fileSize$71948[ebp+4]
	je	SHORT $LN3@WriteEmpty
; Line 693
	xor	eax, eax
	jmp	SHORT $LN8@WriteEmpty
$LN3@WriteEmpty:
; Line 694
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::OpenFile
	mov	DWORD PTR _result$71951[ebp], eax
; Line 695
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 696
	mov	eax, DWORD PTR _result$71951[ebp]
	mov	DWORD PTR ___result__$71952[ebp], eax
	cmp	DWORD PTR ___result__$71952[ebp], 0
	je	SHORT $LN2@WriteEmpty
	mov	eax, DWORD PTR ___result__$71952[ebp]
	jmp	SHORT $LN8@WriteEmpty
$LN2@WriteEmpty:
; Line 697
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv141[ebp], eax
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71954[ebp], eax
	cmp	DWORD PTR ___result__$71954[ebp], 0
	je	SHORT $LN1@WriteEmpty
	mov	eax, DWORD PTR ___result__$71954[ebp]
	jmp	SHORT $LN8@WriteEmpty
$LN1@WriteEmpty:
; Line 698
	jmp	$LN5@WriteEmpty
$LN4@WriteEmpty:
; Line 699
	xor	eax, eax
$LN8@WriteEmpty:
; Line 700
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?WriteEmptyFiles@CFolderOutStream@NCab@NArchive@@QAEJXZ ENDP ; NArchive::NCab::CFolderOutStream::WriteEmptyFiles
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator->
PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
PUBLIC	?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z ; NArchive::NCab::CFolderOutStream::Write2
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
EXTRN	_memcpy:PROC
xdata$x	SEGMENT
__catchsym$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z$0
__unwindtable$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z$2
__ehfuncinfo$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv285 = -200						; size = 4
tv284 = -196						; size = 4
tv484 = -192						; size = 4
tv481 = -188						; size = 8
tv283 = -180						; size = 4
tv451 = -176						; size = 4
tv448 = -172						; size = 8
tv437 = -164						; size = 4
tv434 = -160						; size = 8
tv282 = -152						; size = 4
tv281 = -148						; size = 4
tv280 = -144						; size = 4
tv279 = -140						; size = 4
tv278 = -136						; size = 4
tv277 = -132						; size = 4
tv276 = -128						; size = 4
tv275 = -124						; size = 4
tv274 = -120						; size = 4
tv273 = -116						; size = 4
tv272 = -112						; size = 4
tv271 = -108						; size = 4
tv85 = -104						; size = 4
tv270 = -100						; size = 4
tv269 = -96						; size = 4
tv268 = -92						; size = 4
$T73541 = -88						; size = 4
___result__$72024 = -84					; size = 4
_numBytesToWrite$72018 = -80				; size = 4
_fileOffset$72014 = -76					; size = 4
_item$72013 = -72					; size = 4
_mvItem$72012 = -68					; size = 4
___result__$72006 = -64					; size = 4
___result__$72004 = -60					; size = 4
___result__$72001 = -56					; size = 4
_result$71996 = -52					; size = 4
___result__$71991 = -48					; size = 4
_processedSizeLocal$71982 = -40				; size = 4
_res$71977 = -32					; size = 4
_numBytesToWrite$71971 = -28				; size = 4
_realProcessed$71965 = -24				; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_processedSize$ = 16					; size = 4
_isOK$ = 20						; size = 1
?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z PROC ; NArchive::NCab::CFolderOutStream::Write2
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 184				; 000000b8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 705
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 706
	mov	DWORD PTR _realProcessed$71965[ebp], 0
; Line 707
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN27@Write2
; Line 708
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN27@Write2:
; Line 709
	cmp	DWORD PTR _size$[ebp], 0
	je	$LN26@Write2
; Line 711
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+57]
	test	edx, edx
	je	$LN25@Write2
; Line 713
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR tv268[ebp], eax
	mov	eax, DWORD PTR tv268[ebp]
	mov	DWORD PTR _numBytesToWrite$71971[ebp], eax
; Line 714
	mov	DWORD PTR _res$71977[ebp], 0
; Line 715
	cmp	DWORD PTR _numBytesToWrite$71971[ebp], 0
	je	$LN24@Write2
; Line 717
	movzx	ecx, BYTE PTR _isOK$[ebp]
	test	ecx, ecx
	jne	SHORT $LN23@Write2
; Line 718
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+56], 0
$LN23@Write2:
; Line 719
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv269[ebp], eax
	cmp	DWORD PTR tv269[ebp], 0
	je	SHORT $LN22@Write2
; Line 721
	mov	DWORD PTR _processedSizeLocal$71982[ebp], 0
; Line 722
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator->
	mov	DWORD PTR tv270[ebp], eax
	mov	eax, DWORD PTR tv270[ebp]
	mov	DWORD PTR tv85[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _processedSizeLocal$71982[ebp]
	push	ecx
	mov	edx, DWORD PTR _numBytesToWrite$71971[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv85[ebp]
	push	ecx
	mov	edx, DWORD PTR tv85[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv271[ebp], eax
	mov	edx, DWORD PTR tv271[ebp]
	mov	DWORD PTR _res$71977[ebp], edx
; Line 723
	mov	eax, DWORD PTR _processedSizeLocal$71982[ebp]
	mov	DWORD PTR _numBytesToWrite$71971[ebp], eax
$LN22@Write2:
; Line 725
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+28]
	test	edx, edx
	je	SHORT $LN24@Write2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN24@Write2
; Line 726
	mov	ecx, DWORD PTR _numBytesToWrite$71971[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+72]
	sub	esi, ecx
	mov	ecx, DWORD PTR [eax+76]
	sbb	ecx, edx
	mov	edx, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [edx+16]
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN24@Write2:
; Line 728
	mov	eax, DWORD PTR _realProcessed$71965[ebp]
	add	eax, DWORD PTR _numBytesToWrite$71971[ebp]
	mov	DWORD PTR _realProcessed$71965[ebp], eax
; Line 729
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN20@Write2
; Line 730
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	edx, DWORD PTR _realProcessed$71965[ebp]
	mov	DWORD PTR [ecx], edx
$LN20@Write2:
; Line 731
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _numBytesToWrite$71971[ebp]
	mov	DWORD PTR _data$[ebp], eax
; Line 732
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, DWORD PTR _numBytesToWrite$71971[ebp]
	mov	DWORD PTR _size$[ebp], ecx
; Line 733
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	sub	eax, DWORD PTR _numBytesToWrite$71971[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 734
	mov	edx, DWORD PTR _numBytesToWrite$71971[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+72]
	adc	eax, DWORD PTR [ecx+76]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], edx
	mov	DWORD PTR [ecx+76], eax
; Line 735
	cmp	DWORD PTR _res$71977[ebp], 0
	je	SHORT $LN19@Write2
; Line 736
	mov	eax, DWORD PTR _res$71977[ebp]
	jmp	$LN30@Write2
$LN19@Write2:
; Line 737
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+60], 0
	jne	$LN18@Write2
; Line 739
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::CloseFile
	mov	DWORD PTR tv272[ebp], eax
	mov	eax, DWORD PTR tv272[ebp]
	mov	DWORD PTR ___result__$71991[ebp], eax
	cmp	DWORD PTR ___result__$71991[ebp], 0
	je	SHORT $LN16@Write2
	mov	eax, DWORD PTR ___result__$71991[ebp]
	jmp	$LN30@Write2
$LN16@Write2:
; Line 741
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	$LN15@Write2
; Line 743
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::OpenFile
	mov	DWORD PTR tv273[ebp], eax
	mov	edx, DWORD PTR tv273[ebp]
	mov	DWORD PTR _result$71996[ebp], edx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+57], 1
; Line 745
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], edx
; Line 746
	cmp	DWORD PTR _result$71996[ebp], 0
	jne	SHORT $LN14@Write2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv274[ebp], eax
	cmp	DWORD PTR tv274[ebp], 0
	je	SHORT $LN14@Write2
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN14@Write2
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv275[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+72]
	sub	esi, eax
	mov	eax, DWORD PTR [edx+76]
	sbb	eax, ecx
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR tv275[ebp]
	push	eax
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR _result$71996[ebp], eax
$LN14@Write2:
; Line 749
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN13@Write2
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+28]
	test	eax, eax
	je	SHORT $LN13@Write2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv276[ebp], eax
	cmp	DWORD PTR tv276[ebp], 0
	je	SHORT $LN13@Write2
; Line 751
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseFileWithResOp@CFolderOutStream@NCab@NArchive@@AAEJH@Z ; NArchive::NCab::CFolderOutStream::CloseFileWithResOp
	mov	DWORD PTR tv277[ebp], eax
	mov	ecx, DWORD PTR tv277[ebp]
	mov	DWORD PTR ___result__$72001[ebp], ecx
	cmp	DWORD PTR ___result__$72001[ebp], 0
	je	SHORT $LN12@Write2
	mov	eax, DWORD PTR ___result__$72001[ebp]
	jmp	$LN30@Write2
$LN12@Write2:
; Line 753
	jmp	SHORT $LN11@Write2
$LN13@Write2:
; Line 755
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CloseFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::CloseFile
	mov	DWORD PTR tv278[ebp], eax
	mov	edx, DWORD PTR tv278[ebp]
	mov	DWORD PTR ___result__$72004[ebp], edx
	cmp	DWORD PTR ___result__$72004[ebp], 0
	je	SHORT $LN11@Write2
	mov	eax, DWORD PTR ___result__$72004[ebp]
	jmp	$LN30@Write2
$LN11@Write2:
; Line 757
	mov	eax, DWORD PTR _result$71996[ebp]
	mov	DWORD PTR ___result__$72006[ebp], eax
	cmp	DWORD PTR ___result__$72006[ebp], 0
	je	SHORT $LN9@Write2
	mov	eax, DWORD PTR ___result__$72006[ebp]
	jmp	$LN30@Write2
$LN9@Write2:
; Line 758
	jmp	$LN16@Write2
$LN15@Write2:
; Line 759
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28], 0
$LN18@Write2:
; Line 761
	cmp	DWORD PTR _realProcessed$71965[ebp], 0
	jbe	SHORT $LN8@Write2
; Line 762
	jmp	$LN26@Write2
$LN8@Write2:
; Line 764
	jmp	$LN7@Write2
$LN25@Write2:
; Line 766
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	mov	DWORD PTR tv279[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	cmp	ecx, DWORD PTR tv279[ebp]
	jb	SHORT $LN6@Write2
; Line 767
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@Write2
$LN6@Write2:
; Line 769
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+40]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR tv280[ebp], eax
	mov	eax, DWORD PTR tv280[ebp]
	mov	DWORD PTR _mvItem$72012[ebp], eax
; Line 770
	mov	ecx, DWORD PTR _mvItem$72012[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv281[ebp], eax
	mov	ecx, DWORD PTR _mvItem$72012[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR tv281[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR tv282[ebp], eax
	mov	eax, DWORD PTR tv282[ebp]
	mov	DWORD PTR _item$72013[ebp], eax
; Line 772
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _item$72013[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+60], eax
; Line 774
	mov	ecx, DWORD PTR _item$72013[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _fileOffset$72014[ebp], edx
; Line 775
	mov	eax, DWORD PTR _fileOffset$72014[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv434[ebp], eax
	mov	DWORD PTR tv434[ebp+4], ecx
	mov	DWORD PTR tv437[ebp], edx
	mov	eax, DWORD PTR tv437[ebp]
	mov	ecx, DWORD PTR tv434[ebp+4]
	cmp	ecx, DWORD PTR [eax+76]
	ja	SHORT $LN5@Write2
	jb	SHORT $LN37@Write2
	mov	edx, DWORD PTR tv437[ebp]
	mov	eax, DWORD PTR tv434[ebp]
	cmp	eax, DWORD PTR [edx+72]
	jae	SHORT $LN5@Write2
$LN37@Write2:
; Line 776
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@Write2
$LN5@Write2:
; Line 777
	mov	ecx, DWORD PTR _fileOffset$72014[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv448[ebp], ecx
	mov	DWORD PTR tv448[ebp+4], edx
	mov	DWORD PTR tv451[ebp], eax
	mov	ecx, DWORD PTR tv451[ebp]
	mov	edx, DWORD PTR tv448[ebp+4]
	cmp	edx, DWORD PTR [ecx+76]
	jb	SHORT $LN4@Write2
	ja	SHORT $LN38@Write2
	mov	eax, DWORD PTR tv451[ebp]
	mov	ecx, DWORD PTR tv448[ebp]
	cmp	ecx, DWORD PTR [eax+72]
	jbe	SHORT $LN4@Write2
$LN38@Write2:
; Line 779
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR _fileOffset$72014[ebp]
	sub	edx, ecx
	push	edx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR tv283[ebp], eax
	mov	eax, DWORD PTR tv283[ebp]
	mov	DWORD PTR _numBytesToWrite$72018[ebp], eax
; Line 780
	mov	ecx, DWORD PTR _realProcessed$71965[ebp]
	add	ecx, DWORD PTR _numBytesToWrite$72018[ebp]
	mov	DWORD PTR _realProcessed$71965[ebp], ecx
; Line 781
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN3@Write2
; Line 782
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR _realProcessed$71965[ebp]
	mov	DWORD PTR [edx], eax
$LN3@Write2:
; Line 783
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _numBytesToWrite$72018[ebp]
	mov	DWORD PTR _data$[ebp], ecx
; Line 784
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, DWORD PTR _numBytesToWrite$72018[ebp]
	mov	DWORD PTR _size$[ebp], edx
; Line 785
	mov	eax, DWORD PTR _numBytesToWrite$72018[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+72]
	adc	ecx, DWORD PTR [edx+76]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], eax
	mov	DWORD PTR [edx+76], ecx
$LN4@Write2:
; Line 787
	mov	eax, DWORD PTR _fileOffset$72014[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv481[ebp], eax
	mov	DWORD PTR tv481[ebp+4], ecx
	mov	DWORD PTR tv484[ebp], edx
	mov	eax, DWORD PTR tv484[ebp]
	mov	ecx, DWORD PTR tv481[ebp]
	cmp	ecx, DWORD PTR [eax+72]
	jne	SHORT $LN7@Write2
	mov	edx, DWORD PTR tv484[ebp]
	mov	eax, DWORD PTR tv481[ebp+4]
	cmp	eax, DWORD PTR [edx+76]
	jne	SHORT $LN7@Write2
; Line 789
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::OpenFile
	mov	DWORD PTR tv284[ebp], eax
	mov	ecx, DWORD PTR tv284[ebp]
	mov	DWORD PTR ___result__$72024[ebp], ecx
	cmp	DWORD PTR ___result__$72024[ebp], 0
	je	SHORT $LN1@Write2
	mov	eax, DWORD PTR ___result__$72024[ebp]
	jmp	SHORT $LN30@Write2
$LN1@Write2:
; Line 790
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+57], 1
; Line 791
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], ecx
; Line 792
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], 1
$LN7@Write2:
; Line 795
	jmp	$LN27@Write2
$LN26@Write2:
; Line 796
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteEmptyFiles@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::WriteEmptyFiles
	mov	DWORD PTR tv285[ebp], eax
	mov	eax, DWORD PTR tv285[ebp]
	jmp	SHORT $LN30@Write2
__catch$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z$0:
; Line 797
	mov	DWORD PTR $T73541[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN35@Write2
	ret	0
	mov	eax, __tryend$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z$1
	ret	0
__tryend$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN30@Write2
$LN35@Write2:
	mov	eax, DWORD PTR $T73541[ebp]
$LN30@Write2:
; Line 798
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@Write2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN42@Write2:
	DD	1
	DD	$LN41@Write2
$LN41@Write2:
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN39@Write2
$LN39@Write2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-204]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z ENDP ; NArchive::NCab::CFolderOutStream::Write2
PUBLIC	?Write@CFolderOutStream@NCab@NArchive@@UAGJPBXIPAI@Z ; NArchive::NCab::CFolderOutStream::Write
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Write@CFolderOutStream@NCab@NArchive@@UAGJPBXIPAI@Z PROC ; NArchive::NCab::CFolderOutStream::Write
; Line 801
	push	ebp
	mov	ebp, esp
; Line 802
	push	1
	mov	eax, DWORD PTR _processedSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z ; NArchive::NCab::CFolderOutStream::Write2
; Line 803
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?Write@CFolderOutStream@NCab@NArchive@@UAGJPBXIPAI@Z ENDP ; NArchive::NCab::CFolderOutStream::Write
_TEXT	ENDS
PUBLIC	?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetRemain
PUBLIC	__$ArrayPad$
PUBLIC	?FlushCorrupted@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::FlushCorrupted
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -1080						; size = 4
___result__$72053 = -1076				; size = 4
_processedSizeLocal$72052 = -1068			; size = 4
_size$72049 = -1060					; size = 4
_remain$72046 = -1056					; size = 8
_i$72039 = -1048					; size = 4
_buf$ = -1040						; size = 1024
_kBufSize$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?FlushCorrupted@CFolderOutStream@NCab@NArchive@@QAEJXZ PROC ; NArchive::NCab::CFolderOutStream::FlushCorrupted
; _this$ = ecx
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 1080				; 00000438H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1080]
	mov	ecx, 270				; 0000010eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 807
	mov	DWORD PTR _kBufSize$[ebp], 1024		; 00000400H
; Line 809
	mov	DWORD PTR _i$72039[ebp], 0
	jmp	SHORT $LN7@FlushCorru
$LN6@FlushCorru:
	mov	eax, DWORD PTR _i$72039[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72039[ebp], eax
$LN7@FlushCorru:
	cmp	DWORD PTR _i$72039[ebp], 1024		; 00000400H
	jae	SHORT $LN4@FlushCorru
; Line 810
	mov	ecx, DWORD PTR _i$72039[ebp]
	mov	BYTE PTR _buf$[ebp+ecx], 0
	jmp	SHORT $LN6@FlushCorru
$LN4@FlushCorru:
; Line 813
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetRemain
	mov	DWORD PTR _remain$72046[ebp], eax
	mov	DWORD PTR _remain$72046[ebp+4], edx
; Line 814
	mov	edx, DWORD PTR _remain$72046[ebp]
	or	edx, DWORD PTR _remain$72046[ebp+4]
	jne	SHORT $LN2@FlushCorru
; Line 815
	xor	eax, eax
	jmp	$LN8@FlushCorru
$LN2@FlushCorru:
; Line 816
	cmp	DWORD PTR _remain$72046[ebp+4], 0
	ja	SHORT $LN10@FlushCorru
	jb	SHORT $LN12@FlushCorru
	cmp	DWORD PTR _remain$72046[ebp], 1024	; 00000400H
	jae	SHORT $LN10@FlushCorru
$LN12@FlushCorru:
	mov	eax, DWORD PTR _remain$72046[ebp]
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN11@FlushCorru
$LN10@FlushCorru:
	mov	DWORD PTR tv72[ebp], 1024		; 00000400H
$LN11@FlushCorru:
	mov	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR _size$72049[ebp], ecx
; Line 817
	mov	DWORD PTR _processedSizeLocal$72052[ebp], 0
; Line 818
	push	0
	lea	edx, DWORD PTR _processedSizeLocal$72052[ebp]
	push	edx
	mov	eax, DWORD PTR _size$72049[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write2@CFolderOutStream@NCab@NArchive@@AAEJPBXIPAI_N@Z ; NArchive::NCab::CFolderOutStream::Write2
	mov	DWORD PTR ___result__$72053[ebp], eax
	cmp	DWORD PTR ___result__$72053[ebp], 0
	je	SHORT $LN1@FlushCorru
	mov	eax, DWORD PTR ___result__$72053[ebp]
	jmp	SHORT $LN8@FlushCorru
$LN1@FlushCorru:
; Line 819
	jmp	$LN4@FlushCorru
$LN8@FlushCorru:
; Line 820
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@FlushCorru
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1080				; 00000438H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@FlushCorru:
	DD	2
	DD	$LN15@FlushCorru
$LN15@FlushCorru:
	DD	-1040					; fffffbf0H
	DD	1024					; 00000400H
	DD	$LN13@FlushCorru
	DD	-1068					; fffffbd4H
	DD	4
	DD	$LN14@FlushCorru
$LN14@FlushCorru:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN13@FlushCorru:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?FlushCorrupted@CFolderOutStream@NCab@NArchive@@QAEJXZ ENDP ; NArchive::NCab::CFolderOutStream::FlushCorrupted
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ PROC	; NArchive::NCab::CFolderOutStream::GetRemain, COMDAT
; _this$ = ecx
; Line 575
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+64]
	sub	edx, DWORD PTR [ecx+72]
	mov	esi, DWORD PTR [eax+68]
	sbb	esi, DWORD PTR [ecx+76]
	mov	eax, edx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ ENDP	; NArchive::NCab::CFolderOutStream::GetRemain
_TEXT	ENDS
PUBLIC	?Unsupported@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::Unsupported
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -16						; size = 4
___result__$72065 = -12					; size = 4
_result$72061 = -8					; size = 4
_this$ = -4						; size = 4
?Unsupported@CFolderOutStream@NCab@NArchive@@QAEJXZ PROC ; NArchive::NCab::CFolderOutStream::Unsupported
; _this$ = ecx
; Line 823
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN4@Unsupporte:
; Line 824
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], eax
	jae	SHORT $LN3@Unsupporte
; Line 826
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OpenFile@CFolderOutStream@NCab@NArchive@@AAEJXZ ; NArchive::NCab::CFolderOutStream::OpenFile
	mov	DWORD PTR _result$72061[ebp], eax
; Line 827
	cmp	DWORD PTR _result$72061[ebp], 1
	je	SHORT $LN2@Unsupporte
	cmp	DWORD PTR _result$72061[ebp], 0
	je	SHORT $LN2@Unsupporte
; Line 828
	mov	eax, DWORD PTR _result$72061[ebp]
	jmp	SHORT $LN5@Unsupporte
$LN2@Unsupporte:
; Line 829
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 830
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ; CMyComPtr<IArchiveExtractCallback>::operator->
	mov	DWORD PTR tv79[ebp], eax
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR tv79[ebp]
	push	edx
	mov	eax, DWORD PTR tv79[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$72065[ebp], eax
	cmp	DWORD PTR ___result__$72065[ebp], 0
	je	SHORT $LN1@Unsupporte
	mov	eax, DWORD PTR ___result__$72065[ebp]
	jmp	SHORT $LN5@Unsupporte
$LN1@Unsupporte:
; Line 831
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], ecx
; Line 832
	jmp	SHORT $LN4@Unsupporte
$LN3@Unsupporte:
; Line 833
	xor	eax, eax
$LN5@Unsupporte:
; Line 834
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unsupported@CFolderOutStream@NCab@NArchive@@QAEJXZ ENDP ; NArchive::NCab::CFolderOutStream::Unsupported
_TEXT	ENDS
PUBLIC	?SetKeepHistory@CDecoder@NQuantum@NCompress@@QAEX_N@Z ; NCompress::NQuantum::CDecoder::SetKeepHistory
PUBLIC	?SetKeepHistory@CDecoder@NLzx@NCompress@@QAEX_N@Z ; NCompress::NLzx::CDecoder::SetKeepHistory
PUBLIC	?IsFinalBlock@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::IsFinalBlock
PUBLIC	?IsFinished@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::IsFinished
PUBLIC	?Set_NeedFinishInput@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z ; NCompress::NDeflate::NDecoder::CCoder::Set_NeedFinishInput
PUBLIC	?Set_KeepHistory@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z ; NCompress::NDeflate::NDecoder::CCoder::Set_KeepHistory
PUBLIC	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
PUBLIC	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
PUBLIC	?GetPosInFolder@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetPosInFolder
PUBLIC	?InitForNewBlock@CCabBlockInStream@NCab@NArchive@@QAEXXZ ; NArchive::NCab::CCabBlockInStream::InitForNewBlock
PUBLIC	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
PUBLIC	?GetDataBlockReserveSize@CArchInfo@NCab@NArchive@@QBEEXZ ; NArchive::NCab::CArchInfo::GetDataBlockReserveSize
PUBLIC	??0CDecoder@NQuantum@NCompress@@QAE@XZ		; NCompress::NQuantum::CDecoder::CDecoder
PUBLIC	??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ; CMyComPtr<ICompressCoder>::operator=
PUBLIC	??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder
PUBLIC	??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ	; CMyComPtr<ICompressCoder>::operator!
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	??0CFolderOutStream@NCab@NArchive@@QAE@XZ	; NArchive::NCab::CFolderOutStream::CFolderOutStream
PUBLIC	?Add@?$CRecordVector@_N@@QAEI_N@Z		; CRecordVector<bool>::Add
PUBLIC	?Clear@?$CRecordVector@_N@@QAEXXZ		; CRecordVector<bool>::Clear
PUBLIC	??A?$CRecordVector@I@@QAEAAII@Z			; CRecordVector<unsigned int>::operator[]
PUBLIC	??1?$CRecordVector@_N@@QAE@XZ			; CRecordVector<bool>::~CRecordVector<bool>
PUBLIC	??0?$CRecordVector@_N@@QAE@XZ			; CRecordVector<bool>::CRecordVector<bool>
PUBLIC	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ	; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
PUBLIC	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ	; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??0CCabBlockInStream@NCab@NArchive@@QAE@XZ	; NArchive::NCab::CCabBlockInStream::CCabBlockInStream
PUBLIC	??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ	; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
PUBLIC	??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
PUBLIC	??0CCopyCoder@NCompress@@QAE@XZ			; NCompress::CCopyCoder::CCopyCoder
PUBLIC	??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
PUBLIC	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ	; NArchive::NCab::CItem::GetEndOffset
PUBLIC	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
PUBLIC	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
PUBLIC	?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z ; NArchive::NCab::CHandler::Extract
EXTRN	?PreRead@CCabBlockInStream@NCab@NArchive@@QAEJPAUISequentialInStream@@AAI1@Z:PROC ; NArchive::NCab::CCabBlockInStream::PreRead
EXTRN	?SetParams@CDecoder@NQuantum@NCompress@@QAEJH@Z:PROC ; NCompress::NQuantum::CDecoder::SetParams
EXTRN	?SetParams@CDecoder@NLzx@NCompress@@QAEJI@Z:PROC ; NCompress::NLzx::CDecoder::SetParams
EXTRN	??0CDecoder@NLzx@NCompress@@QAE@_N@Z:PROC	; NCompress::NLzx::CDecoder::CDecoder
EXTRN	?SetCur@CLocalProgress@@QAEJXZ:PROC		; CLocalProgress::SetCur
EXTRN	?Create@CCabBlockInStream@NCab@NArchive@@QAE_NXZ:PROC ; NArchive::NCab::CCabBlockInStream::Create
EXTRN	?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z:PROC ; CLocalProgress::Init
EXTRN	??0CLocalProgress@@QAE@XZ:PROC			; CLocalProgress::CLocalProgress
EXTRN	??2@YAPAXI@Z:PROC				; operator new
xdata$x	SEGMENT
__catchsym$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$19 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0
__tryblocktable$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z DD 00H
	DD	011H
	DD	012H
	DD	01H
	DD	FLAT:__catchsym$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$19
__ehfuncinfo$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z DD 019930522H
	DD	013H
	DD	FLAT:__unwindtable$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$11
	DD	0aH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$12
	DD	0aH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$13
	DD	0aH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$14
	DD	0aH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$15
	DD	0eH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$16
	DD	0eH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$17
	DD	0eH
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$18
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv1074 = -1048						; size = 4
tv1073 = -1044						; size = 8
tv1072 = -1036						; size = 4
tv1071 = -1032						; size = 4
tv1070 = -1028						; size = 4
tv1069 = -1024						; size = 4
tv793 = -1020						; size = 4
tv1068 = -1016						; size = 4
tv1067 = -1012						; size = 4
tv1066 = -1008						; size = 4
tv1065 = -1004						; size = 4
tv775 = -1000						; size = 4
tv1064 = -996						; size = 4
tv1063 = -990						; size = 1
tv1062 = -989						; size = 1
tv1061 = -988						; size = 4
tv1060 = -984						; size = 4
tv1059 = -980						; size = 4
tv740 = -976						; size = 4
tv1058 = -972						; size = 4
tv1057 = -968						; size = 4
tv1056 = -964						; size = 4
tv1055 = -960						; size = 4
tv712 = -956						; size = 4
tv1054 = -952						; size = 4
tv708 = -948						; size = 4
tv1053 = -941						; size = 1
tv1593 = -940						; size = 8
tv1052 = -932						; size = 8
tv1051 = -924						; size = 4
tv1050 = -920						; size = 8
tv1049 = -912						; size = 4
tv1048 = -908						; size = 4
tv1047 = -904						; size = 4
tv1046 = -900						; size = 4
tv610 = -896						; size = 4
tv1045 = -892						; size = 4
tv1044 = -885						; size = 1
tv1043 = -884						; size = 4
tv1042 = -880						; size = 4
tv1041 = -876						; size = 4
tv1040 = -872						; size = 8
tv1039 = -864						; size = 4
tv1038 = -860						; size = 4
tv1037 = -856						; size = 4
tv1036 = -852						; size = 4
tv543 = -848						; size = 4
tv1035 = -844						; size = 4
tv1033 = -840						; size = 4
tv1032 = -833						; size = 1
tv1031 = -832						; size = 4
tv521 = -828						; size = 4
tv1030 = -824						; size = 4
tv1028 = -820						; size = 4
tv1027 = -813						; size = 1
tv502 = -812						; size = 4
tv1026 = -808						; size = 4
tv1024 = -804						; size = 4
tv1023 = -797						; size = 1
tv490 = -796						; size = 4
tv1022 = -789						; size = 1
tv1021 = -788						; size = 4
tv1020 = -784						; size = 4
tv453 = -780						; size = 4
tv452 = -776						; size = 4
tv1019 = -772						; size = 4
tv1017 = -768						; size = 4
tv1016 = -764						; size = 4
tv1015 = -760						; size = 8
tv1014 = -752						; size = 4
tv1013 = -745						; size = 1
tv1012 = -744						; size = 4
tv1011 = -740						; size = 4
tv1010 = -736						; size = 4
tv370 = -732						; size = 4
tv1009 = -728						; size = 8
tv1008 = -720						; size = 4
tv1007 = -716						; size = 4
tv1006 = -712						; size = 4
tv1005 = -708						; size = 4
tv1004 = -704						; size = 4
tv1003 = -700						; size = 4
tv1002 = -696						; size = 4
tv1001 = -692						; size = 4
tv1000 = -688						; size = 4
tv999 = -684						; size = 4
tv998 = -680						; size = 4
tv997 = -676						; size = 4
tv996 = -669						; size = 1
tv995 = -668						; size = 4
tv994 = -664						; size = 4
tv993 = -660						; size = 4
tv261 = -656						; size = 4
tv992 = -652						; size = 4
tv210 = -645						; size = 1
tv209 = -644						; size = 4
tv991 = -640						; size = 4
tv989 = -636						; size = 4
tv988 = -632						; size = 4
tv987 = -628						; size = 4
tv186 = -624						; size = 4
tv185 = -620						; size = 4
tv986 = -616						; size = 4
tv164 = -612						; size = 4
tv163 = -608						; size = 4
tv984 = -604						; size = 4
tv982 = -600						; size = 4
tv981 = -596						; size = 8
tv980 = -588						; size = 4
tv979 = -581						; size = 1
tv978 = -580						; size = 4
tv977 = -576						; size = 4
tv976 = -572						; size = 4
tv83 = -568						; size = 4
tv975 = -564						; size = 4
$T73623 = -560						; size = 4
$T73622 = -556						; size = 4
$T73621 = -552						; size = 4
$T73620 = -548						; size = 4
$T73619 = -544						; size = 4
$T73618 = -540						; size = 4
$T73617 = -536						; size = 4
$T73616 = -532						; size = 4
$T73615 = -528						; size = 4
$T73614 = -524						; size = 4
$T73611 = -520						; size = 4
$T73610 = -516						; size = 4
$T73607 = -512						; size = 4
$T73606 = -508						; size = 4
$T73603 = -504						; size = 4
$T73602 = -500						; size = 4
$T73599 = -496						; size = 4
$T73598 = -492						; size = 4
$T73597 = -488						; size = 4
$T73594 = -484						; size = 4
$T73593 = -480						; size = 4
$T73592 = -476						; size = 4
$T73591 = -472						; size = 4
$T73590 = -468						; size = 4
$T73589 = -464						; size = 4
$T73586 = -460						; size = 4
$T73583 = -456						; size = 4
$T73582 = -452						; size = 4
$T73579 = -448						; size = 4
$T73578 = -444						; size = 4
$T73575 = -440						; size = 4
$T73574 = -436						; size = 4
___result__$72331 = -432				; size = 4
___result__$72325 = -428				; size = 4
___result__$72320 = -424				; size = 4
_kBlockSizeMax$72299 = -420				; size = 4
_unpackRemain$72298 = -412				; size = 8
___result__$72295 = -400				; size = 4
_totalUnPacked2$72294 = -396				; size = 8
___result__$72290 = -388				; size = 4
_unpackSize$72287 = -380				; size = 4
_packSize$72286 = -368					; size = 4
___result__$72280 = -360				; size = 4
_folder$72278 = -356					; size = 4
_db$72277 = -352					; size = 4
_bl$72271 = -348					; size = 4
_keepInputBuffer$72270 = -342				; size = 1
_keepHistory$72269 = -341				; size = 1
_locFolderIndex$72268 = -340				; size = 4
_volIndex$72267 = -336					; size = 4
___result__$72264 = -332				; size = 4
___result__$72261 = -328				; size = 4
_res$72232 = -324					; size = 4
_folder$72231 = -320					; size = 4
_outStream$72230 = -312					; size = 4
_cabFolderOutStream$72224 = -304			; size = 4
___result__$72221 = -300				; size = 4
_newFolderIndex$72216 = -296				; size = 4
_item$72214 = -292					; size = 4
_mvItem$72213 = -288					; size = 4
_indexNext$72212 = -284					; size = 4
_curUnpack$72208 = -280					; size = 8
_startIndex$72204 = -272				; size = 4
_startIndex2$72203 = -268				; size = 4
___result__$72200 = -264				; size = 4
___result__$72197 = -260				; size = 4
___result__$72194 = -256				; size = 4
_realOutStream$72193 = -248				; size = 4
_askMode$72191 = -240					; size = 4
_folderIndex$72189 = -236				; size = 4
___result__$72186 = -232				; size = 4
___result__$72183 = -228				; size = 4
___result__$72180 = -224				; size = 4
_realOutStream$72179 = -216				; size = 4
_askMode$72177 = -208					; size = 4
_item$72175 = -204					; size = 4
_itemIndex$72174 = -200					; size = 4
_db$72173 = -196					; size = 4
_mvItem$72172 = -192					; size = 4
_index$72171 = -188					; size = 4
_extractStatuses$72167 = -180				; size = 12
_cabBlockInStream$72162 = -160				; size = 4
_cabBlockInStreamSpec$72156 = -152			; size = 4
_quantumDecoder$72155 = -144				; size = 4
_quantumDecoderSpec$72153 = -136			; size = 4
_lzxDecoder$72152 = -128				; size = 4
_lzxDecoderSpec$72150 = -120				; size = 4
_deflateDecoder$72149 = -112				; size = 4
_deflateDecoderSpec$72147 = -104			; size = 4
_copyCoder$72146 = -96					; size = 4
_copyCoderSpec$72104 = -88				; size = 4
_progress$72103 = -80					; size = 4
_lps$72097 = -72					; size = 4
_totalPacked$72096 = -68				; size = 8
_folderIndex$72094 = -60				; size = 4
_item$72092 = -56					; size = 4
_mvItem$72091 = -52					; size = 4
_index$72090 = -48					; size = 4
_lastFolderSize$72086 = -44				; size = 8
_lastFolder$72085 = -36					; size = 4
_i$72084 = -32						; size = 4
_totalUnPacked$72083 = -28				; size = 8
_testMode$72082 = -18					; size = 1
_allFilesMode$72076 = -17				; size = 1
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_indices$ = 12						; size = 4
_numItems$ = 16						; size = 4
_testModeSpec$ = 20					; size = 4
_extractCallback$ = 24					; size = 4
?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z PROC ; NArchive::NCab::CHandler::Extract
; Line 839
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 1032				; 00000408H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1048]
	mov	ecx, 258				; 00000102H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 840
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 841
	xor	eax, eax
	cmp	DWORD PTR _numItems$[ebp], -1
	sete	al
	mov	BYTE PTR _allFilesMode$72076[ebp], al
; Line 842
	movzx	ecx, BYTE PTR _allFilesMode$72076[ebp]
	test	ecx, ecx
	je	SHORT $LN74@Extract
; Line 843
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
	mov	DWORD PTR tv975[ebp], eax
	mov	edx, DWORD PTR tv975[ebp]
	mov	DWORD PTR _numItems$[ebp], edx
$LN74@Extract:
; Line 844
	cmp	DWORD PTR _numItems$[ebp], 0
	jne	SHORT $LN73@Extract
; Line 845
	xor	eax, eax
	jmp	$LN76@Extract
$LN73@Extract:
; Line 846
	xor	eax, eax
	cmp	DWORD PTR _testModeSpec$[ebp], 0
	setne	al
	mov	BYTE PTR _testMode$72082[ebp], al
; Line 847
	mov	DWORD PTR _totalUnPacked$72083[ebp], 0
	mov	DWORD PTR _totalUnPacked$72083[ebp+4], 0
; Line 850
	mov	DWORD PTR _lastFolder$72085[ebp], -2	; fffffffeH
; Line 851
	mov	DWORD PTR _lastFolderSize$72086[ebp], 0
	mov	DWORD PTR _lastFolderSize$72086[ebp+4], 0
; Line 853
	mov	DWORD PTR _i$72084[ebp], 0
	jmp	SHORT $LN72@Extract
$LN71@Extract:
	mov	ecx, DWORD PTR _i$72084[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$72084[ebp], ecx
$LN72@Extract:
	mov	edx, DWORD PTR _i$72084[ebp]
	cmp	edx, DWORD PTR _numItems$[ebp]
	jae	$LN70@Extract
; Line 855
	movzx	eax, BYTE PTR _allFilesMode$72076[ebp]
	test	eax, eax
	je	SHORT $LN78@Extract
	mov	ecx, DWORD PTR _i$72084[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	jmp	SHORT $LN79@Extract
$LN78@Extract:
	mov	edx, DWORD PTR _i$72084[ebp]
	mov	eax, DWORD PTR _indices$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv83[ebp], ecx
$LN79@Extract:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _index$72090[ebp], edx
; Line 856
	mov	eax, DWORD PTR _index$72090[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR tv976[ebp], eax
	mov	ecx, DWORD PTR tv976[ebp]
	mov	DWORD PTR _mvItem$72091[ebp], ecx
; Line 857
	mov	edx, DWORD PTR _mvItem$72091[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv977[ebp], eax
	mov	ecx, DWORD PTR _mvItem$72091[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR tv977[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR tv978[ebp], eax
	mov	eax, DWORD PTR tv978[ebp]
	mov	DWORD PTR _item$72092[ebp], eax
; Line 858
	mov	ecx, DWORD PTR _item$72092[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	mov	BYTE PTR tv979[ebp], al
	movzx	ecx, BYTE PTR tv979[ebp]
	test	ecx, ecx
	je	SHORT $LN69@Extract
; Line 859
	jmp	$LN71@Extract
$LN69@Extract:
; Line 860
	mov	edx, DWORD PTR _mvItem$72091[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR tv980[ebp], eax
	mov	eax, DWORD PTR tv980[ebp]
	mov	DWORD PTR _folderIndex$72094[ebp], eax
; Line 861
	mov	ecx, DWORD PTR _folderIndex$72094[ebp]
	cmp	ecx, DWORD PTR _lastFolder$72085[ebp]
	je	SHORT $LN68@Extract
; Line 862
	mov	edx, DWORD PTR _totalUnPacked$72083[ebp]
	add	edx, DWORD PTR _lastFolderSize$72086[ebp]
	mov	eax, DWORD PTR _totalUnPacked$72083[ebp+4]
	adc	eax, DWORD PTR _lastFolderSize$72086[ebp+4]
	mov	DWORD PTR _totalUnPacked$72083[ebp], edx
	mov	DWORD PTR _totalUnPacked$72083[ebp+4], eax
$LN68@Extract:
; Line 863
	mov	ecx, DWORD PTR _folderIndex$72094[ebp]
	mov	DWORD PTR _lastFolder$72085[ebp], ecx
; Line 864
	mov	ecx, DWORD PTR _item$72092[ebp]
	call	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CItem::GetEndOffset
	mov	DWORD PTR tv981[ebp], eax
	mov	DWORD PTR tv981[ebp+4], edx
	mov	edx, DWORD PTR tv981[ebp]
	mov	DWORD PTR _lastFolderSize$72086[ebp], edx
	mov	eax, DWORD PTR tv981[ebp+4]
	mov	DWORD PTR _lastFolderSize$72086[ebp+4], eax
; Line 865
	jmp	$LN71@Extract
$LN70@Extract:
; Line 867
	mov	ecx, DWORD PTR _totalUnPacked$72083[ebp]
	add	ecx, DWORD PTR _lastFolderSize$72086[ebp]
	mov	edx, DWORD PTR _totalUnPacked$72083[ebp+4]
	adc	edx, DWORD PTR _lastFolderSize$72086[ebp+4]
	mov	DWORD PTR _totalUnPacked$72083[ebp], ecx
	mov	DWORD PTR _totalUnPacked$72083[ebp+4], edx
; Line 869
	mov	esi, esp
	mov	eax, DWORD PTR _totalUnPacked$72083[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _totalUnPacked$72083[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _extractCallback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 871
	mov	DWORD PTR _totalUnPacked$72083[ebp], 0
	mov	DWORD PTR _totalUnPacked$72083[ebp+4], 0
; Line 873
	mov	DWORD PTR _totalPacked$72096[ebp], 0
	mov	DWORD PTR _totalPacked$72096[ebp+4], 0
; Line 875
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv982[ebp], eax
	mov	eax, DWORD PTR tv982[ebp]
	mov	DWORD PTR $T73575[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T73575[ebp], 0
	je	SHORT $LN80@Extract
	mov	ecx, DWORD PTR $T73575[ebp]
	call	??0CLocalProgress@@QAE@XZ		; CLocalProgress::CLocalProgress
	mov	DWORD PTR tv984[ebp], eax
	mov	ecx, DWORD PTR tv984[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	jmp	SHORT $LN81@Extract
$LN80@Extract:
	mov	DWORD PTR tv163[ebp], 0
$LN81@Extract:
	mov	edx, DWORD PTR tv163[ebp]
	mov	DWORD PTR $T73574[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR $T73574[ebp]
	mov	DWORD PTR _lps$72097[ebp], eax
; Line 876
	mov	ecx, DWORD PTR _lps$72097[ebp]
	push	ecx
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 877
	push	0
	mov	edx, DWORD PTR _extractCallback$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lps$72097[ebp]
	call	?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z ; CLocalProgress::Init
; Line 879
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv164[ebp], eax
	mov	eax, DWORD PTR tv164[ebp]
	mov	DWORD PTR $T73579[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	cmp	DWORD PTR $T73579[ebp], 0
	je	SHORT $LN82@Extract
	mov	ecx, DWORD PTR $T73579[ebp]
	call	??0CCopyCoder@NCompress@@QAE@XZ		; NCompress::CCopyCoder::CCopyCoder
	mov	DWORD PTR tv986[ebp], eax
	mov	ecx, DWORD PTR tv986[ebp]
	mov	DWORD PTR tv185[ebp], ecx
	jmp	SHORT $LN83@Extract
$LN82@Extract:
	mov	DWORD PTR tv185[ebp], 0
$LN83@Extract:
	mov	edx, DWORD PTR tv185[ebp]
	mov	DWORD PTR $T73578[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	eax, DWORD PTR $T73578[ebp]
	mov	DWORD PTR _copyCoderSpec$72104[ebp], eax
; Line 880
	mov	ecx, DWORD PTR _copyCoderSpec$72104[ebp]
	push	ecx
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 882
	mov	DWORD PTR _deflateDecoderSpec$72147[ebp], 0
; Line 883
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
	mov	DWORD PTR tv186[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 885
	mov	DWORD PTR _lzxDecoderSpec$72150[ebp], 0
; Line 886
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
	mov	DWORD PTR tv987[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
; Line 888
	mov	DWORD PTR _quantumDecoderSpec$72153[ebp], 0
; Line 889
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
	mov	DWORD PTR tv988[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
; Line 891
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv989[ebp], eax
	mov	edx, DWORD PTR tv989[ebp]
	mov	DWORD PTR $T73583[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	cmp	DWORD PTR $T73583[ebp], 0
	je	SHORT $LN84@Extract
	mov	ecx, DWORD PTR $T73583[ebp]
	call	??0CCabBlockInStream@NCab@NArchive@@QAE@XZ ; NArchive::NCab::CCabBlockInStream::CCabBlockInStream
	mov	DWORD PTR tv991[ebp], eax
	mov	eax, DWORD PTR tv991[ebp]
	mov	DWORD PTR tv209[ebp], eax
	jmp	SHORT $LN85@Extract
$LN84@Extract:
	mov	DWORD PTR tv209[ebp], 0
$LN85@Extract:
	mov	ecx, DWORD PTR tv209[ebp]
	mov	DWORD PTR $T73582[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	edx, DWORD PTR $T73582[ebp]
	mov	DWORD PTR _cabBlockInStreamSpec$72156[ebp], edx
; Line 892
	mov	eax, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	push	eax
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
; Line 893
	mov	ecx, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	call	?Create@CCabBlockInStream@NCab@NArchive@@QAE_NXZ ; NArchive::NCab::CCabBlockInStream::Create
	mov	BYTE PTR tv210[ebp], al
	movzx	ecx, BYTE PTR tv210[ebp]
	test	ecx, ecx
	jne	SHORT $LN67@Extract
; Line 894
	mov	DWORD PTR $T73586[ebp], -2147024882	; 8007000eH
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73586[ebp]
	jmp	$LN76@Extract
$LN67@Extract:
; Line 896
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??0?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::CRecordVector<bool>
	mov	DWORD PTR tv992[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
; Line 898
	mov	DWORD PTR _i$72084[ebp], 0
$LN66@Extract:
	mov	edx, DWORD PTR _i$72084[ebp]
	cmp	edx, DWORD PTR _numItems$[ebp]
	jae	$LN65@Extract
; Line 900
	movzx	eax, BYTE PTR _allFilesMode$72076[ebp]
	test	eax, eax
	je	SHORT $LN86@Extract
	mov	ecx, DWORD PTR _i$72084[ebp]
	mov	DWORD PTR tv261[ebp], ecx
	jmp	SHORT $LN87@Extract
$LN86@Extract:
	mov	edx, DWORD PTR _i$72084[ebp]
	mov	eax, DWORD PTR _indices$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR tv261[ebp], ecx
$LN87@Extract:
	mov	edx, DWORD PTR tv261[ebp]
	mov	DWORD PTR _index$72171[ebp], edx
; Line 902
	mov	eax, DWORD PTR _index$72171[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR tv993[ebp], eax
	mov	ecx, DWORD PTR tv993[ebp]
	mov	DWORD PTR _mvItem$72172[ebp], ecx
; Line 903
	mov	edx, DWORD PTR _mvItem$72172[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv994[ebp], eax
	mov	ecx, DWORD PTR tv994[ebp]
	mov	DWORD PTR _db$72173[ebp], ecx
; Line 904
	mov	edx, DWORD PTR _mvItem$72172[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _itemIndex$72174[ebp], eax
; Line 905
	mov	ecx, DWORD PTR _itemIndex$72174[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$72173[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR tv995[ebp], eax
	mov	edx, DWORD PTR tv995[ebp]
	mov	DWORD PTR _item$72175[ebp], edx
; Line 907
	mov	eax, DWORD PTR _i$72084[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72084[ebp], eax
; Line 908
	mov	ecx, DWORD PTR _item$72175[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	mov	BYTE PTR tv996[ebp], al
	movzx	ecx, BYTE PTR tv996[ebp]
	test	ecx, ecx
	je	$LN64@Extract
; Line 912
	movzx	edx, BYTE PTR _testMode$72082[ebp]
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	DWORD PTR _askMode$72177[ebp], edx
; Line 913
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR tv997[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 11		; 0000000bH
; Line 914
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
	mov	DWORD PTR tv998[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _askMode$72177[ebp]
	push	eax
	mov	ecx, DWORD PTR tv998[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$72171[ebp]
	push	edx
	mov	eax, DWORD PTR _extractCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv999[ebp], eax
	mov	ecx, DWORD PTR tv999[ebp]
	mov	DWORD PTR ___result__$72180[ebp], ecx
	cmp	DWORD PTR ___result__$72180[ebp], 0
	je	$LN63@Extract
	mov	edx, DWORD PTR ___result__$72180[ebp]
	mov	DWORD PTR $T73589[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73589[ebp]
	jmp	$LN76@Extract
$LN63@Extract:
; Line 915
	mov	esi, esp
	mov	eax, DWORD PTR _askMode$72177[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1000[ebp], eax
	mov	edx, DWORD PTR tv1000[ebp]
	mov	DWORD PTR ___result__$72183[ebp], edx
	cmp	DWORD PTR ___result__$72183[ebp], 0
	je	$LN62@Extract
	mov	eax, DWORD PTR ___result__$72183[ebp]
	mov	DWORD PTR $T73590[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73590[ebp]
	jmp	$LN76@Extract
$LN62@Extract:
; Line 916
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 917
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1001[ebp], eax
	mov	edx, DWORD PTR tv1001[ebp]
	mov	DWORD PTR ___result__$72186[ebp], edx
	cmp	DWORD PTR ___result__$72186[ebp], 0
	je	$LN61@Extract
	mov	eax, DWORD PTR ___result__$72186[ebp]
	mov	DWORD PTR $T73591[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73591[ebp]
	jmp	$LN76@Extract
$LN61@Extract:
; Line 918
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	jmp	$LN66@Extract
$LN64@Extract:
; Line 921
	mov	ecx, DWORD PTR _mvItem$72172[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR tv1002[ebp], eax
	mov	edx, DWORD PTR tv1002[ebp]
	mov	DWORD PTR _folderIndex$72189[ebp], edx
; Line 923
	cmp	DWORD PTR _folderIndex$72189[ebp], 0
	jge	$LN60@Extract
; Line 928
	movzx	eax, BYTE PTR _testMode$72082[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _askMode$72191[ebp], eax
; Line 929
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR tv1003[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
; Line 930
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
	mov	DWORD PTR tv1004[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _askMode$72191[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1004[ebp]
	push	edx
	mov	eax, DWORD PTR _index$72171[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1005[ebp], eax
	mov	edx, DWORD PTR tv1005[ebp]
	mov	DWORD PTR ___result__$72194[ebp], edx
	cmp	DWORD PTR ___result__$72194[ebp], 0
	je	$LN59@Extract
	mov	eax, DWORD PTR ___result__$72194[ebp]
	mov	DWORD PTR $T73592[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73592[ebp]
	jmp	$LN76@Extract
$LN59@Extract:
; Line 931
	mov	esi, esp
	mov	ecx, DWORD PTR _askMode$72191[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _extractCallback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1006[ebp], eax
	mov	eax, DWORD PTR tv1006[ebp]
	mov	DWORD PTR ___result__$72197[ebp], eax
	cmp	DWORD PTR ___result__$72197[ebp], 0
	je	$LN58@Extract
	mov	ecx, DWORD PTR ___result__$72197[ebp]
	mov	DWORD PTR $T73593[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73593[ebp]
	jmp	$LN76@Extract
$LN58@Extract:
; Line 932
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 933
	mov	esi, esp
	push	2
	mov	edx, DWORD PTR _extractCallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _extractCallback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1007[ebp], eax
	mov	eax, DWORD PTR tv1007[ebp]
	mov	DWORD PTR ___result__$72200[ebp], eax
	cmp	DWORD PTR ___result__$72200[ebp], 0
	je	$LN57@Extract
	mov	ecx, DWORD PTR ___result__$72200[ebp]
	mov	DWORD PTR $T73594[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73594[ebp]
	jmp	$LN76@Extract
$LN57@Extract:
; Line 934
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	jmp	$LN66@Extract
$LN60@Extract:
; Line 937
	mov	edx, DWORD PTR _folderIndex$72189[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??A?$CRecordVector@I@@QAEAAII@Z		; CRecordVector<unsigned int>::operator[]
	mov	DWORD PTR tv1008[ebp], eax
	mov	eax, DWORD PTR tv1008[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _startIndex2$72203[ebp], ecx
; Line 938
	mov	edx, DWORD PTR _startIndex2$72203[ebp]
	mov	DWORD PTR _startIndex$72204[ebp], edx
; Line 939
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	?Clear@?$CRecordVector@_N@@QAEXXZ	; CRecordVector<bool>::Clear
; Line 940
	jmp	SHORT $LN56@Extract
$LN55@Extract:
	mov	eax, DWORD PTR _startIndex$72204[ebp]
	add	eax, 1
	mov	DWORD PTR _startIndex$72204[ebp], eax
$LN56@Extract:
	mov	ecx, DWORD PTR _startIndex$72204[ebp]
	cmp	ecx, DWORD PTR _index$72171[ebp]
	jae	SHORT $LN54@Extract
; Line 941
	push	0
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	?Add@?$CRecordVector@_N@@QAEI_N@Z	; CRecordVector<bool>::Add
	jmp	SHORT $LN55@Extract
$LN54@Extract:
; Line 942
	push	1
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	?Add@?$CRecordVector@_N@@QAEI_N@Z	; CRecordVector<bool>::Add
; Line 943
	mov	edx, DWORD PTR _startIndex$72204[ebp]
	add	edx, 1
	mov	DWORD PTR _startIndex$72204[ebp], edx
; Line 944
	mov	ecx, DWORD PTR _item$72175[ebp]
	call	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CItem::GetEndOffset
	mov	DWORD PTR tv1009[ebp], eax
	mov	DWORD PTR tv1009[ebp+4], edx
	mov	eax, DWORD PTR tv1009[ebp]
	mov	DWORD PTR _curUnpack$72208[ebp], eax
	mov	ecx, DWORD PTR tv1009[ebp+4]
	mov	DWORD PTR _curUnpack$72208[ebp+4], ecx
; Line 946
	jmp	SHORT $LN53@Extract
$LN52@Extract:
	mov	edx, DWORD PTR _i$72084[ebp]
	add	edx, 1
	mov	DWORD PTR _i$72084[ebp], edx
$LN53@Extract:
	mov	eax, DWORD PTR _i$72084[ebp]
	cmp	eax, DWORD PTR _numItems$[ebp]
	jae	$LN51@Extract
; Line 948
	movzx	ecx, BYTE PTR _allFilesMode$72076[ebp]
	test	ecx, ecx
	je	SHORT $LN88@Extract
	mov	edx, DWORD PTR _i$72084[ebp]
	mov	DWORD PTR tv370[ebp], edx
	jmp	SHORT $LN89@Extract
$LN88@Extract:
	mov	eax, DWORD PTR _i$72084[ebp]
	mov	ecx, DWORD PTR _indices$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv370[ebp], edx
$LN89@Extract:
	mov	eax, DWORD PTR tv370[ebp]
	mov	DWORD PTR _indexNext$72212[ebp], eax
; Line 949
	mov	ecx, DWORD PTR _indexNext$72212[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
	mov	DWORD PTR tv1010[ebp], eax
	mov	edx, DWORD PTR tv1010[ebp]
	mov	DWORD PTR _mvItem$72213[ebp], edx
; Line 950
	mov	eax, DWORD PTR _mvItem$72213[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv1011[ebp], eax
	mov	edx, DWORD PTR _mvItem$72213[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR tv1011[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	mov	DWORD PTR tv1012[ebp], eax
	mov	ecx, DWORD PTR tv1012[ebp]
	mov	DWORD PTR _item$72214[ebp], ecx
; Line 951
	mov	ecx, DWORD PTR _item$72214[ebp]
	call	?IsDir@CItem@NCab@NArchive@@QBE_NXZ	; NArchive::NCab::CItem::IsDir
	mov	BYTE PTR tv1013[ebp], al
	movzx	edx, BYTE PTR tv1013[ebp]
	test	edx, edx
	je	SHORT $LN50@Extract
; Line 952
	jmp	$LN52@Extract
$LN50@Extract:
; Line 953
	mov	eax, DWORD PTR _mvItem$72213[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetFolderIndex@CMvDatabaseEx@NCab@NArchive@@QBEHPBUCMvItem@23@@Z ; NArchive::NCab::CMvDatabaseEx::GetFolderIndex
	mov	DWORD PTR tv1014[ebp], eax
	mov	ecx, DWORD PTR tv1014[ebp]
	mov	DWORD PTR _newFolderIndex$72216[ebp], ecx
; Line 955
	mov	edx, DWORD PTR _newFolderIndex$72216[ebp]
	cmp	edx, DWORD PTR _folderIndex$72189[ebp]
	je	SHORT $LN49@Extract
; Line 956
	jmp	SHORT $LN51@Extract
$LN49@Extract:
; Line 957
	jmp	SHORT $LN48@Extract
$LN47@Extract:
	mov	eax, DWORD PTR _startIndex$72204[ebp]
	add	eax, 1
	mov	DWORD PTR _startIndex$72204[ebp], eax
$LN48@Extract:
	mov	ecx, DWORD PTR _startIndex$72204[ebp]
	cmp	ecx, DWORD PTR _indexNext$72212[ebp]
	jae	SHORT $LN46@Extract
; Line 958
	push	0
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	?Add@?$CRecordVector@_N@@QAEI_N@Z	; CRecordVector<bool>::Add
	jmp	SHORT $LN47@Extract
$LN46@Extract:
; Line 959
	push	1
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	?Add@?$CRecordVector@_N@@QAEI_N@Z	; CRecordVector<bool>::Add
; Line 960
	mov	edx, DWORD PTR _startIndex$72204[ebp]
	add	edx, 1
	mov	DWORD PTR _startIndex$72204[ebp], edx
; Line 961
	mov	ecx, DWORD PTR _item$72214[ebp]
	call	?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CItem::GetEndOffset
	mov	DWORD PTR tv1015[ebp], eax
	mov	DWORD PTR tv1015[ebp+4], edx
	mov	eax, DWORD PTR tv1015[ebp]
	mov	DWORD PTR _curUnpack$72208[ebp], eax
	mov	ecx, DWORD PTR tv1015[ebp+4]
	mov	DWORD PTR _curUnpack$72208[ebp+4], ecx
; Line 962
	jmp	$LN52@Extract
$LN51@Extract:
; Line 964
	mov	edx, DWORD PTR _lps$72097[ebp]
	mov	eax, DWORD PTR _totalUnPacked$72083[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _totalUnPacked$72083[ebp+4]
	mov	DWORD PTR [edx+44], ecx
; Line 965
	mov	edx, DWORD PTR _lps$72097[ebp]
	mov	eax, DWORD PTR _totalPacked$72096[ebp]
	mov	DWORD PTR [edx+32], eax
	mov	ecx, DWORD PTR _totalPacked$72096[ebp+4]
	mov	DWORD PTR [edx+36], ecx
; Line 966
	mov	ecx, DWORD PTR _lps$72097[ebp]
	call	?SetCur@CLocalProgress@@QAEJXZ		; CLocalProgress::SetCur
	mov	DWORD PTR tv1016[ebp], eax
	mov	edx, DWORD PTR tv1016[ebp]
	mov	DWORD PTR ___result__$72221[ebp], edx
	cmp	DWORD PTR ___result__$72221[ebp], 0
	je	SHORT $LN45@Extract
	mov	eax, DWORD PTR ___result__$72221[ebp]
	mov	DWORD PTR $T73597[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73597[ebp]
	jmp	$LN76@Extract
$LN45@Extract:
; Line 968
	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv1017[ebp], eax
	mov	ecx, DWORD PTR tv1017[ebp]
	mov	DWORD PTR $T73599[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 13		; 0000000dH
	cmp	DWORD PTR $T73599[ebp], 0
	je	SHORT $LN90@Extract
	mov	ecx, DWORD PTR $T73599[ebp]
	call	??0CFolderOutStream@NCab@NArchive@@QAE@XZ ; NArchive::NCab::CFolderOutStream::CFolderOutStream
	mov	DWORD PTR tv1019[ebp], eax
	mov	edx, DWORD PTR tv1019[ebp]
	mov	DWORD PTR tv452[ebp], edx
	jmp	SHORT $LN91@Extract
$LN90@Extract:
	mov	DWORD PTR tv452[ebp], 0
$LN91@Extract:
	mov	eax, DWORD PTR tv452[ebp]
	mov	DWORD PTR $T73598[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	mov	ecx, DWORD PTR $T73598[ebp]
	mov	DWORD PTR _cabFolderOutStream$72224[ebp], ecx
; Line 969
	mov	edx, DWORD PTR _cabFolderOutStream$72224[ebp]
	push	edx
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
; Line 971
	mov	ecx, DWORD PTR _db$72173[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR tv453[ebp], eax
	mov	eax, DWORD PTR tv453[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$72175[ebp]
	call	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ; NArchive::NCab::CItem::GetFolderIndex
	mov	DWORD PTR tv1020[ebp], eax
	mov	ecx, DWORD PTR tv1020[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$72173[ebp]
	call	??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CFolder>::operator[]
	mov	DWORD PTR tv1021[ebp], eax
	mov	edx, DWORD PTR tv1021[ebp]
	mov	DWORD PTR _folder$72231[ebp], edx
; Line 974
	movzx	eax, BYTE PTR _testMode$72082[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curUnpack$72208[ebp+4]
	push	edx
	mov	eax, DWORD PTR _curUnpack$72208[ebp]
	push	eax
	mov	ecx, DWORD PTR _startIndex2$72203[ebp]
	push	ecx
	lea	edx, DWORD PTR _extractStatuses$72167[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?Init@CFolderOutStream@NCab@NArchive@@QAEXPBVCMvDatabaseEx@23@PBV?$CRecordVector@_N@@I_KPAUIArchiveExtractCallback@@_N@Z ; NArchive::NCab::CFolderOutStream::Init
; Line 976
	mov	ecx, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	mov	BYTE PTR [ecx+24], 0
; Line 977
	mov	DWORD PTR _res$72232[ebp], 0
; Line 979
	mov	ecx, DWORD PTR _folder$72231[ebp]
	call	?GetMethod@CFolder@NCab@NArchive@@QBEEXZ ; NArchive::NCab::CFolder::GetMethod
	mov	BYTE PTR tv1022[ebp], al
	movzx	edx, BYTE PTR tv1022[ebp]
	mov	DWORD PTR tv490[ebp], edx
	cmp	DWORD PTR tv490[ebp], 3
	ja	$LN35@Extract
	mov	eax, DWORD PTR tv490[ebp]
	jmp	DWORD PTR $LN138@Extract[eax*4]
$LN42@Extract:
; Line 982
	jmp	$LN43@Extract
$LN41@Extract:
; Line 984
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ ; CMyComPtr<ICompressCoder>::operator!
	mov	BYTE PTR tv1023[ebp], al
	movzx	ecx, BYTE PTR tv1023[ebp]
	test	ecx, ecx
	je	SHORT $LN40@Extract
; Line 986
	push	3440					; 00000d70H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv1024[ebp], eax
	mov	edx, DWORD PTR tv1024[ebp]
	mov	DWORD PTR $T73603[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 15		; 0000000fH
	cmp	DWORD PTR $T73603[ebp], 0
	je	SHORT $LN92@Extract
	mov	ecx, DWORD PTR $T73603[ebp]
	call	??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder
	mov	DWORD PTR tv1026[ebp], eax
	mov	eax, DWORD PTR tv1026[ebp]
	mov	DWORD PTR tv502[ebp], eax
	jmp	SHORT $LN93@Extract
$LN92@Extract:
	mov	DWORD PTR tv502[ebp], 0
$LN93@Extract:
	mov	ecx, DWORD PTR tv502[ebp]
	mov	DWORD PTR $T73602[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
	mov	edx, DWORD PTR $T73602[ebp]
	mov	DWORD PTR _deflateDecoderSpec$72147[ebp], edx
; Line 987
	mov	eax, DWORD PTR _deflateDecoderSpec$72147[ebp]
	push	eax
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ; CMyComPtr<ICompressCoder>::operator=
$LN40@Extract:
; Line 989
	mov	ecx, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	mov	BYTE PTR [ecx+24], 1
; Line 990
	jmp	$LN43@Extract
$LN39@Extract:
; Line 992
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ ; CMyComPtr<ICompressCoder>::operator!
	mov	BYTE PTR tv1027[ebp], al
	movzx	edx, BYTE PTR tv1027[ebp]
	test	edx, edx
	je	SHORT $LN38@Extract
; Line 994
	push	7376					; 00001cd0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv1028[ebp], eax
	mov	eax, DWORD PTR tv1028[ebp]
	mov	DWORD PTR $T73607[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 16		; 00000010H
	cmp	DWORD PTR $T73607[ebp], 0
	je	SHORT $LN94@Extract
	push	0
	mov	ecx, DWORD PTR $T73607[ebp]
	call	??0CDecoder@NLzx@NCompress@@QAE@_N@Z	; NCompress::NLzx::CDecoder::CDecoder
	mov	DWORD PTR tv1030[ebp], eax
	mov	ecx, DWORD PTR tv1030[ebp]
	mov	DWORD PTR tv521[ebp], ecx
	jmp	SHORT $LN95@Extract
$LN94@Extract:
	mov	DWORD PTR tv521[ebp], 0
$LN95@Extract:
	mov	edx, DWORD PTR tv521[ebp]
	mov	DWORD PTR $T73606[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
	mov	eax, DWORD PTR $T73606[ebp]
	mov	DWORD PTR _lzxDecoderSpec$72150[ebp], eax
; Line 995
	mov	ecx, DWORD PTR _lzxDecoderSpec$72150[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ; CMyComPtr<ICompressCoder>::operator=
$LN38@Extract:
; Line 997
	mov	edx, DWORD PTR _folder$72231[ebp]
	movzx	eax, BYTE PTR [edx+7]
	push	eax
	mov	ecx, DWORD PTR _lzxDecoderSpec$72150[ebp]
	call	?SetParams@CDecoder@NLzx@NCompress@@QAEJI@Z ; NCompress::NLzx::CDecoder::SetParams
	mov	DWORD PTR tv1031[ebp], eax
	mov	ecx, DWORD PTR tv1031[ebp]
	mov	DWORD PTR _res$72232[ebp], ecx
; Line 998
	jmp	$LN43@Extract
$LN37@Extract:
; Line 1000
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ ; CMyComPtr<ICompressCoder>::operator!
	mov	BYTE PTR tv1032[ebp], al
	movzx	edx, BYTE PTR tv1032[ebp]
	test	edx, edx
	je	$LN36@Extract
; Line 1002
	push	1976					; 000007b8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv1033[ebp], eax
	mov	eax, DWORD PTR tv1033[ebp]
	mov	DWORD PTR $T73611[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 17		; 00000011H
	cmp	DWORD PTR $T73611[ebp], 0
	je	SHORT $LN96@Extract
	mov	ecx, DWORD PTR $T73611[ebp]
	call	??0CDecoder@NQuantum@NCompress@@QAE@XZ	; NCompress::NQuantum::CDecoder::CDecoder
	mov	DWORD PTR tv1035[ebp], eax
	mov	ecx, DWORD PTR tv1035[ebp]
	mov	DWORD PTR tv543[ebp], ecx
	jmp	SHORT $LN97@Extract
$LN96@Extract:
	mov	DWORD PTR tv543[ebp], 0
$LN97@Extract:
	mov	edx, DWORD PTR tv543[ebp]
	mov	DWORD PTR $T73610[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
	mov	eax, DWORD PTR $T73610[ebp]
	mov	DWORD PTR _quantumDecoderSpec$72153[ebp], eax
; Line 1003
	mov	ecx, DWORD PTR _quantumDecoderSpec$72153[ebp]
	push	ecx
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ; CMyComPtr<ICompressCoder>::operator=
$LN36@Extract:
; Line 1005
	mov	edx, DWORD PTR _folder$72231[ebp]
	movzx	eax, BYTE PTR [edx+7]
	push	eax
	mov	ecx, DWORD PTR _quantumDecoderSpec$72153[ebp]
	call	?SetParams@CDecoder@NQuantum@NCompress@@QAEJH@Z ; NCompress::NQuantum::CDecoder::SetParams
	mov	DWORD PTR tv1036[ebp], eax
	mov	ecx, DWORD PTR tv1036[ebp]
	mov	DWORD PTR _res$72232[ebp], ecx
; Line 1006
	jmp	SHORT $LN43@Extract
$LN35@Extract:
; Line 1008
	mov	DWORD PTR _res$72232[ebp], -2147024809	; 80070057H
$LN43@Extract:
; Line 1012
	cmp	DWORD PTR _res$72232[ebp], -2147024809	; 80070057H
	jne	$LN34@Extract
; Line 1014
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?Unsupported@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::Unsupported
	mov	DWORD PTR tv1037[ebp], eax
	mov	edx, DWORD PTR tv1037[ebp]
	mov	DWORD PTR ___result__$72261[ebp], edx
	cmp	DWORD PTR ___result__$72261[ebp], 0
	je	$LN33@Extract
	mov	eax, DWORD PTR ___result__$72261[ebp]
	mov	DWORD PTR $T73614[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73614[ebp]
	jmp	$LN76@Extract
$LN33@Extract:
; Line 1015
	mov	ecx, DWORD PTR _totalUnPacked$72083[ebp]
	add	ecx, DWORD PTR _curUnpack$72208[ebp]
	mov	edx, DWORD PTR _totalUnPacked$72083[ebp+4]
	adc	edx, DWORD PTR _curUnpack$72208[ebp+4]
	mov	DWORD PTR _totalUnPacked$72083[ebp], ecx
	mov	DWORD PTR _totalUnPacked$72083[ebp+4], edx
; Line 1016
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	jmp	$LN66@Extract
$LN34@Extract:
; Line 1018
	mov	eax, DWORD PTR _res$72232[ebp]
	mov	DWORD PTR ___result__$72264[ebp], eax
	cmp	DWORD PTR ___result__$72264[ebp], 0
	je	$LN32@Extract
	mov	ecx, DWORD PTR ___result__$72264[ebp]
	mov	DWORD PTR $T73615[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73615[ebp]
	jmp	$LN76@Extract
$LN32@Extract:
; Line 1021
	mov	edx, DWORD PTR _mvItem$72172[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _volIndex$72267[ebp], eax
; Line 1022
	mov	ecx, DWORD PTR _db$72173[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR tv1038[ebp], eax
	mov	ecx, DWORD PTR tv1038[ebp]
	push	ecx
	mov	ecx, DWORD PTR _item$72175[ebp]
	call	?GetFolderIndex@CItem@NCab@NArchive@@QBEHI@Z ; NArchive::NCab::CItem::GetFolderIndex
	mov	DWORD PTR tv1039[ebp], eax
	mov	edx, DWORD PTR tv1039[ebp]
	mov	DWORD PTR _locFolderIndex$72268[ebp], edx
; Line 1023
	mov	BYTE PTR _keepHistory$72269[ebp], 0
; Line 1024
	mov	BYTE PTR _keepInputBuffer$72270[ebp], 0
; Line 1026
	mov	DWORD PTR _bl$72271[ebp], 0
$LN31@Extract:
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetRemain
	mov	DWORD PTR tv1040[ebp], eax
	mov	DWORD PTR tv1040[ebp+4], edx
	mov	eax, DWORD PTR tv1040[ebp]
	or	eax, DWORD PTR tv1040[ebp+4]
	je	$LN30@Extract
; Line 1028
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv1041[ebp], eax
	mov	ecx, DWORD PTR _volIndex$72267[ebp]
	cmp	ecx, DWORD PTR tv1041[ebp]
	jb	SHORT $LN29@Extract
; Line 1030
	mov	DWORD PTR _res$72232[ebp], 1
; Line 1031
	jmp	$LN30@Extract
$LN29@Extract:
; Line 1034
	mov	edx, DWORD PTR _volIndex$72267[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	mov	DWORD PTR tv1042[ebp], eax
	mov	eax, DWORD PTR tv1042[ebp]
	mov	DWORD PTR _db$72277[ebp], eax
; Line 1035
	mov	ecx, DWORD PTR _locFolderIndex$72268[ebp]
	push	ecx
	mov	ecx, DWORD PTR _db$72277[ebp]
	call	??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z ; CRecordVector<NArchive::NCab::CFolder>::operator[]
	mov	DWORD PTR tv1043[ebp], eax
	mov	edx, DWORD PTR tv1043[ebp]
	mov	DWORD PTR _folder$72278[ebp], edx
; Line 1037
	cmp	DWORD PTR _bl$72271[ebp], 0
	jne	$LN28@Extract
; Line 1039
	mov	ecx, DWORD PTR _db$72277[ebp]
	add	ecx, 32					; 00000020H
	call	?GetDataBlockReserveSize@CArchInfo@NCab@NArchive@@QBEEXZ ; NArchive::NCab::CArchInfo::GetDataBlockReserveSize
	mov	BYTE PTR tv1044[ebp], al
	movzx	eax, BYTE PTR tv1044[ebp]
	mov	ecx, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 1040
	mov	ecx, DWORD PTR _db$72277[ebp]
	add	ecx, 120				; 00000078H
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv1045[ebp], eax
	mov	edx, DWORD PTR tv1045[ebp]
	mov	DWORD PTR tv610[ebp], edx
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _folder$72278[ebp]
	mov	ecx, DWORD PTR [eax]
	xor	edx, edx
	mov	eax, DWORD PTR _db$72277[ebp]
	add	ecx, DWORD PTR [eax+24]
	adc	edx, DWORD PTR [eax+28]
	push	edx
	push	ecx
	mov	ecx, DWORD PTR tv610[ebp]
	push	ecx
	mov	edx, DWORD PTR tv610[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1046[ebp], eax
	mov	edx, DWORD PTR tv1046[ebp]
	mov	DWORD PTR ___result__$72280[ebp], edx
	cmp	DWORD PTR ___result__$72280[ebp], 0
	je	$LN28@Extract
	mov	eax, DWORD PTR ___result__$72280[ebp]
	mov	DWORD PTR $T73616[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73616[ebp]
	jmp	$LN76@Extract
$LN28@Extract:
; Line 1043
	mov	ecx, DWORD PTR _folder$72278[ebp]
	movzx	edx, WORD PTR [ecx+4]
	cmp	DWORD PTR _bl$72271[ebp], edx
	jne	SHORT $LN26@Extract
; Line 1053
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
	mov	DWORD PTR tv1047[ebp], eax
	cmp	DWORD PTR tv1047[ebp], 1
	jbe	SHORT $LN26@Extract
; Line 1055
	mov	eax, DWORD PTR _volIndex$72267[ebp]
	add	eax, 1
	mov	DWORD PTR _volIndex$72267[ebp], eax
; Line 1056
	mov	DWORD PTR _locFolderIndex$72268[ebp], 0
; Line 1057
	mov	DWORD PTR _bl$72271[ebp], 0
; Line 1058
	jmp	$LN31@Extract
$LN26@Extract:
; Line 1061
	mov	ecx, DWORD PTR _bl$72271[ebp]
	add	ecx, 1
	mov	DWORD PTR _bl$72271[ebp], ecx
; Line 1063
	movzx	edx, BYTE PTR _keepInputBuffer$72270[ebp]
	test	edx, edx
	jne	SHORT $LN24@Extract
; Line 1064
	mov	ecx, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	call	?InitForNewBlock@CCabBlockInStream@NCab@NArchive@@QAEXXZ ; NArchive::NCab::CCabBlockInStream::InitForNewBlock
$LN24@Extract:
; Line 1067
	mov	ecx, DWORD PTR _db$72277[ebp]
	add	ecx, 120				; 00000078H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv1048[ebp], eax
	lea	eax, DWORD PTR _unpackSize$72287[ebp]
	push	eax
	lea	ecx, DWORD PTR _packSize$72286[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1048[ebp]
	push	edx
	mov	ecx, DWORD PTR _cabBlockInStreamSpec$72156[ebp]
	call	?PreRead@CCabBlockInStream@NCab@NArchive@@QAEJPAUISequentialInStream@@AAI1@Z ; NArchive::NCab::CCabBlockInStream::PreRead
	mov	DWORD PTR tv1049[ebp], eax
	mov	eax, DWORD PTR tv1049[ebp]
	mov	DWORD PTR _res$72232[ebp], eax
; Line 1068
	cmp	DWORD PTR _res$72232[ebp], 1
	jne	SHORT $LN23@Extract
; Line 1069
	jmp	$LN30@Extract
$LN23@Extract:
; Line 1070
	mov	ecx, DWORD PTR _res$72232[ebp]
	mov	DWORD PTR ___result__$72290[ebp], ecx
	cmp	DWORD PTR ___result__$72290[ebp], 0
	je	$LN22@Extract
	mov	edx, DWORD PTR ___result__$72290[ebp]
	mov	DWORD PTR $T73617[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73617[ebp]
	jmp	$LN76@Extract
$LN22@Extract:
; Line 1071
	xor	eax, eax
	cmp	DWORD PTR _unpackSize$72287[ebp], 0
	sete	al
	mov	BYTE PTR _keepInputBuffer$72270[ebp], al
; Line 1072
	movzx	ecx, BYTE PTR _keepInputBuffer$72270[ebp]
	test	ecx, ecx
	je	SHORT $LN21@Extract
; Line 1073
	jmp	$LN31@Extract
$LN21@Extract:
; Line 1075
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?GetPosInFolder@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetPosInFolder
	mov	DWORD PTR tv1050[ebp], eax
	mov	DWORD PTR tv1050[ebp+4], edx
	mov	edx, DWORD PTR _totalUnPacked$72083[ebp]
	add	edx, DWORD PTR tv1050[ebp]
	mov	eax, DWORD PTR _totalUnPacked$72083[ebp+4]
	adc	eax, DWORD PTR tv1050[ebp+4]
	mov	DWORD PTR _totalUnPacked2$72294[ebp], edx
	mov	DWORD PTR _totalUnPacked2$72294[ebp+4], eax
; Line 1076
	mov	ecx, DWORD PTR _packSize$72286[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _totalPacked$72096[ebp]
	adc	edx, DWORD PTR _totalPacked$72096[ebp+4]
	mov	DWORD PTR _totalPacked$72096[ebp], ecx
	mov	DWORD PTR _totalPacked$72096[ebp+4], edx
; Line 1078
	mov	eax, DWORD PTR _lps$72097[ebp]
	mov	ecx, DWORD PTR _totalUnPacked2$72294[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	edx, DWORD PTR _totalUnPacked2$72294[ebp+4]
	mov	DWORD PTR [eax+44], edx
; Line 1079
	mov	eax, DWORD PTR _lps$72097[ebp]
	mov	ecx, DWORD PTR _totalPacked$72096[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	edx, DWORD PTR _totalPacked$72096[ebp+4]
	mov	DWORD PTR [eax+36], edx
; Line 1080
	mov	ecx, DWORD PTR _lps$72097[ebp]
	call	?SetCur@CLocalProgress@@QAEJXZ		; CLocalProgress::SetCur
	mov	DWORD PTR tv1051[ebp], eax
	mov	eax, DWORD PTR tv1051[ebp]
	mov	DWORD PTR ___result__$72295[ebp], eax
	cmp	DWORD PTR ___result__$72295[ebp], 0
	je	$LN20@Extract
	mov	ecx, DWORD PTR ___result__$72295[ebp]
	mov	DWORD PTR $T73618[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73618[ebp]
	jmp	$LN76@Extract
$LN20@Extract:
; Line 1082
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetRemain
	mov	DWORD PTR tv1052[ebp], eax
	mov	DWORD PTR tv1052[ebp+4], edx
	mov	edx, DWORD PTR tv1052[ebp]
	mov	DWORD PTR _unpackRemain$72298[ebp], edx
	mov	eax, DWORD PTR tv1052[ebp+4]
	mov	DWORD PTR _unpackRemain$72298[ebp+4], eax
; Line 1084
	mov	DWORD PTR _kBlockSizeMax$72299[ebp], 32768 ; 00008000H
; Line 1085
	cmp	DWORD PTR _unpackRemain$72298[ebp+4], 0
	ja	SHORT $LN120@Extract
	cmp	DWORD PTR _unpackRemain$72298[ebp], 32768 ; 00008000H
	jbe	SHORT $LN19@Extract
$LN120@Extract:
; Line 1086
	mov	DWORD PTR _unpackRemain$72298[ebp], 32768 ; 00008000H
	mov	DWORD PTR _unpackRemain$72298[ebp+4], 0
$LN19@Extract:
; Line 1087
	mov	ecx, DWORD PTR _unpackSize$72287[ebp]
	xor	edx, edx
	mov	DWORD PTR tv1593[ebp], ecx
	mov	DWORD PTR tv1593[ebp+4], edx
	mov	eax, DWORD PTR _unpackRemain$72298[ebp+4]
	cmp	eax, DWORD PTR tv1593[ebp+4]
	jb	SHORT $LN18@Extract
	ja	SHORT $LN121@Extract
	mov	ecx, DWORD PTR _unpackRemain$72298[ebp]
	cmp	ecx, DWORD PTR tv1593[ebp]
	jbe	SHORT $LN18@Extract
$LN121@Extract:
; Line 1088
	mov	edx, DWORD PTR _unpackSize$72287[ebp]
	xor	eax, eax
	mov	DWORD PTR _unpackRemain$72298[ebp], edx
	mov	DWORD PTR _unpackRemain$72298[ebp+4], eax
$LN18@Extract:
; Line 1090
	mov	ecx, DWORD PTR _folder$72278[ebp]
	call	?GetMethod@CFolder@NCab@NArchive@@QBEEXZ ; NArchive::NCab::CFolder::GetMethod
	mov	BYTE PTR tv1053[ebp], al
	movzx	ecx, BYTE PTR tv1053[ebp]
	mov	DWORD PTR tv708[ebp], ecx
	cmp	DWORD PTR tv708[ebp], 3
	ja	$LN16@Extract
	mov	edx, DWORD PTR tv708[ebp]
	jmp	DWORD PTR $LN139@Extract[edx*4]
$LN15@Extract:
; Line 1093
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
	mov	DWORD PTR tv1054[ebp], eax
	mov	eax, DWORD PTR tv1054[ebp]
	mov	DWORD PTR tv712[ebp], eax
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv1055[ebp], eax
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	mov	DWORD PTR tv1056[ebp], eax
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _unpackRemain$72298[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR tv1055[ebp]
	push	edx
	mov	eax, DWORD PTR tv1056[ebp]
	push	eax
	mov	ecx, DWORD PTR tv712[ebp]
	push	ecx
	mov	edx, DWORD PTR tv712[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1057[ebp], eax
	mov	edx, DWORD PTR tv1057[ebp]
	mov	DWORD PTR _res$72232[ebp], edx
; Line 1094
	jmp	$LN16@Extract
$LN14@Extract:
; Line 1096
	movzx	eax, BYTE PTR _keepHistory$72269[ebp]
	push	eax
	mov	ecx, DWORD PTR _deflateDecoderSpec$72147[ebp]
	call	?Set_KeepHistory@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z ; NCompress::NDeflate::NDecoder::CCoder::Set_KeepHistory
; Line 1102
	push	1
	mov	ecx, DWORD PTR _deflateDecoderSpec$72147[ebp]
	call	?Set_NeedFinishInput@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z ; NCompress::NDeflate::NDecoder::CCoder::Set_NeedFinishInput
; Line 1103
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
	mov	DWORD PTR tv1058[ebp], eax
	mov	ecx, DWORD PTR tv1058[ebp]
	mov	DWORD PTR tv740[ebp], ecx
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv1059[ebp], eax
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	mov	DWORD PTR tv1060[ebp], eax
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _unpackRemain$72298[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv1059[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1060[ebp]
	push	ecx
	mov	edx, DWORD PTR tv740[ebp]
	push	edx
	mov	eax, DWORD PTR tv740[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1061[ebp], eax
	mov	eax, DWORD PTR tv1061[ebp]
	mov	DWORD PTR _res$72232[ebp], eax
; Line 1104
	cmp	DWORD PTR _res$72232[ebp], 0
	jne	SHORT $LN13@Extract
; Line 1106
	mov	ecx, DWORD PTR _deflateDecoderSpec$72147[ebp]
	call	?IsFinished@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::IsFinished
	mov	BYTE PTR tv1062[ebp], al
	movzx	ecx, BYTE PTR tv1062[ebp]
	test	ecx, ecx
	jne	SHORT $LN12@Extract
; Line 1107
	mov	DWORD PTR _res$72232[ebp], 1
$LN12@Extract:
; Line 1108
	mov	ecx, DWORD PTR _deflateDecoderSpec$72147[ebp]
	call	?IsFinalBlock@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::IsFinalBlock
	mov	BYTE PTR tv1063[ebp], al
	movzx	edx, BYTE PTR tv1063[ebp]
	test	edx, edx
	jne	SHORT $LN13@Extract
; Line 1109
	mov	DWORD PTR _res$72232[ebp], 1
$LN13@Extract:
; Line 1112
	jmp	$LN16@Extract
$LN10@Extract:
; Line 1114
	movzx	eax, BYTE PTR _keepHistory$72269[ebp]
	push	eax
	mov	ecx, DWORD PTR _lzxDecoderSpec$72150[ebp]
	call	?SetKeepHistory@CDecoder@NLzx@NCompress@@QAEX_N@Z ; NCompress::NLzx::CDecoder::SetKeepHistory
; Line 1115
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
	mov	DWORD PTR tv1064[ebp], eax
	mov	ecx, DWORD PTR tv1064[ebp]
	mov	DWORD PTR tv775[ebp], ecx
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv1065[ebp], eax
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	mov	DWORD PTR tv1066[ebp], eax
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _unpackRemain$72298[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv1065[ebp]
	push	eax
	mov	ecx, DWORD PTR tv1066[ebp]
	push	ecx
	mov	edx, DWORD PTR tv775[ebp]
	push	edx
	mov	eax, DWORD PTR tv775[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1067[ebp], eax
	mov	eax, DWORD PTR tv1067[ebp]
	mov	DWORD PTR _res$72232[ebp], eax
; Line 1116
	jmp	$LN16@Extract
$LN9@Extract:
; Line 1118
	movzx	ecx, BYTE PTR _keepHistory$72269[ebp]
	push	ecx
	mov	ecx, DWORD PTR _quantumDecoderSpec$72153[ebp]
	call	?SetKeepHistory@CDecoder@NQuantum@NCompress@@QAEX_N@Z ; NCompress::NQuantum::CDecoder::SetKeepHistory
; Line 1119
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
	mov	DWORD PTR tv1068[ebp], eax
	mov	edx, DWORD PTR tv1068[ebp]
	mov	DWORD PTR tv793[ebp], edx
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv1069[ebp], eax
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	mov	DWORD PTR tv1070[ebp], eax
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _unpackRemain$72298[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR tv1069[ebp]
	push	ecx
	mov	edx, DWORD PTR tv1070[ebp]
	push	edx
	mov	eax, DWORD PTR tv793[ebp]
	push	eax
	mov	ecx, DWORD PTR tv793[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv1071[ebp], eax
	mov	ecx, DWORD PTR tv1071[ebp]
	mov	DWORD PTR _res$72232[ebp], ecx
$LN16@Extract:
; Line 1123
	cmp	DWORD PTR _res$72232[ebp], 0
	je	$LN8@Extract
; Line 1125
	cmp	DWORD PTR _res$72232[ebp], 1
	je	$LN7@Extract
; Line 1126
	mov	edx, DWORD PTR _res$72232[ebp]
	mov	DWORD PTR ___result__$72320[ebp], edx
	cmp	DWORD PTR ___result__$72320[ebp], 0
	je	$LN7@Extract
	mov	eax, DWORD PTR ___result__$72320[ebp]
	mov	DWORD PTR $T73619[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73619[ebp]
	jmp	$LN76@Extract
$LN7@Extract:
; Line 1127
	jmp	SHORT $LN30@Extract
$LN8@Extract:
; Line 1130
	mov	BYTE PTR _keepHistory$72269[ebp], 1
; Line 1131
	jmp	$LN31@Extract
$LN30@Extract:
; Line 1133
	cmp	DWORD PTR _res$72232[ebp], 0
	jne	$LN5@Extract
; Line 1135
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?WriteEmptyFiles@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::WriteEmptyFiles
	mov	DWORD PTR tv1072[ebp], eax
	mov	ecx, DWORD PTR tv1072[ebp]
	mov	DWORD PTR ___result__$72325[ebp], ecx
	cmp	DWORD PTR ___result__$72325[ebp], 0
	je	$LN5@Extract
	mov	edx, DWORD PTR ___result__$72325[ebp]
	mov	DWORD PTR $T73620[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73620[ebp]
	jmp	$LN76@Extract
$LN5@Extract:
; Line 1138
	cmp	DWORD PTR _res$72232[ebp], 0
	jne	SHORT $LN2@Extract
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?GetRemain@CFolderOutStream@NCab@NArchive@@QBE_KXZ ; NArchive::NCab::CFolderOutStream::GetRemain
	mov	DWORD PTR tv1073[ebp], eax
	mov	DWORD PTR tv1073[ebp+4], edx
	mov	eax, DWORD PTR tv1073[ebp]
	or	eax, DWORD PTR tv1073[ebp+4]
	je	$LN3@Extract
$LN2@Extract:
; Line 1140
	mov	ecx, DWORD PTR _cabFolderOutStream$72224[ebp]
	call	?FlushCorrupted@CFolderOutStream@NCab@NArchive@@QAEJXZ ; NArchive::NCab::CFolderOutStream::FlushCorrupted
	mov	DWORD PTR tv1074[ebp], eax
	mov	ecx, DWORD PTR tv1074[ebp]
	mov	DWORD PTR ___result__$72331[ebp], ecx
	cmp	DWORD PTR ___result__$72331[ebp], 0
	je	$LN3@Extract
	mov	edx, DWORD PTR ___result__$72331[ebp]
	mov	DWORD PTR $T73621[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73621[ebp]
	jmp	$LN76@Extract
$LN3@Extract:
; Line 1142
	mov	eax, DWORD PTR _totalUnPacked$72083[ebp]
	add	eax, DWORD PTR _curUnpack$72208[ebp]
	mov	ecx, DWORD PTR _totalUnPacked$72083[ebp+4]
	adc	ecx, DWORD PTR _curUnpack$72208[ebp+4]
	mov	DWORD PTR _totalUnPacked$72083[ebp], eax
	mov	DWORD PTR _totalUnPacked$72083[ebp+4], ecx
; Line 1143
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	jmp	$LN66@Extract
$LN65@Extract:
; Line 1145
	mov	DWORD PTR $T73622[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _progress$72103[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	eax, DWORD PTR $T73622[ebp]
	jmp	SHORT $LN76@Extract
__catch$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0:
; Line 1146
	mov	DWORD PTR $T73623[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN118@Extract
	ret	0
	mov	eax, __tryend$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$1
	ret	0
__tryend$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN76@Extract
$LN118@Extract:
	mov	eax, DWORD PTR $T73623[ebp]
$LN76@Extract:
; Line 1147
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN137@Extract
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 1048				; 00000418H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN137@Extract:
	DD	13					; 0000000dH
	DD	$LN136@Extract
$LN136@Extract:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN122@Extract
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN123@Extract
	DD	-112					; ffffff90H
	DD	4
	DD	$LN124@Extract
	DD	-128					; ffffff80H
	DD	4
	DD	$LN125@Extract
	DD	-144					; ffffff70H
	DD	4
	DD	$LN126@Extract
	DD	-160					; ffffff60H
	DD	4
	DD	$LN127@Extract
	DD	-180					; ffffff4cH
	DD	12					; 0000000cH
	DD	$LN128@Extract
	DD	-216					; ffffff28H
	DD	4
	DD	$LN129@Extract
	DD	-248					; ffffff08H
	DD	4
	DD	$LN130@Extract
	DD	-312					; fffffec8H
	DD	4
	DD	$LN131@Extract
	DD	-368					; fffffe90H
	DD	4
	DD	$LN132@Extract
	DD	-380					; fffffe84H
	DD	4
	DD	$LN133@Extract
	DD	-412					; fffffe64H
	DD	8
	DD	$LN134@Extract
$LN134@Extract:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN133@Extract:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN132@Extract:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN131@Extract:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN130@Extract:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN129@Extract:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN128@Extract:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN127@Extract:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	66					; 00000042H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN126@Extract:
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN125@Extract:
	DB	108					; 0000006cH
	DB	122					; 0000007aH
	DB	120					; 00000078H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN124@Extract:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN123@Extract:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	121					; 00000079H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN122@Extract:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN138@Extract:
	DD	$LN42@Extract
	DD	$LN41@Extract
	DD	$LN37@Extract
	DD	$LN39@Extract
$LN139@Extract:
	DD	$LN15@Extract
	DD	$LN14@Extract
	DD	$LN9@Extract
	DD	$LN10@Extract
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2:
	mov	eax, DWORD PTR $T73575[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3:
	lea	ecx, DWORD PTR _progress$72103[ebp]
	jmp	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4:
	mov	eax, DWORD PTR $T73579[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5:
	lea	ecx, DWORD PTR _copyCoder$72146[ebp]
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6:
	lea	ecx, DWORD PTR _deflateDecoder$72149[ebp]
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7:
	lea	ecx, DWORD PTR _lzxDecoder$72152[ebp]
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8:
	lea	ecx, DWORD PTR _quantumDecoder$72155[ebp]
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9:
	mov	eax, DWORD PTR $T73583[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$10:
	lea	ecx, DWORD PTR _cabBlockInStream$72162[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$11:
	lea	ecx, DWORD PTR _extractStatuses$72167[ebp]
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$12:
	lea	ecx, DWORD PTR _realOutStream$72179[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$13:
	lea	ecx, DWORD PTR _realOutStream$72193[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$14:
	mov	eax, DWORD PTR $T73599[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$15:
	lea	ecx, DWORD PTR _outStream$72230[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$16:
	mov	eax, DWORD PTR $T73603[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$17:
	mov	eax, DWORD PTR $T73607[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$18:
	mov	eax, DWORD PTR $T73611[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1052]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z ENDP ; NArchive::NCab::CHandler::Extract
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::CCopyCoder::`vftable'
PUBLIC	??_7CCopyCoder@NCompress@@6BISequentialInStream@@@ ; NCompress::CCopyCoder::`vftable'
PUBLIC	??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@ ; NCompress::CCopyCoder::`vftable'
PUBLIC	??_7CCopyCoder@NCompress@@6BICompressCoder@@@	; NCompress::CCopyCoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressGetInStreamProcessedSize@@QAE@XZ	; ICompressGetInStreamProcessedSize::ICompressGetInStreamProcessedSize
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??0ICompressSetInStream@@QAE@XZ			; ICompressSetInStream::ICompressSetInStream
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??_R4CCopyCoder@NCompress@@6BICompressCoder@@@	; NCompress::CCopyCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCopyCoder@NCompress@@@8		; NCompress::CCopyCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCopyCoder@NCompress@@8			; NCompress::CCopyCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCopyCoder@NCompress@@8			; NCompress::CCopyCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCopyCoder@NCompress@@8		; NCompress::CCopyCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetInStream@@@8		; ICompressSetInStream `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUICompressGetInStreamProcessedSize@@@8	; ICompressGetInStreamProcessedSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressGetInStreamProcessedSize@@8	; ICompressGetInStreamProcessedSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressGetInStreamProcessedSize@@8	; ICompressGetInStreamProcessedSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::CCopyCoder::QueryInterface
PUBLIC	?AddRef@CCopyCoder@NCompress@@UAGKXZ		; NCompress::CCopyCoder::AddRef
PUBLIC	?Release@CCopyCoder@NCompress@@UAGKXZ		; NCompress::CCopyCoder::Release
PUBLIC	??_R4CCopyCoder@NCompress@@6BICompressSetInStream@@@ ; NCompress::CCopyCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CCopyCoder@NCompress@@W3AGKXZ		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CCopyCoder@NCompress@@W3AGKXZ		; [thunk]:NCompress::CCopyCoder::Release`adjustor{4}'
PUBLIC	??_R4CCopyCoder@NCompress@@6BISequentialInStream@@@ ; NCompress::CCopyCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CCopyCoder@NCompress@@W7AGKXZ		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{8}'
PUBLIC	?Release@CCopyCoder@NCompress@@W7AGKXZ		; [thunk]:NCompress::CCopyCoder::Release`adjustor{8}'
PUBLIC	??_R4CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::CCopyCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CCopyCoder@NCompress@@WM@AGKXZ		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{12}'
PUBLIC	?Release@CCopyCoder@NCompress@@WM@AGKXZ		; [thunk]:NCompress::CCopyCoder::Release`adjustor{12}'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Code@CCopyCoder@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:PROC ; NCompress::CCopyCoder::Code
EXTRN	?SetInStream@CCopyCoder@NCompress@@UAGJPAUISequentialInStream@@@Z:PROC ; NCompress::CCopyCoder::SetInStream
EXTRN	?ReleaseInStream@CCopyCoder@NCompress@@UAGJXZ:PROC ; NCompress::CCopyCoder::ReleaseInStream
EXTRN	?Read@CCopyCoder@NCompress@@UAGJPAXIPAI@Z:PROC	; NCompress::CCopyCoder::Read
EXTRN	?GetInStreamProcessedSize@CCopyCoder@NCompress@@UAGJPA_K@Z:PROC ; NCompress::CCopyCoder::GetInStreamProcessedSize
;	COMDAT ??_R4CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@
; File c:\workspace\7z1505-src\cpp\7zip\compress\copycoder.h
rdata$r	SEGMENT
??_R4CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD 00H ; NCompress::CCopyCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCCopyCoder@NCompress@@@8
	DD	FLAT:??_R3CCopyCoder@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCopyCoder@NCompress@@6BISequentialInStream@@@
rdata$r	SEGMENT
??_R4CCopyCoder@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::CCopyCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCCopyCoder@NCompress@@@8
	DD	FLAT:??_R3CCopyCoder@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCopyCoder@NCompress@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CCopyCoder@NCompress@@6BICompressSetInStream@@@ DD 00H ; NCompress::CCopyCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCopyCoder@NCompress@@@8
	DD	FLAT:??_R3CCopyCoder@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R2ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R3ICompressGetInStreamProcessedSize@@8 DD 00H	; ICompressGetInStreamProcessedSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressGetInStreamProcessedSize@@@8
_DATA	SEGMENT
??_R0?AUICompressGetInStreamProcessedSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressGetInStreamProcessedSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressGetInStreamProcessedSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R17?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetInStream@@8
rdata$r	SEGMENT
??_R2ICompressSetInStream@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetInStream@@8 ; ICompressSetInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetInStream@@8
rdata$r	SEGMENT
??_R3ICompressSetInStream@@8 DD 00H			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetInStream@@@8
_DATA	SEGMENT
??_R0?AUICompressSetInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCopyCoder@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCopyCoder@NCompress@@8 DD FLAT:??_R0?AVCCopyCoder@NCompress@@@8 ; NCompress::CCopyCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCopyCoder@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCopyCoder@NCompress@@8
rdata$r	SEGMENT
??_R2CCopyCoder@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCopyCoder@NCompress@@8 ; NCompress::CCopyCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressGetInStreamProcessedSize@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCopyCoder@NCompress@@8
rdata$r	SEGMENT
??_R3CCopyCoder@NCompress@@8 DD 00H			; NCompress::CCopyCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0aH
	DD	FLAT:??_R2CCopyCoder@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCopyCoder@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCopyCoder@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::CCopyCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCopyCoder@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCopyCoder@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCopyCoder@NCompress@@6BICompressCoder@@@ DD 00H	; NCompress::CCopyCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCopyCoder@NCompress@@@8
	DD	FLAT:??_R3CCopyCoder@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@
CONST	SEGMENT
??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD FLAT:??_R4CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::CCopyCoder::`vftable'
	DD	FLAT:?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCopyCoder@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CCopyCoder@NCompress@@WM@AGKXZ
	DD	FLAT:?GetInStreamProcessedSize@CCopyCoder@NCompress@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CCopyCoder@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CCopyCoder@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CCopyCoder@NCompress@@6BISequentialInStream@@@ ; NCompress::CCopyCoder::`vftable'
	DD	FLAT:?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCopyCoder@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CCopyCoder@NCompress@@W7AGKXZ
	DD	FLAT:?Read@CCopyCoder@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@ DD FLAT:??_R4CCopyCoder@NCompress@@6BICompressSetInStream@@@ ; NCompress::CCopyCoder::`vftable'
	DD	FLAT:?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCopyCoder@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCopyCoder@NCompress@@W3AGKXZ
	DD	FLAT:?SetInStream@CCopyCoder@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CCopyCoder@NCompress@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CCopyCoder@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCopyCoder@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCopyCoder@NCompress@@6BICompressCoder@@@ ; NCompress::CCopyCoder::`vftable'
	DD	FLAT:?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCopyCoder@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCopyCoder@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCopyCoder@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CCopyCoder@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCopyCoder@NCompress@@QAE@XZ PROC			; NCompress::CCopyCoder::CCopyCoder, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0ICompressGetInStreamProcessedSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCopyCoder@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCopyCoder@NCompress@@6BICompressSetInStream@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCopyCoder@NCompress@@6BISequentialInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCopyCoder@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	DWORD PTR [edx+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCopyCoder@NCompress@@QAE@XZ ENDP			; NCompress::CCopyCoder::CCopyCoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ICompressGetInStreamProcessedSize:BYTE
EXTRN	_IID_ISequentialInStream:BYTE
EXTRN	_IID_ICompressSetInStream:BYTE
EXTRN	_IID_ICompressCoder:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::CCopyCoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\copycoder.h
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN10@QueryInter:
	push	OFFSET _IID_ICompressCoder
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN8@QueryInter:
	push	OFFSET _IID_ICompressSetInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN14@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter
$LN6@QueryInter:
	push	OFFSET _IID_ISequentialInStream
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN16@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ICompressGetInStreamProcessedSize
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN18@QueryInter
$LN17@QueryInter:
	mov	DWORD PTR tv144[ebp], 0
$LN18@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter
$LN9@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
	xor	eax, eax
$LN11@QueryInter:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::CCopyCoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCopyCoder@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCopyCoder@NCompress@@UAGKXZ PROC		; NCompress::CCopyCoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\copycoder.h
; Line 31
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCopyCoder@NCompress@@UAGKXZ ENDP		; NCompress::CCopyCoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCCopyCoder@NCompress@@QAEPAXI@Z		; NCompress::CCopyCoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CCopyCoder@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73692 = -8						; size = 4
$T73691 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCopyCoder@NCompress@@UAGKXZ PROC		; NCompress::CCopyCoder::Release, COMDAT
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73692[ebp], edx
	mov	eax, DWORD PTR $T73692[ebp]
	mov	DWORD PTR $T73691[ebp], eax
	cmp	DWORD PTR $T73691[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T73691[ebp]
	call	??_GCCopyCoder@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCopyCoder@NCompress@@UAGKXZ ENDP		; NCompress::CCopyCoder::Release
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetInStream@@6B@			; ICompressSetInStream::`vftable'
PUBLIC	??_R4ICompressSetInStream@@6B@			; ICompressSetInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetInStream@@6B@
rdata$r	SEGMENT
??_R4ICompressSetInStream@@6B@ DD 00H			; ICompressSetInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetInStream@@@8
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetInStream@@6B@
CONST	SEGMENT
??_7ICompressSetInStream@@6B@ DD FLAT:??_R4ICompressSetInStream@@6B@ ; ICompressSetInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetInStream@@QAE@XZ PROC			; ICompressSetInStream::ICompressSetInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetInStream@@QAE@XZ ENDP			; ICompressSetInStream::ICompressSetInStream
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
_TEXT	ENDS
PUBLIC	??_7ICompressGetInStreamProcessedSize@@6B@	; ICompressGetInStreamProcessedSize::`vftable'
PUBLIC	??_R4ICompressGetInStreamProcessedSize@@6B@	; ICompressGetInStreamProcessedSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressGetInStreamProcessedSize@@6B@
rdata$r	SEGMENT
??_R4ICompressGetInStreamProcessedSize@@6B@ DD 00H	; ICompressGetInStreamProcessedSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressGetInStreamProcessedSize@@6B@
CONST	SEGMENT
??_7ICompressGetInStreamProcessedSize@@6B@ DD FLAT:??_R4ICompressGetInStreamProcessedSize@@6B@ ; ICompressGetInStreamProcessedSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressGetInStreamProcessedSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressGetInStreamProcessedSize@@QAE@XZ PROC	; ICompressGetInStreamProcessedSize::ICompressGetInStreamProcessedSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressGetInStreamProcessedSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressGetInStreamProcessedSize@@QAE@XZ ENDP	; ICompressGetInStreamProcessedSize::ICompressGetInStreamProcessedSize
_TEXT	ENDS
EXTRN	??1CCopyCoder@NCompress@@QAE@XZ:PROC		; NCompress::CCopyCoder::~CCopyCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCopyCoder@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCopyCoder@NCompress@@QAEPAXI@Z PROC		; NCompress::CCopyCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCopyCoder@NCompress@@QAE@XZ		; NCompress::CCopyCoder::~CCopyCoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCopyCoder@NCompress@@QAEPAXI@Z ENDP		; NCompress::CCopyCoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Set_KeepHistory@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keepHistory$ = 8					; size = 1
?Set_KeepHistory@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::Set_KeepHistory, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _keepHistory$[ebp]
	mov	BYTE PTR [eax+3416], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_KeepHistory@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::Set_KeepHistory
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Set_NeedFinishInput@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_needFinishInput$ = 8					; size = 1
?Set_NeedFinishInput@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::Set_NeedFinishInput, COMDAT
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _needFinishInput$[ebp]
	mov	BYTE PTR [eax+3417], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?Set_NeedFinishInput@CCoder@NDecoder@NDeflate@NCompress@@QAEX_N@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::Set_NeedFinishInput
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsFinished@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFinished@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::IsFinished, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+3420], -1
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFinished@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::IsFinished
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsFinalBlock@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFinalBlock@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::IsFinalBlock, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+3412]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFinalBlock@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::IsFinalBlock
_TEXT	ENDS
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8	; NCompress::NDeflate::NDecoder::CCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R17?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUICompressSetOutStreamSize@@@8		; ICompressSetOutStreamSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}'
EXTRN	??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::CCoder
EXTRN	?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::Code
EXTRN	??_ECCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z:PROC ; NCompress::NDeflate::NDecoder::CCOMCoder::`vector deleting destructor'
EXTRN	?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::CodeResume
EXTRN	?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::GetInStreamProcessedSize
EXTRN	?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::SetInStream
EXTRN	?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ:PROC ; NCompress::NDeflate::NDecoder::CCoder::ReleaseInStream
EXTRN	?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::SetOutStreamSize
EXTRN	?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::Read
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R2ICompressSetOutStreamSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R3ICompressSetOutStreamSize@@8 DD 00H		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetOutStreamSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetOutStreamSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetOutStreamSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetOutStreamSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCoder@NDecoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0cH
	DD	FLAT:??_R2CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NDecoder::CCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoder@NDecoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NDecoder::CCOMCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCOMCoder@NDecoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:??_ECCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
	DD	FLAT:?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z ; NCompress::NDeflate::NDecoder::CCoder::CCoder
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder
_TEXT	ENDS
EXTRN	_IID_ICompressSetOutStreamSize:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv148 = -20						; size = 4
tv138 = -16						; size = 4
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN14@QueryInter@2
$LN13@QueryInter@2:
	mov	DWORD PTR tv75[ebp], 0
$LN14@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN9@QueryInter@2
$LN10@QueryInter@2:
	push	OFFSET _IID_ICompressGetInStreamProcessedSize
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN16@QueryInter@2
$LN15@QueryInter@2:
	mov	DWORD PTR tv86[ebp], 0
$LN16@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN9@QueryInter@2
$LN8@QueryInter@2:
	push	OFFSET _IID_ICompressSetInStream
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN18@QueryInter@2
$LN17@QueryInter@2:
	mov	DWORD PTR tv128[ebp], 0
$LN18@QueryInter@2:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter@2
$LN6@QueryInter@2:
	push	OFFSET _IID_ICompressSetOutStreamSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN19@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN20@QueryInter@2
$LN19@QueryInter@2:
	mov	DWORD PTR tv138[ebp], 0
$LN20@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter@2
$LN4@QueryInter@2:
	push	OFFSET _IID_ISequentialInStream
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN21@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN22@QueryInter@2
$LN21@QueryInter@2:
	mov	DWORD PTR tv148[ebp], 0
$LN22@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv148[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter@2
$LN9@QueryInter@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
	xor	eax, eax
$LN11@QueryInter@2:
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ PROC	; NCompress::NDeflate::NDecoder::CCoder::AddRef, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T73735 = -8						; size = 4
$T73734 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::Release, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+20], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73735[ebp], edx
	mov	eax, DWORD PTR $T73735[ebp]
	mov	DWORD PTR $T73734[ebp], eax
	cmp	DWORD PTR $T73734[ebp], 0
	je	SHORT $LN4@Release@2
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T73734[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T73734[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release@2
$LN4@Release@2:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release@2:
	xor	eax, eax
$LN2@Release@2:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::Release
_TEXT	ENDS
PUBLIC	??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCOMCoder::~CCOMCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z PROC ; NCompress::NDeflate::NDecoder::CCOMCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z ENDP ; NCompress::NDeflate::NDecoder::CCOMCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ	; NCompress::NDeflate::NDecoder::CCoder::~CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCOMCoder::~CCOMCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::~CCoder
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCOMCoder::~CCOMCoder
_TEXT	ENDS
PUBLIC	??1CLzOutWindow@@QAE@XZ				; CLzOutWindow::~CLzOutWindow
PUBLIC	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
EXTRN	??_ECCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::`vector deleting destructor'
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:??_ECCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
	DD	FLAT:?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1
__ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCoder::~CCoder, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1CLzOutWindow@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CLzOutWindow@@QAE@XZ
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::~CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z PROC	; NCompress::NDeflate::NDecoder::CCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::~CCoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z ENDP	; NCompress::NDeflate::NDecoder::CCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::~CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::~CLzOutWindow
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
_TEXT	ENDS
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetKeepHistory@CDecoder@NLzx@NCompress@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keepHistory$ = 8					; size = 1
?SetKeepHistory@CDecoder@NLzx@NCompress@@QAEX_N@Z PROC	; NCompress::NLzx::CDecoder::SetKeepHistory, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _keepHistory$[ebp]
	mov	BYTE PTR [eax+7360], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetKeepHistory@CDecoder@NLzx@NCompress@@QAEX_N@Z ENDP	; NCompress::NLzx::CDecoder::SetKeepHistory
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetKeepHistory@CDecoder@NQuantum@NCompress@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keepHistory$ = 8					; size = 1
?SetKeepHistory@CDecoder@NQuantum@NCompress@@QAEX_N@Z PROC ; NCompress::NQuantum::CDecoder::SetKeepHistory, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 262
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _keepHistory$[ebp]
	mov	BYTE PTR [eax+132], cl
	mov	esp, ebp
	pop	ebp
	ret	4
?SetKeepHistory@CDecoder@NQuantum@NCompress@@QAEX_N@Z ENDP ; NCompress::NQuantum::CDecoder::SetKeepHistory
_TEXT	ENDS
PUBLIC	??0CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::NRangeCoder::CDecoder::CDecoder
PUBLIC	??0CLzOutWindow@@QAE@XZ				; CLzOutWindow::CLzOutWindow
PUBLIC	??_7CDecoder@NQuantum@NCompress@@6B@		; NCompress::NQuantum::CDecoder::`vftable'
PUBLIC	??_R4CDecoder@NQuantum@NCompress@@6B@		; NCompress::NQuantum::CDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecoder@NQuantum@NCompress@@@8		; NCompress::NQuantum::CDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CDecoder@NQuantum@NCompress@@8		; NCompress::NQuantum::CDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecoder@NQuantum@NCompress@@8		; NCompress::NQuantum::CDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecoder@NQuantum@NCompress@@8	; NCompress::NQuantum::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	?QueryInterface@CDecoder@NQuantum@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NQuantum::CDecoder::QueryInterface
PUBLIC	?AddRef@CDecoder@NQuantum@NCompress@@UAGKXZ	; NCompress::NQuantum::CDecoder::AddRef
PUBLIC	?Release@CDecoder@NQuantum@NCompress@@UAGKXZ	; NCompress::NQuantum::CDecoder::Release
EXTRN	?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:PROC ; NCompress::NQuantum::CDecoder::Code
EXTRN	?SetOutStreamSize@CDecoder@NQuantum@NCompress@@UAGJPB_K@Z:PROC ; NCompress::NQuantum::CDecoder::SetOutStreamSize
EXTRN	??_ECDecoder@NQuantum@NCompress@@UAEPAXI@Z:PROC	; NCompress::NQuantum::CDecoder::`vector deleting destructor'
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecoder@NQuantum@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecoder@NQuantum@NCompress@@8 DD FLAT:??_R0?AVCDecoder@NQuantum@NCompress@@@8 ; NCompress::NQuantum::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecoder@NQuantum@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecoder@NQuantum@NCompress@@8
rdata$r	SEGMENT
??_R2CDecoder@NQuantum@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CDecoder@NQuantum@NCompress@@8 ; NCompress::NQuantum::CDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CDecoder@NQuantum@NCompress@@8
rdata$r	SEGMENT
??_R3CDecoder@NQuantum@NCompress@@8 DD 00H		; NCompress::NQuantum::CDecoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CDecoder@NQuantum@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecoder@NQuantum@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCDecoder@NQuantum@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NQuantum::CDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecoder@NQuantum@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDecoder@NQuantum@NCompress@@6B@
rdata$r	SEGMENT
??_R4CDecoder@NQuantum@NCompress@@6B@ DD 00H		; NCompress::NQuantum::CDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NQuantum@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NQuantum@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CDecoder@NQuantum@NCompress@@6B@
CONST	SEGMENT
??_7CDecoder@NQuantum@NCompress@@6B@ DD FLAT:??_R4CDecoder@NQuantum@NCompress@@6B@ ; NCompress::NQuantum::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NQuantum@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NQuantum@NCompress@@UAGKXZ
	DD	FLAT:?Release@CDecoder@NQuantum@NCompress@@UAGKXZ
	DD	FLAT:?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:?SetOutStreamSize@CDecoder@NQuantum@NCompress@@UAGJPB_K@Z
	DD	FLAT:??_ECDecoder@NQuantum@NCompress@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CDecoder@NQuantum@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDecoder@NQuantum@NCompress@@QAE@XZ PROC		; NCompress::NQuantum::CDecoder::CDecoder, COMDAT
; _this$ = ecx
; Line 263
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NQuantum@NCompress@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CLzOutWindow@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+132], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDecoder@NQuantum@NCompress@@QAE@XZ ENDP		; NCompress::NQuantum::CDecoder::CDecoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NQuantum@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CDecoder@NQuantum@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NQuantum::CDecoder::QueryInterface, COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@3
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter@3
$LN2@QueryInter@3:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter@3
$LN1@QueryInter@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter@3:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDecoder@NQuantum@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NQuantum::CDecoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NQuantum@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDecoder@NQuantum@NCompress@@UAGKXZ PROC	; NCompress::NQuantum::CDecoder::AddRef, COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDecoder@NQuantum@NCompress@@UAGKXZ ENDP	; NCompress::NQuantum::CDecoder::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NQuantum@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T73784 = -8						; size = 4
$T73783 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDecoder@NQuantum@NCompress@@UAGKXZ PROC	; NCompress::NQuantum::CDecoder::Release, COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@3
$LN1@Release@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73784[ebp], edx
	mov	eax, DWORD PTR $T73784[ebp]
	mov	DWORD PTR $T73783[ebp], eax
	cmp	DWORD PTR $T73783[ebp], 0
	je	SHORT $LN4@Release@3
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T73783[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T73783[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release@3
$LN4@Release@3:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release@3:
	xor	eax, eax
$LN2@Release@3:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDecoder@NQuantum@NCompress@@UAGKXZ ENDP	; NCompress::NQuantum::CDecoder::Release
_TEXT	ENDS
PUBLIC	??1CDecoder@NQuantum@NCompress@@UAE@XZ		; NCompress::NQuantum::CDecoder::~CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDecoder@NQuantum@NCompress@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDecoder@NQuantum@NCompress@@UAEPAXI@Z PROC		; NCompress::NQuantum::CDecoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDecoder@NQuantum@NCompress@@UAE@XZ	; NCompress::NQuantum::CDecoder::~CDecoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDecoder@NQuantum@NCompress@@UAEPAXI@Z ENDP		; NCompress::NQuantum::CDecoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::NRangeCoder::CDecoder::~CDecoder
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDecoder@NQuantum@NCompress@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDecoder@NQuantum@NCompress@@UAE@XZ$0
__ehfuncinfo$??1CDecoder@NQuantum@NCompress@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDecoder@NQuantum@NCompress@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDecoder@NQuantum@NCompress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDecoder@NQuantum@NCompress@@UAE@XZ PROC		; NCompress::NQuantum::CDecoder::~CDecoder, COMDAT
; _this$ = ecx
; Line 264
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDecoder@NQuantum@NCompress@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NQuantum@NCompress@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CLzOutWindow@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDecoder@NQuantum@NCompress@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CLzOutWindow@@QAE@XZ
__ehhandler$??1CDecoder@NQuantum@NCompress@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDecoder@NQuantum@NCompress@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDecoder@NQuantum@NCompress@@UAE@XZ ENDP		; NCompress::NQuantum::CDecoder::~CDecoder
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::CLzOutWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
PUBLIC	??0CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ	; NCompress::NQuantum::CStreamBitDecoder::CStreamBitDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ PROC	; NCompress::NQuantum::NRangeCoder::CDecoder::CDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ ENDP	; NCompress::NQuantum::NRangeCoder::CDecoder::CDecoder
_TEXT	ENDS
PUBLIC	??1CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ	; NCompress::NQuantum::CStreamBitDecoder::~CStreamBitDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ PROC	; NCompress::NQuantum::NRangeCoder::CDecoder::~CDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDecoder@NRangeCoder@NQuantum@NCompress@@QAE@XZ ENDP	; NCompress::NQuantum::NRangeCoder::CDecoder::~CDecoder
_TEXT	ENDS
PUBLIC	??0CInBuffer@@QAE@XZ				; CInBuffer::CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ PROC	; NCompress::NQuantum::CStreamBitDecoder::CStreamBitDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CInBuffer@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ ENDP	; NCompress::NQuantum::CStreamBitDecoder::CStreamBitDecoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBuffer@@QAE@XZ PROC				; CInBuffer::CInBuffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBuffer@@QAE@XZ ENDP				; CInBuffer::CInBuffer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ PROC	; NCompress::NQuantum::CStreamBitDecoder::~CStreamBitDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CStreamBitDecoder@NQuantum@NCompress@@QAE@XZ ENDP	; NCompress::NQuantum::CStreamBitDecoder::~CStreamBitDecoder
_TEXT	ENDS
PUBLIC	??_7CCabBlockInStream@NCab@NArchive@@6B@	; NArchive::NCab::CCabBlockInStream::`vftable'
PUBLIC	??_R4CCabBlockInStream@NCab@NArchive@@6B@	; NArchive::NCab::CCabBlockInStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCabBlockInStream@NCab@NArchive@@@8	; NArchive::NCab::CCabBlockInStream `RTTI Type Descriptor'
PUBLIC	??_R3CCabBlockInStream@NCab@NArchive@@8		; NArchive::NCab::CCabBlockInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCabBlockInStream@NCab@NArchive@@8		; NArchive::NCab::CCabBlockInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCabBlockInStream@NCab@NArchive@@8 ; NArchive::NCab::CCabBlockInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CCabBlockInStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NCab::CCabBlockInStream::QueryInterface
PUBLIC	?AddRef@CCabBlockInStream@NCab@NArchive@@UAGKXZ	; NArchive::NCab::CCabBlockInStream::AddRef
PUBLIC	?Release@CCabBlockInStream@NCab@NArchive@@UAGKXZ ; NArchive::NCab::CCabBlockInStream::Release
EXTRN	?Read@CCabBlockInStream@NCab@NArchive@@UAGJPAXIPAI@Z:PROC ; NArchive::NCab::CCabBlockInStream::Read
;	COMDAT ??_R1A@?0A@EA@CCabBlockInStream@NCab@NArchive@@8
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabblockinstream.h
rdata$r	SEGMENT
??_R1A@?0A@EA@CCabBlockInStream@NCab@NArchive@@8 DD FLAT:??_R0?AVCCabBlockInStream@NCab@NArchive@@@8 ; NArchive::NCab::CCabBlockInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCabBlockInStream@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2CCabBlockInStream@NCab@NArchive@@8
rdata$r	SEGMENT
??_R2CCabBlockInStream@NCab@NArchive@@8 DD FLAT:??_R1A@?0A@EA@CCabBlockInStream@NCab@NArchive@@8 ; NArchive::NCab::CCabBlockInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCabBlockInStream@NCab@NArchive@@8
rdata$r	SEGMENT
??_R3CCabBlockInStream@NCab@NArchive@@8 DD 00H		; NArchive::NCab::CCabBlockInStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CCabBlockInStream@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCabBlockInStream@NCab@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCCabBlockInStream@NCab@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::NCab::CCabBlockInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCabBlockInStream@NCab@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCabBlockInStream@NCab@NArchive@@6B@
rdata$r	SEGMENT
??_R4CCabBlockInStream@NCab@NArchive@@6B@ DD 00H	; NArchive::NCab::CCabBlockInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCabBlockInStream@NCab@NArchive@@@8
	DD	FLAT:??_R3CCabBlockInStream@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_7CCabBlockInStream@NCab@NArchive@@6B@
CONST	SEGMENT
??_7CCabBlockInStream@NCab@NArchive@@6B@ DD FLAT:??_R4CCabBlockInStream@NCab@NArchive@@6B@ ; NArchive::NCab::CCabBlockInStream::`vftable'
	DD	FLAT:?QueryInterface@CCabBlockInStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCabBlockInStream@NCab@NArchive@@UAGKXZ
	DD	FLAT:?Release@CCabBlockInStream@NCab@NArchive@@UAGKXZ
	DD	FLAT:?Read@CCabBlockInStream@NCab@NArchive@@UAGJPAXIPAI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CCabBlockInStream@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCabBlockInStream@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CCabBlockInStream::CCabBlockInStream, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCabBlockInStream@NCab@NArchive@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCabBlockInStream@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CCabBlockInStream::CCabBlockInStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCabBlockInStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCabBlockInStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z PROC ; NArchive::NCab::CCabBlockInStream::QueryInterface, COMDAT
; Line 24
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@4
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter@4
$LN2@QueryInter@4:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter@4
$LN1@QueryInter@4:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter@4:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCabBlockInStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z ENDP ; NArchive::NCab::CCabBlockInStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCabBlockInStream@NCab@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCabBlockInStream@NCab@NArchive@@UAGKXZ PROC	; NArchive::NCab::CCabBlockInStream::AddRef, COMDAT
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCabBlockInStream@NCab@NArchive@@UAGKXZ ENDP	; NArchive::NCab::CCabBlockInStream::AddRef
_TEXT	ENDS
PUBLIC	??_GCCabBlockInStream@NCab@NArchive@@QAEPAXI@Z	; NArchive::NCab::CCabBlockInStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CCabBlockInStream@NCab@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73825 = -8						; size = 4
$T73824 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCabBlockInStream@NCab@NArchive@@UAGKXZ PROC	; NArchive::NCab::CCabBlockInStream::Release, COMDAT
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@4
$LN1@Release@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73825[ebp], edx
	mov	eax, DWORD PTR $T73825[ebp]
	mov	DWORD PTR $T73824[ebp], eax
	cmp	DWORD PTR $T73824[ebp], 0
	je	SHORT $LN4@Release@4
	push	1
	mov	ecx, DWORD PTR $T73824[ebp]
	call	??_GCCabBlockInStream@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@4
$LN4@Release@4:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@4:
	xor	eax, eax
$LN2@Release@4:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCabBlockInStream@NCab@NArchive@@UAGKXZ ENDP	; NArchive::NCab::CCabBlockInStream::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?InitForNewBlock@CCabBlockInStream@NCab@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitForNewBlock@CCabBlockInStream@NCab@NArchive@@QAEXXZ PROC ; NArchive::NCab::CCabBlockInStream::InitForNewBlock, COMDAT
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?InitForNewBlock@CCabBlockInStream@NCab@NArchive@@QAEXXZ ENDP ; NArchive::NCab::CCabBlockInStream::InitForNewBlock
_TEXT	ENDS
EXTRN	??1CCabBlockInStream@NCab@NArchive@@QAE@XZ:PROC	; NArchive::NCab::CCabBlockInStream::~CCabBlockInStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCabBlockInStream@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCabBlockInStream@NCab@NArchive@@QAEPAXI@Z PROC	; NArchive::NCab::CCabBlockInStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCabBlockInStream@NCab@NArchive@@QAE@XZ ; NArchive::NCab::CCabBlockInStream::~CCabBlockInStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCabBlockInStream@NCab@NArchive@@QAEPAXI@Z ENDP	; NArchive::NCab::CCabBlockInStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ PROC		; NArchive::NCab::CItem::GetEndOffset, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabitem.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	xor	edx, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetEndOffset@CItem@NCab@NArchive@@QBE_KXZ ENDP		; NArchive::NCab::CItem::GetEndOffset
_TEXT	ENDS
PUBLIC	?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::ReserveBlockPresent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDataBlockReserveSize@CArchInfo@NCab@NArchive@@QBEEXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?GetDataBlockReserveSize@CArchInfo@NCab@NArchive@@QBEEXZ PROC ; NArchive::NCab::CArchInfo::GetDataBlockReserveSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabin.h
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ; NArchive::NCab::CArchInfo::ReserveBlockPresent
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@GetDataBlo
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+27]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@GetDataBlo
$LN3@GetDataBlo:
	mov	DWORD PTR tv70[ebp], 0
$LN4@GetDataBlo:
	mov	al, BYTE PTR tv70[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDataBlockReserveSize@CArchInfo@NCab@NArchive@@QBEEXZ ENDP ; NArchive::NCab::CArchInfo::GetDataBlockReserveSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ PROC ; NArchive::NCab::CArchInfo::ReserveBlockPresent, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 4
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveBlockPresent@CArchInfo@NCab@NArchive@@QBE_NXZ ENDP ; NArchive::NCab::CArchInfo::ReserveBlockPresent
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ; CMyComPtr<IArchiveExtractCallback>::~CMyComPtr<IArchiveExtractCallback>
PUBLIC	??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ; CMyComPtr<IArchiveExtractCallback>::CMyComPtr<IArchiveExtractCallback>
PUBLIC	??_7CFolderOutStream@NCab@NArchive@@6B@		; NArchive::NCab::CFolderOutStream::`vftable'
PUBLIC	??0ISequentialOutStream@@QAE@XZ			; ISequentialOutStream::ISequentialOutStream
PUBLIC	??_R4CFolderOutStream@NCab@NArchive@@6B@	; NArchive::NCab::CFolderOutStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFolderOutStream@NCab@NArchive@@@8	; NArchive::NCab::CFolderOutStream `RTTI Type Descriptor'
PUBLIC	??_R3CFolderOutStream@NCab@NArchive@@8		; NArchive::NCab::CFolderOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFolderOutStream@NCab@NArchive@@8		; NArchive::NCab::CFolderOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFolderOutStream@NCab@NArchive@@8	; NArchive::NCab::CFolderOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialOutStream@@@8		; ISequentialOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Base Class Array'
PUBLIC	?QueryInterface@CFolderOutStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NCab::CFolderOutStream::QueryInterface
PUBLIC	?AddRef@CFolderOutStream@NCab@NArchive@@UAGKXZ	; NArchive::NCab::CFolderOutStream::AddRef
PUBLIC	?Release@CFolderOutStream@NCab@NArchive@@UAGKXZ	; NArchive::NCab::CFolderOutStream::Release
;	COMDAT ??_R2ISequentialOutStream@@8
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.cpp
rdata$r	SEGMENT
??_R2ISequentialOutStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8 ; ISequentialOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialOutStream@@8
rdata$r	SEGMENT
??_R3ISequentialOutStream@@8 DD 00H			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialOutStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFolderOutStream@NCab@NArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFolderOutStream@NCab@NArchive@@8 DD FLAT:??_R0?AVCFolderOutStream@NCab@NArchive@@@8 ; NArchive::NCab::CFolderOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFolderOutStream@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2CFolderOutStream@NCab@NArchive@@8
rdata$r	SEGMENT
??_R2CFolderOutStream@NCab@NArchive@@8 DD FLAT:??_R1A@?0A@EA@CFolderOutStream@NCab@NArchive@@8 ; NArchive::NCab::CFolderOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CFolderOutStream@NCab@NArchive@@8
rdata$r	SEGMENT
??_R3CFolderOutStream@NCab@NArchive@@8 DD 00H		; NArchive::NCab::CFolderOutStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CFolderOutStream@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFolderOutStream@NCab@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCFolderOutStream@NCab@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::NCab::CFolderOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFolderOutStream@NCab@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CFolderOutStream@NCab@NArchive@@6B@
rdata$r	SEGMENT
??_R4CFolderOutStream@NCab@NArchive@@6B@ DD 00H		; NArchive::NCab::CFolderOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFolderOutStream@NCab@NArchive@@@8
	DD	FLAT:??_R3CFolderOutStream@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_7CFolderOutStream@NCab@NArchive@@6B@
CONST	SEGMENT
??_7CFolderOutStream@NCab@NArchive@@6B@ DD FLAT:??_R4CFolderOutStream@NCab@NArchive@@6B@ ; NArchive::NCab::CFolderOutStream::`vftable'
	DD	FLAT:?QueryInterface@CFolderOutStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFolderOutStream@NCab@NArchive@@UAGKXZ
	DD	FLAT:?Release@CFolderOutStream@NCab@NArchive@@UAGKXZ
	DD	FLAT:?Write@CFolderOutStream@NCab@NArchive@@UAGJPBXIPAI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFolderOutStream@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFolderOutStream@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CFolderOutStream@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CFolderOutStream@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CFolderOutStream@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFolderOutStream@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CFolderOutStream::CFolderOutStream, COMDAT
; _this$ = ecx
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CFolderOutStream@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CFolderOutStream@NCab@NArchive@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ; CMyComPtr<IArchiveExtractCallback>::CMyComPtr<IArchiveExtractCallback>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFolderOutStream@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ; CMyComPtr<IArchiveExtractCallback>::~CMyComPtr<IArchiveExtractCallback>
__ehhandler$??0CFolderOutStream@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CFolderOutStream@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CFolderOutStream@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CFolderOutStream::CFolderOutStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CFolderOutStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CFolderOutStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z PROC ; NArchive::NCab::CFolderOutStream::QueryInterface, COMDAT
; Line 524
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@5
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter@5
$LN2@QueryInter@5:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter@5
$LN1@QueryInter@5:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter@5:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CFolderOutStream@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z ENDP ; NArchive::NCab::CFolderOutStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFolderOutStream@NCab@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CFolderOutStream@NCab@NArchive@@UAGKXZ PROC	; NArchive::NCab::CFolderOutStream::AddRef, COMDAT
; Line 524
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CFolderOutStream@NCab@NArchive@@UAGKXZ ENDP	; NArchive::NCab::CFolderOutStream::AddRef
_TEXT	ENDS
PUBLIC	??_GCFolderOutStream@NCab@NArchive@@QAEPAXI@Z	; NArchive::NCab::CFolderOutStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CFolderOutStream@NCab@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73857 = -8						; size = 4
$T73856 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CFolderOutStream@NCab@NArchive@@UAGKXZ PROC	; NArchive::NCab::CFolderOutStream::Release, COMDAT
; Line 524
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@5
$LN1@Release@5:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73857[ebp], edx
	mov	eax, DWORD PTR $T73857[ebp]
	mov	DWORD PTR $T73856[ebp], eax
	cmp	DWORD PTR $T73856[ebp], 0
	je	SHORT $LN4@Release@5
	push	1
	mov	ecx, DWORD PTR $T73856[ebp]
	call	??_GCFolderOutStream@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@5
$LN4@Release@5:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@5:
	xor	eax, eax
$LN2@Release@5:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CFolderOutStream@NCab@NArchive@@UAGKXZ ENDP	; NArchive::NCab::CFolderOutStream::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetPosInFolder@CFolderOutStream@NCab@NArchive@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPosInFolder@CFolderOutStream@NCab@NArchive@@QBE_KXZ PROC ; NArchive::NCab::CFolderOutStream::GetPosInFolder, COMDAT
; _this$ = ecx
; Line 576
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+72]
	mov	edx, DWORD PTR [ecx+76]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPosInFolder@CFolderOutStream@NCab@NArchive@@QBE_KXZ ENDP ; NArchive::NCab::CFolderOutStream::GetPosInFolder
_TEXT	ENDS
PUBLIC	??1CFolderOutStream@NCab@NArchive@@QAE@XZ	; NArchive::NCab::CFolderOutStream::~CFolderOutStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCFolderOutStream@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFolderOutStream@NCab@NArchive@@QAEPAXI@Z PROC	; NArchive::NCab::CFolderOutStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFolderOutStream@NCab@NArchive@@QAE@XZ ; NArchive::NCab::CFolderOutStream::~CFolderOutStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCFolderOutStream@NCab@NArchive@@QAEPAXI@Z ENDP	; NArchive::NCab::CFolderOutStream::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CFolderOutStream@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFolderOutStream@NCab@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFolderOutStream@NCab@NArchive@@QAE@XZ$1
__ehfuncinfo$??1CFolderOutStream@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CFolderOutStream@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CFolderOutStream@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CFolderOutStream@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CFolderOutStream::~CFolderOutStream, COMDAT
; _this$ = ecx
; Line 564
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFolderOutStream@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CFolderOutStream@NCab@NArchive@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeTempBuf@CFolderOutStream@NCab@NArchive@@AAEXXZ ; NArchive::NCab::CFolderOutStream::FreeTempBuf
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ; CMyComPtr<IArchiveExtractCallback>::~CMyComPtr<IArchiveExtractCallback>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFolderOutStream@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ; CMyComPtr<IArchiveExtractCallback>::~CMyComPtr<IArchiveExtractCallback>
__unwindfunclet$??1CFolderOutStream@NCab@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__ehhandler$??1CFolderOutStream@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CFolderOutStream@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CFolderOutStream@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CFolderOutStream::~CFolderOutStream
PUBLIC	??_7ISequentialOutStream@@6B@			; ISequentialOutStream::`vftable'
PUBLIC	??_R4ISequentialOutStream@@6B@			; ISequentialOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialOutStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialOutStream@@6B@ DD 00H			; ISequentialOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialOutStream@@@8
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialOutStream@@6B@
CONST	SEGMENT
??_7ISequentialOutStream@@6B@ DD FLAT:??_R4ISequentialOutStream@@6B@ ; ISequentialOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialOutStream@@QAE@XZ PROC			; ISequentialOutStream::ISequentialOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialOutStream@@QAE@XZ ENDP			; ISequentialOutStream::ISequentialOutStream
_TEXT	ENDS
PUBLIC	?GetNumberOfItems@CHandler@NCab@NArchive@@UAGJPAI@Z ; NArchive::NCab::CHandler::GetNumberOfItems
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numItems$ = 12						; size = 4
?GetNumberOfItems@CHandler@NCab@NArchive@@UAGJPAI@Z PROC ; NArchive::NCab::CHandler::GetNumberOfItems
; Line 1150
	push	ebp
	mov	ebp, esp
; Line 1151
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CMvItem>::Size
	mov	ecx, DWORD PTR _numItems$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1152
	xor	eax, eax
; Line 1153
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetNumberOfItems@CHandler@NCab@NArchive@@UAGJPAI@Z ENDP ; NArchive::NCab::CHandler::GetNumberOfItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z PROC ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ENDP ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ PROC	; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ENDP	; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z PROC ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ENDP ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z PROC ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@5
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ENDP ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@6:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialOutStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@6:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialOutStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ PROC	; CMyComPtr<ISequentialOutStream>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ ENDP	; CMyComPtr<ISequentialOutStream>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ PROC ; CRecordVector<NArchive::NCab::CFolder>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
$T73911 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T73911[ebp], ecx
	mov	edx, DWORD PTR $T73911[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z PROC ; CRecordVector<NArchive::NCab::CFolder>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEABUCFolder@NCab@NArchive@@I@Z ENDP ; CRecordVector<NArchive::NCab::CFolder>::operator[]
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ PROC ; CObjectVector<NArchive::NCab::CItem>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ENDP ; CObjectVector<NArchive::NCab::CItem>::Size
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ PROC	; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ENDP	; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CItem>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CItem>::operator[]
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CItem>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCItem@NCab@NArchive@@@@QAEAAUCItem@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CItem>::operator[]
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GCItem@NCab@NArchive@@QAEPAXI@Z		; NArchive::NCab::CItem::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T73926 = -28						; size = 4
$T73925 = -24						; size = 4
_i$72424 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ PROC	; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$72424[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$72424[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$72424[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$72424[ebp], eax
	mov	ecx, DWORD PTR _i$72424[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T73926[ebp], edx
	mov	eax, DWORD PTR $T73926[ebp]
	mov	DWORD PTR $T73925[ebp], eax
	cmp	DWORD PTR $T73925[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T73925[ebp]
	call	??_GCItem@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ENDP	; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z PROC	; CMyComPtr<IInStream>::CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@7
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UIInStream@@@@QAE@PAUIInStream@@@Z ENDP	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@8:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator IInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator IInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UIInStream@@@@QAEPAPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UIInStream@@@@QAEPAPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UIInStream@@@@QAEPAPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z PROC ; CMyComPtr<IInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@2
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@2:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@2
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@2:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ENDP ; CMyComPtr<IInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@ABV0@@Z PROC ; CMyComPtr<IInStream>::operator=, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lp$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@ABV0@@Z ENDP ; CMyComPtr<IInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEIXZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::Size
_TEXT	ENDS
PUBLIC	?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ		; CRecordVector<void *>::IsEmpty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty, COMDAT
; _this$ = ecx
; Line 416
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ	; CRecordVector<void *>::IsEmpty
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBE_NXZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QBEABUCDatabaseEx@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@XZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::Back, COMDAT
; _this$ = ecx
; Line 455
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CDatabaseEx>::operator[]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEAAUCDatabaseEx@NCab@NArchive@@XZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::Back
_TEXT	ENDS
PUBLIC	?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z		; CRecordVector<void *>::Insert
PUBLIC	??0CDatabaseEx@NCab@NArchive@@QAE@ABU012@@Z	; NArchive::NCab::CDatabaseEx::CDatabaseEx
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z$0
__ehfuncinfo$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T73965 = -24						; size = 4
$T73964 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_item$ = 12						; size = 4
?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::Insert, COMDAT
; _this$ = ecx
; Line 477
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	128					; 00000080H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73965[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T73965[ebp], 0
	je	SHORT $LN3@Insert
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T73965[ebp]
	call	??0CDatabaseEx@NCab@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@Insert
$LN3@Insert:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Insert:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T73964[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T73964[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z	; CRecordVector<void *>::Insert
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z$0:
	mov	eax, DWORD PTR $T73965[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXIABUCDatabaseEx@NCab@NArchive@@@Z ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::Insert
PUBLIC	?Clear@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::Clear
PUBLIC	??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z	; NArchive::NCab::CDatabaseEx::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXXZ
_TEXT	SEGMENT
tv75 = -20						; size = 4
$T73978 = -16						; size = 4
$T73977 = -12						; size = 4
_i$72490 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXXZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::Clear, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$72490[ebp], eax
$LN2@Clear:
	cmp	DWORD PTR _i$72490[ebp], 0
	je	SHORT $LN1@Clear
; Line 501
	mov	eax, DWORD PTR _i$72490[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$72490[ebp], eax
	mov	ecx, DWORD PTR _i$72490[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T73978[ebp], edx
	mov	eax, DWORD PTR $T73978[ebp]
	mov	DWORD PTR $T73977[ebp], eax
	cmp	DWORD PTR $T73977[ebp], 0
	je	SHORT $LN5@Clear
	push	1
	mov	ecx, DWORD PTR $T73977[ebp]
	call	??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 502
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 503
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXXZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::Clear
_TEXT	ENDS
PUBLIC	?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::DeleteFrontal
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z
_TEXT	SEGMENT
tv73 = -20						; size = 4
$T73984 = -16						; size = 4
$T73983 = -12						; size = 4
_i$72499 = -8						; size = 4
_this$ = -4						; size = 4
_num$ = 8						; size = 4
?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal, COMDAT
; _this$ = ecx
; Line 514
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 515
	mov	DWORD PTR _i$72499[ebp], 0
	jmp	SHORT $LN3@DeleteFron
$LN2@DeleteFron:
	mov	eax, DWORD PTR _i$72499[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72499[ebp], eax
$LN3@DeleteFron:
	mov	ecx, DWORD PTR _i$72499[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN1@DeleteFron
; Line 516
	mov	edx, DWORD PTR _i$72499[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T73984[ebp], eax
	mov	ecx, DWORD PTR $T73984[ebp]
	mov	DWORD PTR $T73983[ebp], ecx
	cmp	DWORD PTR $T73983[ebp], 0
	je	SHORT $LN6@DeleteFron
	push	1
	mov	ecx, DWORD PTR $T73983[ebp]
	call	??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN7@DeleteFron
$LN6@DeleteFron:
	mov	DWORD PTR tv73[ebp], 0
$LN7@DeleteFron:
	jmp	SHORT $LN2@DeleteFron
$LN1@DeleteFron:
; Line 517
	mov	edx, DWORD PTR _num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z ; CRecordVector<void *>::DeleteFrontal
; Line 518
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrontal@?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAEXI@Z ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::DeleteFrontal
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEIXZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEXXZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QBEABUCMvItem@NCab@NArchive@@I@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z PROC ; CRecordVector<NArchive::NCab::CMvItem>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAEAAUCMvItem@NCab@NArchive@@I@Z ENDP ; CRecordVector<NArchive::NCab::CMvItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@H@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@H@@QAEXXZ PROC			; CRecordVector<int>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@H@@QAEXXZ ENDP			; CRecordVector<int>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@H@@QBEABHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@H@@QBEABHI@Z PROC			; CRecordVector<int>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@H@@QBEABHI@Z ENDP			; CRecordVector<int>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@I@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@I@@QAEXXZ PROC			; CRecordVector<unsigned int>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@I@@QAEXXZ ENDP			; CRecordVector<unsigned int>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@I@@QAEAAII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@I@@QAEAAII@Z PROC			; CRecordVector<unsigned int>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@I@@QAEAAII@Z ENDP			; CRecordVector<unsigned int>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
$T74007 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::~CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74007[ebp], ecx
	mov	edx, DWORD PTR $T74007[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ PROC ; CMyComPtr<IArchiveOpenVolumeCallback>::CMyComPtr<IArchiveOpenVolumeCallback>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ENDP ; CMyComPtr<IArchiveOpenVolumeCallback>::CMyComPtr<IArchiveOpenVolumeCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ PROC ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@9:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAE@XZ ENDP ; CMyComPtr<IArchiveOpenVolumeCallback>::~CMyComPtr<IArchiveOpenVolumeCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ PROC ; CMyComPtr<IArchiveOpenVolumeCallback>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QAEPAPAUIArchiveOpenVolumeCallback@@XZ ENDP ; CMyComPtr<IArchiveOpenVolumeCallback>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ PROC ; CMyComPtr<IArchiveOpenVolumeCallback>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBEPAUIArchiveOpenVolumeCallback@@XZ ENDP ; CMyComPtr<IArchiveOpenVolumeCallback>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ PROC ; CMyComPtr<IArchiveOpenVolumeCallback>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UIArchiveOpenVolumeCallback@@@@QBE_NXZ ENDP ; CMyComPtr<IArchiveOpenVolumeCallback>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ PROC	; CMyComPtr<IArchiveExtractCallback>::CMyComPtr<IArchiveExtractCallback>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveExtractCallback>::CMyComPtr<IArchiveExtractCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ PROC	; CMyComPtr<IArchiveExtractCallback>::~CMyComPtr<IArchiveExtractCallback>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@10
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@10:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveExtractCallback@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveExtractCallback>::~CMyComPtr<IArchiveExtractCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ PROC ; CMyComPtr<IArchiveExtractCallback>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveExtractCallback@@@@QBEPAUIArchiveExtractCallback@@XZ ENDP ; CMyComPtr<IArchiveExtractCallback>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z PROC ; CMyComPtr<IArchiveExtractCallback>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@3
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@3:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@3
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@3:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIArchiveExtractCallback@@@@QAEPAUIArchiveExtractCallback@@PAU1@@Z ENDP ; CMyComPtr<IArchiveExtractCallback>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@_N@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@_N@@QAE@XZ PROC			; CRecordVector<bool>::CRecordVector<bool>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@_N@@QAE@XZ ENDP			; CRecordVector<bool>::CRecordVector<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@_N@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@_N@@QBEIXZ PROC			; CRecordVector<bool>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@_N@@QBEIXZ ENDP			; CRecordVector<bool>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@_N@@QAE@XZ
_TEXT	SEGMENT
$T74032 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@_N@@QAE@XZ PROC			; CRecordVector<bool>::~CRecordVector<bool>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74032[ebp], ecx
	mov	edx, DWORD PTR $T74032[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@_N@@QAE@XZ ENDP			; CRecordVector<bool>::~CRecordVector<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@_N@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@_N@@QAEXXZ PROC			; CRecordVector<bool>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@_N@@QAEXXZ ENDP			; CRecordVector<bool>::Clear
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ	; CRecordVector<bool>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@_N@@QAEI_N@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 1
?Add@?$CRecordVector@_N@@QAEI_N@Z PROC			; CRecordVector<bool>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ ; CRecordVector<bool>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _item$[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv71[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@_N@@QAEI_N@Z ENDP			; CRecordVector<bool>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@_N@@QBEAB_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@_N@@QBEAB_NI@Z PROC			; CRecordVector<bool>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _index$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@_N@@QBEAB_NI@Z ENDP			; CRecordVector<bool>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ PROC		; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ ENDP		; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z PROC ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@11
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z ENDP ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ PROC		; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@12:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ENDP		; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ PROC ; CMyComPtr<ICompressCoder>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ENDP ; CMyComPtr<ICompressCoder>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z PROC ; CMyComPtr<ICompressCoder>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@4
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@4:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@4
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@4:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ENDP ; CMyComPtr<ICompressCoder>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ PROC		; CMyComPtr<ICompressCoder>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICompressCoder@@@@QBE_NXZ ENDP		; CMyComPtr<ICompressCoder>::operator!
_TEXT	ENDS
PUBLIC	??1CItem@NCab@NArchive@@QAE@XZ			; NArchive::NCab::CItem::~CItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCItem@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCItem@NCab@NArchive@@QAEPAXI@Z PROC			; NArchive::NCab::CItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CItem@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCItem@NCab@NArchive@@QAEPAXI@Z ENDP			; NArchive::NCab::CItem::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$CMyComPtr@UIInStream@@@@QAE@ABV0@@Z	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
PUBLIC	??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z	; NArchive::NCab::CDatabase::CDatabase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDatabaseEx@NCab@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CDatabaseEx@NCab@NArchive@@QAE@ABU012@@Z PROC	; NArchive::NCab::CDatabaseEx::CDatabaseEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 120				; 00000078H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??0?$CMyComPtr@UIInStream@@@@QAE@ABV0@@Z ; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CDatabaseEx@NCab@NArchive@@QAE@ABU012@@Z ENDP	; NArchive::NCab::CDatabaseEx::CDatabaseEx
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z PROC		; NArchive::NCab::CDatabaseEx::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z ENDP		; NArchive::NCab::CDatabaseEx::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CItem@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CItem@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CItem::~CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CItem@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CItem::~CItem
_TEXT	ENDS
PUBLIC	??0CInArcInfo@NCab@NArchive@@QAE@ABU012@@Z	; NArchive::NCab::CInArcInfo::CInArcInfo
PUBLIC	??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z ; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>
PUBLIC	??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@ABV0@@Z ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z$1
__ehfuncinfo$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z PROC		; NArchive::NCab::CDatabase::CDatabase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@ABV0@@Z ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z ; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+24], ecx
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+28], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0CInArcInfo@NCab@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
__unwindfunclet$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
__ehhandler$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDatabase@NCab@NArchive@@QAE@ABU012@@Z ENDP		; NArchive::NCab::CDatabase::CDatabase
PUBLIC	??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z	; NArchive::NCab::CArchInfo::CArchInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInArcInfo@NCab@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CInArcInfo@NCab@NArchive@@QAE@ABU012@@Z PROC		; NArchive::NCab::CInArcInfo::CInArcInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+76], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR [ecx+80], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CInArcInfo@NCab@NArchive@@QAE@ABU012@@Z ENDP		; NArchive::NCab::CInArcInfo::CInArcInfo
_TEXT	ENDS
PUBLIC	??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z	; NArchive::NCab::COtherArc::COtherArc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z$0
__ehfuncinfo$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z PROC		; NArchive::NCab::CArchInfo::CArchInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR [eax+1], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+24]
	mov	WORD PTR [eax+24], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+26]
	mov	BYTE PTR [eax+26], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+27]
	mov	BYTE PTR [eax+27], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1COtherArc@NCab@NArchive@@QAE@XZ
__ehhandler$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CArchInfo@NCab@NArchive@@QAE@ABU012@@Z ENDP		; NArchive::NCab::CArchInfo::CArchInfo
EXTRN	??0AString@@QAE@ABV0@@Z:PROC			; AString::AString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z$0
__ehfuncinfo$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z PROC		; NArchive::NCab::COtherArc::COtherArc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0COtherArc@NCab@NArchive@@QAE@ABU012@@Z ENDP		; NArchive::NCab::COtherArc::COtherArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ PROC		; CRecordVector<void *>::IsEmpty, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ ENDP		; CRecordVector<void *>::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T74104 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74104[ebp], ecx
	mov	edx, DWORD PTR $T74104[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@PAX@@QAEXXZ PROC			; CRecordVector<void *>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@PAX@@QAEXXZ ENDP			; CRecordVector<void *>::Clear
_TEXT	ENDS
PUBLIC	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z	; CRecordVector<void *>::MoveItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_num$ = 8						; size = 4
?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z PROC	; CRecordVector<void *>::DeleteFrontal, COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 143
	cmp	DWORD PTR _num$[ebp], 0
	je	SHORT $LN2@DeleteFron@2
; Line 145
	mov	eax, DWORD PTR _num$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ; CRecordVector<void *>::MoveItems
; Line 146
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR _num$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN2@DeleteFron@2:
; Line 148
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrontal@?$CRecordVector@PAX@@QAEXI@Z ENDP	; CRecordVector<void *>::DeleteFrontal
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_item$ = 12						; size = 4
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z PROC		; CRecordVector<void *>::Insert, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 212
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ; CRecordVector<void *>::MoveItems
; Line 213
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 215
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z ENDP		; CRecordVector<void *>::Insert
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
$T74117 = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@ABV0@@Z PROC ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 38
	mov	ecx, DWORD PTR _v$[ebp]
	call	?Size@?$CRecordVector@UCFolder@NCab@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NCab::CFolder>::Size
	mov	DWORD PTR _size$[ebp], eax
; Line 39
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CRecordVec
; Line 41
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 8
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74117[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T74117[ebp]
	mov	DWORD PTR [eax], ecx
; Line 42
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 44
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@CRecordVec:
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@ABV0@@Z ENDP ; CRecordVector<NArchive::NCab::CFolder>::CRecordVector<NArchive::NCab::CFolder>
_TEXT	ENDS
PUBLIC	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z	; CRecordVector<void *>::AddInReserved
PUBLIC	??0CItem@NCab@NArchive@@QAE@ABU012@@Z		; NArchive::NCab::CItem::CItem
PUBLIC	?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::ConstructReserve
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z$1
__ehfuncinfo$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
tv85 = -36						; size = 4
$T74121 = -32						; size = 4
$T74120 = -28						; size = 4
_i$72647 = -24						; size = 4
_size$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_v$ = 8							; size = 4
??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z PROC ; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>, COMDAT
; _this$ = ecx
; Line 422
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 424
	mov	ecx, DWORD PTR _v$[ebp]
	call	?Size@?$CObjectVector@UCItem@NCab@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NCab::CItem>::Size
	mov	DWORD PTR _size$[ebp], eax
; Line 425
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z ; CRecordVector<void *>::ConstructReserve
; Line 426
	mov	DWORD PTR _i$72647[ebp], 0
	jmp	SHORT $LN3@CObjectVec@2
$LN2@CObjectVec@2:
	mov	ecx, DWORD PTR _i$72647[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$72647[ebp], ecx
$LN3@CObjectVec@2:
	mov	edx, DWORD PTR _i$72647[ebp]
	cmp	edx, DWORD PTR _size$[ebp]
	jae	SHORT $LN4@CObjectVec@2
; Line 427
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74121[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T74121[ebp], 0
	je	SHORT $LN6@CObjectVec@2
	mov	eax, DWORD PTR _i$72647[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	call	??A?$CObjectVector@UCItem@NCab@NArchive@@@@QBEABUCItem@NCab@NArchive@@I@Z ; CObjectVector<NArchive::NCab::CItem>::operator[]
	push	eax
	mov	ecx, DWORD PTR $T74121[ebp]
	call	??0CItem@NCab@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@CObjectVec@2
$LN6@CObjectVec@2:
	mov	DWORD PTR tv85[ebp], 0
$LN7@CObjectVec@2:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T74120[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T74120[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ; CRecordVector<void *>::AddInReserved
	jmp	SHORT $LN2@CObjectVec@2
$LN4@CObjectVec@2:
; Line 428
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__unwindfunclet$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z$1:
	mov	eax, DWORD PTR $T74121[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@ABV0@@Z ENDP ; CObjectVector<NArchive::NCab::CItem>::CObjectVector<NArchive::NCab::CItem>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CMyComPtr@UIInStream@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lp$ = 8						; size = 4
??0?$CMyComPtr@UIInStream@@@@QAE@ABV0@@Z PROC		; CMyComPtr<IInStream>::CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _lp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@13
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@13:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UIInStream@@@@QAE@ABV0@@Z ENDP		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ
_TEXT	SEGMENT
$T74137 = -20						; size = 4
$T74136 = -16						; size = 4
_p$72662 = -12						; size = 4
_newCapacity$72661 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ PROC	; CRecordVector<bool>::ReserveOnePosition, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$72661[ebp], ecx
; Line 23
	mov	edx, DWORD PTR _newCapacity$72661[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74136[ebp], eax
	mov	eax, DWORD PTR $T74136[ebp]
	mov	DWORD PTR _p$72662[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$72662[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74137[ebp], edx
	mov	eax, DWORD PTR $T74137[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$72662[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$72661[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ ENDP	; CRecordVector<bool>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CItem@NCab@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CItem@NCab@NArchive@@QAE@ABU012@@Z PROC		; NArchive::NCab::CItem::CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	ax, WORD PTR [edx+28]
	mov	WORD PTR [ecx+28], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	ax, WORD PTR [edx+30]
	mov	WORD PTR [ecx+30], ax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CItem@NCab@NArchive@@QAE@ABU012@@Z ENDP		; NArchive::NCab::CItem::CItem
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MoveItems@?$CRecordVector@PAX@@AAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_destIndex$ = 8						; size = 4
_srcIndex$ = 12						; size = 4
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z PROC		; CRecordVector<void *>::MoveItems, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _srcIndex$[ebp]
	shl	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _srcIndex$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _destIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 16
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ENDP		; CRecordVector<void *>::MoveItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T74146 = -20						; size = 4
$T74145 = -16						; size = 4
_p$72680 = -12						; size = 4
_newCapacity$72679 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@2
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$72679[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$72679[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74145[ebp], eax
	mov	eax, DWORD PTR $T74145[ebp]
	mov	DWORD PTR _p$72680[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@2
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$72680[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@2:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74146[ebp], edx
	mov	eax, DWORD PTR $T74146[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$72680[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$72679[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@2:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
$T74149 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z PROC	; CRecordVector<void *>::ConstructReserve, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@ConstructR
; Line 55
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74149[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T74149[ebp]
	mov	DWORD PTR [eax], ecx
; Line 56
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN2@ConstructR:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z ENDP	; CRecordVector<void *>::ConstructReserve
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z PROC	; CRecordVector<void *>::AddInReserved, COMDAT
; _this$ = ecx
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 207
	mov	esp, ebp
	pop	ebp
	ret	4
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ENDP	; CRecordVector<void *>::AddInReserved
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCopyCoder@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CCopyCoder@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::CCopyCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CCopyCoder@NCompress@@UAGKXZ	; NCompress::CCopyCoder::Release
?Release@CCopyCoder@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::CCopyCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCopyCoder@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CCopyCoder@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::CCopyCoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CCopyCoder@NCompress@@UAGKXZ	; NCompress::CCopyCoder::Release
?Release@CCopyCoder@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::CCopyCoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCopyCoder@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CCopyCoder@NCompress@@WM@AGKXZ PROC		; [thunk]:NCompress::CCopyCoder::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CCopyCoder@NCompress@@UAGKXZ	; NCompress::CCopyCoder::Release
?Release@CCopyCoder@NCompress@@WM@AGKXZ ENDP		; [thunk]:NCompress::CCopyCoder::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCopyCoder@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CCopyCoder@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CCopyCoder@NCompress@@UAGKXZ	; NCompress::CCopyCoder::AddRef
?AddRef@CCopyCoder@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCopyCoder@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CCopyCoder@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CCopyCoder@NCompress@@UAGKXZ	; NCompress::CCopyCoder::AddRef
?AddRef@CCopyCoder@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::CCopyCoder::QueryInterface
?QueryInterface@CCopyCoder@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCopyCoder@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CCopyCoder@NCompress@@WM@AGKXZ PROC		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CCopyCoder@NCompress@@UAGKXZ	; NCompress::CCopyCoder::AddRef
?AddRef@CCopyCoder@NCompress@@WM@AGKXZ ENDP		; [thunk]:NCompress::CCopyCoder::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::CCopyCoder::QueryInterface
?QueryInterface@CCopyCoder@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CCopyCoder@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::CCopyCoder::QueryInterface
?QueryInterface@CCopyCoder@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::CCopyCoder::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}'
_TEXT	ENDS
END

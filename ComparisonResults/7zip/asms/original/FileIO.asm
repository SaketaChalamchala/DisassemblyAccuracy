; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\FileIO.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kChunkSizeMax DD 0400000H
_DATA	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ	; NWindows::NFile::NIO::CFileBase::Close
PUBLIC	?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z ; NWindows::NFile::NIO::CFileBase::Create
EXTRN	__imp__CreateFileW@28:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	?fs2fas@@YG?AVAString@@PB_W@Z:PROC		; fs2fas
EXTRN	?g_IsNT@@3_NA:BYTE				; g_IsNT
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z$0
__ehfuncinfo$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\fileio.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv130 = -36						; size = 4
tv131 = -32						; size = 4
$T67778 = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_desiredAccess$ = 12					; size = 4
_shareMode$ = 16					; size = 4
_creationDisposition$ = 20				; size = 4
_flagsAndAttributes$ = 24				; size = 4
?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z PROC ; NWindows::NFile::NIO::CFileBase::Create
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@Create
; Line 53
	xor	al, al
	jmp	$LN4@Create
$LN3@Create:
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0
; Line 60
	movzx	edx, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	edx, edx
	jne	SHORT $LN2@Create
; Line 63
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _flagsAndAttributes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _creationDisposition$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _shareMode$[ebp]
	push	edx
	mov	eax, DWORD PTR _desiredAccess$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67778[ebp]
	push	edx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv131[ebp], eax
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv130[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	DWORD PTR __imp__CreateFileA@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67778[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 65
	jmp	SHORT $LN1@Create
$LN2@Create:
; Line 70
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _flagsAndAttributes$[ebp]
	push	edx
	mov	eax, DWORD PTR _creationDisposition$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _shareMode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _desiredAccess$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateFileW@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@Create:
; Line 81
	mov	edx, DWORD PTR _this$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx], -1
	setne	al
$LN4@Create:
; Line 82
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z$0:
	lea	ecx, DWORD PTR $T67778[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z ENDP ; NWindows::NFile::NIO::CFileBase::Create
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67797 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67797[ebp], ecx
	mov	edx, DWORD PTR $T67797[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
EXTRN	__imp__CloseHandle@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ PROC	; NWindows::NFile::NIO::CFileBase::Close
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.cpp
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN2@Close
; Line 87
	mov	al, 1
	jmp	SHORT $LN3@Close
$LN2@Close:
; Line 88
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@Close
; Line 89
	xor	al, al
	jmp	SHORT $LN3@Close
$LN1@Close:
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
; Line 91
	mov	al, 1
$LN3@Close:
; Line 92
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ENDP	; NWindows::NFile::NIO::CFileBase::Close
_TEXT	ENDS
PUBLIC	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
PUBLIC	?GetPosition@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ; NWindows::NFile::NIO::CFileBase::GetPosition
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 4
?GetPosition@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z PROC ; NWindows::NFile::NIO::CFileBase::GetPosition
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPosition@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ENDP ; NWindows::NFile::NIO::CFileBase::GetPosition
_TEXT	ENDS
PUBLIC	?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ; NWindows::NFile::NIO::CFileBase::GetLength
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetFileSize@8:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_sizeLow$ = -20						; size = 4
_sizeHigh$ = -12					; size = 4
_this$ = -4						; size = 4
_length$ = 8						; size = 4
?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z PROC ; NWindows::NFile::NIO::CFileBase::GetLength
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@GetLength
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	test	eax, eax
	je	SHORT $LN3@GetLength
; Line 104
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+4], edx
; Line 105
	mov	al, 1
	jmp	SHORT $LN4@GetLength
$LN3@GetLength:
; Line 110
	mov	esi, esp
	lea	eax, DWORD PTR _sizeHigh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetFileSize@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _sizeLow$[ebp], eax
; Line 111
	cmp	DWORD PTR _sizeLow$[ebp], -1
	jne	SHORT $LN2@GetLength
; Line 112
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@GetLength
; Line 113
	xor	al, al
	jmp	SHORT $LN4@GetLength
$LN2@GetLength:
; Line 114
	mov	eax, DWORD PTR _sizeHigh$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _sizeLow$[ebp]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 115
	mov	al, 1
$LN4@GetLength:
; Line 116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetLength
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@GetLength:
	DD	1
	DD	$LN7@GetLength
$LN7@GetLength:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@GetLength
$LN6@GetLength:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	0
?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ENDP ; NWindows::NFile::NIO::CFileBase::GetLength
_TEXT	ENDS
EXTRN	__imp__SetFilePointer@16:PROC
EXTRN	__allshr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_low$ = -20						; size = 4
_high$ = -12						; size = 4
_this$ = -4						; size = 4
_distanceToMove$ = 8					; size = 8
_moveMethod$ = 16					; size = 4
_newPosition$ = 20					; size = 4
?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z PROC	; NWindows::NFile::NIO::CFileBase::Seek
; _this$ = ecx
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN3@Seek
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	test	eax, eax
	je	SHORT $LN3@Seek
	cmp	DWORD PTR _moveMethod$[ebp], 2
	jne	SHORT $LN3@Seek
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _distanceToMove$[ebp]
	add	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _distanceToMove$[ebp+4]
	adc	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _distanceToMove$[ebp], edx
	mov	DWORD PTR _distanceToMove$[ebp+4], eax
; Line 124
	mov	DWORD PTR _moveMethod$[ebp], 0
$LN3@Seek:
; Line 128
	mov	eax, DWORD PTR _distanceToMove$[ebp]
	mov	edx, DWORD PTR _distanceToMove$[ebp+4]
	mov	cl, 32					; 00000020H
	call	__allshr
	mov	DWORD PTR _high$[ebp], eax
; Line 129
	mov	esi, esp
	mov	ecx, DWORD PTR _moveMethod$[ebp]
	push	ecx
	lea	edx, DWORD PTR _high$[ebp]
	push	edx
	mov	eax, DWORD PTR _distanceToMove$[ebp]
	mov	ecx, DWORD PTR _distanceToMove$[ebp+4]
	and	ecx, 0
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _low$[ebp], eax
; Line 130
	cmp	DWORD PTR _low$[ebp], -1
	jne	SHORT $LN2@Seek
; Line 131
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Seek
; Line 132
	xor	al, al
	jmp	SHORT $LN4@Seek
$LN2@Seek:
; Line 133
	mov	eax, DWORD PTR _high$[ebp]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _low$[ebp]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _newPosition$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 134
	mov	al, 1
$LN4@Seek:
; Line 135
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Seek
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN8@Seek:
	DD	1
	DD	$LN7@Seek
$LN7@Seek:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@Seek
$LN6@Seek:
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	0
?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ENDP	; NWindows::NFile::NIO::CFileBase::Seek
_TEXT	ENDS
PUBLIC	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_position$ = 8						; size = 8
_newPosition$ = 16					; size = 4
?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z PROC	; NWindows::NFile::NIO::CFileBase::Seek
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _newPosition$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _position$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _position$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
; Line 140
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ENDP	; NWindows::NFile::NIO::CFileBase::Seek
_TEXT	ENDS
PUBLIC	?SeekToBegin@CFileBase@NIO@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NIO::CFileBase::SeekToBegin
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newPosition$ = -16					; size = 8
_this$ = -4						; size = 4
?SeekToBegin@CFileBase@NIO@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NIO::CFileBase::SeekToBegin
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	lea	eax, DWORD PTR _newPosition$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
; Line 146
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SeekToBegi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@SeekToBegi:
	DD	1
	DD	$LN4@SeekToBegi
$LN4@SeekToBegi:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@SeekToBegi
$LN3@SeekToBegi:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?SeekToBegin@CFileBase@NIO@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NIO::CFileBase::SeekToBegin
_TEXT	ENDS
PUBLIC	?SeekToEnd@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ; NWindows::NFile::NIO::CFileBase::SeekToEnd
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newPosition$ = 8					; size = 4
?SeekToEnd@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z PROC ; NWindows::NFile::NIO::CFileBase::SeekToEnd
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _newPosition$[ebp]
	push	eax
	push	2
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
; Line 151
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SeekToEnd@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ENDP ; NWindows::NFile::NIO::CFileBase::SeekToEnd
_TEXT	ENDS
PUBLIC	?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read1
PUBLIC	?CorrectDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXXZ ; NWindows::NFile::NIO::CInFile::CorrectDeviceSize
EXTRN	_MidFree@4:PROC
EXTRN	_MidAlloc@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_processed$67587 = -56					; size = 4
_processed$67575 = -44					; size = 4
_needbackward$ = -33					; size = 1
_buf$ = -32						; size = 4
_realNewPosition$ = -24					; size = 8
_pos$ = -12						; size = 8
_this$ = -4						; size = 4
?CorrectDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXXZ PROC ; NWindows::NFile::NIO::CInFile::CorrectDeviceSize
; _this$ = ecx
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -16384				; ffffc000H
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _pos$[ebp], ecx
	mov	DWORD PTR _pos$[ebp+4], edx
; Line 163
	lea	eax, DWORD PTR _realNewPosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN15@CorrectDev
; Line 164
	jmp	$LN16@CorrectDev
$LN15@CorrectDev:
; Line 165
	push	16384					; 00004000H
	call	_MidAlloc@4
	mov	DWORD PTR _buf$[ebp], eax
; Line 167
	mov	BYTE PTR _needbackward$[ebp], 1
$LN14@CorrectDev:
; Line 171
	mov	DWORD PTR _processed$67575[ebp], 0
; Line 174
	lea	ecx, DWORD PTR _processed$67575[ebp]
	push	ecx
	push	16384					; 00004000H
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read1
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN12@CorrectDev
; Line 175
	jmp	SHORT $LN13@CorrectDev
$LN12@CorrectDev:
; Line 176
	cmp	DWORD PTR _processed$67575[ebp], 0
	jne	SHORT $LN11@CorrectDev
; Line 177
	jmp	SHORT $LN13@CorrectDev
$LN11@CorrectDev:
; Line 178
	mov	BYTE PTR _needbackward$[ebp], 0
; Line 179
	mov	ecx, DWORD PTR _processed$67575[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _pos$[ebp]
	adc	edx, DWORD PTR _pos$[ebp+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
; Line 180
	cmp	DWORD PTR _processed$67575[ebp], 16384	; 00004000H
	je	SHORT $LN10@CorrectDev
; Line 181
	jmp	SHORT $LN13@CorrectDev
$LN10@CorrectDev:
; Line 182
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, 16384				; 00004000H
	mov	edx, DWORD PTR _pos$[ebp+4]
	adc	edx, 0
	mov	DWORD PTR _pos$[ebp], ecx
	mov	DWORD PTR _pos$[ebp+4], edx
; Line 183
	jmp	SHORT $LN14@CorrectDev
$LN13@CorrectDev:
; Line 185
	movzx	eax, BYTE PTR _needbackward$[ebp]
	test	eax, eax
	je	$LN9@CorrectDev
	mov	ecx, DWORD PTR _pos$[ebp]
	or	ecx, DWORD PTR _pos$[ebp+4]
	je	$LN9@CorrectDev
; Line 187
	mov	edx, DWORD PTR _pos$[ebp]
	sub	edx, 16384				; 00004000H
	mov	eax, DWORD PTR _pos$[ebp+4]
	sbb	eax, 0
	mov	DWORD PTR _pos$[ebp], edx
	mov	DWORD PTR _pos$[ebp+4], eax
$LN8@CorrectDev:
; Line 191
	lea	ecx, DWORD PTR _realNewPosition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@CorrectDev
; Line 192
	jmp	SHORT $LN9@CorrectDev
$LN6@CorrectDev:
; Line 193
	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN5@CorrectDev
; Line 195
	push	16384					; 00004000H
	call	_MidAlloc@4
	mov	DWORD PTR _buf$[ebp], eax
; Line 196
	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN5@CorrectDev
; Line 197
	jmp	SHORT $LN9@CorrectDev
$LN5@CorrectDev:
; Line 199
	mov	DWORD PTR _processed$67587[ebp], 0
; Line 201
	lea	edx, DWORD PTR _processed$67587[ebp]
	push	edx
	push	16384					; 00004000H
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read1
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@CorrectDev
; Line 202
	jmp	SHORT $LN9@CorrectDev
$LN3@CorrectDev:
; Line 203
	cmp	DWORD PTR _processed$67587[ebp], 0
	je	SHORT $LN2@CorrectDev
; Line 205
	mov	edx, DWORD PTR _processed$67587[ebp]
	xor	eax, eax
	add	edx, DWORD PTR _pos$[ebp]
	adc	eax, DWORD PTR _pos$[ebp+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+12], eax
; Line 206
	jmp	SHORT $LN9@CorrectDev
$LN2@CorrectDev:
; Line 208
	mov	edx, DWORD PTR _pos$[ebp]
	or	edx, DWORD PTR _pos$[ebp+4]
	jne	SHORT $LN1@CorrectDev
; Line 209
	jmp	SHORT $LN9@CorrectDev
$LN1@CorrectDev:
; Line 210
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 16384				; 00004000H
	mov	ecx, DWORD PTR _pos$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR _pos$[ebp], eax
	mov	DWORD PTR _pos$[ebp+4], ecx
; Line 211
	jmp	$LN8@CorrectDev
$LN9@CorrectDev:
; Line 213
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_MidFree@4
$LN16@CorrectDev:
; Line 214
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@CorrectDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@CorrectDev:
	DD	3
	DD	$LN21@CorrectDev
$LN21@CorrectDev:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN18@CorrectDev
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN19@CorrectDev
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN20@CorrectDev
$LN20@CorrectDev:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN19@CorrectDev:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN18@CorrectDev:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?CorrectDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXXZ ENDP ; NWindows::NFile::NIO::CInFile::CorrectDeviceSize
_TEXT	ENDS
PUBLIC	?GetCdRomGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z ; NWindows::NFile::NIO::CInFile::GetCdRomGeometry
PUBLIC	?GetGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z ; NWindows::NFile::NIO::CInFile::GetGeometry
PUBLIC	?GetGeometryEx@CInFile@NIO@NFile@NWindows@@ABE_NPAUmy_DISK_GEOMETRY_EX@234@@Z ; NWindows::NFile::NIO::CInFile::GetGeometryEx
PUBLIC	?GetPartitionInfo@CInFile@NIO@NFile@NWindows@@AAE_NPAU_PARTITION_INFORMATION@@@Z ; NWindows::NFile::NIO::CInFile::GetPartitionInfo
PUBLIC	__$ArrayPad$
PUBLIC	?CalcDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXPB_W@Z ; NWindows::NFile::NIO::CInFile::CalcDeviceSize
EXTRN	?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z:PROC ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv382 = -200						; size = 4
_geom$67613 = -192					; size = 24
_geomEx$67610 = -160					; size = 40
_freeSize$67606 = -112					; size = 8
_totalSize$67605 = -96					; size = 8
_clusterSize$67604 = -80				; size = 8
_path$67603 = -64					; size = 8
_needCorrectSize$ = -49					; size = 1
_partInfo$ = -44					; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
?CalcDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXPB_W@Z PROC ; NWindows::NFile::NIO::CInFile::CalcDeviceSize
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 0
; Line 220
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
; Line 221
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], -1
	je	SHORT $LN11@CalcDevice
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN12@CalcDevice
$LN11@CalcDevice:
; Line 222
	jmp	$LN13@CalcDevice
$LN12@CalcDevice:
; Line 231
	mov	BYTE PTR _needCorrectSize$[ebp], 1
; Line 259
	lea	edx, DWORD PTR _partInfo$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPartitionInfo@CInFile@NIO@NFile@NWindows@@AAE_NPAU_PARTITION_INFORMATION@@@Z ; NWindows::NFile::NIO::CInFile::GetPartitionInfo
	movzx	eax, al
	test	eax, eax
	je	$LN10@CalcDevice
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _partInfo$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _partInfo$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
; Line 262
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+5], 1
; Line 263
	mov	BYTE PTR _needCorrectSize$[ebp], 0
; Line 264
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 92					; 0000005cH
	jne	$LN10@CalcDevice
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	jne	$LN10@CalcDevice
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN10@CalcDevice
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+6]
	cmp	eax, 92					; 0000005cH
	jne	SHORT $LN10@CalcDevice
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+10]
	cmp	edx, 58					; 0000003aH
	jne	SHORT $LN10@CalcDevice
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN10@CalcDevice
; Line 266
	mov	edx, DWORD PTR _s$[ebp]
	mov	ax, WORD PTR [edx+8]
	mov	WORD PTR _path$67603[ebp], ax
	mov	ecx, 58					; 0000003aH
	mov	WORD PTR _path$67603[ebp+2], cx
	mov	edx, 92					; 0000005cH
	mov	WORD PTR _path$67603[ebp+4], dx
	xor	eax, eax
	mov	WORD PTR _path$67603[ebp+6], ax
; Line 268
	lea	ecx, DWORD PTR _freeSize$67606[ebp]
	push	ecx
	lea	edx, DWORD PTR _totalSize$67605[ebp]
	push	edx
	lea	eax, DWORD PTR _clusterSize$67604[ebp]
	push	eax
	lea	ecx, DWORD PTR _path$67603[ebp]
	push	ecx
	call	?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@CalcDevice
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _totalSize$67605[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _totalSize$67605[ebp+4]
	mov	DWORD PTR [eax+12], edx
; Line 270
	jmp	SHORT $LN10@CalcDevice
$LN8@CalcDevice:
; Line 271
	mov	BYTE PTR _needCorrectSize$[ebp], 1
$LN10@CalcDevice:
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	jne	$LN6@CalcDevice
; Line 278
	lea	edx, DWORD PTR _geomEx$67610[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGeometryEx@CInFile@NIO@NFile@NWindows@@ABE_NPAUmy_DISK_GEOMETRY_EX@234@@Z ; NWindows::NFile::NIO::CInFile::GetGeometryEx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+5], al
; Line 279
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	test	eax, eax
	je	SHORT $LN5@CalcDevice
; Line 280
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _geomEx$67610[ebp+24]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _geomEx$67610[ebp+28]
	mov	DWORD PTR [ecx+12], eax
; Line 281
	jmp	$LN6@CalcDevice
$LN5@CalcDevice:
; Line 284
	lea	ecx, DWORD PTR _geom$67613[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z ; NWindows::NFile::NIO::CInFile::GetGeometry
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+5], al
; Line 285
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	jne	SHORT $LN3@CalcDevice
; Line 286
	lea	edx, DWORD PTR _geom$67613[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCdRomGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z ; NWindows::NFile::NIO::CInFile::GetCdRomGeometry
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+5], al
$LN3@CalcDevice:
; Line 287
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	test	eax, eax
	je	SHORT $LN6@CalcDevice
; Line 288
	mov	ecx, DWORD PTR _geom$67613[ebp+12]
	xor	edx, edx
	push	edx
	push	ecx
	mov	eax, DWORD PTR _geom$67613[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _geom$67613[ebp]
	push	ecx
	call	__allmul
	mov	ecx, DWORD PTR _geom$67613[ebp+16]
	xor	esi, esi
	push	esi
	push	ecx
	push	edx
	push	eax
	call	__allmul
	mov	ecx, DWORD PTR _geom$67613[ebp+20]
	xor	esi, esi
	push	esi
	push	ecx
	push	edx
	push	eax
	call	__allmul
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx
$LN6@CalcDevice:
; Line 292
	movzx	edx, BYTE PTR _needCorrectSize$[ebp]
	test	edx, edx
	je	SHORT $LN13@CalcDevice
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN13@CalcDevice
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv382[ebp], edx
	mov	eax, DWORD PTR tv382[ebp]
	mov	ecx, DWORD PTR tv382[ebp]
	mov	edx, DWORD PTR [eax+8]
	or	edx, DWORD PTR [ecx+12]
	je	SHORT $LN13@CalcDevice
; Line 294
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CorrectDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXXZ ; NWindows::NFile::NIO::CInFile::CorrectDeviceSize
; Line 295
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SeekToBegin@CFileBase@NIO@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NIO::CFileBase::SeekToBegin
$LN13@CalcDevice:
; Line 300
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@CalcDevice
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN23@CalcDevice:
	DD	7
	DD	$LN22@CalcDevice
$LN22@CalcDevice:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN15@CalcDevice
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN16@CalcDevice
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN17@CalcDevice
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN18@CalcDevice
	DD	-112					; ffffff90H
	DD	8
	DD	$LN19@CalcDevice
	DD	-160					; ffffff60H
	DD	40					; 00000028H
	DD	$LN20@CalcDevice
	DD	-192					; ffffff40H
	DD	24					; 00000018H
	DD	$LN21@CalcDevice
$LN21@CalcDevice:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN20@CalcDevice:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	0
$LN19@CalcDevice:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN18@CalcDevice:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN17@CalcDevice:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN16@CalcDevice:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN15@CalcDevice:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?CalcDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXPB_W@Z ENDP ; NWindows::NFile::NIO::CInFile::CalcDeviceSize
_TEXT	ENDS
PUBLIC	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
?GetGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z PROC ; NWindows::NFile::NIO::CInFile::GetGeometry, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 145
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	24					; 00000018H
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	push	458752					; 00070000H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z ENDP ; NWindows::NFile::NIO::CInFile::GetGeometry
_TEXT	ENDS
PUBLIC	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z
_TEXT	SEGMENT
_bytesReturned$ = -12					; size = 4
_this$ = -4						; size = 4
_controlCode$ = 8					; size = 4
_outBuffer$ = 12					; size = 4
_outSize$ = 16						; size = 4
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z PROC ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	lea	eax, DWORD PTR _bytesReturned$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _controlCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DeviceIoCo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@DeviceIoCo:
	DD	1
	DD	$LN4@DeviceIoCo
$LN4@DeviceIoCo:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@DeviceIoCo
$LN3@DeviceIoCo:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z ENDP ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
_TEXT	ENDS
PUBLIC	?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_controlCode$ = 8					; size = 4
_outBuffer$ = 12					; size = 4
_outSize$ = 16						; size = 4
_bytesReturned$ = 20					; size = 4
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z PROC ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	push	0
	mov	eax, DWORD PTR _bytesReturned$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outBuffer$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _controlCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
; Line 82
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z ENDP ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
_TEXT	ENDS
PUBLIC	?BOOLToBool@@YG_NH@Z				; BOOLToBool
EXTRN	__imp__DeviceIoControl@32:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_controlCode$ = 8					; size = 4
_inBuffer$ = 12						; size = 4
_inSize$ = 16						; size = 4
_outBuffer$ = 20					; size = 4
_outSize$ = 24						; size = 4
_bytesReturned$ = 28					; size = 4
_overlapped$ = 32					; size = 4
?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z PROC ; NWindows::NFile::NIO::CFileBase::DeviceIoControl, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	esi, esp
	mov	eax, DWORD PTR _overlapped$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bytesReturned$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _controlCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__DeviceIoControl@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
; Line 77
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ENDP ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?BOOLToBool@@YG_NH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
?BOOLToBool@@YG_NH@Z PROC				; BOOLToBool, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\defs.h
; Line 10
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	cmp	DWORD PTR _v$[ebp], 0
	setne	al
	pop	ebp
	ret	4
?BOOLToBool@@YG_NH@Z ENDP				; BOOLToBool
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetGeometryEx@CInFile@NIO@NFile@NWindows@@ABE_NPAUmy_DISK_GEOMETRY_EX@234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
?GetGeometryEx@CInFile@NIO@NFile@NWindows@@ABE_NPAUmy_DISK_GEOMETRY_EX@234@@Z PROC ; NWindows::NFile::NIO::CInFile::GetGeometryEx, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	40					; 00000028H
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	push	458912					; 000700a0H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetGeometryEx@CInFile@NIO@NFile@NWindows@@ABE_NPAUmy_DISK_GEOMETRY_EX@234@@Z ENDP ; NWindows::NFile::NIO::CInFile::GetGeometryEx
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCdRomGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
?GetCdRomGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z PROC ; NWindows::NFile::NIO::CInFile::GetCdRomGeometry, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	24					; 00000018H
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	push	147532					; 0002404cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetCdRomGeometry@CInFile@NIO@NFile@NWindows@@ABE_NPAU_DISK_GEOMETRY@@@Z ENDP ; NWindows::NFile::NIO::CInFile::GetCdRomGeometry
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetPartitionInfo@CInFile@NIO@NFile@NWindows@@AAE_NPAU_PARTITION_INFORMATION@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_res$ = 8						; size = 4
?GetPartitionInfo@CInFile@NIO@NFile@NWindows@@AAE_NPAU_PARTITION_INFORMATION@@@Z PROC ; NWindows::NFile::NIO::CInFile::GetPartitionInfo, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	32					; 00000020H
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	push	475140					; 00074004H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPartitionInfo@CInFile@NIO@NFile@NWindows@@AAE_NPAU_PARTITION_INFORMATION@@@Z ENDP ; NWindows::NFile::NIO::CInFile::GetPartitionInfo
_TEXT	ENDS
PUBLIC	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::CInFile::Open
EXTRN	?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDevicePath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -5						; size = 1
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_shareMode$ = 12					; size = 4
_creationDisposition$ = 16				; size = 4
_flagsAndAttributes$ = 20				; size = 4
?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z PROC	; NWindows::NFile::NIO::CInFile::Open
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.cpp
; Line 312
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 313
	mov	eax, DWORD PTR _flagsAndAttributes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _creationDisposition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _shareMode$[ebp]
	push	edx
	push	-2147483648				; 80000000H
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z ; NWindows::NFile::NIO::CFileBase::Create
	mov	BYTE PTR _res$[ebp], al
; Line 314
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDevicePath
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], al
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CalcDeviceSize@CInFile@NIO@NFile@NWindows@@AAEXPB_W@Z ; NWindows::NFile::NIO::CInFile::CalcDeviceSize
; Line 315
	mov	al, BYTE PTR _res$[ebp]
; Line 316
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ENDP	; NWindows::NFile::NIO::CInFile::Open
_TEXT	ENDS
PUBLIC	?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::CInFile::OpenShared
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_shareForWrite$ = 12					; size = 1
?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z PROC ; NWindows::NFile::NIO::CInFile::OpenShared
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	128					; 00000080H
	push	3
	movzx	eax, BYTE PTR _shareForWrite$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 2
	or	eax, 1
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::CInFile::Open
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ENDP ; NWindows::NFile::NIO::CInFile::OpenShared
_TEXT	ENDS
PUBLIC	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z	; NWindows::NFile::NIO::CInFile::Open
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z PROC	; NWindows::NFile::NIO::CInFile::Open
; _this$ = ecx
; Line 322
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::CInFile::OpenShared
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ENDP	; NWindows::NFile::NIO::CInFile::Open
_TEXT	ENDS
EXTRN	__imp__ReadFile@20:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -17						; size = 1
_processedLoc$ = -12					; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_processedSize$ = 16					; size = 4
?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z PROC	; NWindows::NFile::NIO::CInFile::Read1
; _this$ = ecx
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 337
	mov	DWORD PTR _processedLoc$[ebp], 0
; Line 338
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _processedLoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ReadFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	mov	BYTE PTR _res$[ebp], al
; Line 339
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR _processedLoc$[ebp]
	mov	DWORD PTR [edx], eax
; Line 340
	mov	al, BYTE PTR _res$[ebp]
; Line 341
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Read1
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN5@Read1:
	DD	1
	DD	$LN4@Read1
$LN4@Read1:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Read1
$LN3@Read1:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ENDP	; NWindows::NFile::NIO::CInFile::Read1
_TEXT	ENDS
PUBLIC	?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::ReadPart
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_processedSize$ = 16					; size = 4
?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z PROC ; NWindows::NFile::NIO::CInFile::ReadPart
; _this$ = ecx
; Line 344
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 345
	mov	eax, DWORD PTR _size$[ebp]
	cmp	eax, DWORD PTR _kChunkSizeMax
	jbe	SHORT $LN1@ReadPart
; Line 346
	mov	ecx, DWORD PTR _kChunkSizeMax
	mov	DWORD PTR _size$[ebp], ecx
$LN1@ReadPart:
; Line 347
	mov	edx, DWORD PTR _processedSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read1
; Line 348
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ENDP ; NWindows::NFile::NIO::CInFile::ReadPart
_TEXT	ENDS
PUBLIC	?Read@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$67661 = -17					; size = 1
_processedLoc$67660 = -12				; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_processedSize$ = 16					; size = 4
?Read@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z PROC	; NWindows::NFile::NIO::CInFile::Read
; _this$ = ecx
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 352
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Read:
; Line 355
	mov	DWORD PTR _processedLoc$67660[ebp], 0
; Line 356
	lea	ecx, DWORD PTR _processedLoc$67660[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::ReadPart
	mov	BYTE PTR _res$67661[ebp], al
; Line 357
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _processedLoc$67660[ebp]
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], edx
; Line 358
	movzx	ecx, BYTE PTR _res$67661[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Read
; Line 359
	xor	al, al
	jmp	SHORT $LN6@Read
$LN2@Read:
; Line 360
	cmp	DWORD PTR _processedLoc$67660[ebp], 0
	jne	SHORT $LN1@Read
; Line 361
	mov	al, 1
	jmp	SHORT $LN6@Read
$LN1@Read:
; Line 362
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _processedLoc$67660[ebp]
	mov	DWORD PTR _data$[ebp], edx
; Line 363
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, DWORD PTR _processedLoc$67660[ebp]
	mov	DWORD PTR _size$[ebp], eax
; Line 365
	jne	SHORT $LN5@Read
; Line 366
	mov	al, 1
$LN6@Read:
; Line 367
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@Read:
	DD	1
	DD	$LN9@Read
$LN9@Read:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Read
$LN8@Read:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
?Read@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ENDP	; NWindows::NFile::NIO::CInFile::Read
_TEXT	ENDS
PUBLIC	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::COutFile::Open
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_shareMode$ = 12					; size = 4
_creationDisposition$ = 16				; size = 4
_flagsAndAttributes$ = 20				; size = 4
?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z PROC	; NWindows::NFile::NIO::COutFile::Open
; _this$ = ecx
; Line 375
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flagsAndAttributes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _creationDisposition$[ebp]
	push	ecx
	mov	edx, DWORD PTR _shareMode$[ebp]
	push	edx
	push	1073741824				; 40000000H
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CFileBase@NIO@NFile@NWindows@@IAE_NPB_WKKKK@Z ; NWindows::NFile::NIO::CFileBase::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ENDP	; NWindows::NFile::NIO::COutFile::Open
_TEXT	ENDS
PUBLIC	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z	; NWindows::NFile::NIO::COutFile::Open
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_creationDisposition$ = 12				; size = 4
?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z PROC	; NWindows::NFile::NIO::COutFile::Open
; _this$ = ecx
; Line 378
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	128					; 00000080H
	mov	eax, DWORD PTR _creationDisposition$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::COutFile::Open
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z ENDP	; NWindows::NFile::NIO::COutFile::Open
_TEXT	ENDS
PUBLIC	?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::COutFile::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_createAlways$ = 12					; size = 1
?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z PROC	; NWindows::NFile::NIO::COutFile::Create
; _this$ = ecx
; Line 381
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _createAlways$[ebp]
	push	eax
	call	?GetCreationDisposition@NIO@NFile@NWindows@@YGK_N@Z ; NWindows::NFile::NIO::GetCreationDisposition
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z ; NWindows::NFile::NIO::COutFile::Open
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ENDP	; NWindows::NFile::NIO::COutFile::Create
; Function compile flags: /Odtp /RTCsu
_createAlways$ = 8					; size = 1
?GetCreationDisposition@NIO@NFile@NWindows@@YGK_N@Z PROC ; NWindows::NFile::NIO::GetCreationDisposition
; Line 372
	push	ebp
	mov	ebp, esp
	movzx	eax, BYTE PTR _createAlways$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 1
	pop	ebp
	ret	4
?GetCreationDisposition@NIO@NFile@NWindows@@YGK_N@Z ENDP ; NWindows::NFile::NIO::GetCreationDisposition
_TEXT	ENDS
PUBLIC	?CreateAlways@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z ; NWindows::NFile::NIO::COutFile::CreateAlways
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_flagsAndAttributes$ = 12				; size = 4
?CreateAlways@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z PROC ; NWindows::NFile::NIO::COutFile::CreateAlways
; _this$ = ecx
; Line 384
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _flagsAndAttributes$[ebp]
	push	eax
	push	1
	call	?GetCreationDisposition@NIO@NFile@NWindows@@YGK_N@Z ; NWindows::NFile::NIO::GetCreationDisposition
	push	eax
	push	1
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::COutFile::Open
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CreateAlways@COutFile@NIO@NFile@NWindows@@QAE_NPB_WK@Z ENDP ; NWindows::NFile::NIO::COutFile::CreateAlways
_TEXT	ENDS
PUBLIC	?SetTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@00@Z ; NWindows::NFile::NIO::COutFile::SetTime
EXTRN	__imp__SetFileTime@16:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cTime$ = 8						; size = 4
_aTime$ = 12						; size = 4
_mTime$ = 16						; size = 4
?SetTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@00@Z PROC ; NWindows::NFile::NIO::COutFile::SetTime
; _this$ = ecx
; Line 387
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _mTime$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cTime$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetFileTime@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@00@Z ENDP ; NWindows::NFile::NIO::COutFile::SetTime
_TEXT	ENDS
PUBLIC	?SetMTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@@Z ; NWindows::NFile::NIO::COutFile::SetMTime
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mTime$ = 8						; size = 4
?SetMTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@@Z PROC ; NWindows::NFile::NIO::COutFile::SetMTime
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _mTime$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@00@Z ; NWindows::NFile::NIO::COutFile::SetTime
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMTime@COutFile@NIO@NFile@NWindows@@QAE_NPBU_FILETIME@@@Z ENDP ; NWindows::NFile::NIO::COutFile::SetMTime
_TEXT	ENDS
PUBLIC	?WritePart@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z ; NWindows::NFile::NIO::COutFile::WritePart
EXTRN	__imp__WriteFile@20:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -17						; size = 1
_processedLoc$ = -12					; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_processedSize$ = 16					; size = 4
?WritePart@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z PROC ; NWindows::NFile::NIO::COutFile::WritePart
; _this$ = ecx
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 393
	mov	eax, DWORD PTR _size$[ebp]
	cmp	eax, DWORD PTR _kChunkSizeMax
	jbe	SHORT $LN1@WritePart
; Line 394
	mov	ecx, DWORD PTR _kChunkSizeMax
	mov	DWORD PTR _size$[ebp], ecx
$LN1@WritePart:
; Line 395
	mov	DWORD PTR _processedLoc$[ebp], 0
; Line 396
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _processedLoc$[ebp]
	push	edx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	mov	BYTE PTR _res$[ebp], al
; Line 397
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	edx, DWORD PTR _processedLoc$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 398
	mov	al, BYTE PTR _res$[ebp]
; Line 399
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@WritePart
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN6@WritePart:
	DD	1
	DD	$LN5@WritePart
$LN5@WritePart:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@WritePart
$LN4@WritePart:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
?WritePart@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z ENDP ; NWindows::NFile::NIO::COutFile::WritePart
_TEXT	ENDS
PUBLIC	?Write@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z ; NWindows::NFile::NIO::COutFile::Write
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$67721 = -17					; size = 1
_processedLoc$67720 = -12				; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_processedSize$ = 16					; size = 4
?Write@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z PROC	; NWindows::NFile::NIO::COutFile::Write
; _this$ = ecx
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 403
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Write:
; Line 406
	mov	DWORD PTR _processedLoc$67720[ebp], 0
; Line 407
	lea	ecx, DWORD PTR _processedLoc$67720[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WritePart@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z ; NWindows::NFile::NIO::COutFile::WritePart
	mov	BYTE PTR _res$67721[ebp], al
; Line 408
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _processedLoc$67720[ebp]
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], edx
; Line 409
	movzx	ecx, BYTE PTR _res$67721[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@Write
; Line 410
	xor	al, al
	jmp	SHORT $LN6@Write
$LN2@Write:
; Line 411
	cmp	DWORD PTR _processedLoc$67720[ebp], 0
	jne	SHORT $LN1@Write
; Line 412
	mov	al, 1
	jmp	SHORT $LN6@Write
$LN1@Write:
; Line 413
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _processedLoc$67720[ebp]
	mov	DWORD PTR _data$[ebp], edx
; Line 414
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, DWORD PTR _processedLoc$67720[ebp]
	mov	DWORD PTR _size$[ebp], eax
; Line 416
	jne	SHORT $LN5@Write
; Line 417
	mov	al, 1
$LN6@Write:
; Line 418
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Write
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@Write:
	DD	1
	DD	$LN9@Write
$LN9@Write:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Write
$LN8@Write:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
?Write@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z ENDP	; NWindows::NFile::NIO::COutFile::Write
_TEXT	ENDS
PUBLIC	?SetEndOfFile@COutFile@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::COutFile::SetEndOfFile
EXTRN	__imp__SetEndOfFile@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetEndOfFile@COutFile@NIO@NFile@NWindows@@QAE_NXZ PROC	; NWindows::NFile::NIO::COutFile::SetEndOfFile
; _this$ = ecx
; Line 420
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetEndOfFile@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SetEndOfFile@COutFile@NIO@NFile@NWindows@@QAE_NXZ ENDP	; NWindows::NFile::NIO::COutFile::SetEndOfFile
_TEXT	ENDS
PUBLIC	?SetLength@COutFile@NIO@NFile@NWindows@@QAE_N_K@Z ; NWindows::NFile::NIO::COutFile::SetLength
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_newPosition$ = -16					; size = 8
_this$ = -4						; size = 4
_length$ = 8						; size = 8
?SetLength@COutFile@NIO@NFile@NWindows@@QAE_N_K@Z PROC	; NWindows::NFile::NIO::COutFile::SetLength
; _this$ = ecx
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 425
	lea	eax, DWORD PTR _newPosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@SetLength
; Line 426
	xor	al, al
	jmp	SHORT $LN3@SetLength
$LN2@SetLength:
; Line 427
	mov	ecx, DWORD PTR _newPosition$[ebp]
	cmp	ecx, DWORD PTR _length$[ebp]
	jne	SHORT $LN5@SetLength
	mov	edx, DWORD PTR _newPosition$[ebp+4]
	cmp	edx, DWORD PTR _length$[ebp+4]
	je	SHORT $LN1@SetLength
$LN5@SetLength:
; Line 428
	xor	al, al
	jmp	SHORT $LN3@SetLength
$LN1@SetLength:
; Line 429
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetEndOfFile@COutFile@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::COutFile::SetEndOfFile
$LN3@SetLength:
; Line 430
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@SetLength
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@SetLength:
	DD	1
	DD	$LN7@SetLength
$LN7@SetLength:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN6@SetLength
$LN6@SetLength:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?SetLength@COutFile@NIO@NFile@NWindows@@QAE_N_K@Z ENDP	; NWindows::NFile::NIO::COutFile::SetLength
_TEXT	ENDS
END

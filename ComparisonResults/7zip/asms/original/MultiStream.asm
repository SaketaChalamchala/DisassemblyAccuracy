; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Common\MultiStream.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
PUBLIC	??A?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QAEAAUCSubStreamInfo@CMultiStream@@I@Z ; CObjectVector<CMultiStream::CSubStreamInfo>::operator[]
PUBLIC	?Size@?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QBEIXZ ; CObjectVector<CMultiStream::CSubStreamInfo>::Size
PUBLIC	?Read@CMultiStream@@UAGJPAXIPAI@Z		; CMultiStream::Read
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\multistream.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv156 = -92						; size = 4
tv277 = -88						; size = 8
tv135 = -80						; size = 4
tv249 = -76						; size = 4
tv220 = -72						; size = 8
tv219 = -64						; size = 4
tv199 = -60						; size = 4
tv198 = -56						; size = 4
tv179 = -52						; size = 4
tv178 = -48						; size = 4
_result$ = -44						; size = 4
_rem$ = -40						; size = 8
___result_$66477 = -32					; size = 4
_localPos$ = -28					; size = 8
_s$ = -20						; size = 4
_m$66469 = -16						; size = 4
_right$66465 = -12					; size = 4
_mid$66464 = -8						; size = 4
_left$66463 = -4					; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CMultiStream@@UAGJPAXIPAI@Z PROC			; CMultiStream::Read
; Line 8
	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 9
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN13@Read
; Line 10
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN13@Read:
; Line 11
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN12@Read
; Line 12
	xor	eax, eax
	jmp	$LN14@Read
$LN12@Read:
; Line 13
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv178[ebp], ecx
	mov	DWORD PTR tv179[ebp], edx
	mov	eax, DWORD PTR tv178[ebp]
	mov	ecx, DWORD PTR tv179[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+20]
	jb	SHORT $LN11@Read
	ja	SHORT $LN16@Read
	mov	eax, DWORD PTR tv178[ebp]
	mov	ecx, DWORD PTR tv179[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+16]
	jb	SHORT $LN11@Read
$LN16@Read:
; Line 14
	xor	eax, eax
	jmp	$LN14@Read
$LN11@Read:
; Line 17
	mov	DWORD PTR _left$66463[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _mid$66464[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Size@?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QBEIXZ ; CObjectVector<CMultiStream::CSubStreamInfo>::Size
	mov	DWORD PTR _right$66465[ebp], eax
$LN10@Read:
; Line 20
	mov	edx, DWORD PTR _mid$66464[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??A?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QAEAAUCSubStreamInfo@CMultiStream@@I@Z ; CObjectVector<CMultiStream::CSubStreamInfo>::operator[]
	mov	DWORD PTR _m$66469[ebp], eax
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _m$66469[ebp]
	mov	DWORD PTR tv198[ebp], eax
	mov	DWORD PTR tv199[ebp], ecx
	mov	edx, DWORD PTR tv198[ebp]
	mov	eax, DWORD PTR tv199[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+20]
	ja	SHORT $LN8@Read
	jb	SHORT $LN17@Read
	mov	edx, DWORD PTR tv198[ebp]
	mov	eax, DWORD PTR tv199[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+16]
	jae	SHORT $LN8@Read
$LN17@Read:
; Line 22
	mov	edx, DWORD PTR _mid$66464[ebp]
	mov	DWORD PTR _right$66465[ebp], edx
	jmp	SHORT $LN7@Read
$LN8@Read:
; Line 23
	mov	eax, DWORD PTR _m$66469[ebp]
	mov	ecx, DWORD PTR _m$66469[ebp]
	mov	edx, DWORD PTR [eax+16]
	add	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax+20]
	adc	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv219[ebp], ecx
	mov	DWORD PTR tv220[ebp], edx
	mov	DWORD PTR tv220[ebp+4], eax
	mov	edx, DWORD PTR tv219[ebp]
	mov	eax, DWORD PTR [edx+12]
	cmp	eax, DWORD PTR tv220[ebp+4]
	jb	SHORT $LN6@Read
	ja	SHORT $LN18@Read
	mov	ecx, DWORD PTR tv219[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR tv220[ebp]
	jb	SHORT $LN6@Read
$LN18@Read:
; Line 24
	mov	eax, DWORD PTR _mid$66464[ebp]
	add	eax, 1
	mov	DWORD PTR _left$66463[ebp], eax
; Line 25
	jmp	SHORT $LN7@Read
$LN6@Read:
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _mid$66464[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 28
	jmp	SHORT $LN9@Read
$LN7@Read:
; Line 30
	mov	eax, DWORD PTR _left$66463[ebp]
	add	eax, DWORD PTR _right$66465[ebp]
	shr	eax, 1
	mov	DWORD PTR _mid$66464[ebp], eax
; Line 31
	jmp	$LN10@Read
$LN9@Read:
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _mid$66464[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??A?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QAEAAUCSubStreamInfo@CMultiStream@@I@Z ; CObjectVector<CMultiStream::CSubStreamInfo>::operator[]
	mov	DWORD PTR _s$[ebp], eax
; Line 36
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [edx+12]
	sbb	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _localPos$[ebp], ecx
	mov	DWORD PTR _localPos$[ebp+4], edx
; Line 37
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR tv249[ebp], eax
	mov	ecx, DWORD PTR tv249[ebp]
	mov	edx, DWORD PTR _localPos$[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	jne	SHORT $LN19@Read
	mov	eax, DWORD PTR tv249[ebp]
	mov	ecx, DWORD PTR _localPos$[ebp+4]
	cmp	ecx, DWORD PTR [eax+28]
	je	SHORT $LN4@Read
$LN19@Read:
; Line 39
	mov	ecx, DWORD PTR _s$[ebp]
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv135[ebp], eax
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 24					; 00000018H
	mov	esi, esp
	push	edx
	push	0
	mov	eax, DWORD PTR _localPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _localPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv135[ebp]
	push	edx
	mov	eax, DWORD PTR tv135[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result_$66477[ebp], eax
	cmp	DWORD PTR ___result_$66477[ebp], 0
	je	SHORT $LN4@Read
	mov	eax, DWORD PTR ___result_$66477[ebp]
	jmp	$LN14@Read
$LN4@Read:
; Line 41
	mov	eax, DWORD PTR _s$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR _localPos$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sbb	edx, DWORD PTR _localPos$[ebp+4]
	mov	DWORD PTR _rem$[ebp], ecx
	mov	DWORD PTR _rem$[ebp+4], edx
; Line 42
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv277[ebp], eax
	mov	DWORD PTR tv277[ebp+4], ecx
	mov	edx, DWORD PTR tv277[ebp+4]
	cmp	edx, DWORD PTR _rem$[ebp+4]
	jb	SHORT $LN2@Read
	ja	SHORT $LN20@Read
	mov	eax, DWORD PTR tv277[ebp]
	cmp	eax, DWORD PTR _rem$[ebp]
	jbe	SHORT $LN2@Read
$LN20@Read:
; Line 43
	mov	ecx, DWORD PTR _rem$[ebp]
	mov	DWORD PTR _size$[ebp], ecx
$LN2@Read:
; Line 44
	mov	ecx, DWORD PTR _s$[ebp]
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv156[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv156[ebp]
	push	edx
	mov	eax, DWORD PTR tv156[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
	adc	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], ecx
; Line 46
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR [edx+24]
	adc	ecx, DWORD PTR [edx+28]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR [edx+28], ecx
; Line 47
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN1@Read
; Line 48
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@Read:
; Line 49
	mov	eax, DWORD PTR _result$[ebp]
$LN14@Read:
; Line 50
	pop	edi
	pop	esi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Read@CMultiStream@@UAGJPAXIPAI@Z ENDP			; CMultiStream::Read
_TEXT	ENDS
PUBLIC	?Seek@CMultiStream@@UAGJ_JIPA_K@Z		; CMultiStream::Seek
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -4						; size = 4
_this$ = 8						; size = 4
_offset$ = 12						; size = 8
_seekOrigin$ = 20					; size = 4
_newPosition$ = 24					; size = 4
?Seek@CMultiStream@@UAGJ_JIPA_K@Z PROC			; CMultiStream::Seek
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 54
	mov	eax, DWORD PTR _seekOrigin$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN6@Seek
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN5@Seek
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN4@Seek
	jmp	SHORT $LN3@Seek
$LN6@Seek:
; Line 56
	jmp	SHORT $LN7@Seek
$LN5@Seek:
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _offset$[ebp+4]
	adc	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _offset$[ebp], edx
	mov	DWORD PTR _offset$[ebp+4], eax
	jmp	SHORT $LN7@Seek
$LN4@Seek:
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	add	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _offset$[ebp+4]
	adc	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR _offset$[ebp], edx
	mov	DWORD PTR _offset$[ebp+4], eax
	jmp	SHORT $LN7@Seek
$LN3@Seek:
; Line 59
	mov	eax, -2147287039			; 80030001H
	jmp	SHORT $LN9@Seek
$LN7@Seek:
; Line 61
	cmp	DWORD PTR _offset$[ebp+4], 0
	jg	SHORT $LN2@Seek
	jl	SHORT $LN11@Seek
	cmp	DWORD PTR _offset$[ebp], 0
	jae	SHORT $LN2@Seek
$LN11@Seek:
; Line 62
	mov	eax, -2147024765			; 80070083H
	jmp	SHORT $LN9@Seek
$LN2@Seek:
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _offset$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; Line 64
	cmp	DWORD PTR _newPosition$[ebp], 0
	je	SHORT $LN1@Seek
; Line 65
	mov	ecx, DWORD PTR _newPosition$[ebp]
	mov	edx, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _offset$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN1@Seek:
; Line 66
	xor	eax, eax
$LN9@Seek:
; Line 67
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Seek@CMultiStream@@UAGJ_JIPA_K@Z ENDP			; CMultiStream::Seek
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator->, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator->
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QBEIXZ PROC ; CObjectVector<CMultiStream::CSubStreamInfo>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QBEIXZ ENDP ; CObjectVector<CMultiStream::CSubStreamInfo>::Size
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QAEAAUCSubStreamInfo@CMultiStream@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QAEAAUCSubStreamInfo@CMultiStream@@I@Z PROC ; CObjectVector<CMultiStream::CSubStreamInfo>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCSubStreamInfo@CMultiStream@@@@QAEAAUCSubStreamInfo@CMultiStream@@I@Z ENDP ; CObjectVector<CMultiStream::CSubStreamInfo>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
END

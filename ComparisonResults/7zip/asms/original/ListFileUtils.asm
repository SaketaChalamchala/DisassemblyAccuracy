; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Common\ListFileUtils.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	?ReleaseBuf_CalcLen@AString@@QAEXI@Z		; AString::ReleaseBuf_CalcLen
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?GetBuf@AString@@QAEPADI@Z			; AString::GetBuf
PUBLIC	?ReleaseBuf_SetLen@UString@@QAEXI@Z		; UString::ReleaseBuf_SetLen
PUBLIC	?GetBuf@UString@@QAEPA_WI@Z			; UString::GetBuf
PUBLIC	??1?$CObjArray@E@@QAE@XZ			; CObjArray<unsigned char>::~CObjArray<unsigned char>
PUBLIC	??B?$CObjArray@E@@QAEPAEXZ			; CObjArray<unsigned char>::operator unsigned char *
PUBLIC	??0?$CObjArray@E@@QAE@I@Z			; CObjArray<unsigned char>::CObjArray<unsigned char>
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??1CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::~CInFile
PUBLIC	??0CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::CInFile
PUBLIC	?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z ; ReadNamesFromListFile
EXTRN	?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z:PROC ; MultiByteToUnicodeString2
EXTRN	?ConvertUTF8ToUnicode@@YG_NABVAString@@AAVUString@@@Z:PROC ; ConvertUTF8ToUnicode
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
EXTRN	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ:PROC ; NWindows::NFile::NIO::CFileBase::Close
EXTRN	?Read@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z:PROC ; NWindows::NFile::NIO::CInFile::Read
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z:PROC ; NWindows::NFile::NIO::CFileBase::GetLength
EXTRN	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NIO::CInFile::Open
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__ehfuncinfo$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$4
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\common\listfileutils.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv387 = -232						; size = 8
tv347 = -224						; size = 8
tv334 = -216						; size = 8
$T67841 = -206						; size = 1
$T67840 = -205						; size = 1
$T67839 = -204						; size = 1
$T67838 = -203						; size = 1
$T67837 = -202						; size = 1
$T67836 = -201						; size = 1
$T67835 = -200						; size = 1
$T67834 = -199						; size = 1
$T67833 = -198						; size = 1
$T67832 = -197						; size = 1
$T67831 = -196						; size = 1
$T67830 = -195						; size = 1
$T67829 = -194						; size = 1
$T67828 = -193						; size = 1
_c$67743 = -192						; size = 2
_i$ = -188						; size = 4
_s$ = -180						; size = 12
_kBadBOM$ = -164					; size = 2
_kGoodBOM$ = -160					; size = 2
_processed$67720 = -152					; size = 4
_p$67718 = -144						; size = 4
_s$67717 = -136						; size = 12
_c$67708 = -120						; size = 2
_i$67704 = -116						; size = 4
_c$67698 = -112						; size = 2
_i$67694 = -108						; size = 4
_p$67692 = -104						; size = 4
_num$67690 = -100					; size = 4
_processed$67684 = -92					; size = 4
_buf$67683 = -80					; size = 4
_u$ = -68						; size = 12
_fileSize$ = -48					; size = 8
_file$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_fileName$ = 8						; size = 4
_strings$ = 12						; size = 4
_codePage$ = 16						; size = 4
?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z PROC ; ReadNamesFromListFile
; Line 29
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 30
	lea	ecx, DWORD PTR _file$[ebp]
	call	??0CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 31
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::Open
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN36@ReadNamesF
; Line 32
	mov	BYTE PTR $T67828[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67828[ebp]
	jmp	$LN37@ReadNamesF
$LN36@ReadNamesF:
; Line 34
	lea	edx, DWORD PTR _fileSize$[ebp]
	push	edx
	lea	ecx, DWORD PTR _file$[ebp]
	call	?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ; NWindows::NFile::NIO::CFileBase::GetLength
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN35@ReadNamesF
; Line 35
	mov	BYTE PTR $T67829[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67829[ebp]
	jmp	$LN37@ReadNamesF
$LN35@ReadNamesF:
; Line 36
	cmp	DWORD PTR _fileSize$[ebp+4], 0
	ja	SHORT $LN44@ReadNamesF
	cmp	DWORD PTR _fileSize$[ebp], 2147483616	; 7fffffe0H
	jb	SHORT $LN34@ReadNamesF
$LN44@ReadNamesF:
; Line 37
	mov	BYTE PTR $T67830[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67830[ebp]
	jmp	$LN37@ReadNamesF
$LN34@ReadNamesF:
; Line 38
	lea	ecx, DWORD PTR _u$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 39
	cmp	DWORD PTR _codePage$[ebp], 1200		; 000004b0H
	je	SHORT $LN32@ReadNamesF
	cmp	DWORD PTR _codePage$[ebp], 1201		; 000004b1H
	jne	$LN33@ReadNamesF
$LN32@ReadNamesF:
; Line 41
	mov	ecx, DWORD PTR _fileSize$[ebp]
	and	ecx, 1
	mov	edx, DWORD PTR _fileSize$[ebp+4]
	and	edx, 0
	mov	DWORD PTR tv334[ebp], ecx
	mov	DWORD PTR tv334[ebp+4], edx
	mov	eax, DWORD PTR tv334[ebp]
	or	eax, DWORD PTR tv334[ebp+4]
	je	SHORT $LN31@ReadNamesF
; Line 42
	mov	BYTE PTR $T67831[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67831[ebp]
	jmp	$LN37@ReadNamesF
$LN31@ReadNamesF:
; Line 43
	mov	ecx, DWORD PTR _fileSize$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??0?$CObjArray@E@@QAE@I@Z		; CObjArray<unsigned char>::CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 45
	lea	edx, DWORD PTR _processed$67684[ebp]
	push	edx
	mov	eax, DWORD PTR _fileSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	?Read@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN30@ReadNamesF
; Line 46
	mov	BYTE PTR $T67832[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67832[ebp]
	jmp	$LN37@ReadNamesF
$LN30@ReadNamesF:
; Line 47
	mov	edx, DWORD PTR _processed$67684[ebp]
	xor	eax, eax
	mov	DWORD PTR tv347[ebp], edx
	mov	DWORD PTR tv347[ebp+4], eax
	mov	ecx, DWORD PTR tv347[ebp]
	cmp	ecx, DWORD PTR _fileSize$[ebp]
	jne	SHORT $LN45@ReadNamesF
	mov	edx, DWORD PTR tv347[ebp+4]
	cmp	edx, DWORD PTR _fileSize$[ebp+4]
	je	SHORT $LN29@ReadNamesF
$LN45@ReadNamesF:
; Line 48
	mov	BYTE PTR $T67833[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67833[ebp]
	jmp	$LN37@ReadNamesF
$LN29@ReadNamesF:
; Line 49
	lea	ecx, DWORD PTR _file$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
; Line 50
	mov	eax, DWORD PTR _fileSize$[ebp]
	shr	eax, 1
	mov	DWORD PTR _num$67690[ebp], eax
; Line 51
	mov	ecx, DWORD PTR _num$67690[ebp]
	push	ecx
	lea	ecx, DWORD PTR _u$[ebp]
	call	?GetBuf@UString@@QAEPA_WI@Z		; UString::GetBuf
	mov	DWORD PTR _p$67692[ebp], eax
; Line 52
	cmp	DWORD PTR _codePage$[ebp], 1200		; 000004b0H
	jne	$LN28@ReadNamesF
; Line 53
	mov	DWORD PTR _i$67694[ebp], 0
	jmp	SHORT $LN27@ReadNamesF
$LN26@ReadNamesF:
	mov	edx, DWORD PTR _i$67694[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67694[ebp], edx
$LN27@ReadNamesF:
	mov	eax, DWORD PTR _i$67694[ebp]
	cmp	eax, DWORD PTR _num$67690[ebp]
	jae	SHORT $LN25@ReadNamesF
; Line 55
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	mov	ecx, DWORD PTR _i$67694[ebp]
	mov	dx, WORD PTR [eax+ecx*2]
	mov	WORD PTR _c$67698[ebp], dx
; Line 56
	movzx	eax, WORD PTR _c$67698[ebp]
	test	eax, eax
	jne	SHORT $LN24@ReadNamesF
; Line 57
	mov	BYTE PTR $T67834[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67834[ebp]
	jmp	$LN37@ReadNamesF
$LN24@ReadNamesF:
; Line 58
	mov	ecx, DWORD PTR _i$67694[ebp]
	mov	edx, DWORD PTR _p$67692[ebp]
	mov	ax, WORD PTR _c$67698[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 59
	jmp	SHORT $LN26@ReadNamesF
$LN25@ReadNamesF:
	jmp	$LN23@ReadNamesF
$LN28@ReadNamesF:
; Line 61
	mov	DWORD PTR _i$67704[ebp], 0
	jmp	SHORT $LN22@ReadNamesF
$LN21@ReadNamesF:
	mov	ecx, DWORD PTR _i$67704[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67704[ebp], ecx
$LN22@ReadNamesF:
	mov	edx, DWORD PTR _i$67704[ebp]
	cmp	edx, DWORD PTR _num$67690[ebp]
	jae	SHORT $LN23@ReadNamesF
; Line 63
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	mov	ecx, DWORD PTR _i$67704[ebp]
	movzx	esi, BYTE PTR [eax+ecx*2]
	shl	esi, 8
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	mov	edx, DWORD PTR _i$67704[ebp]
	movzx	eax, BYTE PTR [eax+edx*2+1]
	or	esi, eax
	mov	WORD PTR _c$67708[ebp], si
; Line 64
	movzx	ecx, WORD PTR _c$67708[ebp]
	test	ecx, ecx
	jne	SHORT $LN19@ReadNamesF
; Line 65
	mov	BYTE PTR $T67835[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67835[ebp]
	jmp	$LN37@ReadNamesF
$LN19@ReadNamesF:
; Line 66
	mov	edx, DWORD PTR _i$67704[ebp]
	mov	eax, DWORD PTR _p$67692[ebp]
	mov	cx, WORD PTR _c$67708[ebp]
	mov	WORD PTR [eax+edx*2], cx
; Line 67
	jmp	$LN21@ReadNamesF
$LN23@ReadNamesF:
; Line 68
	xor	edx, edx
	mov	eax, DWORD PTR _num$67690[ebp]
	mov	ecx, DWORD PTR _p$67692[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 69
	mov	edx, DWORD PTR _num$67690[ebp]
	push	edx
	lea	ecx, DWORD PTR _u$[ebp]
	call	?ReleaseBuf_SetLen@UString@@QAEXI@Z	; UString::ReleaseBuf_SetLen
; Line 70
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _buf$67683[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
; Line 71
	jmp	$LN18@ReadNamesF
$LN33@ReadNamesF:
; Line 73
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 74
	mov	eax, DWORD PTR _fileSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	?GetBuf@AString@@QAEPADI@Z		; AString::GetBuf
	mov	DWORD PTR _p$67718[ebp], eax
; Line 76
	lea	ecx, DWORD PTR _processed$67720[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$67718[ebp]
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	?Read@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN17@ReadNamesF
; Line 77
	mov	BYTE PTR $T67836[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67836[ebp]
	jmp	$LN37@ReadNamesF
$LN17@ReadNamesF:
; Line 78
	mov	edx, DWORD PTR _processed$67720[ebp]
	xor	eax, eax
	mov	DWORD PTR tv387[ebp], edx
	mov	DWORD PTR tv387[ebp+4], eax
	mov	ecx, DWORD PTR tv387[ebp]
	cmp	ecx, DWORD PTR _fileSize$[ebp]
	jne	SHORT $LN46@ReadNamesF
	mov	edx, DWORD PTR tv387[ebp+4]
	cmp	edx, DWORD PTR _fileSize$[ebp+4]
	je	SHORT $LN16@ReadNamesF
$LN46@ReadNamesF:
; Line 79
	mov	BYTE PTR $T67837[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67837[ebp]
	jmp	$LN37@ReadNamesF
$LN16@ReadNamesF:
; Line 80
	lea	ecx, DWORD PTR _file$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
; Line 81
	mov	eax, DWORD PTR _processed$67720[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	?ReleaseBuf_CalcLen@AString@@QAEXI@Z	; AString::ReleaseBuf_CalcLen
; Line 82
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	eax, DWORD PTR _processed$67720[ebp]
	je	SHORT $LN15@ReadNamesF
; Line 83
	mov	BYTE PTR $T67838[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67838[ebp]
	jmp	$LN37@ReadNamesF
$LN15@ReadNamesF:
; Line 86
	cmp	DWORD PTR _codePage$[ebp], 65001	; 0000fde9H
	jne	SHORT $LN14@ReadNamesF
; Line 88
	lea	ecx, DWORD PTR _u$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$67717[ebp]
	push	edx
	call	?ConvertUTF8ToUnicode@@YG_NABVAString@@AAVUString@@@Z ; ConvertUTF8ToUnicode
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN13@ReadNamesF
; Line 89
	mov	BYTE PTR $T67839[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67839[ebp]
	jmp	$LN37@ReadNamesF
$LN13@ReadNamesF:
; Line 91
	jmp	SHORT $LN12@ReadNamesF
$LN14@ReadNamesF:
; Line 93
	mov	ecx, DWORD PTR _codePage$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$67717[ebp]
	push	edx
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	call	?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString2
$LN12@ReadNamesF:
; Line 94
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$67717[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN18@ReadNamesF:
; Line 96
	mov	ecx, 65279				; 0000feffH
	mov	WORD PTR _kGoodBOM$[ebp], cx
; Line 97
	mov	edx, 65534				; 0000fffeH
	mov	WORD PTR _kBadBOM$[ebp], dx
; Line 99
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 100
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@ReadNamesF
$LN10@ReadNamesF:
; Line 101
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@ReadNamesF:
	lea	ecx, DWORD PTR _u$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN9@ReadNamesF
	lea	ecx, DWORD PTR _u$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	cmp	edx, 65279				; 0000feffH
	jne	SHORT $LN9@ReadNamesF
	jmp	SHORT $LN10@ReadNamesF
$LN9@ReadNamesF:
; Line 102
	jmp	SHORT $LN8@ReadNamesF
$LN7@ReadNamesF:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@ReadNamesF:
	lea	ecx, DWORD PTR _u$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _i$[ebp], eax
	jae	$LN6@ReadNamesF
; Line 104
	lea	ecx, DWORD PTR _u$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$[ebp]
	mov	dx, WORD PTR [eax+ecx*2]
	mov	WORD PTR _c$67743[ebp], dx
; Line 105
	movzx	eax, WORD PTR _c$67743[ebp]
	cmp	eax, 65279				; 0000feffH
	je	SHORT $LN4@ReadNamesF
	movzx	ecx, WORD PTR _c$67743[ebp]
	cmp	ecx, 65534				; 0000fffeH
	jne	SHORT $LN5@ReadNamesF
$LN4@ReadNamesF:
; Line 106
	mov	BYTE PTR $T67840[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67840[ebp]
	jmp	$LN37@ReadNamesF
$LN5@ReadNamesF:
; Line 107
	movzx	edx, WORD PTR _c$67743[ebp]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN2@ReadNamesF
	movzx	eax, WORD PTR _c$67743[ebp]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN3@ReadNamesF
$LN2@ReadNamesF:
; Line 109
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strings$[ebp]
	push	edx
	call	?AddName@@YGXAAV?$CObjectVector@VUString@@@@AAVUString@@@Z ; AddName
; Line 110
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 112
	jmp	SHORT $LN1@ReadNamesF
$LN3@ReadNamesF:
; Line 113
	movzx	eax, WORD PTR _c$67743[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
$LN1@ReadNamesF:
; Line 114
	jmp	$LN7@ReadNamesF
$LN6@ReadNamesF:
; Line 115
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _strings$[ebp]
	push	edx
	call	?AddName@@YGXAAV?$CObjectVector@VUString@@@@AAVUString@@@Z ; AddName
; Line 116
	mov	BYTE PTR $T67841[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _u$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T67841[ebp]
$LN37@ReadNamesF:
; Line 117
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN57@ReadNamesF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN57@ReadNamesF:
	DD	8
	DD	$LN56@ReadNamesF
$LN56@ReadNamesF:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN47@ReadNamesF
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN48@ReadNamesF
	DD	-68					; ffffffbcH
	DD	12					; 0000000cH
	DD	$LN49@ReadNamesF
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN50@ReadNamesF
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN51@ReadNamesF
	DD	-136					; ffffff78H
	DD	12					; 0000000cH
	DD	$LN52@ReadNamesF
	DD	-152					; ffffff68H
	DD	4
	DD	$LN53@ReadNamesF
	DD	-180					; ffffff4cH
	DD	12					; 0000000cH
	DD	$LN54@ReadNamesF
$LN54@ReadNamesF:
	DB	115					; 00000073H
	DB	0
$LN53@ReadNamesF:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN52@ReadNamesF:
	DB	115					; 00000073H
	DB	0
$LN51@ReadNamesF:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN50@ReadNamesF:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN49@ReadNamesF:
	DB	117					; 00000075H
	DB	0
$LN48@ReadNamesF:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN47@ReadNamesF:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$0:
	lea	ecx, DWORD PTR _file$[ebp]
	jmp	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$1:
	lea	ecx, DWORD PTR _u$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$2:
	lea	ecx, DWORD PTR _buf$67683[ebp]
	jmp	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$3:
	lea	ecx, DWORD PTR _s$67717[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z$4:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReadNamesFromListFile@@YG_NPB_WAAV?$CObjectVector@VUString@@@@I@Z ENDP ; ReadNamesFromListFile
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67878 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67878[ebp], ecx
	mov	edx, DWORD PTR $T67878[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
_TEXT	ENDS
EXTRN	?ReAlloc2@AString@@AAEXI@Z:PROC			; AString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf@AString@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf@AString@@QAEPADI@Z PROC				; AString::GetBuf, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf
; Line 252
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@AString@@AAEXI@Z		; AString::ReAlloc2
$LN1@GetBuf:
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 254
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf@AString@@QAEPADI@Z ENDP				; AString::GetBuf
_TEXT	ENDS
PUBLIC	?MyStringLen@@YGIPBD@Z				; MyStringLen
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReleaseBuf_CalcLen@AString@@QAEXI@Z
_TEXT	SEGMENT
_chars$ = -8						; size = 4
_this$ = -4						; size = 4
_maxLen$ = 8						; size = 4
?ReleaseBuf_CalcLen@AString@@QAEXI@Z PROC		; AString::ReleaseBuf_CalcLen, COMDAT
; _this$ = ecx
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _chars$[ebp], ecx
; Line 270
	mov	edx, DWORD PTR _chars$[ebp]
	add	edx, DWORD PTR _maxLen$[ebp]
	mov	BYTE PTR [edx], 0
; Line 271
	mov	eax, DWORD PTR _chars$[ebp]
	push	eax
	call	?MyStringLen@@YGIPBD@Z			; MyStringLen
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 272
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBuf_CalcLen@AString@@QAEXI@Z ENDP		; AString::ReleaseBuf_CalcLen
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStringLen@@YGIPBD@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_s$ = 8							; size = 4
?MyStringLen@@YGIPBD@Z PROC				; MyStringLen, COMDAT
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 28
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MyStringLe
$LN2@MyStringLe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@MyStringLe:
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN1@MyStringLe
	jmp	SHORT $LN2@MyStringLe
$LN1@MyStringLe:
; Line 29
	mov	eax, DWORD PTR _i$[ebp]
; Line 30
	mov	esp, ebp
	pop	ebp
	ret	4
?MyStringLen@@YGIPBD@Z ENDP				; MyStringLen
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67889 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67889[ebp], ecx
	mov	edx, DWORD PTR $T67889[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
EXTRN	?ReAlloc2@UString@@AAEXI@Z:PROC			; UString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf@UString@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf@UString@@QAEPA_WI@Z PROC			; UString::GetBuf, COMDAT
; _this$ = ecx
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf@2
; Line 487
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@UString@@AAEXI@Z		; UString::ReAlloc2
$LN1@GetBuf@2:
; Line 488
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 489
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf@UString@@QAEPA_WI@Z ENDP			; UString::GetBuf
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseBuf_SetLen@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newLen$ = 8						; size = 4
?ReleaseBuf_SetLen@UString@@QAEXI@Z PROC		; UString::ReleaseBuf_SetLen, COMDAT
; _this$ = ecx
; Line 500
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBuf_SetLen@UString@@QAEXI@Z ENDP		; UString::ReleaseBuf_SetLen
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
_TEXT	ENDS
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?DeleteBack@UString@@QAEXXZ			; UString::DeleteBack
PUBLIC	?Back@UString@@QBE_WXZ				; UString::Back
PUBLIC	?Trim@UString@@QAEXXZ				; UString::Trim
EXTRN	?Delete@UString@@QAEXI@Z:PROC			; UString::Delete
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_strings$ = 8						; size = 4
_s$ = 12						; size = 4
?AddName@@YGXAAV?$CObjectVector@VUString@@@@AAVUString@@@Z PROC ; AddName
; File c:\workspace\7z1505-src\cpp\common\listfileutils.cpp
; Line 17
	push	ebp
	mov	ebp, esp
; Line 18
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Trim@UString@@QAEXXZ			; UString::Trim
; Line 19
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 2
	jb	SHORT $LN2@AddName
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	eax, WORD PTR [eax]
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN2@AddName
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Back@UString@@QBE_WXZ			; UString::Back
	movzx	ecx, ax
	cmp	ecx, 34					; 00000022H
	jne	SHORT $LN2@AddName
; Line 21
	mov	ecx, DWORD PTR _s$[ebp]
	call	?DeleteBack@UString@@QAEXXZ		; UString::DeleteBack
; Line 22
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Delete@UString@@QAEXI@Z		; UString::Delete
$LN2@AddName:
; Line 24
	mov	ecx, DWORD PTR _s$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@AddName
; Line 25
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _strings$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
$LN3@AddName:
; Line 26
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?AddName@@YGXAAV?$CObjectVector@VUString@@@@AAVUString@@@Z ENDP ; AddName
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@UString@@QBE_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@UString@@QBE_WXZ PROC				; UString::Back, COMDAT
; _this$ = ecx
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ax, WORD PTR [eax+ecx*2-2]
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@UString@@QBE_WXZ ENDP				; UString::Back
_TEXT	ENDS
EXTRN	?TrimLeft@UString@@QAEXXZ:PROC			; UString::TrimLeft
EXTRN	?TrimRight@UString@@QAEXXZ:PROC			; UString::TrimRight
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Trim@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Trim@UString@@QAEXXZ PROC				; UString::Trim, COMDAT
; _this$ = ecx
; Line 584
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 585
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TrimRight@UString@@QAEXXZ		; UString::TrimRight
; Line 586
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TrimLeft@UString@@QAEXXZ		; UString::TrimLeft
; Line 587
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Trim@UString@@QAEXXZ ENDP				; UString::Trim
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteBack@UString@@QAEXXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?DeleteBack@UString@@QAEXXZ PROC			; UString::DeleteBack, COMDAT
; _this$ = ecx
; Line 602
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR tv66[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@UString@@QAEXXZ ENDP			; UString::DeleteBack
_TEXT	ENDS
PUBLIC	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::CFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::CInFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::CFileBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 97
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::CFileBase
_TEXT	ENDS
PUBLIC	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::~CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::~CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::~CFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::~CInFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::~CFileBase, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::~CFileBase
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\common\myvector.h
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T67924 = -24						; size = 4
$T67923 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T67924[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T67924[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T67924[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T67923[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T67923[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T67924[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjArray@E@@QAE@I@Z
_TEXT	SEGMENT
$T67936 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CObjArray@E@@QAE@I@Z PROC				; CObjArray<unsigned char>::CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CObjArray
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T67936[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T67936[ebp]
	mov	DWORD PTR [edx], eax
$LN2@CObjArray:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CObjArray@E@@QAE@I@Z ENDP				; CObjArray<unsigned char>::CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@E@@QAE@XZ
_TEXT	SEGMENT
$T67939 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@E@@QAE@XZ PROC				; CObjArray<unsigned char>::~CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67939[ebp], ecx
	mov	edx, DWORD PTR $T67939[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@E@@QAE@XZ ENDP				; CObjArray<unsigned char>::~CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@E@@QAEPAEXZ PROC				; CObjArray<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@E@@QAEPAEXZ ENDP				; CObjArray<unsigned char>::operator unsigned char *
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T67947 = -20						; size = 4
$T67946 = -16						; size = 4
_p$67777 = -12						; size = 4
_newCapacity$67776 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$67776[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$67776[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T67946[ebp], eax
	mov	eax, DWORD PTR $T67946[ebp]
	mov	DWORD PTR _p$67777[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$67777[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T67947[ebp], edx
	mov	eax, DWORD PTR $T67947[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$67777[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$67776[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
_TEXT	ENDS
END

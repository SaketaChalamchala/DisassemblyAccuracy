; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\PercentPrinter.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG68331 DB	' ', 00H, '.', 00H, ' ', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??1CPercentPrinterState@@QAE@XZ			; CPercentPrinterState::~CPercentPrinterState
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?ClosePrint@CPercentPrinter@@QAEX_N@Z		; CPercentPrinter::ClosePrint
PUBLIC	??1CPercentPrinter@@QAE@XZ			; CPercentPrinter::~CPercentPrinter
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__ehfuncinfo$??1CPercentPrinter@@QAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??1CPercentPrinter@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CPercentPrinter@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CPercentPrinter@@QAE@XZ$6
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\percentprinter.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CPercentPrinter@@QAE@XZ PROC				; CPercentPrinter::~CPercentPrinter
; _this$ = ecx
; Line 12
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CPercentPrinter@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
; Line 13
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
; Line 14
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1CPercentPrinterState@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPercentPrinterState@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CPercentPrinterState@@QAE@XZ
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1CPercentPrinterState@@QAE@XZ
__unwindfunclet$??1CPercentPrinter@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1CPercentPrinter@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CPercentPrinter@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CPercentPrinter@@QAE@XZ ENDP				; CPercentPrinter::~CPercentPrinter
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T68404 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68404[ebp], ecx
	mov	edx, DWORD PTR $T68404[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T68407 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68407[ebp], ecx
	mov	edx, DWORD PTR $T68407[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CPercentPrinterState@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CPercentPrinterState@@QAE@XZ$0
__ehfuncinfo$??1CPercentPrinterState@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CPercentPrinterState@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CPercentPrinterState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CPercentPrinterState@@QAE@XZ PROC			; CPercentPrinterState::~CPercentPrinterState, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CPercentPrinterState@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CPercentPrinterState@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1CPercentPrinterState@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CPercentPrinterState@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CPercentPrinterState@@QAE@XZ ENDP			; CPercentPrinterState::~CPercentPrinterState
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	?ClearCurState@CPercentPrinterState@@QAEXXZ	; CPercentPrinterState::ClearCurState
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearCurState@CPercentPrinterState@@QAEXXZ PROC	; CPercentPrinterState::ClearCurState
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\percentprinter.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 18
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], -1
	mov	DWORD PTR [ecx+12], -1
; Line 20
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	DWORD PTR [edx+20], 0
; Line 21
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 22
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 23
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearCurState@CPercentPrinterState@@QAEXXZ ENDP	; CPercentPrinterState::ClearCurState
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?ReleaseBuf_SetLen@AString@@QAEXI@Z		; AString::ReleaseBuf_SetLen
PUBLIC	?GetBuf@AString@@QAEPADI@Z			; AString::GetBuf
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
EXTRN	?Flush@CStdOutStream@@QAE_NXZ:PROC		; CStdOutStream::Flush
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$68285 = -20						; size = 4
_start$68284 = -16					; size = 4
_i$68283 = -12						; size = 4
_num$ = -8						; size = 4
_this$ = -4						; size = 4
_needFlush$ = 8						; size = 1
?ClosePrint@CPercentPrinter@@QAEX_N@Z PROC		; CPercentPrinter::ClosePrint
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\percentprinter.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	DWORD PTR _num$[ebp], eax
; Line 28
	cmp	DWORD PTR _num$[ebp], 0
	je	$LN5@ClosePrint
; Line 37
	mov	eax, DWORD PTR _num$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?GetBuf@AString@@QAEPADI@Z		; AString::GetBuf
	mov	DWORD PTR _start$68284[ebp], eax
; Line 38
	mov	ecx, DWORD PTR _start$68284[ebp]
	mov	DWORD PTR _p$68285[ebp], ecx
; Line 39
	mov	edx, DWORD PTR _p$68285[ebp]
	mov	BYTE PTR [edx], 13			; 0000000dH
	mov	eax, DWORD PTR _p$68285[ebp]
	add	eax, 1
	mov	DWORD PTR _p$68285[ebp], eax
; Line 40
	mov	DWORD PTR _i$68283[ebp], 0
	jmp	SHORT $LN4@ClosePrint
$LN3@ClosePrint:
	mov	ecx, DWORD PTR _i$68283[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$68283[ebp], ecx
$LN4@ClosePrint:
	mov	edx, DWORD PTR _i$68283[ebp]
	cmp	edx, DWORD PTR _num$[ebp]
	jae	SHORT $LN2@ClosePrint
	mov	eax, DWORD PTR _p$68285[ebp]
	mov	BYTE PTR [eax], 32			; 00000020H
	mov	ecx, DWORD PTR _p$68285[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$68285[ebp], ecx
	jmp	SHORT $LN3@ClosePrint
$LN2@ClosePrint:
; Line 41
	mov	edx, DWORD PTR _p$68285[ebp]
	mov	BYTE PTR [edx], 13			; 0000000dH
	mov	eax, DWORD PTR _p$68285[ebp]
	add	eax, 1
	mov	DWORD PTR _p$68285[ebp], eax
; Line 50
	mov	ecx, DWORD PTR _p$68285[ebp]
	mov	BYTE PTR [ecx], 0
; Line 51
	mov	edx, DWORD PTR _p$68285[ebp]
	sub	edx, DWORD PTR _start$68284[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?ReleaseBuf_SetLen@AString@@QAEXI@Z	; AString::ReleaseBuf_SetLen
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN5@ClosePrint:
; Line 54
	movzx	ecx, BYTE PTR _needFlush$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@ClosePrint
; Line 55
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+164]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN1@ClosePrint:
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 57
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ClosePrint@CPercentPrinter@@QAEX_N@Z ENDP		; CPercentPrinter::ClosePrint
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
EXTRN	?ReAlloc2@AString@@AAEXI@Z:PROC			; AString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf@AString@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf@AString@@QAEPADI@Z PROC				; AString::GetBuf, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf
; Line 252
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@AString@@AAEXI@Z		; AString::ReAlloc2
$LN1@GetBuf:
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 254
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf@AString@@QAEPADI@Z ENDP				; AString::GetBuf
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseBuf_SetLen@AString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newLen$ = 8						; size = 4
?ReleaseBuf_SetLen@AString@@QAEXI@Z PROC		; AString::ReleaseBuf_SetLen, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBuf_SetLen@AString@@QAEXI@Z ENDP		; AString::ReleaseBuf_SetLen
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
PUBLIC	__$ArrayPad$
PUBLIC	?GetPercents@CPercentPrinter@@AAEXXZ		; CPercentPrinter::GetPercents
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
EXTRN	_strlen:PROC
EXTRN	?ConvertUInt64ToString@@YGX_KPAD@Z:PROC		; ConvertUInt64ToString
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__aulldiv:PROC
EXTRN	__allmul:PROC
EXTRN	__aullshr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv160 = -72						; size = 4
tv142 = -68						; size = 4
_val$68297 = -64					; size = 8
_c$68296 = -53						; size = 1
_size$ = -52						; size = 4
_s$ = -44						; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetPercents@CPercentPrinter@@AAEXXZ PROC		; CPercentPrinter::GetPercents
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\percentprinter.cpp
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 64
	mov	BYTE PTR _c$68296[ebp], 37		; 00000025H
; Line 65
	mov	DWORD PTR _val$68297[ebp], 0
	mov	DWORD PTR _val$68297[ebp+4], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [ecx+8]
	and	eax, DWORD PTR [edx+12]
	cmp	eax, -1
	jne	SHORT $LN5@GetPercent
; Line 68
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	mov	cl, 20					; 00000014H
	call	__aullshr
	mov	DWORD PTR _val$68297[ebp], eax
	mov	DWORD PTR _val$68297[ebp+4], edx
; Line 69
	mov	BYTE PTR _c$68296[ebp], 77		; 0000004dH
	jmp	SHORT $LN4@GetPercent
$LN5@GetPercent:
; Line 71
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv160[ebp], edx
	mov	eax, DWORD PTR tv160[ebp]
	mov	ecx, DWORD PTR tv160[ebp]
	mov	edx, DWORD PTR [eax+8]
	or	edx, DWORD PTR [ecx+12]
	je	SHORT $LN4@GetPercent
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	push	0
	push	100					; 00000064H
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__allmul
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+12]
	push	esi
	mov	ecx, DWORD PTR [ecx+8]
	push	ecx
	push	edx
	push	eax
	call	__aulldiv
	mov	DWORD PTR _val$68297[ebp], eax
	mov	DWORD PTR _val$68297[ebp+4], edx
$LN4@GetPercent:
; Line 73
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _val$68297[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _val$68297[ebp]
	push	ecx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 74
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _size$[ebp], eax
; Line 75
	mov	eax, DWORD PTR _size$[ebp]
	mov	cl, BYTE PTR _c$68296[ebp]
	mov	BYTE PTR _s$[ebp+eax], cl
	mov	edx, DWORD PTR _size$[ebp]
	add	edx, 1
	mov	DWORD PTR _size$[ebp], edx
; Line 76
	mov	eax, DWORD PTR _size$[ebp]
	mov	BYTE PTR _s$[ebp+eax], 0
$LN2@GetPercent:
; Line 79
	cmp	DWORD PTR _size$[ebp], 4
	jae	SHORT $LN1@GetPercent
; Line 81
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 82
	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 1
	mov	DWORD PTR _size$[ebp], ecx
; Line 83
	jmp	SHORT $LN2@GetPercent
$LN1@GetPercent:
; Line 85
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 86
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GetPercent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@GetPercent:
	DD	1
	DD	$LN9@GetPercent
$LN9@GetPercent:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN8@GetPercent
$LN8@GetPercent:
	DB	115					; 00000073H
	DB	0
?GetPercents@CPercentPrinter@@AAEXXZ ENDP		; CPercentPrinter::GetPercents
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
_TEXT	ENDS
PUBLIC	??4CPercentPrinterState@@QAEAAU0@ABU0@@Z	; CPercentPrinterState::operator=
PUBLIC	??9@YG_NABVAString@@0@Z				; operator!=
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	??8@YG_NABVUString@@0@Z				; operator==
PUBLIC	??8@YG_NABVAString@@0@Z				; operator==
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	__$ArrayPad$
PUBLIC	?Print@CPercentPrinter@@QAEXXZ			; CPercentPrinter::Print
EXTRN	?Insert@UString@@QAEXIPB_W@Z:PROC		; UString::Insert
EXTRN	?Delete@UString@@QAEXII@Z:PROC			; UString::Delete
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?Replace@AString@@QAEXDD@Z:PROC			; AString::Replace
EXTRN	?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z:PROC ; StdOut_Convert_UString_to_AString
EXTRN	??YAString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator+=
EXTRN	??4AString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator=
EXTRN	__imp__GetTickCount@0:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv382 = -96						; size = 4
tv367 = -92						; size = 4
tv366 = -88						; size = 4
tv356 = -84						; size = 4
tv355 = -80						; size = 4
tv345 = -76						; size = 4
tv344 = -72						; size = 4
_delta$68329 = -68					; size = 4
_len$68325 = -64					; size = 4
_s$68321 = -56						; size = 32
_st$68316 = -20						; size = 4
_onlyPercentsChanged$ = -13				; size = 1
_tick$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Print@CPercentPrinter@@QAEXXZ PROC			; CPercentPrinter::Print
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\percentprinter.cpp
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	DWORD PTR _tick$[ebp], 0
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN18@Print
; Line 92
	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tick$[ebp], eax
$LN18@Print:
; Line 94
	mov	BYTE PTR _onlyPercentsChanged$[ebp], 0
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN17@Print
; Line 98
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	SHORT $LN16@Print
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tick$[ebp]
	sub	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+48]
	jae	SHORT $LN16@Print
; Line 99
	jmp	$LN19@Print
$LN16@Print:
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _st$68316[ebp], eax
; Line 104
	mov	ecx, DWORD PTR _st$68316[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 128				; 00000080H
	push	edx
	call	??8@YG_NABVAString@@0@Z			; operator==
	movzx	eax, al
	test	eax, eax
	je	$LN17@Print
	mov	ecx, DWORD PTR _st$68316[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 140				; 0000008cH
	push	edx
	call	??8@YG_NABVUString@@0@Z			; operator==
	movzx	eax, al
	test	eax, eax
	je	$LN17@Print
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _st$68316[ebp]
	mov	DWORD PTR tv344[ebp], ecx
	mov	DWORD PTR tv345[ebp], edx
	mov	eax, DWORD PTR tv344[ebp]
	mov	ecx, DWORD PTR tv345[ebp]
	mov	edx, DWORD PTR [eax+120]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN17@Print
	mov	eax, DWORD PTR tv344[ebp]
	mov	ecx, DWORD PTR tv345[ebp]
	mov	edx, DWORD PTR [eax+124]
	cmp	edx, DWORD PTR [ecx+20]
	jne	SHORT $LN17@Print
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _st$68316[ebp]
	mov	DWORD PTR tv355[ebp], eax
	mov	DWORD PTR tv356[ebp], ecx
	mov	edx, DWORD PTR tv355[ebp]
	mov	eax, DWORD PTR tv356[ebp]
	mov	ecx, DWORD PTR [edx+112]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN14@Print
	mov	edx, DWORD PTR tv355[ebp]
	mov	eax, DWORD PTR tv356[ebp]
	mov	ecx, DWORD PTR [edx+116]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN14@Print
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _st$68316[ebp]
	mov	DWORD PTR tv366[ebp], edx
	mov	DWORD PTR tv367[ebp], eax
	mov	ecx, DWORD PTR tv366[ebp]
	mov	edx, DWORD PTR tv367[ebp]
	mov	eax, DWORD PTR [ecx+104]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN14@Print
	mov	ecx, DWORD PTR tv366[ebp]
	mov	edx, DWORD PTR tv367[ebp]
	mov	eax, DWORD PTR [ecx+108]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN14@Print
; Line 108
	jmp	$LN19@Print
$LN14@Print:
; Line 109
	mov	BYTE PTR _onlyPercentsChanged$[ebp], 1
$LN17@Print:
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPercents@CPercentPrinter@@AAEXXZ	; CPercentPrinter::GetPercents
; Line 117
	movzx	ecx, BYTE PTR _onlyPercentsChanged$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@Print
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 152				; 00000098H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	call	??8@YG_NABVAString@@0@Z			; operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@Print
; Line 118
	jmp	$LN19@Print
$LN13@Print:
; Line 120
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv382[ebp], eax
	mov	ecx, DWORD PTR tv382[ebp]
	mov	edx, DWORD PTR tv382[ebp]
	mov	eax, DWORD PTR [ecx+16]
	or	eax, DWORD PTR [edx+20]
	je	SHORT $LN12@Print
; Line 125
	lea	ecx, DWORD PTR _s$68321[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	push	ecx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 128
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 129
	lea	edx, DWORD PTR _s$68321[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
$LN12@Print:
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Print
; Line 136
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 137
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@ABV0@@Z		; AString::operator+=
$LN11@Print:
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	$LN10@Print
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+172]
	jae	$LN10@Print
; Line 142
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 144
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	call	?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z ; StdOut_Convert_UString_to_AString
; Line 145
	push	32					; 00000020H
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Replace@AString@@QAEXDD@Z		; AString::Replace
; Line 146
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Len@AString@@QBEIXZ			; AString::Len
	add	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	esi, DWORD PTR [ecx+172]
	jbe	$LN9@Print
; Line 148
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR _len$68325[ebp], eax
$LN8@Print:
; Line 149
	cmp	DWORD PTR _len$68325[ebp], 0
	je	$LN7@Print
; Line 151
	mov	edx, DWORD PTR _len$68325[ebp]
	shr	edx, 3
	mov	DWORD PTR _delta$68329[ebp], edx
; Line 152
	cmp	DWORD PTR _delta$68329[ebp], 0
	jne	SHORT $LN6@Print
; Line 153
	mov	DWORD PTR _delta$68329[ebp], 1
$LN6@Print:
; Line 154
	mov	eax, DWORD PTR _len$68325[ebp]
	sub	eax, DWORD PTR _delta$68329[ebp]
	mov	DWORD PTR _len$68325[ebp], eax
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 156
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Len@UString@@QBEIXZ			; UString::Len
	sub	eax, DWORD PTR _len$68325[ebp]
	push	eax
	mov	edx, DWORD PTR _len$68325[ebp]
	shr	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?Delete@UString@@QAEXII@Z		; UString::Delete
; Line 157
	push	OFFSET $SG68331
	mov	eax, DWORD PTR _len$68325[ebp]
	shr	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?Insert@UString@@QAEXIPB_W@Z		; UString::Insert
; Line 158
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	call	?StdOut_Convert_UString_to_AString@@YGXABVUString@@AAVAString@@@Z ; StdOut_Convert_UString_to_AString
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Len@AString@@QBEIXZ			; AString::Len
	add	esi, eax
	mov	eax, DWORD PTR _this$[ebp]
	cmp	esi, DWORD PTR [eax+172]
	ja	SHORT $LN5@Print
; Line 160
	jmp	SHORT $LN7@Print
$LN5@Print:
; Line 161
	jmp	$LN8@Print
$LN7@Print:
; Line 162
	cmp	DWORD PTR _len$68325[ebp], 0
	jne	SHORT $LN9@Print
; Line 163
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
$LN9@Print:
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??YAString@@QAEAAV0@ABV0@@Z		; AString::operator+=
$LN10@Print:
; Line 168
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	call	??9@YG_NABVAString@@0@Z			; operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@Print
; Line 170
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+164]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+168]
	test	ecx, ecx
	je	SHORT $LN2@Print
; Line 173
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+164]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN2@Print:
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
$LN3@Print:
; Line 177
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??4CPercentPrinterState@@QAEAAU0@ABU0@@Z
; Line 179
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+48], 0
	je	SHORT $LN19@Print
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tick$[ebp]
	mov	DWORD PTR [eax+52], ecx
$LN19@Print:
; Line 181
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Print
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@Print:
	DD	1
	DD	$LN22@Print
$LN22@Print:
	DD	-56					; ffffffc8H
	DD	32					; 00000020H
	DD	$LN21@Print
$LN21@Print:
	DB	115					; 00000073H
	DB	0
?Print@CPercentPrinter@@QAEXXZ ENDP			; CPercentPrinter::Print
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
_TEXT	ENDS
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8@YG_NABVAString@@0@Z
_TEXT	SEGMENT
tv77 = -4						; size = 4
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
??8@YG_NABVAString@@0@Z PROC				; operator==, COMDAT
; Line 390
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	esi, eax
	mov	ecx, DWORD PTR _s2$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	esi, eax
	jne	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR _s2$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@operator@2
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator@2:
	mov	al, BYTE PTR tv77[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??8@YG_NABVAString@@0@Z ENDP				; operator==
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??9@YG_NABVAString@@0@Z
_TEXT	SEGMENT
tv77 = -4						; size = 4
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
??9@YG_NABVAString@@0@Z PROC				; operator!=, COMDAT
; Line 394
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	esi, eax
	mov	ecx, DWORD PTR _s2$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	esi, eax
	jne	SHORT $LN3@operator@3
	mov	ecx, DWORD PTR _s2$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@operator@3
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@operator@3
$LN3@operator@3:
	mov	DWORD PTR tv77[ebp], 1
$LN4@operator@3:
	mov	al, BYTE PTR tv77[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??9@YG_NABVAString@@0@Z ENDP				; operator!=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
_TEXT	ENDS
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
EXTRN	__imp__wcscmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8@YG_NABVUString@@0@Z
_TEXT	SEGMENT
tv77 = -4						; size = 4
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
??8@YG_NABVUString@@0@Z PROC				; operator==, COMDAT
; Line 616
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _s1$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	esi, eax
	mov	ecx, DWORD PTR _s2$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	esi, eax
	jne	SHORT $LN3@operator@4
	mov	ecx, DWORD PTR _s2$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	DWORD PTR __imp__wcscmp
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@operator@4
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator@4
$LN3@operator@4:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator@4:
	mov	al, BYTE PTR tv77[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??8@YG_NABVUString@@0@Z ENDP				; operator==
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4CPercentPrinterState@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CPercentPrinterState@@QAEAAU0@ABU0@@Z PROC		; CPercentPrinterState::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CPercentPrinterState@@QAEAAU0@ABU0@@Z ENDP		; CPercentPrinterState::operator=
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Common\OutStreamWithCRC.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator->
PUBLIC	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
PUBLIC	?Write@COutStreamWithCRC@@UAGJPBXIPAI@Z		; COutStreamWithCRC::Write
EXTRN	@CrcUpdate@12:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\outstreamwithcrc.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv72 = -8						; size = 4
_result$ = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Write@COutStreamWithCRC@@UAGJPBXIPAI@Z PROC		; COutStreamWithCRC::Write
; Line 8
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 9
	mov	DWORD PTR _result$[ebp], 0
; Line 10
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	test	eax, eax
	je	SHORT $LN3@Write
; Line 11
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN3@Write:
; Line 12
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+28]
	test	edx, edx
	je	SHORT $LN2@Write
; Line 13
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	edx, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	call	@CrcUpdate@12
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
$LN2@Write:
; Line 14
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+16]
	adc	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	DWORD PTR [edx+20], ecx
; Line 15
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN1@Write
; Line 16
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@Write:
; Line 17
	mov	eax, DWORD PTR _result$[ebp]
; Line 18
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Write@COutStreamWithCRC@@UAGJPBXIPAI@Z ENDP		; COutStreamWithCRC::Write
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator->
_TEXT	ENDS
END

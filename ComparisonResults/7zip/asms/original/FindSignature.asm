; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Common\FindSignature.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::~CBuffer<unsigned char>
PUBLIC	??B?$CBuffer@E@@QAEPAEXZ			; CBuffer<unsigned char>::operator unsigned char *
PUBLIC	??0?$CBuffer@E@@QAE@I@Z				; CBuffer<unsigned char>::CBuffer<unsigned char>
PUBLIC	?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z ; FindSignatureInStream
EXTRN	__imp__memmove:PROC
EXTRN	_memcpy:PROC
EXTRN	_memcmp:PROC
EXTRN	?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z:PROC ; ReadStream_FALSE
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z$1
__ehfuncinfo$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\findsignature.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv203 = -124						; size = 4
tv202 = -120						; size = 4
$T66136 = -116						; size = 4
$T66135 = -112						; size = 4
$T66134 = -108						; size = 4
$T66133 = -104						; size = 4
$T66132 = -100						; size = 4
$T66131 = -96						; size = 4
_b$66104 = -89						; size = 1
_pos$66100 = -88					; size = 4
_numTests$66099 = -84					; size = 4
___result__$66093 = -80					; size = 4
_processedSize$66092 = -72				; size = 4
_numReadBytes$66091 = -64				; size = 4
_numPrevBytes$ = -60					; size = 4
_buffer$ = -56						; size = 4
_byteBuffer$ = -48					; size = 8
_kBufferSize$ = -36					; size = 4
___result__$66070 = -32					; size = 4
_byteBuffer2$ = -24					; size = 8
__$EHRec$ = -12						; size = 12
_stream$ = 8						; size = 4
_signature$ = 12					; size = 4
_signatureSize$ = 16					; size = 4
_limit$ = 20						; size = 4
_resPos$ = 24						; size = 4
?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z PROC ; FindSignatureInStream
; Line 14
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 15
	mov	eax, DWORD PTR _resPos$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 16
	mov	ecx, DWORD PTR _signatureSize$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??0?$CBuffer@E@@QAE@I@Z			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 17
	mov	edx, DWORD PTR _signatureSize$[ebp]
	push	edx
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	call	?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z ; ReadStream_FALSE
	mov	DWORD PTR ___result__$66070[ebp], eax
	cmp	DWORD PTR ___result__$66070[ebp], 0
	je	SHORT $LN19@FindSignat
	mov	ecx, DWORD PTR ___result__$66070[ebp]
	mov	DWORD PTR $T66131[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T66131[ebp]
	jmp	$LN20@FindSignat
$LN19@FindSignat:
; Line 19
	mov	edx, DWORD PTR _signatureSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _signature$[ebp]
	push	eax
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN18@FindSignat
; Line 20
	mov	DWORD PTR $T66132[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T66132[ebp]
	jmp	$LN20@FindSignat
$LN18@FindSignat:
; Line 22
	mov	DWORD PTR _kBufferSize$[ebp], 65536	; 00010000H
; Line 23
	push	65536					; 00010000H
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??0?$CBuffer@E@@QAE@I@Z			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 24
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	mov	DWORD PTR _buffer$[ebp], eax
; Line 25
	mov	ecx, DWORD PTR _signatureSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numPrevBytes$[ebp], ecx
; Line 26
	mov	edx, DWORD PTR _numPrevBytes$[ebp]
	push	edx
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	add	eax, 1
	push	eax
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 27
	mov	ecx, DWORD PTR _resPos$[ebp]
	mov	DWORD PTR [ecx], 1
	mov	DWORD PTR [ecx+4], 0
$LN17@FindSignat:
; Line 30
	cmp	DWORD PTR _limit$[ebp], 0
	je	SHORT $LN13@FindSignat
; Line 31
	mov	edx, DWORD PTR _resPos$[ebp]
	mov	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR tv202[ebp], edx
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv202[ebp]
	mov	edx, DWORD PTR tv203[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN13@FindSignat
	ja	SHORT $LN24@FindSignat
	mov	ecx, DWORD PTR tv202[ebp]
	mov	edx, DWORD PTR tv203[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jbe	SHORT $LN13@FindSignat
$LN24@FindSignat:
; Line 32
	mov	DWORD PTR $T66133[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T66133[ebp]
	jmp	$LN20@FindSignat
$LN13@FindSignat:
; Line 35
	mov	ecx, 65536				; 00010000H
	sub	ecx, DWORD PTR _numPrevBytes$[ebp]
	mov	DWORD PTR _numReadBytes$66091[ebp], ecx
; Line 37
	mov	esi, esp
	lea	edx, DWORD PTR _processedSize$66092[ebp]
	push	edx
	mov	eax, DWORD PTR _numReadBytes$66091[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR _numPrevBytes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$66093[ebp], eax
	cmp	DWORD PTR ___result__$66093[ebp], 0
	je	SHORT $LN10@FindSignat
	mov	eax, DWORD PTR ___result__$66093[ebp]
	mov	DWORD PTR $T66134[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T66134[ebp]
	jmp	$LN20@FindSignat
$LN10@FindSignat:
; Line 38
	mov	ecx, DWORD PTR _numPrevBytes$[ebp]
	add	ecx, DWORD PTR _processedSize$66092[ebp]
	mov	DWORD PTR _numPrevBytes$[ebp], ecx
; Line 39
	cmp	DWORD PTR _processedSize$66092[ebp], 0
	jne	SHORT $LN12@FindSignat
; Line 40
	mov	DWORD PTR $T66135[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T66135[ebp]
	jmp	$LN20@FindSignat
$LN12@FindSignat:
; Line 42
	mov	edx, DWORD PTR _numPrevBytes$[ebp]
	cmp	edx, DWORD PTR _signatureSize$[ebp]
	jb	$LN13@FindSignat
; Line 43
	mov	eax, DWORD PTR _numPrevBytes$[ebp]
	sub	eax, DWORD PTR _signatureSize$[ebp]
	add	eax, 1
	mov	DWORD PTR _numTests$66099[ebp], eax
; Line 44
	mov	DWORD PTR _pos$66100[ebp], 0
	jmp	SHORT $LN8@FindSignat
$LN7@FindSignat:
	mov	ecx, DWORD PTR _pos$66100[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$66100[ebp], ecx
$LN8@FindSignat:
	mov	edx, DWORD PTR _pos$66100[ebp]
	cmp	edx, DWORD PTR _numTests$66099[ebp]
	jae	$LN6@FindSignat
; Line 46
	mov	eax, DWORD PTR _signature$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$66104[ebp], cl
	jmp	SHORT $LN5@FindSignat
$LN4@FindSignat:
; Line 47
	mov	edx, DWORD PTR _pos$66100[ebp]
	add	edx, 1
	mov	DWORD PTR _pos$66100[ebp], edx
$LN5@FindSignat:
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _pos$66100[ebp]
	movzx	ecx, BYTE PTR [eax]
	movzx	edx, BYTE PTR _b$66104[ebp]
	cmp	ecx, edx
	je	SHORT $LN3@FindSignat
	mov	eax, DWORD PTR _pos$66100[ebp]
	cmp	eax, DWORD PTR _numTests$66099[ebp]
	jae	SHORT $LN3@FindSignat
	jmp	SHORT $LN4@FindSignat
$LN3@FindSignat:
; Line 48
	mov	ecx, DWORD PTR _pos$66100[ebp]
	cmp	ecx, DWORD PTR _numTests$66099[ebp]
	jne	SHORT $LN2@FindSignat
; Line 49
	jmp	SHORT $LN6@FindSignat
$LN2@FindSignat:
; Line 50
	mov	edx, DWORD PTR _signatureSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _signature$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR _pos$66100[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@FindSignat
; Line 52
	mov	edx, DWORD PTR _pos$66100[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _resPos$[ebp]
	add	edx, DWORD PTR [ecx]
	adc	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _resPos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
; Line 53
	mov	DWORD PTR $T66136[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR $T66136[ebp]
	jmp	SHORT $LN20@FindSignat
$LN1@FindSignat:
; Line 55
	jmp	$LN7@FindSignat
$LN6@FindSignat:
; Line 56
	mov	edx, DWORD PTR _numTests$66099[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _resPos$[ebp]
	add	edx, DWORD PTR [ecx]
	adc	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _resPos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
; Line 57
	mov	edx, DWORD PTR _numPrevBytes$[ebp]
	sub	edx, DWORD PTR _numTests$66099[ebp]
	mov	DWORD PTR _numPrevBytes$[ebp], edx
; Line 58
	mov	esi, esp
	mov	eax, DWORD PTR _numPrevBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR _numTests$66099[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 59
	jmp	$LN17@FindSignat
; Line 60
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
$LN20@FindSignat:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@FindSignat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN30@FindSignat:
	DD	3
	DD	$LN29@FindSignat
$LN29@FindSignat:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN25@FindSignat
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN26@FindSignat
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN27@FindSignat
$LN27@FindSignat:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN26@FindSignat:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN25@FindSignat:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z$0:
	lea	ecx, DWORD PTR _byteBuffer2$[ebp]
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__unwindfunclet$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z$1:
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindSignatureInStream@@YGJPAUISequentialInStream@@PBEIPB_KAA_K@Z ENDP ; FindSignatureInStream
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CBuffer@E@@QAE@I@Z
_TEXT	SEGMENT
$T66163 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CBuffer@E@@QAE@I@Z PROC				; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66163[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T66163[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CBuffer@E@@QAE@I@Z ENDP				; CBuffer<unsigned char>::CBuffer<unsigned char>
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
$T66166 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::~CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T66166[ebp], ecx
	mov	edx, DWORD PTR $T66166[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QAEPAEXZ PROC				; CBuffer<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QAEPAEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char *
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Common\OutBuffer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?Free@COutBuffer@@QAEXXZ			; COutBuffer::Free
PUBLIC	?Create@COutBuffer@@QAE_NI@Z			; COutBuffer::Create
EXTRN	_MidAlloc@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_kMinBlockSize$ = -8					; size = 4
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@COutBuffer@@QAE_NI@Z PROC			; COutBuffer::Create
; _this$ = ecx
; Line 10
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 11
	mov	DWORD PTR _kMinBlockSize$[ebp], 1
; Line 12
	cmp	DWORD PTR _bufSize$[ebp], 1
	jae	SHORT $LN2@Create
; Line 13
	mov	DWORD PTR _bufSize$[ebp], 1
$LN2@Create:
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Create
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR _bufSize$[ebp]
	jne	SHORT $LN1@Create
; Line 15
	mov	al, 1
	jmp	SHORT $LN3@Create
$LN1@Create:
; Line 16
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
; Line 17
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufSize$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 18
	mov	edx, DWORD PTR _bufSize$[ebp]
	push	edx
	call	_MidAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 19
	mov	edx, DWORD PTR _this$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx], 0
	setne	al
$LN3@Create:
; Line 20
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@COutBuffer@@QAE_NI@Z ENDP			; COutBuffer::Create
_TEXT	ENDS
EXTRN	_MidFree@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@COutBuffer@@QAEXXZ PROC				; COutBuffer::Free
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_MidFree@4
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 26
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@COutBuffer@@QAEXXZ ENDP				; COutBuffer::Free
_TEXT	ENDS
PUBLIC	?Init@COutBuffer@@QAEXXZ			; COutBuffer::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@COutBuffer@@QAEXXZ PROC				; COutBuffer::Init
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+8], eax
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
	mov	DWORD PTR [edx+28], 0
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+36], 0
; Line 38
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@COutBuffer@@QAEXXZ ENDP				; COutBuffer::Init
_TEXT	ENDS
PUBLIC	?GetProcessedSize@COutBuffer@@QBE_KXZ		; COutBuffer::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -12						; size = 8
_this$ = -4						; size = 4
?GetProcessedSize@COutBuffer@@QBE_KXZ PROC		; COutBuffer::GetProcessedSize
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+24]
	adc	edx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	xor	esi, esi
	sub	ecx, eax
	sbb	edx, esi
	mov	DWORD PTR _res$[ebp], ecx
	mov	DWORD PTR _res$[ebp+4], edx
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	cmp	eax, DWORD PTR [edx+4]
	jbe	SHORT $LN1@GetProcess
; Line 44
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	xor	eax, eax
	add	edx, DWORD PTR _res$[ebp]
	adc	eax, DWORD PTR _res$[ebp+4]
	mov	DWORD PTR _res$[ebp], edx
	mov	DWORD PTR _res$[ebp+4], eax
$LN1@GetProcess:
; Line 45
	mov	eax, DWORD PTR _res$[ebp]
	mov	edx, DWORD PTR _res$[ebp+4]
; Line 46
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@COutBuffer@@QBE_KXZ ENDP		; COutBuffer::GetProcessedSize
_TEXT	ENDS
PUBLIC	?FlushPart@COutBuffer@@IAEJXZ			; COutBuffer::FlushPart
EXTRN	_memcpy:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv150 = -32						; size = 4
tv73 = -28						; size = 4
_processedSize$66119 = -20				; size = 4
_result$ = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
?FlushPart@COutBuffer@@IAEJXZ PROC			; COutBuffer::FlushPart
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN7@FlushPart
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv73[ebp], edx
	jmp	SHORT $LN8@FlushPart
$LN7@FlushPart:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv73[ebp], edx
$LN8@FlushPart:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR _size$[ebp], eax
; Line 53
	mov	DWORD PTR _result$[ebp], 0
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $LN4@FlushPart
; Line 59
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+12]
	push	ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	add	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
$LN4@FlushPart:
; Line 67
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN3@FlushPart
; Line 69
	mov	DWORD PTR _processedSize$66119[ebp], 0
; Line 70
	mov	esi, esp
	lea	eax, DWORD PTR _processedSize$66119[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+12]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 71
	mov	edx, DWORD PTR _processedSize$66119[ebp]
	mov	DWORD PTR _size$[ebp], edx
$LN3@FlushPart:
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN2@FlushPart
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN2@FlushPart:
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN1@FlushPart
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+36], 1
; Line 79
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@FlushPart:
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+4]
	jbe	SHORT $LN9@FlushPart
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv150[ebp], ecx
	jmp	SHORT $LN10@FlushPart
$LN9@FlushPart:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR tv150[ebp], eax
$LN10@FlushPart:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv150[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 82
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+24]
	adc	ecx, DWORD PTR [edx+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR [edx+28], ecx
; Line 83
	mov	eax, DWORD PTR _result$[ebp]
; Line 84
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@FlushPart
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@FlushPart:
	DD	1
	DD	$LN12@FlushPart
$LN12@FlushPart:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@FlushPart
$LN11@FlushPart:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?FlushPart@COutBuffer@@IAEJXZ ENDP			; COutBuffer::FlushPart
_TEXT	ENDS
PUBLIC	?Flush@COutBuffer@@QAEJXZ			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$66128 = -8					; size = 4
_this$ = -4						; size = 4
?Flush@COutBuffer@@QAEJXZ PROC				; COutBuffer::Flush
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN3@Flush:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN2@Flush
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushPart@COutBuffer@@IAEJXZ		; COutBuffer::FlushPart
	mov	DWORD PTR _result$66128[ebp], eax
; Line 96
	cmp	DWORD PTR _result$66128[ebp], 0
	je	SHORT $LN1@Flush
; Line 97
	mov	eax, DWORD PTR _result$66128[ebp]
	jmp	SHORT $LN4@Flush
$LN1@Flush:
; Line 98
	jmp	SHORT $LN3@Flush
$LN2@Flush:
; Line 99
	xor	eax, eax
$LN4@Flush:
; Line 100
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@COutBuffer@@QAEJXZ ENDP				; COutBuffer::Flush
_TEXT	ENDS
PUBLIC	__TI2?AUCOutBufferException@@
PUBLIC	??0COutBufferException@@QAE@J@Z			; COutBufferException::COutBufferException
PUBLIC	?FlushWithCheck@COutBuffer@@QAEXXZ		; COutBuffer::FlushWithCheck
PUBLIC	__CTA2?AUCOutBufferException@@
PUBLIC	__CT??_R0?AUCOutBufferException@@@84
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AUCSystemException@@@84
PUBLIC	??_R0?AUCSystemException@@@8			; CSystemException `RTTI Type Descriptor'
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCSystemException@@@8
_DATA	SEGMENT
??_R0?AUCSystemException@@@8 DD FLAT:??_7type_info@@6B@	; CSystemException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCSystemException@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AUCSystemException@@@84
xdata$x	SEGMENT
__CT??_R0?AUCSystemException@@@84 DD 00H
	DD	FLAT:??_R0?AUCSystemException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AUCOutBufferException@@@8
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AUCOutBufferException@@@84
xdata$x	SEGMENT
__CT??_R0?AUCOutBufferException@@@84 DD 00H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA2?AUCOutBufferException@@
xdata$x	SEGMENT
__CTA2?AUCOutBufferException@@ DD 02H
	DD	FLAT:__CT??_R0?AUCOutBufferException@@@84
	DD	FLAT:__CT??_R0?AUCSystemException@@@84
xdata$x	ENDS
;	COMDAT __TI2?AUCOutBufferException@@
xdata$x	SEGMENT
__TI2?AUCOutBufferException@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AUCOutBufferException@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T66190 = -16						; size = 4
$T66189 = -12						; size = 4
_result$ = -8						; size = 4
_this$ = -4						; size = 4
?FlushWithCheck@COutBuffer@@QAEXXZ PROC			; COutBuffer::FlushWithCheck
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
	mov	DWORD PTR _result$[ebp], eax
; Line 108
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN3@FlushWithC
; Line 109
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T66190[ebp]
	call	??0COutBufferException@@QAE@J@Z		; COutBufferException::COutBufferException
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T66189[ebp], ecx
	push	OFFSET __TI2?AUCOutBufferException@@
	lea	edx, DWORD PTR $T66189[ebp]
	push	edx
	call	__CxxThrowException@8
$LN3@FlushWithC:
; Line 111
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FlushWithCheck@COutBuffer@@QAEXXZ ENDP			; COutBuffer::FlushWithCheck
_TEXT	ENDS
PUBLIC	??0CSystemException@@QAE@J@Z			; CSystemException::CSystemException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0COutBufferException@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_errorCode$ = 8						; size = 4
??0COutBufferException@@QAE@J@Z PROC			; COutBufferException::COutBufferException, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 13
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSystemException@@QAE@J@Z		; CSystemException::CSystemException
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0COutBufferException@@QAE@J@Z ENDP			; COutBufferException::COutBufferException
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CSystemException@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_errorCode$ = 8						; size = 4
??0CSystemException@@QAE@J@Z PROC			; CSystemException::CSystemException, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myexception.h
; Line 11
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CSystemException@@QAE@J@Z ENDP			; CSystemException::CSystemException
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Common\EnumDirItems.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG73294 DB	':', 00H, '*', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??1CDirItem@@QAE@XZ				; CDirItem::~CDirItem
PUBLIC	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
PUBLIC	?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z ; CObjectVector<CDirItem>::Add
PUBLIC	??0CDirItem@@QAE@XZ				; CDirItem::CDirItem
PUBLIC	?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ; CDirItems::AddDirFileInfo
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z$0
__ehfuncinfo$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_di$ = -100						; size = 80
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_phyParent$ = 8						; size = 4
_logParent$ = 12					; size = 4
_secureIndex$ = 16					; size = 4
_fi$ = 20						; size = 4
?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z PROC ; CDirItems::AddDirFileInfo
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 27
	lea	ecx, DWORD PTR _di$[ebp]
	call	??0CDirItem@@QAE@XZ			; CDirItem::CDirItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 28
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _di$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _di$[ebp+4], edx
; Line 29
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _di$[ebp+8], ecx
	mov	DWORD PTR _di$[ebp+12], edx
; Line 30
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _di$[ebp+16], ecx
	mov	DWORD PTR _di$[ebp+20], edx
; Line 31
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [eax+28]
	mov	DWORD PTR _di$[ebp+24], ecx
	mov	DWORD PTR _di$[ebp+28], edx
; Line 32
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _di$[ebp+60], ecx
; Line 33
	mov	edx, DWORD PTR _fi$[ebp]
	mov	al, BYTE PTR [edx+36]
	mov	BYTE PTR _di$[ebp+76], al
; Line 34
	mov	ecx, DWORD PTR _phyParent$[ebp]
	mov	DWORD PTR _di$[ebp+64], ecx
; Line 35
	mov	edx, DWORD PTR _logParent$[ebp]
	mov	DWORD PTR _di$[ebp+68], edx
; Line 36
	mov	eax, DWORD PTR _secureIndex$[ebp]
	mov	DWORD PTR _di$[ebp+72], eax
; Line 37
	mov	ecx, DWORD PTR _fi$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	lea	ecx, DWORD PTR _di$[ebp+32]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 41
	lea	edx, DWORD PTR _di$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z ; CObjectVector<CDirItem>::Add
; Line 43
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@AddDirFile
; Line 44
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+60]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], edx
	mov	DWORD PTR [ecx+60], eax
	jmp	SHORT $LN3@AddDirFile
$LN4@AddDirFile:
; Line 45
	mov	edx, DWORD PTR _fi$[ebp]
	movzx	eax, BYTE PTR [edx+36]
	test	eax, eax
	je	SHORT $LN2@AddDirFile
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+76]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], edx
	mov	DWORD PTR [ecx+76], eax
; Line 48
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [edx+88]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+92]
	adc	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], ecx
	mov	DWORD PTR [eax+92], edx
; Line 50
	jmp	SHORT $LN3@AddDirFile
$LN2@AddDirFile:
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+68]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], edx
	mov	DWORD PTR [ecx+68], eax
; Line 53
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR [edx+80]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+84]
	adc	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], ecx
	mov	DWORD PTR [eax+84], edx
$LN3@AddDirFile:
; Line 55
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _di$[ebp]
	call	??1CDirItem@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@AddDirFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN11@AddDirFile:
	DD	1
	DD	$LN10@AddDirFile
$LN10@AddDirFile:
	DD	-100					; ffffff9cH
	DD	80					; 00000050H
	DD	$LN8@AddDirFile
$LN8@AddDirFile:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z$0:
	lea	ecx, DWORD PTR _di$[ebp]
	jmp	??1CDirItem@@QAE@XZ
__ehhandler$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ENDP ; CDirItems::AddDirFileInfo
PUBLIC	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NFind::CFileInfoBase::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z PROC ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ENDP ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
_TEXT	ENDS
PUBLIC	??1?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::~CBuffer<unsigned char>
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??0?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::CBuffer<unsigned char>
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
xdata$x	SEGMENT
__unwindtable$??0CDirItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDirItem@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDirItem@@QAE@XZ$1
__ehfuncinfo$??0CDirItem@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDirItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDirItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDirItem@@QAE@XZ PROC				; CDirItem::CDirItem, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDirItem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+76], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDirItem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CDirItem@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??0CDirItem@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDirItem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDirItem@@QAE@XZ ENDP				; CDirItem::CDirItem
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T74274 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74274[ebp], ecx
	mov	edx, DWORD PTR $T74274[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDirItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDirItem@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDirItem@@QAE@XZ$1
__ehfuncinfo$??1CDirItem@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CDirItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDirItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDirItem@@QAE@XZ PROC				; CDirItem::~CDirItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDirItem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDirItem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CDirItem@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??1CDirItem@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDirItem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDirItem@@QAE@XZ ENDP				; CDirItem::~CDirItem
PUBLIC	?AddError@CDirItems@@QAEJABVUString@@K@Z	; CDirItems::AddError
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?AddError@CDirItems@@QAEJABVUString@@K@Z PROC		; CDirItems::AddError
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+100]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	DWORD PTR [eax+100], edx
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	je	SHORT $LN1@AddError
; Line 61
	mov	esi, esp
	mov	edx, DWORD PTR _errorCode$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@AddError
$LN1@AddError:
; Line 62
	xor	eax, eax
$LN2@AddError:
; Line 63
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddError@CDirItems@@QAEJABVUString@@K@Z ENDP		; CDirItems::AddError
_TEXT	ENDS
PUBLIC	?AddError@CDirItems@@QAEJABVUString@@@Z		; CDirItems::AddError
EXTRN	__imp__GetLastError@0:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
?AddError@CDirItems@@QAEJABVUString@@@Z PROC		; CDirItems::AddError
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@K@Z ; CDirItems::AddError
; Line 68
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddError@CDirItems@@QAEJABVUString@@@Z ENDP		; CDirItems::AddError
_TEXT	ENDS
PUBLIC	?ScanProgress@CDirItems@@QAEJABVUString@@@Z	; CDirItems::ScanProgress
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dirPath$ = 8						; size = 4
?ScanProgress@CDirItems@@QAEJABVUString@@@Z PROC	; CDirItems::ScanProgress
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN1@ScanProgre
; Line 75
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _dirPath$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@ScanProgre
$LN1@ScanProgre:
; Line 76
	xor	eax, eax
$LN2@ScanProgre:
; Line 77
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ScanProgress@CDirItems@@QAEJABVUString@@@Z ENDP	; CDirItems::ScanProgress
_TEXT	ENDS
PUBLIC	_wmemcpy
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?GetBuf_SetEnd@UString@@QAEPA_WI@Z		; UString::GetBuf_SetEnd
PUBLIC	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
PUBLIC	??A?$CRecordVector@H@@QBEABHI@Z			; CRecordVector<int>::operator[]
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z ; CDirItems::GetPrefixesPath
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
xdata$x	SEGMENT
__unwindtable$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z$0
__ehfuncinfo$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74293 = -56						; size = 4
_s$73098 = -52						; size = 4
_p$ = -48						; size = 4
_i$ = -44						; size = 4
_len$ = -40						; size = 4
_path$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_parents$ = 12						; size = 4
_index$ = 16						; size = 4
_name$ = 20						; size = 4
?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z PROC ; CDirItems::GetPrefixesPath
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T74293[ebp], 0
; Line 81
	lea	ecx, DWORD PTR _path$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 82
	mov	ecx, DWORD PTR _name$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR _len$[ebp], eax
; Line 85
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN6@GetPrefixe
$LN5@GetPrefixe:
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _parents$[ebp]
	call	??A?$CRecordVector@H@@QBEABHI@Z		; CRecordVector<int>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _i$[ebp], edx
$LN6@GetPrefixe:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN4@GetPrefixe
; Line 86
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	ecx, eax
	call	?Len@UString@@QBEIXZ			; UString::Len
	add	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], eax
	jmp	SHORT $LN5@GetPrefixe
$LN4@GetPrefixe:
; Line 88
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _path$[ebp]
	call	?GetBuf_SetEnd@UString@@QAEPA_WI@Z	; UString::GetBuf_SetEnd
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [eax+edx*2]
	mov	DWORD PTR _p$[ebp], eax
; Line 90
	mov	ecx, DWORD PTR _name$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	shl	eax, 1
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _p$[ebp], ecx
; Line 91
	mov	ecx, DWORD PTR _name$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_wmemcpy
	add	esp, 12					; 0000000cH
; Line 93
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN3@GetPrefixe
$LN2@GetPrefixe:
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _parents$[ebp]
	call	??A?$CRecordVector@H@@QBEABHI@Z		; CRecordVector<int>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _i$[ebp], edx
$LN3@GetPrefixe:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN1@GetPrefixe
; Line 95
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	DWORD PTR _s$73098[ebp], eax
; Line 96
	mov	ecx, DWORD PTR _s$73098[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	shl	eax, 1
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _p$[ebp], ecx
; Line 97
	mov	ecx, DWORD PTR _s$73098[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	mov	ecx, DWORD PTR _s$73098[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_wmemcpy
	add	esp, 12					; 0000000cH
; Line 98
	jmp	SHORT $LN2@GetPrefixe
$LN1@GetPrefixe:
; Line 100
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	ecx, DWORD PTR $T74293[ebp]
	or	ecx, 1
	mov	DWORD PTR $T74293[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 101
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@GetPrefixe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN15@GetPrefixe:
	DD	1
	DD	$LN14@GetPrefixe
$LN14@GetPrefixe:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN12@GetPrefixe
$LN12@GetPrefixe:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z$0:
	lea	ecx, DWORD PTR _path$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z$1:
	mov	eax, DWORD PTR $T74293[ebp]
	and	eax, 1
	je	$LN11@GetPrefixe
	and	DWORD PTR $T74293[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN11@GetPrefixe:
	ret	0
__ehhandler$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z ENDP ; CDirItems::GetPrefixesPath
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _wmemcpy
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S2$ = 12						; size = 4
__N$ = 16						; size = 4
_wmemcpy PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\wchar.h
; Line 1210
	push	ebp
	mov	ebp, esp
; Line 1213
	mov	eax, DWORD PTR __N$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR __S2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __S1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1215
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_wmemcpy ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
EXTRN	?ReAlloc2@UString@@AAEXI@Z:PROC			; UString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf_SetEnd@UString@@QAEPA_WI@Z
_TEXT	SEGMENT
_chars$ = -8						; size = 4
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf_SetEnd@UString@@QAEPA_WI@Z PROC			; UString::GetBuf_SetEnd, COMDAT
; _this$ = ecx
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf_Set
; Line 493
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@UString@@AAEXI@Z		; UString::ReAlloc2
$LN1@GetBuf_Set:
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _chars$[ebp], ecx
; Line 495
	xor	edx, edx
	mov	eax, DWORD PTR _minLen$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 496
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _minLen$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 497
	mov	eax, DWORD PTR _chars$[ebp]
; Line 498
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf_SetEnd@UString@@QAEPA_WI@Z ENDP			; UString::GetBuf_SetEnd
_TEXT	ENDS
PUBLIC	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
PUBLIC	?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z	; CDirItems::GetPhyPath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T74312 = -12						; size = 4
_di$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 4
?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z PROC		; CDirItems::GetPhyPath
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T74312[ebp], 0
; Line 105
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR _di$[ebp], eax
; Line 106
	mov	ecx, DWORD PTR _di$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _di$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z ; CDirItems::GetPrefixesPath
	mov	eax, DWORD PTR $T74312[ebp]
	or	eax, 1
	mov	DWORD PTR $T74312[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 107
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z ENDP		; CDirItems::GetPhyPath
_TEXT	ENDS
PUBLIC	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z	; CDirItems::GetLogPath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T74316 = -12						; size = 4
_di$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_index$ = 12						; size = 4
?GetLogPath@CDirItems@@QBE?AVUString@@I@Z PROC		; CDirItems::GetLogPath
; _this$ = ecx
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T74316[ebp], 0
; Line 111
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR _di$[ebp], eax
; Line 112
	mov	ecx, DWORD PTR _di$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _di$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrefixesPath@CDirItems@@ABE?AVUString@@ABV?$CRecordVector@H@@HABV2@@Z ; CDirItems::GetPrefixesPath
	mov	eax, DWORD PTR $T74316[ebp]
	or	eax, 1
	mov	DWORD PTR $T74316[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 113
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ENDP		; CDirItems::GetLogPath
_TEXT	ENDS
PUBLIC	?ReserveDown@?$CObjectVector@UCDirItem@@@@QAEXXZ ; CObjectVector<CDirItem>::ReserveDown
PUBLIC	?ReserveDown@?$CRecordVector@H@@QAEXXZ		; CRecordVector<int>::ReserveDown
PUBLIC	?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ	; CObjectVector<UString>::ReserveDown
PUBLIC	?ReserveDown@CDirItems@@QAEXXZ			; CDirItems::ReserveDown
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReserveDown@CDirItems@@QAEXXZ PROC			; CDirItems::ReserveDown
; _this$ = ecx
; Line 116
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ ; CObjectVector<UString>::ReserveDown
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?ReserveDown@?$CRecordVector@H@@QAEXXZ	; CRecordVector<int>::ReserveDown
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ReserveDown@?$CRecordVector@H@@QAEXXZ	; CRecordVector<int>::ReserveDown
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?ReserveDown@?$CObjectVector@UCDirItem@@@@QAEXXZ ; CObjectVector<CDirItem>::ReserveDown
; Line 121
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveDown@CDirItems@@QAEXXZ ENDP			; CDirItems::ReserveDown
_TEXT	ENDS
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
PUBLIC	?Add@?$CRecordVector@H@@QAEIH@Z			; CRecordVector<int>::Add
PUBLIC	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z	; CDirItems::AddPrefix
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_phyParent$ = 8						; size = 4
_logParent$ = 12					; size = 4
_prefix$ = 16						; size = 4
?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z PROC		; CDirItems::AddPrefix
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _phyParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Add@?$CRecordVector@H@@QAEIH@Z		; CRecordVector<int>::Add
; Line 126
	mov	ecx, DWORD PTR _logParent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Add@?$CRecordVector@H@@QAEIH@Z		; CRecordVector<int>::Add
; Line 127
	mov	edx, DWORD PTR _prefix$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 128
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ENDP		; CDirItems::AddPrefix
_TEXT	ENDS
PUBLIC	?DeleteBack@?$CObjectVector@VUString@@@@QAEXXZ	; CObjectVector<UString>::DeleteBack
PUBLIC	?DeleteBack@?$CRecordVector@H@@QAEXXZ		; CRecordVector<int>::DeleteBack
PUBLIC	?DeleteLastPrefix@CDirItems@@QAEXXZ		; CDirItems::DeleteLastPrefix
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeleteLastPrefix@CDirItems@@QAEXXZ PROC		; CDirItems::DeleteLastPrefix
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?DeleteBack@?$CRecordVector@H@@QAEXXZ	; CRecordVector<int>::DeleteBack
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?DeleteBack@?$CRecordVector@H@@QAEXXZ	; CRecordVector<int>::DeleteBack
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteBack@?$CObjectVector@VUString@@@@QAEXXZ ; CObjectVector<UString>::DeleteBack
; Line 135
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteLastPrefix@CDirItems@@QAEXXZ ENDP		; CDirItems::DeleteLastPrefix
_TEXT	ENDS
PUBLIC	??1CUniqBlocks@@QAE@XZ				; CUniqBlocks::~CUniqBlocks
PUBLIC	??1?$CObjectVector@UCDirItem@@@@QAE@XZ		; CObjectVector<CDirItem>::~CObjectVector<CDirItem>
PUBLIC	??1?$CRecordVector@H@@QAE@XZ			; CRecordVector<int>::~CRecordVector<int>
PUBLIC	??1?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	??0CUniqBlocks@@QAE@XZ				; CUniqBlocks::CUniqBlocks
PUBLIC	??0CDirItemsStat@@QAE@XZ			; CDirItemsStat::CDirItemsStat
PUBLIC	??0?$CObjectVector@UCDirItem@@@@QAE@XZ		; CObjectVector<CDirItem>::CObjectVector<CDirItem>
PUBLIC	??0?$CRecordVector@H@@QAE@XZ			; CRecordVector<int>::CRecordVector<int>
PUBLIC	??0?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::CObjectVector<UString>
PUBLIC	??0CDirItems@@QAE@XZ				; CDirItems::CDirItems
EXTRN	?InitLocalPrivileges@@YG_NXZ:PROC		; InitLocalPrivileges
xdata$x	SEGMENT
__ehfuncinfo$??0CDirItems@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0CDirItems@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CDirItems@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDirItems@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDirItems@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDirItems@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDirItems@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CDirItems@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CDirItems@@QAE@XZ$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDirItems@@QAE@XZ PROC				; CDirItems::CDirItems
; _this$ = ecx
; Line 146
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDirItems@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::CRecordVector<int>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::CRecordVector<int>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0?$CObjectVector@UCDirItem@@@@QAE@XZ	; CObjectVector<CDirItem>::CObjectVector<CDirItem>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+48], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+49], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0CDirItemsStat@@QAE@XZ		; CDirItemsStat::CDirItemsStat
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0CUniqBlocks@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+149], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+152], 0
; Line 148
	call	?InitLocalPrivileges@@YG_NXZ		; InitLocalPrivileges
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+148], al
; Line 150
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDirItems@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??0CDirItems@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::~CRecordVector<int>
__unwindfunclet$??0CDirItems@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::~CRecordVector<int>
__unwindfunclet$??0CDirItems@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1?$CObjectVector@UCDirItem@@@@QAE@XZ	; CObjectVector<CDirItem>::~CObjectVector<CDirItem>
__unwindfunclet$??0CDirItems@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1CUniqBlocks@@QAE@XZ
__unwindfunclet$??0CDirItems@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??0CDirItems@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDirItems@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDirItems@@QAE@XZ ENDP				; CDirItems::CDirItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDirItemsStat@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDirItemsStat@@QAE@XZ PROC				; CDirItemsStat::CDirItemsStat, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR [ecx+36], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], 0
	mov	DWORD PTR [edx+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDirItemsStat@@QAE@XZ ENDP				; CDirItemsStat::CDirItemsStat
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
PUBLIC	??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ	; CObjectVector<CBuffer<unsigned char> >::~CObjectVector<CBuffer<unsigned char> >
PUBLIC	??0?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
PUBLIC	??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ	; CObjectVector<CBuffer<unsigned char> >::CObjectVector<CBuffer<unsigned char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CUniqBlocks@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CUniqBlocks@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CUniqBlocks@@QAE@XZ$1
__ehfuncinfo$??0CUniqBlocks@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CUniqBlocks@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CUniqBlocks@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CUniqBlocks@@QAE@XZ PROC				; CUniqBlocks::CUniqBlocks, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CUniqBlocks@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ ; CObjectVector<CBuffer<unsigned char> >::CObjectVector<CBuffer<unsigned char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::CRecordVector<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::CRecordVector<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CUniqBlocks@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ ; CObjectVector<CBuffer<unsigned char> >::~CObjectVector<CBuffer<unsigned char> >
__unwindfunclet$??0CUniqBlocks@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
__ehhandler$??0CUniqBlocks@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CUniqBlocks@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CUniqBlocks@@QAE@XZ ENDP				; CUniqBlocks::CUniqBlocks
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CUniqBlocks@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CUniqBlocks@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CUniqBlocks@@QAE@XZ$1
__ehfuncinfo$??1CUniqBlocks@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CUniqBlocks@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CUniqBlocks@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CUniqBlocks@@QAE@XZ PROC				; CUniqBlocks::~CUniqBlocks, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CUniqBlocks@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ ; CObjectVector<CBuffer<unsigned char> >::~CObjectVector<CBuffer<unsigned char> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CUniqBlocks@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ ; CObjectVector<CBuffer<unsigned char> >::~CObjectVector<CBuffer<unsigned char> >
__unwindfunclet$??1CUniqBlocks@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
__ehhandler$??1CUniqBlocks@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CUniqBlocks@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CUniqBlocks@@QAE@XZ ENDP				; CUniqBlocks::~CUniqBlocks
PUBLIC	?Alloc@?$CBuffer@E@@QAEXI@Z			; CBuffer<unsigned char>::Alloc
PUBLIC	??B?$CBuffer@E@@QAEPAEXZ			; CBuffer<unsigned char>::operator unsigned char *
PUBLIC	?Size@?$CBuffer@E@@QBEIXZ			; CBuffer<unsigned char>::Size
PUBLIC	?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z ; CDirItems::AddSecurityItem
EXTRN	?AddUniq@CUniqBlocks@@QAEIPBEI@Z:PROC		; CUniqBlocks::AddUniq
EXTRN	__imp__GetFileSecurityW@20:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -28						; size = 4
_secureSize$ = -20					; size = 4
_errorCode$ = -12					; size = 4
_securInfo$ = -8					; size = 4
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_secureIndex$ = 12					; size = 4
?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z PROC	; CDirItems::AddSecurityItem
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 155
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 156
	mov	eax, DWORD PTR _secureIndex$[ebp]
	mov	DWORD PTR [eax], -1
; Line 161
	mov	DWORD PTR _securInfo$[ebp], 7
; Line 162
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+148]
	test	edx, edx
	je	SHORT $LN13@AddSecurit
; Line 163
	mov	eax, DWORD PTR _securInfo$[ebp]
	or	eax, 8
	mov	DWORD PTR _securInfo$[ebp], eax
$LN13@AddSecurit:
; Line 165
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 168
	mov	esi, esp
	lea	ecx, DWORD PTR _secureSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	edx, DWORD PTR _securInfo$[ebp]
	push	edx
	mov	ecx, DWORD PTR _path$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	DWORD PTR __imp__GetFileSecurityW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 170
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN12@AddSecurit
; Line 172
	cmp	DWORD PTR _secureSize$[ebp], 0
	jne	SHORT $LN11@AddSecurit
; Line 173
	xor	eax, eax
	jmp	$LN14@AddSecurit
$LN11@AddSecurit:
; Line 174
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	cmp	DWORD PTR _secureSize$[ebp], eax
	jbe	SHORT $LN10@AddSecurit
; Line 175
	mov	DWORD PTR _errorCode$[ebp], 1
$LN10@AddSecurit:
; Line 177
	jmp	$LN9@AddSecurit
$LN12@AddSecurit:
; Line 179
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _errorCode$[ebp], eax
; Line 180
	cmp	DWORD PTR _errorCode$[ebp], 122		; 0000007aH
	jne	$LN9@AddSecurit
; Line 182
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	cmp	DWORD PTR _secureSize$[ebp], eax
	ja	SHORT $LN7@AddSecurit
; Line 183
	mov	DWORD PTR _errorCode$[ebp], 1
; Line 184
	jmp	$LN9@AddSecurit
$LN7@AddSecurit:
; Line 186
	mov	eax, DWORD PTR _secureSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 187
	mov	esi, esp
	lea	ecx, DWORD PTR _secureSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	edx, DWORD PTR _securInfo$[ebp]
	push	edx
	mov	ecx, DWORD PTR _path$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	DWORD PTR __imp__GetFileSecurityW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 188
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN5@AddSecurit
; Line 190
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	cmp	DWORD PTR _secureSize$[ebp], eax
	je	SHORT $LN4@AddSecurit
; Line 191
	mov	DWORD PTR _errorCode$[ebp], 1
$LN4@AddSecurit:
; Line 193
	jmp	SHORT $LN9@AddSecurit
$LN5@AddSecurit:
; Line 194
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _errorCode$[ebp], eax
$LN9@AddSecurit:
; Line 199
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN2@AddSecurit
; Line 201
	mov	eax, DWORD PTR _secureSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?AddUniq@CUniqBlocks@@QAEIPBEI@Z	; CUniqBlocks::AddUniq
	mov	ecx, DWORD PTR _secureIndex$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 202
	xor	eax, eax
	jmp	SHORT $LN14@AddSecurit
$LN2@AddSecurit:
; Line 205
	cmp	DWORD PTR _errorCode$[ebp], 0
	jne	SHORT $LN1@AddSecurit
; Line 206
	mov	DWORD PTR _errorCode$[ebp], 1
$LN1@AddSecurit:
; Line 207
	mov	edx, DWORD PTR _errorCode$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@K@Z ; CDirItems::AddError
$LN14@AddSecurit:
; Line 208
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@AddSecurit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN18@AddSecurit:
	DD	1
	DD	$LN17@AddSecurit
$LN17@AddSecurit:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN16@AddSecurit
$LN16@AddSecurit:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z ENDP	; CDirItems::AddSecurityItem
_TEXT	ENDS
PUBLIC	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CEnumerator::~CEnumerator
PUBLIC	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::~CFileInfo
PUBLIC	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::CFileInfo
PUBLIC	??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CEnumerator::CEnumerator
PUBLIC	??H@YG?AVUString@@ABV0@_W@Z			; operator+
PUBLIC	?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z	; CDirItems::EnumerateDir
EXTRN	??H@YG?AVUString@@ABV0@0@Z:PROC			; operator+
EXTRN	?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@AA_N@Z:PROC ; NWindows::NFile::NFind::CEnumerator::Next
xdata$x	SEGMENT
__ehfuncinfo$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv198 = -252						; size = 4
tv160 = -248						; size = 4
tv191 = -244						; size = 4
tv80 = -240						; size = 4
tv183 = -236						; size = 4
tv202 = -232						; size = 4
$T74368 = -228						; size = 4
$T74367 = -224						; size = 12
$T74366 = -212						; size = 4
$T74365 = -208						; size = 4
$T74364 = -204						; size = 12
$T74363 = -192						; size = 4
$T74362 = -188						; size = 4
$T74361 = -184						; size = 12
___result__$73199 = -172				; size = 4
_parent$73198 = -168					; size = 4
_name2$73196 = -160					; size = 12
___result__$73192 = -144				; size = 4
___result__$73187 = -140				; size = 4
_secureIndex$73185 = -132				; size = 4
_found$73179 = -117					; size = 1
_fi$73178 = -108					; size = 56
_ttt$73174 = -48					; size = 4
_enumerator$ = -40					; size = 16
___result__$73170 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_phyParent$ = 8						; size = 4
_logParent$ = 12					; size = 4
_phyPrefix$ = 16					; size = 4
?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z PROC	; CDirItems::EnumerateDir
; _this$ = ecx
; Line 213
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScanProgress@CDirItems@@QAEJABVUString@@@Z ; CDirItems::ScanProgress
	mov	DWORD PTR ___result__$73170[ebp], eax
	cmp	DWORD PTR ___result__$73170[ebp], 0
	je	SHORT $LN12@EnumerateD
	mov	eax, DWORD PTR ___result__$73170[ebp]
	jmp	$LN13@EnumerateD
$LN12@EnumerateD:
; Line 216
	push	42					; 0000002aH
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74361[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@_W@Z		; operator+
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR tv202[ebp]
	mov	DWORD PTR tv183[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv183[ebp]
	push	ecx
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CEnumerator::CEnumerator
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T74361[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 217
	mov	DWORD PTR _ttt$73174[ebp], 0
	jmp	SHORT $LN11@EnumerateD
$LN10@EnumerateD:
	mov	edx, DWORD PTR _ttt$73174[ebp]
	add	edx, 1
	mov	DWORD PTR _ttt$73174[ebp], edx
$LN11@EnumerateD:
; Line 219
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 221
	lea	eax, DWORD PTR _found$73179[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi$73178[ebp]
	push	ecx
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@AA_N@Z ; NWindows::NFile::NFind::CEnumerator::Next
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN8@EnumerateD
; Line 223
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@@Z	; CDirItems::AddError
	mov	DWORD PTR $T74362[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74362[ebp]
	jmp	$LN13@EnumerateD
$LN8@EnumerateD:
; Line 225
	movzx	ecx, BYTE PTR _found$73179[ebp]
	test	ecx, ecx
	jne	SHORT $LN7@EnumerateD
; Line 226
	mov	DWORD PTR $T74363[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74363[ebp]
	jmp	$LN13@EnumerateD
$LN7@EnumerateD:
; Line 228
	mov	DWORD PTR _secureIndex$73185[ebp], -1
; Line 230
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+149]
	test	eax, eax
	je	$LN6@EnumerateD
; Line 232
	lea	ecx, DWORD PTR _secureIndex$73185[ebp]
	push	ecx
	lea	edx, DWORD PTR _fi$73178[ebp+40]
	push	edx
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T74364[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv80[ebp], eax
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR tv191[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv191[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z ; CDirItems::AddSecurityItem
	mov	DWORD PTR ___result__$73187[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T74364[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	cmp	DWORD PTR ___result__$73187[ebp], 0
	je	SHORT $LN6@EnumerateD
	mov	ecx, DWORD PTR ___result__$73187[ebp]
	mov	DWORD PTR $T74365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74365[ebp]
	jmp	$LN13@EnumerateD
$LN6@EnumerateD:
; Line 236
	lea	edx, DWORD PTR _fi$73178[ebp]
	push	edx
	mov	eax, DWORD PTR _secureIndex$73185[ebp]
	push	eax
	mov	ecx, DWORD PTR _logParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyParent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ; CDirItems::AddDirFileInfo
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN4@EnumerateD
	mov	ecx, DWORD PTR _ttt$73174[ebp]
	and	ecx, 4095				; 00000fffH
	cmp	ecx, 4095				; 00000fffH
	jne	SHORT $LN4@EnumerateD
; Line 240
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScanProgress@CDirItems@@QAEJABVUString@@@Z ; CDirItems::ScanProgress
	mov	DWORD PTR ___result__$73192[ebp], eax
	cmp	DWORD PTR ___result__$73192[ebp], 0
	je	SHORT $LN4@EnumerateD
	mov	eax, DWORD PTR ___result__$73192[ebp]
	mov	DWORD PTR $T74366[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74366[ebp]
	jmp	$LN13@EnumerateD
$LN4@EnumerateD:
; Line 243
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@EnumerateD
; Line 245
	push	92					; 0000005cH
	lea	edx, DWORD PTR _fi$73178[ebp+40]
	push	edx
	lea	eax, DWORD PTR _name2$73196[ebp]
	push	eax
	call	??H@YG?AVUString@@ABV0@_W@Z		; operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 246
	lea	ecx, DWORD PTR _name2$73196[ebp]
	push	ecx
	mov	edx, DWORD PTR _logParent$[ebp]
	push	edx
	mov	eax, DWORD PTR _phyParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR _parent$73198[ebp], eax
; Line 247
	lea	ecx, DWORD PTR _name2$73196[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	lea	eax, DWORD PTR $T74367[ebp]
	push	eax
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv198[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv198[ebp]
	push	edx
	mov	eax, DWORD PTR _parent$73198[ebp]
	push	eax
	mov	ecx, DWORD PTR _parent$73198[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z ; CDirItems::EnumerateDir
	mov	DWORD PTR ___result__$73199[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T74367[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	cmp	DWORD PTR ___result__$73199[ebp], 0
	je	SHORT $LN1@EnumerateD
	mov	edx, DWORD PTR ___result__$73199[ebp]
	mov	DWORD PTR $T74368[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _name2$73196[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74368[ebp]
	jmp	SHORT $LN13@EnumerateD
$LN1@EnumerateD:
; Line 248
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _name2$73196[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN2@EnumerateD:
; Line 249
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fi$73178[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN10@EnumerateD
; Line 250
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
$LN13@EnumerateD:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@EnumerateD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN28@EnumerateD:
	DD	5
	DD	$LN27@EnumerateD
$LN27@EnumerateD:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN21@EnumerateD
	DD	-108					; ffffff94H
	DD	56					; 00000038H
	DD	$LN22@EnumerateD
	DD	-117					; ffffff8bH
	DD	1
	DD	$LN23@EnumerateD
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN24@EnumerateD
	DD	-160					; ffffff60H
	DD	12					; 0000000cH
	DD	$LN25@EnumerateD
$LN25@EnumerateD:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN24@EnumerateD:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN23@EnumerateD:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN22@EnumerateD:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN21@EnumerateD:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$0:
	lea	ecx, DWORD PTR $T74361[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$1:
	lea	ecx, DWORD PTR _enumerator$[ebp]
	jmp	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$2:
	lea	ecx, DWORD PTR _fi$73178[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$3:
	lea	ecx, DWORD PTR $T74364[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$4:
	lea	ecx, DWORD PTR _name2$73196[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z$5:
	lea	ecx, DWORD PTR $T74367[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z ENDP	; CDirItems::EnumerateDir
EXTRN	??0UString@@AAE@ABV0@_W@Z:PROC			; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??H@YG?AVUString@@ABV0@_W@Z
_TEXT	SEGMENT
$T74388 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 2
??H@YG?AVUString@@ABV0@_W@Z PROC			; operator+, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 437
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T74388[ebp], 0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@AAE@ABV0@_W@Z		; UString::UString
	mov	edx, DWORD PTR $T74388[ebp]
	or	edx, 1
	mov	DWORD PTR $T74388[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??H@YG?AVUString@@ABV0@_W@Z ENDP			; operator+
_TEXT	ENDS
PUBLIC	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFile::~CFindFile
PUBLIC	??0CFindFile@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFile::CFindFile
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
xdata$x	SEGMENT
__unwindtable$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0
__ehfuncinfo$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wildcard$ = 8						; size = 4
??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z PROC ; NWindows::NFile::NFind::CEnumerator::CEnumerator, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _wildcard$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ENDP ; NWindows::NFile::NFind::CEnumerator::CEnumerator
PUBLIC	??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFindFile@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindFile@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFindFile::CFindFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindFile@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFindFile::CFindFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindFileBase::CFindFileBase, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
_TEXT	ENDS
PUBLIC	??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFindFile@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFindFile::~CFindFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFindFile@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFindFile::~CFindFile
_TEXT	ENDS
EXTRN	?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ:PROC ; NWindows::NFile::NFind::CFindFileBase::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CEnumerator::~CEnumerator, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CEnumerator::~CEnumerator
PUBLIC	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::CFileInfo
_TEXT	ENDS
EXTRN	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ:PROC ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::~CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::~CFileInfo
_TEXT	ENDS
PUBLIC	?Size@?$CObjectVector@VUString@@@@QBEIXZ	; CObjectVector<UString>::Size
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z ; CDirItems::EnumerateItems2
EXTRN	?SetFrom@UString@@QAEXPB_WI@Z:PROC		; UString::SetFrom
EXTRN	?ReverseFind_PathSepar@UString@@QBEHXZ:PROC	; UString::ReverseFind_PathSepar
EXTRN	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NFind::CFileInfo::Find
xdata$x	SEGMENT
__ehfuncinfo$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv226 = -252						; size = 4
tv148 = -248						; size = 4
tv224 = -244						; size = 4
tv183 = -240						; size = 4
tv83 = -236						; size = 4
tv73 = -232						; size = 4
$T74438 = -228						; size = 4
$T74437 = -224						; size = 12
$T74436 = -212						; size = 12
$T74435 = -200						; size = 4
$T74434 = -196						; size = 4
___result__$73244 = -192				; size = 4
_parent$73243 = -188					; size = 4
_name2$73241 = -180					; size = 12
___result__$73237 = -164				; size = 4
_secureIndex$73235 = -156				; size = 4
_phyParentCur$73233 = -148				; size = 4
_phyPrefixCur$73232 = -140				; size = 12
_delimiter$73231 = -124					; size = 4
___result__$73227 = -120				; size = 4
_phyPath$73224 = -112					; size = 12
_fi$73223 = -92						; size = 56
_filePath$73222 = -32					; size = 4
_i$73218 = -28						; size = 4
_logParent$ = -24					; size = 4
_phyParent$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_phyPrefix$ = 8						; size = 4
_logPrefix$ = 12					; size = 4
_filePaths$ = 16					; size = 4
_requestedPaths$ = 20					; size = 4
?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z PROC ; CDirItems::EnumerateItems2
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 257
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 258
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN14@EnumerateI
	mov	DWORD PTR tv73[ebp], -1
	jmp	SHORT $LN15@EnumerateI
$LN14@EnumerateI:
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	push	-1
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR tv73[ebp], eax
$LN15@EnumerateI:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _phyParent$[ebp], edx
; Line 259
	mov	ecx, DWORD PTR _logPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@EnumerateI
	mov	DWORD PTR tv83[ebp], -1
	jmp	SHORT $LN17@EnumerateI
$LN16@EnumerateI:
	mov	ecx, DWORD PTR _logPrefix$[ebp]
	push	ecx
	push	-1
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR tv83[ebp], eax
$LN17@EnumerateI:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _logParent$[ebp], edx
; Line 261
	mov	DWORD PTR _i$73218[ebp], 0
	jmp	SHORT $LN11@EnumerateI
$LN10@EnumerateI:
	mov	eax, DWORD PTR _i$73218[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73218[ebp], eax
$LN11@EnumerateI:
	mov	ecx, DWORD PTR _filePaths$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _i$73218[ebp], eax
	jae	$LN9@EnumerateI
; Line 263
	mov	ecx, DWORD PTR _i$73218[ebp]
	push	ecx
	mov	ecx, DWORD PTR _filePaths$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	DWORD PTR _filePath$73222[ebp], eax
; Line 264
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
	mov	edx, DWORD PTR _filePath$73222[ebp]
	push	edx
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 266
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN8@EnumerateI
; Line 268
	lea	eax, DWORD PTR _phyPath$73224[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@@Z	; CDirItems::AddError
	mov	DWORD PTR ___result__$73227[ebp], eax
	cmp	DWORD PTR ___result__$73227[ebp], 0
	je	SHORT $LN7@EnumerateI
	mov	ecx, DWORD PTR ___result__$73227[ebp]
	mov	DWORD PTR $T74434[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74434[ebp]
	jmp	$LN12@EnumerateI
$LN7@EnumerateI:
; Line 269
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN10@EnumerateI
$LN8@EnumerateI:
; Line 271
	cmp	DWORD PTR _requestedPaths$[ebp], 0
	je	SHORT $LN6@EnumerateI
; Line 272
	lea	edx, DWORD PTR _phyPath$73224[ebp]
	push	edx
	mov	ecx, DWORD PTR _requestedPaths$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
$LN6@EnumerateI:
; Line 274
	mov	ecx, DWORD PTR _filePath$73222[ebp]
	call	?ReverseFind_PathSepar@UString@@QBEHXZ	; UString::ReverseFind_PathSepar
	mov	DWORD PTR _delimiter$73231[ebp], eax
; Line 275
	lea	ecx, DWORD PTR _phyPrefixCur$73232[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 276
	mov	eax, DWORD PTR _phyParent$[ebp]
	mov	DWORD PTR _phyParentCur$73233[ebp], eax
; Line 277
	cmp	DWORD PTR _delimiter$73231[ebp], 0
	jl	SHORT $LN5@EnumerateI
; Line 279
	mov	ecx, DWORD PTR _delimiter$73231[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _filePath$73222[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _phyPrefixCur$73232[ebp]
	call	?SetFrom@UString@@QAEXPB_WI@Z		; UString::SetFrom
; Line 280
	lea	edx, DWORD PTR _phyPrefixCur$73232[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR _phyParentCur$73233[ebp], eax
$LN5@EnumerateI:
; Line 283
	mov	DWORD PTR _secureIndex$73235[ebp], -1
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+149]
	test	eax, eax
	je	SHORT $LN4@EnumerateI
; Line 287
	lea	ecx, DWORD PTR _secureIndex$73235[ebp]
	push	ecx
	lea	edx, DWORD PTR _phyPath$73224[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z ; CDirItems::AddSecurityItem
	mov	DWORD PTR ___result__$73237[ebp], eax
	cmp	DWORD PTR ___result__$73237[ebp], 0
	je	SHORT $LN4@EnumerateI
	mov	eax, DWORD PTR ___result__$73237[ebp]
	mov	DWORD PTR $T74435[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _phyPrefixCur$73232[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74435[ebp]
	jmp	$LN12@EnumerateI
$LN4@EnumerateI:
; Line 291
	lea	ecx, DWORD PTR _fi$73223[ebp]
	push	ecx
	mov	edx, DWORD PTR _secureIndex$73235[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParentCur$73233[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ; CDirItems::AddDirFileInfo
; Line 293
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	edx, al
	test	edx, edx
	je	$LN2@EnumerateI
; Line 295
	push	92					; 0000005cH
	lea	eax, DWORD PTR _fi$73223[ebp+40]
	push	eax
	lea	ecx, DWORD PTR _name2$73241[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@_W@Z		; operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 296
	lea	edx, DWORD PTR _name2$73241[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParentCur$73233[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR _parent$73243[ebp], eax
; Line 297
	lea	edx, DWORD PTR _name2$73241[ebp]
	push	edx
	lea	eax, DWORD PTR _phyPrefixCur$73232[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74436[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv224[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv224[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74437[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv226[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv226[ebp]
	push	ecx
	mov	edx, DWORD PTR _parent$73243[ebp]
	push	edx
	mov	eax, DWORD PTR _parent$73243[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EnumerateDir@CDirItems@@AAEJHHABVUString@@@Z ; CDirItems::EnumerateDir
	mov	DWORD PTR ___result__$73244[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T74437[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T74436[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	cmp	DWORD PTR ___result__$73244[ebp], 0
	je	SHORT $LN1@EnumerateI
	mov	ecx, DWORD PTR ___result__$73244[ebp]
	mov	DWORD PTR $T74438[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _name2$73241[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _phyPrefixCur$73232[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74438[ebp]
	jmp	SHORT $LN12@EnumerateI
$LN1@EnumerateI:
; Line 298
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _name2$73241[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN2@EnumerateI:
; Line 299
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _phyPrefixCur$73232[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$73223[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN10@EnumerateI
$LN9@EnumerateI:
; Line 301
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveDown@CDirItems@@QAEXXZ		; CDirItems::ReserveDown
; Line 302
	xor	eax, eax
$LN12@EnumerateI:
; Line 303
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@EnumerateI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN31@EnumerateI:
	DD	5
	DD	$LN30@EnumerateI
$LN30@EnumerateI:
	DD	-92					; ffffffa4H
	DD	56					; 00000038H
	DD	$LN24@EnumerateI
	DD	-112					; ffffff90H
	DD	12					; 0000000cH
	DD	$LN25@EnumerateI
	DD	-140					; ffffff74H
	DD	12					; 0000000cH
	DD	$LN26@EnumerateI
	DD	-156					; ffffff64H
	DD	4
	DD	$LN27@EnumerateI
	DD	-180					; ffffff4cH
	DD	12					; 0000000cH
	DD	$LN28@EnumerateI
$LN28@EnumerateI:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN27@EnumerateI:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN26@EnumerateI:
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	0
$LN25@EnumerateI:
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN24@EnumerateI:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$0:
	lea	ecx, DWORD PTR _fi$73223[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$1:
	lea	ecx, DWORD PTR _phyPath$73224[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$2:
	lea	ecx, DWORD PTR _phyPrefixCur$73232[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$3:
	lea	ecx, DWORD PTR _name2$73241[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$4:
	lea	ecx, DWORD PTR $T74436[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z$5:
	lea	ecx, DWORD PTR $T74437[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateItems2@CDirItems@@QAEJABVUString@@0ABV?$CObjectVector@VUString@@@@PAV3@@Z ENDP ; CDirItems::EnumerateItems2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
_TEXT	ENDS
PUBLIC	?Free@?$CBuffer@E@@QAEXXZ			; CBuffer<unsigned char>::Free
PUBLIC	??1CReparseAttr@NFile@NWindows@@QAE@XZ		; NWindows::NFile::CReparseAttr::~CReparseAttr
PUBLIC	??0CReparseAttr@NFile@NWindows@@QAE@XZ		; NWindows::NFile::CReparseAttr::CReparseAttr
PUBLIC	?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint
PUBLIC	?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z ; CDirItems::SetLinkInfo
EXTRN	?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z:PROC ; NWindows::NFile::CReparseAttr::Parse
EXTRN	?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z:PROC ; NWindows::NFile::NIO::GetReparseData
xdata$x	SEGMENT
__unwindtable$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z$1
__ehfuncinfo$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74460 = -92						; size = 4
$T74459 = -88						; size = 4
_res$ = -84						; size = 4
_attr$73326 = -76					; size = 32
_buf$ = -40						; size = 4
_path$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dirItem$ = 8						; size = 4
_fi$ = 12						; size = 4
_phyPrefix$ = 16					; size = 4
?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z PROC ; CDirItems::SetLinkInfo
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 378
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 379
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	je	SHORT $LN3@SetLinkInf
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@SetLinkInf
$LN3@SetLinkInf:
; Line 380
	xor	eax, eax
	jmp	$LN5@SetLinkInf
$LN4@SetLinkInf:
; Line 381
	mov	eax, DWORD PTR _fi$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _path$[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 382
	mov	eax, DWORD PTR _dirItem$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _buf$[ebp], eax
; Line 383
	push	0
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _path$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::GetReparseData
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@SetLinkInf
; Line 385
	lea	ecx, DWORD PTR _attr$73326[ebp]
	call	??0CReparseAttr@NFile@NWindows@@QAE@XZ	; NWindows::NFile::CReparseAttr::CReparseAttr
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 386
	mov	ecx, DWORD PTR _buf$[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	lea	ecx, DWORD PTR _attr$73326[ebp]
	call	?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z ; NWindows::NFile::CReparseAttr::Parse
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@SetLinkInf
; Line 387
	mov	DWORD PTR $T74459[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _attr$73326[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74459[ebp]
	jmp	SHORT $LN5@SetLinkInf
$LN1@SetLinkInf:
; Line 388
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _attr$73326[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
$LN2@SetLinkInf:
; Line 389
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 390
	mov	ecx, DWORD PTR _buf$[ebp]
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 391
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	lea	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@K@Z ; CDirItems::AddError
	mov	DWORD PTR $T74460[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74460[ebp]
$LN5@SetLinkInf:
; Line 392
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@SetLinkInf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN13@SetLinkInf:
	DD	2
	DD	$LN12@SetLinkInf
$LN12@SetLinkInf:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN9@SetLinkInf
	DD	-76					; ffffffb4H
	DD	32					; 00000020H
	DD	$LN10@SetLinkInf
$LN10@SetLinkInf:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN9@SetLinkInf:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z$0:
	lea	ecx, DWORD PTR _path$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z$1:
	lea	ecx, DWORD PTR _attr$73326[ebp]
	jmp	??1CReparseAttr@NFile@NWindows@@QAE@XZ
__ehhandler$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z ENDP ; CDirItems::SetLinkInfo
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
xdata$x	SEGMENT
__unwindtable$??0CReparseAttr@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CReparseAttr@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??0CReparseAttr@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CReparseAttr@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CReparseAttr@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CReparseAttr@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::CReparseAttr::CReparseAttr, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CReparseAttr@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CReparseAttr@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::CReparseAttr::CReparseAttr
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ PROC ; NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?HasReparsePoint@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ENDP ; NWindows::NFile::NFind::CFileInfoBase::HasReparsePoint
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CReparseAttr@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CReparseAttr@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??1CReparseAttr@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CReparseAttr@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CReparseAttr@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CReparseAttr@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::CReparseAttr::~CReparseAttr, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CReparseAttr@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CReparseAttr@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::CReparseAttr::~CReparseAttr
PUBLIC	?FillFixedReparse@CDirItems@@QAEXXZ		; CDirItems::FillFixedReparse
PUBLIC	??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z ; CObjectVector<NWildcard::CPair>::operator[]
PUBLIC	?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CPair>::Size
PUBLIC	?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z ; EnumerateItems
xdata$x	SEGMENT
__unwindtable$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z$0
__ehfuncinfo$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv140 = -56						; size = 4
tv141 = -52						; size = 4
tv80 = -48						; size = 4
$T74496 = -44						; size = 12
___result__$73681 = -32					; size = 4
_logParent$73677 = -28					; size = 4
_phyParent$73676 = -24					; size = 4
_pair$73675 = -20					; size = 4
_i$73671 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_censor$ = 8						; size = 4
_pathMode$ = 12						; size = 4
_addPathPrefix$ = 16					; size = 4
_dirItems$ = 20						; size = 4
?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z PROC ; EnumerateItems
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 806
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 807
	mov	DWORD PTR _i$73671[ebp], 0
	jmp	SHORT $LN7@EnumerateI@2
$LN6@EnumerateI@2:
	mov	eax, DWORD PTR _i$73671[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73671[ebp], eax
$LN7@EnumerateI@2:
	mov	ecx, DWORD PTR _censor$[ebp]
	call	?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CPair>::Size
	cmp	DWORD PTR _i$73671[ebp], eax
	jae	$LN5@EnumerateI@2
; Line 809
	mov	ecx, DWORD PTR _i$73671[ebp]
	push	ecx
	mov	ecx, DWORD PTR _censor$[ebp]
	call	??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z ; CObjectVector<NWildcard::CPair>::operator[]
	mov	DWORD PTR _pair$73675[ebp], eax
; Line 810
	mov	ecx, DWORD PTR _pair$73675[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@EnumerateI@2
	mov	DWORD PTR tv80[ebp], -1
	jmp	SHORT $LN11@EnumerateI@2
$LN10@EnumerateI@2:
	mov	eax, DWORD PTR _pair$73675[ebp]
	push	eax
	push	-1
	push	-1
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR tv80[ebp], eax
$LN11@EnumerateI@2:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _phyParent$73676[ebp], ecx
; Line 811
	mov	DWORD PTR _logParent$73677[ebp], -1
; Line 813
	cmp	DWORD PTR _pathMode$[ebp], 2
	jne	SHORT $LN4@EnumerateI@2
; Line 814
	mov	edx, DWORD PTR _phyParent$73676[ebp]
	mov	DWORD PTR _logParent$73677[ebp], edx
; Line 815
	jmp	SHORT $LN3@EnumerateI@2
$LN4@EnumerateI@2:
; Line 817
	mov	ecx, DWORD PTR _addPathPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@EnumerateI@2
; Line 818
	mov	ecx, DWORD PTR _addPathPrefix$[ebp]
	push	ecx
	push	-1
	push	-1
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR _logParent$73677[ebp], eax
$LN3@EnumerateI@2:
; Line 824
	push	0
	mov	edx, DWORD PTR _dirItems$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T74496[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	edx, DWORD PTR _pair$73675[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$73677[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$73676[ebp]
	push	ecx
	mov	edx, DWORD PTR _pair$73675[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	call	?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateDirItems
	mov	DWORD PTR ___result__$73681[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T74496[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	cmp	DWORD PTR ___result__$73681[ebp], 0
	je	SHORT $LN1@EnumerateI@2
	mov	eax, DWORD PTR ___result__$73681[ebp]
	jmp	SHORT $LN8@EnumerateI@2
$LN1@EnumerateI@2:
; Line 825
	jmp	$LN6@EnumerateI@2
$LN5@EnumerateI@2:
; Line 826
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?ReserveDown@CDirItems@@QAEXXZ		; CDirItems::ReserveDown
; Line 829
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?FillFixedReparse@CDirItems@@QAEXXZ	; CDirItems::FillFixedReparse
; Line 832
	xor	eax, eax
$LN8@EnumerateI@2:
; Line 833
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z$0:
	lea	ecx, DWORD PTR $T74496[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__ehhandler$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateItems@@YGJABVCCensor@NWildcard@@W4ECensorPathMode@2@ABVUString@@AAVCDirItems@@@Z ENDP ; EnumerateItems
PUBLIC	?DeleteBack@UString@@QAEXXZ			; UString::DeleteBack
PUBLIC	?Back@UString@@QBE_WXZ				; UString::Back
PUBLIC	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
PUBLIC	?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CCensorNode>::Size
PUBLIC	??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z ; CObjectVector<NWildcard::CCensorNode>::operator[]
PUBLIC	??A?$CRecordVector@_N@@QAEAA_NI@Z		; CRecordVector<bool>::operator[]
PUBLIC	?Add@?$CRecordVector@_N@@QAEI_N@Z		; CRecordVector<bool>::Add
PUBLIC	?Size@?$CRecordVector@_N@@QBEIXZ		; CRecordVector<bool>::Size
PUBLIC	?Back@?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@XZ ; CObjectVector<CDirItem>::Back
PUBLIC	??1?$CRecordVector@_N@@QAE@XZ			; CRecordVector<bool>::~CRecordVector<bool>
PUBLIC	?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
PUBLIC	?Add_PathSepar@UString@@QAEXXZ			; UString::Add_PathSepar
PUBLIC	?IsDriveItem@CItem@NWildcard@@QBE_NXZ		; NWildcard::CItem::IsDriveItem
PUBLIC	?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ ; CObjectVector<UString>::Front
PUBLIC	??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z ; CObjectVector<NWildcard::CItem>::operator[]
PUBLIC	?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CItem>::Size
PUBLIC	??0?$CRecordVector@_N@@QAE@XZ			; CRecordVector<bool>::CRecordVector<bool>
PUBLIC	?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ	; CObjectVector<UString>::IsEmpty
EXTRN	?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z:PROC ; NWindows::NFile::NFind::MyGetLogicalDriveStrings
EXTRN	?AreThereIncludeItems@CCensorNode@NWildcard@@QBE_NXZ:PROC ; NWildcard::CCensorNode::AreThereIncludeItems
EXTRN	?IsDriveColonName@NWildcard@@YG_NPB_W@Z:PROC	; NWildcard::IsDriveColonName
EXTRN	?FindSubNode@CCensorNode@NWildcard@@QBEHABVUString@@@Z:PROC ; NWildcard::CCensorNode::FindSubNode
EXTRN	?CheckPathToRoot@CCensorNode@NWildcard@@QBE_N_NAAV?$CObjectVector@VUString@@@@0@Z:PROC ; NWildcard::CCensorNode::CheckPathToRoot
EXTRN	??4UString@@QAEAAV0@_W@Z:PROC			; UString::operator=
EXTRN	?NeedCheckSubDirs@CCensorNode@NWildcard@@QBE_NXZ:PROC ; NWildcard::CCensorNode::NeedCheckSubDirs
xdata$x	SEGMENT
__ehfuncinfo$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$13
	DD	0eH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$14
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv706 = -696						; size = 4
tv544 = -692						; size = 4
tv691 = -688						; size = 4
tv377 = -684						; size = 4
$T74521 = -680						; size = 4
$T74520 = -676						; size = 4
$T74519 = -672						; size = 4
$T74518 = -668						; size = 4
$T74517 = -664						; size = 12
$T74516 = -652						; size = 4
$T74515 = -648						; size = 4
$T74514 = -644						; size = 4
$T74513 = -640						; size = 4
$T74512 = -636						; size = 4
$T74511 = -632						; size = 12
$T74510 = -620						; size = 4
$T74509 = -616						; size = 4
$T74508 = -612						; size = 4
$T74507 = -608						; size = 4
$T74506 = -604						; size = 4
$T74505 = -600						; size = 4
$T74504 = -596						; size = 4
$T74503 = -592						; size = 4
___result__$73660 = -588				; size = 4
___result__$73657 = -584				; size = 4
___result__$73652 = -580				; size = 4
_found$73650 = -569					; size = 1
_fi$73649 = -560					; size = 56
_ttt$73645 = -500					; size = 4
_enumerator$ = -492					; size = 16
___result__$73638 = -472				; size = 4
_fi$73637 = -464					; size = 56
_driveName$73632 = -400					; size = 12
_driveStrings$73628 = -380				; size = 12
_name$73619 = -364					; size = 4
_item$73617 = -360					; size = 4
_i$73613 = -356						; size = 4
___result__$73606 = -352				; size = 4
___result__$73601 = -348				; size = 4
___result__$73597 = -344				; size = 4
_fi$73586 = -336					; size = 56
_fullPath$73584 = -272					; size = 12
_nextNode$73583 = -256					; size = 4
___result__$73575 = -252				; size = 4
_t$73570 = -248						; size = 4
_index$73568 = -244					; size = 4
_nextNode$73567 = -240					; size = 4
_addArchivePrefixNew$73566 = -232			; size = 12
___result__$73562 = -216				; size = 4
_pathParts$73561 = -208					; size = 12
___result__$73554 = -192				; size = 4
_dirItem$73553 = -188					; size = 4
___result__$73550 = -184				; size = 4
_secureIndex$73548 = -176				; size = 4
_pathParts$73546 = -164					; size = 12
___result__$73541 = -148				; size = 4
_isDir$73537 = -141					; size = 1
___result__$73534 = -140				; size = 4
_fi$73530 = -132					; size = 56
_needSecurity$73524 = -70				; size = 1
_needAltStreams$73523 = -69				; size = 1
_fullPath$73521 = -64					; size = 12
_name$73520 = -48					; size = 4
_item$73519 = -44					; size = 4
_i$73515 = -40						; size = 4
_needEnterVector$73514 = -32				; size = 12
___result__$73414 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_curNode$ = 8						; size = 4
_phyParent$ = 12					; size = 4
_logParent$ = 16					; size = 4
_phyPrefix$ = 20					; size = 4
_addArchivePrefix$ = 24					; size = 4
_dirItems$ = 28						; size = 4
_enterToSubFolders$ = 32				; size = 1
?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z PROC ; EnumerateDirItems
; Line 521
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 684				; 000002acH
	push	edi
	lea	edi, DWORD PTR [ebp-696]
	mov	ecx, 171				; 000000abH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 522
	movzx	eax, BYTE PTR _enterToSubFolders$[ebp]
	test	eax, eax
	jne	SHORT $LN84@EnumerateD@2
; Line 523
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?NeedCheckSubDirs@CCensorNode@NWildcard@@QBE_NXZ ; NWildcard::CCensorNode::NeedCheckSubDirs
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN84@EnumerateD@2
; Line 524
	mov	BYTE PTR _enterToSubFolders$[ebp], 1
$LN84@EnumerateD@2:
; Line 526
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?ScanProgress@CDirItems@@QAEJABVUString@@@Z ; CDirItems::ScanProgress
	mov	DWORD PTR ___result__$73414[ebp], eax
	cmp	DWORD PTR ___result__$73414[ebp], 0
	je	SHORT $LN82@EnumerateD@2
	mov	eax, DWORD PTR ___result__$73414[ebp]
	jmp	$LN85@EnumerateD@2
$LN82@EnumerateD@2:
; Line 529
	mov	ecx, DWORD PTR _addArchivePrefix$[ebp]
	call	?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ ; CObjectVector<UString>::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	$LN81@EnumerateD@2
	movzx	ecx, BYTE PTR _enterToSubFolders$[ebp]
	test	ecx, ecx
	jne	$LN81@EnumerateD@2
; Line 531
	mov	edx, DWORD PTR _curNode$[ebp]
	push	edx
	call	?CanUseFsDirect@@YG_NABVCCensorNode@NWildcard@@@Z ; CanUseFsDirect
	movzx	eax, al
	test	eax, eax
	je	$LN81@EnumerateD@2
; Line 535
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??0?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::CRecordVector<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 538
	mov	DWORD PTR _i$73515[ebp], 0
	jmp	SHORT $LN79@EnumerateD@2
$LN78@EnumerateD@2:
	mov	ecx, DWORD PTR _i$73515[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$73515[ebp], ecx
$LN79@EnumerateD@2:
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CItem>::Size
	cmp	DWORD PTR _i$73515[ebp], eax
	jae	$LN77@EnumerateD@2
; Line 540
	mov	edx, DWORD PTR _i$73515[ebp]
	push	edx
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z ; CObjectVector<NWildcard::CItem>::operator[]
	mov	DWORD PTR _item$73519[ebp], eax
; Line 541
	mov	ecx, DWORD PTR _item$73519[ebp]
	call	?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ ; CObjectVector<UString>::Front
	mov	DWORD PTR _name$73520[ebp], eax
; Line 542
	mov	eax, DWORD PTR _name$73520[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fullPath$73521[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 545
	mov	BYTE PTR _needAltStreams$73523[ebp], 1
; Line 549
	mov	BYTE PTR _needSecurity$73524[ebp], 1
; Line 552
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN76@EnumerateD@2
; Line 554
	mov	ecx, DWORD PTR _item$73519[ebp]
	movzx	edx, BYTE PTR [ecx+13]
	test	edx, edx
	jne	SHORT $LN76@EnumerateD@2
; Line 560
	mov	ecx, DWORD PTR _name$73520[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN74@EnumerateD@2
; Line 563
	mov	BYTE PTR _needAltStreams$73523[ebp], 0
; Line 573
	push	92					; 0000005cH
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??4UString@@QAEAAV0@_W@Z		; UString::operator=
	jmp	SHORT $LN76@EnumerateD@2
$LN74@EnumerateD@2:
; Line 576
	mov	ecx, DWORD PTR _item$73519[ebp]
	call	?IsDriveItem@CItem@NWildcard@@QBE_NXZ	; NWildcard::CItem::IsDriveItem
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN76@EnumerateD@2
; Line 578
	mov	BYTE PTR _needAltStreams$73523[ebp], 0
; Line 579
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	?Add_PathSepar@UString@@QAEXXZ		; UString::Add_PathSepar
$LN76@EnumerateD@2:
; Line 585
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 587
	mov	edx, DWORD PTR _name$73520[ebp]
	push	edx
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	call	?IsVirtualFsFolder@@YG_NABVUString@@0@Z	; IsVirtualFsFolder
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN71@EnumerateD@2
; Line 589
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
; Line 590
	mov	edx, DWORD PTR _name$73520[ebp]
	push	edx
	lea	ecx, DWORD PTR _fi$73530[ebp+40]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 592
	jmp	$LN70@EnumerateD@2
$LN71@EnumerateD@2:
; Line 594
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN70@EnumerateD@2
; Line 596
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@@Z	; CDirItems::AddError
	mov	DWORD PTR ___result__$73534[ebp], eax
	cmp	DWORD PTR ___result__$73534[ebp], 0
	je	SHORT $LN68@EnumerateD@2
	mov	edx, DWORD PTR ___result__$73534[ebp]
	mov	DWORD PTR $T74503[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74503[ebp]
	jmp	$LN85@EnumerateD@2
$LN68@EnumerateD@2:
; Line 597
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN78@EnumerateD@2
$LN70@EnumerateD@2:
; Line 600
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	mov	BYTE PTR _isDir$73537[ebp], al
; Line 601
	movzx	eax, BYTE PTR _isDir$73537[ebp]
	test	eax, eax
	je	SHORT $LN65@EnumerateD@2
	mov	ecx, DWORD PTR _item$73519[ebp]
	movzx	edx, BYTE PTR [ecx+14]
	test	edx, edx
	je	SHORT $LN66@EnumerateD@2
$LN65@EnumerateD@2:
	movzx	eax, BYTE PTR _isDir$73537[ebp]
	test	eax, eax
	jne	$LN67@EnumerateD@2
	mov	ecx, DWORD PTR _item$73519[ebp]
	movzx	edx, BYTE PTR [ecx+13]
	test	edx, edx
	jne	$LN67@EnumerateD@2
$LN66@EnumerateD@2:
; Line 603
	push	-2147467259				; 80004005H
	lea	eax, DWORD PTR _fullPath$73521[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@K@Z ; CDirItems::AddError
	mov	DWORD PTR ___result__$73541[ebp], eax
	cmp	DWORD PTR ___result__$73541[ebp], 0
	je	SHORT $LN64@EnumerateD@2
	mov	ecx, DWORD PTR ___result__$73541[ebp]
	mov	DWORD PTR $T74504[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74504[ebp]
	jmp	$LN85@EnumerateD@2
$LN64@EnumerateD@2:
; Line 604
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN78@EnumerateD@2
$LN67@EnumerateD@2:
; Line 607
	lea	ecx, DWORD PTR _pathParts$73546[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 608
	lea	edx, DWORD PTR _fi$73530[ebp+40]
	push	edx
	lea	ecx, DWORD PTR _pathParts$73546[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 609
	movzx	eax, BYTE PTR _isDir$73537[ebp]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	lea	eax, DWORD PTR _pathParts$73546[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?CheckPathToRoot@CCensorNode@NWildcard@@QBE_N_NAAV?$CObjectVector@VUString@@@@0@Z ; NWildcard::CCensorNode::CheckPathToRoot
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN63@EnumerateD@2
; Line 610
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _pathParts$73546[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN78@EnumerateD@2
$LN63@EnumerateD@2:
; Line 611
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _pathParts$73546[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
; Line 613
	mov	DWORD PTR _secureIndex$73548[ebp], -1
; Line 615
	movzx	edx, BYTE PTR _needSecurity$73524[ebp]
	test	edx, edx
	je	SHORT $LN62@EnumerateD@2
	mov	eax, DWORD PTR _dirItems$[ebp]
	movzx	ecx, BYTE PTR [eax+149]
	test	ecx, ecx
	je	SHORT $LN62@EnumerateD@2
; Line 617
	lea	edx, DWORD PTR _secureIndex$73548[ebp]
	push	edx
	lea	eax, DWORD PTR _fullPath$73521[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z ; CDirItems::AddSecurityItem
	mov	DWORD PTR ___result__$73550[ebp], eax
	cmp	DWORD PTR ___result__$73550[ebp], 0
	je	SHORT $LN62@EnumerateD@2
	mov	ecx, DWORD PTR ___result__$73550[ebp]
	mov	DWORD PTR $T74505[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74505[ebp]
	jmp	$LN85@EnumerateD@2
$LN62@EnumerateD@2:
; Line 621
	lea	edx, DWORD PTR _fi$73530[ebp]
	push	edx
	mov	eax, DWORD PTR _secureIndex$73548[ebp]
	push	eax
	mov	ecx, DWORD PTR _logParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyParent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ; CDirItems::AddDirFileInfo
; Line 625
	mov	ecx, DWORD PTR _dirItems$[ebp]
	add	ecx, 36					; 00000024H
	call	?Back@?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@XZ ; CObjectVector<CDirItem>::Back
	mov	DWORD PTR _dirItem$73553[ebp], eax
; Line 626
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi$73530[ebp]
	push	ecx
	mov	edx, DWORD PTR _dirItem$73553[ebp]
	push	edx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z ; CDirItems::SetLinkInfo
	mov	DWORD PTR ___result__$73554[ebp], eax
	cmp	DWORD PTR ___result__$73554[ebp], 0
	je	SHORT $LN60@EnumerateD@2
	mov	eax, DWORD PTR ___result__$73554[ebp]
	mov	DWORD PTR $T74506[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74506[ebp]
	jmp	$LN85@EnumerateD@2
$LN60@EnumerateD@2:
; Line 627
	mov	ecx, DWORD PTR _dirItem$73553[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	je	SHORT $LN59@EnumerateD@2
; Line 629
	movzx	ecx, BYTE PTR _fi$73530[ebp+36]
	test	ecx, ecx
	je	SHORT $LN58@EnumerateD@2
; Line 630
	mov	edx, DWORD PTR _dirItems$[ebp]
	mov	eax, DWORD PTR [edx+88]
	sub	eax, DWORD PTR _fi$73530[ebp]
	mov	ecx, DWORD PTR [edx+92]
	sbb	ecx, DWORD PTR _fi$73530[ebp+4]
	mov	edx, DWORD PTR _dirItems$[ebp]
	mov	DWORD PTR [edx+88], eax
	mov	DWORD PTR [edx+92], ecx
; Line 631
	jmp	SHORT $LN57@EnumerateD@2
$LN58@EnumerateD@2:
; Line 632
	mov	eax, DWORD PTR _dirItems$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	sub	ecx, DWORD PTR _fi$73530[ebp]
	mov	edx, DWORD PTR [eax+84]
	sbb	edx, DWORD PTR _fi$73530[ebp+4]
	mov	eax, DWORD PTR _dirItems$[ebp]
	mov	DWORD PTR [eax+80], ecx
	mov	DWORD PTR [eax+84], edx
$LN57@EnumerateD@2:
; Line 633
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN78@EnumerateD@2
$LN59@EnumerateD@2:
; Line 640
	movzx	ecx, BYTE PTR _needAltStreams$73523[ebp]
	test	ecx, ecx
	je	$LN56@EnumerateD@2
	mov	edx, DWORD PTR _dirItems$[ebp]
	movzx	eax, BYTE PTR [edx+49]
	test	eax, eax
	je	$LN56@EnumerateD@2
; Line 642
	lea	ecx, DWORD PTR _pathParts$73561[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 643
	lea	ecx, DWORD PTR _fi$73530[ebp+40]
	push	ecx
	lea	ecx, DWORD PTR _pathParts$73561[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 645
	mov	edx, DWORD PTR _dirItems$[ebp]
	push	edx
	lea	eax, DWORD PTR _pathParts$73561[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	push	ecx
	mov	edx, DWORD PTR _logParent$[ebp]
	push	edx
	mov	eax, DWORD PTR _phyParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _curNode$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fi$73530[ebp]
	push	edx
	call	?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z ; EnumerateAltStreams
	mov	DWORD PTR ___result__$73562[ebp], eax
	cmp	DWORD PTR ___result__$73562[ebp], 0
	je	SHORT $LN55@EnumerateD@2
	mov	eax, DWORD PTR ___result__$73562[ebp]
	mov	DWORD PTR $T74507[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _pathParts$73561[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74507[ebp]
	jmp	$LN85@EnumerateD@2
$LN55@EnumerateD@2:
; Line 646
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _pathParts$73561[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
$LN56@EnumerateD@2:
; Line 649
	movzx	ecx, BYTE PTR _isDir$73537[ebp]
	test	ecx, ecx
	jne	SHORT $LN54@EnumerateD@2
; Line 650
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN78@EnumerateD@2
$LN54@EnumerateD@2:
; Line 652
	lea	ecx, DWORD PTR _addArchivePrefixNew$73566[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 653
	mov	DWORD PTR _nextNode$73567[ebp], 0
; Line 654
	mov	edx, DWORD PTR _name$73520[ebp]
	push	edx
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?FindSubNode@CCensorNode@NWildcard@@QBEHABVUString@@@Z ; NWildcard::CCensorNode::FindSubNode
	mov	DWORD PTR _index$73568[ebp], eax
; Line 655
	cmp	DWORD PTR _index$73568[ebp], 0
	jl	SHORT $LN53@EnumerateD@2
; Line 657
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	mov	DWORD PTR _t$73570[ebp], eax
	jmp	SHORT $LN52@EnumerateD@2
$LN51@EnumerateD@2:
	mov	eax, DWORD PTR _t$73570[ebp]
	add	eax, 1
	mov	DWORD PTR _t$73570[ebp], eax
$LN52@EnumerateD@2:
	mov	ecx, DWORD PTR _t$73570[ebp]
	cmp	ecx, DWORD PTR _index$73568[ebp]
	jg	SHORT $LN50@EnumerateD@2
; Line 658
	push	1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	?Add@?$CRecordVector@_N@@QAEI_N@Z	; CRecordVector<bool>::Add
	jmp	SHORT $LN51@EnumerateD@2
$LN50@EnumerateD@2:
; Line 659
	mov	edx, DWORD PTR _index$73568[ebp]
	push	edx
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??A?$CRecordVector@_N@@QAEAA_NI@Z	; CRecordVector<bool>::operator[]
	mov	BYTE PTR [eax], 0
; Line 660
	mov	eax, DWORD PTR _index$73568[ebp]
	push	eax
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z ; CObjectVector<NWildcard::CCensorNode>::operator[]
	mov	DWORD PTR _nextNode$73567[ebp], eax
; Line 662
	jmp	SHORT $LN49@EnumerateD@2
$LN53@EnumerateD@2:
; Line 664
	mov	ecx, DWORD PTR _curNode$[ebp]
	mov	DWORD PTR _nextNode$73567[ebp], ecx
; Line 665
	mov	edx, DWORD PTR _name$73520[ebp]
	push	edx
	lea	ecx, DWORD PTR _addArchivePrefixNew$73566[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
$LN49@EnumerateD@2:
; Line 669
	push	1
	mov	eax, DWORD PTR _dirItems$[ebp]
	push	eax
	lea	ecx, DWORD PTR _addArchivePrefixNew$73566[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	lea	eax, DWORD PTR _fi$73530[ebp+40]
	push	eax
	mov	ecx, DWORD PTR _logParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyParent$[ebp]
	push	edx
	mov	eax, DWORD PTR _nextNode$73567[ebp]
	push	eax
	call	?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateDirItems_Spec
	mov	DWORD PTR ___result__$73575[ebp], eax
	cmp	DWORD PTR ___result__$73575[ebp], 0
	je	SHORT $LN48@EnumerateD@2
	mov	ecx, DWORD PTR ___result__$73575[ebp]
	mov	DWORD PTR $T74508[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _addArchivePrefixNew$73566[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74508[ebp]
	jmp	$LN85@EnumerateD@2
$LN48@EnumerateD@2:
; Line 670
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _addArchivePrefixNew$73566[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73530[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN78@EnumerateD@2
$LN77@EnumerateD@2:
; Line 672
	mov	DWORD PTR _i$73515[ebp], 0
	jmp	SHORT $LN47@EnumerateD@2
$LN46@EnumerateD@2:
	mov	edx, DWORD PTR _i$73515[ebp]
	add	edx, 1
	mov	DWORD PTR _i$73515[ebp], edx
$LN47@EnumerateD@2:
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 16					; 00000010H
	call	?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CCensorNode>::Size
	cmp	DWORD PTR _i$73515[ebp], eax
	jae	$LN45@EnumerateD@2
; Line 674
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	cmp	DWORD PTR _i$73515[ebp], eax
	jae	SHORT $LN44@EnumerateD@2
; Line 675
	mov	eax, DWORD PTR _i$73515[ebp]
	push	eax
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??A?$CRecordVector@_N@@QAEAA_NI@Z	; CRecordVector<bool>::operator[]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN44@EnumerateD@2
; Line 676
	jmp	SHORT $LN46@EnumerateD@2
$LN44@EnumerateD@2:
; Line 677
	mov	edx, DWORD PTR _i$73515[ebp]
	push	edx
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z ; CObjectVector<NWildcard::CCensorNode>::operator[]
	mov	DWORD PTR _nextNode$73583[ebp], eax
; Line 678
	mov	eax, DWORD PTR _nextNode$73583[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fullPath$73584[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 679
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 681
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN42@EnumerateD@2
; Line 684
	mov	ecx, DWORD PTR _nextNode$73583[ebp]
	add	ecx, 4
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN41@EnumerateD@2
; Line 685
	push	92					; 0000005cH
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??4UString@@QAEAAV0@_W@Z		; UString::operator=
	jmp	SHORT $LN42@EnumerateD@2
$LN41@EnumerateD@2:
; Line 687
	mov	ecx, DWORD PTR _nextNode$73583[ebp]
	add	ecx, 4
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDriveColonName@NWildcard@@YG_NPB_W@Z	; NWildcard::IsDriveColonName
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN42@EnumerateD@2
; Line 688
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	?Add_PathSepar@UString@@QAEXXZ		; UString::Add_PathSepar
$LN42@EnumerateD@2:
; Line 698
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN36@EnumerateD@2
	mov	ecx, DWORD PTR _nextNode$73583[ebp]
	add	ecx, 4
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN37@EnumerateD@2
$LN36@EnumerateD@2:
	mov	edx, DWORD PTR _nextNode$73583[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	call	?IsVirtualFsFolder@@YG_NABVUString@@0@Z	; IsVirtualFsFolder
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN38@EnumerateD@2
$LN37@EnumerateD@2:
; Line 700
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
; Line 701
	mov	edx, DWORD PTR _nextNode$73583[ebp]
	add	edx, 4
	push	edx
	lea	ecx, DWORD PTR _fi$73586[ebp+40]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 703
	jmp	$LN35@EnumerateD@2
$LN38@EnumerateD@2:
; Line 705
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	eax, al
	test	eax, eax
	jne	$LN34@EnumerateD@2
; Line 707
	mov	ecx, DWORD PTR _nextNode$73583[ebp]
	call	?AreThereIncludeItems@CCensorNode@NWildcard@@QBE_NXZ ; NWildcard::CCensorNode::AreThereIncludeItems
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN33@EnumerateD@2
; Line 708
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN46@EnumerateD@2
$LN33@EnumerateD@2:
; Line 709
	lea	edx, DWORD PTR _fullPath$73584[ebp]
	push	edx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@@Z	; CDirItems::AddError
	mov	DWORD PTR ___result__$73597[ebp], eax
	cmp	DWORD PTR ___result__$73597[ebp], 0
	je	SHORT $LN32@EnumerateD@2
	mov	eax, DWORD PTR ___result__$73597[ebp]
	mov	DWORD PTR $T74509[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74509[ebp]
	jmp	$LN85@EnumerateD@2
$LN32@EnumerateD@2:
; Line 710
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN46@EnumerateD@2
$LN34@EnumerateD@2:
; Line 713
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN35@EnumerateD@2
; Line 715
	push	-2147467259				; 80004005H
	lea	edx, DWORD PTR _fullPath$73584[ebp]
	push	edx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@K@Z ; CDirItems::AddError
	mov	DWORD PTR ___result__$73601[ebp], eax
	cmp	DWORD PTR ___result__$73601[ebp], 0
	je	SHORT $LN30@EnumerateD@2
	mov	eax, DWORD PTR ___result__$73601[ebp]
	mov	DWORD PTR $T74510[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74510[ebp]
	jmp	$LN85@EnumerateD@2
$LN30@EnumerateD@2:
; Line 716
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN46@EnumerateD@2
$LN35@EnumerateD@2:
; Line 721
	push	0
	mov	ecx, DWORD PTR _dirItems$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T74511[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	DWORD PTR tv377[ebp], eax
	mov	edx, DWORD PTR tv377[ebp]
	mov	DWORD PTR tv691[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv691[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fi$73586[ebp+40]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _nextNode$73583[ebp]
	push	edx
	call	?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateDirItems_Spec
	mov	DWORD PTR ___result__$73606[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T74511[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	cmp	DWORD PTR ___result__$73606[ebp], 0
	je	SHORT $LN29@EnumerateD@2
	mov	eax, DWORD PTR ___result__$73606[ebp]
	mov	DWORD PTR $T74512[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74512[ebp]
	jmp	$LN85@EnumerateD@2
$LN29@EnumerateD@2:
; Line 722
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _fi$73586[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN46@EnumerateD@2
$LN45@EnumerateD@2:
; Line 724
	mov	DWORD PTR $T74513[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	eax, DWORD PTR $T74513[ebp]
	jmp	$LN85@EnumerateD@2
$LN81@EnumerateD@2:
; Line 733
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	$LN28@EnumerateD@2
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CItem>::Size
	test	eax, eax
	jbe	$LN28@EnumerateD@2
; Line 736
	mov	DWORD PTR _i$73613[ebp], 0
	jmp	SHORT $LN27@EnumerateD@2
$LN26@EnumerateD@2:
	mov	edx, DWORD PTR _i$73613[ebp]
	add	edx, 1
	mov	DWORD PTR _i$73613[ebp], edx
$LN27@EnumerateD@2:
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CItem>::Size
	cmp	DWORD PTR _i$73613[ebp], eax
	jae	$LN25@EnumerateD@2
; Line 738
	mov	eax, DWORD PTR _i$73613[ebp]
	push	eax
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z ; CObjectVector<NWildcard::CItem>::operator[]
	mov	DWORD PTR _item$73617[ebp], eax
; Line 739
	mov	ecx, DWORD PTR _item$73617[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	eax, 1
	jae	SHORT $LN24@EnumerateD@2
; Line 740
	jmp	$LN25@EnumerateD@2
$LN24@EnumerateD@2:
; Line 741
	mov	ecx, DWORD PTR _item$73617[ebp]
	call	?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ ; CObjectVector<UString>::Front
	mov	DWORD PTR _name$73619[ebp], eax
; Line 742
	mov	ecx, DWORD PTR _name$73619[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 2
	jne	SHORT $LN22@EnumerateD@2
	mov	ecx, DWORD PTR _name$73619[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 58					; 0000003aH
	je	SHORT $LN23@EnumerateD@2
$LN22@EnumerateD@2:
; Line 743
	jmp	SHORT $LN25@EnumerateD@2
$LN23@EnumerateD@2:
; Line 744
	mov	ecx, DWORD PTR _item$73617[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	eax, 1
	jne	SHORT $LN21@EnumerateD@2
; Line 745
	mov	edx, DWORD PTR _item$73617[ebp]
	movzx	eax, BYTE PTR [edx+13]
	test	eax, eax
	jne	SHORT $LN19@EnumerateD@2
	mov	ecx, DWORD PTR _item$73617[ebp]
	movzx	edx, BYTE PTR [ecx+14]
	test	edx, edx
	jne	SHORT $LN21@EnumerateD@2
$LN19@EnumerateD@2:
; Line 746
	jmp	SHORT $LN25@EnumerateD@2
$LN21@EnumerateD@2:
; Line 747
	mov	ecx, DWORD PTR _name$73619[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDriveColonName@NWildcard@@YG_NPB_W@Z	; NWildcard::IsDriveColonName
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@EnumerateD@2
; Line 748
	jmp	$LN26@EnumerateD@2
$LN18@EnumerateD@2:
; Line 749
	mov	ecx, DWORD PTR _name$73619[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 42					; 0000002aH
	je	SHORT $LN17@EnumerateD@2
	mov	ecx, DWORD PTR _name$73619[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	edx, WORD PTR [eax]
	cmp	edx, 63					; 0000003fH
	je	SHORT $LN17@EnumerateD@2
; Line 750
	jmp	SHORT $LN25@EnumerateD@2
$LN17@EnumerateD@2:
; Line 751
	jmp	$LN26@EnumerateD@2
$LN25@EnumerateD@2:
; Line 752
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CItem>::Size
	cmp	DWORD PTR _i$73613[ebp], eax
	jne	$LN28@EnumerateD@2
; Line 754
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], 9
; Line 755
	lea	eax, DWORD PTR _driveStrings$73628[ebp]
	push	eax
	call	?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z ; NWindows::NFile::NFind::MyGetLogicalDriveStrings
; Line 756
	mov	DWORD PTR _i$73613[ebp], 0
	jmp	SHORT $LN15@EnumerateD@2
$LN14@EnumerateD@2:
	mov	ecx, DWORD PTR _i$73613[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$73613[ebp], ecx
$LN15@EnumerateD@2:
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _i$73613[ebp], eax
	jae	$LN13@EnumerateD@2
; Line 758
	mov	edx, DWORD PTR _i$73613[ebp]
	push	edx
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	push	eax
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 759
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 3
	jb	SHORT $LN11@EnumerateD@2
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	?Back@UString@@QBE_WXZ			; UString::Back
	movzx	eax, ax
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN12@EnumerateD@2
$LN11@EnumerateD@2:
; Line 760
	mov	DWORD PTR $T74514[ebp], -2147467259	; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR $T74514[ebp]
	jmp	$LN85@EnumerateD@2
$LN12@EnumerateD@2:
; Line 761
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	?DeleteBack@UString@@QAEXXZ		; UString::DeleteBack
; Line 762
	lea	ecx, DWORD PTR _fi$73637[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 763
	lea	ecx, DWORD PTR _fi$73637[ebp]
	call	?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
; Line 764
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fi$73637[ebp+40]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 767
	movzx	edx, BYTE PTR _enterToSubFolders$[ebp]
	push	edx
	mov	eax, DWORD PTR _dirItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR _addArchivePrefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curNode$[ebp]
	push	edx
	lea	eax, DWORD PTR _fi$73637[ebp]
	push	eax
	call	?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateForItem
	mov	DWORD PTR ___result__$73638[ebp], eax
	cmp	DWORD PTR ___result__$73638[ebp], 0
	je	SHORT $LN10@EnumerateD@2
	mov	ecx, DWORD PTR ___result__$73638[ebp]
	mov	DWORD PTR $T74515[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _fi$73637[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR $T74515[ebp]
	jmp	$LN85@EnumerateD@2
$LN10@EnumerateD@2:
; Line 768
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _fi$73637[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN14@EnumerateD@2
$LN13@EnumerateD@2:
; Line 769
	mov	DWORD PTR $T74516[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR $T74516[ebp]
	jmp	$LN85@EnumerateD@2
$LN28@EnumerateD@2:
; Line 776
	push	42					; 0000002aH
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	lea	eax, DWORD PTR $T74517[ebp]
	push	eax
	call	??H@YG?AVUString@@ABV0@_W@Z		; operator+
	mov	DWORD PTR tv544[ebp], eax
	mov	ecx, DWORD PTR tv544[ebp]
	mov	DWORD PTR tv706[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv706[ebp]
	push	edx
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??0CEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CEnumerator::CEnumerator
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T74517[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 777
	mov	DWORD PTR _ttt$73645[ebp], 0
	jmp	SHORT $LN9@EnumerateD@2
$LN8@EnumerateD@2:
	mov	eax, DWORD PTR _ttt$73645[ebp]
	add	eax, 1
	mov	DWORD PTR _ttt$73645[ebp], eax
$LN9@EnumerateD@2:
; Line 779
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
; Line 781
	lea	ecx, DWORD PTR _found$73650[ebp]
	push	ecx
	lea	edx, DWORD PTR _fi$73649[ebp]
	push	edx
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@AA_N@Z ; NWindows::NFile::NFind::CEnumerator::Next
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@EnumerateD@2
; Line 783
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@@Z	; CDirItems::AddError
	mov	DWORD PTR ___result__$73652[ebp], eax
	cmp	DWORD PTR ___result__$73652[ebp], 0
	je	SHORT $LN5@EnumerateD@2
	mov	edx, DWORD PTR ___result__$73652[ebp]
	mov	DWORD PTR $T74518[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74518[ebp]
	jmp	$LN85@EnumerateD@2
$LN5@EnumerateD@2:
; Line 784
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN7@EnumerateD@2
$LN6@EnumerateD@2:
; Line 786
	movzx	eax, BYTE PTR _found$73650[ebp]
	test	eax, eax
	jne	SHORT $LN4@EnumerateD@2
; Line 787
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN7@EnumerateD@2
$LN4@EnumerateD@2:
; Line 789
	mov	ecx, DWORD PTR _dirItems$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	je	SHORT $LN3@EnumerateD@2
	mov	edx, DWORD PTR _ttt$73645[ebp]
	and	edx, 4095				; 00000fffH
	cmp	edx, 4095				; 00000fffH
	jne	SHORT $LN3@EnumerateD@2
; Line 791
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?ScanProgress@CDirItems@@QAEJABVUString@@@Z ; CDirItems::ScanProgress
	mov	DWORD PTR ___result__$73657[ebp], eax
	cmp	DWORD PTR ___result__$73657[ebp], 0
	je	SHORT $LN3@EnumerateD@2
	mov	ecx, DWORD PTR ___result__$73657[ebp]
	mov	DWORD PTR $T74519[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74519[ebp]
	jmp	$LN85@EnumerateD@2
$LN3@EnumerateD@2:
; Line 795
	movzx	edx, BYTE PTR _enterToSubFolders$[ebp]
	push	edx
	mov	eax, DWORD PTR _dirItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR _addArchivePrefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curNode$[ebp]
	push	edx
	lea	eax, DWORD PTR _fi$73649[ebp]
	push	eax
	call	?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateForItem
	mov	DWORD PTR ___result__$73660[ebp], eax
	cmp	DWORD PTR ___result__$73660[ebp], 0
	je	SHORT $LN1@EnumerateD@2
	mov	ecx, DWORD PTR ___result__$73660[ebp]
	mov	DWORD PTR $T74520[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74520[ebp]
	jmp	SHORT $LN85@EnumerateD@2
$LN1@EnumerateD@2:
; Line 796
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _fi$73649[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN8@EnumerateD@2
$LN7@EnumerateD@2:
; Line 798
	mov	DWORD PTR $T74521[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74521[ebp]
$LN85@EnumerateD@2:
; Line 799
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN119@EnumerateD@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 696				; 000002b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN119@EnumerateD@2:
	DD	15					; 0000000fH
	DD	$LN118@EnumerateD@2
$LN118@EnumerateD@2:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN102@EnumerateD@2
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN103@EnumerateD@2
	DD	-132					; ffffff7cH
	DD	56					; 00000038H
	DD	$LN104@EnumerateD@2
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN105@EnumerateD@2
	DD	-176					; ffffff50H
	DD	4
	DD	$LN106@EnumerateD@2
	DD	-208					; ffffff30H
	DD	12					; 0000000cH
	DD	$LN107@EnumerateD@2
	DD	-232					; ffffff18H
	DD	12					; 0000000cH
	DD	$LN108@EnumerateD@2
	DD	-272					; fffffef0H
	DD	12					; 0000000cH
	DD	$LN109@EnumerateD@2
	DD	-336					; fffffeb0H
	DD	56					; 00000038H
	DD	$LN110@EnumerateD@2
	DD	-380					; fffffe84H
	DD	12					; 0000000cH
	DD	$LN111@EnumerateD@2
	DD	-400					; fffffe70H
	DD	12					; 0000000cH
	DD	$LN112@EnumerateD@2
	DD	-464					; fffffe30H
	DD	56					; 00000038H
	DD	$LN113@EnumerateD@2
	DD	-492					; fffffe14H
	DD	16					; 00000010H
	DD	$LN114@EnumerateD@2
	DD	-560					; fffffdd0H
	DD	56					; 00000038H
	DD	$LN115@EnumerateD@2
	DD	-569					; fffffdc7H
	DD	1
	DD	$LN116@EnumerateD@2
$LN116@EnumerateD@2:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN115@EnumerateD@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN114@EnumerateD@2:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN113@EnumerateD@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN112@EnumerateD@2:
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN111@EnumerateD@2:
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN110@EnumerateD@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN109@EnumerateD@2:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN108@EnumerateD@2:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
$LN107@EnumerateD@2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN106@EnumerateD@2:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN105@EnumerateD@2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN104@EnumerateD@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN103@EnumerateD@2:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN102@EnumerateD@2:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$0:
	lea	ecx, DWORD PTR _needEnterVector$73514[ebp]
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$1:
	lea	ecx, DWORD PTR _fullPath$73521[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$2:
	lea	ecx, DWORD PTR _fi$73530[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$3:
	lea	ecx, DWORD PTR _pathParts$73546[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$4:
	lea	ecx, DWORD PTR _pathParts$73561[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$5:
	lea	ecx, DWORD PTR _addArchivePrefixNew$73566[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$6:
	lea	ecx, DWORD PTR _fullPath$73584[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$7:
	lea	ecx, DWORD PTR _fi$73586[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$8:
	lea	ecx, DWORD PTR $T74511[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$9:
	lea	ecx, DWORD PTR _driveStrings$73628[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$10:
	lea	ecx, DWORD PTR _driveName$73632[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$11:
	lea	ecx, DWORD PTR _fi$73637[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$12:
	lea	ecx, DWORD PTR $T74517[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$13:
	lea	ecx, DWORD PTR _enumerator$[ebp]
	jmp	??1CEnumerator@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$14:
	lea	ecx, DWORD PTR _fi$73649[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-692]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ENDP ; EnumerateDirItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Back@UString@@QBE_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@UString@@QBE_WXZ PROC				; UString::Back, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ax, WORD PTR [eax+ecx*2-2]
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@UString@@QBE_WXZ ENDP				; UString::Back
_TEXT	ENDS
PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add_PathSepar@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Add_PathSepar@UString@@QAEXXZ PROC			; UString::Add_PathSepar, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Add_PathSepar@UString@@QAEXXZ ENDP			; UString::Add_PathSepar
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteBack@UString@@QAEXXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?DeleteBack@UString@@QAEXXZ PROC			; UString::DeleteBack, COMDAT
; _this$ = ecx
; Line 602
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv66[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv66[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR tv66[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@UString@@QAEXXZ ENDP			; UString::DeleteBack
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDriveItem@CItem@NWildcard@@QBE_NXZ
_TEXT	SEGMENT
tv82 = -8						; size = 4
_this$ = -4						; size = 4
?IsDriveItem@CItem@NWildcard@@QBE_NXZ PROC		; NWildcard::CItem::IsDriveItem, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\wildcard.h
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	eax, 1
	jne	SHORT $LN3@IsDriveIte
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN3@IsDriveIte
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+14]
	test	eax, eax
	je	SHORT $LN3@IsDriveIte
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	ecx, eax
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDriveColonName@NWildcard@@YG_NPB_W@Z	; NWildcard::IsDriveColonName
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@IsDriveIte
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN4@IsDriveIte
$LN3@IsDriveIte:
	mov	DWORD PTR tv82[ebp], 0
$LN4@IsDriveIte:
	mov	al, BYTE PTR tv82[ebp]
; Line 45
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDriveItem@CItem@NWildcard@@QBE_NXZ ENDP		; NWildcard::CItem::IsDriveItem
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ PROC ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 16			; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ENDP ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
_TEXT	ENDS
PUBLIC	?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ	; CObjectVector<CDirItem>::Size
xdata$x	SEGMENT
__unwindtable$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$1
__ehfuncinfo$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv130 = -68						; size = 4
tv64 = -64						; size = 4
$T74574 = -60						; size = 4
$T74573 = -56						; size = 12
_res$ = -44						; size = 4
_numItems$ = -40					; size = 4
_parent$ = -36						; size = 4
_name2$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_curNode$ = 8						; size = 4
_phyParent$ = 12					; size = 4
_logParent$ = 16					; size = 4
_curFolderName$ = 20					; size = 4
_phyPrefix$ = 24					; size = 4
_addArchivePrefix$ = 28					; size = 4
_dirItems$ = 32						; size = 4
_enterToSubFolders$ = 36				; size = 1
?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z PROC ; EnumerateDirItems_Spec
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 324
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 325
	push	92					; 0000005cH
	mov	eax, DWORD PTR _curFolderName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name2$[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@_W@Z		; operator+
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 326
	lea	edx, DWORD PTR _name2$[ebp]
	push	edx
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddPrefix@CDirItems@@QAEIHHABVUString@@@Z ; CDirItems::AddPrefix
	mov	DWORD PTR _parent$[ebp], eax
; Line 327
	mov	ecx, DWORD PTR _dirItems$[ebp]
	add	ecx, 36					; 00000024H
	call	?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ ; CObjectVector<CDirItem>::Size
	mov	DWORD PTR _numItems$[ebp], eax
; Line 330
	movzx	edx, BYTE PTR _enterToSubFolders$[ebp]
	push	edx
	mov	eax, DWORD PTR _dirItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR _addArchivePrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR _name2$[ebp]
	push	edx
	mov	eax, DWORD PTR _phyPrefix$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T74573[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv64[ebp], eax
	mov	edx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv130[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv130[ebp]
	push	eax
	mov	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _parent$[ebp]
	push	edx
	mov	eax, DWORD PTR _curNode$[ebp]
	push	eax
	call	?EnumerateDirItems@@YGJABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateDirItems
	mov	DWORD PTR _res$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T74573[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 331
	mov	ecx, DWORD PTR _dirItems$[ebp]
	add	ecx, 36					; 00000024H
	call	?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ ; CObjectVector<CDirItem>::Size
	cmp	DWORD PTR _numItems$[ebp], eax
	jne	SHORT $LN1@EnumerateD@3
; Line 332
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?DeleteLastPrefix@CDirItems@@QAEXXZ	; CDirItems::DeleteLastPrefix
$LN1@EnumerateD@3:
; Line 333
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR $T74574[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name2$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74574[ebp]
; Line 334
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@EnumerateD@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN9@EnumerateD@3:
	DD	1
	DD	$LN8@EnumerateD@3
$LN8@EnumerateD@3:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@EnumerateD@3
$LN6@EnumerateD@3:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$0:
	lea	ecx, DWORD PTR _name2$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$1:
	lea	ecx, DWORD PTR $T74573[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ENDP ; EnumerateDirItems_Spec
PUBLIC	??0CFileInfo@NFind@NFile@NWindows@@QAE@ABU0123@@Z ; NWindows::NFile::NFind::CFileInfo::CFileInfo
PUBLIC	?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ ; CObjectVector<UString>::Back
PUBLIC	??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z	; CObjectVector<UString>::CObjectVector<UString>
PUBLIC	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CStreamEnumerator::~CStreamEnumerator
PUBLIC	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CStreamInfo::~CStreamInfo
PUBLIC	??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CStreamInfo::CStreamInfo
PUBLIC	??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ:PROC ; NWindows::NFile::NFind::CStreamInfo::GetReducedName
EXTRN	?IsMainStream@CStreamInfo@NFind@NFile@NWindows@@QBE_NXZ:PROC ; NWindows::NFile::NFind::CStreamInfo::IsMainStream
EXTRN	??H@YG?AVUString@@ABV0@PB_W@Z:PROC		; operator+
EXTRN	?Next@CStreamEnumerator@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@AA_N@Z:PROC ; NWindows::NFile::NFind::CStreamEnumerator::Next
xdata$x	SEGMENT
__ehfuncinfo$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv174 = -212						; size = 4
tv69 = -208						; size = 4
$T74587 = -204						; size = 4
$T74586 = -200						; size = 12
$T74585 = -188						; size = 4
_fi2$73303 = -180					; size = 56
_reducedName$73300 = -116				; size = 12
_addArchivePrefixNew$73299 = -96			; size = 12
_found$73290 = -73					; size = 1
_si$73289 = -64						; size = 24
_enumerator$ = -32					; size = 16
__$EHRec$ = -12						; size = 12
_fi$ = 8						; size = 4
_curNode$ = 12						; size = 4
_phyParent$ = 16					; size = 4
_logParent$ = 20					; size = 4
_fullPath$ = 24						; size = 4
_addArchivePrefix$ = 28					; size = 4
_dirItems$ = 32						; size = 4
?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z PROC ; EnumerateAltStreams
; Line 346
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 200				; 000000c8H
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 347
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN6@EnumerateA:
; Line 350
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 352
	lea	ecx, DWORD PTR _found$73290[ebp]
	push	ecx
	lea	edx, DWORD PTR _si$73289[ebp]
	push	edx
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	?Next@CStreamEnumerator@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@AA_N@Z ; NWindows::NFile::NFind::CStreamEnumerator::Next
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@EnumerateA
; Line 354
	push	OFFSET $SG73294
	mov	ecx, DWORD PTR _fullPath$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74586[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@PB_W@Z		; operator+
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv174[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv174[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddError@CDirItems@@QAEJABVUString@@@Z	; CDirItems::AddError
	mov	DWORD PTR $T74585[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T74586[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74585[ebp]
	jmp	$LN7@EnumerateA
$LN4@EnumerateA:
; Line 356
	movzx	edx, BYTE PTR _found$73290[ebp]
	test	edx, edx
	jne	SHORT $LN3@EnumerateA
; Line 357
	mov	DWORD PTR $T74587[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR $T74587[ebp]
	jmp	$LN7@EnumerateA
$LN3@EnumerateA:
; Line 358
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	?IsMainStream@CStreamInfo@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CStreamInfo::IsMainStream
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@EnumerateA
; Line 359
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN6@EnumerateA
$LN2@EnumerateA:
; Line 360
	mov	ecx, DWORD PTR _addArchivePrefix$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _addArchivePrefixNew$73299[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z ; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 361
	lea	edx, DWORD PTR _reducedName$73300[ebp]
	push	edx
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ ; NWindows::NFile::NFind::CStreamInfo::GetReducedName
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 362
	lea	eax, DWORD PTR _reducedName$73300[ebp]
	push	eax
	lea	ecx, DWORD PTR _addArchivePrefixNew$73299[ebp]
	call	?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ ; CObjectVector<UString>::Back
	mov	ecx, eax
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 363
	push	1
	lea	ecx, DWORD PTR _addArchivePrefixNew$73299[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?CheckPathToRoot@CCensorNode@NWildcard@@QBE_N_NAAV?$CObjectVector@VUString@@@@0@Z ; NWildcard::CCensorNode::CheckPathToRoot
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@EnumerateA
; Line 364
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _reducedName$73300[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _addArchivePrefixNew$73299[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN6@EnumerateA
$LN1@EnumerateA:
; Line 365
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi2$73303[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@ABU0123@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 366
	lea	ecx, DWORD PTR _reducedName$73300[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fi2$73303[ebp+40]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 367
	mov	edx, DWORD PTR _si$73289[ebp+16]
	mov	DWORD PTR _fi2$73303[ebp], edx
	mov	eax, DWORD PTR _si$73289[ebp+20]
	mov	DWORD PTR _fi2$73303[ebp+4], eax
; Line 368
	mov	ecx, DWORD PTR _fi2$73303[ebp+32]
	and	ecx, -17				; ffffffefH
	mov	DWORD PTR _fi2$73303[ebp+32], ecx
; Line 369
	mov	BYTE PTR _fi2$73303[ebp+36], 1
; Line 370
	lea	edx, DWORD PTR _fi2$73303[ebp]
	push	edx
	push	-1
	mov	eax, DWORD PTR _logParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phyParent$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ; CDirItems::AddDirFileInfo
; Line 371
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _fi2$73303[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _reducedName$73300[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _addArchivePrefixNew$73299[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _si$73289[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN6@EnumerateA
; Line 372
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _enumerator$[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
$LN7@EnumerateA:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@EnumerateA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN25@EnumerateA:
	DD	6
	DD	$LN24@EnumerateA
$LN24@EnumerateA:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN17@EnumerateA
	DD	-64					; ffffffc0H
	DD	24					; 00000018H
	DD	$LN18@EnumerateA
	DD	-73					; ffffffb7H
	DD	1
	DD	$LN19@EnumerateA
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN20@EnumerateA
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN21@EnumerateA
	DD	-180					; ffffff4cH
	DD	56					; 00000038H
	DD	$LN22@EnumerateA
$LN22@EnumerateA:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	50					; 00000032H
	DB	0
$LN21@EnumerateA:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN20@EnumerateA:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
$LN19@EnumerateA:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN18@EnumerateA:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	0
$LN17@EnumerateA:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$0:
	lea	ecx, DWORD PTR _enumerator$[ebp]
	jmp	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$1:
	lea	ecx, DWORD PTR _si$73289[ebp]
	jmp	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$2:
	lea	ecx, DWORD PTR $T74586[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$3:
	lea	ecx, DWORD PTR _addArchivePrefixNew$73299[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$4:
	lea	ecx, DWORD PTR _reducedName$73300[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z$5:
	lea	ecx, DWORD PTR _fi2$73303[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z ENDP ; EnumerateAltStreams
PUBLIC	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindStream::~CFindStream
PUBLIC	??0CFindStream@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindStream::CFindStream
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
xdata$x	SEGMENT
__unwindtable$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0
__ehfuncinfo$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_filePath$ = 8						; size = 4
??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z PROC ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindStream@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _filePath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ENDP ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFindStream@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindStream@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindStream::CFindStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindStream@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindStream::CFindStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFindStream@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindStream::~CFindStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFindStream@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindStream::~CFindStream
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CStreamEnumerator::~CStreamEnumerator, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CStreamEnumerator::~CStreamEnumerator
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CStreamInfo::CStreamInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CStreamInfo::CStreamInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CStreamInfo::~CStreamInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CStreamInfo::~CStreamInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileInfo@NFind@NFile@NWindows@@QAE@ABU0123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CFileInfo@NFind@NFile@NWindows@@QAE@ABU0123@@Z PROC	; NWindows::NFile::NFind::CFileInfo::CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, DWORD PTR ___that$[ebp]
	mov	ecx, 10					; 0000000aH
	mov	edi, DWORD PTR _this$[ebp]
	rep movsd
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CFileInfo@NFind@NFile@NWindows@@QAE@ABU0123@@Z ENDP	; NWindows::NFile::NFind::CFileInfo::CFileInfo
_TEXT	ENDS
PUBLIC	??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z	; CObjectVector<UString>::operator=
PUBLIC	??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
xdata$x	SEGMENT
__ehfuncinfo$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv257 = -188						; size = 4
tv70 = -184						; size = 4
tv253 = -180						; size = 4
tv76 = -176						; size = 4
$T74653 = -172						; size = 4
$T74652 = -168						; size = 4
$T74651 = -164						; size = 4
$T74650 = -160						; size = 4
$T74649 = -156						; size = 4
$T74648 = -152						; size = 4
$T74647 = -148						; size = 12
$T74646 = -136						; size = 4
$T74645 = -132						; size = 12
$T74644 = -120						; size = 4
_index$73378 = -116					; size = 4
_nextNode$ = -112					; size = 4
___result__$73367 = -108				; size = 4
_dirItem$73366 = -104					; size = 4
___result__$73361 = -100				; size = 4
___result__$73355 = -96					; size = 4
_secureIndex$73353 = -88				; size = 4
_dirItemIndex$ = -80					; size = 4
_addArchivePrefixNewTemp$73347 = -72			; size = 12
_addArchivePrefixNew$ = -52				; size = 12
_enterToSubFolders2$ = -33				; size = 1
_name$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_fi$ = 8						; size = 4
_curNode$ = 12						; size = 4
_phyParent$ = 16					; size = 4
_logParent$ = 20					; size = 4
_phyPrefix$ = 24					; size = 4
_addArchivePrefix$ = 28					; size = 4
_dirItems$ = 32						; size = 4
_enterToSubFolders$ = 36				; size = 1
?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z PROC ; EnumerateForItem
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 403
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 176				; 000000b0H
	push	edi
	lea	edi, DWORD PTR [ebp-188]
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 404
	mov	eax, DWORD PTR _fi$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 405
	mov	cl, BYTE PTR _enterToSubFolders$[ebp]
	mov	BYTE PTR _enterToSubFolders2$[ebp], cl
; Line 406
	mov	edx, DWORD PTR _addArchivePrefix$[ebp]
	push	edx
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z ; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 407
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 409
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _addArchivePrefixNewTemp$73347[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z ; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 410
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	edx, al
	test	edx, edx
	sete	al
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _addArchivePrefixNewTemp$73347[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?CheckPathToRoot@CCensorNode@NWildcard@@QBE_N_NAAV?$CObjectVector@VUString@@@@0@Z ; NWildcard::CCensorNode::CheckPathToRoot
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@EnumerateF
; Line 411
	mov	DWORD PTR $T74644[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _addArchivePrefixNewTemp$73347[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74644[ebp]
	jmp	$LN16@EnumerateF
$LN15@EnumerateF:
; Line 412
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _addArchivePrefixNewTemp$73347[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
; Line 413
	mov	DWORD PTR _dirItemIndex$[ebp], -1
; Line 415
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	ecx, al
	test	ecx, ecx
	sete	dl
	movzx	eax, dl
	push	eax
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?CheckPathToRoot@CCensorNode@NWildcard@@QBE_N_NAAV?$CObjectVector@VUString@@@@0@Z ; NWildcard::CCensorNode::CheckPathToRoot
	movzx	edx, al
	test	edx, edx
	je	$LN14@EnumerateF
; Line 417
	mov	DWORD PTR _secureIndex$73353[ebp], -1
; Line 419
	mov	eax, DWORD PTR _dirItems$[ebp]
	movzx	ecx, BYTE PTR [eax+149]
	test	ecx, ecx
	je	$LN13@EnumerateF
; Line 421
	lea	edx, DWORD PTR _secureIndex$73353[ebp]
	push	edx
	mov	eax, DWORD PTR _fi$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74645[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv253[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv253[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddSecurityItem@CDirItems@@QAEJABVUString@@AAH@Z ; CDirItems::AddSecurityItem
	mov	DWORD PTR ___result__$73355[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T74645[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	cmp	DWORD PTR ___result__$73355[ebp], 0
	je	SHORT $LN13@EnumerateF
	mov	edx, DWORD PTR ___result__$73355[ebp]
	mov	DWORD PTR $T74646[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74646[ebp]
	jmp	$LN16@EnumerateF
$LN13@EnumerateF:
; Line 425
	mov	ecx, DWORD PTR _dirItems$[ebp]
	add	ecx, 36					; 00000024H
	call	?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ ; CObjectVector<CDirItem>::Size
	mov	DWORD PTR _dirItemIndex$[ebp], eax
; Line 426
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	mov	ecx, DWORD PTR _secureIndex$73353[ebp]
	push	ecx
	mov	edx, DWORD PTR _logParent$[ebp]
	push	edx
	mov	eax, DWORD PTR _phyParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?AddDirFileInfo@CDirItems@@QAEXHHHABUCFileInfo@NFind@NFile@NWindows@@@Z ; CDirItems::AddDirFileInfo
; Line 427
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@EnumerateF
; Line 428
	mov	BYTE PTR _enterToSubFolders2$[ebp], 1
$LN14@EnumerateF:
; Line 432
	mov	edx, DWORD PTR _dirItems$[ebp]
	movzx	eax, BYTE PTR [edx+49]
	test	eax, eax
	je	$LN10@EnumerateF
; Line 436
	mov	ecx, DWORD PTR _dirItems$[ebp]
	push	ecx
	lea	edx, DWORD PTR _addArchivePrefixNew$[ebp]
	push	edx
	mov	eax, DWORD PTR _fi$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _phyPrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74647[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv257[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv257[ebp]
	push	ecx
	mov	edx, DWORD PTR _logParent$[ebp]
	push	edx
	mov	eax, DWORD PTR _phyParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _curNode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fi$[ebp]
	push	edx
	call	?EnumerateAltStreams@@YGJABUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@@Z ; EnumerateAltStreams
	mov	DWORD PTR ___result__$73361[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T74647[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	cmp	DWORD PTR ___result__$73361[ebp], 0
	je	SHORT $LN10@EnumerateF
	mov	eax, DWORD PTR ___result__$73361[ebp]
	mov	DWORD PTR $T74648[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74648[ebp]
	jmp	$LN16@EnumerateF
$LN10@EnumerateF:
; Line 439
	cmp	DWORD PTR _dirItemIndex$[ebp], 0
	jl	$LN8@EnumerateF
; Line 441
	mov	ecx, DWORD PTR _dirItemIndex$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR _dirItem$73366[ebp], eax
; Line 442
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirItem$73366[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dirItems$[ebp]
	call	?SetLinkInfo@CDirItems@@QAEJAAUCDirItem@@ABUCFileInfo@NFind@NFile@NWindows@@ABVUString@@@Z ; CDirItems::SetLinkInfo
	mov	DWORD PTR ___result__$73367[ebp], eax
	cmp	DWORD PTR ___result__$73367[ebp], 0
	je	SHORT $LN7@EnumerateF
	mov	edx, DWORD PTR ___result__$73367[ebp]
	mov	DWORD PTR $T74649[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74649[ebp]
	jmp	$LN16@EnumerateF
$LN7@EnumerateF:
; Line 443
	mov	ecx, DWORD PTR _dirItem$73366[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	je	SHORT $LN8@EnumerateF
; Line 444
	mov	DWORD PTR $T74650[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74650[ebp]
	jmp	$LN16@EnumerateF
$LN8@EnumerateF:
; Line 448
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@EnumerateF
; Line 449
	mov	DWORD PTR $T74651[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74651[ebp]
	jmp	$LN16@EnumerateF
$LN5@EnumerateF:
; Line 451
	mov	DWORD PTR _nextNode$[ebp], 0
; Line 452
	mov	ecx, DWORD PTR _addArchivePrefix$[ebp]
	call	?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ ; CObjectVector<UString>::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@EnumerateF
; Line 454
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _curNode$[ebp]
	call	?FindSubNode@CCensorNode@NWildcard@@QBEHABVUString@@@Z ; NWildcard::CCensorNode::FindSubNode
	mov	DWORD PTR _index$73378[ebp], eax
; Line 455
	cmp	DWORD PTR _index$73378[ebp], 0
	jl	SHORT $LN4@EnumerateF
; Line 456
	mov	eax, DWORD PTR _index$73378[ebp]
	push	eax
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 16					; 00000010H
	call	??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z ; CObjectVector<NWildcard::CCensorNode>::operator[]
	mov	DWORD PTR _nextNode$[ebp], eax
$LN4@EnumerateF:
; Line 458
	movzx	ecx, BYTE PTR _enterToSubFolders2$[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@EnumerateF
	cmp	DWORD PTR _nextNode$[ebp], 0
	jne	SHORT $LN2@EnumerateF
; Line 459
	mov	DWORD PTR $T74652[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74652[ebp]
	jmp	SHORT $LN16@EnumerateF
$LN2@EnumerateF:
; Line 461
	mov	edx, DWORD PTR _addArchivePrefix$[ebp]
	push	edx
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z ; CObjectVector<UString>::operator=
; Line 462
	cmp	DWORD PTR _nextNode$[ebp], 0
	jne	SHORT $LN1@EnumerateF
; Line 464
	mov	eax, DWORD PTR _curNode$[ebp]
	mov	DWORD PTR _nextNode$[ebp], eax
; Line 465
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
$LN1@EnumerateF:
; Line 472
	movzx	edx, BYTE PTR _enterToSubFolders2$[ebp]
	push	edx
	mov	eax, DWORD PTR _dirItems$[ebp]
	push	eax
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyPrefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _fi$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _logParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _phyParent$[ebp]
	push	edx
	mov	eax, DWORD PTR _nextNode$[ebp]
	push	eax
	call	?EnumerateDirItems_Spec@@YGJABVCCensorNode@NWildcard@@HHABVUString@@1ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ; EnumerateDirItems_Spec
	mov	DWORD PTR $T74653[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T74653[ebp]
$LN16@EnumerateF:
; Line 473
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@EnumerateF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 188				; 000000bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
$LN29@EnumerateF:
	DD	4
	DD	$LN28@EnumerateF
$LN28@EnumerateF:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN23@EnumerateF
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN24@EnumerateF
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN25@EnumerateF
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN26@EnumerateF
$LN26@EnumerateF:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN25@EnumerateF:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN24@EnumerateF:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
$LN23@EnumerateF:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$1:
	lea	ecx, DWORD PTR _addArchivePrefixNew$[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$2:
	lea	ecx, DWORD PTR _addArchivePrefixNewTemp$73347[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$3:
	lea	ecx, DWORD PTR $T74645[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z$4:
	lea	ecx, DWORD PTR $T74647[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?EnumerateForItem@@YGJAAUCFileInfo@NFind@NFile@NWindows@@ABVCCensorNode@NWildcard@@HHABVUString@@ABV?$CObjectVector@VUString@@@@AAVCDirItems@@_N@Z ENDP ; EnumerateForItem
EXTRN	?DoesNameContainWildcard@@YG_NABVUString@@@Z:PROC ; DoesNameContainWildcard
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_name$73395 = -12					; size = 4
_item$73392 = -8					; size = 4
_i$73388 = -4						; size = 4
_curNode$ = 8						; size = 4
?CanUseFsDirect@@YG_NABVCCensorNode@NWildcard@@@Z PROC	; CanUseFsDirect
; Line 477
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 478
	mov	DWORD PTR _i$73388[ebp], 0
	jmp	SHORT $LN6@CanUseFsDi
$LN5@CanUseFsDi:
	mov	eax, DWORD PTR _i$73388[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73388[ebp], eax
$LN6@CanUseFsDi:
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ; CObjectVector<NWildcard::CItem>::Size
	cmp	DWORD PTR _i$73388[ebp], eax
	jae	SHORT $LN4@CanUseFsDi
; Line 480
	mov	ecx, DWORD PTR _i$73388[ebp]
	push	ecx
	mov	ecx, DWORD PTR _curNode$[ebp]
	add	ecx, 28					; 0000001cH
	call	??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z ; CObjectVector<NWildcard::CItem>::operator[]
	mov	DWORD PTR _item$73392[ebp], eax
; Line 481
	mov	edx, DWORD PTR _item$73392[ebp]
	movzx	eax, BYTE PTR [edx+12]
	test	eax, eax
	jne	SHORT $LN2@CanUseFsDi
	mov	ecx, DWORD PTR _item$73392[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	eax, 1
	je	SHORT $LN3@CanUseFsDi
$LN2@CanUseFsDi:
; Line 482
	xor	al, al
	jmp	SHORT $LN7@CanUseFsDi
$LN3@CanUseFsDi:
; Line 483
	mov	ecx, DWORD PTR _item$73392[ebp]
	call	?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ ; CObjectVector<UString>::Front
	mov	DWORD PTR _name$73395[ebp], eax
; Line 496
	mov	ecx, DWORD PTR _name$73395[ebp]
	push	ecx
	call	?DoesNameContainWildcard@@YG_NABVUString@@@Z ; DoesNameContainWildcard
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@CanUseFsDi
; Line 497
	xor	al, al
	jmp	SHORT $LN7@CanUseFsDi
$LN1@CanUseFsDi:
; Line 498
	jmp	SHORT $LN5@CanUseFsDi
$LN4@CanUseFsDi:
; Line 499
	mov	al, 1
$LN7@CanUseFsDi:
; Line 500
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CanUseFsDirect@@YG_NABVCCensorNode@NWildcard@@@Z ENDP	; CanUseFsDirect
_TEXT	ENDS
PUBLIC	?IsPathSepar@@YG_N_W@Z				; IsPathSepar
EXTRN	?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z:PROC ; NWindows::NFile::NName::GetRootPrefixSize
xdata$x	SEGMENT
__unwindtable$?IsVirtualFsFolder@@YG_NABVUString@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsVirtualFsFolder@@YG_NABVUString@@0@Z$0
__ehfuncinfo$?IsVirtualFsFolder@@YG_NABVUString@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsVirtualFsFolder@@YG_NABVUString@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv82 = -40						; size = 4
$T74671 = -33						; size = 1
_s$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_prefix$ = 8						; size = 4
_name$ = 12						; size = 4
?IsVirtualFsFolder@@YG_NABVUString@@0@Z PROC		; IsVirtualFsFolder
; Line 506
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsVirtualFsFolder@@YG_NABVUString@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 507
	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 508
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 509
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Add_PathSepar@UString@@QAEXXZ		; UString::Add_PathSepar
; Line 510
	lea	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	edx, WORD PTR [eax]
	push	edx
	call	?IsPathSepar@@YG_N_W@Z			; IsPathSepar
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@IsVirtualF
	lea	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize
	test	eax, eax
	jne	SHORT $LN3@IsVirtualF
	mov	DWORD PTR tv82[ebp], 1
	jmp	SHORT $LN4@IsVirtualF
$LN3@IsVirtualF:
	mov	DWORD PTR tv82[ebp], 0
$LN4@IsVirtualF:
	mov	cl, BYTE PTR tv82[ebp]
	mov	BYTE PTR $T74671[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T74671[ebp]
; Line 511
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@IsVirtualF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@IsVirtualF:
	DD	1
	DD	$LN8@IsVirtualF
$LN8@IsVirtualF:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@IsVirtualF
$LN6@IsVirtualF:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?IsVirtualFsFolder@@YG_NABVUString@@0@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?IsVirtualFsFolder@@YG_NABVUString@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsVirtualFsFolder@@YG_NABVUString@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsVirtualFsFolder@@YG_NABVUString@@0@Z ENDP		; IsVirtualFsFolder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsPathSepar@@YG_N_W@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_c$ = 8							; size = 2
?IsPathSepar@@YG_N_W@Z PROC				; IsPathSepar, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN3@IsPathSepa
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN3@IsPathSepa
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@IsPathSepa
$LN3@IsPathSepa:
	mov	DWORD PTR tv68[ebp], 1
$LN4@IsPathSepa:
	mov	al, BYTE PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsPathSepar@@YG_N_W@Z ENDP				; IsPathSepar
_TEXT	ENDS
PUBLIC	??4?$CBuffer@E@@QAEAAV0@ABV0@@Z			; CBuffer<unsigned char>::operator=
PUBLIC	?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ	; NWindows::NFile::CReparseAttr::IsSymLink
PUBLIC	?Ptr@UString@@QBEPB_WI@Z			; UString::Ptr
PUBLIC	?Left@UString@@QBE?AV1@I@Z			; UString::Left
PUBLIC	?RightPtr@UString@@QBEPB_WI@Z			; UString::RightPtr
PUBLIC	?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::CReparseAttr::IsRelative
EXTRN	?FillLinkData@NFile@NWindows@@YG_NAAV?$CBuffer@E@@PB_W_N@Z:PROC ; NWindows::NFile::FillLinkData
EXTRN	??YUString@@QAEAAV0@PB_W@Z:PROC			; UString::operator+=
EXTRN	?CompareFileNames@@YGHPB_W0@Z:PROC		; CompareFileNames
EXTRN	?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z:PROC ; NWindows::NFile::NDir::MyGetFullPathName
EXTRN	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDrivePath
EXTRN	?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ:PROC ; NWindows::NFile::CReparseAttr::GetPath
xdata$x	SEGMENT
__ehfuncinfo$?FillFixedReparse@CDirItems@@QAEXXZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?FillFixedReparse@CDirItems@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?FillFixedReparse@CDirItems@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$7
	DD	06H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$9
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv313 = -256						; size = 4
tv187 = -252						; size = 4
tv271 = -248						; size = 4
tv142 = -244						; size = 4
$T74690 = -240						; size = 12
$T74689 = -225						; size = 1
$T74688 = -224						; size = 12
$T74687 = -209						; size = 1
_data$73723 = -204					; size = 8
_newLink$73721 = -188					; size = 12
_rootPrefixSize$73714 = -172				; size = 4
_prefix$73711 = -164					; size = 12
_logPath$73707 = -144					; size = 12
_fullPath$73706 = -124					; size = 12
_fullPathF$73702 = -104					; size = 12
_$S1$73700 = -84					; size = 12
_link$73698 = -68					; size = 4
_attr$73695 = -60					; size = 32
_item$73693 = -24					; size = 4
_i$73689 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?FillFixedReparse@CDirItems@@QAEXXZ PROC		; CDirItems::FillFixedReparse
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\enumdiritems.cpp
; Line 838
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FillFixedReparse@CDirItems@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 842
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+48]
	test	ecx, ecx
	jne	SHORT $LN17@FillFixedR
; Line 843
	jmp	$LN18@FillFixedR
$LN17@FillFixedR:
; Line 845
	mov	DWORD PTR _i$73689[ebp], 0
	jmp	SHORT $LN16@FillFixedR
$LN15@FillFixedR:
	mov	edx, DWORD PTR _i$73689[ebp]
	add	edx, 1
	mov	DWORD PTR _i$73689[ebp], edx
$LN16@FillFixedR:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ ; CObjectVector<CDirItem>::Size
	cmp	DWORD PTR _i$73689[ebp], eax
	jae	$LN18@FillFixedR
; Line 847
	mov	eax, DWORD PTR _i$73689[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR _item$73693[ebp], eax
; Line 848
	mov	ecx, DWORD PTR _item$73693[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN13@FillFixedR
; Line 849
	jmp	SHORT $LN15@FillFixedR
$LN13@FillFixedR:
; Line 851
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??0CReparseAttr@NFile@NWindows@@QAE@XZ	; NWindows::NFile::CReparseAttr::CReparseAttr
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 852
	mov	ecx, DWORD PTR _item$73693[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _item$73693[ebp]
	add	ecx, 44					; 0000002cH
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z ; NWindows::NFile::CReparseAttr::Parse
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN12@FillFixedR
; Line 853
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN12@FillFixedR:
; Line 854
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::CReparseAttr::IsRelative
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@FillFixedR
; Line 855
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN11@FillFixedR:
; Line 857
	lea	eax, DWORD PTR _$S1$73700[ebp]
	push	eax
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ ; NWindows::NFile::CReparseAttr::GetPath
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	mov	DWORD PTR _link$73698[ebp], ecx
; Line 858
	mov	ecx, DWORD PTR _link$73698[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN10@FillFixedR
; Line 859
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN10@FillFixedR:
; Line 862
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 863
	lea	eax, DWORD PTR _fullPathF$73702[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$73689[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74688[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetPhyPath
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv271[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv271[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z ; NWindows::NFile::NDir::MyGetFullPathName
	movzx	ecx, al
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	BYTE PTR $T74687[ebp], cl
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T74688[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	movzx	edx, BYTE PTR $T74687[ebp]
	test	edx, edx
	je	SHORT $LN9@FillFixedR
; Line 864
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN9@FillFixedR:
; Line 865
	lea	eax, DWORD PTR _fullPathF$73702[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 866
	mov	ecx, DWORD PTR _i$73689[ebp]
	push	ecx
	lea	edx, DWORD PTR _logPath$73707[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetLogPath
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 867
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	esi, eax
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	esi, eax
	jb	SHORT $LN8@FillFixedR
; Line 868
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN8@FillFixedR:
; Line 869
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	?RightPtr@UString@@QBEPB_WI@Z		; UString::RightPtr
	push	eax
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?CompareFileNames@@YGHPB_W0@Z		; CompareFileNames
	test	eax, eax
	je	SHORT $LN7@FillFixedR
; Line 870
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN7@FillFixedR:
; Line 872
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	esi, eax
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	sub	esi, eax
	push	esi
	lea	eax, DWORD PTR _prefix$73711[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	?Left@UString@@QBE?AV1@I@Z		; UString::Left
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 873
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	?Back@UString@@QBE_WXZ			; UString::Back
	movzx	ecx, ax
	push	ecx
	call	?IsPathSepar@@YG_N_W@Z			; IsPathSepar
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@FillFixedR
; Line 874
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN6@FillFixedR:
; Line 876
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize
	mov	DWORD PTR _rootPrefixSize$73714[ebp], eax
; Line 877
	cmp	DWORD PTR _rootPrefixSize$73714[ebp], 0
	jne	SHORT $LN5@FillFixedR
; Line 878
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN5@FillFixedR:
; Line 879
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _rootPrefixSize$73714[ebp], eax
	jne	SHORT $LN4@FillFixedR
; Line 880
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN4@FillFixedR:
; Line 882
	mov	ecx, DWORD PTR _link$73698[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	esi, eax
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	esi, eax
	ja	SHORT $LN3@FillFixedR
; Line 883
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN3@FillFixedR:
; Line 885
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	lea	eax, DWORD PTR $T74690[ebp]
	push	eax
	mov	ecx, DWORD PTR _link$73698[ebp]
	call	?Left@UString@@QBE?AV1@I@Z		; UString::Left
	mov	DWORD PTR tv187[ebp], eax
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR tv313[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv313[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?CompareFileNames@@YGHPB_W0@Z		; CompareFileNames
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR $T74689[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T74690[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	movzx	edx, BYTE PTR $T74689[ebp]
	test	edx, edx
	je	SHORT $LN2@FillFixedR
; Line 886
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN2@FillFixedR:
; Line 888
	mov	eax, DWORD PTR _rootPrefixSize$73714[ebp]
	push	eax
	lea	ecx, DWORD PTR _newLink$73721[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	?Left@UString@@QBE?AV1@I@Z		; UString::Left
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 889
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	mov	ecx, DWORD PTR _link$73698[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	lea	ecx, DWORD PTR _newLink$73721[ebp]
	call	??YUString@@QAEAAV0@PB_W@Z		; UString::operator+=
; Line 891
	lea	ecx, DWORD PTR _data$73723[ebp]
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 892
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::CReparseAttr::IsSymLink
	movzx	edx, al
	push	edx
	lea	ecx, DWORD PTR _newLink$73721[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	eax, DWORD PTR _data$73723[ebp]
	push	eax
	call	?FillLinkData@NFile@NWindows@@YG_NAAV?$CBuffer@E@@PB_W_N@Z ; NWindows::NFile::FillLinkData
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@FillFixedR
; Line 893
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _data$73723[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _newLink$73721[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN1@FillFixedR:
; Line 894
	lea	edx, DWORD PTR _data$73723[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$73693[ebp]
	add	ecx, 52					; 00000034H
	call	??4?$CBuffer@E@@QAEAAV0@ABV0@@Z		; CBuffer<unsigned char>::operator=
; Line 895
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _data$73723[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _newLink$73721[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _attr$73695[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	$LN15@FillFixedR
$LN18@FillFixedR:
; Line 896
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@FillFixedR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN40@FillFixedR:
	DD	8
	DD	$LN39@FillFixedR
$LN39@FillFixedR:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN30@FillFixedR
	DD	-84					; ffffffacH
	DD	12					; 0000000cH
	DD	$LN31@FillFixedR
	DD	-104					; ffffff98H
	DD	12					; 0000000cH
	DD	$LN32@FillFixedR
	DD	-124					; ffffff84H
	DD	12					; 0000000cH
	DD	$LN33@FillFixedR
	DD	-144					; ffffff70H
	DD	12					; 0000000cH
	DD	$LN34@FillFixedR
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN35@FillFixedR
	DD	-188					; ffffff44H
	DD	12					; 0000000cH
	DD	$LN36@FillFixedR
	DD	-204					; ffffff34H
	DD	8
	DD	$LN37@FillFixedR
$LN37@FillFixedR:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN36@FillFixedR:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN35@FillFixedR:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN34@FillFixedR:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN33@FillFixedR:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN32@FillFixedR:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	70					; 00000046H
	DB	0
$LN31@FillFixedR:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	0
$LN30@FillFixedR:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$0:
	lea	ecx, DWORD PTR _attr$73695[ebp]
	jmp	??1CReparseAttr@NFile@NWindows@@QAE@XZ
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$1:
	lea	ecx, DWORD PTR _$S1$73700[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$2:
	lea	ecx, DWORD PTR _fullPathF$73702[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$3:
	lea	ecx, DWORD PTR $T74688[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$4:
	lea	ecx, DWORD PTR _fullPath$73706[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$5:
	lea	ecx, DWORD PTR _logPath$73707[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$6:
	lea	ecx, DWORD PTR _prefix$73711[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$7:
	lea	ecx, DWORD PTR $T74690[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$8:
	lea	ecx, DWORD PTR _newLink$73721[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?FillFixedReparse@CDirItems@@QAEXXZ$9:
	lea	ecx, DWORD PTR _data$73723[ebp]
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$?FillFixedReparse@CDirItems@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FillFixedReparse@CDirItems@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FillFixedReparse@CDirItems@@QAEXXZ ENDP		; CDirItems::FillFixedReparse
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Ptr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Ptr@UString@@QBEPB_WI@Z PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	esp, ebp
	pop	ebp
	ret	4
?Ptr@UString@@QBEPB_WI@Z ENDP				; UString::Ptr
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?RightPtr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_num$ = 8						; size = 4
?RightPtr@UString@@QBEPB_WI@Z PROC			; UString::RightPtr, COMDAT
; _this$ = ecx
; Line 479
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*2]
	mov	ecx, DWORD PTR _num$[ebp]
	shl	ecx, 1
	sub	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?RightPtr@UString@@QBEPB_WI@Z ENDP			; UString::RightPtr
_TEXT	ENDS
EXTRN	??0UString@@AAE@IABV0@@Z:PROC			; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Left@UString@@QBE?AV1@I@Z
_TEXT	SEGMENT
$T74721 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_count$ = 12						; size = 4
?Left@UString@@QBE?AV1@I@Z PROC				; UString::Left, COMDAT
; _this$ = ecx
; Line 540
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T74721[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@AAE@IABV0@@Z		; UString::UString
	mov	edx, DWORD PTR $T74721[ebp]
	or	edx, 1
	mov	DWORD PTR $T74721[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Left@UString@@QBE?AV1@I@Z ENDP				; UString::Left
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::CReparseAttr::IsSymLink, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], -1610612724		; a000000cH
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSymLink@CReparseAttr@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::CReparseAttr::IsSymLink
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::CReparseAttr::IsRelative, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 1
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::CReparseAttr::IsRelative
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VUString@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VUString@@@@QBEIXZ PROC		; CObjectVector<UString>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VUString@@@@QBEIXZ ENDP		; CObjectVector<UString>::Size
_TEXT	ENDS
PUBLIC	?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ		; CRecordVector<void *>::IsEmpty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ PROC	; CObjectVector<UString>::IsEmpty, COMDAT
; _this$ = ecx
; Line 416
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ	; CRecordVector<void *>::IsEmpty
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@?$CObjectVector@VUString@@@@QBE_NXZ ENDP	; CObjectVector<UString>::IsEmpty
_TEXT	ENDS
PUBLIC	?ReserveDown@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::ReserveDown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ PROC	; CObjectVector<UString>::ReserveDown, COMDAT
; _this$ = ecx
; Line 417
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveDown@?$CRecordVector@PAX@@QAEXXZ ; CRecordVector<void *>::ReserveDown
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveDown@?$CObjectVector@VUString@@@@QAEXXZ ENDP	; CObjectVector<UString>::ReserveDown
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::CObjectVector<UString>
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z	; CRecordVector<void *>::AddInReserved
PUBLIC	?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::ConstructReserve
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z$1
__ehfuncinfo$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
tv85 = -36						; size = 4
$T74739 = -32						; size = 4
$T74738 = -28						; size = 4
_i$73736 = -24						; size = 4
_size$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_v$ = 8							; size = 4
??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z PROC		; CObjectVector<UString>::CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 422
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 424
	mov	ecx, DWORD PTR _v$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	mov	DWORD PTR _size$[ebp], eax
; Line 425
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z ; CRecordVector<void *>::ConstructReserve
; Line 426
	mov	DWORD PTR _i$73736[ebp], 0
	jmp	SHORT $LN3@CObjectVec
$LN2@CObjectVec:
	mov	ecx, DWORD PTR _i$73736[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$73736[ebp], ecx
$LN3@CObjectVec:
	mov	edx, DWORD PTR _i$73736[ebp]
	cmp	edx, DWORD PTR _size$[ebp]
	jae	SHORT $LN4@CObjectVec
; Line 427
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74739[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T74739[ebp], 0
	je	SHORT $LN6@CObjectVec
	mov	eax, DWORD PTR _i$73736[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	push	eax
	mov	ecx, DWORD PTR $T74739[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN7@CObjectVec
$LN6@CObjectVec:
	mov	DWORD PTR tv85[ebp], 0
$LN7@CObjectVec:
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T74738[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T74738[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ; CRecordVector<void *>::AddInReserved
	jmp	SHORT $LN2@CObjectVec
$LN4@CObjectVec:
; Line 428
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__unwindfunclet$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z$1:
	mov	eax, DWORD PTR $T74739[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CObjectVector@VUString@@@@QAE@ABV0@@Z ENDP		; CObjectVector<UString>::CObjectVector<UString>
PUBLIC	?Reserve@?$CRecordVector@PAX@@QAEXI@Z		; CRecordVector<void *>::Reserve
PUBLIC	?Clear@?$CObjectVector@VUString@@@@QAEXXZ	; CObjectVector<UString>::Clear
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z$0
__ehfuncinfo$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
tv84 = -36						; size = 4
$T74753 = -32						; size = 4
$T74752 = -28						; size = 4
_i$73748 = -24						; size = 4
_size$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_v$ = 8							; size = 4
??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z PROC	; CObjectVector<UString>::operator=, COMDAT
; _this$ = ecx
; Line 430
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 431
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN4@operator@2
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN5@operator@2
$LN4@operator@2:
; Line 433
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CObjectVector@VUString@@@@QAEXXZ ; CObjectVector<UString>::Clear
; Line 434
	mov	ecx, DWORD PTR _v$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	mov	DWORD PTR _size$[ebp], eax
; Line 435
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reserve@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::Reserve
; Line 436
	mov	DWORD PTR _i$73748[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	edx, DWORD PTR _i$73748[ebp]
	add	edx, 1
	mov	DWORD PTR _i$73748[ebp], edx
$LN3@operator@2:
	mov	eax, DWORD PTR _i$73748[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@operator@2
; Line 437
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74753[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T74753[ebp], 0
	je	SHORT $LN7@operator@2
	mov	ecx, DWORD PTR _i$73748[ebp]
	push	ecx
	mov	ecx, DWORD PTR _v$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	push	eax
	mov	ecx, DWORD PTR $T74753[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN8@operator@2
$LN7@operator@2:
	mov	DWORD PTR tv84[ebp], 0
$LN8@operator@2:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T74752[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T74752[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ; CRecordVector<void *>::AddInReserved
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
; Line 438
	mov	eax, DWORD PTR _this$[ebp]
$LN5@operator@2:
; Line 439
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z$0:
	mov	eax, DWORD PTR $T74753[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$CObjectVector@VUString@@@@QAEAAV0@ABV0@@Z ENDP	; CObjectVector<UString>::operator=
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z PROC	; CObjectVector<UString>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ENDP	; CObjectVector<UString>::operator[]
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z PROC	; CObjectVector<UString>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ENDP	; CObjectVector<UString>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ PROC ; CObjectVector<UString>::Front, COMDAT
; _this$ = ecx
; Line 452
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Front@?$CObjectVector@VUString@@@@QBEABVUString@@XZ ENDP ; CObjectVector<UString>::Front
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ PROC ; CObjectVector<UString>::Back, COMDAT
; _this$ = ecx
; Line 455
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@?$CObjectVector@VUString@@@@QAEAAVUString@@XZ ENDP ; CObjectVector<UString>::Back
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T74774 = -24						; size = 4
$T74773 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74774[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T74774[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T74774[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T74773[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T74773[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T74774[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
PUBLIC	??_GUString@@QAEPAXI@Z				; UString::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T74787 = -28						; size = 4
$T74786 = -24						; size = 4
_i$73774 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::~CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73774[ebp], eax
$LN2@CObjectVec@2:
	cmp	DWORD PTR _i$73774[ebp], 0
	je	SHORT $LN3@CObjectVec@2
; Line 489
	mov	eax, DWORD PTR _i$73774[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73774[ebp], eax
	mov	ecx, DWORD PTR _i$73774[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T74787[ebp], edx
	mov	eax, DWORD PTR $T74787[ebp]
	mov	DWORD PTR $T74786[ebp], eax
	cmp	DWORD PTR $T74786[ebp], 0
	je	SHORT $LN5@CObjectVec@2
	push	1
	mov	ecx, DWORD PTR $T74786[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@2
$LN5@CObjectVec@2:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@2:
	jmp	SHORT $LN2@CObjectVec@2
$LN3@CObjectVec@2:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	?DeleteBack@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::DeleteBack
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeleteBack@?$CObjectVector@VUString@@@@QAEXXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T74800 = -12						; size = 4
$T74799 = -8						; size = 4
_this$ = -4						; size = 4
?DeleteBack@?$CObjectVector@VUString@@@@QAEXXZ PROC	; CObjectVector<UString>::DeleteBack, COMDAT
; _this$ = ecx
; Line 521
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 522
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T74800[ebp], eax
	mov	ecx, DWORD PTR $T74800[ebp]
	mov	DWORD PTR $T74799[ebp], ecx
	cmp	DWORD PTR $T74799[ebp], 0
	je	SHORT $LN3@DeleteBack
	push	1
	mov	ecx, DWORD PTR $T74799[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@DeleteBack
$LN3@DeleteBack:
	mov	DWORD PTR tv74[ebp], 0
$LN4@DeleteBack:
; Line 523
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteBack@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::DeleteBack
; Line 524
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@?$CObjectVector@VUString@@@@QAEXXZ ENDP	; CObjectVector<UString>::DeleteBack
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ PROC ; CObjectVector<NWildcard::CCensorNode>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VCCensorNode@NWildcard@@@@QBEIXZ ENDP ; CObjectVector<NWildcard::CCensorNode>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z PROC ; CObjectVector<NWildcard::CCensorNode>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCCensorNode@NWildcard@@@@QBEABVCCensorNode@NWildcard@@I@Z ENDP ; CObjectVector<NWildcard::CCensorNode>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ PROC	; CObjectVector<NWildcard::CItem>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCItem@NWildcard@@@@QBEIXZ ENDP	; CObjectVector<NWildcard::CItem>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z PROC ; CObjectVector<NWildcard::CItem>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCItem@NWildcard@@@@QBEABUCItem@NWildcard@@I@Z ENDP ; CObjectVector<NWildcard::CItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ PROC	; CObjectVector<NWildcard::CPair>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCPair@NWildcard@@@@QBEIXZ ENDP	; CObjectVector<NWildcard::CPair>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z PROC ; CObjectVector<NWildcard::CPair>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCPair@NWildcard@@@@QBEABUCPair@NWildcard@@I@Z ENDP ; CObjectVector<NWildcard::CPair>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ PROC		; CObjectVector<CBuffer<unsigned char> >::CObjectVector<CBuffer<unsigned char> >, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ ENDP		; CObjectVector<CBuffer<unsigned char> >::CObjectVector<CBuffer<unsigned char> >
_TEXT	ENDS
PUBLIC	??_G?$CBuffer@E@@QAEPAXI@Z			; CBuffer<unsigned char>::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T74821 = -28						; size = 4
$T74820 = -24						; size = 4
_i$73834 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ PROC		; CObjectVector<CBuffer<unsigned char> >::~CObjectVector<CBuffer<unsigned char> >, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73834[ebp], eax
$LN2@CObjectVec@3:
	cmp	DWORD PTR _i$73834[ebp], 0
	je	SHORT $LN3@CObjectVec@3
; Line 489
	mov	eax, DWORD PTR _i$73834[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73834[ebp], eax
	mov	ecx, DWORD PTR _i$73834[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T74821[ebp], edx
	mov	eax, DWORD PTR $T74821[ebp]
	mov	DWORD PTR $T74820[ebp], eax
	cmp	DWORD PTR $T74820[ebp], 0
	je	SHORT $LN5@CObjectVec@3
	push	1
	mov	ecx, DWORD PTR $T74820[ebp]
	call	??_G?$CBuffer@E@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@3
$LN5@CObjectVec@3:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@3:
	jmp	SHORT $LN2@CObjectVec@3
$LN3@CObjectVec@3:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@V?$CBuffer@E@@@@QAE@XZ ENDP		; CObjectVector<CBuffer<unsigned char> >::~CObjectVector<CBuffer<unsigned char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
$T74835 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74835[ebp], ecx
	mov	edx, DWORD PTR $T74835[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CBuffer@E@@QAEXXZ
_TEXT	SEGMENT
$T74838 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CBuffer@E@@QAEXXZ PROC				; CBuffer<unsigned char>::Free, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Free
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74838[ebp], edx
	mov	eax, DWORD PTR $T74838[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN1@Free:
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 22
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CBuffer@E@@QAEXXZ ENDP				; CBuffer<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
$T74843 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::~CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74843[ebp], ecx
	mov	edx, DWORD PTR $T74843[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QAEPAEXZ PROC				; CBuffer<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QAEPAEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CBuffer@E@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CBuffer@E@@QBEIXZ PROC				; CBuffer<unsigned char>::Size, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CBuffer@E@@QBEIXZ ENDP				; CBuffer<unsigned char>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Alloc@?$CBuffer@E@@QAEXI@Z
_TEXT	SEGMENT
$T74850 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?Alloc@?$CBuffer@E@@QAEXI@Z PROC			; CBuffer<unsigned char>::Alloc, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN3@Alloc
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 48
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN3@Alloc
; Line 50
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74850[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T74850[ebp]
	mov	DWORD PTR [eax], ecx
; Line 51
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@Alloc:
; Line 54
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Alloc@?$CBuffer@E@@QAEXI@Z ENDP			; CBuffer<unsigned char>::Alloc
_TEXT	ENDS
PUBLIC	?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z		; CBuffer<unsigned char>::CopyFrom
PUBLIC	??B?$CBuffer@E@@QBEPBEXZ			; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$CBuffer@E@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
??4?$CBuffer@E@@QAEAAV0@ABV0@@Z PROC			; CBuffer<unsigned char>::operator=, COMDAT
; _this$ = ecx
; Line 90
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	mov	eax, DWORD PTR _buffer$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN1@operator@3
; Line 92
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _buffer$[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z	; CBuffer<unsigned char>::CopyFrom
$LN1@operator@3:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
; Line 94
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CBuffer@E@@QAEAAV0@ABV0@@Z ENDP			; CBuffer<unsigned char>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@H@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@H@@QAE@XZ PROC			; CRecordVector<int>::CRecordVector<int>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@H@@QAE@XZ ENDP			; CRecordVector<int>::CRecordVector<int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveDown@?$CRecordVector@H@@QAEXXZ
_TEXT	SEGMENT
$T74858 = -16						; size = 4
$T74857 = -12						; size = 4
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?ReserveDown@?$CRecordVector@H@@QAEXXZ PROC		; CRecordVector<int>::ReserveDown, COMDAT
; _this$ = ecx
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@ReserveDow
; Line 109
	jmp	SHORT $LN3@ReserveDow
$LN2@ReserveDow:
; Line 110
	mov	DWORD PTR _p$[ebp], 0
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@ReserveDow
; Line 113
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74857[ebp], eax
	mov	eax, DWORD PTR $T74857[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveDow:
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74858[ebp], ecx
	mov	edx, DWORD PTR $T74858[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 118
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx
$LN3@ReserveDow:
; Line 119
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveDown@?$CRecordVector@H@@QAEXXZ ENDP		; CRecordVector<int>::ReserveDown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@H@@QAE@XZ
_TEXT	SEGMENT
$T74861 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@H@@QAE@XZ PROC			; CRecordVector<int>::~CRecordVector<int>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74861[ebp], ecx
	mov	edx, DWORD PTR $T74861[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@H@@QAE@XZ ENDP			; CRecordVector<int>::~CRecordVector<int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteBack@?$CRecordVector@H@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeleteBack@?$CRecordVector@H@@QAEXXZ PROC		; CRecordVector<int>::DeleteBack, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@?$CRecordVector@H@@QAEXXZ ENDP		; CRecordVector<int>::DeleteBack
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ	; CRecordVector<int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@H@@QAEIH@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@H@@QAEIH@Z PROC			; CRecordVector<int>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ ; CRecordVector<int>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@H@@QAEIH@Z ENDP			; CRecordVector<int>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@H@@QBEABHI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@H@@QBEABHI@Z PROC			; CRecordVector<int>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@H@@QBEABHI@Z ENDP			; CRecordVector<int>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ PROC		; CObjectVector<CDirItem>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCDirItem@@@@QBEIXZ ENDP		; CObjectVector<CDirItem>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveDown@?$CObjectVector@UCDirItem@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReserveDown@?$CObjectVector@UCDirItem@@@@QAEXXZ PROC	; CObjectVector<CDirItem>::ReserveDown, COMDAT
; _this$ = ecx
; Line 417
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveDown@?$CRecordVector@PAX@@QAEXXZ ; CRecordVector<void *>::ReserveDown
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveDown@?$CObjectVector@UCDirItem@@@@QAEXXZ ENDP	; CObjectVector<CDirItem>::ReserveDown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjectVector@UCDirItem@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCDirItem@@@@QAE@XZ PROC		; CObjectVector<CDirItem>::CObjectVector<CDirItem>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCDirItem@@@@QAE@XZ ENDP		; CObjectVector<CDirItem>::CObjectVector<CDirItem>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z PROC ; CObjectVector<CDirItem>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ENDP ; CObjectVector<CDirItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z PROC ; CObjectVector<CDirItem>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z ENDP ; CObjectVector<CDirItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@XZ PROC ; CObjectVector<CDirItem>::Back, COMDAT
; _this$ = ecx
; Line 455
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@?$CObjectVector@UCDirItem@@@@QAEAAUCDirItem@@XZ ENDP ; CObjectVector<CDirItem>::Back
_TEXT	ENDS
PUBLIC	??0CDirItem@@QAE@ABU0@@Z			; CDirItem::CDirItem
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T74884 = -24						; size = 4
$T74883 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z PROC ; CObjectVector<CDirItem>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74884[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T74884[ebp], 0
	je	SHORT $LN3@Add@2
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T74884[ebp]
	call	??0CDirItem@@QAE@ABU0@@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add@2
$LN3@Add@2:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add@2:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T74883[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T74883[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z$0:
	mov	eax, DWORD PTR $T74884[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@UCDirItem@@@@QAEIABUCDirItem@@@Z ENDP ; CObjectVector<CDirItem>::Add
PUBLIC	??_GCDirItem@@QAEPAXI@Z				; CDirItem::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCDirItem@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCDirItem@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCDirItem@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCDirItem@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCDirItem@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T74897 = -28						; size = 4
$T74896 = -24						; size = 4
_i$73911 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCDirItem@@@@QAE@XZ PROC		; CObjectVector<CDirItem>::~CObjectVector<CDirItem>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCDirItem@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73911[ebp], eax
$LN2@CObjectVec@4:
	cmp	DWORD PTR _i$73911[ebp], 0
	je	SHORT $LN3@CObjectVec@4
; Line 489
	mov	eax, DWORD PTR _i$73911[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73911[ebp], eax
	mov	ecx, DWORD PTR _i$73911[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T74897[ebp], edx
	mov	eax, DWORD PTR $T74897[ebp]
	mov	DWORD PTR $T74896[ebp], eax
	cmp	DWORD PTR $T74896[ebp], 0
	je	SHORT $LN5@CObjectVec@4
	push	1
	mov	ecx, DWORD PTR $T74896[ebp]
	call	??_GCDirItem@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@4
$LN5@CObjectVec@4:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@4:
	jmp	SHORT $LN2@CObjectVec@4
$LN3@CObjectVec@4:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCDirItem@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCDirItem@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCDirItem@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCDirItem@@@@QAE@XZ ENDP		; CObjectVector<CDirItem>::~CObjectVector<CDirItem>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CRecordVector@_N@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@_N@@QAE@XZ PROC			; CRecordVector<bool>::CRecordVector<bool>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@_N@@QAE@XZ ENDP			; CRecordVector<bool>::CRecordVector<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@_N@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@_N@@QBEIXZ PROC			; CRecordVector<bool>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@_N@@QBEIXZ ENDP			; CRecordVector<bool>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@_N@@QAE@XZ
_TEXT	SEGMENT
$T74913 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@_N@@QAE@XZ PROC			; CRecordVector<bool>::~CRecordVector<bool>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74913[ebp], ecx
	mov	edx, DWORD PTR $T74913[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@_N@@QAE@XZ ENDP			; CRecordVector<bool>::~CRecordVector<bool>
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ	; CRecordVector<bool>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@_N@@QAEI_N@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 1
?Add@?$CRecordVector@_N@@QAEI_N@Z PROC			; CRecordVector<bool>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ ; CRecordVector<bool>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _item$[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv71[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@_N@@QAEI_N@Z ENDP			; CRecordVector<bool>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@_N@@QAEAA_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@_N@@QAEAA_NI@Z PROC			; CRecordVector<bool>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _index$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@_N@@QAEAA_NI@Z ENDP			; CRecordVector<bool>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GUString@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUString@@QAEPAXI@Z PROC				; UString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUString@@QAEPAXI@Z ENDP				; UString::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_G?$CBuffer@E@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CBuffer@E@@QAEPAXI@Z PROC				; CBuffer<unsigned char>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$CBuffer@E@@QAEPAXI@Z ENDP				; CBuffer<unsigned char>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$CBuffer@E@@QAE@ABV0@@Z			; CBuffer<unsigned char>::CBuffer<unsigned char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDirItem@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDirItem@@QAE@ABU0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDirItem@@QAE@ABU0@@Z$1
__ehfuncinfo$??0CDirItem@@QAE@ABU0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDirItem@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDirItem@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CDirItem@@QAE@ABU0@@Z PROC				; CDirItem::CDirItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDirItem@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+20], edx
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR [ecx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], edx
	mov	DWORD PTR [ecx+28], eax
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CBuffer@E@@QAE@ABV0@@Z		; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 52					; 00000034H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0?$CBuffer@E@@QAE@ABV0@@Z		; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR [edx+60], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR [edx+64], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR [edx+68], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR [edx+72], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+76]
	mov	BYTE PTR [edx+76], cl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDirItem@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CDirItem@@QAE@ABU0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??0CDirItem@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDirItem@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDirItem@@QAE@ABU0@@Z ENDP				; CDirItem::CDirItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDirItem@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDirItem@@QAEPAXI@Z PROC				; CDirItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDirItem@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDirItem@@QAEPAXI@Z ENDP				; CDirItem::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ PROC		; CRecordVector<void *>::IsEmpty, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@?$CRecordVector@PAX@@QBE_NXZ ENDP		; CRecordVector<void *>::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
$T74943 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z PROC	; CRecordVector<void *>::ConstructReserve, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@ConstructR
; Line 55
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74943[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T74943[ebp]
	mov	DWORD PTR [eax], ecx
; Line 56
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN2@ConstructR:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ConstructReserve@?$CRecordVector@PAX@@QAEXI@Z ENDP	; CRecordVector<void *>::ConstructReserve
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Reserve@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
$T74947 = -16						; size = 4
$T74946 = -12						; size = 4
_p$73968 = -8						; size = 4
_this$ = -4						; size = 4
_newCapacity$ = 8					; size = 4
?Reserve@?$CRecordVector@PAX@@QAEXI@Z PROC		; CRecordVector<void *>::Reserve, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN3@Reserve
; Line 64
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74946[ebp], eax
	mov	eax, DWORD PTR $T74946[ebp]
	mov	DWORD PTR _p$73968[ebp], eax
; Line 65
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reserve
; Line 66
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$73968[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@Reserve:
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74947[ebp], edx
	mov	eax, DWORD PTR $T74947[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 68
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$73968[ebp]
	mov	DWORD PTR [ecx], edx
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@Reserve:
; Line 71
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Reserve@?$CRecordVector@PAX@@QAEXI@Z ENDP		; CRecordVector<void *>::Reserve
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveDown@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
$T74951 = -16						; size = 4
$T74950 = -12						; size = 4
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?ReserveDown@?$CRecordVector@PAX@@QAEXXZ PROC		; CRecordVector<void *>::ReserveDown, COMDAT
; _this$ = ecx
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@ReserveDow@2
; Line 109
	jmp	SHORT $LN3@ReserveDow@2
$LN2@ReserveDow@2:
; Line 110
	mov	DWORD PTR _p$[ebp], 0
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@ReserveDow@2
; Line 113
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74950[ebp], eax
	mov	eax, DWORD PTR $T74950[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveDow@2:
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74951[ebp], ecx
	mov	edx, DWORD PTR $T74951[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 118
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx
$LN3@ReserveDow@2:
; Line 119
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveDown@?$CRecordVector@PAX@@QAEXXZ ENDP		; CRecordVector<void *>::ReserveDown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T74954 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74954[ebp], ecx
	mov	edx, DWORD PTR $T74954[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteBack@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeleteBack@?$CRecordVector@PAX@@QAEXXZ PROC		; CRecordVector<void *>::DeleteBack, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@?$CRecordVector@PAX@@QAEXXZ ENDP		; CRecordVector<void *>::DeleteBack
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z PROC	; CRecordVector<void *>::AddInReserved, COMDAT
; _this$ = ecx
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 207
	mov	esp, ebp
	pop	ebp
	ret	4
?AddInReserved@?$CRecordVector@PAX@@QAEXQAX@Z ENDP	; CRecordVector<void *>::AddInReserved
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
PUBLIC	?Clear@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@?$CObjectVector@VUString@@@@QAEXXZ
_TEXT	SEGMENT
tv75 = -20						; size = 4
$T74968 = -16						; size = 4
$T74967 = -12						; size = 4
_i$74000 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@?$CObjectVector@VUString@@@@QAEXXZ PROC		; CObjectVector<UString>::Clear, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$74000[ebp], eax
$LN2@Clear:
	cmp	DWORD PTR _i$74000[ebp], 0
	je	SHORT $LN1@Clear
; Line 501
	mov	eax, DWORD PTR _i$74000[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$74000[ebp], eax
	mov	ecx, DWORD PTR _i$74000[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T74968[ebp], edx
	mov	eax, DWORD PTR $T74968[ebp]
	mov	DWORD PTR $T74967[ebp], eax
	cmp	DWORD PTR $T74967[ebp], 0
	je	SHORT $LN5@Clear
	push	1
	mov	ecx, DWORD PTR $T74967[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 502
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 503
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CObjectVector@VUString@@@@QAEXXZ ENDP		; CObjectVector<UString>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@ABV0@@Z
_TEXT	SEGMENT
$T74973 = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
??0?$CBuffer@E@@QAE@ABV0@@Z PROC			; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 28
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _size$[ebp], eax
; Line 29
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CBuffer
; Line 31
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74973[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T74973[ebp]
	mov	DWORD PTR [edx], eax
; Line 32
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@CBuffer:
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CBuffer@E@@QAE@ABV0@@Z ENDP			; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QBEPBEXZ PROC				; CBuffer<unsigned char>::operator unsigned char const *, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QBEPBEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z PROC			; CBuffer<unsigned char>::CopyFrom, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 69
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CopyFrom
; Line 70
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@CopyFrom:
; Line 71
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z ENDP			; CBuffer<unsigned char>::CopyFrom
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ
_TEXT	SEGMENT
$T74981 = -20						; size = 4
$T74980 = -16						; size = 4
_p$74024 = -12						; size = 4
_newCapacity$74023 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ PROC	; CRecordVector<int>::ReserveOnePosition, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$74023[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$74023[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74980[ebp], eax
	mov	eax, DWORD PTR $T74980[ebp]
	mov	DWORD PTR _p$74024[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$74024[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74981[ebp], edx
	mov	eax, DWORD PTR $T74981[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$74024[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$74023[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@H@@AAEXXZ ENDP	; CRecordVector<int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ
_TEXT	SEGMENT
$T74985 = -20						; size = 4
$T74984 = -16						; size = 4
_p$74035 = -12						; size = 4
_newCapacity$74034 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ PROC	; CRecordVector<bool>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@ReserveOne@2
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$74034[ebp], ecx
; Line 23
	mov	edx, DWORD PTR _newCapacity$74034[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74984[ebp], eax
	mov	eax, DWORD PTR $T74984[ebp]
	mov	DWORD PTR _p$74035[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@2
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$74035[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@2:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74985[ebp], edx
	mov	eax, DWORD PTR $T74985[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$74035[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$74034[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@2:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@_N@@AAEXXZ ENDP	; CRecordVector<bool>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T74989 = -20						; size = 4
$T74988 = -16						; size = 4
_p$74046 = -12						; size = 4
_newCapacity$74045 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@3
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$74045[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$74045[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T74988[ebp], eax
	mov	eax, DWORD PTR $T74988[ebp]
	mov	DWORD PTR _p$74046[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@3
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$74046[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@3:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T74989[ebp], edx
	mov	eax, DWORD PTR $T74989[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$74046[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$74045[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@3:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@PAX@@QAEXXZ PROC			; CRecordVector<void *>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@PAX@@QAEXXZ ENDP			; CRecordVector<void *>::Clear
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Common\DefaultName.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?GetDefaultName2@@YG?AVUString@@ABV1@00@Z	; GetDefaultName2
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	?TrimRight@UString@@QAEXXZ:PROC			; UString::TrimRight
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z$0
__ehfuncinfo$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\defaultname.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
$T67121 = -36						; size = 4
_name$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fileName$ = 12						; size = 4
_extension$ = 16					; size = 4
_addSubExtension$ = 20					; size = 4
?GetDefaultName2@@YG?AVUString@@ABV1@00@Z PROC		; GetDefaultName2
; Line 33
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67121[ebp], 0
; Line 34
	mov	eax, DWORD PTR _addSubExtension$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extension$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?GetDefaultName3@@YG?AVUString@@ABV1@00@Z ; GetDefaultName3
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 35
	lea	ecx, DWORD PTR _name$[ebp]
	call	?TrimRight@UString@@QAEXXZ		; UString::TrimRight
; Line 36
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	edx, DWORD PTR $T67121[ebp]
	or	edx, 1
	mov	DWORD PTR $T67121[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 37
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetDefault
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN9@GetDefault:
	DD	1
	DD	$LN8@GetDefault
$LN8@GetDefault:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@GetDefault
$LN6@GetDefault:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z$1:
	mov	eax, DWORD PTR $T67121[ebp]
	and	eax, 1
	je	$LN5@GetDefault
	and	DWORD PTR $T67121[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN5@GetDefault:
	ret	0
__ehhandler$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDefaultName2@@YG?AVUString@@ABV1@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDefaultName2@@YG?AVUString@@ABV1@00@Z ENDP		; GetDefaultName2
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67138 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67138[ebp], ecx
	mov	edx, DWORD PTR $T67138[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
PUBLIC	??H@YG?AVUString@@ABV0@_W@Z			; operator+
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?ReverseFind_Dot@UString@@QBEHXZ		; UString::ReverseFind_Dot
PUBLIC	?Left@UString@@QBE?AV1@I@Z			; UString::Left
PUBLIC	?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z		; UString::IsEqualTo_NoCase
PUBLIC	?Ptr@UString@@QBEPB_WI@Z			; UString::Ptr
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
EXTRN	??H@YG?AVUString@@ABV0@0@Z:PROC			; operator+
xdata$x	SEGMENT
__unwindtable$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z$2
__ehfuncinfo$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv165 = -72						; size = 4
tv148 = -68						; size = 4
tv159 = -64						; size = 4
tv153 = -60						; size = 4
$T67145 = -56						; size = 4
$T67142 = -52						; size = 12
$T67141 = -40						; size = 12
_dotPos$ = -28						; size = 4
_dotPos$67068 = -24					; size = 4
_fileNameLen$ = -20					; size = 4
_extLen$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_fileName$ = 12						; size = 4
_extension$ = 16					; size = 4
_addSubExtension$ = 20					; size = 4
?GetDefaultName3@@YG?AVUString@@ABV1@00@Z PROC		; GetDefaultName3
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\defaultname.cpp
; Line 9
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	edi
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67145[ebp], 0
; Line 10
	mov	ecx, DWORD PTR _extension$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR _extLen$[ebp], eax
; Line 11
	mov	ecx, DWORD PTR _fileName$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR _fileNameLen$[ebp], eax
; Line 13
	mov	eax, DWORD PTR _extLen$[ebp]
	add	eax, 1
	cmp	DWORD PTR _fileNameLen$[ebp], eax
	jbe	$LN6@GetDefault@2
; Line 15
	mov	ecx, DWORD PTR _extLen$[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _fileNameLen$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _dotPos$67068[ebp], edx
; Line 16
	mov	ecx, DWORD PTR _fileName$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _dotPos$67068[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN6@GetDefault@2
; Line 17
	mov	eax, DWORD PTR _dotPos$67068[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	mov	ecx, DWORD PTR _extension$[ebp]
	call	?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z	; UString::IsEqualTo_NoCase
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@GetDefault@2
; Line 18
	mov	edx, DWORD PTR _addSubExtension$[ebp]
	push	edx
	mov	eax, DWORD PTR _dotPos$67068[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67141[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileName$[ebp]
	call	?Left@UString@@QBE?AV1@I@Z		; UString::Left
	mov	DWORD PTR tv153[ebp], eax
	mov	edx, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv159[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv159[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	edx, DWORD PTR $T67145[ebp]
	or	edx, 1
	mov	DWORD PTR $T67145[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67141[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN7@GetDefault@2
$LN6@GetDefault@2:
; Line 21
	mov	ecx, DWORD PTR _fileName$[ebp]
	call	?ReverseFind_Dot@UString@@QBEHXZ	; UString::ReverseFind_Dot
	mov	DWORD PTR _dotPos$[ebp], eax
; Line 22
	cmp	DWORD PTR _dotPos$[ebp], 0
	jle	SHORT $LN3@GetDefault@2
; Line 23
	mov	eax, DWORD PTR _addSubExtension$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dotPos$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67142[ebp]
	push	edx
	mov	ecx, DWORD PTR _fileName$[ebp]
	call	?Left@UString@@QBE?AV1@I@Z		; UString::Left
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv165[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv165[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	eax, DWORD PTR $T67145[ebp]
	or	eax, 1
	mov	DWORD PTR $T67145[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67142[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN7@GetDefault@2
$LN3@GetDefault@2:
; Line 25
	mov	ecx, DWORD PTR _addSubExtension$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetDefault@2
; Line 26
	push	126					; 0000007eH
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	??H@YG?AVUString@@ABV0@_W@Z		; operator+
	mov	ecx, DWORD PTR $T67145[ebp]
	or	ecx, 1
	mov	DWORD PTR $T67145[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN7@GetDefault@2
; Line 27
	jmp	SHORT $LN7@GetDefault@2
$LN2@GetDefault@2:
; Line 28
	mov	edx, DWORD PTR _addSubExtension$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??H@YG?AVUString@@ABV0@0@Z		; operator+
	mov	edx, DWORD PTR $T67145[ebp]
	or	edx, 1
	mov	DWORD PTR $T67145[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN7@GetDefault@2:
; Line 29
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z$0:
	lea	ecx, DWORD PTR $T67141[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z$2:
	lea	ecx, DWORD PTR $T67142[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDefaultName3@@YG?AVUString@@ABV1@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDefaultName3@@YG?AVUString@@ABV1@00@Z ENDP		; GetDefaultName3
EXTRN	??0UString@@AAE@ABV0@_W@Z:PROC			; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??H@YG?AVUString@@ABV0@_W@Z
_TEXT	SEGMENT
$T67154 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_s$ = 12						; size = 4
_c$ = 16						; size = 2
??H@YG?AVUString@@ABV0@_W@Z PROC			; operator+, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 437
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T67154[ebp], 0
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@AAE@ABV0@_W@Z		; UString::UString
	mov	edx, DWORD PTR $T67154[ebp]
	or	edx, 1
	mov	DWORD PTR $T67154[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??H@YG?AVUString@@ABV0@_W@Z ENDP			; operator+
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Ptr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Ptr@UString@@QBEPB_WI@Z PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	esp, ebp
	pop	ebp
	ret	4
?Ptr@UString@@QBEPB_WI@Z ENDP				; UString::Ptr
_TEXT	ENDS
EXTRN	??0UString@@AAE@IABV0@@Z:PROC			; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Left@UString@@QBE?AV1@I@Z
_TEXT	SEGMENT
$T67167 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_count$ = 12						; size = 4
?Left@UString@@QBE?AV1@I@Z PROC				; UString::Left, COMDAT
; _this$ = ecx
; Line 540
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T67167[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@AAE@IABV0@@Z		; UString::UString
	mov	edx, DWORD PTR $T67167[ebp]
	or	edx, 1
	mov	DWORD PTR $T67167[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Left@UString@@QBE?AV1@I@Z ENDP				; UString::Left
_TEXT	ENDS
EXTRN	?StringsAreEqualNoCase@@YG_NPB_W0@Z:PROC	; StringsAreEqualNoCase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z PROC		; UString::IsEqualTo_NoCase, COMDAT
; _this$ = ecx
; Line 548
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?StringsAreEqualNoCase@@YG_NPB_W0@Z	; StringsAreEqualNoCase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z ENDP		; UString::IsEqualTo_NoCase
_TEXT	ENDS
EXTRN	?ReverseFind@UString@@QBEH_W@Z:PROC		; UString::ReverseFind
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReverseFind_Dot@UString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReverseFind_Dot@UString@@QBEHXZ PROC			; UString::ReverseFind_Dot, COMDAT
; _this$ = ecx
; Line 575
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReverseFind@UString@@QBEH_W@Z		; UString::ReverseFind
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReverseFind_Dot@UString@@QBEHXZ ENDP			; UString::ReverseFind_Dot
_TEXT	ENDS
END

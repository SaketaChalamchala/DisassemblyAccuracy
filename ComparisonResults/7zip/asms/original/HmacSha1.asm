; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Crypto\HmacSha1.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z	; NCrypto::NSha1::CContext::Final
PUBLIC	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CContext::Update
PUBLIC	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ	; NCrypto::NSha1::CContextBase::Init
PUBLIC	__$ArrayPad$
PUBLIC	?SetKey@CHmac@NSha1@NCrypto@@QAEXPBEI@Z		; NCrypto::NSha1::CHmac::SetKey
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\crypto\hmacsha1.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$ = -84						; size = 4
_keyTemp$ = -76						; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_keySize$ = 12						; size = 4
?SetKey@CHmac@NSha1@NCrypto@@QAEXPBEI@Z PROC		; NCrypto::NSha1::CHmac::SetKey
; _this$ = ecx
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 17
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@SetKey
$LN13@SetKey:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN14@SetKey:
	cmp	DWORD PTR _i$[ebp], 64			; 00000040H
	jae	SHORT $LN12@SetKey
; Line 18
	mov	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _keyTemp$[ebp+ecx], 0
	jmp	SHORT $LN13@SetKey
$LN12@SetKey:
; Line 20
	cmp	DWORD PTR _keySize$[ebp], 64		; 00000040H
	jbe	SHORT $LN11@SetKey
; Line 22
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ; NCrypto::NSha1::CContextBase::Init
; Line 23
	mov	edx, DWORD PTR _keySize$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CContext::Update
; Line 24
	lea	ecx, DWORD PTR _keyTemp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z ; NCrypto::NSha1::CContext::Final
; Line 26
	jmp	SHORT $LN10@SetKey
$LN11@SetKey:
; Line 27
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@SetKey
$LN8@SetKey:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@SetKey:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keySize$[ebp]
	jae	SHORT $LN10@SetKey
; Line 28
	mov	ecx, DWORD PTR _key$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR _keyTemp$[ebp+edx], al
	jmp	SHORT $LN8@SetKey
$LN10@SetKey:
; Line 30
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@SetKey
$LN5@SetKey:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN6@SetKey:
	cmp	DWORD PTR _i$[ebp], 64			; 00000040H
	jae	SHORT $LN4@SetKey
; Line 31
	mov	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR _keyTemp$[ebp+edx]
	xor	eax, 54					; 00000036H
	mov	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _keyTemp$[ebp+ecx], al
	jmp	SHORT $LN5@SetKey
$LN4@SetKey:
; Line 33
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ; NCrypto::NSha1::CContextBase::Init
; Line 34
	push	64					; 00000040H
	lea	edx, DWORD PTR _keyTemp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CContext::Update
; Line 36
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SetKey
$LN2@SetKey:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@SetKey:
	cmp	DWORD PTR _i$[ebp], 64			; 00000040H
	jae	SHORT $LN1@SetKey
; Line 37
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR _keyTemp$[ebp+ecx]
	xor	edx, 106				; 0000006aH
	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR _keyTemp$[ebp+eax], dl
	jmp	SHORT $LN2@SetKey
$LN1@SetKey:
; Line 39
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ; NCrypto::NSha1::CContextBase::Init
; Line 40
	push	64					; 00000040H
	lea	ecx, DWORD PTR _keyTemp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CContext::Update
; Line 41
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@SetKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN19@SetKey:
	DD	1
	DD	$LN18@SetKey
$LN18@SetKey:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$LN17@SetKey
$LN17@SetKey:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?SetKey@CHmac@NSha1@NCrypto@@QAEXPBEI@Z ENDP		; NCrypto::NSha1::CHmac::SetKey
_TEXT	ENDS
EXTRN	_Sha1_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@CContextBase@NSha1@NCrypto@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CContextBase@NSha1@NCrypto@@QAEXXZ PROC		; NCrypto::NSha1::CContextBase::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\sha1cls.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_Sha1_Init@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ENDP		; NCrypto::NSha1::CContextBase::Init
_TEXT	ENDS
EXTRN	_Sha1_Update@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z PROC		; NCrypto::NSha1::CContext::Update, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Sha1_Update@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ENDP		; NCrypto::NSha1::CContext::Update
_TEXT	ENDS
EXTRN	_Sha1_Final@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_digest$ = 8						; size = 4
?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z PROC		; NCrypto::NSha1::CContext::Final, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _digest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_Sha1_Final@8
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z ENDP		; NCrypto::NSha1::CContext::Final
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z		; NCrypto::NSha1::CHmac::Final
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$65962 = -40						; size = 4
_digest$ = -32						; size = 20
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_mac$ = 8						; size = 4
_macSize$ = 12						; size = 4
?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z PROC		; NCrypto::NSha1::CHmac::Final
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\hmacsha1.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	lea	eax, DWORD PTR _digest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z ; NCrypto::NSha1::CContext::Final
; Line 47
	push	20					; 00000014H
	lea	ecx, DWORD PTR _digest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CContext::Update
; Line 48
	lea	edx, DWORD PTR _digest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z ; NCrypto::NSha1::CContext::Final
; Line 49
	mov	DWORD PTR _i$65962[ebp], 0
	jmp	SHORT $LN3@Final
$LN2@Final:
	mov	eax, DWORD PTR _i$65962[ebp]
	add	eax, 1
	mov	DWORD PTR _i$65962[ebp], eax
$LN3@Final:
	mov	ecx, DWORD PTR _i$65962[ebp]
	cmp	ecx, DWORD PTR _macSize$[ebp]
	jae	SHORT $LN4@Final
; Line 50
	mov	edx, DWORD PTR _mac$[ebp]
	add	edx, DWORD PTR _i$65962[ebp]
	mov	eax, DWORD PTR _i$65962[ebp]
	mov	cl, BYTE PTR _digest$[ebp+eax]
	mov	BYTE PTR [edx], cl
	jmp	SHORT $LN2@Final
$LN4@Final:
; Line 51
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Final
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@Final:
	DD	1
	DD	$LN7@Final
$LN7@Final:
	DD	-32					; ffffffe0H
	DD	20					; 00000014H
	DD	$LN6@Final
$LN6@Final:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z ENDP		; NCrypto::NSha1::CHmac::Final
_TEXT	ENDS
PUBLIC	?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z	; NCrypto::NSha1::CContext32::Update
PUBLIC	__$ArrayPad$
PUBLIC	?SetKey@CHmac32@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CHmac32::SetKey
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_digest$65978 = -212					; size = 20
_sha$65977 = -184					; size = 96
_i$ = -84						; size = 4
_keyTemp$ = -76						; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_key$ = 8						; size = 4
_keySize$ = 12						; size = 4
?SetKey@CHmac32@NSha1@NCrypto@@QAEXPBEI@Z PROC		; NCrypto::NSha1::CHmac32::SetKey
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@SetKey@2
$LN16@SetKey@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@SetKey@2:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jae	SHORT $LN15@SetKey@2
; Line 60
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _keyTemp$[ebp+ecx*4], 0
	jmp	SHORT $LN16@SetKey@2
$LN15@SetKey@2:
; Line 62
	cmp	DWORD PTR _keySize$[ebp], 64		; 00000040H
	jbe	SHORT $LN14@SetKey@2
; Line 65
	lea	ecx, DWORD PTR _sha$65977[ebp]
	call	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ; NCrypto::NSha1::CContextBase::Init
; Line 66
	mov	edx, DWORD PTR _keySize$[ebp]
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sha$65977[ebp]
	call	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CContext::Update
; Line 68
	lea	ecx, DWORD PTR _digest$65978[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sha$65977[ebp]
	call	?Final@CContext@NSha1@NCrypto@@QAEXPAE@Z ; NCrypto::NSha1::CContext::Final
; Line 70
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@SetKey@2
$LN12@SetKey@2:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN13@SetKey@2:
	cmp	DWORD PTR _i$[ebp], 5
	jae	SHORT $LN11@SetKey@2
; Line 71
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _digest$65978[ebp+eax*4]
	bswap	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _keyTemp$[ebp+edx*4], ecx
	jmp	SHORT $LN12@SetKey@2
$LN11@SetKey@2:
; Line 73
	jmp	SHORT $LN10@SetKey@2
$LN14@SetKey@2:
; Line 74
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@SetKey@2
$LN8@SetKey@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@SetKey@2:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _keySize$[ebp]
	jae	SHORT $LN10@SetKey@2
; Line 75
	mov	edx, DWORD PTR _i$[ebp]
	shr	edx, 2
	mov	eax, DWORD PTR _key$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [eax]
	mov	ecx, DWORD PTR _i$[ebp]
	and	ecx, 3
	shl	ecx, 3
	mov	esi, 24					; 00000018H
	sub	esi, ecx
	mov	ecx, esi
	shl	eax, cl
	or	eax, DWORD PTR _keyTemp$[ebp+edx*4]
	mov	edx, DWORD PTR _i$[ebp]
	shr	edx, 2
	mov	DWORD PTR _keyTemp$[ebp+edx*4], eax
	jmp	SHORT $LN8@SetKey@2
$LN10@SetKey@2:
; Line 77
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@SetKey@2
$LN5@SetKey@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@SetKey@2:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jae	SHORT $LN4@SetKey@2
; Line 78
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _keyTemp$[ebp+ecx*4]
	xor	edx, 909522486				; 36363636H
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _keyTemp$[ebp+eax*4], edx
	jmp	SHORT $LN5@SetKey@2
$LN4@SetKey@2:
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ; NCrypto::NSha1::CContextBase::Init
; Line 81
	push	16					; 00000010H
	lea	ecx, DWORD PTR _keyTemp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z ; NCrypto::NSha1::CContext32::Update
; Line 83
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SetKey@2
$LN2@SetKey@2:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@SetKey@2:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jae	SHORT $LN1@SetKey@2
; Line 84
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _keyTemp$[ebp+eax*4]
	xor	ecx, 1785358954				; 6a6a6a6aH
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _keyTemp$[ebp+edx*4], ecx
	jmp	SHORT $LN2@SetKey@2
$LN1@SetKey@2:
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Init@CContextBase@NSha1@NCrypto@@QAEXXZ ; NCrypto::NSha1::CContextBase::Init
; Line 87
	push	16					; 00000010H
	lea	eax, DWORD PTR _keyTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z ; NCrypto::NSha1::CContext32::Update
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@SetKey@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN24@SetKey@2:
	DD	3
	DD	$LN23@SetKey@2
$LN23@SetKey@2:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$LN20@SetKey@2
	DD	-184					; ffffff48H
	DD	96					; 00000060H
	DD	$LN21@SetKey@2
	DD	-212					; ffffff2cH
	DD	20					; 00000014H
	DD	$LN22@SetKey@2
$LN22@SetKey@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN21@SetKey@2:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	0
$LN20@SetKey@2:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?SetKey@CHmac32@NSha1@NCrypto@@QAEXPBEI@Z ENDP		; NCrypto::NSha1::CHmac32::SetKey
_TEXT	ENDS
EXTRN	_Sha1_32_Update@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z PROC	; NCrypto::NSha1::CContext32::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\sha1cls.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Sha1_32_Update@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z ENDP	; NCrypto::NSha1::CContext32::Update
_TEXT	ENDS
PUBLIC	?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z	; NCrypto::NSha1::CContext32::Final
PUBLIC	__$ArrayPad$
PUBLIC	?Final@CHmac32@NSha1@NCrypto@@QAEXPAII@Z	; NCrypto::NSha1::CHmac32::Final
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$66000 = -40						; size = 4
_digest$ = -32						; size = 20
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_mac$ = 8						; size = 4
_macSize$ = 12						; size = 4
?Final@CHmac32@NSha1@NCrypto@@QAEXPAII@Z PROC		; NCrypto::NSha1::CHmac32::Final
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\hmacsha1.cpp
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	lea	eax, DWORD PTR _digest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z ; NCrypto::NSha1::CContext32::Final
; Line 94
	push	5
	lea	ecx, DWORD PTR _digest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z ; NCrypto::NSha1::CContext32::Update
; Line 95
	lea	edx, DWORD PTR _digest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z ; NCrypto::NSha1::CContext32::Final
; Line 96
	mov	DWORD PTR _i$66000[ebp], 0
	jmp	SHORT $LN3@Final@2
$LN2@Final@2:
	mov	eax, DWORD PTR _i$66000[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66000[ebp], eax
$LN3@Final@2:
	mov	ecx, DWORD PTR _i$66000[ebp]
	cmp	ecx, DWORD PTR _macSize$[ebp]
	jae	SHORT $LN4@Final@2
; Line 97
	mov	edx, DWORD PTR _i$66000[ebp]
	mov	eax, DWORD PTR _mac$[ebp]
	mov	ecx, DWORD PTR _i$66000[ebp]
	mov	ecx, DWORD PTR _digest$[ebp+ecx*4]
	mov	DWORD PTR [eax+edx*4], ecx
	jmp	SHORT $LN2@Final@2
$LN4@Final@2:
; Line 98
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Final@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@Final@2:
	DD	1
	DD	$LN7@Final@2
$LN7@Final@2:
	DD	-32					; ffffffe0H
	DD	20					; 00000014H
	DD	$LN6@Final@2
$LN6@Final@2:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?Final@CHmac32@NSha1@NCrypto@@QAEXPAII@Z ENDP		; NCrypto::NSha1::CHmac32::Final
_TEXT	ENDS
EXTRN	_Sha1_32_Final@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_digest$ = 8						; size = 4
?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z PROC		; NCrypto::NSha1::CContext32::Final, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\sha1cls.h
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _digest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_Sha1_32_Final@8
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Final@CContext32@NSha1@NCrypto@@QAEXPAI@Z ENDP		; NCrypto::NSha1::CContext32::Final
_TEXT	ENDS
PUBLIC	?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z ; NCrypto::NSha1::CContextBase::GetBlockDigest
PUBLIC	?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z ; NCrypto::NSha1::CContext32::PrepareBlock
PUBLIC	__$ArrayPad$
PUBLIC	?GetLoopXorDigest@CHmac32@NSha1@NCrypto@@QAEXPAII@Z ; NCrypto::NSha1::CHmac32::GetLoopXorDigest
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$66019 = -164						; size = 4
_i$66015 = -160						; size = 4
_s$66011 = -156						; size = 4
_block2$ = -148						; size = 64
_block$ = -76						; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_mac$ = 8						; size = 4
_numIteration$ = 12					; size = 4
?GetLoopXorDigest@CHmac32@NSha1@NCrypto@@QAEXPAII@Z PROC ; NCrypto::NSha1::CHmac32::GetLoopXorDigest
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\hmacsha1.cpp
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 164				; 000000a4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-164]
	mov	ecx, 41					; 00000029H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 105
	push	5
	lea	eax, DWORD PTR _block$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z ; NCrypto::NSha1::CContext32::PrepareBlock
; Line 106
	push	5
	lea	ecx, DWORD PTR _block2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z ; NCrypto::NSha1::CContext32::PrepareBlock
; Line 108
	mov	DWORD PTR _s$66011[ebp], 0
	jmp	SHORT $LN9@GetLoopXor
$LN8@GetLoopXor:
	mov	edx, DWORD PTR _s$66011[ebp]
	add	edx, 1
	mov	DWORD PTR _s$66011[ebp], edx
$LN9@GetLoopXor:
	cmp	DWORD PTR _s$66011[ebp], 5
	jae	SHORT $LN7@GetLoopXor
; Line 109
	mov	eax, DWORD PTR _s$66011[ebp]
	mov	ecx, DWORD PTR _s$66011[ebp]
	mov	edx, DWORD PTR _mac$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _block$[ebp+eax*4], ecx
	jmp	SHORT $LN8@GetLoopXor
$LN7@GetLoopXor:
; Line 111
	mov	DWORD PTR _i$66015[ebp], 0
	jmp	SHORT $LN6@GetLoopXor
$LN5@GetLoopXor:
	mov	edx, DWORD PTR _i$66015[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66015[ebp], edx
$LN6@GetLoopXor:
	mov	eax, DWORD PTR _i$66015[ebp]
	cmp	eax, DWORD PTR _numIteration$[ebp]
	jae	SHORT $LN10@GetLoopXor
; Line 113
	lea	ecx, DWORD PTR _block2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _block$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z ; NCrypto::NSha1::CContextBase::GetBlockDigest
; Line 114
	lea	eax, DWORD PTR _block$[ebp]
	push	eax
	lea	ecx, DWORD PTR _block2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z ; NCrypto::NSha1::CContextBase::GetBlockDigest
; Line 115
	mov	DWORD PTR _s$66019[ebp], 0
	jmp	SHORT $LN3@GetLoopXor
$LN2@GetLoopXor:
	mov	edx, DWORD PTR _s$66019[ebp]
	add	edx, 1
	mov	DWORD PTR _s$66019[ebp], edx
$LN3@GetLoopXor:
	cmp	DWORD PTR _s$66019[ebp], 5
	jae	SHORT $LN1@GetLoopXor
; Line 116
	mov	eax, DWORD PTR _s$66019[ebp]
	mov	ecx, DWORD PTR _mac$[ebp]
	mov	edx, DWORD PTR _s$66019[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
	xor	eax, DWORD PTR _block$[ebp+edx*4]
	mov	ecx, DWORD PTR _s$66019[ebp]
	mov	edx, DWORD PTR _mac$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	jmp	SHORT $LN2@GetLoopXor
$LN1@GetLoopXor:
; Line 117
	jmp	$LN5@GetLoopXor
$LN10@GetLoopXor:
; Line 118
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@GetLoopXor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 164				; 000000a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN15@GetLoopXor:
	DD	2
	DD	$LN14@GetLoopXor
$LN14@GetLoopXor:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$LN12@GetLoopXor
	DD	-148					; ffffff6cH
	DD	64					; 00000040H
	DD	$LN13@GetLoopXor
$LN13@GetLoopXor:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	50					; 00000032H
	DB	0
$LN12@GetLoopXor:
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?GetLoopXorDigest@CHmac32@NSha1@NCrypto@@QAEXPAII@Z ENDP ; NCrypto::NSha1::CHmac32::GetLoopXorDigest
_TEXT	ENDS
EXTRN	_Sha1_GetBlockDigest@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_blockData$ = 8						; size = 4
_destDigest$ = 12					; size = 4
?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z PROC ; NCrypto::NSha1::CContextBase::GetBlockDigest, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\sha1cls.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _destDigest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _blockData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Sha1_GetBlockDigest@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetBlockDigest@CContextBase@NSha1@NCrypto@@QAEXPBIPAI@Z ENDP ; NCrypto::NSha1::CContextBase::GetBlockDigest
_TEXT	ENDS
EXTRN	_Sha1_32_PrepareBlock@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_block$ = 8						; size = 4
_size$ = 12						; size = 4
?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z PROC	; NCrypto::NSha1::CContext32::PrepareBlock, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _block$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Sha1_32_PrepareBlock@12
; Line 46
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?PrepareBlock@CContext32@NSha1@NCrypto@@QBEXPAII@Z ENDP	; NCrypto::NSha1::CContext32::PrepareBlock
_TEXT	ENDS
END

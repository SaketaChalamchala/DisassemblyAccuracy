; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\BZip2Encoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?Alloc@CThreadInfo@NBZip2@NCompress@@QAE_NXZ	; NCompress::NBZip2::CThreadInfo::Alloc
EXTRN	_MidAlloc@4:PROC
EXTRN	_BigAlloc@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Alloc@CThreadInfo@NBZip2@NCompress@@QAE_NXZ PROC	; NCompress::NBZip2::CThreadInfo::Alloc
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN4@Alloc
; Line 25
	push	7462144					; 0071dd00H
	call	_BigAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 26
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN4@Alloc
; Line 27
	xor	al, al
	jmp	SHORT $LN5@Alloc
$LN4@Alloc:
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@Alloc
; Line 32
	push	4610480					; 004659b0H
	call	_MidAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Alloc
; Line 34
	xor	al, al
	jmp	SHORT $LN5@Alloc
$LN1@Alloc:
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 900000				; 000dbba0H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1800002				; 001b7742H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@Alloc:
; Line 38
	mov	al, 1
$LN5@Alloc:
; Line 39
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Alloc@CThreadInfo@NBZip2@NCompress@@QAE_NXZ ENDP	; NCompress::NBZip2::CThreadInfo::Alloc
_TEXT	ENDS
PUBLIC	?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CThreadInfo::Free
EXTRN	_MidFree@4:PROC
EXTRN	_BigFree@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ PROC		; NCompress::NBZip2::CThreadInfo::Free
; _this$ = ecx
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_BigFree@4
; Line 44
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_MidFree@4
; Line 46
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 47
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ ENDP		; NCompress::NBZip2::CThreadInfo::Free
_TEXT	ENDS
PUBLIC	?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z	; NWindows::CThread::Create
PUBLIC	?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::Create
PUBLIC	?Create@CThreadInfo@NBZip2@NCompress@@QAEJXZ	; NCompress::NBZip2::CThreadInfo::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result_$67489 = -20					; size = 4
___result_$67487 = -16					; size = 4
___result_$67485 = -12					; size = 4
___result_$67483 = -8					; size = 4
_this$ = -4						; size = 4
?Create@CThreadInfo@NBZip2@NCompress@@QAEJXZ PROC	; NCompress::NBZip2::CThreadInfo::Create
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36072				; 00008ce8H
	call	?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::Create
	mov	DWORD PTR ___result_$67483[ebp], eax
	cmp	DWORD PTR ___result_$67483[ebp], 0
	je	SHORT $LN4@Create
	mov	eax, DWORD PTR ___result_$67483[ebp]
	jmp	SHORT $LN5@Create
$LN4@Create:
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36076				; 00008cecH
	call	?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::Create
	mov	DWORD PTR ___result_$67485[ebp], eax
	cmp	DWORD PTR ___result_$67485[ebp], 0
	je	SHORT $LN3@Create
	mov	eax, DWORD PTR ___result_$67485[ebp]
	jmp	SHORT $LN5@Create
$LN3@Create:
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36080				; 00008cf0H
	call	?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::Create
	mov	DWORD PTR ___result_$67487[ebp], eax
	cmp	DWORD PTR ___result_$67487[ebp], 0
	je	SHORT $LN2@Create
	mov	eax, DWORD PTR ___result_$67487[ebp]
	jmp	SHORT $LN5@Create
$LN2@Create:
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ?MFThread@NBZip2@NCompress@@YGIPAX@Z ; NCompress::NBZip2::MFThread
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36068				; 00008ce4H
	call	?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z ; NWindows::CThread::Create
	mov	DWORD PTR ___result_$67489[ebp], eax
	cmp	DWORD PTR ___result_$67489[ebp], 0
	je	SHORT $LN1@Create
	mov	eax, DWORD PTR ___result_$67489[ebp]
	jmp	SHORT $LN5@Create
$LN1@Create:
; Line 64
	xor	eax, eax
$LN5@Create:
; Line 65
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@CThreadInfo@NBZip2@NCompress@@QAEJXZ ENDP	; NCompress::NBZip2::CThreadInfo::Create
_TEXT	ENDS
EXTRN	_AutoResetEvent_CreateNotSignaled@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CAutoResetEvent::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_AutoResetEvent_CreateNotSignaled@4
; Line 77
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CAutoResetEvent::Create
_TEXT	ENDS
EXTRN	_Thread_Create@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_startAddress$ = 8					; size = 4
_parameter$ = 12					; size = 4
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z PROC		; NWindows::CThread::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\thread.h
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _parameter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startAddress$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Thread_Create@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z ENDP		; NWindows::CThread::Create
_TEXT	ENDS
PUBLIC	?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ ; NCompress::NBZip2::CThreadInfo::ThreadFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_threadCoderInfo$ = 8					; size = 4
?MFThread@NBZip2@NCompress@@YGIPAX@Z PROC		; NCompress::NBZip2::MFThread
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 52
	push	ebp
	mov	ebp, esp
; Line 53
	mov	ecx, DWORD PTR _threadCoderInfo$[ebp]
	call	?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ ; NCompress::NBZip2::CThreadInfo::ThreadFunc
; Line 54
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?MFThread@NBZip2@NCompress@@YGIPAX@Z ENDP		; NCompress::NBZip2::MFThread
_TEXT	ENDS
PUBLIC	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
PUBLIC	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
PUBLIC	?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z ; NCompress::NBZip2::CThreadInfo::FinishStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_needLeave$ = 8						; size = 1
?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z PROC ; NCompress::NBZip2::CThreadInfo::FinishStream
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	mov	BYTE PTR [ecx+425], 1
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36072				; 00008ce8H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 71
	movzx	edx, BYTE PTR _needLeave$[ebp]
	test	edx, edx
	je	SHORT $LN1@FinishStre
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	add	ecx, 388				; 00000184H
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
$LN1@FinishStre:
; Line 73
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36064]
	add	ecx, 428				; 000001acH
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36076				; 00008cecH
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 75
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z ENDP ; NCompress::NBZip2::CThreadInfo::FinishStream
_TEXT	ENDS
EXTRN	_Event_Set@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC	; NWindows::NSynchronization::CBaseEvent::Set, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_Event_Set@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP	; NWindows::NSynchronization::CBaseEvent::Set
_TEXT	ENDS
EXTRN	_Handle_WaitObject@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC	; NWindows::NSynchronization::CBaseEvent::Lock, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_Handle_WaitObject@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP	; NWindows::NSynchronization::CBaseEvent::Lock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
_TEXT	ENDS
PUBLIC	?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock3
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
PUBLIC	?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z ; NCompress::NBZip2::CEncoder::ReadRleBlock
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCOutBufferException@@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUCInBufferException@@@8
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ DD 00H
	DD	00H
	DD	01H
	DD	03H
	DD	FLAT:__catchsym$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$4
__ehfuncinfo$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ
	DD	01H
	DD	FLAT:__tryblocktable$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$4 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffd8H
	DD	FLAT:__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$0
	DD	09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffccH
	DD	FLAT:__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$2
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv174 = -76						; size = 4
tv139 = -72						; size = 4
tv173 = -68						; size = 8
tv172 = -60						; size = 4
_e$67514 = -52						; size = 4
_e$67512 = -40						; size = 4
_blockSize$67509 = -32					; size = 4
_needLeave$67507 = -25					; size = 1
_res$67505 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ PROC	; NCompress::NBZip2::CThreadInfo::ThreadFunc
; _this$ = ecx
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 60					; 0000003cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
$LN8@ThreadFunc:
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	add	ecx, 384				; 00000180H
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36064]
	add	ecx, 388				; 00000184H
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Line 83
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	movzx	ecx, BYTE PTR [eax+424]
	test	ecx, ecx
	je	SHORT $LN6@ThreadFunc
; Line 85
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+36064]
	add	ecx, 388				; 00000184H
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Line 86
	xor	eax, eax
	jmp	$LN9@ThreadFunc
$LN6@ThreadFunc:
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	movzx	edx, BYTE PTR [ecx+425]
	test	edx, edx
	je	SHORT $LN5@ThreadFunc
; Line 90
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z ; NCompress::NBZip2::CThreadInfo::FinishStream
; Line 91
	jmp	SHORT $LN8@ThreadFunc
$LN5@ThreadFunc:
; Line 93
	mov	DWORD PTR _res$67505[ebp], 0
; Line 94
	mov	BYTE PTR _needLeave$67507[ebp], 1
; Line 96
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+36064]
	call	?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z ; NCompress::NBZip2::CEncoder::ReadRleBlock
	mov	DWORD PTR tv172[ebp], eax
	mov	eax, DWORD PTR tv172[ebp]
	mov	DWORD PTR _blockSize$67509[ebp], eax
; Line 98
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36064]
	add	ecx, 24					; 00000018H
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	DWORD PTR tv173[ebp], eax
	mov	DWORD PTR tv173[ebp+4], edx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR [edx+36088], eax
	mov	ecx, DWORD PTR tv173[ebp+4]
	mov	DWORD PTR [edx+36092], ecx
; Line 99
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+420]
	mov	DWORD PTR [ecx+36056], edx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	mov	edx, DWORD PTR [ecx+420]
	add	edx, 1
	mov	DWORD PTR tv139[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	mov	edx, DWORD PTR tv139[ebp]
	mov	DWORD PTR [ecx+420], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	mov	edx, DWORD PTR tv139[ebp]
	cmp	edx, DWORD PTR [ecx+412]
	jne	SHORT $LN3@ThreadFunc
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	mov	DWORD PTR [ecx+420], 0
$LN3@ThreadFunc:
; Line 102
	cmp	DWORD PTR _blockSize$67509[ebp], 0
	jne	SHORT $LN2@ThreadFunc
; Line 104
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z ; NCompress::NBZip2::CThreadInfo::FinishStream
; Line 121
	mov	DWORD PTR __$EHRec$[ebp+12], -1
; Line 105
	jmp	$LN8@ThreadFunc
$LN2@ThreadFunc:
; Line 107
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+36064]
	add	ecx, 388				; 00000184H
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Line 108
	mov	BYTE PTR _needLeave$67507[ebp], 0
; Line 109
	mov	eax, DWORD PTR _blockSize$67509[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock3
	mov	DWORD PTR tv174[ebp], eax
	mov	ecx, DWORD PTR tv174[ebp]
	mov	DWORD PTR _res$67505[ebp], ecx
; Line 110
	jmp	SHORT $LN11@ThreadFunc
__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$0:
; Line 111
	mov	edx, DWORD PTR _e$67512[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _res$67505[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3
	ret	0
__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$1:
; Line 112
	mov	ecx, DWORD PTR _e$67514[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _res$67505[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3
	ret	0
__catch$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$2:
; Line 113
	mov	DWORD PTR _res$67505[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3
	ret	0
$LN11@ThreadFunc:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ$3:
; Line 114
	cmp	DWORD PTR _res$67505[ebp], 0
	je	SHORT $LN1@ThreadFunc
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	mov	edx, DWORD PTR _res$67505[ebp]
	mov	DWORD PTR [ecx+432], edx
; Line 117
	movzx	eax, BYTE PTR _needLeave$67507[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CThreadInfo@NBZip2@NCompress@@QAEX_N@Z ; NCompress::NBZip2::CThreadInfo::FinishStream
; Line 118
	jmp	$LN8@ThreadFunc
$LN1@ThreadFunc:
; Line 120
	jmp	$LN8@ThreadFunc
$LN9@ThreadFunc:
; Line 121
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@ThreadFunc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN29@ThreadFunc:
	DD	2
	DD	$LN28@ThreadFunc
$LN28@ThreadFunc:
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN25@ThreadFunc
	DD	-52					; ffffffccH
	DD	4
	DD	$LN26@ThreadFunc
$LN26@ThreadFunc:
	DB	101					; 00000065H
	DB	0
$LN25@ThreadFunc:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ThreadFunc@CThreadInfo@NBZip2@NCompress@@QAEKXZ ENDP	; NCompress::NBZip2::CThreadInfo::ThreadFunc
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
_TEXT	ENDS
PUBLIC	?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z	; NCompress::NBZip2::CEncProps::Normalize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -16						; size = 4
tv85 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_level$ = 8						; size = 4
?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z PROC	; NCompress::NBZip2::CEncProps::Normalize
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 127
	cmp	DWORD PTR _level$[ebp], 0
	jge	SHORT $LN8@Normalize
	mov	DWORD PTR _level$[ebp], 5
$LN8@Normalize:
; Line 128
	cmp	DWORD PTR _level$[ebp], 9
	jle	SHORT $LN7@Normalize
	mov	DWORD PTR _level$[ebp], 9
$LN7@Normalize:
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], -1
	jne	SHORT $LN6@Normalize
; Line 131
	cmp	DWORD PTR _level$[ebp], 9
	jl	SHORT $LN11@Normalize
	mov	DWORD PTR tv72[ebp], 7
	jmp	SHORT $LN12@Normalize
$LN11@Normalize:
	xor	ecx, ecx
	cmp	DWORD PTR _level$[ebp], 7
	setge	cl
	add	ecx, 1
	mov	DWORD PTR tv72[ebp], ecx
$LN12@Normalize:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR [edx+4], eax
$LN6@Normalize:
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 1
	jae	SHORT $LN5@Normalize
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 1
$LN5@Normalize:
; Line 133
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 10			; 0000000aH
	jbe	SHORT $LN4@Normalize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 10			; 0000000aH
$LN4@Normalize:
; Line 135
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], -1
	jne	SHORT $LN3@Normalize
; Line 136
	cmp	DWORD PTR _level$[ebp], 5
	jl	SHORT $LN15@Normalize
	mov	DWORD PTR tv85[ebp], 9
	jmp	SHORT $LN16@Normalize
$LN15@Normalize:
	cmp	DWORD PTR _level$[ebp], 1
	jl	SHORT $LN13@Normalize
	mov	eax, DWORD PTR _level$[ebp]
	lea	ecx, DWORD PTR [eax+eax-1]
	mov	DWORD PTR tv84[ebp], ecx
	jmp	SHORT $LN14@Normalize
$LN13@Normalize:
	mov	DWORD PTR tv84[ebp], 1
$LN14@Normalize:
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv85[ebp], edx
$LN16@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Normalize:
; Line 137
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 1
	jae	SHORT $LN2@Normalize
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 1
$LN2@Normalize:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 9
	jbe	SHORT $LN9@Normalize
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 9
$LN9@Normalize:
; Line 139
	mov	esp, ebp
	pop	ebp
	ret	4
?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z ENDP	; NCompress::NBZip2::CEncProps::Normalize
_TEXT	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
PUBLIC	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CManualResetEvent::~CManualResetEvent
PUBLIC	??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ		; CBitmEncoder<COutBuffer>::~CBitmEncoder<COutBuffer>
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
PUBLIC	??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CManualResetEvent::CManualResetEvent
PUBLIC	??0CBZip2CombinedCrc@@QAE@XZ			; CBZip2CombinedCrc::CBZip2CombinedCrc
PUBLIC	??0CEncProps@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CEncProps::CEncProps
PUBLIC	??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ		; CBitmEncoder<COutBuffer>::CBitmEncoder<COutBuffer>
PUBLIC	??0CInBuffer@@QAE@XZ				; CInBuffer::CInBuffer
PUBLIC	??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ ; NCompress::NBZip2::CEncoder::`vftable'
PUBLIC	??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NBZip2::CEncoder::`vftable'
PUBLIC	??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@ ; NCompress::NBZip2::CEncoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressSetCoderMt@@QAE@XZ			; ICompressSetCoderMt::ICompressSetCoderMt
PUBLIC	??0ICompressSetCoderProperties@@QAE@XZ		; ICompressSetCoderProperties::ICompressSetCoderProperties
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CEncoder@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CEncoder::CEncoder
PUBLIC	??_R4CEncoder@NBZip2@NCompress@@6BICompressCoder@@@ ; NCompress::NBZip2::CEncoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEncoder@NBZip2@NCompress@@@8		; NCompress::NBZip2::CEncoder `RTTI Type Descriptor'
PUBLIC	??_R3CEncoder@NBZip2@NCompress@@8		; NCompress::NBZip2::CEncoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEncoder@NBZip2@NCompress@@8		; NCompress::NBZip2::CEncoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEncoder@NBZip2@NCompress@@8	; NCompress::NBZip2::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderProperties@@@8		; ICompressSetCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@ICompressSetCoderMt@@8		; ICompressSetCoderMt::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderMt@@@8			; ICompressSetCoderMt `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderMt@@8			; ICompressSetCoderMt::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderMt@@8			; ICompressSetCoderMt::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderMt@@8		; ICompressSetCoderMt::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBZip2::CEncoder::QueryInterface
PUBLIC	?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ	; NCompress::NBZip2::CEncoder::AddRef
PUBLIC	?Release@CEncoder@NBZip2@NCompress@@UAGKXZ	; NCompress::NBZip2::CEncoder::Release
PUBLIC	?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CEncoder::Code
PUBLIC	??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NBZip2::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBZip2::CEncoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CEncoder@NBZip2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBZip2::CEncoder::AddRef`adjustor{4}'
PUBLIC	?Release@CEncoder@NBZip2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBZip2::CEncoder::Release`adjustor{4}'
PUBLIC	?SetCoderProperties@CEncoder@NBZip2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NBZip2::CEncoder::SetCoderProperties
PUBLIC	??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ ; NCompress::NBZip2::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@NBZip2@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBZip2::CEncoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CEncoder@NBZip2@NCompress@@W7AGKXZ	; [thunk]:NCompress::NBZip2::CEncoder::AddRef`adjustor{8}'
PUBLIC	?Release@CEncoder@NBZip2@NCompress@@W7AGKXZ	; [thunk]:NCompress::NBZip2::CEncoder::Release`adjustor{8}'
PUBLIC	?SetNumberOfThreads@CEncoder@NBZip2@NCompress@@UAGJI@Z ; NCompress::NBZip2::CEncoder::SetNumberOfThreads
;	COMDAT ??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
rdata$r	SEGMENT
??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ DD 00H ; NCompress::NBZip2::CEncoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NBZip2@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@
rdata$r	SEGMENT
??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@ DD 00H ; NCompress::NBZip2::CEncoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NBZip2@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderMt@@8 DD FLAT:??_R0?AUICompressSetCoderMt@@@8 ; ICompressSetCoderMt::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderMt@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderMt@@8 ; ICompressSetCoderMt::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderMt@@8 DD 00H			; ICompressSetCoderMt::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderMt@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderMt@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderMt `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderMt@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetCoderMt@@8 DD FLAT:??_R0?AUICompressSetCoderMt@@@8 ; ICompressSetCoderMt::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderProperties@@8 ; ICompressSetCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderProperties@@8 DD 00H		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEncoder@NBZip2@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEncoder@NBZip2@NCompress@@8 DD FLAT:??_R0?AVCEncoder@NBZip2@NCompress@@@8 ; NCompress::NBZip2::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEncoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CEncoder@NBZip2@NCompress@@8
rdata$r	SEGMENT
??_R2CEncoder@NBZip2@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CEncoder@NBZip2@NCompress@@8 ; NCompress::NBZip2::CEncoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetCoderMt@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CEncoder@NBZip2@NCompress@@8
rdata$r	SEGMENT
??_R3CEncoder@NBZip2@NCompress@@8 DD 00H		; NCompress::NBZip2::CEncoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	08H
	DD	FLAT:??_R2CEncoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEncoder@NBZip2@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCEncoder@NBZip2@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NBZip2::CEncoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEncoder@NBZip2@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CEncoder@NBZip2@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CEncoder@NBZip2@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NBZip2::CEncoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NBZip2@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
CONST	SEGMENT
??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ DD FLAT:??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ ; NCompress::NBZip2::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NBZip2@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NBZip2@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CEncoder@NBZip2@NCompress@@W7AGKXZ
	DD	FLAT:?SetNumberOfThreads@CEncoder@NBZip2@NCompress@@UAGJI@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NBZip2::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NBZip2@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CEncoder@NBZip2@NCompress@@W3AGKXZ
	DD	FLAT:?SetCoderProperties@CEncoder@NBZip2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CEncoder@NBZip2@NCompress@@6BICompressCoder@@@ ; NCompress::NBZip2::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ
	DD	FLAT:?Release@CEncoder@NBZip2@NCompress@@UAGKXZ
	DD	FLAT:?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$??0CEncoder@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CEncoder@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CEncoder@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEncoder@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CEncoder::CEncoder
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CEncoder@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ICompressSetCoderMt@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0CInBuffer@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	??0CEncProps@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CEncProps::CEncProps
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	??0CBZip2CombinedCrc@@QAE@XZ		; CBZip2CombinedCrc::CBZip2CombinedCrc
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	call	??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 388				; 00000184H
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 143
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z ; NCompress::NBZip2::CEncProps::Normalize
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+380], 0
; Line 147
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 148
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+412], 1
; Line 150
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	jmp	??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 388				; 00000184H
	jmp	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
__unwindfunclet$??0CEncoder@NBZip2@NCompress@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??0CEncoder@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CEncoder@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CEncoder@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CEncoder::CEncoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBZip2CombinedCrc@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBZip2CombinedCrc@@QAE@XZ PROC			; CBZip2CombinedCrc::CBZip2CombinedCrc, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBZip2CombinedCrc@@QAE@XZ ENDP			; CBZip2CombinedCrc::CBZip2CombinedCrc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
_TEXT	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CEncProps@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CEncProps@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CEncProps::CEncProps, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
; Line 156
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEncProps@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CEncProps::CEncProps
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ICompressSetCoderProperties:BYTE
EXTRN	_IID_ICompressSetCoderMt:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NBZip2::CEncoder::QueryInterface, COMDAT
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN10@QueryInter
$LN9@QueryInter:
	mov	DWORD PTR tv75[ebp], 0
$LN10@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN5@QueryInter
$LN6@QueryInter:
	push	OFFSET _IID_ICompressSetCoderMt
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN11@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN12@QueryInter
$LN11@QueryInter:
	mov	DWORD PTR tv86[ebp], 0
$LN12@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN5@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv128[ebp], 0
$LN14@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN7@QueryInter
$LN5@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
	xor	eax, eax
$LN7@QueryInter:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NBZip2::CEncoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ PROC		; NCompress::NBZip2::CEncoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 218
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ ENDP		; NCompress::NBZip2::CEncoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z	; NCompress::NBZip2::CEncoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CEncoder@NBZip2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T68401 = -8						; size = 4
$T68400 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CEncoder@NBZip2@NCompress@@UAGKXZ PROC		; NCompress::NBZip2::CEncoder::Release, COMDAT
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+12], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68401[ebp], edx
	mov	eax, DWORD PTR $T68401[ebp]
	mov	DWORD PTR $T68400[ebp], eax
	cmp	DWORD PTR $T68400[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T68400[ebp]
	call	??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CEncoder@NBZip2@NCompress@@UAGKXZ ENDP		; NCompress::NBZip2::CEncoder::Release
_TEXT	ENDS
PUBLIC	??1CEncoder@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CEncoder::~CEncoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z PROC		; NCompress::NBZip2::CEncoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEncoder@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CEncoder::~CEncoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCEncoder@NBZip2@NCompress@@QAEPAXI@Z ENDP		; NCompress::NBZip2::CEncoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`vftable'
PUBLIC	??_R4ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderProperties@@6B@ DD 00H		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderProperties@@@8
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressSetCoderProperties@@6B@ DD FLAT:??_R4ICompressSetCoderProperties@@6B@ ; ICompressSetCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderProperties@@QAE@XZ PROC		; ICompressSetCoderProperties::ICompressSetCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderProperties@@QAE@XZ ENDP		; ICompressSetCoderProperties::ICompressSetCoderProperties
_TEXT	ENDS
PUBLIC	??_7ICompressSetCoderMt@@6B@			; ICompressSetCoderMt::`vftable'
PUBLIC	??_R4ICompressSetCoderMt@@6B@			; ICompressSetCoderMt::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderMt@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderMt@@6B@ DD 00H			; ICompressSetCoderMt::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderMt@@@8
	DD	FLAT:??_R3ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderMt@@6B@
CONST	SEGMENT
??_7ICompressSetCoderMt@@6B@ DD FLAT:??_R4ICompressSetCoderMt@@6B@ ; ICompressSetCoderMt::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderMt@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderMt@@QAE@XZ PROC			; ICompressSetCoderMt::ICompressSetCoderMt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderMt@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderMt@@QAE@XZ ENDP			; ICompressSetCoderMt::ICompressSetCoderMt
_TEXT	ENDS
EXTRN	??0CInBufferBase@@QAE@XZ:PROC			; CInBufferBase::CInBufferBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBuffer@@QAE@XZ PROC				; CInBuffer::CInBuffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBuffer@@QAE@XZ ENDP				; CInBuffer::CInBuffer
_TEXT	ENDS
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ PROC		; CBitmEncoder<COutBuffer>::CBitmEncoder<COutBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ ENDP		; CBitmEncoder<COutBuffer>::CBitmEncoder<COutBuffer>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ PROC		; CBitmEncoder<COutBuffer>::~CBitmEncoder<COutBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ ENDP		; CBitmEncoder<COutBuffer>::~CBitmEncoder<COutBuffer>
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ	; NWindows::NSynchronization::CBaseEvent::CBaseEvent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CManualResetEvent::CManualResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::CBaseEvent
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CManualResetEvent::CManualResetEvent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ PROC	; NWindows::NSynchronization::CBaseEvent::CBaseEvent, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ ENDP	; NWindows::NSynchronization::CBaseEvent::CBaseEvent
_TEXT	ENDS
PUBLIC	??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ	; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CManualResetEvent::~CManualResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CManualResetEvent::~CManualResetEvent
_TEXT	ENDS
PUBLIC	?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ PROC	; NWindows::NSynchronization::CBaseEvent::~CBaseEvent, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ ENDP	; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
_TEXT	ENDS
EXTRN	_HandlePtr_Close@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CBaseEvent::Close, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_HandlePtr_Close@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CBaseEvent::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	?Free@CEncoder@NBZip2@NCompress@@QAEXXZ		; NCompress::NBZip2::CEncoder::Free
xdata$x	SEGMENT
__ehfuncinfo$??1CEncoder@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1CEncoder@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CEncoder@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CEncoder@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CEncoder::~CEncoder
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 154
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CEncoder@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@NBZip2@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderProperties@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CEncoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CEncoder@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CEncoder::Free
; Line 156
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 388				; 00000184H
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	call	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	jmp	??1?$CBitmEncoder@VCOutBuffer@@@@QAE@XZ
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 388				; 00000184H
	jmp	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
__unwindfunclet$??1CEncoder@NBZip2@NCompress@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??1CEncoder@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CEncoder@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CEncoder@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CEncoder::~CEncoder
PUBLIC	??0CThreadInfo@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CThreadInfo::CThreadInfo
PUBLIC	??1CThreadInfo@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CThreadInfo::~CThreadInfo
PUBLIC	?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
PUBLIC	?Create@CEncoder@NBZip2@NCompress@@QAEJXZ	; NCompress::NBZip2::CEncoder::Create
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
xdata$x	SEGMENT
__catchsym$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$0
__tryblocktable$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$3
__unwindtable$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv141 = -64						; size = 4
tv160 = -60						; size = 4
$T68455 = -56						; size = 4
$T68452 = -52						; size = 4
$T68451 = -48						; size = 4
$T68450 = -44						; size = 4
_res$67587 = -40					; size = 4
_ti$67585 = -36						; size = 4
_t$67581 = -32						; size = 4
___result_$67565 = -28					; size = 4
___result_$67563 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?Create@CEncoder@NBZip2@NCompress@@QAEJXZ PROC		; NCompress::NBZip2::CEncoder::Create
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	call	?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67563[ebp], eax
	cmp	DWORD PTR ___result_$67563[ebp], 0
	je	SHORT $LN10@Create@2
	mov	eax, DWORD PTR ___result_$67563[ebp]
	jmp	$LN11@Create@2
$LN10@Create@2:
; Line 161
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67565[ebp], eax
	cmp	DWORD PTR ___result_$67565[ebp], 0
	je	SHORT $LN9@Create@2
	mov	eax, DWORD PTR ___result_$67565[ebp]
	jmp	$LN11@Create@2
$LN9@Create@2:
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+380], 0
	je	SHORT $LN8@Create@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	cmp	eax, DWORD PTR [edx+412]
	jne	SHORT $LN8@Create@2
; Line 163
	xor	eax, eax
	jmp	$LN11@Create@2
$LN8@Create@2:
; Line 165
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CEncoder@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CEncoder::Free
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, 1
	cmp	edx, DWORD PTR [ecx+412]
	sbb	eax, eax
	neg	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+416], al
; Line 168
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+412]
	mov	DWORD PTR [edx+16], ecx
; Line 169
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+412]
	mov	DWORD PTR $T68450[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T68450[ebp]
	mov	edx, 36352				; 00008e00H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR $T68452[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T68452[ebp], 0
	je	SHORT $LN13@Create@2
	mov	edx, DWORD PTR $T68452[ebp]
	mov	eax, DWORD PTR $T68450[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET ??1CThreadInfo@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CThreadInfo::~CThreadInfo
	push	OFFSET ??0CThreadInfo@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CThreadInfo::CThreadInfo
	mov	ecx, DWORD PTR $T68450[ebp]
	push	ecx
	push	36352					; 00008e00H
	mov	edx, DWORD PTR $T68452[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T68452[ebp]
	add	eax, 4
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN14@Create@2
$LN13@Create@2:
	mov	DWORD PTR tv141[ebp], 0
$LN14@Create@2:
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR $T68451[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T68451[ebp]
	mov	DWORD PTR [edx+380], eax
; Line 170
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+380], 0
	jne	SHORT $LN6@Create@2
; Line 171
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN11@Create@2
$LN6@Create@2:
; Line 172
	jmp	SHORT $LN15@Create@2
__catch$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$0:
; Line 173
	mov	DWORD PTR $T68455[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN19@Create@2
	ret	0
	mov	eax, $LN15@Create@2
	ret	0
$LN15@Create@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@Create@2
$LN19@Create@2:
	mov	eax, DWORD PTR $T68455[ebp]
	jmp	SHORT $LN11@Create@2
$LN18@Create@2:
; Line 174
	mov	DWORD PTR _t$67581[ebp], 0
	jmp	SHORT $LN5@Create@2
$LN4@Create@2:
	mov	edx, DWORD PTR _t$67581[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67581[ebp], edx
$LN5@Create@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67581[ebp]
	cmp	ecx, DWORD PTR [eax+412]
	jae	SHORT $LN3@Create@2
; Line 176
	mov	edx, DWORD PTR _t$67581[ebp]
	imul	edx, 36352				; 00008e00H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+380]
	mov	DWORD PTR _ti$67585[ebp], edx
; Line 177
	mov	ecx, DWORD PTR _ti$67585[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36064], edx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+416]
	test	ecx, ecx
	je	SHORT $LN2@Create@2
; Line 180
	mov	ecx, DWORD PTR _ti$67585[ebp]
	call	?Create@CThreadInfo@NBZip2@NCompress@@QAEJXZ ; NCompress::NBZip2::CThreadInfo::Create
	mov	DWORD PTR _res$67587[ebp], eax
; Line 181
	cmp	DWORD PTR _res$67587[ebp], 0
	je	SHORT $LN2@Create@2
; Line 183
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$67581[ebp]
	mov	DWORD PTR [edx+412], eax
; Line 184
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CEncoder@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CEncoder::Free
; Line 185
	mov	eax, DWORD PTR _res$67587[ebp]
	jmp	SHORT $LN11@Create@2
$LN2@Create@2:
; Line 188
	jmp	SHORT $LN4@Create@2
$LN3@Create@2:
; Line 189
	xor	eax, eax
$LN11@Create@2:
; Line 190
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ$2:
	mov	eax, DWORD PTR $T68452[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Create@CEncoder@NBZip2@NCompress@@QAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Create@CEncoder@NBZip2@NCompress@@QAEJXZ ENDP		; NCompress::NBZip2::CEncoder::Create
PUBLIC	?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ; NWindows::NSynchronization::CBaseEvent::IsCreated
EXTRN	_ManualResetEvent_CreateNotSignaled@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ; NWindows::NSynchronization::CBaseEvent::IsCreated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@CreateIfNo
; Line 60
	xor	eax, eax
	jmp	SHORT $LN2@CreateIfNo
$LN1@CreateIfNo:
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_ManualResetEvent_CreateNotSignaled@4
$LN2@CreateIfNo:
; Line 62
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ PROC ; NWindows::NSynchronization::CBaseEvent::IsCreated, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ENDP ; NWindows::NSynchronization::CBaseEvent::IsCreated
_TEXT	ENDS
PUBLIC	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CAutoResetEvent::~CAutoResetEvent
PUBLIC	??1CThread@NWindows@@QAE@XZ			; NWindows::CThread::~CThread
PUBLIC	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CAutoResetEvent::CAutoResetEvent
PUBLIC	??0CThread@NWindows@@QAE@XZ			; NWindows::CThread::CThread
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
xdata$x	SEGMENT
__unwindtable$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$2
__ehfuncinfo$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CThreadInfo@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CThreadInfo@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CThreadInfo::CThreadInfo, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36068				; 00008ce4H
	call	??0CThread@NWindows@@QAE@XZ		; NWindows::CThread::CThread
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36072				; 00008ce8H
	call	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36076				; 00008cecH
	call	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36080				; 00008cf0H
	call	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36068				; 00008ce4H
	jmp	??1CThread@NWindows@@QAE@XZ		; NWindows::CThread::~CThread
__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36072				; 00008ce8H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36076				; 00008cecH
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CThreadInfo@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CThreadInfo@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CThreadInfo::CThreadInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CThread@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CThread@NWindows@@QAE@XZ PROC			; NWindows::CThread::CThread, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\thread.h
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CThread@NWindows@@QAE@XZ ENDP			; NWindows::CThread::CThread
_TEXT	ENDS
PUBLIC	?Close@CThread@NWindows@@QAEIXZ			; NWindows::CThread::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CThread@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CThread@NWindows@@QAE@XZ PROC			; NWindows::CThread::~CThread, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CThread@NWindows@@QAEIXZ		; NWindows::CThread::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CThread@NWindows@@QAE@XZ ENDP			; NWindows::CThread::~CThread
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Close@CThread@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CThread@NWindows@@QAEIXZ PROC			; NWindows::CThread::Close, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_HandlePtr_Close@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CThread@NWindows@@QAEIXZ ENDP			; NWindows::CThread::Close
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
xdata$x	SEGMENT
__unwindtable$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$3
__ehfuncinfo$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CThreadInfo@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CThreadInfo@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CThreadInfo::~CThreadInfo, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CThreadInfo::Free
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36080				; 00008cf0H
	call	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36076				; 00008cecH
	call	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36072				; 00008ce8H
	call	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36068				; 00008ce4H
	call	??1CThread@NWindows@@QAE@XZ		; NWindows::CThread::~CThread
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36068				; 00008ce4H
	jmp	??1CThread@NWindows@@QAE@XZ		; NWindows::CThread::~CThread
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36072				; 00008ce8H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36076				; 00008cecH
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36080				; 00008cf0H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CThreadInfo@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CThreadInfo@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CThreadInfo::~CThreadInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CAutoResetEvent::CAutoResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::CBaseEvent
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CAutoResetEvent::CAutoResetEvent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CAutoResetEvent::~CAutoResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CAutoResetEvent::~CAutoResetEvent
_TEXT	ENDS
PUBLIC	??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z	; NCompress::NBZip2::CThreadInfo::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z PROC	; NCompress::NBZip2::CThreadInfo::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CThreadInfo@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CThreadInfo::~CThreadInfo
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	36352					; 00008e00H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CThreadInfo@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CThreadInfo::~CThreadInfo
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z ENDP	; NCompress::NBZip2::CThreadInfo::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?Wait@CThread@NWindows@@QAEIXZ			; NWindows::CThread::Wait
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv90 = -24						; size = 4
$T68512 = -20						; size = 4
$T68511 = -16						; size = 4
_ti$67606 = -12						; size = 4
_t$67602 = -8						; size = 4
_this$ = -4						; size = 4
?Free@CEncoder@NBZip2@NCompress@@QAEXXZ PROC		; NCompress::NBZip2::CEncoder::Free
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+380], 0
	jne	SHORT $LN5@Free
; Line 195
	jmp	$LN6@Free
$LN5@Free:
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+424], 1
; Line 197
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 198
	mov	DWORD PTR _t$67602[ebp], 0
	jmp	SHORT $LN4@Free
$LN3@Free:
	mov	edx, DWORD PTR _t$67602[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67602[ebp], edx
$LN4@Free:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67602[ebp]
	cmp	ecx, DWORD PTR [eax+412]
	jae	SHORT $LN2@Free
; Line 200
	mov	edx, DWORD PTR _t$67602[ebp]
	imul	edx, 36352				; 00008e00H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+380]
	mov	DWORD PTR _ti$67606[ebp], edx
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+416]
	test	edx, edx
	je	SHORT $LN1@Free
; Line 202
	mov	ecx, DWORD PTR _ti$67606[ebp]
	add	ecx, 36068				; 00008ce4H
	call	?Wait@CThread@NWindows@@QAEIXZ		; NWindows::CThread::Wait
$LN1@Free:
; Line 203
	mov	ecx, DWORD PTR _ti$67606[ebp]
	call	?Free@CThreadInfo@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CThreadInfo::Free
; Line 204
	jmp	SHORT $LN3@Free
$LN2@Free:
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+380]
	mov	DWORD PTR $T68512[ebp], ecx
	mov	edx, DWORD PTR $T68512[ebp]
	mov	DWORD PTR $T68511[ebp], edx
	cmp	DWORD PTR $T68511[ebp], 0
	je	SHORT $LN8@Free
	push	3
	mov	ecx, DWORD PTR $T68511[ebp]
	call	??_ECThreadInfo@NBZip2@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN9@Free
$LN8@Free:
	mov	DWORD PTR tv90[ebp], 0
$LN9@Free:
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+380], 0
$LN6@Free:
; Line 207
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CEncoder@NBZip2@NCompress@@QAEXXZ ENDP		; NCompress::NBZip2::CEncoder::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Wait@CThread@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Wait@CThread@NWindows@@QAEIXZ PROC			; NWindows::CThread::Wait, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\thread.h
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_Handle_WaitObject@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Wait@CThread@NWindows@@QAEIXZ ENDP			; NWindows::CThread::Wait
_TEXT	ENDS
PUBLIC	?ReadByte@CInBufferBase@@QAE_NAAE@Z		; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_b$67622 = -33						; size = 1
_numReps$67618 = -28					; size = 4
_blockSize$67617 = -24					; size = 4
_prevByte$ = -13					; size = 1
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z PROC	; NCompress::NBZip2::CEncoder::ReadRleBlock
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 212
	mov	DWORD PTR _i$[ebp], 0
; Line 214
	lea	eax, DWORD PTR _prevByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ReadByte@CInBufferBase@@QAE_NAAE@Z	; CInBufferBase::ReadByte
	movzx	ecx, al
	test	ecx, ecx
	je	$LN10@ReadRleBlo
; Line 216
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+368]
	imul	eax, 100000				; 000186a0H
	sub	eax, 1
	mov	DWORD PTR _blockSize$67617[ebp], eax
; Line 217
	mov	DWORD PTR _numReps$67618[ebp], 1
; Line 218
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR _prevByte$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@ReadRleBlo:
; Line 219
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _blockSize$67617[ebp]
	jae	$LN8@ReadRleBlo
; Line 222
	lea	edx, DWORD PTR _b$67622[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ReadByte@CInBufferBase@@QAE_NAAE@Z	; CInBufferBase::ReadByte
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@ReadRleBlo
; Line 223
	jmp	$LN8@ReadRleBlo
$LN7@ReadRleBlo:
; Line 224
	movzx	ecx, BYTE PTR _b$67622[ebp]
	movzx	edx, BYTE PTR _prevByte$[ebp]
	cmp	ecx, edx
	je	SHORT $LN6@ReadRleBlo
; Line 226
	cmp	DWORD PTR _numReps$67618[ebp], 4
	jb	SHORT $LN5@ReadRleBlo
; Line 227
	mov	eax, DWORD PTR _numReps$67618[ebp]
	sub	eax, 4
	mov	ecx, DWORD PTR _buffer$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN5@ReadRleBlo:
; Line 228
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR _b$67622[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
; Line 229
	mov	DWORD PTR _numReps$67618[ebp], 1
; Line 230
	mov	al, BYTE PTR _b$67622[ebp]
	mov	BYTE PTR _prevByte$[ebp], al
; Line 231
	jmp	SHORT $LN9@ReadRleBlo
$LN6@ReadRleBlo:
; Line 233
	mov	ecx, DWORD PTR _numReps$67618[ebp]
	add	ecx, 1
	mov	DWORD PTR _numReps$67618[ebp], ecx
; Line 234
	cmp	DWORD PTR _numReps$67618[ebp], 4
	ja	SHORT $LN4@ReadRleBlo
; Line 235
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR _b$67622[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN3@ReadRleBlo
$LN4@ReadRleBlo:
; Line 236
	cmp	DWORD PTR _numReps$67618[ebp], 259	; 00000103H
	jne	SHORT $LN3@ReadRleBlo
; Line 238
	mov	edx, DWORD PTR _numReps$67618[ebp]
	sub	edx, 4
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 239
	mov	DWORD PTR _numReps$67618[ebp], 0
$LN3@ReadRleBlo:
; Line 241
	jmp	$LN9@ReadRleBlo
$LN8@ReadRleBlo:
; Line 243
	cmp	DWORD PTR _numReps$67618[ebp], 4
	jb	SHORT $LN10@ReadRleBlo
; Line 244
	mov	edx, DWORD PTR _numReps$67618[ebp]
	sub	edx, 4
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN10@ReadRleBlo:
; Line 246
	mov	eax, DWORD PTR _i$[ebp]
; Line 247
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@ReadRleBlo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN17@ReadRleBlo:
	DD	2
	DD	$LN16@ReadRleBlo
$LN16@ReadRleBlo:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN14@ReadRleBlo
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN15@ReadRleBlo
$LN15@ReadRleBlo:
	DB	98					; 00000062H
	DB	0
$LN14@ReadRleBlo:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z ENDP	; NCompress::NBZip2::CEncoder::ReadRleBlock
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAE_NAAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 4
?ReadByte@CInBufferBase@@QAE_NAAE@Z PROC		; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 66
	mov	eax, DWORD PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _b$[ebp]
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 68
	mov	al, 1
$LN2@ReadByte:
; Line 69
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadByte@CInBufferBase@@QAE_NAAE@Z ENDP		; CInBufferBase::ReadByte
_TEXT	ENDS
PUBLIC	?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z ; NCompress::NBZip2::CMsbfEncoderTemp::WriteBits
PUBLIC	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_numBits$ = 12						; size = 4
?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z PROC	; NCompress::NBZip2::CThreadInfo::WriteBits2
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 249
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z ; NCompress::NBZip2::CMsbfEncoderTemp::WriteBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ENDP	; NCompress::NBZip2::CThreadInfo::WriteBits2
_TEXT	ENDS
PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z
_TEXT	SEGMENT
_newBits$67135 = -12					; size = 4
_numNewBits$67129 = -8					; size = 4
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_numBits$ = 12						; size = 4
?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z PROC ; NCompress::NBZip2::CMsbfEncoderTemp::WriteBits, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN3@WriteBits:
; Line 51
	cmp	DWORD PTR _numBits$[ebp], 0
	jbe	$LN4@WriteBits
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _numBits$[ebp]
	push	edx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR _numNewBits$67129[ebp], eax
; Line 54
	mov	eax, DWORD PTR _numBits$[ebp]
	sub	eax, DWORD PTR _numNewBits$67129[ebp]
	mov	DWORD PTR _numBits$[ebp], eax
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+8]
	mov	cl, BYTE PTR _numNewBits$67129[ebp]
	shl	dl, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], dl
; Line 57
	mov	edx, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shr	edx, cl
	mov	DWORD PTR _newBits$67135[ebp], edx
; Line 58
	movzx	eax, BYTE PTR _newBits$67135[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+8]
	or	edx, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], dl
; Line 59
	mov	edx, DWORD PTR _newBits$67135[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, edx
	mov	DWORD PTR _value$[ebp], eax
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, DWORD PTR _numNewBits$67129[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN1@WriteBits
; Line 65
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [ecx+8]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 66
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 8
$LN1@WriteBits:
; Line 68
	jmp	$LN3@WriteBits
$LN4@WriteBits:
; Line 69
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z ENDP ; NCompress::NBZip2::CMsbfEncoderTemp::WriteBits
_TEXT	ENDS
PUBLIC	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z PROC	; NCompress::NBZip2::CThreadInfo::WriteByte2
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ENDP	; NCompress::NBZip2::CThreadInfo::WriteByte2
_TEXT	ENDS
PUBLIC	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 1
?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z PROC	; NCompress::NBZip2::CThreadInfo::WriteBit2
; _this$ = ecx
; Line 251
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	movzx	eax, BYTE PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ENDP	; NCompress::NBZip2::CThreadInfo::WriteBit2
_TEXT	ENDS
PUBLIC	?WriteCrc2@CThreadInfo@NBZip2@NCompress@@AAEXI@Z ; NCompress::NBZip2::CThreadInfo::WriteCrc2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67650 = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
?WriteCrc2@CThreadInfo@NBZip2@NCompress@@AAEXI@Z PROC	; NCompress::NBZip2::CThreadInfo::WriteCrc2
; _this$ = ecx
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	mov	DWORD PTR _i$67650[ebp], 0
	jmp	SHORT $LN3@WriteCrc2
$LN2@WriteCrc2:
	mov	eax, DWORD PTR _i$67650[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67650[ebp], eax
$LN3@WriteCrc2:
	cmp	DWORD PTR _i$67650[ebp], 4
	jae	SHORT $LN4@WriteCrc2
; Line 255
	mov	ecx, DWORD PTR _i$67650[ebp]
	shl	ecx, 3
	mov	edx, 24					; 00000018H
	sub	edx, ecx
	mov	eax, DWORD PTR _v$[ebp]
	mov	ecx, edx
	shr	eax, cl
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
	jmp	SHORT $LN2@WriteCrc2
$LN4@WriteCrc2:
; Line 256
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteCrc2@CThreadInfo@NBZip2@NCompress@@AAEXI@Z ENDP	; NCompress::NBZip2::CThreadInfo::WriteCrc2
_TEXT	ENDS
PUBLIC	?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z ; CBitmEncoder<COutBuffer>::WriteBits
PUBLIC	?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z	; NCompress::NBZip2::CEncoder::WriteBits
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_numBits$ = 12						; size = 4
?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z PROC	; NCompress::NBZip2::CEncoder::WriteBits
; _this$ = ecx
; Line 258
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z ; CBitmEncoder<COutBuffer>::WriteBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z ENDP	; NCompress::NBZip2::CEncoder::WriteBits
_TEXT	ENDS
PUBLIC	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z	; NCompress::NBZip2::CEncoder::WriteByte
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z PROC	; NCompress::NBZip2::CEncoder::WriteByte
; _this$ = ecx
; Line 259
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z ; NCompress::NBZip2::CEncoder::WriteBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ENDP	; NCompress::NBZip2::CEncoder::WriteByte
_TEXT	ENDS
PUBLIC	?WriteCrc@CEncoder@NBZip2@NCompress@@QAEXI@Z	; NCompress::NBZip2::CEncoder::WriteCrc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67668 = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
?WriteCrc@CEncoder@NBZip2@NCompress@@QAEXI@Z PROC	; NCompress::NBZip2::CEncoder::WriteCrc
; _this$ = ecx
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 263
	mov	DWORD PTR _i$67668[ebp], 0
	jmp	SHORT $LN3@WriteCrc
$LN2@WriteCrc:
	mov	eax, DWORD PTR _i$67668[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67668[ebp], eax
$LN3@WriteCrc:
	cmp	DWORD PTR _i$67668[ebp], 4
	jae	SHORT $LN4@WriteCrc
; Line 264
	mov	ecx, DWORD PTR _i$67668[ebp]
	shl	ecx, 3
	mov	edx, 24					; 00000018H
	sub	edx, ecx
	mov	eax, DWORD PTR _v$[ebp]
	mov	ecx, edx
	shr	eax, cl
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
	jmp	SHORT $LN2@WriteCrc
$LN4@WriteCrc:
; Line 265
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteCrc@CEncoder@NBZip2@NCompress@@QAEXI@Z ENDP	; NCompress::NBZip2::CEncoder::WriteCrc
_TEXT	ENDS
PUBLIC	?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetCurState
PUBLIC	?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetPos
PUBLIC	?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte
PUBLIC	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
PUBLIC	?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z	; NCompress::CMtf8Encoder::FindAndMove
PUBLIC	__$ArrayPad$
PUBLIC	?EncodeBlock@CThreadInfo@NBZip2@NCompress@@AAEXPBEI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock
EXTRN	_Huffman_Generate@20:PROC
EXTRN	_memset:PROC
EXTRN	_BlockSort@12:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv331 = -2072						; size = 4
_price$67880 = -2068					; size = 4
_t$67878 = -2064					; size = 4
_symbol$67875 = -2060					; size = 4
_mtfPos$67871 = -2056					; size = 4
_codes$67870 = -2052					; size = 4
_lens$67869 = -2048					; size = 4
_groupIndex$67868 = -2044				; size = 4
_groupSize$67867 = -2040				; size = 4
_level$67861 = -2036					; size = 4
_i$67857 = -2032					; size = 4
_len$67856 = -2028					; size = 4
_lens$67855 = -2024					; size = 4
_t$67851 = -2020					; size = 4
_pos$67844 = -2016					; size = 4
_sel$67843 = -2009					; size = 1
_i$67839 = -2008					; size = 4
_t$67834 = -2004					; size = 4
_mtfSel$67833 = -1996					; size = 6
_i$67828 = -1984					; size = 4
_freqs$67827 = -1980					; size = 4
_t$67823 = -1976					; size = 4
_j$67819 = -1972					; size = 4
_freqs$67818 = -1968					; size = 4
_j$67812 = -1964					; size = 4
_price$67811 = -1960					; size = 4
_lens$67810 = -1956					; size = 4
_t$67806 = -1952					; size = 4
_bestPrice$67805 = -1948				; size = 4
_symbol$67802 = -1944					; size = 4
_i$67798 = -1940					; size = 4
_symbols$67797 = -1932					; size = 200
_g$67793 = -1728					; size = 4
_mtfPos$67792 = -1724					; size = 4
_t$67788 = -1720					; size = 4
_pass$67784 = -1716					; size = 4
_i$67779 = -1712					; size = 4
_lens$67778 = -1708					; size = 4
_aFreq$67773 = -1704					; size = 4
_ge$67772 = -1700					; size = 4
_tFreq$67771 = -1696					; size = 4
_t$67767 = -1692					; size = 4
_gs$67766 = -1688					; size = 4
_remFreq$67765 = -1684					; size = 4
_numSelectors$67764 = -1680				; size = 4
_numTables$67751 = -1676				; size = 4
_nt$67747 = -1672					; size = 4
_startCurByte$ = -1665					; size = 1
_startPos$ = -1664					; size = 4
_bestPrice$ = -1660					; size = 4
_bestNumTables$ = -1656					; size = 4
_i$67739 = -1652					; size = 4
_numSymbols$ = -1648					; size = 4
_pos$67719 = -1644					; size = 4
_bsIndex$67715 = -1640					; size = 4
_i$67714 = -1636					; size = 4
_rleSize$67713 = -1632					; size = 4
_i$67709 = -1628					; size = 4
_symbolCounts$ = -1620					; size = 1032
_mtfArraySize$ = -584					; size = 4
_mtfs$ = -580						; size = 4
_alphaSize$ = -576					; size = 4
_i$67683 = -572						; size = 4
_inUse16$67682 = -564					; size = 16
_inUse$67681 = -540					; size = 256
_numInUse$ = -280					; size = 4
_mtf$ = -272						; size = 256
_origPtr$67678 = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_block$ = 8						; size = 4
_blockSize$ = 12					; size = 4
?EncodeBlock@CThreadInfo@NBZip2@NCompress@@AAEXPBEI@Z PROC ; NCompress::NBZip2::CThreadInfo::EncodeBlock
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 2072				; 00000818H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-2072]
	mov	ecx, 518				; 00000206H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 271
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Line 274
	mov	eax, DWORD PTR _blockSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _block$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_BlockSort@12
	mov	DWORD PTR _origPtr$67678[ebp], eax
; Line 276
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _origPtr$67678[ebp]
	mov	ecx, DWORD PTR _blockSize$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 277
	push	24					; 00000018H
	mov	edx, DWORD PTR _origPtr$67678[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
; Line 281
	mov	DWORD PTR _numInUse$[ebp], 0
; Line 286
	mov	DWORD PTR _i$67683[ebp], 0
	jmp	SHORT $LN124@EncodeBloc
$LN123@EncodeBloc:
	mov	eax, DWORD PTR _i$67683[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67683[ebp], eax
$LN124@EncodeBloc:
	cmp	DWORD PTR _i$67683[ebp], 256		; 00000100H
	jae	SHORT $LN122@EncodeBloc
; Line 287
	mov	ecx, DWORD PTR _i$67683[ebp]
	mov	BYTE PTR _inUse$67681[ebp+ecx], 0
	jmp	SHORT $LN123@EncodeBloc
$LN122@EncodeBloc:
; Line 288
	mov	DWORD PTR _i$67683[ebp], 0
	jmp	SHORT $LN121@EncodeBloc
$LN120@EncodeBloc:
	mov	edx, DWORD PTR _i$67683[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67683[ebp], edx
$LN121@EncodeBloc:
	cmp	DWORD PTR _i$67683[ebp], 16		; 00000010H
	jae	SHORT $LN119@EncodeBloc
; Line 289
	mov	eax, DWORD PTR _i$67683[ebp]
	mov	BYTE PTR _inUse16$67682[ebp+eax], 0
	jmp	SHORT $LN120@EncodeBloc
$LN119@EncodeBloc:
; Line 290
	mov	DWORD PTR _i$67683[ebp], 0
	jmp	SHORT $LN118@EncodeBloc
$LN117@EncodeBloc:
	mov	ecx, DWORD PTR _i$67683[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67683[ebp], ecx
$LN118@EncodeBloc:
	mov	edx, DWORD PTR _i$67683[ebp]
	cmp	edx, DWORD PTR _blockSize$[ebp]
	jae	SHORT $LN116@EncodeBloc
; Line 291
	mov	eax, DWORD PTR _block$[ebp]
	add	eax, DWORD PTR _i$67683[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	BYTE PTR _inUse$67681[ebp+ecx], 1
	jmp	SHORT $LN117@EncodeBloc
$LN116@EncodeBloc:
; Line 292
	mov	DWORD PTR _i$67683[ebp], 0
	jmp	SHORT $LN115@EncodeBloc
$LN114@EncodeBloc:
	mov	edx, DWORD PTR _i$67683[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67683[ebp], edx
$LN115@EncodeBloc:
	cmp	DWORD PTR _i$67683[ebp], 256		; 00000100H
	jae	SHORT $LN113@EncodeBloc
; Line 293
	mov	eax, DWORD PTR _i$67683[ebp]
	movzx	ecx, BYTE PTR _inUse$67681[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN112@EncodeBloc
; Line 295
	mov	edx, DWORD PTR _i$67683[ebp]
	shr	edx, 4
	mov	BYTE PTR _inUse16$67682[ebp+edx], 1
; Line 296
	mov	eax, DWORD PTR _numInUse$[ebp]
	mov	cl, BYTE PTR _i$67683[ebp]
	mov	BYTE PTR _mtf$[ebp+eax], cl
	mov	edx, DWORD PTR _numInUse$[ebp]
	add	edx, 1
	mov	DWORD PTR _numInUse$[ebp], edx
$LN112@EncodeBloc:
; Line 297
	jmp	SHORT $LN114@EncodeBloc
$LN113@EncodeBloc:
; Line 298
	mov	DWORD PTR _i$67683[ebp], 0
	jmp	SHORT $LN111@EncodeBloc
$LN110@EncodeBloc:
	mov	eax, DWORD PTR _i$67683[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67683[ebp], eax
$LN111@EncodeBloc:
	cmp	DWORD PTR _i$67683[ebp], 16		; 00000010H
	jae	SHORT $LN109@EncodeBloc
; Line 299
	mov	ecx, DWORD PTR _i$67683[ebp]
	movzx	edx, BYTE PTR _inUse16$67682[ebp+ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
	jmp	SHORT $LN110@EncodeBloc
$LN109@EncodeBloc:
; Line 300
	mov	DWORD PTR _i$67683[ebp], 0
	jmp	SHORT $LN108@EncodeBloc
$LN107@EncodeBloc:
	mov	eax, DWORD PTR _i$67683[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67683[ebp], eax
$LN108@EncodeBloc:
	cmp	DWORD PTR _i$67683[ebp], 256		; 00000100H
	jae	SHORT $LN106@EncodeBloc
; Line 301
	mov	ecx, DWORD PTR _i$67683[ebp]
	shr	ecx, 4
	movzx	edx, BYTE PTR _inUse16$67682[ebp+ecx]
	test	edx, edx
	je	SHORT $LN105@EncodeBloc
; Line 302
	mov	eax, DWORD PTR _i$67683[ebp]
	movzx	ecx, BYTE PTR _inUse$67681[ebp+eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
$LN105@EncodeBloc:
; Line 303
	jmp	SHORT $LN107@EncodeBloc
$LN106@EncodeBloc:
; Line 304
	mov	edx, DWORD PTR _numInUse$[ebp]
	add	edx, 2
	mov	DWORD PTR _alphaSize$[ebp], edx
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _mtfs$[ebp], ecx
; Line 307
	mov	DWORD PTR _mtfArraySize$[ebp], 0
; Line 310
	mov	DWORD PTR _i$67709[ebp], 0
	jmp	SHORT $LN104@EncodeBloc
$LN103@EncodeBloc:
	mov	edx, DWORD PTR _i$67709[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67709[ebp], edx
$LN104@EncodeBloc:
	cmp	DWORD PTR _i$67709[ebp], 258		; 00000102H
	jae	SHORT $LN102@EncodeBloc
; Line 311
	mov	eax, DWORD PTR _i$67709[ebp]
	mov	DWORD PTR _symbolCounts$[ebp+eax*4], 0
	jmp	SHORT $LN103@EncodeBloc
$LN102@EncodeBloc:
; Line 315
	mov	DWORD PTR _rleSize$67713[ebp], 0
; Line 316
	mov	DWORD PTR _i$67714[ebp], 0
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _bsIndex$67715[ebp], edx
; Line 318
	mov	eax, DWORD PTR _block$[ebp]
	sub	eax, 1
	mov	DWORD PTR _block$[ebp], eax
$LN101@EncodeBloc:
; Line 321
	mov	ecx, DWORD PTR _i$67714[ebp]
	mov	edx, DWORD PTR _bsIndex$67715[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _block$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	push	edx
	lea	ecx, DWORD PTR _mtf$[ebp]
	call	?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z ; NCompress::CMtf8Encoder::FindAndMove
	mov	DWORD PTR _pos$67719[ebp], eax
; Line 322
	cmp	DWORD PTR _pos$67719[ebp], 0
	jne	SHORT $LN96@EncodeBloc
; Line 323
	mov	eax, DWORD PTR _rleSize$67713[ebp]
	add	eax, 1
	mov	DWORD PTR _rleSize$67713[ebp], eax
; Line 324
	jmp	$LN100@EncodeBloc
$LN96@EncodeBloc:
; Line 326
	cmp	DWORD PTR _rleSize$67713[ebp], 0
	je	SHORT $LN95@EncodeBloc
; Line 328
	mov	ecx, DWORD PTR _rleSize$67713[ebp]
	sub	ecx, 1
	mov	DWORD PTR _rleSize$67713[ebp], ecx
; Line 329
	mov	edx, DWORD PTR _rleSize$67713[ebp]
	and	edx, 1
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
; Line 330
	mov	edx, DWORD PTR _rleSize$67713[ebp]
	and	edx, 1
	mov	eax, DWORD PTR _symbolCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _rleSize$67713[ebp]
	and	ecx, 1
	mov	DWORD PTR _symbolCounts$[ebp+ecx*4], eax
; Line 331
	mov	edx, DWORD PTR _rleSize$67713[ebp]
	shr	edx, 1
	mov	DWORD PTR _rleSize$67713[ebp], edx
; Line 332
	jmp	SHORT $LN96@EncodeBloc
$LN95@EncodeBloc:
; Line 333
	cmp	DWORD PTR _pos$67719[ebp], 254		; 000000feH
	jb	SHORT $LN94@EncodeBloc
; Line 335
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], 255			; 000000ffH
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
; Line 336
	mov	edx, DWORD PTR _pos$67719[ebp]
	sub	edx, 254				; 000000feH
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
; Line 338
	jmp	SHORT $LN93@EncodeBloc
$LN94@EncodeBloc:
; Line 339
	mov	edx, DWORD PTR _pos$67719[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
$LN93@EncodeBloc:
; Line 340
	mov	edx, DWORD PTR _pos$67719[ebp]
	mov	eax, DWORD PTR _symbolCounts$[ebp+edx*4+4]
	add	eax, 1
	mov	ecx, DWORD PTR _pos$67719[ebp]
	mov	DWORD PTR _symbolCounts$[ebp+ecx*4+4], eax
$LN100@EncodeBloc:
; Line 343
	mov	edx, DWORD PTR _i$67714[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67714[ebp], edx
	mov	eax, DWORD PTR _i$67714[ebp]
	cmp	eax, DWORD PTR _blockSize$[ebp]
	jb	$LN101@EncodeBloc
$LN92@EncodeBloc:
; Line 345
	cmp	DWORD PTR _rleSize$67713[ebp], 0
	je	SHORT $LN91@EncodeBloc
; Line 347
	mov	ecx, DWORD PTR _rleSize$67713[ebp]
	sub	ecx, 1
	mov	DWORD PTR _rleSize$67713[ebp], ecx
; Line 348
	mov	edx, DWORD PTR _rleSize$67713[ebp]
	and	edx, 1
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
; Line 349
	mov	edx, DWORD PTR _rleSize$67713[ebp]
	and	edx, 1
	mov	eax, DWORD PTR _symbolCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _rleSize$67713[ebp]
	and	ecx, 1
	mov	DWORD PTR _symbolCounts$[ebp+ecx*4], eax
; Line 350
	mov	edx, DWORD PTR _rleSize$67713[ebp]
	shr	edx, 1
	mov	DWORD PTR _rleSize$67713[ebp], edx
; Line 351
	jmp	SHORT $LN92@EncodeBloc
$LN91@EncodeBloc:
; Line 353
	cmp	DWORD PTR _alphaSize$[ebp], 256		; 00000100H
	jae	SHORT $LN90@EncodeBloc
; Line 354
	mov	eax, DWORD PTR _alphaSize$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _mtfs$[ebp]
	add	ecx, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _mtfArraySize$[ebp]
	add	edx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], edx
; Line 355
	jmp	SHORT $LN89@EncodeBloc
$LN90@EncodeBloc:
; Line 357
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], 255			; 000000ffH
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
; Line 358
	mov	edx, DWORD PTR _alphaSize$[ebp]
	sub	edx, 256				; 00000100H
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfArraySize$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _mtfArraySize$[ebp]
	add	ecx, 1
	mov	DWORD PTR _mtfArraySize$[ebp], ecx
$LN89@EncodeBloc:
; Line 360
	mov	edx, DWORD PTR _alphaSize$[ebp]
	mov	eax, DWORD PTR _symbolCounts$[ebp+edx*4-4]
	add	eax, 1
	mov	ecx, DWORD PTR _alphaSize$[ebp]
	mov	DWORD PTR _symbolCounts$[ebp+ecx*4-4], eax
; Line 363
	mov	DWORD PTR _numSymbols$[ebp], 0
; Line 365
	mov	DWORD PTR _i$67739[ebp], 0
	jmp	SHORT $LN88@EncodeBloc
$LN87@EncodeBloc:
	mov	edx, DWORD PTR _i$67739[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67739[ebp], edx
$LN88@EncodeBloc:
	cmp	DWORD PTR _i$67739[ebp], 258		; 00000102H
	jae	SHORT $LN86@EncodeBloc
; Line 366
	mov	eax, DWORD PTR _i$67739[ebp]
	mov	ecx, DWORD PTR _numSymbols$[ebp]
	add	ecx, DWORD PTR _symbolCounts$[ebp+eax*4]
	mov	DWORD PTR _numSymbols$[ebp], ecx
	jmp	SHORT $LN87@EncodeBloc
$LN86@EncodeBloc:
; Line 369
	mov	DWORD PTR _bestNumTables$[ebp], 2
; Line 370
	mov	DWORD PTR _bestPrice$[ebp], -1
; Line 371
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	mov	DWORD PTR _startPos$[ebp], eax
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte
	mov	BYTE PTR _startCurByte$[ebp], al
; Line 373
	mov	DWORD PTR _nt$67747[ebp], 2
	jmp	SHORT $LN85@EncodeBloc
$LN84@EncodeBloc:
	mov	ecx, DWORD PTR _nt$67747[ebp]
	add	ecx, 1
	mov	DWORD PTR _nt$67747[ebp], ecx
$LN85@EncodeBloc:
	cmp	DWORD PTR _nt$67747[ebp], 7
	ja	$LN125@EncodeBloc
; Line 377
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+36060]
	test	eax, eax
	je	SHORT $LN82@EncodeBloc
; Line 379
	mov	ecx, DWORD PTR _startPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetPos
; Line 380
	movzx	eax, BYTE PTR _startCurByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startPos$[ebp]
	and	ecx, 7
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetCurState
; Line 381
	cmp	DWORD PTR _nt$67747[ebp], 6
	ja	SHORT $LN81@EncodeBloc
; Line 382
	mov	eax, DWORD PTR _nt$67747[ebp]
	mov	DWORD PTR _numTables$67751[ebp], eax
; Line 383
	jmp	SHORT $LN80@EncodeBloc
$LN81@EncodeBloc:
; Line 384
	mov	ecx, DWORD PTR _bestNumTables$[ebp]
	mov	DWORD PTR _numTables$67751[ebp], ecx
$LN80@EncodeBloc:
; Line 386
	jmp	SHORT $LN79@EncodeBloc
$LN82@EncodeBloc:
; Line 388
	cmp	DWORD PTR _numSymbols$[ebp], 200	; 000000c8H
	jae	SHORT $LN78@EncodeBloc
	mov	DWORD PTR _numTables$67751[ebp], 2
	jmp	SHORT $LN79@EncodeBloc
$LN78@EncodeBloc:
; Line 389
	cmp	DWORD PTR _numSymbols$[ebp], 600	; 00000258H
	jae	SHORT $LN76@EncodeBloc
	mov	DWORD PTR _numTables$67751[ebp], 3
	jmp	SHORT $LN79@EncodeBloc
$LN76@EncodeBloc:
; Line 390
	cmp	DWORD PTR _numSymbols$[ebp], 1200	; 000004b0H
	jae	SHORT $LN74@EncodeBloc
	mov	DWORD PTR _numTables$67751[ebp], 4
	jmp	SHORT $LN79@EncodeBloc
$LN74@EncodeBloc:
; Line 391
	cmp	DWORD PTR _numSymbols$[ebp], 2400	; 00000960H
	jae	SHORT $LN72@EncodeBloc
	mov	DWORD PTR _numTables$67751[ebp], 5
	jmp	SHORT $LN79@EncodeBloc
$LN72@EncodeBloc:
; Line 392
	mov	DWORD PTR _numTables$67751[ebp], 6
$LN79@EncodeBloc:
; Line 395
	push	3
	mov	edx, DWORD PTR _numTables$67751[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
; Line 397
	mov	eax, DWORD PTR _numSymbols$[ebp]
	add	eax, 49					; 00000031H
	xor	edx, edx
	mov	ecx, 50					; 00000032H
	div	ecx
	mov	DWORD PTR _numSelectors$67764[ebp], eax
; Line 398
	push	15					; 0000000fH
	mov	edx, DWORD PTR _numSelectors$67764[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
; Line 401
	mov	eax, DWORD PTR _numSymbols$[ebp]
	mov	DWORD PTR _remFreq$67765[ebp], eax
; Line 402
	mov	DWORD PTR _gs$67766[ebp], 0
; Line 403
	mov	ecx, DWORD PTR _numTables$67751[ebp]
	mov	DWORD PTR _t$67767[ebp], ecx
$LN70@EncodeBloc:
; Line 406
	mov	eax, DWORD PTR _remFreq$67765[ebp]
	xor	edx, edx
	div	DWORD PTR _t$67767[ebp]
	mov	DWORD PTR _tFreq$67771[ebp], eax
; Line 407
	mov	edx, DWORD PTR _gs$67766[ebp]
	mov	DWORD PTR _ge$67772[ebp], edx
; Line 408
	mov	DWORD PTR _aFreq$67773[ebp], 0
$LN67@EncodeBloc:
; Line 409
	mov	eax, DWORD PTR _aFreq$67773[ebp]
	cmp	eax, DWORD PTR _tFreq$67771[ebp]
	jae	SHORT $LN66@EncodeBloc
; Line 410
	mov	ecx, DWORD PTR _ge$67772[ebp]
	mov	edx, DWORD PTR _aFreq$67773[ebp]
	add	edx, DWORD PTR _symbolCounts$[ebp+ecx*4]
	mov	DWORD PTR _aFreq$67773[ebp], edx
	mov	eax, DWORD PTR _ge$67772[ebp]
	add	eax, 1
	mov	DWORD PTR _ge$67772[ebp], eax
	jmp	SHORT $LN67@EncodeBloc
$LN66@EncodeBloc:
; Line 412
	mov	ecx, DWORD PTR _gs$67766[ebp]
	add	ecx, 1
	cmp	DWORD PTR _ge$67772[ebp], ecx
	jbe	SHORT $LN65@EncodeBloc
	mov	edx, DWORD PTR _t$67767[ebp]
	cmp	edx, DWORD PTR _numTables$67751[ebp]
	je	SHORT $LN65@EncodeBloc
	cmp	DWORD PTR _t$67767[ebp], 1
	je	SHORT $LN65@EncodeBloc
	mov	eax, DWORD PTR _numTables$67751[ebp]
	sub	eax, DWORD PTR _t$67767[ebp]
	and	eax, 1
	je	SHORT $LN65@EncodeBloc
; Line 413
	mov	ecx, DWORD PTR _ge$67772[ebp]
	sub	ecx, 1
	mov	DWORD PTR _ge$67772[ebp], ecx
	mov	edx, DWORD PTR _ge$67772[ebp]
	mov	eax, DWORD PTR _aFreq$67773[ebp]
	sub	eax, DWORD PTR _symbolCounts$[ebp+edx*4]
	mov	DWORD PTR _aFreq$67773[ebp], eax
$LN65@EncodeBloc:
; Line 415
	mov	ecx, DWORD PTR _t$67767[ebp]
	sub	ecx, 1
	imul	ecx, 258				; 00000102H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+20]
	mov	DWORD PTR _lens$67778[ebp], eax
; Line 416
	mov	DWORD PTR _i$67779[ebp], 0
$LN64@EncodeBloc:
; Line 418
	mov	ecx, DWORD PTR _i$67779[ebp]
	cmp	ecx, DWORD PTR _gs$67766[ebp]
	jb	SHORT $LN127@EncodeBloc
	mov	edx, DWORD PTR _i$67779[ebp]
	cmp	edx, DWORD PTR _ge$67772[ebp]
	jae	SHORT $LN127@EncodeBloc
	mov	DWORD PTR tv331[ebp], 0
	jmp	SHORT $LN128@EncodeBloc
$LN127@EncodeBloc:
	mov	DWORD PTR tv331[ebp], 1
$LN128@EncodeBloc:
	mov	eax, DWORD PTR _lens$67778[ebp]
	add	eax, DWORD PTR _i$67779[ebp]
	mov	cl, BYTE PTR tv331[ebp]
	mov	BYTE PTR [eax], cl
; Line 419
	mov	edx, DWORD PTR _i$67779[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67779[ebp], edx
	mov	eax, DWORD PTR _i$67779[ebp]
	cmp	eax, DWORD PTR _alphaSize$[ebp]
	jb	SHORT $LN64@EncodeBloc
; Line 420
	mov	ecx, DWORD PTR _ge$67772[ebp]
	mov	DWORD PTR _gs$67766[ebp], ecx
; Line 421
	mov	edx, DWORD PTR _remFreq$67765[ebp]
	sub	edx, DWORD PTR _aFreq$67773[ebp]
	mov	DWORD PTR _remFreq$67765[ebp], edx
; Line 423
	mov	eax, DWORD PTR _t$67767[ebp]
	sub	eax, 1
	mov	DWORD PTR _t$67767[ebp], eax
	jne	$LN70@EncodeBloc
; Line 427
	mov	DWORD PTR _pass$67784[ebp], 0
	jmp	SHORT $LN61@EncodeBloc
$LN60@EncodeBloc:
	mov	ecx, DWORD PTR _pass$67784[ebp]
	add	ecx, 1
	mov	DWORD PTR _pass$67784[ebp], ecx
$LN61@EncodeBloc:
	cmp	DWORD PTR _pass$67784[ebp], 4
	jae	$LN59@EncodeBloc
; Line 430
	mov	DWORD PTR _t$67788[ebp], 0
$LN58@EncodeBloc:
; Line 432
	push	1032					; 00000408H
	push	0
	mov	edx, DWORD PTR _t$67788[ebp]
	imul	edx, 1032				; 00000408H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1568]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 433
	mov	edx, DWORD PTR _t$67788[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67788[ebp], edx
	mov	eax, DWORD PTR _t$67788[ebp]
	cmp	eax, DWORD PTR _numTables$67751[ebp]
	jb	SHORT $LN58@EncodeBloc
; Line 437
	mov	DWORD PTR _mtfPos$67792[ebp], 0
; Line 438
	mov	DWORD PTR _g$67793[ebp], 0
$LN55@EncodeBloc:
; Line 442
	mov	DWORD PTR _i$67798[ebp], 0
$LN52@EncodeBloc:
; Line 445
	mov	ecx, DWORD PTR _mtfs$[ebp]
	add	ecx, DWORD PTR _mtfPos$67792[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _symbol$67802[ebp], edx
	mov	eax, DWORD PTR _mtfPos$67792[ebp]
	add	eax, 1
	mov	DWORD PTR _mtfPos$67792[ebp], eax
; Line 446
	cmp	DWORD PTR _symbol$67802[ebp], 255	; 000000ffH
	jb	SHORT $LN49@EncodeBloc
; Line 447
	mov	ecx, DWORD PTR _mtfs$[ebp]
	add	ecx, DWORD PTR _mtfPos$67792[ebp]
	movzx	edx, BYTE PTR [ecx]
	add	edx, DWORD PTR _symbol$67802[ebp]
	mov	DWORD PTR _symbol$67802[ebp], edx
	mov	eax, DWORD PTR _mtfPos$67792[ebp]
	add	eax, 1
	mov	DWORD PTR _mtfPos$67792[ebp], eax
$LN49@EncodeBloc:
; Line 448
	mov	ecx, DWORD PTR _i$67798[ebp]
	mov	edx, DWORD PTR _symbol$67802[ebp]
	mov	DWORD PTR _symbols$67797[ebp+ecx*4], edx
; Line 450
	mov	eax, DWORD PTR _i$67798[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67798[ebp], eax
	cmp	DWORD PTR _i$67798[ebp], 50		; 00000032H
	jae	SHORT $LN50@EncodeBloc
	mov	ecx, DWORD PTR _mtfPos$67792[ebp]
	cmp	ecx, DWORD PTR _mtfArraySize$[ebp]
	jb	$LN52@EncodeBloc
$LN50@EncodeBloc:
; Line 452
	mov	DWORD PTR _bestPrice$67805[ebp], -1
; Line 453
	mov	DWORD PTR _t$67806[ebp], 0
$LN47@EncodeBloc:
; Line 456
	mov	edx, DWORD PTR _t$67806[ebp]
	imul	edx, 258				; 00000102H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+20]
	mov	DWORD PTR _lens$67810[ebp], ecx
; Line 457
	mov	DWORD PTR _price$67811[ebp], 0
; Line 458
	mov	DWORD PTR _j$67812[ebp], 0
$LN44@EncodeBloc:
; Line 460
	mov	edx, DWORD PTR _j$67812[ebp]
	mov	eax, DWORD PTR _symbols$67797[ebp+edx*4]
	mov	ecx, DWORD PTR _lens$67810[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	add	edx, DWORD PTR _price$67811[ebp]
	mov	DWORD PTR _price$67811[ebp], edx
; Line 461
	mov	eax, DWORD PTR _j$67812[ebp]
	add	eax, 1
	mov	DWORD PTR _j$67812[ebp], eax
	mov	ecx, DWORD PTR _j$67812[ebp]
	cmp	ecx, DWORD PTR _i$67798[ebp]
	jb	SHORT $LN44@EncodeBloc
; Line 462
	mov	edx, DWORD PTR _price$67811[ebp]
	cmp	edx, DWORD PTR _bestPrice$67805[ebp]
	jae	SHORT $LN46@EncodeBloc
; Line 464
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _g$67793[ebp]
	mov	cl, BYTE PTR _t$67806[ebp]
	mov	BYTE PTR [eax+13952], cl
; Line 465
	mov	edx, DWORD PTR _price$67811[ebp]
	mov	DWORD PTR _bestPrice$67805[ebp], edx
$LN46@EncodeBloc:
; Line 468
	mov	eax, DWORD PTR _t$67806[ebp]
	add	eax, 1
	mov	DWORD PTR _t$67806[ebp], eax
	mov	ecx, DWORD PTR _t$67806[ebp]
	cmp	ecx, DWORD PTR _numTables$67751[ebp]
	jb	$LN47@EncodeBloc
; Line 469
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _g$67793[ebp]
	movzx	eax, BYTE PTR [edx+13952]
	imul	eax, 1032				; 00000408H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1568]
	mov	DWORD PTR _freqs$67818[ebp], edx
	mov	eax, DWORD PTR _g$67793[ebp]
	add	eax, 1
	mov	DWORD PTR _g$67793[ebp], eax
; Line 470
	mov	DWORD PTR _j$67819[ebp], 0
$LN40@EncodeBloc:
; Line 472
	mov	ecx, DWORD PTR _j$67819[ebp]
	mov	edx, DWORD PTR _symbols$67797[ebp+ecx*4]
	mov	eax, DWORD PTR _freqs$67818[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	add	ecx, 1
	mov	edx, DWORD PTR _j$67819[ebp]
	mov	eax, DWORD PTR _symbols$67797[ebp+edx*4]
	mov	edx, DWORD PTR _freqs$67818[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 473
	mov	eax, DWORD PTR _j$67819[ebp]
	add	eax, 1
	mov	DWORD PTR _j$67819[ebp], eax
	mov	ecx, DWORD PTR _j$67819[ebp]
	cmp	ecx, DWORD PTR _i$67798[ebp]
	jb	SHORT $LN40@EncodeBloc
; Line 475
	mov	edx, DWORD PTR _mtfPos$67792[ebp]
	cmp	edx, DWORD PTR _mtfArraySize$[ebp]
	jb	$LN55@EncodeBloc
; Line 478
	mov	DWORD PTR _t$67823[ebp], 0
$LN37@EncodeBloc:
; Line 481
	mov	eax, DWORD PTR _t$67823[ebp]
	imul	eax, 1032				; 00000408H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1568]
	mov	DWORD PTR _freqs$67827[ebp], edx
; Line 482
	mov	DWORD PTR _i$67828[ebp], 0
$LN34@EncodeBloc:
; Line 484
	mov	eax, DWORD PTR _i$67828[ebp]
	mov	ecx, DWORD PTR _freqs$67827[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN33@EncodeBloc
; Line 485
	mov	edx, DWORD PTR _i$67828[ebp]
	mov	eax, DWORD PTR _freqs$67827[ebp]
	mov	DWORD PTR [eax+edx*4], 1
$LN33@EncodeBloc:
; Line 486
	mov	ecx, DWORD PTR _i$67828[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67828[ebp], ecx
	mov	edx, DWORD PTR _i$67828[ebp]
	cmp	edx, DWORD PTR _alphaSize$[ebp]
	jb	SHORT $LN34@EncodeBloc
; Line 487
	push	16					; 00000010H
	push	258					; 00000102H
	mov	eax, DWORD PTR _t$67823[ebp]
	imul	eax, 258				; 00000102H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+20]
	push	edx
	mov	eax, DWORD PTR _t$67823[ebp]
	imul	eax, 1032				; 00000408H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+7760]
	push	edx
	mov	eax, DWORD PTR _freqs$67827[ebp]
	push	eax
	call	_Huffman_Generate@20
; Line 489
	mov	ecx, DWORD PTR _t$67823[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$67823[ebp], ecx
	mov	edx, DWORD PTR _t$67823[ebp]
	cmp	edx, DWORD PTR _numTables$67751[ebp]
	jb	$LN37@EncodeBloc
; Line 490
	jmp	$LN60@EncodeBloc
$LN59@EncodeBloc:
; Line 495
	mov	DWORD PTR _t$67834[ebp], 0
$LN30@EncodeBloc:
; Line 497
	mov	eax, DWORD PTR _t$67834[ebp]
	mov	cl, BYTE PTR _t$67834[ebp]
	mov	BYTE PTR _mtfSel$67833[ebp+eax], cl
; Line 498
	mov	edx, DWORD PTR _t$67834[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67834[ebp], edx
	mov	eax, DWORD PTR _t$67834[ebp]
	cmp	eax, DWORD PTR _numTables$67751[ebp]
	jb	SHORT $LN30@EncodeBloc
; Line 501
	mov	DWORD PTR _i$67839[ebp], 0
$LN27@EncodeBloc:
; Line 504
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$67839[ebp]
	mov	dl, BYTE PTR [ecx+13952]
	mov	BYTE PTR _sel$67843[ebp], dl
; Line 506
	mov	DWORD PTR _pos$67844[ebp], 0
	jmp	SHORT $LN24@EncodeBloc
$LN23@EncodeBloc:
	mov	eax, DWORD PTR _pos$67844[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$67844[ebp], eax
$LN24@EncodeBloc:
	mov	ecx, DWORD PTR _pos$67844[ebp]
	movzx	edx, BYTE PTR _mtfSel$67833[ebp+ecx]
	movzx	eax, BYTE PTR _sel$67843[ebp]
	cmp	edx, eax
	je	SHORT $LN22@EncodeBloc
; Line 507
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
	jmp	SHORT $LN23@EncodeBloc
$LN22@EncodeBloc:
; Line 508
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Line 509
	jmp	SHORT $LN21@EncodeBloc
$LN20@EncodeBloc:
	mov	ecx, DWORD PTR _pos$67844[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$67844[ebp], ecx
$LN21@EncodeBloc:
	cmp	DWORD PTR _pos$67844[ebp], 0
	jbe	SHORT $LN19@EncodeBloc
; Line 510
	mov	edx, DWORD PTR _pos$67844[ebp]
	mov	eax, DWORD PTR _pos$67844[ebp]
	mov	cl, BYTE PTR _mtfSel$67833[ebp+eax-1]
	mov	BYTE PTR _mtfSel$67833[ebp+edx], cl
	jmp	SHORT $LN20@EncodeBloc
$LN19@EncodeBloc:
; Line 511
	mov	dl, BYTE PTR _sel$67843[ebp]
	mov	BYTE PTR _mtfSel$67833[ebp], dl
; Line 513
	mov	eax, DWORD PTR _i$67839[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67839[ebp], eax
	mov	ecx, DWORD PTR _i$67839[ebp]
	cmp	ecx, DWORD PTR _numSelectors$67764[ebp]
	jb	$LN27@EncodeBloc
; Line 517
	mov	DWORD PTR _t$67851[ebp], 0
$LN18@EncodeBloc:
; Line 520
	mov	edx, DWORD PTR _t$67851[ebp]
	imul	edx, 258				; 00000102H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+20]
	mov	DWORD PTR _lens$67855[ebp], ecx
; Line 521
	mov	edx, DWORD PTR _lens$67855[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	DWORD PTR _len$67856[ebp], eax
; Line 522
	push	5
	mov	ecx, DWORD PTR _len$67856[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
; Line 523
	mov	DWORD PTR _i$67857[ebp], 0
$LN15@EncodeBloc:
; Line 526
	mov	edx, DWORD PTR _lens$67855[ebp]
	add	edx, DWORD PTR _i$67857[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	DWORD PTR _level$67861[ebp], eax
$LN12@EncodeBloc:
; Line 527
	mov	ecx, DWORD PTR _len$67856[ebp]
	cmp	ecx, DWORD PTR _level$67861[ebp]
	je	SHORT $LN11@EncodeBloc
; Line 529
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Line 530
	mov	edx, DWORD PTR _len$67856[ebp]
	cmp	edx, DWORD PTR _level$67861[ebp]
	jae	SHORT $LN10@EncodeBloc
; Line 532
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Line 533
	mov	eax, DWORD PTR _len$67856[ebp]
	add	eax, 1
	mov	DWORD PTR _len$67856[ebp], eax
; Line 535
	jmp	SHORT $LN9@EncodeBloc
$LN10@EncodeBloc:
; Line 537
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Line 538
	mov	ecx, DWORD PTR _len$67856[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$67856[ebp], ecx
$LN9@EncodeBloc:
; Line 540
	jmp	SHORT $LN12@EncodeBloc
$LN11@EncodeBloc:
; Line 541
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBit2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteBit2
; Line 543
	mov	edx, DWORD PTR _i$67857[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67857[ebp], edx
	mov	eax, DWORD PTR _i$67857[ebp]
	cmp	eax, DWORD PTR _alphaSize$[ebp]
	jb	$LN15@EncodeBloc
; Line 545
	mov	ecx, DWORD PTR _t$67851[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$67851[ebp], ecx
	mov	edx, DWORD PTR _t$67851[ebp]
	cmp	edx, DWORD PTR _numTables$67751[ebp]
	jb	$LN18@EncodeBloc
; Line 549
	mov	DWORD PTR _groupSize$67867[ebp], 0
; Line 550
	mov	DWORD PTR _groupIndex$67868[ebp], 0
; Line 551
	mov	DWORD PTR _lens$67869[ebp], 0
; Line 552
	mov	DWORD PTR _codes$67870[ebp], 0
; Line 553
	mov	DWORD PTR _mtfPos$67871[ebp], 0
$LN8@EncodeBloc:
; Line 556
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfPos$67871[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _symbol$67875[ebp], ecx
	mov	edx, DWORD PTR _mtfPos$67871[ebp]
	add	edx, 1
	mov	DWORD PTR _mtfPos$67871[ebp], edx
; Line 557
	cmp	DWORD PTR _symbol$67875[ebp], 255	; 000000ffH
	jb	SHORT $LN5@EncodeBloc
; Line 558
	mov	eax, DWORD PTR _mtfs$[ebp]
	add	eax, DWORD PTR _mtfPos$67871[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _symbol$67875[ebp]
	mov	DWORD PTR _symbol$67875[ebp], ecx
	mov	edx, DWORD PTR _mtfPos$67871[ebp]
	add	edx, 1
	mov	DWORD PTR _mtfPos$67871[ebp], edx
$LN5@EncodeBloc:
; Line 559
	cmp	DWORD PTR _groupSize$67867[ebp], 0
	jne	SHORT $LN4@EncodeBloc
; Line 561
	mov	DWORD PTR _groupSize$67867[ebp], 50	; 00000032H
; Line 562
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _groupIndex$67868[ebp]
	movzx	ecx, BYTE PTR [eax+13952]
	mov	DWORD PTR _t$67878[ebp], ecx
	mov	edx, DWORD PTR _groupIndex$67868[ebp]
	add	edx, 1
	mov	DWORD PTR _groupIndex$67868[ebp], edx
; Line 563
	mov	eax, DWORD PTR _t$67878[ebp]
	imul	eax, 258				; 00000102H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+20]
	mov	DWORD PTR _lens$67869[ebp], edx
; Line 564
	mov	eax, DWORD PTR _t$67878[ebp]
	imul	eax, 1032				; 00000408H
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+7760]
	mov	DWORD PTR _codes$67870[ebp], edx
$LN4@EncodeBloc:
; Line 566
	mov	eax, DWORD PTR _groupSize$67867[ebp]
	sub	eax, 1
	mov	DWORD PTR _groupSize$67867[ebp], eax
; Line 567
	mov	ecx, DWORD PTR _lens$67869[ebp]
	add	ecx, DWORD PTR _symbol$67875[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _symbol$67875[ebp]
	mov	ecx, DWORD PTR _codes$67870[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?WriteBits@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXII@Z ; NCompress::NBZip2::CMsbfEncoderTemp::WriteBits
; Line 569
	mov	ecx, DWORD PTR _mtfPos$67871[ebp]
	cmp	ecx, DWORD PTR _mtfArraySize$[ebp]
	jb	$LN8@EncodeBloc
; Line 572
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+36060]
	test	eax, eax
	jne	SHORT $LN3@EncodeBloc
; Line 573
	jmp	SHORT $LN125@EncodeBloc
$LN3@EncodeBloc:
; Line 574
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	sub	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _price$67880[ebp], eax
; Line 575
	mov	edx, DWORD PTR _price$67880[ebp]
	cmp	edx, DWORD PTR _bestPrice$[ebp]
	ja	SHORT $LN2@EncodeBloc
; Line 577
	cmp	DWORD PTR _nt$67747[ebp], 6
	jne	SHORT $LN1@EncodeBloc
; Line 578
	jmp	SHORT $LN125@EncodeBloc
$LN1@EncodeBloc:
; Line 579
	mov	eax, DWORD PTR _price$67880[ebp]
	mov	DWORD PTR _bestPrice$[ebp], eax
; Line 580
	mov	ecx, DWORD PTR _nt$67747[ebp]
	mov	DWORD PTR _bestNumTables$[ebp], ecx
$LN2@EncodeBloc:
; Line 582
	jmp	$LN84@EncodeBloc
$LN125@EncodeBloc:
; Line 583
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN136@EncodeBloc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2072				; 00000818H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN136@EncodeBloc:
	DD	6
	DD	$LN135@EncodeBloc
$LN135@EncodeBloc:
	DD	-272					; fffffef0H
	DD	256					; 00000100H
	DD	$LN129@EncodeBloc
	DD	-540					; fffffde4H
	DD	256					; 00000100H
	DD	$LN130@EncodeBloc
	DD	-564					; fffffdccH
	DD	16					; 00000010H
	DD	$LN131@EncodeBloc
	DD	-1620					; fffff9acH
	DD	1032					; 00000408H
	DD	$LN132@EncodeBloc
	DD	-1932					; fffff874H
	DD	200					; 000000c8H
	DD	$LN133@EncodeBloc
	DD	-1996					; fffff834H
	DD	6
	DD	$LN134@EncodeBloc
$LN134@EncodeBloc:
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN133@EncodeBloc:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN132@EncodeBloc:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN131@EncodeBloc:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	85					; 00000055H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	54					; 00000036H
	DB	0
$LN130@EncodeBloc:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	85					; 00000055H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	0
$LN129@EncodeBloc:
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
?EncodeBlock@CThreadInfo@NBZip2@NCompress@@AAEXPBEI@Z ENDP ; NCompress::NBZip2::CThreadInfo::EncodeBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ PROC	; NCompress::NBZip2::CMsbfEncoderTemp::GetPos, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 72
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, 8
	sub	eax, DWORD PTR [edx+4]
	lea	eax, DWORD PTR [eax+ecx*8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ENDP	; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ PROC ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ ENDP ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bitPos$ = 8						; size = 4
?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z PROC	; NCompress::NBZip2::CMsbfEncoderTemp::SetPos, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _bitPos$[ebp]
	shr	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 77
	mov	edx, DWORD PTR _bitPos$[ebp]
	and	edx, 7
	mov	eax, 8
	sub	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 78
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z ENDP	; NCompress::NBZip2::CMsbfEncoderTemp::SetPos
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bitPos$ = 8						; size = 4
_curByte$ = 12						; size = 1
?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z PROC ; NCompress::NBZip2::CMsbfEncoderTemp::SetCurState, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	eax, 8
	sub	eax, DWORD PTR _bitPos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 82
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _curByte$[ebp]
	mov	BYTE PTR [edx+8], al
; Line 83
	mov	esp, ebp
	pop	ebp
	ret	8
?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z ENDP ; NCompress::NBZip2::CMsbfEncoderTemp::SetCurState
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z
_TEXT	SEGMENT
_resPos$ = -12						; size = 4
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 1
?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z PROC	; NCompress::CMtf8Encoder::FindAndMove, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\mtf8.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 17
	mov	DWORD PTR _pos$[ebp], 0
	jmp	SHORT $LN9@FindAndMov
$LN8@FindAndMov:
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN9@FindAndMov:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	movzx	edx, BYTE PTR [ecx]
	movzx	eax, BYTE PTR _v$[ebp]
	cmp	edx, eax
	je	SHORT $LN7@FindAndMov
	jmp	SHORT $LN8@FindAndMov
$LN7@FindAndMov:
; Line 18
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _resPos$[ebp], ecx
; Line 19
	jmp	SHORT $LN6@FindAndMov
$LN5@FindAndMov:
	mov	edx, DWORD PTR _pos$[ebp]
	sub	edx, 8
	mov	DWORD PTR _pos$[ebp], edx
$LN6@FindAndMov:
	cmp	DWORD PTR _pos$[ebp], 8
	jb	$LN4@FindAndMov
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-1]
	mov	BYTE PTR [eax], dl
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-2]
	mov	BYTE PTR [eax-1], dl
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-3]
	mov	BYTE PTR [eax-2], dl
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-4]
	mov	BYTE PTR [eax-3], dl
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-5]
	mov	BYTE PTR [eax-4], dl
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-6]
	mov	BYTE PTR [eax-5], dl
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-7]
	mov	BYTE PTR [eax-6], dl
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR [ecx-8]
	mov	BYTE PTR [eax-7], dl
; Line 29
	jmp	$LN5@FindAndMov
$LN4@FindAndMov:
; Line 30
	jmp	SHORT $LN3@FindAndMov
$LN2@FindAndMov:
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN3@FindAndMov:
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN1@FindAndMov
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _pos$[ebp]
	mov	al, BYTE PTR [edx-1]
	mov	BYTE PTR [ecx], al
	jmp	SHORT $LN2@FindAndMov
$LN1@FindAndMov:
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _v$[ebp]
	mov	BYTE PTR [ecx], dl
; Line 33
	mov	eax, DWORD PTR _resPos$[ebp]
; Line 34
	mov	esp, ebp
	pop	ebp
	ret	4
?FindAndMove@CMtf8Encoder@NCompress@@QAEIE@Z ENDP	; NCompress::CMtf8Encoder::FindAndMove
_TEXT	ENDS
PUBLIC	?GetDigest@CBZip2Crc@@QBEIXZ			; CBZip2Crc::GetDigest
PUBLIC	?UpdateByte@CBZip2Crc@@QAEXE@Z			; CBZip2Crc::UpdateByte
PUBLIC	??0CBZip2Crc@@QAE@XZ				; CBZip2Crc::CBZip2Crc
PUBLIC	?EncodeBlockWithHeaders@CThreadInfo@NBZip2@NCompress@@AAEIPBEI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlockWithHeaders
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_crcRes$ = -36						; size = 4
_b$67895 = -29						; size = 1
_i$ = -28						; size = 4
_prevByte$ = -21					; size = 1
_numReps$ = -20						; size = 4
_crc$ = -12						; size = 4
_this$ = -4						; size = 4
_block$ = 8						; size = 4
_blockSize$ = 12					; size = 4
?EncodeBlockWithHeaders@CThreadInfo@NBZip2@NCompress@@AAEIPBEI@Z PROC ; NCompress::NBZip2::CThreadInfo::EncodeBlockWithHeaders
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 587
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 588
	push	49					; 00000031H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Line 589
	push	65					; 00000041H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Line 590
	push	89					; 00000059H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Line 591
	push	38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Line 592
	push	83					; 00000053H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Line 593
	push	89					; 00000059H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte2@CThreadInfo@NBZip2@NCompress@@AAEXE@Z ; NCompress::NBZip2::CThreadInfo::WriteByte2
; Line 595
	lea	ecx, DWORD PTR _crc$[ebp]
	call	??0CBZip2Crc@@QAE@XZ			; CBZip2Crc::CBZip2Crc
; Line 596
	mov	DWORD PTR _numReps$[ebp], 0
; Line 597
	mov	eax, DWORD PTR _block$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _prevByte$[ebp], cl
; Line 598
	mov	DWORD PTR _i$[ebp], 0
$LN9@EncodeBloc@2:
; Line 601
	mov	edx, DWORD PTR _block$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _b$67895[ebp], al
; Line 602
	cmp	DWORD PTR _numReps$[ebp], 4
	jne	SHORT $LN6@EncodeBloc@2
; Line 604
	jmp	SHORT $LN5@EncodeBloc@2
$LN4@EncodeBloc@2:
	mov	cl, BYTE PTR _b$67895[ebp]
	sub	cl, 1
	mov	BYTE PTR _b$67895[ebp], cl
$LN5@EncodeBloc@2:
	movzx	edx, BYTE PTR _b$67895[ebp]
	test	edx, edx
	jle	SHORT $LN3@EncodeBloc@2
; Line 605
	movzx	eax, BYTE PTR _prevByte$[ebp]
	push	eax
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?UpdateByte@CBZip2Crc@@QAEXE@Z		; CBZip2Crc::UpdateByte
	jmp	SHORT $LN4@EncodeBloc@2
$LN3@EncodeBloc@2:
; Line 606
	mov	DWORD PTR _numReps$[ebp], 0
; Line 607
	jmp	SHORT $LN8@EncodeBloc@2
$LN6@EncodeBloc@2:
; Line 609
	movzx	ecx, BYTE PTR _prevByte$[ebp]
	movzx	edx, BYTE PTR _b$67895[ebp]
	cmp	ecx, edx
	jne	SHORT $LN2@EncodeBloc@2
; Line 610
	mov	eax, DWORD PTR _numReps$[ebp]
	add	eax, 1
	mov	DWORD PTR _numReps$[ebp], eax
; Line 611
	jmp	SHORT $LN1@EncodeBloc@2
$LN2@EncodeBloc@2:
; Line 613
	mov	DWORD PTR _numReps$[ebp], 1
; Line 614
	mov	cl, BYTE PTR _b$67895[ebp]
	mov	BYTE PTR _prevByte$[ebp], cl
$LN1@EncodeBloc@2:
; Line 616
	movzx	edx, BYTE PTR _b$67895[ebp]
	push	edx
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?UpdateByte@CBZip2Crc@@QAEXE@Z		; CBZip2Crc::UpdateByte
$LN8@EncodeBloc@2:
; Line 618
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _blockSize$[ebp]
	jb	SHORT $LN9@EncodeBloc@2
; Line 619
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?GetDigest@CBZip2Crc@@QBEIXZ		; CBZip2Crc::GetDigest
	mov	DWORD PTR _crcRes$[ebp], eax
; Line 620
	mov	edx, DWORD PTR _crcRes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCrc2@CThreadInfo@NBZip2@NCompress@@AAEXI@Z ; NCompress::NBZip2::CThreadInfo::WriteCrc2
; Line 621
	mov	eax, DWORD PTR _blockSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _block$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EncodeBlock@CThreadInfo@NBZip2@NCompress@@AAEXPBEI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock
; Line 622
	mov	eax, DWORD PTR _crcRes$[ebp]
; Line 623
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@EncodeBloc@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN14@EncodeBloc@2:
	DD	1
	DD	$LN13@EncodeBloc@2
$LN13@EncodeBloc@2:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN12@EncodeBloc@2
$LN12@EncodeBloc@2:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?EncodeBlockWithHeaders@CThreadInfo@NBZip2@NCompress@@AAEIPBEI@Z ENDP ; NCompress::NBZip2::CThreadInfo::EncodeBlockWithHeaders
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBZip2Crc@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBZip2Crc@@QAE@XZ PROC				; CBZip2Crc::CBZip2Crc, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBZip2Crc@@QAE@XZ ENDP				; CBZip2Crc::CBZip2Crc
_TEXT	ENDS
EXTRN	?Table@CBZip2Crc@@0PAIA:BYTE			; CBZip2Crc::Table
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?UpdateByte@CBZip2Crc@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?UpdateByte@CBZip2Crc@@QAEXE@Z PROC			; CBZip2Crc::UpdateByte, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	movzx	edx, BYTE PTR _b$[ebp]
	xor	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	shl	edx, 8
	xor	edx, DWORD PTR ?Table@CBZip2Crc@@0PAIA[ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateByte@CBZip2Crc@@QAEXE@Z ENDP			; CBZip2Crc::UpdateByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetDigest@CBZip2Crc@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDigest@CBZip2Crc@@QBEIXZ PROC			; CBZip2Crc::GetDigest, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	xor	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDigest@CBZip2Crc@@QBEIXZ ENDP			; CBZip2Crc::GetDigest
_TEXT	ENDS
PUBLIC	?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetStream
PUBLIC	?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetBytePos
PUBLIC	?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67933 = -64						; size = 4
_buffer$67932 = -60					; size = 4
_numBytes$67931 = -56					; size = 4
_size2$67929 = -52					; size = 4
_endPos2$ = -48						; size = 4
_crcVal$ = -44						; size = 4
_startPos2$ = -40					; size = 4
_startBytePos2$ = -36					; size = 4
_blockSize0$67917 = -32					; size = 4
_endPos$ = -28						; size = 4
_endCurByte$ = -22					; size = 1
_startCurByte$ = -21					; size = 1
_startPos$ = -20					; size = 4
_startBytePos$ = -16					; size = 4
_needCompare$ = -9					; size = 1
_numCrcs$ = -8						; size = 4
_this$ = -4						; size = 4
_block$ = 8						; size = 4
_blockSize$ = 12					; size = 4
_numPasses$ = 16					; size = 4
?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z PROC ; NCompress::NBZip2::CThreadInfo::EncodeBlock2
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 626
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36052]
	mov	DWORD PTR _numCrcs$[ebp], ecx
; Line 628
	mov	BYTE PTR _needCompare$[ebp], 0
; Line 630
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetBytePos
	mov	DWORD PTR _startBytePos$[ebp], eax
; Line 631
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	mov	DWORD PTR _startPos$[ebp], eax
; Line 632
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte
	mov	BYTE PTR _startCurByte$[ebp], al
; Line 633
	mov	BYTE PTR _endCurByte$[ebp], 0
; Line 634
	mov	DWORD PTR _endPos$[ebp], 0
; Line 635
	cmp	DWORD PTR _numPasses$[ebp], 1
	jbe	$LN14@EncodeBloc@3
	cmp	DWORD PTR _blockSize$[ebp], 1024	; 00000400H
	jb	$LN14@EncodeBloc@3
; Line 637
	mov	edx, DWORD PTR _blockSize$[ebp]
	shr	edx, 1
	mov	DWORD PTR _blockSize0$67917[ebp], edx
	jmp	SHORT $LN13@EncodeBloc@3
$LN12@EncodeBloc@3:
; Line 640
	mov	eax, DWORD PTR _blockSize0$67917[ebp]
	add	eax, 1
	mov	DWORD PTR _blockSize0$67917[ebp], eax
$LN13@EncodeBloc@3:
	mov	ecx, DWORD PTR _block$[ebp]
	add	ecx, DWORD PTR _blockSize0$67917[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _block$[ebp]
	add	eax, DWORD PTR _blockSize0$67917[ebp]
	movzx	ecx, BYTE PTR [eax-1]
	cmp	edx, ecx
	je	SHORT $LN10@EncodeBloc@3
	mov	edx, DWORD PTR _block$[ebp]
	add	edx, DWORD PTR _blockSize0$67917[ebp]
	movzx	eax, BYTE PTR [edx-1]
	mov	ecx, DWORD PTR _block$[ebp]
	add	ecx, DWORD PTR _blockSize0$67917[ebp]
	movzx	edx, BYTE PTR [ecx-2]
	cmp	eax, edx
	jne	SHORT $LN11@EncodeBloc@3
$LN10@EncodeBloc@3:
	mov	eax, DWORD PTR _blockSize0$67917[ebp]
	cmp	eax, DWORD PTR _blockSize$[ebp]
	jae	SHORT $LN11@EncodeBloc@3
	jmp	SHORT $LN12@EncodeBloc@3
$LN11@EncodeBloc@3:
; Line 641
	mov	ecx, DWORD PTR _blockSize0$67917[ebp]
	cmp	ecx, DWORD PTR _blockSize$[ebp]
	jae	$LN14@EncodeBloc@3
; Line 643
	mov	edx, DWORD PTR _numPasses$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _blockSize0$67917[ebp]
	push	eax
	mov	ecx, DWORD PTR _block$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock2
; Line 644
	mov	edx, DWORD PTR _numPasses$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _blockSize$[ebp]
	sub	eax, DWORD PTR _blockSize0$67917[ebp]
	push	eax
	mov	ecx, DWORD PTR _block$[ebp]
	add	ecx, DWORD PTR _blockSize0$67917[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock2
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	mov	DWORD PTR _endPos$[ebp], eax
; Line 646
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte
	mov	BYTE PTR _endCurByte$[ebp], al
; Line 647
	mov	ecx, DWORD PTR _endPos$[ebp]
	and	ecx, 7
	jbe	SHORT $LN8@EncodeBloc@3
; Line 648
	mov	edx, DWORD PTR _endPos$[ebp]
	and	edx, 7
	mov	eax, 8
	sub	eax, edx
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits2@CThreadInfo@NBZip2@NCompress@@AAEXII@Z ; NCompress::NBZip2::CThreadInfo::WriteBits2
$LN8@EncodeBloc@3:
; Line 649
	movzx	ecx, BYTE PTR _startCurByte$[ebp]
	push	ecx
	mov	edx, DWORD PTR _startPos$[ebp]
	and	edx, 7
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetCurState
; Line 650
	mov	BYTE PTR _needCompare$[ebp], 1
$LN14@EncodeBloc@3:
; Line 654
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetBytePos
	mov	DWORD PTR _startBytePos2$[ebp], eax
; Line 655
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	mov	DWORD PTR _startPos2$[ebp], eax
; Line 656
	mov	eax, DWORD PTR _blockSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _block$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EncodeBlockWithHeaders@CThreadInfo@NBZip2@NCompress@@AAEIPBEI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlockWithHeaders
	mov	DWORD PTR _crcVal$[ebp], eax
; Line 657
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	mov	DWORD PTR _endPos2$[ebp], eax
; Line 659
	movzx	eax, BYTE PTR _needCompare$[ebp]
	test	eax, eax
	je	$LN7@EncodeBloc@3
; Line 661
	mov	ecx, DWORD PTR _endPos2$[ebp]
	sub	ecx, DWORD PTR _startPos2$[ebp]
	mov	DWORD PTR _size2$67929[ebp], ecx
; Line 662
	mov	edx, DWORD PTR _endPos$[ebp]
	sub	edx, DWORD PTR _startPos$[ebp]
	cmp	DWORD PTR _size2$67929[ebp], edx
	jae	$LN6@EncodeBloc@3
; Line 664
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetBytePos
	sub	eax, DWORD PTR _startBytePos2$[ebp]
	mov	DWORD PTR _numBytes$67931[ebp], eax
; Line 665
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetStream
	mov	DWORD PTR _buffer$67932[ebp], eax
; Line 666
	mov	DWORD PTR _i$67933[ebp], 0
	jmp	SHORT $LN5@EncodeBloc@3
$LN4@EncodeBloc@3:
	mov	edx, DWORD PTR _i$67933[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67933[ebp], edx
$LN5@EncodeBloc@3:
	mov	eax, DWORD PTR _i$67933[ebp]
	cmp	eax, DWORD PTR _numBytes$67931[ebp]
	jae	SHORT $LN3@EncodeBloc@3
; Line 667
	mov	ecx, DWORD PTR _startBytePos2$[ebp]
	add	ecx, DWORD PTR _i$67933[ebp]
	mov	edx, DWORD PTR _startBytePos$[ebp]
	add	edx, DWORD PTR _i$67933[ebp]
	mov	eax, DWORD PTR _buffer$67932[ebp]
	mov	esi, DWORD PTR _buffer$67932[ebp]
	mov	cl, BYTE PTR [esi+ecx]
	mov	BYTE PTR [eax+edx], cl
	jmp	SHORT $LN4@EncodeBloc@3
$LN3@EncodeBloc@3:
; Line 668
	mov	edx, DWORD PTR _startPos$[ebp]
	add	edx, DWORD PTR _endPos2$[ebp]
	sub	edx, DWORD PTR _startPos2$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetPos
; Line 669
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _numCrcs$[ebp]
	mov	DWORD PTR [ecx+36052], edx
; Line 670
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36052]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _crcVal$[ebp]
	mov	DWORD PTR [edx+ecx*4+31956], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36052]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36052], edx
; Line 672
	jmp	SHORT $LN2@EncodeBloc@3
$LN6@EncodeBloc@3:
; Line 674
	mov	ecx, DWORD PTR _endPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?SetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXI@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetPos
; Line 675
	movzx	eax, BYTE PTR _endCurByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _endPos$[ebp]
	and	ecx, 7
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?SetCurState@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXIE@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetCurState
$LN2@EncodeBloc@3:
; Line 678
	jmp	SHORT $LN15@EncodeBloc@3
$LN7@EncodeBloc@3:
; Line 680
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numCrcs$[ebp]
	mov	DWORD PTR [eax+36052], ecx
; Line 681
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36052]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _crcVal$[ebp]
	mov	DWORD PTR [ecx+eax*4+31956], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36052]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36052], ecx
$LN15@EncodeBloc@3:
; Line 683
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z ENDP ; NCompress::NBZip2::CThreadInfo::EncodeBlock2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ PROC ; NCompress::NBZip2::CMsbfEncoderTemp::GetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QBEPAEXZ ENDP ; NCompress::NBZip2::CMsbfEncoderTemp::GetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ PROC ; NCompress::NBZip2::CMsbfEncoderTemp::GetBytePos, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBytePos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ENDP ; NCompress::NBZip2::CMsbfEncoderTemp::GetBytePos
_TEXT	ENDS
PUBLIC	?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ ; CBitmEncoder<COutBuffer>::GetProcessedSize
PUBLIC	?WriteBytes@CEncoder@NBZip2@NCompress@@QAEXPBEIE@Z ; NCompress::NBZip2::CEncoder::WriteBytes
PUBLIC	?Update@CBZip2CombinedCrc@@QAEXI@Z		; CBZip2CombinedCrc::Update
PUBLIC	?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CMsbfEncoderTemp::Init
PUBLIC	?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_unpackSize$67955 = -52					; size = 8
_blockIndex$67952 = -40					; size = 4
_res$ = -36						; size = 4
_i$67945 = -32						; size = 4
_outStreamTemp$ = -24					; size = 16
_this$ = -4						; size = 4
_blockSize$ = 8						; size = 4
?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z PROC ; NCompress::NBZip2::CThreadInfo::EncodeBlock3
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 688
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR _outStreamTemp$[ebp]
	call	?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z ; NCompress::NBZip2::CMsbfEncoderTemp::SetStream
; Line 689
	lea	ecx, DWORD PTR _outStreamTemp$[ebp]
	call	?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CMsbfEncoderTemp::Init
; Line 690
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR _outStreamTemp$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 692
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36052], 0
; Line 694
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _blockSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?EncodeBlock2@CThreadInfo@NBZip2@NCompress@@AAEXPBEII@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock2
; Line 697
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	movzx	ecx, BYTE PTR [eax+416]
	test	ecx, ecx
	je	SHORT $LN7@EncodeBloc@4
; Line 698
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36056]
	imul	edx, 36352				; 00008e00H
	mov	eax, DWORD PTR [eax+380]
	lea	ecx, DWORD PTR [eax+edx+36080]
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
$LN7@EncodeBloc@4:
; Line 700
	mov	DWORD PTR _i$67945[ebp], 0
	jmp	SHORT $LN6@EncodeBloc@4
$LN5@EncodeBloc@4:
	mov	ecx, DWORD PTR _i$67945[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67945[ebp], ecx
$LN6@EncodeBloc@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$67945[ebp]
	cmp	eax, DWORD PTR [edx+36052]
	jae	SHORT $LN4@EncodeBloc@4
; Line 701
	mov	ecx, DWORD PTR _i$67945[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+31956]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36064]
	add	ecx, 376				; 00000178H
	call	?Update@CBZip2CombinedCrc@@QAEXI@Z	; CBZip2CombinedCrc::Update
	jmp	SHORT $LN5@EncodeBloc@4
$LN4@EncodeBloc@4:
; Line 702
	lea	ecx, DWORD PTR _outStreamTemp$[ebp]
	call	?GetCurByte@CMsbfEncoderTemp@NBZip2@NCompress@@QBEEXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetCurByte
	movzx	edx, al
	push	edx
	lea	ecx, DWORD PTR _outStreamTemp$[ebp]
	call	?GetPos@CMsbfEncoderTemp@NBZip2@NCompress@@QBEIXZ ; NCompress::NBZip2::CMsbfEncoderTemp::GetPos
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+36064]
	call	?WriteBytes@CEncoder@NBZip2@NCompress@@QAEXPBEIE@Z ; NCompress::NBZip2::CEncoder::WriteBytes
; Line 703
	mov	DWORD PTR _res$[ebp], 0
; Line 705
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36064]
	movzx	edx, BYTE PTR [ecx+416]
	test	edx, edx
	je	$LN3@EncodeBloc@4
; Line 707
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36056]
	add	ecx, 1
	mov	DWORD PTR _blockIndex$67952[ebp], ecx
; Line 708
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	mov	ecx, DWORD PTR _blockIndex$67952[ebp]
	cmp	ecx, DWORD PTR [eax+412]
	jne	SHORT $LN2@EncodeBloc@4
; Line 709
	mov	DWORD PTR _blockIndex$67952[ebp], 0
$LN2@EncodeBloc@4:
; Line 711
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36064]
	cmp	DWORD PTR [eax+436], 0
	je	SHORT $LN1@EncodeBloc@4
; Line 713
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+36064]
	add	ecx, 320				; 00000140H
	call	?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ ; CBitmEncoder<COutBuffer>::GetProcessedSize
	mov	DWORD PTR _unpackSize$67955[ebp], eax
	mov	DWORD PTR _unpackSize$67955[ebp+4], edx
; Line 714
	mov	esi, esp
	lea	edx, DWORD PTR _unpackSize$67955[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36088				; 00008cf8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36064]
	mov	eax, DWORD PTR [edx+436]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36064]
	mov	ecx, DWORD PTR [edx+436]
	mov	edx, DWORD PTR [eax]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
$LN1@EncodeBloc@4:
; Line 717
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36064]
	mov	eax, DWORD PTR _blockIndex$67952[ebp]
	imul	eax, 36352				; 00008e00H
	mov	ecx, DWORD PTR [edx+380]
	lea	ecx, DWORD PTR [ecx+eax+36080]
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
$LN3@EncodeBloc@4:
; Line 720
	mov	eax, DWORD PTR _res$[ebp]
; Line 721
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@EncodeBloc@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN13@EncodeBloc@4:
	DD	2
	DD	$LN12@EncodeBloc@4
$LN12@EncodeBloc@4:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN10@EncodeBloc@4
	DD	-52					; ffffffccH
	DD	8
	DD	$LN11@EncodeBloc@4
$LN11@EncodeBloc@4:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN10@EncodeBloc@4:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z ENDP ; NCompress::NBZip2::CThreadInfo::EncodeBlock3
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Update@CBZip2CombinedCrc@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
?Update@CBZip2CombinedCrc@@QAEXI@Z PROC			; CBZip2CombinedCrc::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 31					; 0000001fH
	or	ecx, eax
	xor	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CBZip2CombinedCrc@@QAEXI@Z ENDP			; CBZip2CombinedCrc::Update
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z PROC ; NCompress::NBZip2::CMsbfEncoderTemp::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXPAE@Z ENDP ; NCompress::NBZip2::CMsbfEncoderTemp::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ PROC	; NCompress::NBZip2::CMsbfEncoderTemp::Init, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 39
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 8
; Line 40
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+8], 0
; Line 41
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CMsbfEncoderTemp@NBZip2@NCompress@@QAEXXZ ENDP	; NCompress::NBZip2::CMsbfEncoderTemp::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_i$67963 = -12						; size = 4
_bytesSize$ = -8					; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_sizeInBits$ = 12					; size = 4
_lastByte$ = 16						; size = 1
?WriteBytes@CEncoder@NBZip2@NCompress@@QAEXPBEIE@Z PROC	; NCompress::NBZip2::CEncoder::WriteBytes
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 724
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 725
	mov	eax, DWORD PTR _sizeInBits$[ebp]
	shr	eax, 3
	mov	DWORD PTR _bytesSize$[ebp], eax
; Line 726
	mov	DWORD PTR _i$67963[ebp], 0
	jmp	SHORT $LN3@WriteBytes
$LN2@WriteBytes:
	mov	ecx, DWORD PTR _i$67963[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67963[ebp], ecx
$LN3@WriteBytes:
	mov	edx, DWORD PTR _i$67963[ebp]
	cmp	edx, DWORD PTR _bytesSize$[ebp]
	jae	SHORT $LN1@WriteBytes
; Line 727
	push	8
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _i$67963[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z ; CBitmEncoder<COutBuffer>::WriteBits
	jmp	SHORT $LN2@WriteBytes
$LN1@WriteBytes:
; Line 728
	mov	edx, DWORD PTR _sizeInBits$[ebp]
	and	edx, 7
	push	edx
	movzx	eax, BYTE PTR _lastByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CEncoder@NBZip2@NCompress@@QAEXII@Z ; NCompress::NBZip2::CEncoder::WriteBits
; Line 729
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?WriteBytes@CEncoder@NBZip2@NCompress@@QAEXPBEIE@Z ENDP	; NCompress::NBZip2::CEncoder::WriteBytes
_TEXT	ENDS
PUBLIC	?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ	; NCompress::NBZip2::CEncoder::Flush
PUBLIC	?GetDigest@CBZip2CombinedCrc@@QBEIXZ		; CBZip2CombinedCrc::GetDigest
PUBLIC	?Init@CBZip2CombinedCrc@@QAEXXZ			; CBZip2CombinedCrc::Init
PUBLIC	?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ	; CBitmEncoder<COutBuffer>::Init
PUBLIC	?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z ; CBitmEncoder<COutBuffer>::SetStream
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
PUBLIC	?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z	; CBitmEncoder<COutBuffer>::Create
PUBLIC	?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ ; NCompress::NBZip2::CEncProps::DoOptimizeNumTables
PUBLIC	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
PUBLIC	?CodeReal@CEncoder@NBZip2@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CEncoder::CodeReal
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$68019 = -84					; size = 4
_unpackSize$68018 = -76					; size = 8
_packSize$68017 = -60					; size = 8
___result__$68014 = -48					; size = 4
_blockSize$68012 = -44					; size = 4
_ti$68011 = -40						; size = 4
___result__$68005 = -36					; size = 4
_t$67998 = -32						; size = 4
___result__$67987 = -28					; size = 4
___result__$67985 = -24					; size = 4
___result__$67983 = -20					; size = 4
_ti$67981 = -16						; size = 4
_t$67977 = -12						; size = 4
___result__$67975 = -8					; size = 4
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
_progress$ = 24						; size = 4
?CodeReal@CEncoder@NBZip2@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NBZip2::CEncoder::CodeReal
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 736
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	DWORD PTR [eax+436], ecx
; Line 737
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CEncoder@NBZip2@NCompress@@QAEJXZ ; NCompress::NBZip2::CEncoder::Create
	mov	DWORD PTR ___result__$67975[ebp], eax
	cmp	DWORD PTR ___result__$67975[ebp], 0
	je	SHORT $LN26@CodeReal
	mov	eax, DWORD PTR ___result__$67975[ebp]
	jmp	$LN27@CodeReal
$LN26@CodeReal:
; Line 738
	mov	DWORD PTR _t$67977[ebp], 0
	jmp	SHORT $LN25@CodeReal
$LN24@CodeReal:
	mov	edx, DWORD PTR _t$67977[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67977[ebp], edx
$LN25@CodeReal:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67977[ebp]
	cmp	ecx, DWORD PTR [eax+412]
	jae	$LN23@CodeReal
; Line 742
	mov	edx, DWORD PTR _t$67977[ebp]
	imul	edx, 36352				; 00008e00H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+380]
	mov	DWORD PTR _ti$67981[ebp], edx
; Line 743
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+416]
	test	edx, edx
	je	SHORT $LN22@CodeReal
; Line 745
	mov	ecx, DWORD PTR _ti$67981[ebp]
	add	ecx, 36072				; 00008ce8H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
	mov	DWORD PTR ___result__$67983[ebp], eax
	cmp	DWORD PTR ___result__$67983[ebp], 0
	je	SHORT $LN21@CodeReal
	mov	eax, DWORD PTR ___result__$67983[ebp]
	jmp	$LN27@CodeReal
$LN21@CodeReal:
; Line 746
	mov	ecx, DWORD PTR _ti$67981[ebp]
	add	ecx, 36076				; 00008cecH
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
	mov	DWORD PTR ___result__$67985[ebp], eax
	cmp	DWORD PTR ___result__$67985[ebp], 0
	je	SHORT $LN20@CodeReal
	mov	eax, DWORD PTR ___result__$67985[ebp]
	jmp	$LN27@CodeReal
$LN20@CodeReal:
; Line 747
	mov	ecx, DWORD PTR _ti$67981[ebp]
	add	ecx, 36080				; 00008cf0H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
	mov	DWORD PTR ___result__$67987[ebp], eax
	cmp	DWORD PTR ___result__$67987[ebp], 0
	je	SHORT $LN22@CodeReal
	mov	eax, DWORD PTR ___result__$67987[ebp]
	jmp	$LN27@CodeReal
$LN22@CodeReal:
; Line 754
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 368				; 00000170H
	call	?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ ; NCompress::NBZip2::CEncProps::DoOptimizeNumTables
	mov	ecx, DWORD PTR _ti$67981[ebp]
	mov	BYTE PTR [ecx+36060], al
; Line 756
	mov	ecx, DWORD PTR _ti$67981[ebp]
	call	?Alloc@CThreadInfo@NBZip2@NCompress@@QAE_NXZ ; NCompress::NBZip2::CThreadInfo::Alloc
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN18@CodeReal
; Line 757
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN27@CodeReal
$LN18@CodeReal:
; Line 758
	jmp	$LN24@CodeReal
$LN23@CodeReal:
; Line 761
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN17@CodeReal
; Line 762
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN27@CodeReal
$LN17@CodeReal:
; Line 763
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z ; CBitmEncoder<COutBuffer>::Create
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN16@CodeReal
; Line 764
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN27@CodeReal
$LN16@CodeReal:
; Line 767
	mov	edx, DWORD PTR _inStream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Line 768
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 770
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z ; CBitmEncoder<COutBuffer>::SetStream
; Line 771
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ ; CBitmEncoder<COutBuffer>::Init
; Line 773
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	?Init@CBZip2CombinedCrc@@QAEXXZ		; CBZip2CombinedCrc::Init
; Line 775
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+420], 0
; Line 776
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+425], 0
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+424], 0
; Line 778
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
; Line 781
	push	66					; 00000042H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 782
	push	90					; 0000005aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 783
	push	104					; 00000068H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 784
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+368]
	add	edx, 48					; 00000030H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 788
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+416]
	test	ecx, ecx
	je	$LN6@CodeReal
; Line 790
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+380]
	add	ecx, 36080				; 00008cf0H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 791
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+432], 0
; Line 792
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 794
	mov	DWORD PTR _t$67998[ebp], 0
	jmp	SHORT $LN14@CodeReal
$LN13@CodeReal:
	mov	ecx, DWORD PTR _t$67998[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$67998[ebp], ecx
$LN14@CodeReal:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$67998[ebp]
	cmp	eax, DWORD PTR [edx+412]
	jae	SHORT $LN12@CodeReal
; Line 795
	mov	ecx, DWORD PTR _t$67998[ebp]
	imul	ecx, 36352				; 00008e00H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+380]
	lea	ecx, DWORD PTR [eax+ecx+36072]
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
	jmp	SHORT $LN13@CodeReal
$LN12@CodeReal:
; Line 796
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 384				; 00000180H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
; Line 797
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 798
	mov	DWORD PTR _t$67998[ebp], 0
	jmp	SHORT $LN11@CodeReal
$LN10@CodeReal:
	mov	ecx, DWORD PTR _t$67998[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$67998[ebp], ecx
$LN11@CodeReal:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$67998[ebp]
	cmp	eax, DWORD PTR [edx+412]
	jae	SHORT $LN9@CodeReal
; Line 799
	mov	ecx, DWORD PTR _t$67998[ebp]
	imul	ecx, 36352				; 00008e00H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+380]
	lea	ecx, DWORD PTR [eax+ecx+36076]
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
	jmp	SHORT $LN10@CodeReal
$LN9@CodeReal:
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
; Line 801
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+432]
	mov	DWORD PTR ___result__$68005[ebp], edx
	cmp	DWORD PTR ___result__$68005[ebp], 0
	je	SHORT $LN8@CodeReal
	mov	eax, DWORD PTR ___result__$68005[ebp]
	jmp	$LN27@CodeReal
$LN8@CodeReal:
; Line 803
	jmp	$LN7@CodeReal
$LN6@CodeReal:
; Line 810
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+380]
	mov	DWORD PTR _ti$68011[ebp], ecx
; Line 814
	mov	edx, DWORD PTR _ti$68011[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadRleBlock@CEncoder@NBZip2@NCompress@@QAEIPAE@Z ; NCompress::NBZip2::CEncoder::ReadRleBlock
	mov	DWORD PTR _blockSize$68012[ebp], eax
; Line 815
	cmp	DWORD PTR _blockSize$68012[ebp], 0
	jne	SHORT $LN4@CodeReal
; Line 816
	jmp	SHORT $LN7@CodeReal
$LN4@CodeReal:
; Line 817
	mov	ecx, DWORD PTR _blockSize$68012[ebp]
	push	ecx
	mov	ecx, DWORD PTR _ti$68011[ebp]
	call	?EncodeBlock3@CThreadInfo@NBZip2@NCompress@@QAEJI@Z ; NCompress::NBZip2::CThreadInfo::EncodeBlock3
	mov	DWORD PTR ___result__$68014[ebp], eax
	cmp	DWORD PTR ___result__$68014[ebp], 0
	je	SHORT $LN3@CodeReal
	mov	eax, DWORD PTR ___result__$68014[ebp]
	jmp	$LN27@CodeReal
$LN3@CodeReal:
; Line 818
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN2@CodeReal
; Line 820
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	DWORD PTR _packSize$68017[ebp], eax
	mov	DWORD PTR _packSize$68017[ebp+4], edx
; Line 821
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ ; CBitmEncoder<COutBuffer>::GetProcessedSize
	mov	DWORD PTR _unpackSize$68018[ebp], eax
	mov	DWORD PTR _unpackSize$68018[ebp+4], edx
; Line 822
	mov	esi, esp
	lea	edx, DWORD PTR _unpackSize$68018[ebp]
	push	edx
	lea	eax, DWORD PTR _packSize$68017[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$68019[ebp], eax
	cmp	DWORD PTR ___result__$68019[ebp], 0
	je	SHORT $LN2@CodeReal
	mov	eax, DWORD PTR ___result__$68019[ebp]
	jmp	SHORT $LN27@CodeReal
$LN2@CodeReal:
; Line 824
	jmp	$LN6@CodeReal
$LN7@CodeReal:
; Line 826
	push	23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 827
	push	114					; 00000072H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 828
	push	69					; 00000045H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 829
	push	56					; 00000038H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 830
	push	80					; 00000050H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 831
	push	144					; 00000090H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@CEncoder@NBZip2@NCompress@@QAEXE@Z ; NCompress::NBZip2::CEncoder::WriteByte
; Line 833
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 376				; 00000178H
	call	?GetDigest@CBZip2CombinedCrc@@QBEIXZ	; CBZip2CombinedCrc::GetDigest
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCrc@CEncoder@NBZip2@NCompress@@QAEXI@Z ; NCompress::NBZip2::CEncoder::WriteCrc
; Line 834
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ ; NCompress::NBZip2::CEncoder::Flush
$LN27@CodeReal:
; Line 835
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN32@CodeReal:
	DD	2
	DD	$LN31@CodeReal
$LN31@CodeReal:
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN29@CodeReal
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN30@CodeReal
$LN30@CodeReal:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN29@CodeReal:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?CodeReal@CEncoder@NBZip2@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NBZip2::CEncoder::CodeReal
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CBZip2CombinedCrc@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CBZip2CombinedCrc@@QAEXXZ PROC			; CBZip2CombinedCrc::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CBZip2CombinedCrc@@QAEXXZ ENDP			; CBZip2CombinedCrc::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetDigest@CBZip2CombinedCrc@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDigest@CBZip2CombinedCrc@@QBEIXZ PROC		; CBZip2CombinedCrc::GetDigest, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDigest@CBZip2CombinedCrc@@QBEIXZ ENDP		; CBZip2CombinedCrc::GetDigest
_TEXT	ENDS
EXTRN	_Event_Reset@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CBaseEvent::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_Event_Reset@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CBaseEvent::Reset
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ PROC ; NCompress::NBZip2::CEncProps::DoOptimizeNumTables, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.h
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 1
	cmp	ecx, DWORD PTR [eax+4]
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?DoOptimizeNumTables@CEncProps@NBZip2@NCompress@@QBE_NXZ ENDP ; NCompress::NBZip2::CEncProps::DoOptimizeNumTables
_TEXT	ENDS
PUBLIC	?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ	; CBitmEncoder<COutBuffer>::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ PROC		; NCompress::NBZip2::CEncoder::Flush, COMDAT
; _this$ = ecx
; Line 215
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ ; CBitmEncoder<COutBuffer>::Flush
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@CEncoder@NBZip2@NCompress@@QAEJXZ ENDP		; NCompress::NBZip2::CEncoder::Flush
_TEXT	ENDS
xdata$x	SEGMENT
__unwindtable$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	03H
	DD	FLAT:__catchsym$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$4
__ehfuncinfo$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$4 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
	DD	09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffdcH
	DD	FLAT:__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv84 = -56						; size = 4
$T68603 = -52						; size = 4
$T68602 = -48						; size = 4
$T68601 = -44						; size = 4
_e$68032 = -36						; size = 4
_e$68030 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
_inSize$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NBZip2::CEncoder::Code
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2encoder.cpp
; Line 839
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 840
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CEncoder@NBZip2@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CEncoder::CodeReal
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	jmp	SHORT $LN2@Code
__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
; Line 841
	mov	edx, DWORD PTR _e$68030[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T68601[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Code
	ret	0
	mov	eax, __tryend$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1:
; Line 842
	mov	ecx, DWORD PTR _e$68032[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T68602[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN11@Code
	ret	0
	mov	eax, __tryend$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2:
; Line 843
	mov	DWORD PTR $T68603[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN13@Code
	ret	0
	mov	eax, __tryend$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
	ret	0
__tryend$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN12@Code
$LN13@Code:
	mov	eax, DWORD PTR $T68603[ebp]
	jmp	SHORT $LN2@Code
$LN12@Code:
	jmp	SHORT $LN10@Code
$LN11@Code:
; Line 842
	mov	eax, DWORD PTR $T68602[ebp]
	jmp	SHORT $LN2@Code
$LN10@Code:
	jmp	SHORT $LN2@Code
$LN9@Code:
; Line 841
	mov	eax, DWORD PTR $T68601[ebp]
$LN2@Code:
; Line 844
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Code
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN21@Code:
	DD	2
	DD	$LN20@Code
$LN20@Code:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN17@Code
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN18@Code
$LN18@Code:
	DB	101					; 00000065H
	DB	0
$LN17@Code:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Code@CEncoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NBZip2::CEncoder::Code
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -40						; size = 4
_v$68053 = -36						; size = 4
_propID$68049 = -32					; size = 4
_prop$68048 = -28					; size = 4
_i$68044 = -24						; size = 4
_props$ = -16						; size = 8
_level$ = -4						; size = 4
_this$ = 8						; size = 4
_propIDs$ = 12						; size = 4
_coderProps$ = 16					; size = 4
_numProps$ = 20						; size = 4
?SetCoderProperties@CEncoder@NBZip2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z PROC ; NCompress::NBZip2::CEncoder::SetCoderProperties
; Line 847
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 848
	mov	DWORD PTR _level$[ebp], -1
; Line 849
	lea	ecx, DWORD PTR _props$[ebp]
	call	??0CEncProps@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CEncProps::CEncProps
; Line 850
	mov	DWORD PTR _i$68044[ebp], 0
	jmp	SHORT $LN12@SetCoderPr
$LN11@SetCoderPr:
	mov	eax, DWORD PTR _i$68044[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68044[ebp], eax
$LN12@SetCoderPr:
	mov	ecx, DWORD PTR _i$68044[ebp]
	cmp	ecx, DWORD PTR _numProps$[ebp]
	jae	$LN10@SetCoderPr
; Line 852
	mov	edx, DWORD PTR _i$68044[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _coderProps$[ebp]
	mov	DWORD PTR _prop$68048[ebp], edx
; Line 853
	mov	eax, DWORD PTR _i$68044[ebp]
	mov	ecx, DWORD PTR _propIDs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _propID$68049[ebp], edx
; Line 854
	cmp	DWORD PTR _propID$68049[ebp], 16	; 00000010H
	jb	SHORT $LN9@SetCoderPr
; Line 855
	jmp	SHORT $LN11@SetCoderPr
$LN9@SetCoderPr:
; Line 856
	mov	eax, DWORD PTR _prop$68048[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN8@SetCoderPr
; Line 857
	mov	eax, -2147024809			; 80070057H
	jmp	$LN13@SetCoderPr
$LN8@SetCoderPr:
; Line 858
	mov	edx, DWORD PTR _prop$68048[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _v$68053[ebp], eax
; Line 859
	mov	ecx, DWORD PTR _propID$68049[ebp]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR tv75[ebp]
	sub	edx, 1
	mov	DWORD PTR tv75[ebp], edx
	cmp	DWORD PTR tv75[ebp], 14			; 0000000eH
	ja	SHORT $LN1@SetCoderPr
	mov	eax, DWORD PTR tv75[ebp]
	movzx	ecx, BYTE PTR $LN15@SetCoderPr[eax]
	jmp	DWORD PTR $LN19@SetCoderPr[ecx*4]
$LN5@SetCoderPr:
; Line 861
	mov	edx, DWORD PTR _v$68053[ebp]
	mov	DWORD PTR _props$[ebp+4], edx
	jmp	SHORT $LN6@SetCoderPr
$LN4@SetCoderPr:
; Line 862
	mov	eax, DWORD PTR _v$68053[ebp]
	xor	edx, edx
	mov	ecx, 100000				; 000186a0H
	div	ecx
	mov	DWORD PTR _props$[ebp], eax
	jmp	SHORT $LN6@SetCoderPr
$LN3@SetCoderPr:
; Line 863
	mov	edx, DWORD PTR _v$68053[ebp]
	mov	DWORD PTR _level$[ebp], edx
	jmp	SHORT $LN6@SetCoderPr
$LN2@SetCoderPr:
; Line 867
	mov	esi, esp
	mov	eax, DWORD PTR _v$68053[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	ecx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 869
	jmp	SHORT $LN6@SetCoderPr
$LN1@SetCoderPr:
; Line 871
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN13@SetCoderPr
$LN6@SetCoderPr:
; Line 873
	jmp	$LN11@SetCoderPr
$LN10@SetCoderPr:
; Line 874
	mov	edx, DWORD PTR _level$[ebp]
	push	edx
	lea	ecx, DWORD PTR _props$[ebp]
	call	?Normalize@CEncProps@NBZip2@NCompress@@QAEXH@Z ; NCompress::NBZip2::CEncProps::Normalize
; Line 875
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+364], ecx
	mov	edx, DWORD PTR _props$[ebp+4]
	mov	DWORD PTR [eax+368], edx
; Line 876
	xor	eax, eax
$LN13@SetCoderPr:
; Line 877
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@SetCoderPr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN18@SetCoderPr:
	DD	1
	DD	$LN17@SetCoderPr
$LN17@SetCoderPr:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN16@SetCoderPr
$LN16@SetCoderPr:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
	npad	2
$LN19@SetCoderPr:
	DD	$LN4@SetCoderPr
	DD	$LN5@SetCoderPr
	DD	$LN2@SetCoderPr
	DD	$LN3@SetCoderPr
	DD	$LN1@SetCoderPr
$LN15@SetCoderPr:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	2
	DB	4
	DB	3
?SetCoderProperties@CEncoder@NBZip2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ENDP ; NCompress::NBZip2::CEncoder::SetCoderProperties
; Function compile flags: /Odtp /RTCsu
_kNumThreadsMax$ = -4					; size = 4
_this$ = 8						; size = 4
_numThreads$ = 12					; size = 4
?SetNumberOfThreads@CEncoder@NBZip2@NCompress@@UAGJI@Z PROC ; NCompress::NBZip2::CEncoder::SetNumberOfThreads
; Line 881
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 882
	mov	DWORD PTR _kNumThreadsMax$[ebp], 64	; 00000040H
; Line 883
	cmp	DWORD PTR _numThreads$[ebp], 1
	jae	SHORT $LN2@SetNumberO
	mov	DWORD PTR _numThreads$[ebp], 1
$LN2@SetNumberO:
; Line 884
	cmp	DWORD PTR _numThreads$[ebp], 64		; 00000040H
	jbe	SHORT $LN1@SetNumberO
	mov	DWORD PTR _numThreads$[ebp], 64		; 00000040H
$LN1@SetNumberO:
; Line 885
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numThreads$[ebp]
	mov	DWORD PTR [eax+404], ecx
; Line 886
	xor	eax, eax
; Line 887
	mov	esp, ebp
	pop	ebp
	ret	8
?SetNumberOfThreads@CEncoder@NBZip2@NCompress@@UAGJI@Z ENDP ; NCompress::NBZip2::CEncoder::SetNumberOfThreads
_TEXT	ENDS
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufferSize$ = 8					; size = 4
?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z PROC	; CBitmEncoder<COutBuffer>::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmencoder.h
; Line 15
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufferSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@?$CBitmEncoder@VCOutBuffer@@@@QAE_NI@Z ENDP	; CBitmEncoder<COutBuffer>::Create
_TEXT	ENDS
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_outStream$ = 8						; size = 4
?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z PROC ; CBitmEncoder<COutBuffer>::SetStream, COMDAT
; _this$ = ecx
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@?$CBitmEncoder@VCOutBuffer@@@@QAEXPAUISequentialOutStream@@@Z ENDP ; CBitmEncoder<COutBuffer>::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
_TEXT	ENDS
EXTRN	?GetProcessedSize@COutBuffer@@QBE_KXZ:PROC	; COutBuffer::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ PROC ; CBitmEncoder<COutBuffer>::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmencoder.h
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 8
	sub	esi, DWORD PTR [ecx]
	add	esi, 7
	shr	esi, 3
	xor	ecx, ecx
	add	eax, esi
	adc	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@?$CBitmEncoder@VCOutBuffer@@@@QBE_KXZ ENDP ; CBitmEncoder<COutBuffer>::GetProcessedSize
_TEXT	ENDS
EXTRN	?Init@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ PROC		; CBitmEncoder<COutBuffer>::Init, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@COutBuffer@@QAEXXZ		; COutBuffer::Init
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 8
; Line 22
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], 0
; Line 23
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CBitmEncoder@VCOutBuffer@@@@QAEXXZ ENDP		; CBitmEncoder<COutBuffer>::Init
_TEXT	ENDS
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ PROC	; CBitmEncoder<COutBuffer>::Flush, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 8
	jae	SHORT $LN1@Flush
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z ; CBitmEncoder<COutBuffer>::WriteBits
$LN1@Flush:
; Line 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
; Line 29
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@?$CBitmEncoder@VCOutBuffer@@@@QAEJXZ ENDP	; CBitmEncoder<COutBuffer>::Flush
_TEXT	ENDS
PUBLIC	?WriteByte@COutBuffer@@QAEXE@Z			; COutBuffer::WriteByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z
_TEXT	SEGMENT
_newBits$68092 = -8					; size = 4
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_numBits$ = 12						; size = 4
?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z PROC	; CBitmEncoder<COutBuffer>::WriteBits, COMDAT
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN3@WriteBits@2:
; Line 32
	cmp	DWORD PTR _numBits$[ebp], 0
	jbe	$LN4@WriteBits@2
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN1@WriteBits@2
; Line 36
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	movzx	edx, BYTE PTR _value$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	edx, cl
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [ecx+4]
	or	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 37
	jmp	SHORT $LN4@WriteBits@2
$LN1@WriteBits@2:
; Line 39
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _numBits$[ebp]
	sub	eax, DWORD PTR [edx]
	mov	DWORD PTR _numBits$[ebp], eax
; Line 40
	mov	edx, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shr	edx, cl
	mov	DWORD PTR _newBits$68092[ebp], edx
; Line 41
	mov	eax, DWORD PTR _newBits$68092[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _value$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _value$[ebp], ecx
; Line 42
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	or	eax, DWORD PTR _newBits$68092[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 8
; Line 44
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 0
; Line 45
	jmp	$LN3@WriteBits@2
$LN4@WriteBits@2:
; Line 46
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBits@?$CBitmEncoder@VCOutBuffer@@@@QAEXII@Z ENDP	; CBitmEncoder<COutBuffer>::WriteBits
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteByte@COutBuffer@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@COutBuffer@@QAEXE@Z PROC			; COutBuffer::WriteByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@WriteByte
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@WriteByte:
; Line 53
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@COutBuffer@@QAEXE@Z ENDP			; COutBuffer::WriteByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@NBZip2@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@NBZip2@NCompress@@W7AGKXZ PROC	; [thunk]:NCompress::NBZip2::CEncoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CEncoder@NBZip2@NCompress@@UAGKXZ ; NCompress::NBZip2::CEncoder::Release
?Release@CEncoder@NBZip2@NCompress@@W7AGKXZ ENDP	; [thunk]:NCompress::NBZip2::CEncoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NBZip2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@NBZip2@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::NBZip2::CEncoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ ; NCompress::NBZip2::CEncoder::AddRef
?AddRef@CEncoder@NBZip2@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::NBZip2::CEncoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NBZip2@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@NBZip2@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::NBZip2::CEncoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CEncoder@NBZip2@NCompress@@UAGKXZ ; NCompress::NBZip2::CEncoder::AddRef
?AddRef@CEncoder@NBZip2@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::NBZip2::CEncoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBZip2::CEncoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBZip2::CEncoder::QueryInterface
?QueryInterface@CEncoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBZip2::CEncoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@NBZip2@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@NBZip2@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBZip2::CEncoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CEncoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBZip2::CEncoder::QueryInterface
?QueryInterface@CEncoder@NBZip2@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBZip2::CEncoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@NBZip2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@NBZip2@NCompress@@W3AGKXZ PROC	; [thunk]:NCompress::NBZip2::CEncoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CEncoder@NBZip2@NCompress@@UAGKXZ ; NCompress::NBZip2::CEncoder::Release
?Release@CEncoder@NBZip2@NCompress@@W3AGKXZ ENDP	; [thunk]:NCompress::NBZip2::CEncoder::Release`adjustor{4}'
_TEXT	ENDS
END

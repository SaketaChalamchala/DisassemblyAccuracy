; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\UserInputUtils.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kFirstQuestionMessage DD FLAT:$SG68337
_kHelpQuestionMessage DD FLAT:$SG68339
_DATA	ENDS
CONST	SEGMENT
$SG68337 DB	'? ', 00H
	ORG $+5
$SG68339 DB	'(Y)es / (N)o / (A)lways / (S)kip all / A(u)to rename all'
	DB	' / (Q)uit? ', 00H
$SG68372 DB	0aH, 'Enter password (will not be echoed):', 00H
CONST	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?MyCharLower_Ascii@@YGDD@Z			; MyCharLower_Ascii
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	?Trim@AString@@QAEXXZ				; AString::Trim
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z ; ScanUserYesNoAllQuit
EXTRN	?ScanStringUntilNewLine@CStdInStream@@QAE?AVAString@@_N@Z:PROC ; CStdInStream::ScanStringUntilNewLine
EXTRN	?g_StdIn@@3VCStdInStream@@A:QWORD		; g_StdIn
EXTRN	?Flush@CStdOutStream@@QAE_NXZ:PROC		; CStdOutStream::Flush
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z$0
__ehfuncinfo$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\userinpututils.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv86 = -60						; size = 4
$T68424 = -56						; size = 4
$T68423 = -52						; size = 4
$T68422 = -48						; size = 4
$T68421 = -44						; size = 4
$T68420 = -40						; size = 4
$T68419 = -36						; size = 4
_scannedString$68348 = -28				; size = 12
__$EHRec$ = -12						; size = 12
_outStream$ = 8						; size = 4
?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z PROC ; ScanUserYesNoAllQuit
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 25
	cmp	DWORD PTR _outStream$[ebp], 0
	je	SHORT $LN12@ScanUserYe
; Line 26
	mov	eax, DWORD PTR _kFirstQuestionMessage
	push	eax
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN12@ScanUserYe:
; Line 29
	cmp	DWORD PTR _outStream$[ebp], 0
	je	SHORT $LN10@ScanUserYe
; Line 31
	mov	ecx, DWORD PTR _kHelpQuestionMessage
	push	ecx
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 32
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN10@ScanUserYe:
; Line 34
	push	0
	lea	edx, DWORD PTR _scannedString$68348[ebp]
	push	edx
	mov	ecx, OFFSET ?g_StdIn@@3VCStdInStream@@A	; g_StdIn
	call	?ScanStringUntilNewLine@CStdInStream@@QAE?AVAString@@_N@Z ; CStdInStream::ScanStringUntilNewLine
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 35
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	?Trim@AString@@QAEXXZ			; AString::Trim
; Line 36
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	$LN9@ScanUserYe
; Line 37
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	?MyCharLower_Ascii@@YGDD@Z		; MyCharLower_Ascii
	movsx	edx, al
	mov	DWORD PTR tv86[ebp], edx
	mov	eax, DWORD PTR tv86[ebp]
	sub	eax, 97					; 00000061H
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 24			; 00000018H
	ja	$LN9@ScanUserYe
	mov	ecx, DWORD PTR tv86[ebp]
	movzx	edx, BYTE PTR $LN17@ScanUserYe[ecx]
	jmp	DWORD PTR $LN22@ScanUserYe[edx*4]
$LN6@ScanUserYe:
; Line 39
	mov	DWORD PTR $T68419[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68419[ebp]
	jmp	$LN14@ScanUserYe
$LN5@ScanUserYe:
; Line 40
	mov	DWORD PTR $T68420[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68420[ebp]
	jmp	$LN14@ScanUserYe
$LN4@ScanUserYe:
; Line 41
	mov	DWORD PTR $T68421[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68421[ebp]
	jmp	SHORT $LN14@ScanUserYe
$LN3@ScanUserYe:
; Line 42
	mov	DWORD PTR $T68422[ebp], 3
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68422[ebp]
	jmp	SHORT $LN14@ScanUserYe
$LN2@ScanUserYe:
; Line 43
	mov	DWORD PTR $T68423[ebp], 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68423[ebp]
	jmp	SHORT $LN14@ScanUserYe
$LN1@ScanUserYe:
; Line 44
	mov	DWORD PTR $T68424[ebp], 5
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68424[ebp]
	jmp	SHORT $LN14@ScanUserYe
$LN9@ScanUserYe:
; Line 46
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	jmp	$LN12@ScanUserYe
$LN14@ScanUserYe:
; Line 47
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@ScanUserYe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN21@ScanUserYe:
	DD	1
	DD	$LN20@ScanUserYe
$LN20@ScanUserYe:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN18@ScanUserYe
$LN18@ScanUserYe:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
	npad	2
$LN22@ScanUserYe:
	DD	$LN4@ScanUserYe
	DD	$LN5@ScanUserYe
	DD	$LN1@ScanUserYe
	DD	$LN3@ScanUserYe
	DD	$LN2@ScanUserYe
	DD	$LN6@ScanUserYe
	DD	$LN9@ScanUserYe
$LN17@ScanUserYe:
	DB	0
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	1
	DB	6
	DB	6
	DB	2
	DB	6
	DB	3
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	5
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z$0:
	lea	ecx, DWORD PTR _scannedString$68348[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z ENDP ; ScanUserYesNoAllQuit
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MyCharLower_Ascii@@YGDD@Z
_TEXT	SEGMENT
_c$ = 8							; size = 1
?MyCharLower_Ascii@@YGDD@Z PROC				; MyCharLower_Ascii, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 106
	push	ebp
	mov	ebp, esp
; Line 107
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN1@MyCharLowe
	movsx	ecx, BYTE PTR _c$[ebp]
	cmp	ecx, 90					; 0000005aH
	jg	SHORT $LN1@MyCharLowe
; Line 108
	movzx	eax, BYTE PTR _c$[ebp]
	add	eax, 32					; 00000020H
	jmp	SHORT $LN2@MyCharLowe
$LN1@MyCharLowe:
; Line 109
	mov	al, BYTE PTR _c$[ebp]
$LN2@MyCharLowe:
; Line 110
	pop	ebp
	ret	4
?MyCharLower_Ascii@@YGDD@Z ENDP				; MyCharLower_Ascii
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T68451 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68451[ebp], ecx
	mov	edx, DWORD PTR $T68451[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
EXTRN	?TrimLeft@AString@@QAEXXZ:PROC			; AString::TrimLeft
EXTRN	?TrimRight@AString@@QAEXXZ:PROC			; AString::TrimRight
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Trim@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Trim@AString@@QAEXXZ PROC				; AString::Trim, COMDAT
; _this$ = ecx
; Line 348
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TrimRight@AString@@QAEXXZ		; AString::TrimRight
; Line 350
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TrimLeft@AString@@QAEXXZ		; AString::TrimLeft
; Line 351
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Trim@AString@@QAEXXZ ENDP				; AString::Trim
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z	; CStdOutStream::operator<<
PUBLIC	?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z ; GetPassword
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	?endl@@YGAAVCStdOutStream@@AAV1@@Z:PROC		; endl
EXTRN	?ScanUStringUntilNewLine@CStdInStream@@QAE?AVUString@@XZ:PROC ; CStdInStream::ScanUStringUntilNewLine
EXTRN	__imp__SetConsoleMode@8:PROC
EXTRN	__imp__GetConsoleMode@8:PROC
EXTRN	__imp__GetStdHandle@4:PROC
xdata$x	SEGMENT
__unwindtable$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z$0
__ehfuncinfo$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68464 = -56						; size = 4
_res$ = -48						; size = 12
_mode$ = -28						; size = 4
_wasChanged$ = -17					; size = 1
_console$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_outStream$ = 12					; size = 4
?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z PROC	; GetPassword
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\userinpututils.cpp
; Line 56
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T68464[ebp], 0
; Line 57
	cmp	DWORD PTR _outStream$[ebp], 0
	je	SHORT $LN5@GetPasswor
; Line 63
	push	OFFSET $SG68372
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 64
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN5@GetPasswor:
; Line 69
	mov	esi, esp
	push	-10					; fffffff6H
	call	DWORD PTR __imp__GetStdHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _console$[ebp], eax
; Line 70
	mov	BYTE PTR _wasChanged$[ebp], 0
; Line 71
	mov	DWORD PTR _mode$[ebp], 0
; Line 72
	cmp	DWORD PTR _console$[ebp], -1
	je	SHORT $LN4@GetPasswor
	cmp	DWORD PTR _console$[ebp], 0
	je	SHORT $LN4@GetPasswor
; Line 73
	mov	esi, esp
	lea	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _console$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetConsoleMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@GetPasswor
; Line 74
	mov	edx, DWORD PTR _mode$[ebp]
	and	edx, -5					; fffffffbH
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _console$[ebp]
	push	eax
	call	DWORD PTR __imp__SetConsoleMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR _wasChanged$[ebp], al
$LN4@GetPasswor:
; Line 75
	lea	ecx, DWORD PTR _res$[ebp]
	push	ecx
	mov	ecx, OFFSET ?g_StdIn@@3VCStdInStream@@A	; g_StdIn
	call	?ScanUStringUntilNewLine@CStdInStream@@QAE?AVUString@@XZ ; CStdInStream::ScanUStringUntilNewLine
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 76
	movzx	edx, BYTE PTR _wasChanged$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetPasswor
; Line 77
	mov	esi, esp
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _console$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetConsoleMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@GetPasswor:
; Line 78
	cmp	DWORD PTR _outStream$[ebp], 0
	je	SHORT $LN1@GetPasswor
; Line 80
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 81
	mov	ecx, DWORD PTR _outStream$[ebp]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN1@GetPasswor:
; Line 83
	lea	edx, DWORD PTR _res$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	eax, DWORD PTR $T68464[ebp]
	or	eax, 1
	mov	DWORD PTR $T68464[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 90
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@GetPasswor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN15@GetPasswor:
	DD	2
	DD	$LN14@GetPasswor
$LN14@GetPasswor:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN11@GetPasswor
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN12@GetPasswor
$LN12@GetPasswor:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN11@GetPasswor:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z$0:
	lea	ecx, DWORD PTR _res$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z$1:
	mov	eax, DWORD PTR $T68464[ebp]
	and	eax, 1
	je	$LN10@GetPasswor
	and	DWORD PTR $T68464[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN10@GetPasswor:
	ret	0
__ehhandler$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z ENDP	; GetPassword
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T68475 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68475[ebp], ecx
	mov	edx, DWORD PTR $T68475[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z PROC	; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ENDP	; CStdOutStream::operator<<
_TEXT	ENDS
END

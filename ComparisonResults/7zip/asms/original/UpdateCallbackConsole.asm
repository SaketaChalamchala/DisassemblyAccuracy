; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\UpdateCallbackConsole.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kEmptyFileAlias DD FLAT:$SG74557
_kOpenArchiveMessage DD FLAT:$SG74559
_kCreatingArchiveMessage DD FLAT:$SG74561
_kUpdatingArchiveMessage DD FLAT:$SG74563
_kScanningMessage DD FLAT:$SG74565
_kError	DD	FLAT:$SG74567
_kWarning DD	FLAT:$SG74569
_k_StdOut_ArcName DD FLAT:$SG74715
_DATA	ENDS
CONST	SEGMENT
$SG74557 DB	'[', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ']', 00H, 00H, 00H
$SG74559 DB	'Open archive: ', 00H
	ORG $+1
$SG74561 DB	'Creating archive: ', 00H
	ORG $+1
$SG74563 DB	'Updating archive: ', 00H
	ORG $+1
$SG74565 DB	'Scanning the drive:', 00H
$SG74567 DB	'ERROR: ', 00H
$SG74569 DB	'WARNING: ', 00H
	ORG $+2
$SG74610 DB	'ERRORS:', 00H
$SG74613 DB	'ERRORS:', 00H
$SG74622 DB	'WARNINGS:', 00H
	ORG $+2
$SG74625 DB	'WARNINGS:', 00H
	ORG $+2
$SG74647 DB	'Scan ', 00H
	ORG $+2
$SG74699 DB	': ', 00H
	ORG $+1
$SG74715 DB	'StdOut', 00H
	ORG $+1
$SG74739 DB	'Files read from disk', 00H
	ORG $+3
$SG74740 DB	'Archive size: ', 00H
	ORG $+1
$SG74748 DB	'Write SFX: ', 00H
$SG74750 DB	' : ', 00H
$SG74760 DB	': Removing files after including to archive', 00H
$SG74761 DB	'Removing', 00H
	ORG $+3
$SG74767 DB	'Removing', 00H
	ORG $+3
$SG74783 DB	'Items to compress', 00H
	ORG $+2
$SG74840 DB	'Anti', 00H
	ORG $+3
$SG74843 DB	'+', 00H
	ORG $+2
$SG74845 DB	'U', 00H
	ORG $+2
$SG74848 DB	'A', 00H
	ORG $+2
$SG74850 DB	'Reading', 00H
$SG74882 DB	' : ', 00H
$SG74899 DB	'+', 00H
	ORG $+2
$SG74901 DB	'U', 00H
	ORG $+2
$SG74903 DB	'A', 00H
	ORG $+2
$SG74905 DB	'=', 00H
	ORG $+2
$SG74907 DB	'R', 00H
	ORG $+2
$SG74909 DB	'.', 00H
	ORG $+2
$SG74911 DB	'D', 00H
	ORG $+2
$SG74913 DB	'Header creation', 00H
$SG74945 DB	'D', 00H
CONST	ENDS
PUBLIC	?GetWarningFlags@CArcErrorInfo@@QBEIXZ		; CArcErrorInfo::GetWarningFlags
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z	; CStdOutStream::operator<<
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?GetErrorFlags@CArcErrorInfo@@QBEIXZ		; CArcErrorInfo::GetErrorFlags
PUBLIC	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z	; CObjectVector<CArc>::operator[]
PUBLIC	?Size@?$CObjectVector@VCArc@@@@QBEIXZ		; CObjectVector<CArc>::Size
PUBLIC	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ	; CCallbackConsoleBase::ClosePercents2
PUBLIC	?OpenResult@CUpdateCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z ; CUpdateCallbackConsole::OpenResult
EXTRN	?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z:PROC ; Print_OpenArchive_Error
EXTRN	?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z:PROC ; Print_OpenArchive_Props
EXTRN	?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z:PROC ; Print_ErrorFormatIndex_Warning
EXTRN	?Flush@CStdOutStream@@QAE_NXZ:PROC		; CStdOutStream::Flush
EXTRN	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z:PROC ; PrintErrorFlags
EXTRN	??6CStdOutStream@@QAEAAV0@PB_W@Z:PROC		; CStdOutStream::operator<<
EXTRN	?endl@@YGAAVCStdOutStream@@AAV1@@Z:PROC		; endl
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
___result__$74640 = -36					; size = 4
_res$74639 = -32					; size = 4
___result__$74634 = -28					; size = 4
_warningFlags$74615 = -24				; size = 4
_errorFlags$74603 = -20					; size = 4
_er$74602 = -16						; size = 4
_arc$74601 = -12					; size = 4
_level$74597 = -8					; size = 4
_this$ = -4						; size = 4
_codecs$ = 8						; size = 4
_arcLink$ = 12						; size = 4
_name$ = 16						; size = 4
_result$ = 20						; size = 4
?OpenResult@CUpdateCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z PROC ; CUpdateCallbackConsole::OpenResult
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents2
; Line 54
	mov	DWORD PTR _level$74597[ebp], 0
	jmp	SHORT $LN32@OpenResult
$LN31@OpenResult:
	mov	eax, DWORD PTR _level$74597[ebp]
	add	eax, 1
	mov	DWORD PTR _level$74597[ebp], eax
$LN32@OpenResult:
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	?Size@?$CObjectVector@VCArc@@@@QBEIXZ	; CObjectVector<CArc>::Size
	cmp	DWORD PTR _level$74597[ebp], eax
	jae	$LN30@OpenResult
; Line 56
	mov	ecx, DWORD PTR _level$74597[ebp]
	push	ecx
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ; CObjectVector<CArc>::operator[]
	mov	DWORD PTR _arc$74601[ebp], eax
; Line 57
	mov	edx, DWORD PTR _arc$74601[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _er$74602[ebp], edx
; Line 59
	mov	ecx, DWORD PTR _er$74602[ebp]
	call	?GetErrorFlags@CArcErrorInfo@@QBEIXZ	; CArcErrorInfo::GetErrorFlags
	mov	DWORD PTR _errorFlags$74603[ebp], eax
; Line 61
	cmp	DWORD PTR _errorFlags$74603[ebp], 0
	jne	SHORT $LN28@OpenResult
	mov	ecx, DWORD PTR _er$74602[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	$LN29@OpenResult
$LN28@OpenResult:
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+188], 0
	je	SHORT $LN27@OpenResult
; Line 65
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+188]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 66
	cmp	DWORD PTR _level$74597[ebp], 0
	je	SHORT $LN27@OpenResult
; Line 67
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arc$74601[ebp]
	add	ecx, 112				; 00000070H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN27@OpenResult:
; Line 70
	cmp	DWORD PTR _errorFlags$74603[ebp], 0
	je	SHORT $LN25@OpenResult
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+188], 0
	je	SHORT $LN25@OpenResult
; Line 73
	mov	edx, DWORD PTR _errorFlags$74603[ebp]
	push	edx
	push	OFFSET $SG74610
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	push	ecx
	call	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ; PrintErrorFlags
$LN25@OpenResult:
; Line 76
	mov	ecx, DWORD PTR _er$74602[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN23@OpenResult
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+188], 0
	je	SHORT $LN23@OpenResult
; Line 79
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _er$74602[ebp]
	add	ecx, 24					; 00000018H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG74613
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+188]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN23@OpenResult:
; Line 82
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+188], 0
	je	SHORT $LN29@OpenResult
; Line 84
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 85
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+188]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN29@OpenResult:
; Line 89
	mov	ecx, DWORD PTR _er$74602[ebp]
	call	?GetWarningFlags@CArcErrorInfo@@QBEIXZ	; CArcErrorInfo::GetWarningFlags
	mov	DWORD PTR _warningFlags$74615[ebp], eax
; Line 91
	cmp	DWORD PTR _warningFlags$74615[ebp], 0
	jne	SHORT $LN19@OpenResult
	mov	ecx, DWORD PTR _er$74602[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	$LN20@OpenResult
$LN19@OpenResult:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN18@OpenResult
; Line 95
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 96
	cmp	DWORD PTR _level$74597[ebp], 0
	je	SHORT $LN18@OpenResult
; Line 97
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arc$74601[ebp]
	add	ecx, 112				; 00000070H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN18@OpenResult:
; Line 100
	cmp	DWORD PTR _warningFlags$74615[ebp], 0
	je	SHORT $LN16@OpenResult
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN16@OpenResult
; Line 103
	mov	ecx, DWORD PTR _warningFlags$74615[ebp]
	push	ecx
	push	OFFSET $SG74622
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ; PrintErrorFlags
$LN16@OpenResult:
; Line 106
	mov	ecx, DWORD PTR _er$74602[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@OpenResult
; Line 108
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+184], 0
	je	SHORT $LN14@OpenResult
; Line 109
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _er$74602[ebp]
	add	ecx, 36					; 00000024H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG74625
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN14@OpenResult:
; Line 112
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN20@OpenResult
; Line 114
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+193]
	test	ecx, ecx
	je	SHORT $LN20@OpenResult
; Line 116
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN20@OpenResult:
; Line 121
	mov	eax, DWORD PTR _er$74602[ebp]
	cmp	DWORD PTR [eax+12], 0
	jl	SHORT $LN10@OpenResult
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN10@OpenResult
; Line 125
	mov	edx, DWORD PTR _arc$74601[ebp]
	push	edx
	mov	eax, DWORD PTR _codecs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	call	?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z ; Print_ErrorFormatIndex_Warning
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+193]
	test	ecx, ecx
	je	SHORT $LN10@OpenResult
; Line 127
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN10@OpenResult:
; Line 130
	jmp	$LN31@OpenResult
$LN30@OpenResult:
; Line 132
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN7@OpenResult
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN6@OpenResult
; Line 136
	mov	ecx, DWORD PTR _arcLink$[ebp]
	push	ecx
	mov	edx, DWORD PTR _codecs$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	call	?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Props
	mov	DWORD PTR ___result__$74634[ebp], eax
	cmp	DWORD PTR ___result__$74634[ebp], 0
	je	SHORT $LN5@OpenResult
	mov	eax, DWORD PTR ___result__$74634[ebp]
	jmp	$LN33@OpenResult
$LN5@OpenResult:
; Line 137
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN6@OpenResult:
; Line 140
	jmp	$LN4@OpenResult
$LN7@OpenResult:
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN3@OpenResult
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN3@OpenResult:
; Line 144
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+188], 0
	je	SHORT $LN4@OpenResult
; Line 146
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kError
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+188]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 147
	mov	eax, DWORD PTR _arcLink$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+188]
	push	eax
	call	?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Error
	mov	DWORD PTR _res$74639[ebp], eax
; Line 148
	mov	ecx, DWORD PTR _res$74639[ebp]
	mov	DWORD PTR ___result__$74640[ebp], ecx
	cmp	DWORD PTR ___result__$74640[ebp], 0
	je	SHORT $LN1@OpenResult
	mov	eax, DWORD PTR ___result__$74640[ebp]
	jmp	SHORT $LN33@OpenResult
$LN1@OpenResult:
; Line 149
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+188]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN4@OpenResult:
; Line 153
	xor	eax, eax
$LN33@OpenResult:
; Line 154
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?OpenResult@CUpdateCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z ENDP ; CUpdateCallbackConsole::OpenResult
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z PROC	; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ENDP	; CStdOutStream::operator<<
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
PUBLIC	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ		; CArcErrorInfo::NeedTailWarning
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWarningFlags@CArcErrorInfo@@QBEIXZ
_TEXT	SEGMENT
_a$ = -8						; size = 4
_this$ = -4						; size = 4
?GetWarningFlags@CArcErrorInfo@@QBEIXZ PROC		; CArcErrorInfo::GetWarningFlags, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\openarchive.h
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _a$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ	; CArcErrorInfo::NeedTailWarning
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetWarning
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 64					; 00000040H
	jne	SHORT $LN1@GetWarning
; Line 212
	mov	edx, DWORD PTR _a$[ebp]
	or	edx, 64					; 00000040H
	mov	DWORD PTR _a$[ebp], edx
$LN1@GetWarning:
; Line 213
	mov	eax, DWORD PTR _a$[ebp]
; Line 214
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWarningFlags@CArcErrorInfo@@QBEIXZ ENDP		; CArcErrorInfo::GetWarningFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedTailWarning@CArcErrorInfo@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?NeedTailWarning@CArcErrorInfo@@QBE_NXZ PROC		; CArcErrorInfo::NeedTailWarning, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	jne	SHORT $LN3@NeedTailWa
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN3@NeedTailWa
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@NeedTailWa
$LN3@NeedTailWa:
	mov	DWORD PTR tv69[ebp], 0
$LN4@NeedTailWa:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedTailWarning@CArcErrorInfo@@QBE_NXZ ENDP		; CArcErrorInfo::NeedTailWarning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetErrorFlags@CArcErrorInfo@@QBEIXZ
_TEXT	SEGMENT
_a$ = -8						; size = 4
_this$ = -4						; size = 4
?GetErrorFlags@CArcErrorInfo@@QBEIXZ PROC		; CArcErrorInfo::GetErrorFlags, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _a$[ebp], ecx
; Line 219
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	test	eax, eax
	je	SHORT $LN1@GetErrorFl
; Line 220
	mov	ecx, DWORD PTR _a$[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR _a$[ebp], ecx
$LN1@GetErrorFl:
; Line 221
	mov	eax, DWORD PTR _a$[ebp]
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	0
?GetErrorFlags@CArcErrorInfo@@QBEIXZ ENDP		; CArcErrorInfo::GetErrorFlags
_TEXT	ENDS
PUBLIC	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ	; CCallbackConsoleBase::NeedPercents
EXTRN	?ClosePrint@CPercentPrinter@@QAEX_N@Z:PROC	; CPercentPrinter::ClosePrint
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ClosePercents2@CCallbackConsoleBase@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercents2@CCallbackConsoleBase@@QAEXXZ PROC	; CCallbackConsoleBase::ClosePercents2, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce
; Line 76
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce:
; Line 77
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ENDP	; CCallbackConsoleBase::ClosePercents2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedPercents@CCallbackConsoleBase@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NeedPercents@CCallbackConsoleBase@@QBE_NXZ PROC	; CCallbackConsoleBase::NeedPercents, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+164], 0
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ENDP	; CCallbackConsoleBase::NeedPercents
_TEXT	ENDS
PUBLIC	?StartScanning@CUpdateCallbackConsole@@UAEJXZ	; CUpdateCallbackConsole::StartScanning
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartScanning@CUpdateCallbackConsole@@UAEJXZ PROC	; CUpdateCallbackConsole::StartScanning
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN1@StartScann
; Line 159
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _kScanningMessage
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN1@StartScann:
; Line 160
	push	OFFSET $SG74647
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 161
	xor	eax, eax
; Line 162
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartScanning@CUpdateCallbackConsole@@UAEJXZ ENDP	; CUpdateCallbackConsole::StartScanning
_TEXT	ENDS
PUBLIC	?GetTotalBytes@CDirItemsStat@@QBE_KXZ		; CDirItemsStat::GetTotalBytes
PUBLIC	?ScanProgress@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z ; CUpdateCallbackConsole::ScanProgress
EXTRN	?Print@CPercentPrinter@@QAEXXZ:PROC		; CPercentPrinter::Print
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_st$ = 8						; size = 4
_path$ = 12						; size = 4
___formal$ = 16						; size = 1
?ScanProgress@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z PROC ; CUpdateCallbackConsole::ScanProgress
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@ScanProgre
; Line 168
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx]
	add	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx+4]
	adc	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [edx+16]
	adc	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	DWORD PTR [edx+24], ecx
; Line 169
	mov	ecx, DWORD PTR _st$[ebp]
	call	?GetTotalBytes@CDirItemsStat@@QBE_KXZ	; CDirItemsStat::GetTotalBytes
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], edx
; Line 170
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@ScanProgre:
; Line 174
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-4]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 175
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ScanProgress@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z ENDP ; CUpdateCallbackConsole::ScanProgress
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTotalBytes@CDirItemsStat@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTotalBytes@CDirItemsStat@@QBE_KXZ PROC		; CDirItemsStat::GetTotalBytes, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	add	edx, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax+28]
	adc	esi, DWORD PTR [ecx+36]
	mov	eax, edx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalBytes@CDirItemsStat@@QBE_KXZ ENDP		; CDirItemsStat::GetTotalBytes
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z ; CCallbackConsoleBase::CommonError
EXTRN	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z:PROC ; NWindows::NError::MyFormatMessage
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z$0
__ehfuncinfo$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv139 = -40						; size = 4
tv140 = -36						; size = 4
tv79 = -32						; size = 4
$T75870 = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
_isWarning$ = 16					; size = 1
?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z PROC ; CCallbackConsoleBase::CommonError
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 178
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents2
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+180], 0
	je	$LN3@CommonErro
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+176], 0
	je	SHORT $LN1@CommonErro
; Line 184
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+176]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN1@CommonErro:
; Line 188
	movzx	eax, BYTE PTR _isWarning$[ebp]
	test	eax, eax
	je	SHORT $LN5@CommonErro
	mov	ecx, DWORD PTR _kWarning
	mov	DWORD PTR tv79[ebp], ecx
	jmp	SHORT $LN6@CommonErro
$LN5@CommonErro:
	mov	edx, DWORD PTR _kError
	mov	DWORD PTR tv79[ebp], edx
$LN6@CommonErro:
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _path$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T75870[ebp]
	push	ecx
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv140[ebp], eax
	mov	edx, DWORD PTR tv140[ebp]
	mov	DWORD PTR tv139[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv139[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+180]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T75870[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 189
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+180]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN3@CommonErro:
; Line 191
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z$0:
	lea	ecx, DWORD PTR $T75870[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z ENDP ; CCallbackConsoleBase::CommonError
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T75882 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T75882[ebp], ecx
	mov	edx, DWORD PTR $T75882[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
PUBLIC	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
PUBLIC	?AddError@CErrorPathCodes@@QAEXABVUString@@K@Z	; CErrorPathCodes::AddError
PUBLIC	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
PUBLIC	?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::ScanError_Base
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z$0
__ehfuncinfo$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T75885 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z PROC ; CCallbackConsoleBase::ScanError_Base
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 195
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 196
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 198
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 244				; 000000f4H
	call	?AddError@CErrorPathCodes@@QAEXABVUString@@K@Z ; CErrorPathCodes::AddError
; Line 199
	push	1
	mov	edx, DWORD PTR _systemError$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z ; CCallbackConsoleBase::CommonError
; Line 201
	mov	DWORD PTR $T75885[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T75885[ebp]
; Line 202
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ScanError_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@ScanError_:
	DD	1
	DD	$LN6@ScanError_
$LN6@ScanError_:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@ScanError_
$LN4@ScanError_:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ENDP ; CCallbackConsoleBase::ScanError_Base
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z PROC ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 158
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ENDP ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
_TEXT	ENDS
PUBLIC	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
_TEXT	ENDS
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::Unlock, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@K@@QAEIK@Z			; CRecordVector<unsigned long>::Add
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddError@CErrorPathCodes@@QAEXABVUString@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?AddError@CErrorPathCodes@@QAEXABVUString@@K@Z PROC	; CErrorPathCodes::AddError, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 19
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 20
	mov	ecx, DWORD PTR _systemError$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Add@?$CRecordVector@K@@QAEIK@Z		; CRecordVector<unsigned long>::Add
; Line 21
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddError@CErrorPathCodes@@QAEXABVUString@@K@Z ENDP	; CErrorPathCodes::AddError
_TEXT	ENDS
PUBLIC	?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::OpenFileError_Base
xdata$x	SEGMENT
__unwindtable$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z$0
__ehfuncinfo$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T75908 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z PROC ; CCallbackConsoleBase::OpenFileError_Base
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 205
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 207
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	?AddError@CErrorPathCodes@@QAEXABVUString@@K@Z ; CErrorPathCodes::AddError
; Line 212
	push	1
	mov	edx, DWORD PTR _systemError$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z ; CCallbackConsoleBase::CommonError
; Line 213
	mov	DWORD PTR $T75908[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T75908[ebp]
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@OpenFileEr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@OpenFileEr:
	DD	1
	DD	$LN6@OpenFileEr
$LN6@OpenFileEr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@OpenFileEr
$LN4@OpenFileEr:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ENDP ; CCallbackConsoleBase::OpenFileError_Base
PUBLIC	_HRESULT_FROM_WIN32@4
PUBLIC	?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::ReadingFileError_Base
xdata$x	SEGMENT
__unwindtable$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z$0
__ehfuncinfo$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T75918 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z PROC ; CCallbackConsoleBase::ReadingFileError_Base
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 223
	push	0
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommonError@CCallbackConsoleBase@@IAEXABVUString@@K_N@Z ; CCallbackConsoleBase::CommonError
; Line 224
	mov	edx, DWORD PTR _systemError$[ebp]
	push	edx
	call	_HRESULT_FROM_WIN32@4
	mov	DWORD PTR $T75918[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T75918[ebp]
; Line 225
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ReadingFil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@ReadingFil:
	DD	1
	DD	$LN6@ReadingFil
$LN6@ReadingFil:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@ReadingFil
$LN4@ReadingFil:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ENDP ; CCallbackConsoleBase::ReadingFileError_Base
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32@4 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
_HRESULT_FROM_WIN32@4 ENDP
_TEXT	ENDS
PUBLIC	?ScanError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z ; CUpdateCallbackConsole::ScanError
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?ScanError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z PROC ; CUpdateCallbackConsole::ScanError
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 229
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::ScanError_Base
; Line 230
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ScanError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z ENDP ; CUpdateCallbackConsole::ScanError
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z ; CUpdateCallbackConsole::FinishScanning
EXTRN	?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z:PROC ; Print_DirItemsStat
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
EXTRN	?ClearCurState@CPercentPrinterState@@QAEXXZ:PROC ; CPercentPrinterState::ClearCurState
xdata$x	SEGMENT
__unwindtable$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z$0
__ehfuncinfo$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$74712 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_st$ = 8						; size = 4
?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z PROC ; CUpdateCallbackConsole::FinishScanning
; _this$ = ecx
; Line 246
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@FinishScan
; Line 249
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClearCurState@CPercentPrinterState@@QAEXXZ ; CPercentPrinterState::ClearCurState
$LN2@FinishScan:
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN1@FinishScan
; Line 255
	lea	ecx, DWORD PTR _s$74712[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 256
	mov	edx, DWORD PTR _st$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$74712[ebp]
	push	eax
	call	?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z ; Print_DirItemsStat
; Line 257
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$74712[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 258
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$74712[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN1@FinishScan:
; Line 259
	xor	eax, eax
; Line 260
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@FinishScan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@FinishScan:
	DD	1
	DD	$LN8@FinishScan
$LN8@FinishScan:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@FinishScan
$LN6@FinishScan:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z$0:
	lea	ecx, DWORD PTR _s$74712[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FinishScanning@CUpdateCallbackConsole@@UAEJABUCDirItemsStat@@@Z ENDP ; CUpdateCallbackConsole::FinishScanning
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T75942 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T75942[ebp], ecx
	mov	edx, DWORD PTR $T75942[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
PUBLIC	?StartOpenArchive@CUpdateCallbackConsole@@UAEJPB_W@Z ; CUpdateCallbackConsole::StartOpenArchive
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
?StartOpenArchive@CUpdateCallbackConsole@@UAEJPB_W@Z PROC ; CUpdateCallbackConsole::StartOpenArchive
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 265
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN3@StartOpenA
; Line 268
	mov	ecx, DWORD PTR _kOpenArchiveMessage
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 269
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN2@StartOpenA
; Line 270
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
; Line 271
	jmp	SHORT $LN1@StartOpenA
$LN2@StartOpenA:
; Line 272
	mov	edx, DWORD PTR _k_StdOut_ArcName
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN1@StartOpenA:
; Line 273
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN3@StartOpenA:
; Line 275
	xor	eax, eax
; Line 276
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?StartOpenArchive@CUpdateCallbackConsole@@UAEJPB_W@Z ENDP ; CUpdateCallbackConsole::StartOpenArchive
_TEXT	ENDS
PUBLIC	?StartArchive@CUpdateCallbackConsole@@UAEJPB_W_N@Z ; CUpdateCallbackConsole::StartArchive
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -8						; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_updating$ = 12						; size = 1
?StartArchive@CUpdateCallbackConsole@@UAEJPB_W_N@Z PROC	; CUpdateCallbackConsole::StartArchive
; _this$ = ecx
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN3@StartArchi
; Line 282
	movzx	ecx, BYTE PTR _updating$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@StartArchi
	mov	edx, DWORD PTR _kUpdatingArchiveMessage
	mov	DWORD PTR tv79[ebp], edx
	jmp	SHORT $LN7@StartArchi
$LN6@StartArchi:
	mov	eax, DWORD PTR _kCreatingArchiveMessage
	mov	DWORD PTR tv79[ebp], eax
$LN7@StartArchi:
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 283
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN2@StartArchi
; Line 284
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
; Line 285
	jmp	SHORT $LN1@StartArchi
$LN2@StartArchi:
; Line 286
	mov	edx, DWORD PTR _k_StdOut_ArcName
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN1@StartArchi:
; Line 287
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN3@StartArchi:
; Line 289
	xor	eax, eax
; Line 290
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?StartArchive@CUpdateCallbackConsole@@UAEJPB_W_N@Z ENDP	; CUpdateCallbackConsole::StartArchive
_TEXT	ENDS
PUBLIC	?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z ; CUpdateCallbackConsole::FinishArchive
EXTRN	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z:PROC ; PrintSize_bytes_Smart
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
EXTRN	?Add_LF@AString@@QAEXXZ:PROC			; AString::Add_LF
xdata$x	SEGMENT
__unwindtable$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z$0
__ehfuncinfo$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$74738 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_st$ = 8						; size = 4
?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z PROC ; CUpdateCallbackConsole::FinishArchive
; _this$ = ecx
; Line 293
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 294
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents2
; Line 296
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	$LN1@FinishArch
; Line 298
	lea	ecx, DWORD PTR _s$74738[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	push	eax
	push	OFFSET $SG74739
	lea	ecx, DWORD PTR _s$74738[ebp]
	push	ecx
	call	?PrintPropPair@@YGXAAVAString@@PBD_K@Z	; PrintPropPair
; Line 301
	lea	ecx, DWORD PTR _s$74738[ebp]
	call	?Add_LF@AString@@QAEXXZ			; AString::Add_LF
; Line 302
	push	OFFSET $SG74740
	lea	ecx, DWORD PTR _s$74738[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 303
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	lea	edx, DWORD PTR _s$74738[ebp]
	push	edx
	call	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z ; PrintSize_bytes_Smart
; Line 304
	lea	ecx, DWORD PTR _s$74738[ebp]
	call	?Add_LF@AString@@QAEXXZ			; AString::Add_LF
; Line 305
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 306
	lea	ecx, DWORD PTR _s$74738[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 308
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$74738[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN1@FinishArch:
; Line 310
	xor	eax, eax
; Line 311
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@FinishArch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@FinishArch:
	DD	1
	DD	$LN7@FinishArch
$LN7@FinishArch:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@FinishArch
$LN5@FinishArch:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z$0:
	lea	ecx, DWORD PTR _s$74738[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FinishArchive@CUpdateCallbackConsole@@UAEJABUCFinishArchiveStat@@@Z ENDP ; CUpdateCallbackConsole::FinishArchive
PUBLIC	__$ArrayPad$
EXTRN	?ConvertUInt64ToString@@YGX_KPAD@Z:PROC		; ConvertUInt64ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_temp$ = -40						; size = 32
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_name$ = 12						; size = 4
_val$ = 16						; size = 8
?PrintPropPair@@YGXAAVAString@@PBD_K@Z PROC		; PrintPropPair
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 236
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _val$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 237
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 238
	push	OFFSET $SG74699
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 239
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 240
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PrintPropP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN5@PrintPropP:
	DD	1
	DD	$LN4@PrintPropP
$LN4@PrintPropP:
	DD	-40					; ffffffd8H
	DD	32					; 00000020H
	DD	$LN3@PrintPropP
$LN3@PrintPropP:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?PrintPropPair@@YGXAAVAString@@PBD_K@Z ENDP		; PrintPropPair
_TEXT	ENDS
PUBLIC	?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z	; CUpdateCallbackConsole::WriteSfx
EXTRN	??0AString@@QAE@PBD@Z:PROC			; AString::AString
xdata$x	SEGMENT
__unwindtable$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z$0
__ehfuncinfo$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$74749 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_size$ = 12						; size = 8
?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z PROC	; CUpdateCallbackConsole::WriteSfx
; _this$ = ecx
; Line 314
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 315
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN1@WriteSfx
; Line 317
	push	OFFSET $SG74748
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 318
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
; Line 319
	push	OFFSET $SG74750
	lea	ecx, DWORD PTR _s$74749[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 320
	mov	ecx, DWORD PTR _size$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$74749[ebp]
	push	eax
	call	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z ; PrintSize_bytes_Smart
; Line 321
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$74749[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 322
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$74749[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN1@WriteSfx:
; Line 323
	xor	eax, eax
; Line 324
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@WriteSfx
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN8@WriteSfx:
	DD	1
	DD	$LN7@WriteSfx
$LN7@WriteSfx:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@WriteSfx
$LN5@WriteSfx:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z$0:
	lea	ecx, DWORD PTR _s$74749[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?WriteSfx@CUpdateCallbackConsole@@UAEJPB_W_K@Z ENDP	; CUpdateCallbackConsole::WriteSfx
PUBLIC	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
PUBLIC	?DeletingAfterArchiving@CUpdateCallbackConsole@@UAEJABVUString@@_N@Z ; CUpdateCallbackConsole::DeletingAfterArchiving
EXTRN	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z:PROC ; CStdOutStream::PrintUString
EXTRN	?Add_Space@AString@@QAEXXZ:PROC			; AString::Add_Space
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
___formal$ = 12						; size = 1
?DeletingAfterArchiving@CUpdateCallbackConsole@@UAEJABVUString@@_N@Z PROC ; CUpdateCallbackConsole::DeletingAfterArchiving
; _this$ = ecx
; Line 328
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 329
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	jbe	$LN8@DeletingAf
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	$LN8@DeletingAf
; Line 331
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
; Line 333
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+297]
	test	eax, eax
	jne	SHORT $LN7@DeletingAf
; Line 335
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN7@DeletingAf
; Line 336
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG74760
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN7@DeletingAf:
; Line 341
	push	OFFSET $SG74761
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 342
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 343
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 344
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 345
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 204				; 000000ccH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 216				; 000000d8H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Line 346
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+193]
	test	ecx, ecx
	je	SHORT $LN8@DeletingAf
; Line 348
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN8@DeletingAf:
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+297]
	test	ecx, ecx
	jne	SHORT $LN4@DeletingAf
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@DeletingAf
; Line 357
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClearCurState@CPercentPrinterState@@QAEXXZ ; CPercentPrinterState::ClearCurState
$LN3@DeletingAf:
; Line 359
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+297], 1
; Line 361
	jmp	SHORT $LN2@DeletingAf
$LN4@DeletingAf:
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+28]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], edx
	mov	DWORD PTR [ecx+28], eax
$LN2@DeletingAf:
; Line 366
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@DeletingAf
; Line 370
	push	OFFSET $SG74767
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 371
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 373
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@DeletingAf:
; Line 376
	xor	eax, eax
; Line 377
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeletingAfterArchiving@CUpdateCallbackConsole@@UAEJABVUString@@_N@Z ENDP ; CUpdateCallbackConsole::DeletingAfterArchiving
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ PROC	; CCallbackConsoleBase::ClosePercents_for_so, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.h
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+176]
	cmp	eax, DWORD PTR [edx+164]
	jne	SHORT $LN2@ClosePerce@2
; Line 82
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce@2:
; Line 83
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ENDP	; CCallbackConsoleBase::ClosePercents_for_so
_TEXT	ENDS
PUBLIC	?FinishDeletingAfterArchiving@CUpdateCallbackConsole@@UAEJXZ ; CUpdateCallbackConsole::FinishDeletingAfterArchiving
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinishDeletingAfterArchiving@CUpdateCallbackConsole@@UAEJXZ PROC ; CUpdateCallbackConsole::FinishDeletingAfterArchiving
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 381
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 382
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents2
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN1@FinishDele
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+297]
	test	edx, edx
	je	SHORT $LN1@FinishDele
; Line 384
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN1@FinishDele:
; Line 385
	xor	eax, eax
; Line 386
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinishDeletingAfterArchiving@CUpdateCallbackConsole@@UAEJXZ ENDP ; CUpdateCallbackConsole::FinishDeletingAfterArchiving
_TEXT	ENDS
PUBLIC	?CheckBreak@CUpdateCallbackConsole@@UAEJXZ	; CUpdateCallbackConsole::CheckBreak
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckBreak@CUpdateCallbackConsole@@UAEJXZ PROC		; CUpdateCallbackConsole::CheckBreak
; _this$ = ecx
; Line 389
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 391
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckBreak@CUpdateCallbackConsole@@UAEJXZ ENDP		; CUpdateCallbackConsole::CheckBreak
_TEXT	ENDS
PUBLIC	?TestBreakSignal@NConsoleClose@@YG_NXZ		; NConsoleClose::TestBreakSignal
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?CheckBreak2@@YGJXZ PROC				; CheckBreak2
; Line 37
	push	ebp
	mov	ebp, esp
; Line 38
	call	?TestBreakSignal@NConsoleClose@@YG_NXZ	; NConsoleClose::TestBreakSignal
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	and	eax, -2147467260			; 80004004H
; Line 39
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CheckBreak2@@YGJXZ ENDP				; CheckBreak2
_TEXT	ENDS
EXTRN	?g_BreakCounter@NConsoleClose@@3IA:DWORD	; NConsoleClose::g_BreakCounter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?TestBreakSignal@NConsoleClose@@YG_NXZ
_TEXT	SEGMENT
?TestBreakSignal@NConsoleClose@@YG_NXZ PROC		; NConsoleClose::TestBreakSignal, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\consoleclose.h
; Line 11
	push	ebp
	mov	ebp, esp
; Line 15
	xor	eax, eax
	cmp	DWORD PTR ?g_BreakCounter@NConsoleClose@@3IA, 0 ; NConsoleClose::g_BreakCounter
	setne	al
; Line 17
	pop	ebp
	ret	0
?TestBreakSignal@NConsoleClose@@YG_NXZ ENDP		; NConsoleClose::TestBreakSignal
_TEXT	ENDS
PUBLIC	?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z	; CUpdateCallbackConsole::SetNumItems
xdata$x	SEGMENT
__unwindtable$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z$0
__ehfuncinfo$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$74782 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_numItems$ = 8						; size = 8
?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z PROC	; CUpdateCallbackConsole::SetNumItems
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 402
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 403
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN1@SetNumItem
; Line 405
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
; Line 406
	lea	ecx, DWORD PTR _s$74782[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 407
	mov	ecx, DWORD PTR _numItems$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _numItems$[ebp]
	push	edx
	push	OFFSET $SG74783
	lea	eax, DWORD PTR _s$74782[ebp]
	push	eax
	call	?PrintPropPair@@YGXAAVAString@@PBD_K@Z	; PrintPropPair
; Line 408
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$74782[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 409
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$74782[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN1@SetNumItem:
; Line 410
	xor	eax, eax
; Line 411
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@SetNumItem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN8@SetNumItem:
	DD	1
	DD	$LN7@SetNumItem
$LN7@SetNumItem:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@SetNumItem
$LN5@SetNumItem:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z$0:
	lea	ecx, DWORD PTR _s$74782[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetNumItems@CUpdateCallbackConsole@@UAEJ_K@Z ENDP	; CUpdateCallbackConsole::SetNumItems
PUBLIC	?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z	; CUpdateCallbackConsole::SetTotal
xdata$x	SEGMENT
__unwindtable$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z$0
__ehfuncinfo$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T75991 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_size$ = 8						; size = 8
?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z PROC		; CUpdateCallbackConsole::SetTotal
; _this$ = ecx
; Line 414
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 415
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 416
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@SetTotal
; Line 418
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _size$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; Line 419
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@SetTotal:
; Line 421
	mov	DWORD PTR $T75991[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T75991[ebp]
; Line 422
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@SetTotal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@SetTotal:
	DD	1
	DD	$LN7@SetTotal
$LN7@SetTotal:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@SetTotal
$LN5@SetTotal:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetTotal@CUpdateCallbackConsole@@UAEJ_K@Z ENDP		; CUpdateCallbackConsole::SetTotal
PUBLIC	?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z ; CUpdateCallbackConsole::SetCompleted
xdata$x	SEGMENT
__unwindtable$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z$0
__ehfuncinfo$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T76001 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_completeValue$ = 8					; size = 4
?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z PROC	; CUpdateCallbackConsole::SetCompleted
; _this$ = ecx
; Line 425
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 426
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 427
	cmp	DWORD PTR _completeValue$[ebp], 0
	je	SHORT $LN2@SetComplet
; Line 429
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@SetComplet
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _completeValue$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], edx
; Line 432
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN2@SetComplet:
; Line 435
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76001[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76001[ebp]
; Line 436
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetComplet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN9@SetComplet:
	DD	1
	DD	$LN8@SetComplet
$LN8@SetComplet:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@SetComplet
$LN6@SetComplet:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetCompleted@CUpdateCallbackConsole@@UAEJPB_K@Z ENDP	; CUpdateCallbackConsole::SetCompleted
PUBLIC	?SetRatioInfo@CUpdateCallbackConsole@@UAEJPB_K0@Z ; CUpdateCallbackConsole::SetRatioInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetRatioInfo@CUpdateCallbackConsole@@UAEJPB_K0@Z PROC	; CUpdateCallbackConsole::SetRatioInfo
; _this$ = ecx
; Line 439
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 440
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 441
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetRatioInfo@CUpdateCallbackConsole@@UAEJPB_K0@Z ENDP	; CUpdateCallbackConsole::SetRatioInfo
_TEXT	ENDS
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z ; CCallbackConsoleBase::PrintProgress
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
xdata$x	SEGMENT
__unwindtable$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z$0
__ehfuncinfo$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv72 = -40						; size = 4
$T76014 = -36						; size = 4
_show2$ = -29						; size = 1
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_command$ = 12						; size = 4
_showInLog$ = 16					; size = 1
?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z PROC ; CCallbackConsoleBase::PrintProgress
; _this$ = ecx
; Line 444
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 445
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 447
	movzx	eax, BYTE PTR _showInLog$[ebp]
	test	eax, eax
	je	SHORT $LN12@PrintProgr
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+176], 0
	je	SHORT $LN12@PrintProgr
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN13@PrintProgr
$LN12@PrintProgr:
	mov	DWORD PTR tv72[ebp], 0
$LN13@PrintProgr:
	mov	dl, BYTE PTR tv72[ebp]
	mov	BYTE PTR _show2$[ebp], dl
; Line 449
	movzx	eax, BYTE PTR _show2$[ebp]
	test	eax, eax
	je	$LN9@PrintProgr
; Line 451
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
; Line 453
	mov	ecx, DWORD PTR _command$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 454
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN8@PrintProgr
; Line 455
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
$LN8@PrintProgr:
; Line 456
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+176]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 458
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 459
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN7@PrintProgr
; Line 460
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN7@PrintProgr:
; Line 461
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 208				; 000000d0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Line 462
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+176]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 463
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+185]
	test	eax, eax
	je	SHORT $LN9@PrintProgr
; Line 464
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+176]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN9@PrintProgr:
; Line 467
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@PrintProgr
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+188], 1
	jb	SHORT $LN4@PrintProgr
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 472
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 473
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+188], 1
	ja	SHORT $LN2@PrintProgr
	movzx	edx, BYTE PTR _show2$[ebp]
	test	edx, edx
	jne	SHORT $LN4@PrintProgr
$LN2@PrintProgr:
; Line 475
	mov	eax, DWORD PTR _command$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 476
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN4@PrintProgr
; Line 477
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN4@PrintProgr:
; Line 480
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN5@PrintProgr:
; Line 483
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76014[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76014[ebp]
; Line 484
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@PrintProgr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN18@PrintProgr:
	DD	1
	DD	$LN17@PrintProgr
$LN17@PrintProgr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@PrintProgr
$LN15@PrintProgr:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z ENDP ; CCallbackConsoleBase::PrintProgress
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
PUBLIC	?GetStream@CUpdateCallbackConsole@@UAEJPB_W_N1I@Z ; CUpdateCallbackConsole::GetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -12						; size = 4
_requiredLevel$ = -8					; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
___formal$ = 12						; size = 1
_isAnti$ = 16						; size = 1
_mode$ = 20						; size = 4
?GetStream@CUpdateCallbackConsole@@UAEJPB_W_N1I@Z PROC	; CUpdateCallbackConsole::GetStream
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 488
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+192]
	test	ecx, ecx
	je	SHORT $LN12@GetStream
; Line 489
	xor	eax, eax
	jmp	$LN13@GetStream
$LN12@GetStream:
; Line 491
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN10@GetStream
	mov	edx, DWORD PTR _name$[ebp]
	movzx	eax, WORD PTR [edx]
	test	eax, eax
	jne	SHORT $LN11@GetStream
$LN10@GetStream:
; Line 492
	mov	ecx, DWORD PTR _kEmptyFileAlias
	mov	DWORD PTR _name$[ebp], ecx
$LN11@GetStream:
; Line 494
	mov	DWORD PTR _requiredLevel$[ebp], 1
; Line 498
	cmp	DWORD PTR _mode$[ebp], 0
	je	SHORT $LN8@GetStream
	cmp	DWORD PTR _mode$[ebp], 1
	jne	SHORT $LN9@GetStream
$LN8@GetStream:
; Line 500
	movzx	edx, BYTE PTR _isAnti$[ebp]
	test	edx, edx
	je	SHORT $LN7@GetStream
; Line 501
	mov	DWORD PTR _s$[ebp], OFFSET $SG74840
	jmp	SHORT $LN6@GetStream
$LN7@GetStream:
; Line 502
	cmp	DWORD PTR _mode$[ebp], 0
	jne	SHORT $LN5@GetStream
; Line 503
	mov	DWORD PTR _s$[ebp], OFFSET $SG74843
; Line 504
	jmp	SHORT $LN6@GetStream
$LN5@GetStream:
; Line 505
	mov	DWORD PTR _s$[ebp], OFFSET $SG74845
$LN6@GetStream:
; Line 507
	jmp	SHORT $LN3@GetStream
$LN9@GetStream:
; Line 509
	mov	DWORD PTR _requiredLevel$[ebp], 3
; Line 510
	cmp	DWORD PTR _mode$[ebp], 2
	jne	SHORT $LN2@GetStream
; Line 511
	mov	DWORD PTR _s$[ebp], OFFSET $SG74848
; Line 512
	jmp	SHORT $LN3@GetStream
$LN2@GetStream:
; Line 513
	mov	DWORD PTR _s$[ebp], OFFSET $SG74850
$LN3@GetStream:
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	cmp	ecx, DWORD PTR _requiredLevel$[ebp]
	setae	dl
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z ; CCallbackConsoleBase::PrintProgress
$LN13@GetStream:
; Line 517
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetStream@CUpdateCallbackConsole@@UAEJPB_W_N1I@Z ENDP	; CUpdateCallbackConsole::GetStream
_TEXT	ENDS
PUBLIC	?OpenFileError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z ; CUpdateCallbackConsole::OpenFileError
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?OpenFileError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z PROC ; CUpdateCallbackConsole::OpenFileError
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::OpenFileError_Base
; Line 522
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OpenFileError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z ENDP ; CUpdateCallbackConsole::OpenFileError
_TEXT	ENDS
PUBLIC	?ReadingFileError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z ; CUpdateCallbackConsole::ReadingFileError
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?ReadingFileError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z PROC ; CUpdateCallbackConsole::ReadingFileError
; _this$ = ecx
; Line 525
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 526
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadingFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::ReadingFileError_Base
; Line 527
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReadingFileError@CUpdateCallbackConsole@@UAEJABVUString@@K@Z ENDP ; CUpdateCallbackConsole::ReadingFileError
_TEXT	ENDS
PUBLIC	?SetOperationResult@CUpdateCallbackConsole@@UAEJH@Z ; CUpdateCallbackConsole::SetOperationResult
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T76031 = -20						; size = 4
_lock$ = -12						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?SetOperationResult@CUpdateCallbackConsole@@UAEJH@Z PROC ; CUpdateCallbackConsole::SetOperationResult
; _this$ = ecx
; Line 530
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 531
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+28]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	DWORD PTR [eax+28], edx
; Line 533
	mov	DWORD PTR $T76031[ebp], 0
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76031[ebp]
; Line 534
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetOperati
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@SetOperati:
	DD	1
	DD	$LN5@SetOperati
$LN5@SetOperati:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@SetOperati
$LN4@SetOperati:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?SetOperationResult@CUpdateCallbackConsole@@UAEJH@Z ENDP ; CUpdateCallbackConsole::SetOperationResult
_TEXT	ENDS
PUBLIC	?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z ; CUpdateCallbackConsole::ReportExtractResult
EXTRN	?SetExtractErrorMessage@@YGXHHAAVAString@@@Z:PROC ; SetExtractErrorMessage
xdata$x	SEGMENT
__unwindtable$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z$0
__ehfuncinfo$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$74881 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_opRes$ = 8						; size = 4
_isEncrypted$ = 12					; size = 4
_name$ = 16						; size = 4
?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z PROC ; CUpdateCallbackConsole::ReportExtractResult
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 542
	cmp	DWORD PTR _opRes$[ebp], 0
	je	$LN3@ReportExtr
; Line 544
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents2
; Line 546
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+188], 0
	je	$LN2@ReportExtr
; Line 548
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+184], 0
	je	SHORT $LN1@ReportExtr
; Line 549
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN1@ReportExtr:
; Line 551
	lea	ecx, DWORD PTR _s$74881[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 552
	lea	eax, DWORD PTR _s$74881[ebp]
	push	eax
	mov	ecx, DWORD PTR _isEncrypted$[ebp]
	push	ecx
	mov	edx, DWORD PTR _opRes$[ebp]
	push	edx
	call	?SetExtractErrorMessage@@YGXHHAAVAString@@@Z ; SetExtractErrorMessage
; Line 553
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG74882
	lea	ecx, DWORD PTR _s$74881[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+188]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 554
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+188]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
; Line 555
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$74881[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN2@ReportExtr:
; Line 556
	xor	eax, eax
	jmp	SHORT $LN4@ReportExtr
$LN3@ReportExtr:
; Line 558
	xor	eax, eax
$LN4@ReportExtr:
; Line 559
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ReportExtr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN10@ReportExtr:
	DD	1
	DD	$LN9@ReportExtr
$LN9@ReportExtr:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN7@ReportExtr
$LN7@ReportExtr:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z$0:
	lea	ecx, DWORD PTR _s$74881[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReportExtractResult@CUpdateCallbackConsole@@UAEJHHPB_W@Z ENDP ; CUpdateCallbackConsole::ReportExtractResult
PUBLIC	__$ArrayPad$
PUBLIC	?ReportUpdateOpeartion@CUpdateCallbackConsole@@UAEJIPB_W_N@Z ; CUpdateCallbackConsole::ReportUpdateOpeartion
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv64 = -44						; size = 4
_requiredLevel$ = -40					; size = 4
_s$ = -36						; size = 4
_temp$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_op$ = 8						; size = 4
_name$ = 12						; size = 4
___formal$ = 16						; size = 1
?ReportUpdateOpeartion@CUpdateCallbackConsole@@UAEJIPB_W_N@Z PROC ; CUpdateCallbackConsole::ReportUpdateOpeartion
; _this$ = ecx
; Line 563
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 569
	mov	DWORD PTR _requiredLevel$[ebp], 1
; Line 571
	mov	eax, DWORD PTR _op$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 7
	ja	SHORT $LN1@ReportUpda
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN17@ReportUpda[ecx*4]
$LN9@ReportUpda:
; Line 573
	mov	DWORD PTR _s$[ebp], OFFSET $SG74899
	jmp	$LN10@ReportUpda
$LN8@ReportUpda:
; Line 574
	mov	DWORD PTR _s$[ebp], OFFSET $SG74901
	jmp	SHORT $LN10@ReportUpda
$LN7@ReportUpda:
; Line 575
	mov	DWORD PTR _s$[ebp], OFFSET $SG74903
	mov	DWORD PTR _requiredLevel$[ebp], 3
	jmp	SHORT $LN10@ReportUpda
$LN6@ReportUpda:
; Line 576
	mov	DWORD PTR _s$[ebp], OFFSET $SG74905
	mov	DWORD PTR _requiredLevel$[ebp], 3
	jmp	SHORT $LN10@ReportUpda
$LN5@ReportUpda:
; Line 577
	mov	DWORD PTR _s$[ebp], OFFSET $SG74907
	mov	DWORD PTR _requiredLevel$[ebp], 2
	jmp	SHORT $LN10@ReportUpda
$LN4@ReportUpda:
; Line 578
	mov	DWORD PTR _s$[ebp], OFFSET $SG74909
	mov	DWORD PTR _requiredLevel$[ebp], 2
	jmp	SHORT $LN10@ReportUpda
$LN3@ReportUpda:
; Line 579
	mov	DWORD PTR _s$[ebp], OFFSET $SG74911
	mov	DWORD PTR _requiredLevel$[ebp], 3
	jmp	SHORT $LN10@ReportUpda
$LN2@ReportUpda:
; Line 580
	mov	DWORD PTR _s$[ebp], OFFSET $SG74913
	mov	DWORD PTR _requiredLevel$[ebp], 100	; 00000064H
	jmp	SHORT $LN10@ReportUpda
$LN1@ReportUpda:
; Line 583
	mov	BYTE PTR _temp$[ebp], 111		; 0000006fH
; Line 584
	mov	BYTE PTR _temp$[ebp+1], 112		; 00000070H
; Line 585
	lea	edx, DWORD PTR _temp$[ebp+2]
	push	edx
	mov	eax, DWORD PTR _op$[ebp]
	xor	ecx, ecx
	push	ecx
	push	eax
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 586
	lea	edx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _s$[ebp], edx
$LN10@ReportUpda:
; Line 590
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	cmp	ecx, DWORD PTR _requiredLevel$[ebp]
	setae	dl
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z ; CCallbackConsoleBase::PrintProgress
; Line 591
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@ReportUpda
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN16@ReportUpda:
	DD	1
	DD	$LN15@ReportUpda
$LN15@ReportUpda:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN14@ReportUpda
$LN14@ReportUpda:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
	npad	3
$LN17@ReportUpda:
	DD	$LN9@ReportUpda
	DD	$LN8@ReportUpda
	DD	$LN7@ReportUpda
	DD	$LN6@ReportUpda
	DD	$LN5@ReportUpda
	DD	$LN4@ReportUpda
	DD	$LN3@ReportUpda
	DD	$LN2@ReportUpda
?ReportUpdateOpeartion@CUpdateCallbackConsole@@UAEJIPB_W_N@Z ENDP ; CUpdateCallbackConsole::ReportUpdateOpeartion
_TEXT	ENDS
PUBLIC	?StringToBstr@@YGJPB_WPAPA_W@Z			; StringToBstr
PUBLIC	?BoolToInt@@YGH_N@Z				; BoolToInt
PUBLIC	?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z ; CUpdateCallbackConsole::CryptoGetTextPassword2
EXTRN	?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z:PROC ; GetPassword
xdata$x	SEGMENT
__catchsym$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$0
__tryblocktable$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$3
__unwindtable$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv131 = -56						; size = 4
tv130 = -52						; size = 4
tv129 = -48						; size = 4
tv94 = -44						; size = 4
tv128 = -40						; size = 4
$T76053 = -36						; size = 4
$T76052 = -32						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_passwordIsDefined$ = 8					; size = 4
_password$ = 12						; size = 4
?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z PROC ; CUpdateCallbackConsole::CryptoGetTextPassword2
; _this$ = ecx
; Line 609
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 610
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 612
	mov	eax, DWORD PTR _password$[ebp]
	mov	DWORD PTR [eax], 0
; Line 621
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+280]
	test	edx, edx
	jne	SHORT $LN2@CryptoGetT
; Line 623
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+296]
	test	ecx, ecx
	je	SHORT $LN2@CryptoGetT
; Line 625
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	lea	ecx, DWORD PTR $T76052[ebp]
	push	ecx
	call	?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z ; GetPassword
	mov	DWORD PTR tv128[ebp], eax
	mov	edx, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv94[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T76052[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+280], 1
$LN2@CryptoGetT:
; Line 629
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+280]
	push	eax
	call	?BoolToInt@@YGH_N@Z			; BoolToInt
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR _passwordIsDefined$[ebp]
	mov	edx, DWORD PTR tv129[ebp]
	mov	DWORD PTR [ecx], edx
; Line 630
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	call	?StringToBstr@@YGJPB_WPAPA_W@Z		; StringToBstr
	mov	DWORD PTR tv131[ebp], eax
	mov	eax, DWORD PTR tv131[ebp]
	jmp	SHORT $LN4@CryptoGetT
__catch$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$0:
; Line 634
	mov	DWORD PTR $T76053[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@CryptoGetT
	ret	0
	mov	eax, __tryend$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$1
	ret	0
__tryend$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN4@CryptoGetT
$LN10@CryptoGetT:
	mov	eax, DWORD PTR $T76053[ebp]
$LN4@CryptoGetT:
; Line 635
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z$2:
	lea	ecx, DWORD PTR $T76052[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoGetTextPassword2@CUpdateCallbackConsole@@UAEJPAHPAPA_W@Z ENDP ; CUpdateCallbackConsole::CryptoGetTextPassword2
EXTRN	__imp__SysAllocString@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StringToBstr@@YGJPB_WPAPA_W@Z
_TEXT	SEGMENT
_src$ = 8						; size = 4
_bstr$ = 12						; size = 4
?StringToBstr@@YGJPB_WPAPA_W@Z PROC			; StringToBstr, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 77
	push	ebp
	mov	ebp, esp
	push	esi
; Line 78
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	call	DWORD PTR __imp__SysAllocString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _bstr$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 79
	mov	edx, DWORD PTR _bstr$[ebp]
	mov	eax, DWORD PTR [edx]
	neg	eax
	sbb	eax, eax
	and	eax, 2147024882				; 7ff8fff2H
	add	eax, -2147024882			; 8007000eH
; Line 80
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?StringToBstr@@YGJPB_WPAPA_W@Z ENDP			; StringToBstr
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?BoolToInt@@YGH_N@Z
_TEXT	SEGMENT
_value$ = 8						; size = 1
?BoolToInt@@YGH_N@Z PROC				; BoolToInt, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 15
	push	ebp
	mov	ebp, esp
	movzx	eax, BYTE PTR _value$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	ebp
	ret	4
?BoolToInt@@YGH_N@Z ENDP				; BoolToInt
_TEXT	ENDS
PUBLIC	?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z ; CUpdateCallbackConsole::CryptoGetTextPassword
xdata$x	SEGMENT
__catchsym$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$0
__tryblocktable$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$3
__unwindtable$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv92 = -52						; size = 4
tv91 = -48						; size = 4
tv88 = -44						; size = 4
tv90 = -40						; size = 4
$T76072 = -36						; size = 4
$T76071 = -32						; size = 12
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_password$ = 8						; size = 4
?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z PROC ; CUpdateCallbackConsole::CryptoGetTextPassword
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 638
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-52], eax
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 639
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 641
	mov	eax, DWORD PTR _password$[ebp]
	mov	DWORD PTR [eax], 0
; Line 649
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+280]
	test	edx, edx
	jne	SHORT $LN1@CryptoGetT@2
; Line 652
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	lea	edx, DWORD PTR $T76071[ebp]
	push	edx
	call	?GetPassword@@YG?AVUString@@PAVCStdOutStream@@@Z ; GetPassword
	mov	DWORD PTR tv90[ebp], eax
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR tv88[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR tv88[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T76071[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 653
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+280], 1
$LN1@CryptoGetT@2:
; Line 656
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv91[ebp], eax
	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	?StringToBstr@@YGJPB_WPAPA_W@Z		; StringToBstr
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	jmp	SHORT $LN3@CryptoGetT@2
__catch$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$0:
; Line 659
	mov	DWORD PTR $T76072[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@CryptoGetT@2
	ret	0
	mov	eax, __tryend$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$1
	ret	0
__tryend$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN3@CryptoGetT@2
$LN9@CryptoGetT@2:
	mov	eax, DWORD PTR $T76072[ebp]
$LN3@CryptoGetT@2:
; Line 660
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z$2:
	lea	ecx, DWORD PTR $T76071[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoGetTextPassword@CUpdateCallbackConsole@@UAEJPAPA_W@Z ENDP ; CUpdateCallbackConsole::CryptoGetTextPassword
PUBLIC	?ShowDeleteFile@CUpdateCallbackConsole@@UAEJPB_W_N@Z ; CUpdateCallbackConsole::ShowDeleteFile
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
___formal$ = 12						; size = 1
?ShowDeleteFile@CUpdateCallbackConsole@@UAEJPB_W_N@Z PROC ; CUpdateCallbackConsole::ShowDeleteFile
; _this$ = ecx
; Line 663
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 664
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+192]
	test	ecx, ecx
	je	SHORT $LN4@ShowDelete
; Line 665
	xor	eax, eax
	jmp	SHORT $LN5@ShowDelete
$LN4@ShowDelete:
; Line 667
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 7
	jbe	SHORT $LN3@ShowDelete
; Line 669
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN1@ShowDelete
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@ShowDelete
$LN1@ShowDelete:
; Line 670
	mov	edx, DWORD PTR _kEmptyFileAlias
	mov	DWORD PTR _name$[ebp], edx
$LN2@ShowDelete:
; Line 671
	push	1
	push	OFFSET $SG74945
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?PrintProgress@CCallbackConsoleBase@@QAEJPB_WPBD_N@Z ; CCallbackConsoleBase::PrintProgress
	jmp	SHORT $LN5@ShowDelete
$LN3@ShowDelete:
; Line 673
	xor	eax, eax
$LN5@ShowDelete:
; Line 674
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ShowDeleteFile@CUpdateCallbackConsole@@UAEJPB_W_N@Z ENDP ; CUpdateCallbackConsole::ShowDeleteFile
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\common\myvector.h
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T76088 = -24						; size = 4
$T76087 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T76088[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T76088[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T76088[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T76087[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T76087[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T76088[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VCArc@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VCArc@@@@QBEIXZ PROC		; CObjectVector<CArc>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VCArc@@@@QBEIXZ ENDP		; CObjectVector<CArc>::Size
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z PROC	; CObjectVector<CArc>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ENDP	; CObjectVector<CArc>::operator[]
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@K@@AAEXXZ	; CRecordVector<unsigned long>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@K@@QAEIK@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@K@@QAEIK@Z PROC			; CRecordVector<unsigned long>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@K@@AAEXXZ ; CRecordVector<unsigned long>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@K@@QAEIK@Z ENDP			; CRecordVector<unsigned long>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@K@@AAEXXZ
_TEXT	SEGMENT
$T76113 = -20						; size = 4
$T76112 = -16						; size = 4
_p$75293 = -12						; size = 4
_newCapacity$75292 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@K@@AAEXXZ PROC	; CRecordVector<unsigned long>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$75292[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$75292[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T76112[ebp], eax
	mov	eax, DWORD PTR $T76112[ebp]
	mov	DWORD PTR _p$75293[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$75293[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T76113[ebp], edx
	mov	eax, DWORD PTR $T76113[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$75293[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$75292[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@K@@AAEXXZ ENDP	; CRecordVector<unsigned long>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T76117 = -20						; size = 4
$T76116 = -16						; size = 4
_p$75304 = -12						; size = 4
_newCapacity$75303 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@2
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$75303[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$75303[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T76116[ebp], eax
	mov	eax, DWORD PTR $T76116[ebp]
	mov	DWORD PTR _p$75304[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@2
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$75304[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@2:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T76117[ebp], edx
	mov	eax, DWORD PTR $T76117[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$75304[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$75303[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@2:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
_TEXT	ENDS
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_CriticalSection@@YAXXZ
text$yc	SEGMENT
??__Eg_CriticalSection@@YAXXZ PROC			; `dynamic initializer for 'g_CriticalSection'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.cpp
; Line 20
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	push	OFFSET ??__Fg_CriticalSection@@YAXXZ	; `dynamic atexit destructor for 'g_CriticalSection''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_CriticalSection@@YAXXZ ENDP			; `dynamic initializer for 'g_CriticalSection''
text$yc	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
_TEXT	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_CriticalSection@@YAXXZ
text$yd	SEGMENT
??__Fg_CriticalSection@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CriticalSection'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_CriticalSection@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CriticalSection''
text$yd	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
_TEXT	ENDS
_BSS	SEGMENT
_g_CriticalSection DB 018H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_CriticalSection$initializer$ DD FLAT:??__Eg_CriticalSection@@YAXXZ
CRT$XCU	ENDS
END

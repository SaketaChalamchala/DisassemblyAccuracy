; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\ImplodeDecoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
PUBLIC	??1CLzOutWindow@@QAE@XZ				; CLzOutWindow::~CLzOutWindow
PUBLIC	??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CDecoder<CInBuffer>::CDecoder<CInBuffer>
PUBLIC	??0CLzOutWindow@@QAE@XZ				; CLzOutWindow::CLzOutWindow
PUBLIC	??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@ ; NCompress::NImplode::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@ ; NCompress::NImplode::NDecoder::CCoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressSetDecoderProperties2@@QAE@XZ	; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ	; NCompress::NImplode::NDecoder::CCoder::CCoder
PUBLIC	??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@ ; NCompress::NImplode::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoder@NDecoder@NImplode@NCompress@@@8	; NCompress::NImplode::NDecoder::CCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCoder@NDecoder@NImplode@NCompress@@8	; NCompress::NImplode::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoder@NDecoder@NImplode@NCompress@@8	; NCompress::NImplode::NDecoder::CCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoder@NDecoder@NImplode@NCompress@@8 ; NCompress::NImplode::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetDecoderProperties2@@8	; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetDecoderProperties2@@@8	; ICompressSetDecoderProperties2 `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetDecoderProperties2@@8		; ICompressSetDecoderProperties2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetDecoderProperties2@@8		; ICompressSetDecoderProperties2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8	; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NImplode::NDecoder::CCoder::QueryInterface
PUBLIC	?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ ; NCompress::NImplode::NDecoder::CCoder::AddRef
PUBLIC	?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ ; NCompress::NImplode::NDecoder::CCoder::Release
PUBLIC	?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NImplode::NDecoder::CCoder::Code
PUBLIC	??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@ ; NCompress::NImplode::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NImplode::NDecoder::CCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ ; [thunk]:NCompress::NImplode::NDecoder::CCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ ; [thunk]:NCompress::NImplode::NDecoder::CCoder::Release`adjustor{4}'
PUBLIC	?SetDecoderProperties2@CCoder@NDecoder@NImplode@NCompress@@UAGJPBEI@Z ; NCompress::NImplode::NDecoder::CCoder::SetDecoderProperties2
EXTRN	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ:PROC ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
EXTRN	??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z:PROC ; NCompress::NImplode::NHuffman::CDecoder::CDecoder
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.cpp
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@ DD 00H ; NCompress::NImplode::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NImplode@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R17?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8 DD FLAT:??_R0?AUICompressSetDecoderProperties2@@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R2ICompressSetDecoderProperties2@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R3ICompressSetDecoderProperties2@@8 DD 00H		; ICompressSetDecoderProperties2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetDecoderProperties2@@@8
_DATA	SEGMENT
??_R0?AUICompressSetDecoderProperties2@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetDecoderProperties2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetDecoderProperties2@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetDecoderProperties2@@8 DD FLAT:??_R0?AUICompressSetDecoderProperties2@@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoder@NDecoder@NImplode@NCompress@@8 DD FLAT:??_R0?AVCCoder@NDecoder@NImplode@NCompress@@@8 ; NCompress::NImplode::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	SEGMENT
??_R2CCoder@NDecoder@NImplode@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCoder@NDecoder@NImplode@NCompress@@8 ; NCompress::NImplode::NDecoder::CCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetDecoderProperties2@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	SEGMENT
??_R3CCoder@NDecoder@NImplode@NCompress@@8 DD 00H	; NCompress::NImplode::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	06H
	DD	FLAT:??_R2CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoder@NDecoder@NImplode@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCoder@NDecoder@NImplode@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NImplode::NDecoder::CCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoder@NDecoder@NImplode@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NImplode::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NImplode@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NImplode@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@ DD FLAT:??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@ ; NCompress::NImplode::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ
	DD	FLAT:?SetDecoderProperties2@CCoder@NDecoder@NImplode@NCompress@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@ ; NCompress::NImplode::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$3
__ehfuncinfo$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ PROC	; NCompress::NImplode::NDecoder::CCoder::CCoder
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetDecoderProperties2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCoder@NDecoder@NImplode@NCompress@@6BICompressSetDecoderProperties2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CLzOutWindow@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	256					; 00000100H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z ; NCompress::NImplode::NHuffman::CDecoder::CDecoder
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	64					; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	call	??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z ; NCompress::NImplode::NHuffman::CDecoder::CDecoder
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	64					; 00000040H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	call	??0CDecoder@NHuffman@NImplode@NCompress@@QAE@I@Z ; NCompress::NImplode::NHuffman::CDecoder::CDecoder
; Line 69
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CLzOutWindow@@QAE@XZ
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
__unwindfunclet$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	jmp	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
__ehhandler$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCoder@NDecoder@NImplode@NCompress@@QAE@XZ ENDP	; NCompress::NImplode::NDecoder::CCoder::CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ICompressSetDecoderProperties2:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NImplode::NDecoder::CCoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.h
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN8@QueryInter
$LN7@QueryInter:
	mov	DWORD PTR tv75[ebp], 0
$LN8@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ICompressSetDecoderProperties2
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN10@QueryInter
$LN9@QueryInter:
	mov	DWORD PTR tv86[ebp], 0
$LN10@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN5@QueryInter
$LN3@QueryInter:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
	xor	eax, eax
$LN5@QueryInter:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NImplode::NDecoder::CCoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ PROC	; NCompress::NImplode::NDecoder::CCoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ ENDP	; NCompress::NImplode::NDecoder::CCoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z ; NCompress::NImplode::NDecoder::CCoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T67215 = -8						; size = 4
$T67214 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ PROC ; NCompress::NImplode::NDecoder::CCoder::Release, COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67215[ebp], edx
	mov	eax, DWORD PTR $T67215[ebp]
	mov	DWORD PTR $T67214[ebp], eax
	cmp	DWORD PTR $T67214[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T67214[ebp]
	call	??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ ENDP ; NCompress::NImplode::NDecoder::CCoder::Release
_TEXT	ENDS
PUBLIC	??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ	; NCompress::NImplode::NDecoder::CCoder::~CCoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z PROC	; NCompress::NImplode::NDecoder::CCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCoder@NDecoder@NImplode@NCompress@@QAEPAXI@Z ENDP	; NCompress::NImplode::NDecoder::CCoder::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$3
__ehfuncinfo$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ PROC	; NCompress::NImplode::NDecoder::CCoder::~CCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	call	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	call	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CLzOutWindow@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CLzOutWindow@@QAE@XZ
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
__unwindfunclet$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	jmp	??1CDecoder@NHuffman@NImplode@NCompress@@QAE@XZ ; NCompress::NImplode::NHuffman::CDecoder::~CDecoder
__ehhandler$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CCoder@NDecoder@NImplode@NCompress@@QAE@XZ ENDP	; NCompress::NImplode::NDecoder::CCoder::~CCoder
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::~CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::~CLzOutWindow
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
_TEXT	ENDS
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetDecoderProperties2@@6B@		; ICompressSetDecoderProperties2::`vftable'
PUBLIC	??_R4ICompressSetDecoderProperties2@@6B@	; ICompressSetDecoderProperties2::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetDecoderProperties2@@6B@
rdata$r	SEGMENT
??_R4ICompressSetDecoderProperties2@@6B@ DD 00H		; ICompressSetDecoderProperties2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetDecoderProperties2@@@8
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetDecoderProperties2@@6B@
CONST	SEGMENT
??_7ICompressSetDecoderProperties2@@6B@ DD FLAT:??_R4ICompressSetDecoderProperties2@@6B@ ; ICompressSetDecoderProperties2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetDecoderProperties2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetDecoderProperties2@@QAE@XZ PROC		; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetDecoderProperties2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetDecoderProperties2@@QAE@XZ ENDP		; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2
_TEXT	ENDS
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::CLzOutWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
PUBLIC	??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CBaseDecoder<CInBuffer>::CBaseDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC		; NBitl::CDecoder<CInBuffer>::CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP		; NBitl::CDecoder<CInBuffer>::CDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0CInBuffer@@QAE@XZ				; CInBuffer::CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC	; NBitl::CBaseDecoder<CInBuffer>::CBaseDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CInBuffer@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::CBaseDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	??0CInBufferBase@@QAE@XZ:PROC			; CInBufferBase::CInBufferBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBuffer@@QAE@XZ PROC				; CInBuffer::CInBuffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBuffer@@QAE@XZ ENDP				; CInBuffer::CInBuffer
_TEXT	ENDS
PUBLIC	__TI1?AVCException@NDecoder@NImplode@NCompress@@
PUBLIC	??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z ; NCompress::NImplode::NDecoder::CException::CException
PUBLIC	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
PUBLIC	?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z ; NCompress::NImplode::NDecoder::CCoder::ReadLevelItems
PUBLIC	__CTA1?AVCException@NDecoder@NImplode@NCompress@@
PUBLIC	__CT??_R0?AVCException@NDecoder@NImplode@NCompress@@@84
PUBLIC	??_R0?AVCException@NDecoder@NImplode@NCompress@@@8 ; NCompress::NImplode::NDecoder::CException `RTTI Type Descriptor'
EXTRN	?SetCodeLengths@CDecoder@NHuffman@NImplode@NCompress@@QAE_NPBE@Z:PROC ; NCompress::NImplode::NHuffman::CDecoder::SetCodeLengths
EXTRN	__CxxThrowException@8:PROC
;	COMDAT ??_R0?AVCException@NDecoder@NImplode@NCompress@@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.cpp
_DATA	SEGMENT
??_R0?AVCException@NDecoder@NImplode@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NImplode::NDecoder::CException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCException@NDecoder@NImplode@NCompress@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVCException@NDecoder@NImplode@NCompress@@@84
xdata$x	SEGMENT
__CT??_R0?AVCException@NDecoder@NImplode@NCompress@@@84 DD 00H
	DD	FLAT:??_R0?AVCException@NDecoder@NImplode@NCompress@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1?AVCException@NDecoder@NImplode@NCompress@@
xdata$x	SEGMENT
__CTA1?AVCException@NDecoder@NImplode@NCompress@@ DD 01H
	DD	FLAT:__CT??_R0?AVCException@NDecoder@NImplode@NCompress@@@84
xdata$x	ENDS
;	COMDAT __TI1?AVCException@NDecoder@NImplode@NCompress@@
xdata$x	SEGMENT
__TI1?AVCException@NDecoder@NImplode@NCompress@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCException@NDecoder@NImplode@NCompress@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67266 = -36						; size = 4
$T67265 = -32						; size = 4
_j$66935 = -28						; size = 4
_rep$66926 = -24					; size = 4
_level$66925 = -20					; size = 4
_i$66921 = -16						; size = 4
_currentIndex$ = -12					; size = 4
_numCodedStructures$ = -8				; size = 4
_this$ = -4						; size = 4
_decoder$ = 8						; size = 4
_levels$ = 12						; size = 4
_numLevelItems$ = 16					; size = 4
?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z PROC ; NCompress::NImplode::NDecoder::CCoder::ReadLevelItems
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	add	eax, 1
	mov	DWORD PTR _numCodedStructures$[ebp], eax
; Line 84
	mov	DWORD PTR _currentIndex$[ebp], 0
; Line 85
	mov	DWORD PTR _i$66921[ebp], 0
	jmp	SHORT $LN8@ReadLevelI
$LN7@ReadLevelI:
	mov	eax, DWORD PTR _i$66921[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66921[ebp], eax
$LN8@ReadLevelI:
	mov	ecx, DWORD PTR _i$66921[ebp]
	cmp	ecx, DWORD PTR _numCodedStructures$[ebp]
	jge	$LN6@ReadLevelI
; Line 88
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	add	eax, 1
	mov	DWORD PTR _level$66925[ebp], eax
; Line 90
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	add	eax, 1
	mov	DWORD PTR _rep$66926[ebp], eax
; Line 91
	mov	edx, DWORD PTR _currentIndex$[ebp]
	add	edx, DWORD PTR _rep$66926[ebp]
	cmp	edx, DWORD PTR _numLevelItems$[ebp]
	jle	SHORT $LN5@ReadLevelI
; Line 92
	push	0
	lea	ecx, DWORD PTR $T67266[ebp]
	call	??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z ; NCompress::NImplode::NDecoder::CException::CException
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T67265[ebp], eax
	push	OFFSET __TI1?AVCException@NDecoder@NImplode@NCompress@@
	lea	ecx, DWORD PTR $T67265[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN5@ReadLevelI:
; Line 93
	mov	DWORD PTR _j$66935[ebp], 0
	jmp	SHORT $LN4@ReadLevelI
$LN3@ReadLevelI:
	mov	edx, DWORD PTR _j$66935[ebp]
	add	edx, 1
	mov	DWORD PTR _j$66935[ebp], edx
$LN4@ReadLevelI:
	mov	eax, DWORD PTR _j$66935[ebp]
	cmp	eax, DWORD PTR _rep$66926[ebp]
	jge	SHORT $LN2@ReadLevelI
; Line 94
	mov	ecx, DWORD PTR _levels$[ebp]
	add	ecx, DWORD PTR _currentIndex$[ebp]
	mov	dl, BYTE PTR _level$66925[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _currentIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _currentIndex$[ebp], eax
	jmp	SHORT $LN3@ReadLevelI
$LN2@ReadLevelI:
; Line 95
	jmp	$LN7@ReadLevelI
$LN6@ReadLevelI:
; Line 96
	mov	ecx, DWORD PTR _currentIndex$[ebp]
	cmp	ecx, DWORD PTR _numLevelItems$[ebp]
	je	SHORT $LN1@ReadLevelI
; Line 97
	xor	al, al
	jmp	SHORT $LN10@ReadLevelI
$LN1@ReadLevelI:
; Line 98
	mov	edx, DWORD PTR _levels$[ebp]
	push	edx
	mov	ecx, DWORD PTR _decoder$[ebp]
	call	?SetCodeLengths@CDecoder@NHuffman@NImplode@NCompress@@QAE_NPBE@Z ; NCompress::NImplode::NHuffman::CDecoder::SetCodeLengths
$LN10@ReadLevelI:
; Line 99
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z ENDP ; NCompress::NImplode::NDecoder::CCoder::ReadLevelItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cause$ = 8						; size = 4
??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z PROC ; NCompress::NImplode::NDecoder::CException::CException, COMDAT
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cause$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CException@NDecoder@NImplode@NCompress@@QAE@W4ECauseType@0123@@Z ENDP ; NCompress::NImplode::NDecoder::CException::CException
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReadTables@CCoder@NDecoder@NImplode@NCompress@@AAE_NXZ ; NCompress::NImplode::NDecoder::CCoder::ReadTables
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_distanceLevels$ = -412					; size = 64
_lengthLevels$ = -340					; size = 64
_literalLevels$66947 = -268				; size = 256
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ReadTables@CCoder@NDecoder@NImplode@NCompress@@AAE_NXZ PROC ; NCompress::NImplode::NDecoder::CCoder::ReadTables
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 416				; 000001a0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+569]
	test	ecx, ecx
	je	SHORT $LN3@ReadTables
; Line 107
	push	256					; 00000100H
	lea	edx, DWORD PTR _literalLevels$66947[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z ; NCompress::NImplode::NDecoder::CCoder::ReadLevelItems
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@ReadTables
; Line 108
	xor	al, al
	jmp	SHORT $LN4@ReadTables
$LN3@ReadTables:
; Line 112
	push	64					; 00000040H
	lea	edx, DWORD PTR _lengthLevels$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 264				; 00000108H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z ; NCompress::NImplode::NDecoder::CCoder::ReadLevelItems
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@ReadTables
; Line 113
	xor	al, al
	jmp	SHORT $LN4@ReadTables
$LN1@ReadTables:
; Line 116
	push	64					; 00000040H
	lea	edx, DWORD PTR _distanceLevels$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 416				; 000001a0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadLevelItems@CCoder@NDecoder@NImplode@NCompress@@AAE_NAAVCDecoder@NHuffman@34@PAEH@Z ; NCompress::NImplode::NDecoder::CCoder::ReadLevelItems
$LN4@ReadTables:
; Line 117
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@ReadTables
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@ReadTables:
	DD	3
	DD	$LN9@ReadTables
$LN9@ReadTables:
	DD	-268					; fffffef4H
	DD	256					; 00000100H
	DD	$LN6@ReadTables
	DD	-340					; fffffeacH
	DD	64					; 00000040H
	DD	$LN7@ReadTables
	DD	-412					; fffffe64H
	DD	64					; 00000040H
	DD	$LN8@ReadTables
$LN8@ReadTables:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN7@ReadTables:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN6@ReadTables:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
?ReadTables@CCoder@NDecoder@NImplode@NCompress@@AAE_NXZ ENDP ; NCompress::NImplode::NDecoder::CCoder::ReadTables
_TEXT	ENDS
PUBLIC	?CopyBlock@CLzOutWindow@@QAE_NII@Z		; CLzOutWindow::CopyBlock
PUBLIC	?PutByte@CLzOutWindow@@QAEXE@Z			; CLzOutWindow::PutByte
PUBLIC	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
PUBLIC	?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ	; NBitl::CDecoder<CInBuffer>::Init
PUBLIC	?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z ; NBitl::CBaseDecoder<CInBuffer>::SetStream
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
PUBLIC	?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ; NBitl::CBaseDecoder<CInBuffer>::Create
PUBLIC	?CodeReal@CCoder@NDecoder@NImplode@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NImplode::NDecoder::CCoder::CodeReal
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
EXTRN	?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z:PROC ; NCompress::NImplode::NHuffman::CDecoder::DecodeSymbol
EXTRN	?Init@CLzOutWindow@@QAEX_N@Z:PROC		; CLzOutWindow::Init
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
EXTRN	__aullrem:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv316 = -88						; size = 8
tv271 = -80						; size = 8
_temp$66995 = -72					; size = 4
_b$66993 = -65						; size = 1
_length$66986 = -64					; size = 4
_lengthSymbol$66983 = -60				; size = 4
_distance$66980 = -56					; size = 4
_lowDistBits$66979 = -52				; size = 4
___result_$66975 = -48					; size = 4
_packSize$66974 = -40					; size = 8
_unPackSize$ = -28					; size = 8
_pos$ = -16						; size = 8
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
___formal$ = 16						; size = 4
_outSize$ = 20						; size = 4
_progress$ = 24						; size = 4
?CodeReal@CCoder@NDecoder@NImplode@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NImplode::NDecoder::CCoder::CodeReal
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	push	1048576					; 00100000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ; NBitl::CBaseDecoder<CInBuffer>::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN20@CodeReal
; Line 133
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN21@CodeReal
$LN20@CodeReal:
; Line 134
	mov	ecx, DWORD PTR _kHistorySize
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN19@CodeReal
; Line 135
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN21@CodeReal
$LN19@CodeReal:
; Line 136
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN18@CodeReal
; Line 137
	mov	eax, -2147024809			; 80070057H
	jmp	$LN21@CodeReal
$LN18@CodeReal:
; Line 138
	mov	DWORD PTR _pos$[ebp], 0
	mov	DWORD PTR _pos$[ebp+4], 0
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _unPackSize$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _unPackSize$[ebp+4], edx
; Line 140
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Line 141
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Init@CLzOutWindow@@QAEX_N@Z		; CLzOutWindow::Init
; Line 142
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z ; NBitl::CBaseDecoder<CInBuffer>::SetStream
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Init
; Line 146
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadTables@CCoder@NDecoder@NImplode@NCompress@@AAE_NXZ ; NCompress::NImplode::NDecoder::CCoder::ReadTables
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN16@CodeReal
; Line 147
	mov	eax, 1
	jmp	$LN21@CodeReal
$LN16@CodeReal:
; Line 149
	mov	eax, DWORD PTR _pos$[ebp+4]
	cmp	eax, DWORD PTR _unPackSize$[ebp+4]
	ja	$LN15@CodeReal
	jb	SHORT $LN23@CodeReal
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR _unPackSize$[ebp]
	jae	$LN15@CodeReal
$LN23@CodeReal:
; Line 151
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN14@CodeReal
	push	0
	push	65536					; 00010000H
	mov	edx, DWORD PTR _pos$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	call	__aullrem
	mov	DWORD PTR tv271[ebp], eax
	mov	DWORD PTR tv271[ebp+4], edx
	mov	ecx, DWORD PTR tv271[ebp]
	or	ecx, DWORD PTR tv271[ebp+4]
	jne	SHORT $LN14@CodeReal
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
	mov	DWORD PTR _packSize$66974[ebp], eax
	mov	DWORD PTR _packSize$66974[ebp+4], edx
; Line 154
	mov	esi, esp
	lea	edx, DWORD PTR _pos$[ebp]
	push	edx
	lea	eax, DWORD PTR _packSize$66974[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result_$66975[ebp], eax
	cmp	DWORD PTR ___result_$66975[ebp], 0
	je	SHORT $LN14@CodeReal
	mov	eax, DWORD PTR ___result_$66975[ebp]
	jmp	$LN21@CodeReal
$LN14@CodeReal:
; Line 156
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	test	eax, eax
	jne	$LN12@CodeReal
; Line 158
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+572]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	mov	DWORD PTR _lowDistBits$66979[ebp], eax
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 416				; 000001a0H
	call	?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NImplode::NHuffman::CDecoder::DecodeSymbol
	mov	DWORD PTR _distance$66980[ebp], eax
; Line 160
	cmp	DWORD PTR _distance$66980[ebp], 64	; 00000040H
	jb	SHORT $LN11@CodeReal
; Line 161
	mov	eax, 1
	jmp	$LN21@CodeReal
$LN11@CodeReal:
; Line 162
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$66980[ebp]
	mov	ecx, DWORD PTR [edx+572]
	shl	eax, cl
	add	eax, DWORD PTR _lowDistBits$66979[ebp]
	mov	DWORD PTR _distance$66980[ebp], eax
; Line 163
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	call	?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NImplode::NHuffman::CDecoder::DecodeSymbol
	mov	DWORD PTR _lengthSymbol$66983[ebp], eax
; Line 164
	cmp	DWORD PTR _lengthSymbol$66983[ebp], 64	; 00000040H
	jb	SHORT $LN10@CodeReal
; Line 165
	mov	eax, 1
	jmp	$LN21@CodeReal
$LN10@CodeReal:
; Line 166
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _lengthSymbol$66983[ebp]
	add	eax, DWORD PTR [edx+576]
	mov	DWORD PTR _length$66986[ebp], eax
; Line 167
	cmp	DWORD PTR _lengthSymbol$66983[ebp], 63	; 0000003fH
	jne	SHORT $LN8@CodeReal
; Line 168
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	add	eax, DWORD PTR _length$66986[ebp]
	mov	DWORD PTR _length$66986[ebp], eax
$LN8@CodeReal:
; Line 169
	mov	ecx, DWORD PTR _distance$66980[ebp]
	xor	edx, edx
	mov	DWORD PTR tv316[ebp], ecx
	mov	DWORD PTR tv316[ebp+4], edx
	mov	eax, DWORD PTR tv316[ebp+4]
	cmp	eax, DWORD PTR _pos$[ebp+4]
	jb	SHORT $LN7@CodeReal
	ja	SHORT $LN24@CodeReal
	mov	ecx, DWORD PTR tv316[ebp]
	cmp	ecx, DWORD PTR _pos$[ebp]
	jb	SHORT $LN7@CodeReal
$LN24@CodeReal:
	cmp	DWORD PTR _length$66986[ebp], 0
	jbe	SHORT $LN7@CodeReal
; Line 171
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 172
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _pos$[ebp+4]
	adc	eax, 0
	mov	DWORD PTR _pos$[ebp], edx
	mov	DWORD PTR _pos$[ebp+4], eax
; Line 173
	mov	ecx, DWORD PTR _length$66986[ebp]
	sub	ecx, 1
	mov	DWORD PTR _length$66986[ebp], ecx
; Line 174
	jmp	SHORT $LN8@CodeReal
$LN7@CodeReal:
; Line 175
	cmp	DWORD PTR _length$66986[ebp], 0
	jbe	SHORT $LN6@CodeReal
; Line 176
	mov	edx, DWORD PTR _length$66986[ebp]
	push	edx
	mov	eax, DWORD PTR _distance$66980[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?CopyBlock@CLzOutWindow@@QAE_NII@Z	; CLzOutWindow::CopyBlock
$LN6@CodeReal:
; Line 177
	mov	ecx, DWORD PTR _length$66986[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _pos$[ebp]
	adc	edx, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR _pos$[ebp], ecx
	mov	DWORD PTR _pos$[ebp+4], edx
; Line 179
	jmp	SHORT $LN5@CodeReal
$LN12@CodeReal:
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+569]
	test	ecx, ecx
	je	SHORT $LN4@CodeReal
; Line 184
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	?DecodeSymbol@CDecoder@NHuffman@NImplode@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NImplode::NHuffman::CDecoder::DecodeSymbol
	mov	DWORD PTR _temp$66995[ebp], eax
; Line 185
	cmp	DWORD PTR _temp$66995[ebp], 256		; 00000100H
	jb	SHORT $LN3@CodeReal
; Line 186
	mov	eax, 1
	jmp	SHORT $LN21@CodeReal
$LN3@CodeReal:
; Line 187
	mov	al, BYTE PTR _temp$66995[ebp]
	mov	BYTE PTR _b$66993[ebp], al
; Line 189
	jmp	SHORT $LN2@CodeReal
$LN4@CodeReal:
; Line 190
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	mov	BYTE PTR _b$66993[ebp], al
$LN2@CodeReal:
; Line 191
	movzx	ecx, BYTE PTR _b$66993[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 192
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _pos$[ebp+4]
	adc	eax, 0
	mov	DWORD PTR _pos$[ebp], edx
	mov	DWORD PTR _pos$[ebp+4], eax
$LN5@CodeReal:
; Line 194
	jmp	$LN16@CodeReal
$LN15@CodeReal:
; Line 195
	mov	ecx, DWORD PTR _pos$[ebp+4]
	cmp	ecx, DWORD PTR _unPackSize$[ebp+4]
	jb	SHORT $LN1@CodeReal
	ja	SHORT $LN25@CodeReal
	mov	edx, DWORD PTR _pos$[ebp]
	cmp	edx, DWORD PTR _unPackSize$[ebp]
	jbe	SHORT $LN1@CodeReal
$LN25@CodeReal:
; Line 196
	mov	eax, 1
	jmp	SHORT $LN21@CodeReal
$LN1@CodeReal:
; Line 197
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
$LN21@CodeReal:
; Line 198
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN29@CodeReal:
	DD	2
	DD	$LN28@CodeReal
$LN28@CodeReal:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN26@CodeReal
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN27@CodeReal
$LN27@CodeReal:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN26@CodeReal:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?CodeReal@CCoder@NDecoder@NImplode@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NImplode::NDecoder::CCoder::CodeReal
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyBlock@CLzOutWindow@@QAE_NII@Z
_TEXT	SEGMENT
_pos2$66676 = -20					; size = 4
_dest$66668 = -16					; size = 4
_src$66667 = -12					; size = 4
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
_len$ = 12						; size = 4
?CopyBlock@CLzOutWindow@@QAE_NII@Z PROC			; CLzOutWindow::CopyBlock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzoutwindow.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN13@CopyBlock
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+36]
	test	edx, edx
	je	SHORT $LN11@CopyBlock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _distance$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN12@CopyBlock
$LN11@CopyBlock:
; Line 24
	xor	al, al
	jmp	$LN14@CopyBlock
$LN12@CopyBlock:
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _pos$[ebp], eax
$LN13@CopyBlock:
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR _pos$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _src$66667[ebp], ecx
; Line 30
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _dest$66668[ebp], eax
; Line 31
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN9@CopyBlock:
; Line 33
	mov	edx, DWORD PTR _dest$66668[ebp]
	mov	eax, DWORD PTR _src$66667[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _dest$66668[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$66668[ebp], edx
	mov	eax, DWORD PTR _src$66667[ebp]
	add	eax, 1
	mov	DWORD PTR _src$66667[ebp], eax
; Line 34
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	jne	SHORT $LN9@CopyBlock
; Line 36
	jmp	SHORT $LN6@CopyBlock
$LN5@CopyBlock:
; Line 39
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN2@CopyBlock
; Line 40
	mov	DWORD PTR _pos$[ebp], 0
$LN2@CopyBlock:
; Line 41
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pos2$66676[ebp], edx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _pos2$66676[ebp]
	mov	esi, DWORD PTR _pos$[ebp]
	mov	cl, BYTE PTR [ecx+esi]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _pos2$66676[ebp]
	add	edx, 1
	mov	DWORD PTR _pos2$66676[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos2$66676[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos2$66676[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@CopyBlock
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN4@CopyBlock:
; Line 47
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 1
	mov	DWORD PTR _len$[ebp], edx
	jne	SHORT $LN5@CopyBlock
$LN6@CopyBlock:
; Line 48
	mov	al, 1
$LN14@CopyBlock:
; Line 49
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyBlock@CLzOutWindow@@QAE_NII@Z ENDP			; CLzOutWindow::CopyBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PutByte@CLzOutWindow@@QAEXE@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?PutByte@CLzOutWindow@@QAEXE@Z PROC			; CLzOutWindow::PutByte, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 54
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN2@PutByte
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@PutByte:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PutByte@CLzOutWindow@@QAEXE@Z ENDP			; CLzOutWindow::PutByte
_TEXT	ENDS
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
;	COMDAT ??_R0?AUCOutBufferException@@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.cpp
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
__catchsym$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3 DD 09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1
__ehfuncinfo$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv78 = -40						; size = 4
$T67295 = -36						; size = 4
$T67294 = -32						; size = 4
_e$67012 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
_inSize$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NImplode::NDecoder::CCoder::Code
; Line 202
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 203
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CCoder@NDecoder@NImplode@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NImplode::NDecoder::CCoder::CodeReal
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	jmp	SHORT $LN2@Code
__catch$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
; Line 204
	mov	edx, DWORD PTR _e$67012[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T67294[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN8@Code
	ret	0
	mov	eax, __tryend$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
	ret	0
__catch$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1:
; Line 205
	mov	DWORD PTR $T67295[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@Code
	ret	0
	mov	eax, __tryend$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
	ret	0
__tryend$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Code
$LN10@Code:
	mov	eax, DWORD PTR $T67295[ebp]
	jmp	SHORT $LN2@Code
$LN9@Code:
	jmp	SHORT $LN2@Code
$LN8@Code:
; Line 204
	mov	eax, DWORD PTR $T67294[ebp]
$LN2@Code:
; Line 206
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Code
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN16@Code:
	DD	1
	DD	$LN15@Code
$LN15@Code:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN13@Code
$LN13@Code:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Code@CCoder@NDecoder@NImplode@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NImplode::NDecoder::CCoder::Code
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_flag$ = -1						; size = 1
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?SetDecoderProperties2@CCoder@NDecoder@NImplode@NCompress@@UAGJPBEI@Z PROC ; NCompress::NImplode::NDecoder::CCoder::SetDecoderProperties2
; Line 209
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 210
	cmp	DWORD PTR _size$[ebp], 1
	jae	SHORT $LN1@SetDecoder
; Line 211
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@SetDecoder
$LN1@SetDecoder:
; Line 212
	mov	eax, DWORD PTR _data$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _flag$[ebp], cl
; Line 213
	movzx	edx, BYTE PTR _flag$[ebp]
	and	edx, 2
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+564], dl
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+564]
	neg	edx
	sbb	edx, edx
	neg	edx
	add	edx, 6
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+568], edx
; Line 217
	movzx	ecx, BYTE PTR _flag$[ebp]
	and	ecx, 4
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+565], cl
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+565]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+572], ecx
; Line 221
	xor	eax, eax
$LN2@SetDecoder:
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetDecoderProperties2@CCoder@NDecoder@NImplode@NCompress@@UAGJPBEI@Z ENDP ; NCompress::NImplode::NDecoder::CCoder::SetDecoderProperties2
_TEXT	ENDS
PUBLIC	?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ	; NBitl::CBaseDecoder<CInBuffer>::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CBaseDecoder<CInBuffer>::Init
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 90
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::Init
_TEXT	ENDS
PUBLIC	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z	; NBitl::CDecoder<CInBuffer>::MovePos
PUBLIC	?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Normalize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z PROC	; NBitl::CDecoder<CInBuffer>::ReadBits, COMDAT
; _this$ = ecx
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Normalize
; Line 117
	mov	eax, 1
	mov	ecx, DWORD PTR _numBits$[ebp]
	shl	eax, cl
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR _res$[ebp], eax
; Line 118
	mov	edx, DWORD PTR _numBits$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
; Line 119
	mov	eax, DWORD PTR _res$[ebp]
; Line 120
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ENDP	; NBitl::CDecoder<CInBuffer>::ReadBits
_TEXT	ENDS
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z PROC ; NBitl::CBaseDecoder<CInBuffer>::Create, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ENDP ; NBitl::CBaseDecoder<CInBuffer>::Create
_TEXT	ENDS
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z PROC ; NBitl::CBaseDecoder<CInBuffer>::SetStream, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z ENDP ; NBitl::CBaseDecoder<CInBuffer>::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 32					; 00000020H
	sub	esi, DWORD PTR [ecx]
	shr	esi, 3
	xor	ecx, ecx
	sub	eax, esi
	sbb	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
_TEXT	ENDS
PUBLIC	?ReadByte@CInBufferBase@@QAEEXZ			; CInBufferBase::ReadByte
EXTRN	?kInvertTable@NBitl@@3PAEA:BYTE			; NBitl::kInvertTable
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_b$67043 = -5						; size = 1
_this$ = -4						; size = 4
?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::Normalize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	jmp	SHORT $LN3@Normalize
$LN2@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN3@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 8
	jb	SHORT $LN4@Normalize
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	mov	BYTE PTR _b$67043[ebp], al
; Line 97
	movzx	edx, BYTE PTR _b$67043[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR [eax]
	shl	edx, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], edx
; Line 98
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 8
	movzx	eax, BYTE PTR _b$67043[ebp]
	movzx	ecx, BYTE PTR ?kInvertTable@NBitl@@3PAEA[eax]
	or	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 99
	jmp	SHORT $LN2@Normalize
$LN4@Normalize:
; Line 100
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::Normalize
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAEEXZ
_TEXT	SEGMENT
tv70 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte@CInBufferBase@@QAEEXZ PROC			; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv70[ebp], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	al, BYTE PTR tv70[ebp]
$LN2@ReadByte:
; Line 76
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CInBufferBase@@QAEEXZ ENDP			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z PROC	; NBitl::CDecoder<CInBuffer>::MovePos, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shr	edx, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], edx
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	4
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ENDP	; NBitl::CDecoder<CInBuffer>::MovePos
_TEXT	ENDS
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CBaseDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 32			; 00000020H
; Line 38
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 39
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NImplode::NDecoder::CCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ ; NCompress::NImplode::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NImplode::NDecoder::CCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NImplode::NDecoder::CCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CCoder@NDecoder@NImplode@NCompress@@UAGKXZ ; NCompress::NImplode::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NImplode@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NImplode::NDecoder::CCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NImplode::NDecoder::CCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NImplode::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NImplode@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NImplode::NDecoder::CCoder::QueryInterface`adjustor{4}'
_TEXT	ENDS
PUBLIC	??$MyMax@H@@YGHHH@Z				; MyMax<int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EkHistorySize@NDecoder@NImplode@NCompress@@YAXXZ
text$yc	SEGMENT
??__EkHistorySize@NDecoder@NImplode@NCompress@@YAXXZ PROC ; NCompress::NImplode::NDecoder::`dynamic initializer for 'kHistorySize'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.cpp
; Line 45
	push	ebp
	mov	ebp, esp
	push	6
	push	7
	call	??$MyMax@H@@YGHHH@Z			; MyMax<int>
	mov	edx, 1
	mov	ecx, eax
	shl	edx, cl
	shl	edx, 6
	mov	DWORD PTR _kHistorySize, edx
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EkHistorySize@NDecoder@NImplode@NCompress@@YAXXZ ENDP ; NCompress::NImplode::NDecoder::`dynamic initializer for 'kHistorySize''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??$MyMax@H@@YGHHH@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMax@H@@YGHHH@Z PROC				; MyMax<int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 9
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jle	SHORT $LN3@MyMax
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMax
$LN3@MyMax:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMax:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMax@H@@YGHHH@Z ENDP				; MyMax<int>
_TEXT	ENDS
PUBLIC	??$MyMax@I@@YGIII@Z				; MyMax<unsigned int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__EkMatchMinLenMax@NDecoder@NImplode@NCompress@@YAXXZ
text$yc	SEGMENT
??__EkMatchMinLenMax@NDecoder@NImplode@NCompress@@YAXXZ PROC ; NCompress::NImplode::NDecoder::`dynamic initializer for 'kMatchMinLenMax'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\implodedecoder.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	push	2
	push	3
	call	??$MyMax@I@@YGIII@Z			; MyMax<unsigned int>
	mov	DWORD PTR _kMatchMinLenMax, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EkMatchMinLenMax@NDecoder@NImplode@NCompress@@YAXXZ ENDP ; NCompress::NImplode::NDecoder::`dynamic initializer for 'kMatchMinLenMax''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??$MyMax@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMax@I@@YGIII@Z PROC				; MyMax<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 9
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jbe	SHORT $LN3@MyMax@2
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMax@2
$LN3@MyMax@2:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMax@2:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMax@I@@YGIII@Z ENDP				; MyMax<unsigned int>
_TEXT	ENDS
_BSS	SEGMENT
_kMatchMinLenMax DD 01H DUP (?)
_kHistorySize DD 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_kHistorySize$initializer$ DD FLAT:??__EkHistorySize@NDecoder@NImplode@NCompress@@YAXXZ
_kMatchMinLenMax$initializer$ DD FLAT:??__EkMatchMinLenMax@NDecoder@NImplode@NCompress@@YAXXZ
CRT$XCU	ENDS
END

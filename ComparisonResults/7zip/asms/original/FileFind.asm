; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\FileFind.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG67970 DB	'::$DATA', 00H
$SG67977 DB	':$DATA', 00H
	ORG $+1
$SG68052 DB	':$DATA', 00H
	ORG $+1
$SG68053 DB	':', 00H, '$', 00H, 'D', 00H, 'A', 00H, 'T', 00H, 'A', 00H
	DB	00H, 00H
	ORG $+2
$SG68101 DB	'.', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
PUBLIC	?IsDots@CFileInfo@NFind@NFile@NWindows@@QBE_NXZ	; NWindows::NFile::NFind::CFileInfo::IsDots
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv128 = -8						; size = 4
_this$ = -4						; size = 4
?IsDots@CFileInfo@NFind@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NFind::CFileInfo::IsDots
; _this$ = ecx
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@IsDots
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@IsDots
$LN2@IsDots:
; Line 61
	xor	al, al
	jmp	SHORT $LN4@IsDots
$LN3@IsDots:
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	edx, WORD PTR [eax]
	cmp	edx, 46					; 0000002eH
	je	SHORT $LN1@IsDots
; Line 63
	xor	al, al
	jmp	SHORT $LN4@IsDots
$LN1@IsDots:
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 1
	je	SHORT $LN7@IsDots
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 2
	jne	SHORT $LN6@IsDots
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	eax, WORD PTR [eax+2]
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN7@IsDots
$LN6@IsDots:
	mov	DWORD PTR tv128[ebp], 0
	jmp	SHORT $LN8@IsDots
$LN7@IsDots:
	mov	DWORD PTR tv128[ebp], 1
$LN8@IsDots:
	mov	al, BYTE PTR tv128[ebp]
$LN4@IsDots:
; Line 65
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDots@CFileInfo@NFind@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NFind::CFileInfo::IsDots
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
PUBLIC	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NFind::CFileInfoBase::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z PROC ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ENDP ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
_TEXT	ENDS
PUBLIC	?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindFileBase::Close
EXTRN	__imp__FindClose@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ PROC	; NWindows::NFile::NFind::CFindFileBase::Close
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN2@Close
; Line 111
	mov	al, 1
	jmp	SHORT $LN3@Close
$LN2@Close:
; Line 112
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__FindClose@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@Close
; Line 113
	xor	al, al
	jmp	SHORT $LN3@Close
$LN1@Close:
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
; Line 115
	mov	al, 1
$LN3@Close:
; Line 116
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ENDP	; NWindows::NFile::NFind::CFindFileBase::Close
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	__$ArrayPad$
PUBLIC	?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CFindFile::FindFirst
EXTRN	__imp__FindFirstFileW@8:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	?fs2fas@@YG?AVAString@@PB_W@Z:PROC		; fs2fas
EXTRN	?g_IsNT@@3_NA:BYTE				; g_IsNT
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z$0
__ehfuncinfo$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv146 = -968						; size = 4
tv147 = -964						; size = 4
$T68493 = -960						; size = 12
_fd$67909 = -944					; size = 592
_fd$67903 = -344					; size = 320
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_fi$ = 12						; size = 4
?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z PROC ; NWindows::NFile::NFind::CFindFile::FindFirst
; _this$ = ecx
; Line 145
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 956				; 000003bcH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-968]
	mov	ecx, 239				; 000000efH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 146
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindFileBase::Close
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@FindFirst
; Line 147
	xor	al, al
	jmp	$LN6@FindFirst
$LN5@FindFirst:
; Line 149
	movzx	ecx, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	ecx, ecx
	jne	$LN4@FindFirst
; Line 152
	mov	esi, esp
	lea	edx, DWORD PTR _fd$67903[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T68493[ebp]
	push	ecx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv147[ebp], eax
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv146[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv146[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68493[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 153
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], -1
	jne	SHORT $LN3@FindFirst
; Line 154
	xor	al, al
	jmp	SHORT $LN6@FindFirst
$LN3@FindFirst:
; Line 155
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fd$67903[ebp]
	push	ecx
	call	?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
; Line 157
	jmp	SHORT $LN2@FindFirst
$LN4@FindFirst:
; Line 163
	mov	esi, esp
	lea	edx, DWORD PTR _fd$67909[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 172
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], -1
	jne	SHORT $LN1@FindFirst
; Line 173
	xor	al, al
	jmp	SHORT $LN6@FindFirst
$LN1@FindFirst:
; Line 174
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fd$67909[ebp]
	push	ecx
	call	?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAW@@AAUCFileInfo@123@@Z ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
$LN2@FindFirst:
; Line 176
	mov	al, 1
$LN6@FindFirst:
; Line 177
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@FindFirst
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 968				; 000003c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN13@FindFirst:
	DD	2
	DD	$LN12@FindFirst
$LN12@FindFirst:
	DD	-344					; fffffea8H
	DD	320					; 00000140H
	DD	$LN9@FindFirst
	DD	-944					; fffffc50H
	DD	592					; 00000250H
	DD	$LN10@FindFirst
$LN10@FindFirst:
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$LN9@FindFirst:
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z$0:
	lea	ecx, DWORD PTR $T68493[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-968]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z ENDP ; NWindows::NFile::NFind::CFindFile::FindFirst
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T68510 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68510[ebp], ecx
	mov	edx, DWORD PTR $T68510[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_fi$ = 12						; size = 4
?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAW@@AAUCFileInfo@123@@Z PROC ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 85
	push	ebp
	mov	ebp, esp
	push	esi
; Line 86
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR _fd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _fd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _fd$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _fd$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [edx+24]
	mov	edx, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR [edx+28], ecx
	mov	eax, DWORD PTR _fd$[ebp]
	mov	eax, DWORD PTR [eax+28]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _fd$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR _fi$[ebp]
	mov	BYTE PTR [edx+36], 0
	mov	eax, DWORD PTR _fi$[ebp]
	mov	BYTE PTR [eax+37], 0
; Line 87
	mov	ecx, DWORD PTR _fd$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	ecx, DWORD PTR _fi$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 91
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAW@@AAUCFileInfo@123@@Z ENDP ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?fas2fs@@YG?AVUString@@ABVAString@@@Z:PROC	; fas2fs
EXTRN	??0AString@@QAE@PBD@Z:PROC			; AString::AString
xdata$x	SEGMENT
__unwindtable$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z$1
__ehfuncinfo$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv158 = -44						; size = 4
tv148 = -40						; size = 4
$T68518 = -36						; size = 12
$T68517 = -24						; size = 12
__$EHRec$ = -12						; size = 12
_fd$ = 8						; size = 4
_fi$ = 12						; size = 4
?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z PROC ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
; Line 96
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 97
	mov	eax, DWORD PTR _fi$[ebp]
	mov	ecx, DWORD PTR _fd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _fd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _fd$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _fd$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR [edx+24]
	mov	edx, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR [edx+28], ecx
	mov	eax, DWORD PTR _fd$[ebp]
	mov	eax, DWORD PTR [eax+28]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _fd$[ebp]
	mov	ecx, DWORD PTR [ecx+32]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _fi$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR _fi$[ebp]
	mov	BYTE PTR [edx+36], 0
	mov	eax, DWORD PTR _fi$[ebp]
	mov	BYTE PTR [eax+37], 0
; Line 98
	mov	ecx, DWORD PTR _fd$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	lea	ecx, DWORD PTR $T68517[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T68517[ebp]
	push	edx
	lea	eax, DWORD PTR $T68518[ebp]
	push	eax
	call	?fas2fs@@YG?AVUString@@ABVAString@@@Z	; fas2fs
	mov	DWORD PTR tv148[ebp], eax
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv158[ebp]
	push	edx
	mov	ecx, DWORD PTR _fi$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T68518[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68517[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 102
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z$0:
	lea	ecx, DWORD PTR $T68517[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z$1:
	lea	ecx, DWORD PTR $T68518[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z ENDP ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T68526 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68526[ebp], ecx
	mov	edx, DWORD PTR $T68526[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?FindNext@CFindFile@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CFindFile::FindNext
EXTRN	__imp__FindNextFileW@8:PROC
EXTRN	__imp__FindNextFileA@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fd$67921 = -932					; size = 592
_fd$67918 = -332					; size = 320
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fi$ = 8						; size = 4
?FindNext@CFindFile@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z PROC ; NWindows::NFile::NFind::CFindFile::FindNext
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 180
	push	ebp
	mov	ebp, esp
	sub	esp, 936				; 000003a8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-936]
	mov	ecx, 234				; 000000eaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	SHORT $LN4@FindNext
; Line 185
	mov	esi, esp
	lea	ecx, DWORD PTR _fd$67918[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__FindNextFileA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@FindNext
; Line 186
	xor	al, al
	jmp	SHORT $LN5@FindNext
$LN3@FindNext:
; Line 187
	mov	ecx, DWORD PTR _fi$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fd$67918[ebp]
	push	edx
	call	?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAA@@AAUCFileInfo@123@@Z ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
; Line 189
	jmp	SHORT $LN2@FindNext
$LN4@FindNext:
; Line 193
	mov	esi, esp
	lea	eax, DWORD PTR _fd$67921[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__FindNextFileW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@FindNext
; Line 194
	xor	al, al
	jmp	SHORT $LN5@FindNext
$LN1@FindNext:
; Line 195
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fd$67921[ebp]
	push	ecx
	call	?Convert_WIN32_FIND_DATA_to_FileInfo@NFind@NFile@NWindows@@YGXABU_WIN32_FIND_DATAW@@AAUCFileInfo@123@@Z ; NWindows::NFile::NFind::Convert_WIN32_FIND_DATA_to_FileInfo
$LN2@FindNext:
; Line 197
	mov	al, 1
$LN5@FindNext:
; Line 198
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@FindNext
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 936				; 000003a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN10@FindNext:
	DD	2
	DD	$LN9@FindNext
$LN9@FindNext:
	DD	-332					; fffffeb4H
	DD	320					; 00000140H
	DD	$LN7@FindNext
	DD	-932					; fffffc5cH
	DD	592					; 00000250H
	DD	$LN8@FindNext
$LN8@FindNext:
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$LN7@FindNext:
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
?FindNext@CFindFile@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ENDP ; NWindows::NFile::NFind::CFindFile::FindNext
_TEXT	ENDS
PUBLIC	?IsMainStream@CStreamInfo@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CStreamInfo::IsMainStream
EXTRN	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z:PROC ; StringsAreEqualNoCase_Ascii
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMainStream@CStreamInfo@NFind@NFile@NWindows@@QBE_NXZ PROC ; NWindows::NFile::NFind::CStreamInfo::IsMainStream
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	push	OFFSET $SG67970
	mov	ecx, DWORD PTR _this$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
; Line 220
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMainStream@CStreamInfo@NFind@NFile@NWindows@@QBE_NXZ ENDP ; NWindows::NFile::NFind::CStreamInfo::IsMainStream
_TEXT	ENDS
PUBLIC	?DeleteFrom@UString@@QAEXI@Z			; UString::DeleteFrom
PUBLIC	?RightPtr@UString@@QBEPB_WI@Z			; UString::RightPtr
PUBLIC	?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ ; NWindows::NFile::NFind::CStreamInfo::GetReducedName
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
xdata$x	SEGMENT
__unwindtable$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ$0
__ehfuncinfo$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68538 = -40						; size = 4
_s$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ PROC ; NWindows::NFile::NFind::CStreamInfo::GetReducedName
; _this$ = ecx
; Line 223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T68538[ebp], 0
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 226
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 7
	jbe	SHORT $LN1@GetReduced
	push	OFFSET $SG67977
	push	6
	lea	ecx, DWORD PTR _s$[ebp]
	call	?RightPtr@UString@@QBEPB_WI@Z		; UString::RightPtr
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@GetReduced
; Line 227
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	sub	eax, 6
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
$LN1@GetReduced:
; Line 228
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	eax, DWORD PTR $T68538[ebp]
	or	eax, 1
	mov	DWORD PTR $T68538[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 229
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GetReduced
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@GetReduced:
	DD	1
	DD	$LN9@GetReduced
$LN9@GetReduced:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN7@GetReduced
$LN7@GetReduced:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ$1:
	mov	eax, DWORD PTR $T68538[ebp]
	and	eax, 1
	je	$LN6@GetReduced
	and	DWORD PTR $T68538[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN6@GetReduced:
	ret	0
__ehhandler$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetReducedName@CStreamInfo@NFind@NFile@NWindows@@QBE?AVUString@@XZ ENDP ; NWindows::NFile::NFind::CStreamInfo::GetReducedName
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RightPtr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_num$ = 8						; size = 4
?RightPtr@UString@@QBEPB_WI@Z PROC			; UString::RightPtr, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 479
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	eax, DWORD PTR [eax+ecx*2]
	mov	ecx, DWORD PTR _num$[ebp]
	shl	ecx, 1
	sub	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?RightPtr@UString@@QBEPB_WI@Z ENDP			; UString::RightPtr
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteFrom@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@UString@@QAEXI@Z PROC			; UString::DeleteFrom, COMDAT
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@DeleteFrom
; Line 607
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@DeleteFrom:
; Line 610
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@UString@@QAEXI@Z ENDP			; UString::DeleteFrom
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?FindFirst@CFindStream@NFind@NFile@NWindows@@QAE_NPB_WAAUCStreamInfo@234@@Z ; NWindows::NFile::NFind::CFindStream::FindFirst
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__SetLastError@4:PROC
_BSS	SEGMENT
_g_FindFirstStreamW DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_sd$67989 = -612					; size = 600
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
_si$ = 12						; size = 4
?FindFirst@CFindStream@NFind@NFile@NWindows@@QAE_NPB_WAAUCStreamInfo@234@@Z PROC ; NWindows::NFile::NFind::CFindStream::FindFirst
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 616				; 00000268H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-616]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 266
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindFileBase::Close
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@FindFirst@2
; Line 267
	xor	al, al
	jmp	$LN6@FindFirst@2
$LN5@FindFirst@2:
; Line 268
	cmp	DWORD PTR _g_FindFirstStreamW, 0
	jne	SHORT $LN4@FindFirst@2
; Line 270
	mov	esi, esp
	push	120					; 00000078H
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 271
	xor	al, al
	jmp	SHORT $LN6@FindFirst@2
$LN4@FindFirst@2:
; Line 275
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 277
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _sd$67989[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	DWORD PTR _g_FindFirstStreamW
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 278
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], -1
	jne	SHORT $LN3@FindFirst@2
; Line 280
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 38					; 00000026H
	jne	SHORT $LN3@FindFirst@2
; Line 281
	xor	al, al
	jmp	SHORT $LN6@FindFirst@2
$LN3@FindFirst@2:
; Line 292
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN1@FindFirst@2
; Line 293
	xor	al, al
	jmp	SHORT $LN6@FindFirst@2
$LN1@FindFirst@2:
; Line 294
	mov	ecx, DWORD PTR _si$[ebp]
	push	ecx
	lea	edx, DWORD PTR _sd$67989[ebp]
	push	edx
	call	?Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo@NFind@NFile@NWindows@@YGXABUMY_WIN32_FIND_STREAM_DATA@@AAUCStreamInfo@123@@Z ; NWindows::NFile::NFind::Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo
; Line 296
	mov	al, 1
$LN6@FindFirst@2:
; Line 297
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@FindFirst@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 616				; 00000268H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN10@FindFirst@2:
	DD	1
	DD	$LN9@FindFirst@2
$LN9@FindFirst@2:
	DD	-612					; fffffd9cH
	DD	600					; 00000258H
	DD	$LN8@FindFirst@2
$LN8@FindFirst@2:
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?FindFirst@CFindStream@NFind@NFile@NWindows@@QAE_NPB_WAAUCStreamInfo@234@@Z ENDP ; NWindows::NFile::NFind::CFindStream::FindFirst
; Function compile flags: /Odtp /RTCsu
_sd$ = 8						; size = 4
_si$ = 12						; size = 4
?Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo@NFind@NFile@NWindows@@YGXABUMY_WIN32_FIND_STREAM_DATA@@AAUCStreamInfo@123@@Z PROC ; NWindows::NFile::NFind::Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo
; Line 242
	push	ebp
	mov	ebp, esp
; Line 243
	mov	eax, DWORD PTR _si$[ebp]
	mov	ecx, DWORD PTR _sd$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+20], ecx
; Line 244
	mov	edx, DWORD PTR _sd$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _si$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 245
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo@NFind@NFile@NWindows@@YGXABUMY_WIN32_FIND_STREAM_DATA@@AAUCStreamInfo@123@@Z ENDP ; NWindows::NFile::NFind::Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?FindNext@CFindStream@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@@Z ; NWindows::NFile::NFind::CFindStream::FindNext
_BSS	SEGMENT
_g_FindNextStreamW DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
_sd$68002 = -612					; size = 600
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_si$ = 8						; size = 4
?FindNext@CFindStream@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@@Z PROC ; NWindows::NFile::NFind::CFindStream::FindNext
; _this$ = ecx
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 616				; 00000268H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-616]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 301
	cmp	DWORD PTR _g_FindNextStreamW, 0
	jne	SHORT $LN2@FindNext@2
; Line 303
	mov	esi, esp
	push	120					; 00000078H
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 304
	xor	al, al
	jmp	SHORT $LN3@FindNext@2
$LN2@FindNext@2:
; Line 308
	mov	esi, esp
	lea	eax, DWORD PTR _sd$68002[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR _g_FindNextStreamW
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@FindNext@2
; Line 309
	xor	al, al
	jmp	SHORT $LN3@FindNext@2
$LN1@FindNext@2:
; Line 310
	mov	eax, DWORD PTR _si$[ebp]
	push	eax
	lea	ecx, DWORD PTR _sd$68002[ebp]
	push	ecx
	call	?Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo@NFind@NFile@NWindows@@YGXABUMY_WIN32_FIND_STREAM_DATA@@AAUCStreamInfo@123@@Z ; NWindows::NFile::NFind::Convert_WIN32_FIND_STREAM_DATA_to_StreamInfo
; Line 312
	mov	al, 1
$LN3@FindNext@2:
; Line 313
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FindNext@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 616				; 00000268H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@FindNext@2:
	DD	1
	DD	$LN6@FindNext@2
$LN6@FindNext@2:
	DD	-612					; fffffd9cH
	DD	600					; 00000258H
	DD	$LN5@FindNext@2
$LN5@FindNext@2:
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?FindNext@CFindStream@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@@Z ENDP ; NWindows::NFile::NFind::CFindStream::FindNext
_TEXT	ENDS
PUBLIC	?IsHandleAllocated@CFindFileBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFindFileBase::IsHandleAllocated
PUBLIC	?Next@CStreamEnumerator@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@AA_N@Z ; NWindows::NFile::NFind::CStreamEnumerator::Next
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -5						; size = 1
_this$ = -4						; size = 4
_si$ = 8						; size = 4
_found$ = 12						; size = 4
?Next@CStreamEnumerator@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@AA_N@Z PROC ; NWindows::NFile::NFind::CStreamEnumerator::Next
; _this$ = ecx
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 318
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHandleAllocated@CFindFileBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFindFileBase::IsHandleAllocated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Next
; Line 319
	mov	ecx, DWORD PTR _si$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindNext@CFindStream@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@@Z ; NWindows::NFile::NFind::CFindStream::FindNext
	mov	BYTE PTR _res$[ebp], al
; Line 320
	jmp	SHORT $LN2@Next
$LN3@Next:
; Line 321
	mov	edx, DWORD PTR _si$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFirst@CFindStream@NFind@NFile@NWindows@@QAE_NPB_WAAUCStreamInfo@234@@Z ; NWindows::NFile::NFind::CFindStream::FindFirst
	mov	BYTE PTR _res$[ebp], al
$LN2@Next:
; Line 322
	movzx	eax, BYTE PTR _res$[ebp]
	test	eax, eax
	je	SHORT $LN1@Next
; Line 324
	mov	ecx, DWORD PTR _found$[ebp]
	mov	BYTE PTR [ecx], 1
; Line 325
	mov	al, 1
	jmp	SHORT $LN4@Next
$LN1@Next:
; Line 327
	mov	edx, DWORD PTR _found$[ebp]
	mov	BYTE PTR [edx], 0
; Line 328
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	ecx, ecx
	cmp	eax, 38					; 00000026H
	sete	cl
	mov	al, cl
$LN4@Next:
; Line 329
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Next@CStreamEnumerator@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@AA_N@Z ENDP ; NWindows::NFile::NFind::CStreamEnumerator::Next
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsHandleAllocated@CFindFileBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsHandleAllocated@CFindFileBase@NFind@NFile@NWindows@@QBE_NXZ PROC ; NWindows::NFile::NFind::CFindFileBase::IsHandleAllocated, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 79
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], -1
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsHandleAllocated@CFindFileBase@NFind@NFile@NWindows@@QBE_NXZ ENDP ; NWindows::NFile::NFind::CFindFileBase::IsHandleAllocated
_TEXT	ENDS
PUBLIC	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ PROC ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 339
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 341
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 342
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0
; Line 343
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+36], 0
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+37], 0
; Line 345
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ENDP ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
_TEXT	ENDS
PUBLIC	?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z	; NWindows::NFile::NFind::GetFileAttrib
EXTRN	__imp__GetFileAttributesW@4:PROC
EXTRN	__imp__GetFileAttributesA@4:PROC
xdata$x	SEGMENT
__unwindtable$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z$0
__ehfuncinfo$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv79 = -40						; size = 4
tv80 = -36						; size = 4
$T68568 = -32						; size = 12
$T68567 = -20						; size = 4
_dw$68023 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z PROC	; NWindows::NFile::NFind::GetFileAttrib
; Line 366
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 368
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	SHORT $LN3@GetFileAtt
; Line 369
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T68568[ebp]
	push	edx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv80[ebp], eax
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR tv79[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv79[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__GetFileAttributesA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T68567[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68568[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T68567[ebp]
	jmp	SHORT $LN4@GetFileAtt
; Line 370
	jmp	SHORT $LN4@GetFileAtt
$LN3@GetFileAtt:
; Line 375
	mov	esi, esp
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetFileAttributesW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dw$68023[ebp], eax
; Line 376
	cmp	DWORD PTR _dw$68023[ebp], -1
	je	SHORT $LN1@GetFileAtt
; Line 377
	mov	eax, DWORD PTR _dw$68023[ebp]
	jmp	SHORT $LN4@GetFileAtt
$LN1@GetFileAtt:
; Line 387
	or	eax, -1
$LN4@GetFileAtt:
; Line 389
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z$0:
	lea	ecx, DWORD PTR $T68568[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z ENDP	; NWindows::NFile::NFind::GetFileAttrib
PUBLIC	?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
PUBLIC	??8@YG_NABVUString@@PB_W@Z			; operator==
PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
PUBLIC	?Add_PathSepar@UString@@QAEXXZ			; UString::Add_PathSepar
PUBLIC	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFile::~CFindFile
PUBLIC	??0CFindFile@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFile::CFindFile
PUBLIC	?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z		; UString::IsEqualTo_NoCase
PUBLIC	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CStreamEnumerator::~CStreamEnumerator
PUBLIC	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CStreamInfo::~CStreamInfo
PUBLIC	??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CStreamInfo::CStreamInfo
PUBLIC	??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	??1CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::~CInFile
PUBLIC	??0CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::CInFile
PUBLIC	__$ArrayPad$
PUBLIC	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
EXTRN	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z:PROC	; NWindows::NFile::NName::FindSepar
EXTRN	?GetNetworkServerPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z:PROC ; NWindows::NFile::NName::GetNetworkServerPrefixSize
EXTRN	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDrivePath
EXTRN	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsSuperPath
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	??YUString@@QAEAAV0@PB_W@Z:PROC			; UString::operator+=
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	?FindAltStreamColon@NName@NFile@NWindows@@YGHPB_W@Z:PROC ; NWindows::NFile::NName::FindAltStreamColon
EXTRN	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NIO::CInFile::Open
EXTRN	?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z:PROC ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
EXTRN	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDrivePath2
EXTRN	?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDevicePath
xdata$x	SEGMENT
__ehfuncinfo$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$6
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68586 = -299						; size = 1
$T68585 = -298						; size = 1
$T68584 = -297						; size = 1
$T68583 = -296						; size = 1
$T68582 = -295						; size = 1
$T68581 = -294						; size = 1
$T68580 = -293						; size = 1
$T68579 = -292						; size = 1
$T68578 = -291						; size = 1
$T68577 = -290						; size = 1
$T68576 = -289						; size = 1
_attrib$68103 = -288					; size = 4
_isOK$68098 = -281					; size = 1
_s$68097 = -276						; size = 12
_prefixSize$68094 = -260				; size = 4
_attrib$68089 = -256					; size = 4
_attrib$68083 = -252					; size = 4
_rootSize$68079 = -248					; size = 4
_lastError$68076 = -244					; size = 4
_finder$ = -236						; size = 4
_found$68065 = -221					; size = 1
_si$68064 = -212					; size = 24
_enumerator$68060 = -180				; size = 16
_isOk$68054 = -157					; size = 1
_kPostfixSize$68049 = -156				; size = 4
_filePath$68048 = -148					; size = 12
_streamName$68046 = -128				; size = 12
_colonPos$ = -112					; size = 4
_inFile$68038 = -104					; size = 16
_freeSize$68036 = -80					; size = 8
_totalSize$68035 = -64					; size = 8
_clusterSize$68034 = -48				; size = 8
_drive$68033 = -32					; size = 8
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z PROC	; NWindows::NFile::NFind::CFileInfo::Find
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 288				; 00000120H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 417
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDevicePath
	movzx	ecx, al
	test	ecx, ecx
	je	$LN38@Find
; Line 419
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Line 420
	mov	edx, DWORD PTR _path$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+37], 1
; Line 423
	mov	ecx, DWORD PTR _path$[ebp]
	add	ecx, 8
	push	ecx
	call	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath2
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN37@Find
	mov	eax, DWORD PTR _path$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN37@Find
; Line 425
	mov	edx, DWORD PTR _path$[ebp]
	mov	ax, WORD PTR [edx+8]
	mov	WORD PTR _drive$68033[ebp], ax
	mov	ecx, 58					; 0000003aH
	mov	WORD PTR _drive$68033[ebp+2], cx
	mov	edx, 92					; 0000005cH
	mov	WORD PTR _drive$68033[ebp+4], dx
	xor	eax, eax
	mov	WORD PTR _drive$68033[ebp+6], ax
; Line 427
	lea	ecx, DWORD PTR _freeSize$68036[ebp]
	push	ecx
	lea	edx, DWORD PTR _totalSize$68035[ebp]
	push	edx
	lea	eax, DWORD PTR _clusterSize$68034[ebp]
	push	eax
	lea	ecx, DWORD PTR _drive$68033[ebp]
	push	ecx
	call	?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN37@Find
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _totalSize$68035[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _totalSize$68035[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 430
	mov	al, 1
	jmp	$LN39@Find
$LN37@Find:
; Line 434
	lea	ecx, DWORD PTR _inFile$68038[ebp]
	call	??0CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 436
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _inFile$68038[ebp]
	call	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::Open
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN35@Find
; Line 437
	mov	BYTE PTR $T68576[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inFile$68038[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68576[ebp]
	jmp	$LN39@Find
$LN35@Find:
; Line 439
	movzx	edx, BYTE PTR _inFile$68038[ebp+5]
	test	edx, edx
	je	SHORT $LN34@Find
; Line 440
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _inFile$68038[ebp+8]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _inFile$68038[ebp+12]
	mov	DWORD PTR [eax+4], edx
$LN34@Find:
; Line 441
	mov	BYTE PTR $T68577[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _inFile$68038[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68577[ebp]
	jmp	$LN39@Find
$LN38@Find:
; Line 447
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?FindAltStreamColon@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindAltStreamColon
	mov	DWORD PTR _colonPos$[ebp], eax
; Line 448
	cmp	DWORD PTR _colonPos$[ebp], 0
	jl	$LN33@Find
	mov	ecx, DWORD PTR _colonPos$[ebp]
	mov	edx, DWORD PTR _path$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+2]
	test	eax, eax
	je	$LN33@Find
; Line 450
	mov	ecx, DWORD PTR _colonPos$[ebp]
	mov	edx, DWORD PTR _path$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 451
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 452
	mov	edx, DWORD PTR _colonPos$[ebp]
	push	edx
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
; Line 457
	mov	DWORD PTR _kPostfixSize$68049[ebp], 6
; Line 459
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 6
	jbe	SHORT $LN31@Find
	push	OFFSET $SG68052
	push	6
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	?RightPtr@UString@@QBEPB_WI@Z		; UString::RightPtr
	push	eax
	call	?StringsAreEqualNoCase_Ascii@@YG_NPB_WPBD@Z ; StringsAreEqualNoCase_Ascii
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN32@Find
$LN31@Find:
; Line 460
	push	OFFSET $SG68053
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??YUString@@QAEAAV0@PB_W@Z		; UString::operator+=
$LN32@Find:
; Line 462
	mov	BYTE PTR _isOk$68054[ebp], 1
; Line 465
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath2
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@Find
	cmp	DWORD PTR _colonPos$[ebp], 2
	je	SHORT $LN29@Find
	cmp	DWORD PTR _colonPos$[ebp], 3
	jne	SHORT $LN30@Find
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	edx, WORD PTR [eax+4]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN30@Find
$LN29@Find:
; Line 468
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Line 469
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 470
	cmp	DWORD PTR _colonPos$[ebp], 2
	jne	SHORT $LN28@Find
; Line 471
	lea	eax, DWORD PTR _filePath$68048[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
$LN28@Find:
; Line 473
	jmp	SHORT $LN27@Find
$LN30@Find:
; Line 474
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	mov	BYTE PTR _isOk$68054[ebp], al
$LN27@Find:
; Line 476
	movzx	ecx, BYTE PTR _isOk$68054[ebp]
	test	ecx, ecx
	je	$LN26@Find
; Line 478
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	and	eax, -1041				; fffffbefH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 479
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
	mov	DWORD PTR [edx+4], 0
; Line 480
	lea	eax, DWORD PTR _filePath$68048[ebp]
	push	eax
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	call	??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator
	mov	BYTE PTR __$EHRec$[ebp+8], 3
$LN25@Find:
; Line 483
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 485
	lea	ecx, DWORD PTR _found$68065[ebp]
	push	ecx
	lea	edx, DWORD PTR _si$68064[ebp]
	push	edx
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	call	?Next@CStreamEnumerator@NFind@NFile@NWindows@@QAE_NAAUCStreamInfo@234@AA_N@Z ; NWindows::NFile::NFind::CStreamEnumerator::Next
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN23@Find
; Line 486
	mov	BYTE PTR $T68578[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T68578[ebp]
	jmp	$LN39@Find
$LN23@Find:
; Line 487
	movzx	ecx, BYTE PTR _found$68065[ebp]
	test	ecx, ecx
	jne	SHORT $LN22@Find
; Line 489
	mov	esi, esp
	push	2
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 490
	mov	BYTE PTR $T68579[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T68579[ebp]
	jmp	$LN39@Find
$LN22@Find:
; Line 492
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z	; UString::IsEqualTo_NoCase
	movzx	edx, al
	test	edx, edx
	je	$LN21@Find
; Line 495
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 7
	jbe	SHORT $LN20@Find
; Line 496
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	sub	eax, 6
	push	eax
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
$LN20@Find:
; Line 497
	lea	eax, DWORD PTR _si$68064[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 498
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _si$68064[ebp+16]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _si$68064[ebp+20]
	mov	DWORD PTR [ecx+4], eax
; Line 499
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+36], 1
; Line 500
	mov	BYTE PTR $T68580[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T68580[ebp]
	jmp	$LN39@Find
$LN21@Find:
; Line 502
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _si$68064[ebp]
	call	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN25@Find
; Line 503
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	call	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
$LN26@Find:
; Line 504
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN33@Find:
; Line 508
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??0CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 5
; Line 509
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _finder$[ebp]
	call	?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CFindFile::FindFirst
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@Find
; Line 510
	mov	BYTE PTR $T68581[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68581[ebp]
	jmp	$LN39@Find
$LN19@Find:
; Line 514
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lastError$68076[ebp], eax
; Line 518
	cmp	DWORD PTR _lastError$68076[ebp], 53	; 00000035H
	je	SHORT $LN17@Find
	cmp	DWORD PTR _lastError$68076[ebp], 2
	je	SHORT $LN17@Find
	cmp	DWORD PTR _lastError$68076[ebp], 123	; 0000007bH
	jne	$LN18@Find
$LN17@Find:
; Line 520
	mov	DWORD PTR _rootSize$68079[ebp], 0
; Line 521
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperPath
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@Find
; Line 522
	mov	DWORD PTR _rootSize$68079[ebp], 4
$LN16@Find:
; Line 523
	mov	ecx, DWORD PTR _path$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN14@Find
	mov	eax, DWORD PTR _path$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN15@Find
$LN14@Find:
	mov	edx, DWORD PTR _path$[ebp]
	movzx	eax, WORD PTR [edx+2]
	test	eax, eax
	jne	SHORT $LN15@Find
; Line 525
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z ; NWindows::NFile::NFind::GetFileAttrib
	mov	DWORD PTR _attrib$68083[ebp], eax
; Line 526
	cmp	DWORD PTR _attrib$68083[ebp], -1
	je	SHORT $LN13@Find
	mov	edx, DWORD PTR _attrib$68083[ebp]
	and	edx, 16					; 00000010H
	je	SHORT $LN13@Find
; Line 528
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Line 529
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 530
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _attrib$68083[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 531
	mov	BYTE PTR $T68582[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68582[ebp]
	jmp	$LN39@Find
$LN13@Find:
; Line 533
	jmp	$LN18@Find
$LN15@Find:
; Line 534
	mov	edx, DWORD PTR _rootSize$68079[ebp]
	mov	eax, DWORD PTR _path$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	edx, al
	test	edx, edx
	je	$LN11@Find
	mov	eax, DWORD PTR _rootSize$68079[ebp]
	mov	ecx, DWORD PTR _path$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+6]
	test	edx, edx
	jne	$LN11@Find
; Line 536
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z ; NWindows::NFile::NFind::GetFileAttrib
	mov	DWORD PTR _attrib$68089[ebp], eax
; Line 537
	cmp	DWORD PTR _attrib$68089[ebp], -1
	je	SHORT $LN10@Find
	mov	ecx, DWORD PTR _attrib$68089[ebp]
	and	ecx, 16					; 00000010H
	je	SHORT $LN10@Find
; Line 539
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Line 540
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _attrib$68089[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 541
	mov	ecx, DWORD PTR _rootSize$68079[ebp]
	mov	edx, DWORD PTR _path$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 542
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
; Line 543
	mov	BYTE PTR $T68583[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68583[ebp]
	jmp	$LN39@Find
$LN10@Find:
; Line 546
	jmp	$LN18@Find
$LN11@Find:
; Line 548
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	?GetNetworkServerPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetNetworkServerPrefixSize
	mov	DWORD PTR _prefixSize$68094[ebp], eax
; Line 549
	cmp	DWORD PTR _prefixSize$68094[ebp], 0
	jbe	$LN18@Find
	mov	edx, DWORD PTR _prefixSize$68094[ebp]
	mov	eax, DWORD PTR _path$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	test	ecx, ecx
	je	$LN18@Find
; Line 551
	mov	edx, DWORD PTR _prefixSize$68094[ebp]
	mov	eax, DWORD PTR _path$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar
	test	eax, eax
	jge	$LN18@Find
; Line 553
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 554
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	?Add_PathSepar@UString@@QAEXXZ		; UString::Add_PathSepar
; Line 555
	push	42					; 0000002aH
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
; Line 557
	mov	BYTE PTR _isOK$68098[ebp], 0
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _finder$[ebp]
	call	?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CFindFile::FindFirst
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@Find
; Line 560
	push	OFFSET $SG68101
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	call	??8@YG_NABVUString@@PB_W@Z		; operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Find
; Line 562
	mov	ecx, DWORD PTR _prefixSize$68094[ebp]
	mov	edx, DWORD PTR _path$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 563
	mov	BYTE PTR $T68584[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68584[ebp]
	jmp	$LN39@Find
$LN5@Find:
; Line 565
	mov	BYTE PTR _isOK$68098[ebp], 1
$LN6@Find:
; Line 570
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	?GetFileAttrib@NFind@NFile@NWindows@@YGKPB_W@Z ; NWindows::NFile::NFind::GetFileAttrib
	mov	DWORD PTR _attrib$68103[ebp], eax
; Line 571
	movzx	edx, BYTE PTR _isOK$68098[ebp]
	test	edx, edx
	jne	SHORT $LN3@Find
	cmp	DWORD PTR _attrib$68103[ebp], -1
	je	SHORT $LN4@Find
	mov	eax, DWORD PTR _attrib$68103[ebp]
	and	eax, 16					; 00000010H
	je	SHORT $LN4@Find
$LN3@Find:
; Line 573
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Line 574
	cmp	DWORD PTR _attrib$68103[ebp], -1
	je	SHORT $LN2@Find
; Line 575
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _attrib$68103[ebp]
	mov	DWORD PTR [ecx+32], edx
; Line 576
	jmp	SHORT $LN1@Find
$LN2@Find:
; Line 577
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
$LN1@Find:
; Line 578
	mov	eax, DWORD PTR _prefixSize$68094[ebp]
	mov	ecx, DWORD PTR _path$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 579
	mov	BYTE PTR $T68585[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68585[ebp]
	jmp	SHORT $LN39@Find
$LN4@Find:
; Line 582
	mov	esi, esp
	mov	eax, DWORD PTR _lastError$68076[ebp]
	push	eax
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 583
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _s$68097[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN18@Find:
; Line 590
	mov	BYTE PTR $T68586[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _finder$[ebp]
	call	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68586[ebp]
$LN39@Find:
; Line 591
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN62@Find
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN62@Find:
	DD	12					; 0000000cH
	DD	$LN61@Find
$LN61@Find:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN48@Find
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN49@Find
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN50@Find
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN51@Find
	DD	-104					; ffffff98H
	DD	16					; 00000010H
	DD	$LN52@Find
	DD	-128					; ffffff80H
	DD	12					; 0000000cH
	DD	$LN53@Find
	DD	-148					; ffffff6cH
	DD	12					; 0000000cH
	DD	$LN54@Find
	DD	-180					; ffffff4cH
	DD	16					; 00000010H
	DD	$LN55@Find
	DD	-212					; ffffff2cH
	DD	24					; 00000018H
	DD	$LN56@Find
	DD	-221					; ffffff23H
	DD	1
	DD	$LN57@Find
	DD	-236					; ffffff14H
	DD	4
	DD	$LN58@Find
	DD	-276					; fffffeecH
	DD	12					; 0000000cH
	DD	$LN59@Find
$LN59@Find:
	DB	115					; 00000073H
	DB	0
$LN58@Find:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN57@Find:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN56@Find:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	0
$LN55@Find:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN54@Find:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN53@Find:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN52@Find:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN51@Find:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN50@Find:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN49@Find:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN48@Find:
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$0:
	lea	ecx, DWORD PTR _inFile$68038[ebp]
	jmp	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$1:
	lea	ecx, DWORD PTR _streamName$68046[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$2:
	lea	ecx, DWORD PTR _filePath$68048[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$3:
	lea	ecx, DWORD PTR _enumerator$68060[ebp]
	jmp	??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$4:
	lea	ecx, DWORD PTR _si$68064[ebp]
	jmp	??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$5:
	lea	ecx, DWORD PTR _finder$[ebp]
	jmp	??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z$6:
	lea	ecx, DWORD PTR _s$68097[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-300]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ENDP	; NWindows::NFile::NFind::CFileInfo::Find
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Add_PathSepar@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Add_PathSepar@UString@@QAEXXZ PROC			; UString::Add_PathSepar, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Add_PathSepar@UString@@QAEXXZ ENDP			; UString::Add_PathSepar
_TEXT	ENDS
EXTRN	?StringsAreEqualNoCase@@YG_NPB_W0@Z:PROC	; StringsAreEqualNoCase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z PROC		; UString::IsEqualTo_NoCase, COMDAT
; _this$ = ecx
; Line 548
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?StringsAreEqualNoCase@@YG_NPB_W0@Z	; StringsAreEqualNoCase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsEqualTo_NoCase@UString@@QBE_NPB_W@Z ENDP		; UString::IsEqualTo_NoCase
_TEXT	ENDS
EXTRN	__imp__wcscmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8@YG_NABVUString@@PB_W@Z
_TEXT	SEGMENT
_s1$ = 8						; size = 4
_s2$ = 12						; size = 4
??8@YG_NABVUString@@PB_W@Z PROC				; operator==, COMDAT
; Line 617
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	mov	eax, DWORD PTR _s2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s1$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	DWORD PTR __imp__wcscmp
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	add	eax, 1
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
??8@YG_NABVUString@@PB_W@Z ENDP				; operator==
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ PROC ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 16			; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
?SetAsDir@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ENDP ; NWindows::NFile::NFind::CFileInfoBase::SetAsDir
_TEXT	ENDS
PUBLIC	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindStream::~CFindStream
PUBLIC	??0CFindStream@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindStream::CFindStream
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0
__ehfuncinfo$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_filePath$ = 8						; size = 4
??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z PROC ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindStream@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _filePath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CStreamEnumerator@NFind@NFile@NWindows@@QAE@ABVUString@@@Z ENDP ; NWindows::NFile::NFind::CStreamEnumerator::CStreamEnumerator
PUBLIC	??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFindStream@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindStream@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindStream::CFindStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindStream@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindStream::CFindStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindFileBase::CFindFileBase, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
_TEXT	ENDS
PUBLIC	??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFindStream@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindStream::~CFindStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFindStream@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindStream::~CFindStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFindFileBase@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFindFile@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindFile@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFindFile::CFindFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::CFindFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindFile@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFindFile::CFindFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFindFile@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFindFile@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFindFile::~CFindFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindFileBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindFileBase::~CFindFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFindFile@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFindFile::~CFindFile
_TEXT	ENDS
PUBLIC	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::CFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::CInFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::CFileBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 97
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::CFileBase
_TEXT	ENDS
PUBLIC	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::~CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::~CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::~CFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::~CInFile
_TEXT	ENDS
EXTRN	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ:PROC ; NWindows::NFile::NIO::CFileBase::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::~CFileBase, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::~CFileBase
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CStreamEnumerator::~CStreamEnumerator, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFindStream@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CStreamEnumerator@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CStreamEnumerator::~CStreamEnumerator
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CStreamInfo::CStreamInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CStreamInfo@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CStreamInfo::CStreamInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CStreamInfo::~CStreamInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CStreamInfo@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CStreamInfo::~CStreamInfo
_TEXT	ENDS
PUBLIC	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::~CFileInfo
PUBLIC	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::CFileInfo
PUBLIC	?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NFind::DoesFileExist
xdata$x	SEGMENT
__unwindtable$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z$0
__ehfuncinfo$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv80 = -84						; size = 4
$T68677 = -77						; size = 1
_fi$ = -72						; size = 56
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NFind::DoesFileExist
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 594
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 595
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DoesFileEx
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@DoesFileEx
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN4@DoesFileEx
$LN3@DoesFileEx:
	mov	DWORD PTR tv80[ebp], 0
$LN4@DoesFileEx:
	mov	al, BYTE PTR tv80[ebp]
	mov	BYTE PTR $T68677[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68677[ebp]
; Line 597
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@DoesFileEx
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@DoesFileEx:
	DD	1
	DD	$LN8@DoesFileEx
$LN8@DoesFileEx:
	DD	-72					; ffffffb8H
	DD	56					; 00000038H
	DD	$LN6@DoesFileEx
$LN6@DoesFileEx:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z$0:
	lea	ecx, DWORD PTR _fi$[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoesFileExist@NFind@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NFind::DoesFileExist
PUBLIC	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::CFileInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::~CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::~CFileInfo
_TEXT	ENDS
PUBLIC	?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NFind::DoesDirExist
xdata$x	SEGMENT
__unwindtable$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z$0
__ehfuncinfo$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv80 = -84						; size = 4
$T68697 = -77						; size = 1
_fi$ = -72						; size = 56
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NFind::DoesDirExist
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 600
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 601
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 602
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@DoesDirExi
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@DoesDirExi
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN4@DoesDirExi
$LN3@DoesDirExi:
	mov	DWORD PTR tv80[ebp], 0
$LN4@DoesDirExi:
	mov	al, BYTE PTR tv80[ebp]
	mov	BYTE PTR $T68697[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68697[ebp]
; Line 603
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@DoesDirExi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@DoesDirExi:
	DD	1
	DD	$LN8@DoesDirExi
$LN8@DoesDirExi:
	DD	-72					; ffffffb8H
	DD	56					; 00000038H
	DD	$LN6@DoesDirExi
$LN6@DoesDirExi:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z$0:
	lea	ecx, DWORD PTR _fi$[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoesDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NFind::DoesDirExist
PUBLIC	?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NFind::DoesFileOrDirExist
xdata$x	SEGMENT
__unwindtable$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z$0
__ehfuncinfo$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68709 = -77						; size = 1
_fi$ = -72						; size = 56
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z PROC ; NWindows::NFile::NFind::DoesFileOrDirExist
; Line 606
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 607
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 608
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	mov	BYTE PTR $T68709[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68709[ebp]
; Line 609
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DoesFileOr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@DoesFileOr:
	DD	1
	DD	$LN6@DoesFileOr
$LN6@DoesFileOr:
	DD	-72					; ffffffb8H
	DD	56					; 00000038H
	DD	$LN4@DoesFileOr
$LN4@DoesFileOr:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z$0:
	lea	ecx, DWORD PTR _fi$[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__ehhandler$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z ENDP ; NWindows::NFile::NFind::DoesFileOrDirExist
PUBLIC	?NextAny@CEnumerator@NFind@NFile@NWindows@@AAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CEnumerator::NextAny
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fi$ = 8						; size = 4
?NextAny@CEnumerator@NFind@NFile@NWindows@@AAE_NAAUCFileInfo@234@@Z PROC ; NWindows::NFile::NFind::CEnumerator::NextAny
; _this$ = ecx
; Line 613
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 614
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHandleAllocated@CFindFileBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFindFileBase::IsHandleAllocated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@NextAny
; Line 615
	mov	ecx, DWORD PTR _fi$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindNext@CFindFile@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CFindFile::FindNext
	jmp	SHORT $LN3@NextAny
; Line 616
	jmp	SHORT $LN3@NextAny
$LN2@NextAny:
; Line 617
	mov	edx, DWORD PTR _fi$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FindFirst@CFindFile@NFind@NFile@NWindows@@QAE_NPB_WAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CFindFile::FindFirst
$LN3@NextAny:
; Line 618
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NextAny@CEnumerator@NFind@NFile@NWindows@@AAE_NAAUCFileInfo@234@@Z ENDP ; NWindows::NFile::NFind::CEnumerator::NextAny
_TEXT	ENDS
PUBLIC	?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CEnumerator::Next
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fi$ = 8						; size = 4
?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z PROC ; NWindows::NFile::NFind::CEnumerator::Next
; _this$ = ecx
; Line 621
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@Next@2:
; Line 624
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextAny@CEnumerator@NFind@NFile@NWindows@@AAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CEnumerator::NextAny
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@Next@2
; Line 625
	xor	al, al
	jmp	SHORT $LN5@Next@2
$LN2@Next@2:
; Line 626
	mov	ecx, DWORD PTR _fi$[ebp]
	call	?IsDots@CFileInfo@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfo::IsDots
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@Next@2
; Line 627
	mov	al, 1
	jmp	SHORT $LN5@Next@2
$LN1@Next@2:
; Line 628
	jmp	SHORT $LN4@Next@2
$LN5@Next@2:
; Line 629
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ENDP ; NWindows::NFile::NFind::CEnumerator::Next
_TEXT	ENDS
PUBLIC	?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@AA_N@Z ; NWindows::NFile::NFind::CEnumerator::Next
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fi$ = 8						; size = 4
_found$ = 12						; size = 4
?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@AA_N@Z PROC ; NWindows::NFile::NFind::CEnumerator::Next
; _this$ = ecx
; Line 632
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 633
	mov	eax, DWORD PTR _fi$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@@Z ; NWindows::NFile::NFind::CEnumerator::Next
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Next@3
; Line 635
	mov	edx, DWORD PTR _found$[ebp]
	mov	BYTE PTR [edx], 1
; Line 636
	mov	al, 1
	jmp	SHORT $LN2@Next@3
$LN1@Next@3:
; Line 638
	mov	eax, DWORD PTR _found$[ebp]
	mov	BYTE PTR [eax], 0
; Line 639
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	ecx, ecx
	cmp	eax, 18					; 00000012H
	sete	cl
	mov	al, cl
$LN2@Next@3:
; Line 640
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Next@CEnumerator@NFind@NFile@NWindows@@QAE_NAAUCFileInfo@234@AA_N@Z ENDP ; NWindows::NFile::NFind::CEnumerator::Next
_TEXT	ENDS
PUBLIC	?IsHandleAllocated@CFindChangeNotification@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFindChangeNotification::IsHandleAllocated
PUBLIC	?Close@CFindChangeNotification@NFind@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NFind::CFindChangeNotification::Close
EXTRN	__imp__FindCloseChangeNotification@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CFindChangeNotification@NFind@NFile@NWindows@@QAE_NXZ PROC ; NWindows::NFile::NFind::CFindChangeNotification::Close
; _this$ = ecx
; Line 647
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 648
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsHandleAllocated@CFindChangeNotification@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFindChangeNotification::IsHandleAllocated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Close@2
; Line 649
	mov	al, 1
	jmp	SHORT $LN3@Close@2
$LN2@Close@2:
; Line 650
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__FindCloseChangeNotification@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@Close@2
; Line 651
	xor	al, al
	jmp	SHORT $LN3@Close@2
$LN1@Close@2:
; Line 652
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
; Line 653
	mov	al, 1
$LN3@Close@2:
; Line 654
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CFindChangeNotification@NFind@NFile@NWindows@@QAE_NXZ ENDP ; NWindows::NFile::NFind::CFindChangeNotification::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsHandleAllocated@CFindChangeNotification@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?IsHandleAllocated@CFindChangeNotification@NFind@NFile@NWindows@@QBE_NXZ PROC ; NWindows::NFile::NFind::CFindChangeNotification::IsHandleAllocated, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN3@IsHandleAl
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@IsHandleAl
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@IsHandleAl
$LN3@IsHandleAl:
	mov	DWORD PTR tv66[ebp], 0
$LN4@IsHandleAl:
	mov	al, BYTE PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsHandleAllocated@CFindChangeNotification@NFind@NFile@NWindows@@QBE_NXZ ENDP ; NWindows::NFile::NFind::CFindChangeNotification::IsHandleAllocated
_TEXT	ENDS
PUBLIC	?BoolToBOOL@@YGH_N@Z				; BoolToBOOL
PUBLIC	?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z ; NWindows::NFile::NFind::CFindChangeNotification::FindFirst
EXTRN	__imp__FindFirstChangeNotificationW@12:PROC
EXTRN	__imp__FindFirstChangeNotificationA@12:PROC
xdata$x	SEGMENT
__unwindtable$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z$0
__ehfuncinfo$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv86 = -36						; size = 4
tv87 = -32						; size = 4
$T68727 = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_watchSubtree$ = 12					; size = 1
_notifyFilter$ = 16					; size = 4
?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z PROC ; NWindows::NFile::NFind::CFindChangeNotification::FindFirst
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 657
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 659
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	SHORT $LN2@FindFirst@3
; Line 660
	mov	esi, esp
	mov	ecx, DWORD PTR _notifyFilter$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _watchSubtree$[ebp]
	push	edx
	call	?BoolToBOOL@@YGH_N@Z			; BoolToBOOL
	push	eax
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T68727[ebp]
	push	ecx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv87[ebp], eax
	mov	edx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv86[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv86[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	DWORD PTR __imp__FindFirstChangeNotificationA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T68727[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 661
	jmp	SHORT $LN1@FindFirst@3
$LN2@FindFirst@3:
; Line 665
	mov	esi, esp
	mov	edx, DWORD PTR _notifyFilter$[ebp]
	push	edx
	movzx	eax, BYTE PTR _watchSubtree$[ebp]
	push	eax
	call	?BoolToBOOL@@YGH_N@Z			; BoolToBOOL
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	DWORD PTR __imp__FindFirstChangeNotificationW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@FindFirst@3:
; Line 675
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 676
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z$0:
	lea	ecx, DWORD PTR $T68727[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindFirst@CFindChangeNotification@NFind@NFile@NWindows@@QAEPAXPB_W_NK@Z ENDP ; NWindows::NFile::NFind::CFindChangeNotification::FindFirst
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BoolToBOOL@@YGH_N@Z
_TEXT	SEGMENT
_v$ = 8							; size = 1
?BoolToBOOL@@YGH_N@Z PROC				; BoolToBOOL, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\defs.h
; Line 11
	push	ebp
	mov	ebp, esp
	movzx	eax, BYTE PTR _v$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	ebp
	ret	4
?BoolToBOOL@@YGH_N@Z ENDP				; BoolToBOOL
_TEXT	ENDS
PUBLIC	??1?$CObjArray@_W@@QAE@XZ			; CObjArray<wchar_t>::~CObjArray<wchar_t>
PUBLIC	??B?$CObjArray@_W@@QAEPA_WXZ			; CObjArray<wchar_t>::operator wchar_t *
PUBLIC	??0?$CObjArray@_W@@QAE@I@Z			; CObjArray<wchar_t>::CObjArray<wchar_t>
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
PUBLIC	??1?$CObjArray@D@@QAE@XZ			; CObjArray<char>::~CObjArray<char>
PUBLIC	??B?$CObjArray@D@@QAEPADXZ			; CObjArray<char>::operator char *
PUBLIC	??0?$CObjArray@D@@QAE@I@Z			; CObjArray<char>::CObjArray<char>
PUBLIC	?Clear@?$CObjectVector@VUString@@@@QAEXXZ	; CObjectVector<UString>::Clear
PUBLIC	?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z ; NWindows::NFile::NFind::MyGetLogicalDriveStrings
EXTRN	__imp__GetLogicalDriveStringsW@8:PROC
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
EXTRN	__imp__GetLogicalDriveStringsA@8:PROC
xdata$x	SEGMENT
__ehfuncinfo$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv183 = -136						; size = 4
tv84 = -132						; size = 4
$T68740 = -127						; size = 1
$T68739 = -126						; size = 1
$T68738 = -125						; size = 1
$T68737 = -124						; size = 12
$T68736 = -109						; size = 1
_i$68315 = -108						; size = 4
_prev$68314 = -104					; size = 4
_s$68313 = -96						; size = 12
_newSize$68309 = -80					; size = 4
_buf$68308 = -72					; size = 4
_size$68285 = -64					; size = 4
_i$68277 = -60						; size = 4
_prev$68276 = -56					; size = 4
_s$68275 = -48						; size = 12
_newSize$68271 = -32					; size = 4
_buf$68270 = -24					; size = 4
_size$68247 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_driveStrings$ = 8					; size = 4
?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z PROC ; NWindows::NFile::NFind::MyGetLogicalDriveStrings
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 681
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 682
	mov	ecx, DWORD PTR _driveStrings$[ebp]
	call	?Clear@?$CObjectVector@VUString@@@@QAEXXZ ; CObjectVector<UString>::Clear
; Line 684
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	$LN16@MyGetLogic
; Line 686
	mov	ecx, DWORD PTR _driveStrings$[ebp]
	call	?Clear@?$CObjectVector@VUString@@@@QAEXXZ ; CObjectVector<UString>::Clear
; Line 687
	mov	esi, esp
	push	0
	push	0
	call	DWORD PTR __imp__GetLogicalDriveStringsA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _size$68247[ebp], eax
; Line 688
	cmp	DWORD PTR _size$68247[ebp], 0
	jne	SHORT $LN15@MyGetLogic
; Line 689
	xor	al, al
	jmp	$LN17@MyGetLogic
$LN15@MyGetLogic:
; Line 690
	mov	ecx, DWORD PTR _size$68247[ebp]
	push	ecx
	lea	ecx, DWORD PTR _buf$68270[ebp]
	call	??0?$CObjArray@D@@QAE@I@Z		; CObjArray<char>::CObjArray<char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 691
	lea	ecx, DWORD PTR _buf$68270[ebp]
	call	??B?$CObjArray@D@@QAEPADXZ		; CObjArray<char>::operator char *
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _size$68247[ebp]
	push	edx
	call	DWORD PTR __imp__GetLogicalDriveStringsA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _newSize$68271[ebp], eax
; Line 692
	cmp	DWORD PTR _newSize$68271[ebp], 0
	je	SHORT $LN13@MyGetLogic
	mov	eax, DWORD PTR _newSize$68271[ebp]
	cmp	eax, DWORD PTR _size$68247[ebp]
	jbe	SHORT $LN14@MyGetLogic
$LN13@MyGetLogic:
; Line 693
	mov	BYTE PTR $T68736[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buf$68270[ebp]
	call	??1?$CObjArray@D@@QAE@XZ		; CObjArray<char>::~CObjArray<char>
	mov	al, BYTE PTR $T68736[ebp]
	jmp	$LN17@MyGetLogic
$LN14@MyGetLogic:
; Line 694
	lea	ecx, DWORD PTR _s$68275[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 695
	mov	DWORD PTR _prev$68276[ebp], 0
; Line 696
	mov	DWORD PTR _i$68277[ebp], 0
	jmp	SHORT $LN12@MyGetLogic
$LN11@MyGetLogic:
	mov	ecx, DWORD PTR _i$68277[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$68277[ebp], ecx
$LN12@MyGetLogic:
	mov	edx, DWORD PTR _i$68277[ebp]
	cmp	edx, DWORD PTR _newSize$68271[ebp]
	jae	SHORT $LN10@MyGetLogic
; Line 698
	lea	ecx, DWORD PTR _buf$68270[ebp]
	call	??B?$CObjArray@D@@QAEPADXZ		; CObjArray<char>::operator char *
	mov	ecx, DWORD PTR _i$68277[ebp]
	movsx	edx, BYTE PTR [eax+ecx]
	test	edx, edx
	jne	SHORT $LN9@MyGetLogic
; Line 700
	lea	ecx, DWORD PTR _buf$68270[ebp]
	call	??B?$CObjArray@D@@QAEPADXZ		; CObjArray<char>::operator char *
	add	eax, DWORD PTR _prev$68276[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$68275[ebp]
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 701
	mov	eax, DWORD PTR _i$68277[ebp]
	add	eax, 1
	mov	DWORD PTR _prev$68276[ebp], eax
; Line 702
	lea	ecx, DWORD PTR _s$68275[ebp]
	push	ecx
	lea	edx, DWORD PTR $T68737[ebp]
	push	edx
	call	?fas2fs@@YG?AVUString@@ABVAString@@@Z	; fas2fs
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv183[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv183[ebp]
	push	ecx
	mov	ecx, DWORD PTR _driveStrings$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T68737[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN9@MyGetLogic:
; Line 704
	jmp	$LN11@MyGetLogic
$LN10@MyGetLogic:
; Line 705
	mov	edx, DWORD PTR _prev$68276[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR _newSize$68271[ebp]
	sete	al
	mov	BYTE PTR $T68738[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$68275[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buf$68270[ebp]
	call	??1?$CObjArray@D@@QAE@XZ		; CObjArray<char>::~CObjArray<char>
	mov	al, BYTE PTR $T68738[ebp]
	jmp	$LN17@MyGetLogic
; Line 707
	jmp	$LN17@MyGetLogic
$LN16@MyGetLogic:
; Line 710
	mov	esi, esp
	push	0
	push	0
	call	DWORD PTR __imp__GetLogicalDriveStringsW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _size$68285[ebp], eax
; Line 711
	cmp	DWORD PTR _size$68285[ebp], 0
	jne	SHORT $LN7@MyGetLogic
; Line 712
	xor	al, al
	jmp	$LN17@MyGetLogic
$LN7@MyGetLogic:
; Line 713
	mov	ecx, DWORD PTR _size$68285[ebp]
	push	ecx
	lea	ecx, DWORD PTR _buf$68308[ebp]
	call	??0?$CObjArray@_W@@QAE@I@Z		; CObjArray<wchar_t>::CObjArray<wchar_t>
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 714
	lea	ecx, DWORD PTR _buf$68308[ebp]
	call	??B?$CObjArray@_W@@QAEPA_WXZ		; CObjArray<wchar_t>::operator wchar_t *
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _size$68285[ebp]
	push	edx
	call	DWORD PTR __imp__GetLogicalDriveStringsW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _newSize$68309[ebp], eax
; Line 715
	cmp	DWORD PTR _newSize$68309[ebp], 0
	je	SHORT $LN5@MyGetLogic
	mov	eax, DWORD PTR _newSize$68309[ebp]
	cmp	eax, DWORD PTR _size$68285[ebp]
	jbe	SHORT $LN6@MyGetLogic
$LN5@MyGetLogic:
; Line 716
	mov	BYTE PTR $T68739[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buf$68308[ebp]
	call	??1?$CObjArray@_W@@QAE@XZ		; CObjArray<wchar_t>::~CObjArray<wchar_t>
	mov	al, BYTE PTR $T68739[ebp]
	jmp	$LN17@MyGetLogic
$LN6@MyGetLogic:
; Line 717
	lea	ecx, DWORD PTR _s$68313[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 718
	mov	DWORD PTR _prev$68314[ebp], 0
; Line 719
	mov	DWORD PTR _i$68315[ebp], 0
	jmp	SHORT $LN4@MyGetLogic
$LN3@MyGetLogic:
	mov	ecx, DWORD PTR _i$68315[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$68315[ebp], ecx
$LN4@MyGetLogic:
	mov	edx, DWORD PTR _i$68315[ebp]
	cmp	edx, DWORD PTR _newSize$68309[ebp]
	jae	SHORT $LN2@MyGetLogic
; Line 721
	lea	ecx, DWORD PTR _buf$68308[ebp]
	call	??B?$CObjArray@_W@@QAEPA_WXZ		; CObjArray<wchar_t>::operator wchar_t *
	mov	ecx, DWORD PTR _i$68315[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	test	edx, edx
	jne	SHORT $LN1@MyGetLogic
; Line 723
	lea	ecx, DWORD PTR _buf$68308[ebp]
	call	??B?$CObjArray@_W@@QAEPA_WXZ		; CObjArray<wchar_t>::operator wchar_t *
	mov	ecx, DWORD PTR _prev$68314[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	lea	ecx, DWORD PTR _s$68313[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 724
	mov	eax, DWORD PTR _i$68315[ebp]
	add	eax, 1
	mov	DWORD PTR _prev$68314[ebp], eax
; Line 725
	lea	ecx, DWORD PTR _s$68313[ebp]
	push	ecx
	mov	ecx, DWORD PTR _driveStrings$[ebp]
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
$LN1@MyGetLogic:
; Line 727
	jmp	SHORT $LN3@MyGetLogic
$LN2@MyGetLogic:
; Line 728
	mov	edx, DWORD PTR _prev$68314[ebp]
	xor	eax, eax
	cmp	edx, DWORD PTR _newSize$68309[ebp]
	sete	al
	mov	BYTE PTR $T68740[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _s$68313[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buf$68308[ebp]
	call	??1?$CObjArray@_W@@QAE@XZ		; CObjArray<wchar_t>::~CObjArray<wchar_t>
	mov	al, BYTE PTR $T68740[ebp]
$LN17@MyGetLogic:
; Line 730
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@MyGetLogic
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN30@MyGetLogic:
	DD	4
	DD	$LN29@MyGetLogic
$LN29@MyGetLogic:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN24@MyGetLogic
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN25@MyGetLogic
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN26@MyGetLogic
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN27@MyGetLogic
$LN27@MyGetLogic:
	DB	115					; 00000073H
	DB	0
$LN26@MyGetLogic:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN25@MyGetLogic:
	DB	115					; 00000073H
	DB	0
$LN24@MyGetLogic:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$0:
	lea	ecx, DWORD PTR _buf$68270[ebp]
	jmp	??1?$CObjArray@D@@QAE@XZ		; CObjArray<char>::~CObjArray<char>
__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$1:
	lea	ecx, DWORD PTR _s$68275[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$2:
	lea	ecx, DWORD PTR $T68737[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$3:
	lea	ecx, DWORD PTR _buf$68308[ebp]
	jmp	??1?$CObjArray@_W@@QAE@XZ		; CObjArray<wchar_t>::~CObjArray<wchar_t>
__unwindfunclet$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z$4:
	lea	ecx, DWORD PTR _s$68313[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MyGetLogicalDriveStrings@NFind@NFile@NWindows@@YG_NAAV?$CObjectVector@VUString@@@@@Z ENDP ; NWindows::NFile::NFind::MyGetLogicalDriveStrings
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\common\myvector.h
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T68758 = -24						; size = 4
$T68757 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68758[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T68758[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T68758[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T68757[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T68757[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T68758[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
PUBLIC	?Clear@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::Clear
PUBLIC	??_GUString@@QAEPAXI@Z				; UString::`scalar deleting destructor'
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@?$CObjectVector@VUString@@@@QAEXXZ
_TEXT	SEGMENT
tv75 = -20						; size = 4
$T68771 = -16						; size = 4
$T68770 = -12						; size = 4
_i$68329 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@?$CObjectVector@VUString@@@@QAEXXZ PROC		; CObjectVector<UString>::Clear, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$68329[ebp], eax
$LN2@Clear:
	cmp	DWORD PTR _i$68329[ebp], 0
	je	SHORT $LN1@Clear
; Line 501
	mov	eax, DWORD PTR _i$68329[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$68329[ebp], eax
	mov	ecx, DWORD PTR _i$68329[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T68771[ebp], edx
	mov	eax, DWORD PTR $T68771[ebp]
	mov	DWORD PTR $T68770[ebp], eax
	cmp	DWORD PTR $T68770[ebp], 0
	je	SHORT $LN5@Clear
	push	1
	mov	ecx, DWORD PTR $T68770[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 502
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 503
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CObjectVector@VUString@@@@QAEXXZ ENDP		; CObjectVector<UString>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@D@@QAE@I@Z
_TEXT	SEGMENT
$T68776 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CObjArray@D@@QAE@I@Z PROC				; CObjArray<char>::CObjArray<char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CObjArray
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68776[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T68776[ebp]
	mov	DWORD PTR [edx], eax
$LN2@CObjArray:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CObjArray@D@@QAE@I@Z ENDP				; CObjArray<char>::CObjArray<char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@D@@QAE@XZ
_TEXT	SEGMENT
$T68779 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@D@@QAE@XZ PROC				; CObjArray<char>::~CObjArray<char>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68779[ebp], ecx
	mov	edx, DWORD PTR $T68779[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@D@@QAE@XZ ENDP				; CObjArray<char>::~CObjArray<char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@D@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@D@@QAEPADXZ PROC				; CObjArray<char>::operator char *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@D@@QAEPADXZ ENDP				; CObjArray<char>::operator char *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@_W@@QAE@I@Z
_TEXT	SEGMENT
$T68784 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CObjArray@_W@@QAE@I@Z PROC				; CObjArray<wchar_t>::CObjArray<wchar_t>, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CObjArray@2
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68784[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T68784[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@CObjArray@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CObjArray@_W@@QAE@I@Z ENDP				; CObjArray<wchar_t>::CObjArray<wchar_t>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@_W@@QAE@XZ
_TEXT	SEGMENT
$T68787 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@_W@@QAE@XZ PROC				; CObjArray<wchar_t>::~CObjArray<wchar_t>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68787[ebp], ecx
	mov	edx, DWORD PTR $T68787[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@_W@@QAE@XZ ENDP				; CObjArray<wchar_t>::~CObjArray<wchar_t>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@_W@@QAEPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@_W@@QAEPA_WXZ PROC			; CObjArray<wchar_t>::operator wchar_t *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@_W@@QAEPA_WXZ ENDP			; CObjArray<wchar_t>::operator wchar_t *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GUString@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUString@@QAEPAXI@Z PROC				; UString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUString@@QAEPAXI@Z ENDP				; UString::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@PAX@@QAEXXZ PROC			; CRecordVector<void *>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@PAX@@QAEXXZ ENDP			; CRecordVector<void *>::Clear
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T68803 = -20						; size = 4
$T68802 = -16						; size = 4
_p$68372 = -12						; size = 4
_newCapacity$68371 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$68371[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$68371[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68802[ebp], eax
	mov	eax, DWORD PTR $T68802[ebp]
	mov	DWORD PTR _p$68372[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$68372[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T68803[ebp], edx
	mov	eax, DWORD PTR $T68803[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$68372[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$68371[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
_TEXT	ENDS
PUBLIC	??0CFindStreamLoader@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindStreamLoader::CFindStreamLoader
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_FindStreamLoader@NFind@NFile@NWindows@@YAXXZ
text$yc	SEGMENT
??__Eg_FindStreamLoader@NFind@NFile@NWindows@@YAXXZ PROC ; NWindows::NFile::NFind::`dynamic initializer for 'g_FindStreamLoader'', COMDAT
; File c:\workspace\7z1505-src\cpp\windows\filefind.cpp
; Line 215
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?g_FindStreamLoader@NFind@NFile@NWindows@@3UCFindStreamLoader@123@A ; NWindows::NFile::NFind::g_FindStreamLoader
	call	??0CFindStreamLoader@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFindStreamLoader::CFindStreamLoader
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_FindStreamLoader@NFind@NFile@NWindows@@YAXXZ ENDP ; NWindows::NFile::NFind::`dynamic initializer for 'g_FindStreamLoader''
text$yc	ENDS
PUBLIC	??_C@_0BA@IBDCENBE@FindNextStreamW?$AA@		; `string'
PUBLIC	??_C@_0N@MDJJJHMB@kernel32?4dll?$AA@		; `string'
PUBLIC	??_C@_0BB@EOFBAKLA@FindFirstStreamW?$AA@	; `string'
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
;	COMDAT ??_C@_0BA@IBDCENBE@FindNextStreamW?$AA@
CONST	SEGMENT
??_C@_0BA@IBDCENBE@FindNextStreamW?$AA@ DB 'FindNextStreamW', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDJJJHMB@kernel32?4dll?$AA@
CONST	SEGMENT
??_C@_0N@MDJJJHMB@kernel32?4dll?$AA@ DB 'kernel32.dll', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EOFBAKLA@FindFirstStreamW?$AA@
CONST	SEGMENT
??_C@_0BB@EOFBAKLA@FindFirstStreamW?$AA@ DB 'FindFirstStreamW', 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CFindStreamLoader@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFindStreamLoader@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFindStreamLoader::CFindStreamLoader, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 212
	mov	esi, esp
	push	OFFSET ??_C@_0BB@EOFBAKLA@FindFirstStreamW?$AA@
	mov	edi, esp
	push	OFFSET ??_C@_0N@MDJJJHMB@kernel32?4dll?$AA@
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_FindFirstStreamW, eax
; Line 213
	mov	esi, esp
	push	OFFSET ??_C@_0BA@IBDCENBE@FindNextStreamW?$AA@
	mov	edi, esp
	push	OFFSET ??_C@_0N@MDJJJHMB@kernel32?4dll?$AA@
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _g_FindNextStreamW, eax
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFindStreamLoader@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFindStreamLoader::CFindStreamLoader
_TEXT	ENDS
PUBLIC	?g_FindStreamLoader@NFind@NFile@NWindows@@3UCFindStreamLoader@123@A ; NWindows::NFile::NFind::g_FindStreamLoader
_BSS	SEGMENT
?g_FindStreamLoader@NFind@NFile@NWindows@@3UCFindStreamLoader@123@A DB 01H DUP (?) ; NWindows::NFile::NFind::g_FindStreamLoader
_BSS	ENDS
CRT$XCU	SEGMENT
_g_FindStreamLoader$initializer$ DD FLAT:??__Eg_FindStreamLoader@NFind@NFile@NWindows@@YAXXZ
CRT$XCU	ENDS
END

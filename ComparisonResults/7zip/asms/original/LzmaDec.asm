; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\C\LzmaDec.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_LzmaDec_InitDicAndState@12
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\c\lzmadec.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_p$ = 8							; size = 4
_initDic$ = 12						; size = 4
_initState$ = 16					; size = 4
_LzmaDec_InitDicAndState@12 PROC
; Line 761
	push	ebp
	mov	ebp, esp
; Line 762
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+76], 1
; Line 763
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+72], 0
; Line 764
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+88], 0
; Line 766
	cmp	DWORD PTR _initDic$[ebp], 0
	je	SHORT $LN2@LzmaDec_In
; Line 768
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+44], 0
; Line 769
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+48], 0
; Line 770
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+80], 1
$LN2@LzmaDec_In:
; Line 772
	cmp	DWORD PTR _initState$[ebp], 0
	je	SHORT $LN3@LzmaDec_In
; Line 773
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+80], 1
$LN3@LzmaDec_In:
; Line 774
	pop	ebp
	ret	12					; 0000000cH
_LzmaDec_InitDicAndState@12 ENDP
_TEXT	ENDS
PUBLIC	_LzmaDec_Init@4
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
_LzmaDec_Init@4 PROC
; Line 777
	push	ebp
	mov	ebp, esp
; Line 778
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+36], 0
; Line 779
	push	1
	push	1
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_InitDicAndState@12
; Line 780
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
_LzmaDec_Init@4 ENDP
_TEXT	ENDS
PUBLIC	_LzmaDec_DecodeToDic@24
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_kkk$2922 = -36						; size = 4
_dummyRes$2918 = -32					; size = 4
_lookAhead$2912 = -28					; size = 4
_rem$2911 = -24						; size = 4
_dummyRes$2903 = -20					; size = 4
_bufLimit$2900 = -16					; size = 4
_processed$2899 = -12					; size = 4
_checkEndMarkNow$2882 = -8				; size = 4
_inSize$ = -4						; size = 4
_p$ = 8							; size = 4
_dicLimit$ = 12						; size = 4
_src$ = 16						; size = 4
_srcLen$ = 20						; size = 4
_finishMode$ = 24					; size = 4
_status$ = 28						; size = 4
_LzmaDec_DecodeToDic@24 PROC
; Line 796
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 797
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _inSize$[ebp], ecx
; Line 798
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], 0
; Line 799
	mov	edx, DWORD PTR _dicLimit$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	call	@LzmaDec_WriteRem@8
; Line 801
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN31@LzmaDec_De:
; Line 803
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+72], 274			; 00000112H
	je	$LN30@LzmaDec_De
; Line 807
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+76], 0
	je	$LN29@LzmaDec_De
; Line 809
	jmp	SHORT $LN28@LzmaDec_De
$LN27@LzmaDec_De:
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _inSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _inSize$[ebp], eax
$LN28@LzmaDec_De:
	cmp	DWORD PTR _inSize$[ebp], 0
	jbe	SHORT $LN26@LzmaDec_De
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+88], 5
	jae	SHORT $LN26@LzmaDec_De
; Line 810
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	mov	dl, BYTE PTR [edx]
	mov	BYTE PTR [ecx+eax+92], dl
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	add	ecx, 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+88], ecx
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax
	jmp	SHORT $LN27@LzmaDec_De
$LN26@LzmaDec_De:
; Line 811
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+88], 5
	jae	SHORT $LN25@LzmaDec_De
; Line 813
	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 3
; Line 814
	xor	eax, eax
	jmp	$LN32@LzmaDec_De
$LN25@LzmaDec_De:
; Line 816
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+92]
	test	ecx, ecx
	je	SHORT $LN24@LzmaDec_De
; Line 817
	mov	eax, 1
	jmp	$LN32@LzmaDec_De
$LN24@LzmaDec_De:
; Line 822
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+93]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+94]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+95]
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+96]
	or	eax, edx
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 823
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+28], -1
; Line 824
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 825
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+88], 0
$LN29@LzmaDec_De:
; Line 828
	mov	DWORD PTR _checkEndMarkNow$2882[ebp], 0
; Line 829
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	cmp	eax, DWORD PTR _dicLimit$[ebp]
	jb	SHORT $LN23@LzmaDec_De
; Line 831
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+72], 0
	jne	SHORT $LN22@LzmaDec_De
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+32], 0
	jne	SHORT $LN22@LzmaDec_De
; Line 833
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 4
; Line 834
	xor	eax, eax
	jmp	$LN32@LzmaDec_De
$LN22@LzmaDec_De:
; Line 836
	cmp	DWORD PTR _finishMode$[ebp], 0
	jne	SHORT $LN21@LzmaDec_De
; Line 838
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx], 2
; Line 839
	xor	eax, eax
	jmp	$LN32@LzmaDec_De
$LN21@LzmaDec_De:
; Line 841
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+72], 0
	je	SHORT $LN20@LzmaDec_De
; Line 843
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 844
	mov	eax, 1
	jmp	$LN32@LzmaDec_De
$LN20@LzmaDec_De:
; Line 846
	mov	DWORD PTR _checkEndMarkNow$2882[ebp], 1
$LN23@LzmaDec_De:
; Line 849
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+80], 0
	je	SHORT $LN19@LzmaDec_De
; Line 850
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_LzmaDec_InitStateReal@4
$LN19@LzmaDec_De:
; Line 852
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+88], 0
	jne	$LN18@LzmaDec_De
; Line 856
	cmp	DWORD PTR _inSize$[ebp], 20		; 00000014H
	jb	SHORT $LN16@LzmaDec_De
	cmp	DWORD PTR _checkEndMarkNow$2882[ebp], 0
	je	SHORT $LN17@LzmaDec_De
$LN16@LzmaDec_De:
; Line 858
	mov	ecx, DWORD PTR _inSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_TryDummy@12
	mov	DWORD PTR _dummyRes$2903[ebp], eax
; Line 859
	cmp	DWORD PTR _dummyRes$2903[ebp], 0
	jne	SHORT $LN15@LzmaDec_De
; Line 861
	mov	ecx, DWORD PTR _inSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 862
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _inSize$[ebp]
	mov	DWORD PTR [ecx+88], edx
; Line 863
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _inSize$[ebp]
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 864
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 865
	xor	eax, eax
	jmp	$LN32@LzmaDec_De
$LN15@LzmaDec_De:
; Line 867
	cmp	DWORD PTR _checkEndMarkNow$2882[ebp], 0
	je	SHORT $LN14@LzmaDec_De
	cmp	DWORD PTR _dummyRes$2903[ebp], 2
	je	SHORT $LN14@LzmaDec_De
; Line 869
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx], 2
; Line 870
	mov	eax, 1
	jmp	$LN32@LzmaDec_De
$LN14@LzmaDec_De:
; Line 872
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR _bufLimit$2900[ebp], edx
; Line 874
	jmp	SHORT $LN13@LzmaDec_De
$LN17@LzmaDec_De:
; Line 875
	mov	eax, DWORD PTR _inSize$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	lea	edx, DWORD PTR [ecx+eax-20]
	mov	DWORD PTR _bufLimit$2900[ebp], edx
$LN13@LzmaDec_De:
; Line 876
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 877
	mov	edx, DWORD PTR _bufLimit$2900[ebp]
	push	edx
	mov	edx, DWORD PTR _dicLimit$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	call	@LzmaDec_DecodeReal2@12
	test	eax, eax
	je	SHORT $LN12@LzmaDec_De
; Line 878
	mov	eax, 1
	jmp	$LN32@LzmaDec_De
$LN12@LzmaDec_De:
; Line 879
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _src$[ebp]
	mov	DWORD PTR _processed$2899[ebp], ecx
; Line 880
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _processed$2899[ebp]
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 881
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, DWORD PTR _processed$2899[ebp]
	mov	DWORD PTR _src$[ebp], edx
; Line 882
	mov	eax, DWORD PTR _inSize$[ebp]
	sub	eax, DWORD PTR _processed$2899[ebp]
	mov	DWORD PTR _inSize$[ebp], eax
; Line 884
	jmp	$LN11@LzmaDec_De
$LN18@LzmaDec_De:
; Line 886
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR _rem$2911[ebp], edx
	mov	DWORD PTR _lookAhead$2912[ebp], 0
$LN10@LzmaDec_De:
; Line 887
	cmp	DWORD PTR _rem$2911[ebp], 20		; 00000014H
	jae	SHORT $LN9@LzmaDec_De
	mov	eax, DWORD PTR _lookAhead$2912[ebp]
	cmp	eax, DWORD PTR _inSize$[ebp]
	jae	SHORT $LN9@LzmaDec_De
; Line 888
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _rem$2911[ebp]
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, DWORD PTR _lookAhead$2912[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx+92], al
	mov	ecx, DWORD PTR _rem$2911[ebp]
	add	ecx, 1
	mov	DWORD PTR _rem$2911[ebp], ecx
	mov	edx, DWORD PTR _lookAhead$2912[ebp]
	add	edx, 1
	mov	DWORD PTR _lookAhead$2912[ebp], edx
	jmp	SHORT $LN10@LzmaDec_De
$LN9@LzmaDec_De:
; Line 889
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _rem$2911[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 890
	cmp	DWORD PTR _rem$2911[ebp], 20		; 00000014H
	jb	SHORT $LN7@LzmaDec_De
	cmp	DWORD PTR _checkEndMarkNow$2882[ebp], 0
	je	SHORT $LN8@LzmaDec_De
$LN7@LzmaDec_De:
; Line 892
	mov	edx, DWORD PTR _rem$2911[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_TryDummy@12
	mov	DWORD PTR _dummyRes$2918[ebp], eax
; Line 893
	cmp	DWORD PTR _dummyRes$2918[ebp], 0
	jne	SHORT $LN6@LzmaDec_De
; Line 895
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _lookAhead$2912[ebp]
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 896
	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 3
; Line 897
	xor	eax, eax
	jmp	$LN32@LzmaDec_De
$LN6@LzmaDec_De:
; Line 899
	cmp	DWORD PTR _checkEndMarkNow$2882[ebp], 0
	je	SHORT $LN8@LzmaDec_De
	cmp	DWORD PTR _dummyRes$2918[ebp], 2
	je	SHORT $LN8@LzmaDec_De
; Line 901
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 902
	mov	eax, 1
	jmp	$LN32@LzmaDec_De
$LN8@LzmaDec_De:
; Line 905
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 92					; 0000005cH
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 906
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _dicLimit$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	call	@LzmaDec_DecodeReal2@12
	test	eax, eax
	je	SHORT $LN4@LzmaDec_De
; Line 907
	mov	eax, 1
	jmp	$LN32@LzmaDec_De
$LN4@LzmaDec_De:
; Line 910
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 92					; 0000005cH
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, edx
	mov	DWORD PTR _kkk$2922[ebp], ecx
; Line 911
	mov	edx, DWORD PTR _rem$2911[ebp]
	cmp	edx, DWORD PTR _kkk$2922[ebp]
	jae	SHORT $LN3@LzmaDec_De
; Line 912
	mov	eax, 11					; 0000000bH
	jmp	SHORT $LN32@LzmaDec_De
$LN3@LzmaDec_De:
; Line 913
	mov	eax, DWORD PTR _rem$2911[ebp]
	sub	eax, DWORD PTR _kkk$2922[ebp]
	mov	DWORD PTR _rem$2911[ebp], eax
; Line 914
	mov	ecx, DWORD PTR _lookAhead$2912[ebp]
	cmp	ecx, DWORD PTR _rem$2911[ebp]
	jae	SHORT $LN2@LzmaDec_De
; Line 915
	mov	eax, 11					; 0000000bH
	jmp	SHORT $LN32@LzmaDec_De
$LN2@LzmaDec_De:
; Line 916
	mov	edx, DWORD PTR _lookAhead$2912[ebp]
	sub	edx, DWORD PTR _rem$2911[ebp]
	mov	DWORD PTR _lookAhead$2912[ebp], edx
; Line 918
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _lookAhead$2912[ebp]
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 919
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, DWORD PTR _lookAhead$2912[ebp]
	mov	DWORD PTR _src$[ebp], eax
; Line 920
	mov	ecx, DWORD PTR _inSize$[ebp]
	sub	ecx, DWORD PTR _lookAhead$2912[ebp]
	mov	DWORD PTR _inSize$[ebp], ecx
; Line 921
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+88], 0
$LN11@LzmaDec_De:
; Line 923
	jmp	$LN31@LzmaDec_De
$LN30@LzmaDec_De:
; Line 924
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+32], 0
	jne	SHORT $LN1@LzmaDec_De
; Line 925
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx], 1
$LN1@LzmaDec_De:
; Line 926
	mov	edx, DWORD PTR _p$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+32], 0
	setne	al
$LN32@LzmaDec_De:
; Line 927
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_LzmaDec_DecodeToDic@24 ENDP
; Function compile flags: /Odtp /RTCsu
tv95 = -36						; size = 4
_rem$2676 = -32						; size = 4
_rep0$2675 = -28					; size = 4
_len$2674 = -24						; size = 4
_dicBufSize$2673 = -20					; size = 4
_dicPos$2672 = -16					; size = 4
_dic$2671 = -12						; size = 4
_limit$ = -8						; size = 4
_p$ = -4						; size = 4
@LzmaDec_WriteRem@8 PROC
; _p$ = ecx
; _limit$ = edx
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _limit$[ebp], edx
	mov	DWORD PTR _p$[ebp], ecx
; Line 508
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	$LN6@
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+72], 274			; 00000112H
	jae	$LN6@
; Line 510
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _dic$2671[ebp], eax
; Line 511
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR _dicPos$2672[ebp], edx
; Line 512
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _dicBufSize$2673[ebp], ecx
; Line 513
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+72]
	mov	DWORD PTR _len$2674[ebp], eax
; Line 514
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _rep0$2675[ebp], edx
; Line 515
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _dicPos$2672[ebp]
	mov	DWORD PTR _rem$2676[ebp], eax
; Line 516
	mov	ecx, DWORD PTR _rem$2676[ebp]
	cmp	ecx, DWORD PTR _len$2674[ebp]
	jae	SHORT $LN4@
; Line 517
	mov	edx, DWORD PTR _rem$2676[ebp]
	mov	DWORD PTR _len$2674[ebp], edx
$LN4@:
; Line 519
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN3@
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+44]
	cmp	eax, DWORD PTR _len$2674[ebp]
	ja	SHORT $LN3@
; Line 520
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+48], eax
$LN3@:
; Line 522
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	add	edx, DWORD PTR _len$2674[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+44], edx
; Line 523
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	sub	edx, DWORD PTR _len$2674[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+72], edx
$LN2@:
; Line 524
	cmp	DWORD PTR _len$2674[ebp], 0
	je	SHORT $LN1@
; Line 526
	mov	ecx, DWORD PTR _len$2674[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$2674[ebp], ecx
; Line 527
	mov	edx, DWORD PTR _dicPos$2672[ebp]
	cmp	edx, DWORD PTR _rep0$2675[ebp]
	jae	SHORT $LN8@
	mov	eax, DWORD PTR _dicBufSize$2673[ebp]
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN9@
$LN8@:
	mov	DWORD PTR tv95[ebp], 0
$LN9@:
	mov	ecx, DWORD PTR _dicPos$2672[ebp]
	sub	ecx, DWORD PTR _rep0$2675[ebp]
	add	ecx, DWORD PTR tv95[ebp]
	mov	edx, DWORD PTR _dic$2671[ebp]
	add	edx, DWORD PTR _dicPos$2672[ebp]
	mov	eax, DWORD PTR _dic$2671[ebp]
	mov	cl, BYTE PTR [eax+ecx]
	mov	BYTE PTR [edx], cl
; Line 528
	mov	edx, DWORD PTR _dicPos$2672[ebp]
	add	edx, 1
	mov	DWORD PTR _dicPos$2672[ebp], edx
; Line 529
	jmp	SHORT $LN2@
$LN1@:
; Line 530
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _dicPos$2672[ebp]
	mov	DWORD PTR [eax+36], ecx
$LN6@:
; Line 532
	mov	esp, ebp
	pop	ebp
	ret	0
@LzmaDec_WriteRem@8 ENDP
; Function compile flags: /Odtp /RTCsu
___result__$2698 = -20					; size = 4
_rem$2696 = -16						; size = 4
_limit2$2694 = -12					; size = 4
_limit$ = -8						; size = 4
_p$ = -4						; size = 4
_bufLimit$ = 8						; size = 4
@LzmaDec_DecodeReal2@12 PROC
; _p$ = ecx
; _limit$ = edx
; Line 535
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _limit$[ebp], edx
	mov	DWORD PTR _p$[ebp], ecx
$LN9@:
; Line 538
	mov	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR _limit2$2694[ebp], eax
; Line 539
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN6@
; Line 541
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _rem$2696[ebp], ecx
; Line 542
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR [edx+36]
	cmp	eax, DWORD PTR _rem$2696[ebp]
	jbe	SHORT $LN6@
; Line 543
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	add	edx, DWORD PTR _rem$2696[ebp]
	mov	DWORD PTR _limit2$2694[ebp], edx
$LN6@:
; Line 546
	mov	eax, DWORD PTR _bufLimit$[ebp]
	push	eax
	mov	edx, DWORD PTR _limit2$2694[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	call	@LzmaDec_DecodeReal@12
	mov	DWORD PTR ___result__$2698[ebp], eax
	cmp	DWORD PTR ___result__$2698[ebp], 0
	je	SHORT $LN4@
	mov	eax, DWORD PTR ___result__$2698[ebp]
	jmp	SHORT $LN10@
$LN4@:
; Line 548
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+48], 0
	jne	SHORT $LN3@
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+44]
	cmp	ecx, DWORD PTR [eax+12]
	jb	SHORT $LN3@
; Line 549
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+48], ecx
$LN3@:
; Line 551
	mov	edx, DWORD PTR _limit$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	call	@LzmaDec_WriteRem@8
; Line 553
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	SHORT $LN7@
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	cmp	edx, DWORD PTR _bufLimit$[ebp]
	jae	SHORT $LN7@
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+72], 274			; 00000112H
	jb	$LN9@
$LN7@:
; Line 555
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+72], 274			; 00000112H
	jbe	SHORT $LN1@
; Line 556
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+72], 274			; 00000112H
$LN1@:
; Line 558
	xor	eax, eax
$LN10@:
; Line 559
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
@LzmaDec_DecodeReal2@12 ENDP
; Function compile flags: /Odtp /RTCsu
tv1448 = -204						; size = 4
tv1445 = -200						; size = 4
tv1078 = -196						; size = 4
tv731 = -192						; size = 4
tv387 = -188						; size = 4
tv159 = -184						; size = 4
tv146 = -180						; size = 4
_lim$2651 = -176					; size = 4
_src$2648 = -172					; size = 4
_dest$2647 = -168					; size = 4
_pos$2643 = -164					; size = 4
_curLen$2642 = -160					; size = 4
_rem$2641 = -156					; size = 4
_i$2610 = -152						; size = 4
_t$2608 = -148						; size = 4
_i$2592 = -144						; size = 4
_mask$2591 = -140					; size = 4
_numDirectBits$2588 = -136				; size = 4
_posSlot$2586 = -132					; size = 4
_distance$2548 = -128					; size = 4
_probLen$2489 = -124					; size = 4
_distance$2475 = -120					; size = 4
_probLit$2407 = -116					; size = 4
_bit$2406 = -112					; size = 4
_offs$2405 = -108					; size = 4
_matchByte$2404 = -104					; size = 4
_symbol$2349 = -100					; size = 4
_posState$2345 = -96					; size = 4
_ttt$2344 = -92						; size = 4
_bound$2343 = -88					; size = 4
_prob$2342 = -84					; size = 4
_code$ = -80						; size = 4
_range$ = -76						; size = 4
_buf$ = -72						; size = 4
_len$ = -68						; size = 4
_checkDicSize$ = -64					; size = 4
_processedPos$ = -60					; size = 4
_dicPos$ = -56						; size = 4
_dicBufSize$ = -52					; size = 4
_dic$ = -48						; size = 4
_lc$ = -44						; size = 4
_lpMask$ = -40						; size = 4
_pbMask$ = -36						; size = 4
_rep3$ = -32						; size = 4
_rep2$ = -28						; size = 4
_rep1$ = -24						; size = 4
_rep0$ = -20						; size = 4
_state$ = -16						; size = 4
_probs$ = -12						; size = 4
_limit$ = -8						; size = 4
_p$ = -4						; size = 4
_bufLimit$ = 8						; size = 4
@LzmaDec_DecodeReal@12 PROC
; _p$ = ecx
; _limit$ = edx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _limit$[ebp], edx
	mov	DWORD PTR _p$[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _probs$[ebp], ecx
; Line 144
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR _state$[ebp], eax
; Line 145
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR _rep0$[ebp], edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _rep1$[ebp], ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR _rep2$[ebp], eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR _rep3$[ebp], edx
; Line 146
	mov	eax, DWORD PTR _p$[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR [eax+8]
	shl	edx, cl
	sub	edx, 1
	mov	DWORD PTR _pbMask$[ebp], edx
; Line 147
	mov	eax, DWORD PTR _p$[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR [eax+4]
	shl	edx, cl
	sub	edx, 1
	mov	DWORD PTR _lpMask$[ebp], edx
; Line 148
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _lc$[ebp], ecx
; Line 150
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _dic$[ebp], eax
; Line 151
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _dicBufSize$[ebp], edx
; Line 152
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _dicPos$[ebp], ecx
; Line 154
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR _processedPos$[ebp], eax
; Line 155
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR _checkDicSize$[ebp], edx
; Line 156
	mov	DWORD PTR _len$[ebp], 0
; Line 158
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _buf$[ebp], ecx
; Line 159
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR _range$[ebp], eax
; Line 160
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _code$[ebp], edx
$LN163@:
; Line 167
	mov	eax, DWORD PTR _processedPos$[ebp]
	and	eax, DWORD PTR _pbMask$[ebp]
	mov	DWORD PTR _posState$2345[ebp], eax
; Line 169
	mov	ecx, DWORD PTR _state$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _posState$2345[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _prob$2342[ebp], edx
; Line 170
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN160@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN160@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	$LN159@
; Line 173
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx], cx
; Line 174
	mov	eax, DWORD PTR _probs$[ebp]
	add	eax, 3692				; 00000e6cH
	mov	DWORD PTR _prob$2342[ebp], eax
; Line 175
	cmp	DWORD PTR _processedPos$[ebp], 0
	jne	SHORT $LN157@
	cmp	DWORD PTR _checkDicSize$[ebp], 0
	je	SHORT $LN158@
$LN157@:
; Line 177
	cmp	DWORD PTR _dicPos$[ebp], 0
	jne	SHORT $LN166@
	mov	ecx, DWORD PTR _dicBufSize$[ebp]
	mov	DWORD PTR tv146[ebp], ecx
	jmp	SHORT $LN167@
$LN166@:
	mov	edx, DWORD PTR _dicPos$[ebp]
	mov	DWORD PTR tv146[ebp], edx
$LN167@:
	mov	eax, DWORD PTR _processedPos$[ebp]
	and	eax, DWORD PTR _lpMask$[ebp]
	mov	ecx, DWORD PTR _lc$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _dic$[ebp]
	add	ecx, DWORD PTR tv146[ebp]
	movzx	edx, BYTE PTR [ecx-1]
	mov	ecx, 8
	sub	ecx, DWORD PTR _lc$[ebp]
	sar	edx, cl
	add	eax, edx
	imul	eax, 768				; 00000300H
	mov	ecx, DWORD PTR _prob$2342[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _prob$2342[ebp], edx
$LN158@:
; Line 178
	mov	eax, DWORD PTR _processedPos$[ebp]
	add	eax, 1
	mov	DWORD PTR _processedPos$[ebp], eax
; Line 180
	cmp	DWORD PTR _state$[ebp], 7
	jae	$LN156@
; Line 182
	cmp	DWORD PTR _state$[ebp], 4
	jae	SHORT $LN168@
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR tv159[ebp], ecx
	jmp	SHORT $LN169@
$LN168@:
	mov	DWORD PTR tv159[ebp], 3
$LN169@:
	mov	edx, DWORD PTR _state$[ebp]
	sub	edx, DWORD PTR tv159[ebp]
	mov	DWORD PTR _state$[ebp], edx
; Line 183
	mov	DWORD PTR _symbol$2349[ebp], 1
; Line 187
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN155@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN155@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN154@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN153@
$LN154@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN153@:
; Line 188
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN152@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN152@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN151@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN150@
$LN151@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN150@:
; Line 189
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN149@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN149@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN148@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN147@
$LN148@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN147@:
; Line 190
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN146@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN146@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN145@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN144@
$LN145@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN144@:
; Line 191
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN143@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN143@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN142@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN141@
$LN142@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN141@:
; Line 192
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN140@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN140@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN139@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN138@
$LN139@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN138@:
; Line 193
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN137@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN137@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN136@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN135@
$LN136@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN135@:
; Line 194
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN134@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN134@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN133@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	jmp	SHORT $LN132@
$LN133@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
$LN132@:
; Line 197
	jmp	$LN131@
$LN156@:
; Line 199
	mov	eax, DWORD PTR _dicPos$[ebp]
	cmp	eax, DWORD PTR _rep0$[ebp]
	jae	SHORT $LN170@
	mov	ecx, DWORD PTR _dicBufSize$[ebp]
	mov	DWORD PTR tv387[ebp], ecx
	jmp	SHORT $LN171@
$LN170@:
	mov	DWORD PTR tv387[ebp], 0
$LN171@:
	mov	edx, DWORD PTR _dicPos$[ebp]
	sub	edx, DWORD PTR _rep0$[ebp]
	add	edx, DWORD PTR tv387[ebp]
	mov	eax, DWORD PTR _dic$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	DWORD PTR _matchByte$2404[ebp], ecx
; Line 200
	mov	DWORD PTR _offs$2405[ebp], 256		; 00000100H
; Line 201
	cmp	DWORD PTR _state$[ebp], 10		; 0000000aH
	sbb	edx, edx
	and	edx, -3					; fffffffdH
	add	edx, 6
	mov	eax, DWORD PTR _state$[ebp]
	sub	eax, edx
	mov	DWORD PTR _state$[ebp], eax
; Line 202
	mov	DWORD PTR _symbol$2349[ebp], 1
; Line 215
	mov	ecx, DWORD PTR _matchByte$2404[ebp]
	shl	ecx, 1
	mov	DWORD PTR _matchByte$2404[ebp], ecx
	mov	edx, DWORD PTR _matchByte$2404[ebp]
	and	edx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], edx
	mov	eax, DWORD PTR _offs$2405[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _bit$2406[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	edx, DWORD PTR _symbol$2349[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _probLit$2407[ebp], eax
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN130@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN130@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN129@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	add	ecx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], ecx
	mov	edx, DWORD PTR _bit$2406[ebp]
	not	edx
	and	edx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], edx
	jmp	SHORT $LN128@
$LN129@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _symbol$2349[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _symbol$2349[ebp], ecx
	mov	edx, DWORD PTR _offs$2405[ebp]
	and	edx, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], edx
$LN128@:
; Line 216
	mov	eax, DWORD PTR _matchByte$2404[ebp]
	shl	eax, 1
	mov	DWORD PTR _matchByte$2404[ebp], eax
	mov	ecx, DWORD PTR _matchByte$2404[ebp]
	and	ecx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], ecx
	mov	edx, DWORD PTR _offs$2405[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _bit$2406[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _probLit$2407[ebp], edx
	mov	eax, DWORD PTR _probLit$2407[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN127@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN127@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN126@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _symbol$2349[ebp]
	add	eax, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], eax
	mov	ecx, DWORD PTR _bit$2406[ebp]
	not	ecx
	and	ecx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], ecx
	jmp	SHORT $LN125@
$LN126@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _symbol$2349[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _symbol$2349[ebp], eax
	mov	ecx, DWORD PTR _offs$2405[ebp]
	and	ecx, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], ecx
$LN125@:
; Line 217
	mov	edx, DWORD PTR _matchByte$2404[ebp]
	shl	edx, 1
	mov	DWORD PTR _matchByte$2404[ebp], edx
	mov	eax, DWORD PTR _matchByte$2404[ebp]
	and	eax, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], eax
	mov	ecx, DWORD PTR _offs$2405[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _bit$2406[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _probLit$2407[ebp], ecx
	mov	edx, DWORD PTR _probLit$2407[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN124@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN124@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN123@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	mov	eax, DWORD PTR _bit$2406[ebp]
	not	eax
	and	eax, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], eax
	jmp	SHORT $LN122@
$LN123@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
	mov	eax, DWORD PTR _offs$2405[ebp]
	and	eax, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], eax
$LN122@:
; Line 218
	mov	ecx, DWORD PTR _matchByte$2404[ebp]
	shl	ecx, 1
	mov	DWORD PTR _matchByte$2404[ebp], ecx
	mov	edx, DWORD PTR _matchByte$2404[ebp]
	and	edx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], edx
	mov	eax, DWORD PTR _offs$2405[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _bit$2406[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	edx, DWORD PTR _symbol$2349[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _probLit$2407[ebp], eax
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN121@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN121@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN120@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	add	ecx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], ecx
	mov	edx, DWORD PTR _bit$2406[ebp]
	not	edx
	and	edx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], edx
	jmp	SHORT $LN119@
$LN120@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _symbol$2349[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _symbol$2349[ebp], ecx
	mov	edx, DWORD PTR _offs$2405[ebp]
	and	edx, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], edx
$LN119@:
; Line 219
	mov	eax, DWORD PTR _matchByte$2404[ebp]
	shl	eax, 1
	mov	DWORD PTR _matchByte$2404[ebp], eax
	mov	ecx, DWORD PTR _matchByte$2404[ebp]
	and	ecx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], ecx
	mov	edx, DWORD PTR _offs$2405[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _bit$2406[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _probLit$2407[ebp], edx
	mov	eax, DWORD PTR _probLit$2407[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN118@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN118@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN117@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _symbol$2349[ebp]
	add	eax, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], eax
	mov	ecx, DWORD PTR _bit$2406[ebp]
	not	ecx
	and	ecx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], ecx
	jmp	SHORT $LN116@
$LN117@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _symbol$2349[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _symbol$2349[ebp], eax
	mov	ecx, DWORD PTR _offs$2405[ebp]
	and	ecx, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], ecx
$LN116@:
; Line 220
	mov	edx, DWORD PTR _matchByte$2404[ebp]
	shl	edx, 1
	mov	DWORD PTR _matchByte$2404[ebp], edx
	mov	eax, DWORD PTR _matchByte$2404[ebp]
	and	eax, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], eax
	mov	ecx, DWORD PTR _offs$2405[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _bit$2406[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _probLit$2407[ebp], ecx
	mov	edx, DWORD PTR _probLit$2407[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN115@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN115@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN114@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _symbol$2349[ebp]
	add	edx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], edx
	mov	eax, DWORD PTR _bit$2406[ebp]
	not	eax
	and	eax, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], eax
	jmp	SHORT $LN113@
$LN114@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _symbol$2349[ebp]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _symbol$2349[ebp], edx
	mov	eax, DWORD PTR _offs$2405[ebp]
	and	eax, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], eax
$LN113@:
; Line 221
	mov	ecx, DWORD PTR _matchByte$2404[ebp]
	shl	ecx, 1
	mov	DWORD PTR _matchByte$2404[ebp], ecx
	mov	edx, DWORD PTR _matchByte$2404[ebp]
	and	edx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], edx
	mov	eax, DWORD PTR _offs$2405[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _bit$2406[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	edx, DWORD PTR _symbol$2349[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _probLit$2407[ebp], eax
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN112@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN112@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN111@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	add	ecx, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], ecx
	mov	edx, DWORD PTR _bit$2406[ebp]
	not	edx
	and	edx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], edx
	jmp	SHORT $LN110@
$LN111@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _symbol$2349[ebp]
	mov	eax, DWORD PTR _symbol$2349[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _symbol$2349[ebp], ecx
	mov	edx, DWORD PTR _offs$2405[ebp]
	and	edx, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], edx
$LN110@:
; Line 222
	mov	eax, DWORD PTR _matchByte$2404[ebp]
	shl	eax, 1
	mov	DWORD PTR _matchByte$2404[ebp], eax
	mov	ecx, DWORD PTR _matchByte$2404[ebp]
	and	ecx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _bit$2406[ebp], ecx
	mov	edx, DWORD PTR _offs$2405[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _bit$2406[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _probLit$2407[ebp], edx
	mov	eax, DWORD PTR _probLit$2407[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN109@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN109@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN108@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _symbol$2349[ebp]
	add	eax, DWORD PTR _symbol$2349[ebp]
	mov	DWORD PTR _symbol$2349[ebp], eax
	mov	ecx, DWORD PTR _bit$2406[ebp]
	not	ecx
	and	ecx, DWORD PTR _offs$2405[ebp]
	mov	DWORD PTR _offs$2405[ebp], ecx
	jmp	SHORT $LN131@
$LN108@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _probLit$2407[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _symbol$2349[ebp]
	mov	edx, DWORD PTR _symbol$2349[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _symbol$2349[ebp], eax
	mov	ecx, DWORD PTR _offs$2405[ebp]
	and	ecx, DWORD PTR _bit$2406[ebp]
	mov	DWORD PTR _offs$2405[ebp], ecx
$LN131@:
; Line 227
	mov	edx, DWORD PTR _dic$[ebp]
	add	edx, DWORD PTR _dicPos$[ebp]
	mov	al, BYTE PTR _symbol$2349[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _dicPos$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dicPos$[ebp], ecx
; Line 228
	jmp	$LN162@
$LN159@:
; Line 232
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax], dx
; Line 233
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+384]
	mov	DWORD PTR _prob$2342[ebp], eax
; Line 234
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN106@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN106@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN105@
; Line 236
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax], dx
; Line 237
	mov	ecx, DWORD PTR _state$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _state$[ebp], ecx
; Line 238
	mov	edx, DWORD PTR _probs$[ebp]
	add	edx, 1636				; 00000664H
	mov	DWORD PTR _prob$2342[ebp], edx
; Line 240
	jmp	$LN104@
$LN105@:
; Line 242
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 243
	cmp	DWORD PTR _checkDicSize$[ebp], 0
	jne	SHORT $LN103@
	cmp	DWORD PTR _processedPos$[ebp], 0
	jne	SHORT $LN103@
; Line 244
	mov	eax, 1
	jmp	$LN164@
$LN103@:
; Line 245
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+408]
	mov	DWORD PTR _prob$2342[ebp], ecx
; Line 246
	mov	edx, DWORD PTR _prob$2342[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN102@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN102@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	$LN101@
; Line 248
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 249
	mov	edx, DWORD PTR _state$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+480]
	mov	edx, DWORD PTR _posState$2345[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _prob$2342[ebp], eax
; Line 250
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN100@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN100@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN99@
; Line 252
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax], dx
; Line 253
	mov	ecx, DWORD PTR _dicPos$[ebp]
	cmp	ecx, DWORD PTR _rep0$[ebp]
	jae	SHORT $LN172@
	mov	edx, DWORD PTR _dicBufSize$[ebp]
	mov	DWORD PTR tv731[ebp], edx
	jmp	SHORT $LN173@
$LN172@:
	mov	DWORD PTR tv731[ebp], 0
$LN173@:
	mov	eax, DWORD PTR _dicPos$[ebp]
	sub	eax, DWORD PTR _rep0$[ebp]
	add	eax, DWORD PTR tv731[ebp]
	mov	ecx, DWORD PTR _dic$[ebp]
	add	ecx, DWORD PTR _dicPos$[ebp]
	mov	edx, DWORD PTR _dic$[ebp]
	mov	al, BYTE PTR [edx+eax]
	mov	BYTE PTR [ecx], al
; Line 254
	mov	ecx, DWORD PTR _dicPos$[ebp]
	add	ecx, 1
	mov	DWORD PTR _dicPos$[ebp], ecx
; Line 255
	mov	edx, DWORD PTR _processedPos$[ebp]
	add	edx, 1
	mov	DWORD PTR _processedPos$[ebp], edx
; Line 256
	cmp	DWORD PTR _state$[ebp], 7
	sbb	eax, eax
	and	eax, -2					; fffffffeH
	add	eax, 11					; 0000000bH
	mov	DWORD PTR _state$[ebp], eax
; Line 257
	jmp	$LN162@
$LN99@:
; Line 259
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx], cx
; Line 261
	jmp	$LN98@
$LN101@:
; Line 264
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 265
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+432]
	mov	DWORD PTR _prob$2342[ebp], ecx
; Line 266
	mov	edx, DWORD PTR _prob$2342[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN97@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN97@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN96@
; Line 268
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 269
	mov	edx, DWORD PTR _rep1$[ebp]
	mov	DWORD PTR _distance$2475[ebp], edx
; Line 271
	jmp	$LN95@
$LN96@:
; Line 273
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 274
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+456]
	mov	DWORD PTR _prob$2342[ebp], ecx
; Line 275
	mov	edx, DWORD PTR _prob$2342[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN94@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN94@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN93@
; Line 277
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 278
	mov	edx, DWORD PTR _rep2$[ebp]
	mov	DWORD PTR _distance$2475[ebp], edx
; Line 280
	jmp	SHORT $LN92@
$LN93@:
; Line 282
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx], ax
; Line 283
	mov	edx, DWORD PTR _rep3$[ebp]
	mov	DWORD PTR _distance$2475[ebp], edx
; Line 284
	mov	eax, DWORD PTR _rep2$[ebp]
	mov	DWORD PTR _rep3$[ebp], eax
$LN92@:
; Line 286
	mov	ecx, DWORD PTR _rep1$[ebp]
	mov	DWORD PTR _rep2$[ebp], ecx
$LN95@:
; Line 288
	mov	edx, DWORD PTR _rep0$[ebp]
	mov	DWORD PTR _rep1$[ebp], edx
; Line 289
	mov	eax, DWORD PTR _distance$2475[ebp]
	mov	DWORD PTR _rep0$[ebp], eax
$LN98@:
; Line 291
	cmp	DWORD PTR _state$[ebp], 7
	sbb	ecx, ecx
	and	ecx, -3					; fffffffdH
	add	ecx, 11					; 0000000bH
	mov	DWORD PTR _state$[ebp], ecx
; Line 292
	mov	edx, DWORD PTR _probs$[ebp]
	add	edx, 2664				; 00000a68H
	mov	DWORD PTR _prob$2342[ebp], edx
$LN104@:
; Line 330
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	DWORD PTR _probLen$2489[ebp], eax
; Line 331
	mov	ecx, DWORD PTR _probLen$2489[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN91@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN91@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	$LN90@
; Line 333
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax], dx
; Line 334
	mov	ecx, DWORD PTR _posState$2345[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR _prob$2342[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+4]
	mov	DWORD PTR _probLen$2489[ebp], eax
; Line 335
	mov	DWORD PTR _len$[ebp], 1
; Line 336
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _probLen$2489[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN89@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN89@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN88@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], eax
	jmp	SHORT $LN87@
$LN88@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _len$[ebp], eax
$LN87@:
; Line 337
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _probLen$2489[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN86@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN86@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN85@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], eax
	jmp	SHORT $LN84@
$LN85@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _len$[ebp], eax
$LN84@:
; Line 338
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _probLen$2489[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN83@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN83@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN82@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], eax
	jmp	SHORT $LN81@
$LN82@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _len$[ebp], eax
$LN81@:
; Line 339
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 8
	mov	DWORD PTR _len$[ebp], ecx
; Line 341
	jmp	$LN80@
$LN90@:
; Line 343
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax], dx
; Line 344
	mov	ecx, DWORD PTR _prob$2342[ebp]
	add	ecx, 2
	mov	DWORD PTR _probLen$2489[ebp], ecx
; Line 345
	mov	edx, DWORD PTR _probLen$2489[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN79@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN79@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	$LN78@
; Line 347
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [ecx], ax
; Line 348
	mov	edx, DWORD PTR _posState$2345[ebp]
	shl	edx, 3
	mov	eax, DWORD PTR _prob$2342[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+260]
	mov	DWORD PTR _probLen$2489[ebp], ecx
; Line 349
	mov	DWORD PTR _len$[ebp], 1
; Line 350
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN77@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN77@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN76@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], ecx
	jmp	SHORT $LN75@
$LN76@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _len$[ebp], ecx
$LN75@:
; Line 351
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN74@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN74@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN73@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], ecx
	jmp	SHORT $LN72@
$LN73@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _len$[ebp], ecx
$LN72@:
; Line 352
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN71@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN71@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN70@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], ecx
	jmp	SHORT $LN69@
$LN70@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _len$[ebp], ecx
$LN69@:
; Line 354
	jmp	$LN80@
$LN78@:
; Line 356
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax], dx
; Line 357
	mov	ecx, DWORD PTR _prob$2342[ebp]
	add	ecx, 516				; 00000204H
	mov	DWORD PTR _probLen$2489[ebp], ecx
; Line 358
	mov	DWORD PTR _len$[ebp], 1
$LN67@:
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN64@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN64@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN63@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _len$[ebp], ecx
	jmp	SHORT $LN66@
$LN63@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _probLen$2489[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _len$[ebp], ecx
$LN66@:
	cmp	DWORD PTR _len$[ebp], 256		; 00000100H
	jb	$LN67@
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 256				; 00000100H
	mov	DWORD PTR _len$[ebp], edx
; Line 359
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax
$LN80@:
; Line 365
	cmp	DWORD PTR _state$[ebp], 12		; 0000000cH
	jb	$LN61@
; Line 369
	cmp	DWORD PTR _len$[ebp], 4
	jae	SHORT $LN174@
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv1078[ebp], ecx
	jmp	SHORT $LN175@
$LN174@:
	mov	DWORD PTR tv1078[ebp], 3
$LN175@:
	mov	edx, DWORD PTR tv1078[ebp]
	shl	edx, 6
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+864]
	mov	DWORD PTR _prob$2342[ebp], ecx
; Line 370
	mov	DWORD PTR _distance$2548[ebp], 1
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN60@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN60@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN59@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _distance$2548[ebp], ecx
	jmp	SHORT $LN58@
$LN59@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _distance$2548[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN58@:
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN57@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN57@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN56@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _distance$2548[ebp], ecx
	jmp	SHORT $LN55@
$LN56@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _distance$2548[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN55@:
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN54@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN54@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN53@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _distance$2548[ebp], ecx
	jmp	SHORT $LN52@
$LN53@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _distance$2548[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN52@:
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN51@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN51@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN50@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _distance$2548[ebp], ecx
	jmp	SHORT $LN49@
$LN50@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _distance$2548[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN49@:
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN48@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN48@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN47@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _distance$2548[ebp], ecx
	jmp	SHORT $LN46@
$LN47@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _distance$2548[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN46@:
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN45@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN45@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN44@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _distance$2548[ebp], ecx
	jmp	SHORT $LN43@
$LN44@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _distance$2548[ebp]
	mov	eax, DWORD PTR _distance$2548[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN43@:
	mov	edx, DWORD PTR _distance$2548[ebp]
	sub	edx, 64					; 00000040H
	mov	DWORD PTR _distance$2548[ebp], edx
; Line 371
	cmp	DWORD PTR _distance$2548[ebp], 4
	jb	$LN42@
; Line 373
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	DWORD PTR _posSlot$2586[ebp], eax
; Line 374
	mov	ecx, DWORD PTR _distance$2548[ebp]
	shr	ecx, 1
	sub	ecx, 1
	mov	DWORD PTR _numDirectBits$2588[ebp], ecx
; Line 375
	mov	edx, DWORD PTR _distance$2548[ebp]
	and	edx, 1
	or	edx, 2
	mov	DWORD PTR _distance$2548[ebp], edx
; Line 376
	cmp	DWORD PTR _posSlot$2586[ebp], 14	; 0000000eH
	jae	$LN41@
; Line 378
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _numDirectBits$2588[ebp]
	shl	eax, cl
	mov	DWORD PTR _distance$2548[ebp], eax
; Line 379
	mov	ecx, DWORD PTR _distance$2548[ebp]
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+1376]
	mov	ecx, DWORD PTR _posSlot$2586[ebp]
	shl	ecx, 1
	sub	eax, ecx
	sub	eax, 2
	mov	DWORD PTR _prob$2342[ebp], eax
; Line 381
	mov	DWORD PTR _mask$2591[ebp], 1
; Line 382
	mov	DWORD PTR _i$2592[ebp], 1
$LN40@:
; Line 385
	mov	edx, DWORD PTR _i$2592[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN37@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN37@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN36@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _i$2592[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _i$2592[ebp]
	add	ecx, DWORD PTR _i$2592[ebp]
	mov	DWORD PTR _i$2592[ebp], ecx
	jmp	SHORT $LN35@
$LN36@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _i$2592[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _i$2592[ebp]
	mov	eax, DWORD PTR _i$2592[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _i$2592[ebp], ecx
	mov	edx, DWORD PTR _distance$2548[ebp]
	or	edx, DWORD PTR _mask$2591[ebp]
	mov	DWORD PTR _distance$2548[ebp], edx
$LN35@:
; Line 386
	mov	eax, DWORD PTR _mask$2591[ebp]
	shl	eax, 1
	mov	DWORD PTR _mask$2591[ebp], eax
; Line 388
	mov	ecx, DWORD PTR _numDirectBits$2588[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numDirectBits$2588[ebp], ecx
	jne	$LN40@
; Line 391
	jmp	$LN42@
$LN41@:
; Line 393
	mov	edx, DWORD PTR _numDirectBits$2588[ebp]
	sub	edx, 4
	mov	DWORD PTR _numDirectBits$2588[ebp], edx
$LN33@:
; Line 396
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN30@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN30@:
; Line 397
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 1
	mov	DWORD PTR _range$[ebp], edx
; Line 401
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _range$[ebp]
	mov	DWORD PTR _code$[ebp], eax
; Line 402
	mov	ecx, DWORD PTR _code$[ebp]
	shr	ecx, 31					; 0000001fH
	xor	edx, edx
	sub	edx, ecx
	mov	DWORD PTR _t$2608[ebp], edx
; Line 403
	mov	eax, DWORD PTR _distance$2548[ebp]
	mov	ecx, DWORD PTR _t$2608[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+1]
	mov	DWORD PTR _distance$2548[ebp], edx
; Line 404
	mov	eax, DWORD PTR _range$[ebp]
	and	eax, DWORD PTR _t$2608[ebp]
	add	eax, DWORD PTR _code$[ebp]
	mov	DWORD PTR _code$[ebp], eax
; Line 415
	mov	ecx, DWORD PTR _numDirectBits$2588[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numDirectBits$2588[ebp], ecx
	jne	SHORT $LN33@
; Line 416
	mov	edx, DWORD PTR _probs$[ebp]
	add	edx, 1604				; 00000644H
	mov	DWORD PTR _prob$2342[ebp], edx
; Line 417
	mov	eax, DWORD PTR _distance$2548[ebp]
	shl	eax, 4
	mov	DWORD PTR _distance$2548[ebp], eax
; Line 419
	mov	DWORD PTR _i$2610[ebp], 1
; Line 420
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN29@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN29@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN28@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _i$2610[ebp]
	add	eax, DWORD PTR _i$2610[ebp]
	mov	DWORD PTR _i$2610[ebp], eax
	jmp	SHORT $LN27@
$LN28@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _i$2610[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _i$2610[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _i$2610[ebp], eax
	mov	ecx, DWORD PTR _distance$2548[ebp]
	or	ecx, 1
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN27@:
; Line 421
	mov	edx, DWORD PTR _i$2610[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2344[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN26@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN26@:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN25@
	mov	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, 2048				; 00000800H
	sub	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	add	ecx, DWORD PTR _ttt$2344[ebp]
	mov	edx, DWORD PTR _i$2610[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _i$2610[ebp]
	add	ecx, DWORD PTR _i$2610[ebp]
	mov	DWORD PTR _i$2610[ebp], ecx
	jmp	SHORT $LN24@
$LN25@:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	shr	ecx, 5
	mov	edx, DWORD PTR _ttt$2344[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _i$2610[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _i$2610[ebp]
	mov	eax, DWORD PTR _i$2610[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _i$2610[ebp], ecx
	mov	edx, DWORD PTR _distance$2548[ebp]
	or	edx, 2
	mov	DWORD PTR _distance$2548[ebp], edx
$LN24@:
; Line 422
	mov	eax, DWORD PTR _i$2610[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2344[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN23@
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN23@:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN22@
	mov	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, 2048				; 00000800H
	sub	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	add	edx, DWORD PTR _ttt$2344[ebp]
	mov	eax, DWORD PTR _i$2610[ebp]
	mov	ecx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	edx, DWORD PTR _i$2610[ebp]
	add	edx, DWORD PTR _i$2610[ebp]
	mov	DWORD PTR _i$2610[ebp], edx
	jmp	SHORT $LN21@
$LN22@:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _ttt$2344[ebp]
	shr	edx, 5
	mov	eax, DWORD PTR _ttt$2344[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _i$2610[ebp]
	mov	ecx, DWORD PTR _i$2610[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _i$2610[ebp], edx
	mov	eax, DWORD PTR _distance$2548[ebp]
	or	eax, 4
	mov	DWORD PTR _distance$2548[ebp], eax
$LN21@:
; Line 423
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2344[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN20@
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN20@:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2344[ebp]
	mov	DWORD PTR _bound$2343[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2343[ebp]
	jae	SHORT $LN19@
	mov	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	add	eax, DWORD PTR _ttt$2344[ebp]
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _i$2610[ebp]
	add	eax, DWORD PTR _i$2610[ebp]
	mov	DWORD PTR _i$2610[ebp], eax
	jmp	SHORT $LN18@
$LN19@:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2343[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _ttt$2344[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _ttt$2344[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _i$2610[ebp]
	mov	eax, DWORD PTR _prob$2342[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	ecx, DWORD PTR _i$2610[ebp]
	mov	edx, DWORD PTR _i$2610[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _i$2610[ebp], eax
	mov	ecx, DWORD PTR _distance$2548[ebp]
	or	ecx, 8
	mov	DWORD PTR _distance$2548[ebp], ecx
$LN18@:
; Line 425
	cmp	DWORD PTR _distance$2548[ebp], -1
	jne	SHORT $LN42@
; Line 427
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, 274				; 00000112H
	mov	DWORD PTR _len$[ebp], edx
; Line 428
	mov	eax, DWORD PTR _state$[ebp]
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR _state$[ebp], eax
; Line 429
	jmp	$LN161@
$LN42@:
; Line 434
	mov	ecx, DWORD PTR _rep2$[ebp]
	mov	DWORD PTR _rep3$[ebp], ecx
; Line 435
	mov	edx, DWORD PTR _rep1$[ebp]
	mov	DWORD PTR _rep2$[ebp], edx
; Line 436
	mov	eax, DWORD PTR _rep0$[ebp]
	mov	DWORD PTR _rep1$[ebp], eax
; Line 437
	mov	ecx, DWORD PTR _distance$2548[ebp]
	add	ecx, 1
	mov	DWORD PTR _rep0$[ebp], ecx
; Line 438
	cmp	DWORD PTR _checkDicSize$[ebp], 0
	jne	SHORT $LN16@
; Line 440
	mov	edx, DWORD PTR _distance$2548[ebp]
	cmp	edx, DWORD PTR _processedPos$[ebp]
	jb	SHORT $LN15@
; Line 441
	mov	eax, 1
	jmp	$LN164@
$LN15@:
; Line 443
	jmp	SHORT $LN14@
$LN16@:
	mov	eax, DWORD PTR _distance$2548[ebp]
	cmp	eax, DWORD PTR _checkDicSize$[ebp]
	jb	SHORT $LN14@
; Line 444
	mov	eax, 1
	jmp	$LN164@
$LN14@:
; Line 445
	cmp	DWORD PTR _state$[ebp], 19		; 00000013H
	sbb	ecx, ecx
	and	ecx, -3					; fffffffdH
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR _state$[ebp], ecx
$LN61@:
; Line 448
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, 2
	mov	DWORD PTR _len$[ebp], edx
; Line 455
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, DWORD PTR _dicPos$[ebp]
	mov	DWORD PTR _rem$2641[ebp], eax
	jne	SHORT $LN12@
; Line 456
	mov	eax, 1
	jmp	$LN164@
$LN12@:
; Line 458
	mov	ecx, DWORD PTR _rem$2641[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	SHORT $LN176@
	mov	edx, DWORD PTR _rem$2641[ebp]
	mov	DWORD PTR tv1445[ebp], edx
	jmp	SHORT $LN177@
$LN176@:
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv1445[ebp], eax
$LN177@:
	mov	ecx, DWORD PTR tv1445[ebp]
	mov	DWORD PTR _curLen$2642[ebp], ecx
; Line 459
	mov	edx, DWORD PTR _dicPos$[ebp]
	cmp	edx, DWORD PTR _rep0$[ebp]
	jae	SHORT $LN178@
	mov	eax, DWORD PTR _dicBufSize$[ebp]
	mov	DWORD PTR tv1448[ebp], eax
	jmp	SHORT $LN179@
$LN178@:
	mov	DWORD PTR tv1448[ebp], 0
$LN179@:
	mov	ecx, DWORD PTR _dicPos$[ebp]
	sub	ecx, DWORD PTR _rep0$[ebp]
	add	ecx, DWORD PTR tv1448[ebp]
	mov	DWORD PTR _pos$2643[ebp], ecx
; Line 461
	mov	edx, DWORD PTR _processedPos$[ebp]
	add	edx, DWORD PTR _curLen$2642[ebp]
	mov	DWORD PTR _processedPos$[ebp], edx
; Line 463
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, DWORD PTR _curLen$2642[ebp]
	mov	DWORD PTR _len$[ebp], eax
; Line 464
	mov	ecx, DWORD PTR _dicBufSize$[ebp]
	sub	ecx, DWORD PTR _pos$2643[ebp]
	cmp	DWORD PTR _curLen$2642[ebp], ecx
	ja	SHORT $LN6@
; Line 466
	mov	edx, DWORD PTR _dic$[ebp]
	add	edx, DWORD PTR _dicPos$[ebp]
	mov	DWORD PTR _dest$2647[ebp], edx
; Line 467
	mov	eax, DWORD PTR _pos$2643[ebp]
	sub	eax, DWORD PTR _dicPos$[ebp]
	mov	DWORD PTR _src$2648[ebp], eax
; Line 468
	mov	ecx, DWORD PTR _dest$2647[ebp]
	add	ecx, DWORD PTR _curLen$2642[ebp]
	mov	DWORD PTR _lim$2651[ebp], ecx
; Line 469
	mov	edx, DWORD PTR _dicPos$[ebp]
	add	edx, DWORD PTR _curLen$2642[ebp]
	mov	DWORD PTR _dicPos$[ebp], edx
$LN10@:
; Line 471
	mov	eax, DWORD PTR _dest$2647[ebp]
	add	eax, DWORD PTR _src$2648[ebp]
	mov	ecx, DWORD PTR _dest$2647[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
; Line 472
	mov	eax, DWORD PTR _dest$2647[ebp]
	add	eax, 1
	mov	DWORD PTR _dest$2647[ebp], eax
	mov	ecx, DWORD PTR _dest$2647[ebp]
	cmp	ecx, DWORD PTR _lim$2651[ebp]
	jne	SHORT $LN10@
; Line 474
	jmp	SHORT $LN162@
$LN6@:
; Line 478
	mov	edx, DWORD PTR _dic$[ebp]
	add	edx, DWORD PTR _dicPos$[ebp]
	mov	eax, DWORD PTR _dic$[ebp]
	add	eax, DWORD PTR _pos$2643[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _dicPos$[ebp]
	add	edx, 1
	mov	DWORD PTR _dicPos$[ebp], edx
; Line 479
	mov	eax, DWORD PTR _pos$2643[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$2643[ebp], eax
	mov	ecx, DWORD PTR _pos$2643[ebp]
	cmp	ecx, DWORD PTR _dicBufSize$[ebp]
	jne	SHORT $LN5@
; Line 480
	mov	DWORD PTR _pos$2643[ebp], 0
$LN5@:
; Line 482
	mov	edx, DWORD PTR _curLen$2642[ebp]
	sub	edx, 1
	mov	DWORD PTR _curLen$2642[ebp], edx
	jne	SHORT $LN6@
$LN162@:
; Line 487
	mov	eax, DWORD PTR _dicPos$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	SHORT $LN161@
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR _bufLimit$[ebp]
	jb	$LN163@
$LN161@:
; Line 489
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN1@
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN1@:
; Line 491
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 492
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _range$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 493
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _code$[ebp]
	mov	DWORD PTR [edx+32], eax
; Line 494
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx+72], edx
; Line 495
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _dicPos$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 496
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _processedPos$[ebp]
	mov	DWORD PTR [edx+44], eax
; Line 497
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _rep0$[ebp]
	mov	DWORD PTR [ecx+56], edx
; Line 498
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _rep1$[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 499
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _rep2$[ebp]
	mov	DWORD PTR [edx+64], eax
; Line 500
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _rep3$[ebp]
	mov	DWORD PTR [ecx+68], edx
; Line 501
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 503
	xor	eax, eax
$LN164@:
; Line 504
	pop	edi
	mov	esp, ebp
	pop	ebp
	ret	4
@LzmaDec_DecodeReal@12 ENDP
; Function compile flags: /Odtp /RTCsu
tv364 = -104						; size = 4
tv178 = -100						; size = 4
tv138 = -96						; size = 4
_i$2829 = -92						; size = 4
_numDirectBits$2820 = -88				; size = 4
_posSlot$2810 = -84					; size = 4
_probLen$2790 = -80					; size = 4
_offset$2789 = -76					; size = 4
_limit$2788 = -72					; size = 4
_len$2759 = -68						; size = 4
_probLit$2752 = -64					; size = 4
_bit$2751 = -60						; size = 4
_symbol$2747 = -56					; size = 4
_offs$2746 = -52					; size = 4
_matchByte$2745 = -48					; size = 4
_symbol$2735 = -44					; size = 4
_posState$2726 = -40					; size = 4
_ttt$2725 = -36						; size = 4
_bound$2724 = -32					; size = 4
_prob$2723 = -28					; size = 4
_res$ = -24						; size = 4
_state$ = -20						; size = 4
_probs$ = -16						; size = 4
_bufLimit$ = -12					; size = 4
_code$ = -8						; size = 4
_range$ = -4						; size = 4
_p$ = 8							; size = 4
_buf$ = 12						; size = 4
_inSize$ = 16						; size = 4
_LzmaDec_TryDummy@12 PROC
; Line 570
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 571
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _range$[ebp], ecx
; Line 572
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _code$[ebp], eax
; Line 573
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _inSize$[ebp]
	mov	DWORD PTR _bufLimit$[ebp], ecx
; Line 574
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _probs$[ebp], eax
; Line 575
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	DWORD PTR _state$[ebp], edx
; Line 582
	mov	eax, DWORD PTR _p$[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR [eax+8]
	shl	edx, cl
	sub	edx, 1
	mov	eax, DWORD PTR _p$[ebp]
	and	edx, DWORD PTR [eax+44]
	mov	DWORD PTR _posState$2726[ebp], edx
; Line 584
	mov	ecx, DWORD PTR _state$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _posState$2726[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _prob$2723[ebp], edx
; Line 585
	mov	eax, DWORD PTR _prob$2723[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _ttt$2725[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN84@LzmaDec_Tr
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	edx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN83@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN83@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN84@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2724[ebp]
	jae	$LN82@LzmaDec_Tr
; Line 587
	mov	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
; Line 591
	mov	edx, DWORD PTR _probs$[ebp]
	add	edx, 3692				; 00000e6cH
	mov	DWORD PTR _prob$2723[ebp], edx
; Line 592
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN80@LzmaDec_Tr
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN81@LzmaDec_Tr
$LN80@LzmaDec_Tr:
; Line 595
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+36], 0
	jne	SHORT $LN87@LzmaDec_Tr
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR tv138[ebp], ecx
	jmp	SHORT $LN88@LzmaDec_Tr
$LN87@LzmaDec_Tr:
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR tv138[ebp], eax
$LN88@LzmaDec_Tr:
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, 1
	mov	ecx, DWORD PTR [ecx+4]
	shl	edx, cl
	sub	edx, 1
	mov	eax, DWORD PTR _p$[ebp]
	and	edx, DWORD PTR [eax+44]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [ecx]
	shl	edx, cl
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR tv138[ebp]
	movzx	eax, BYTE PTR [ecx+eax-1]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	esi, 8
	sub	esi, DWORD PTR [ecx]
	mov	ecx, esi
	sar	eax, cl
	add	edx, eax
	imul	edx, 768				; 00000300H
	mov	eax, DWORD PTR _prob$2723[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	DWORD PTR _prob$2723[ebp], ecx
$LN81@LzmaDec_Tr:
; Line 597
	cmp	DWORD PTR _state$[ebp], 7
	jae	$LN79@LzmaDec_Tr
; Line 599
	mov	DWORD PTR _symbol$2735[ebp], 1
$LN78@LzmaDec_Tr:
; Line 600
	mov	edx, DWORD PTR _symbol$2735[ebp]
	mov	eax, DWORD PTR _prob$2723[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	mov	DWORD PTR _ttt$2725[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN75@LzmaDec_Tr
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	edx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN74@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN74@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN75@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN73@LzmaDec_Tr
	mov	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _symbol$2735[ebp]
	add	edx, DWORD PTR _symbol$2735[ebp]
	mov	DWORD PTR _symbol$2735[ebp], edx
	jmp	SHORT $LN77@LzmaDec_Tr
$LN73@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], ecx
	mov	edx, DWORD PTR _symbol$2735[ebp]
	mov	eax, DWORD PTR _symbol$2735[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	DWORD PTR _symbol$2735[ebp], ecx
$LN77@LzmaDec_Tr:
	cmp	DWORD PTR _symbol$2735[ebp], 256	; 00000100H
	jb	$LN78@LzmaDec_Tr
; Line 602
	jmp	$LN71@LzmaDec_Tr
$LN79@LzmaDec_Tr:
; Line 605
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+36]
	cmp	ecx, DWORD PTR [eax+56]
	jae	SHORT $LN89@LzmaDec_Tr
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR tv178[ebp], eax
	jmp	SHORT $LN90@LzmaDec_Tr
$LN89@LzmaDec_Tr:
	mov	DWORD PTR tv178[ebp], 0
$LN90@LzmaDec_Tr:
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	sub	eax, DWORD PTR [edx+56]
	add	eax, DWORD PTR tv178[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	movzx	eax, BYTE PTR [edx+eax]
	mov	DWORD PTR _matchByte$2745[ebp], eax
; Line 606
	mov	DWORD PTR _offs$2746[ebp], 256		; 00000100H
; Line 607
	mov	DWORD PTR _symbol$2747[ebp], 1
$LN70@LzmaDec_Tr:
; Line 612
	mov	ecx, DWORD PTR _matchByte$2745[ebp]
	shl	ecx, 1
	mov	DWORD PTR _matchByte$2745[ebp], ecx
; Line 613
	mov	edx, DWORD PTR _matchByte$2745[ebp]
	and	edx, DWORD PTR _offs$2746[ebp]
	mov	DWORD PTR _bit$2751[ebp], edx
; Line 614
	mov	eax, DWORD PTR _offs$2746[ebp]
	mov	ecx, DWORD PTR _prob$2723[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _bit$2751[ebp]
	lea	ecx, DWORD PTR [edx+eax*2]
	mov	edx, DWORD PTR _symbol$2747[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _probLit$2752[ebp], eax
; Line 615
	mov	ecx, DWORD PTR _probLit$2752[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2725[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN67@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN66@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN66@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN67@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN65@LzmaDec_Tr
	mov	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _symbol$2747[ebp]
	add	eax, DWORD PTR _symbol$2747[ebp]
	mov	DWORD PTR _symbol$2747[ebp], eax
	mov	ecx, DWORD PTR _bit$2751[ebp]
	not	ecx
	and	ecx, DWORD PTR _offs$2746[ebp]
	mov	DWORD PTR _offs$2746[ebp], ecx
	jmp	SHORT $LN69@LzmaDec_Tr
$LN65@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _symbol$2747[ebp]
	mov	edx, DWORD PTR _symbol$2747[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _symbol$2747[ebp], eax
	mov	ecx, DWORD PTR _offs$2746[ebp]
	and	ecx, DWORD PTR _bit$2751[ebp]
	mov	DWORD PTR _offs$2746[ebp], ecx
$LN69@LzmaDec_Tr:
; Line 617
	cmp	DWORD PTR _symbol$2747[ebp], 256	; 00000100H
	jb	$LN70@LzmaDec_Tr
$LN71@LzmaDec_Tr:
; Line 619
	mov	DWORD PTR _res$[ebp], 1
; Line 621
	jmp	$LN63@LzmaDec_Tr
$LN82@LzmaDec_Tr:
; Line 624
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], eax
; Line 626
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+384]
	mov	DWORD PTR _prob$2723[ebp], eax
; Line 627
	mov	ecx, DWORD PTR _prob$2723[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2725[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN62@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN61@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN61@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN62@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN60@LzmaDec_Tr
; Line 629
	mov	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
; Line 630
	mov	DWORD PTR _state$[ebp], 0
; Line 631
	mov	eax, DWORD PTR _probs$[ebp]
	add	eax, 1636				; 00000664H
	mov	DWORD PTR _prob$2723[ebp], eax
; Line 632
	mov	DWORD PTR _res$[ebp], 2
; Line 634
	jmp	$LN59@LzmaDec_Tr
$LN60@LzmaDec_Tr:
; Line 636
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], edx
; Line 637
	mov	DWORD PTR _res$[ebp], 3
; Line 638
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR _probs$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+408]
	mov	DWORD PTR _prob$2723[ebp], edx
; Line 639
	mov	eax, DWORD PTR _prob$2723[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _ttt$2725[ebp], ecx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN58@LzmaDec_Tr
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	edx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN57@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN57@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN58@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 11					; 0000000bH
	imul	edx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	cmp	eax, DWORD PTR _bound$2724[ebp]
	jae	$LN56@LzmaDec_Tr
; Line 641
	mov	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
; Line 642
	mov	edx, DWORD PTR _state$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+480]
	mov	edx, DWORD PTR _posState$2726[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	DWORD PTR _prob$2723[ebp], eax
; Line 643
	mov	ecx, DWORD PTR _prob$2723[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2725[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN55@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN54@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN54@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN55@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN53@LzmaDec_Tr
; Line 645
	mov	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
; Line 646
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN52@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN51@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN51@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN52@LzmaDec_Tr:
; Line 647
	mov	eax, 3
	jmp	$LN85@LzmaDec_Tr
; Line 649
	jmp	SHORT $LN50@LzmaDec_Tr
$LN53@LzmaDec_Tr:
; Line 651
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], ecx
$LN50@LzmaDec_Tr:
; Line 654
	jmp	$LN49@LzmaDec_Tr
$LN56@LzmaDec_Tr:
; Line 656
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], eax
; Line 657
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+432]
	mov	DWORD PTR _prob$2723[ebp], eax
; Line 658
	mov	ecx, DWORD PTR _prob$2723[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2725[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN48@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN47@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN47@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN48@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN46@LzmaDec_Tr
; Line 660
	mov	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
; Line 662
	jmp	$LN49@LzmaDec_Tr
$LN46@LzmaDec_Tr:
; Line 664
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], ecx
; Line 665
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR _probs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2+456]
	mov	DWORD PTR _prob$2723[ebp], ecx
; Line 666
	mov	edx, DWORD PTR _prob$2723[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2725[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN44@LzmaDec_Tr
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN43@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN43@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN44@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN42@LzmaDec_Tr
; Line 668
	mov	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
; Line 670
	jmp	SHORT $LN49@LzmaDec_Tr
$LN42@LzmaDec_Tr:
; Line 672
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], edx
$LN49@LzmaDec_Tr:
; Line 676
	mov	DWORD PTR _state$[ebp], 12		; 0000000cH
; Line 677
	mov	eax, DWORD PTR _probs$[ebp]
	add	eax, 2664				; 00000a68H
	mov	DWORD PTR _prob$2723[ebp], eax
$LN59@LzmaDec_Tr:
; Line 681
	mov	ecx, DWORD PTR _prob$2723[ebp]
	mov	DWORD PTR _probLen$2790[ebp], ecx
; Line 682
	mov	edx, DWORD PTR _probLen$2790[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _ttt$2725[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN40@LzmaDec_Tr
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN39@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN39@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN40@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN38@LzmaDec_Tr
; Line 684
	mov	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
; Line 685
	mov	ecx, DWORD PTR _posState$2726[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR _prob$2723[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+4]
	mov	DWORD PTR _probLen$2790[ebp], eax
; Line 686
	mov	DWORD PTR _offset$2789[ebp], 0
; Line 687
	mov	DWORD PTR _limit$2788[ebp], 8
; Line 689
	jmp	$LN37@LzmaDec_Tr
$LN38@LzmaDec_Tr:
; Line 691
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], edx
; Line 692
	mov	eax, DWORD PTR _prob$2723[ebp]
	add	eax, 2
	mov	DWORD PTR _probLen$2790[ebp], eax
; Line 693
	mov	ecx, DWORD PTR _probLen$2790[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _ttt$2725[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN36@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN35@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN35@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN36@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN34@LzmaDec_Tr
; Line 695
	mov	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
; Line 696
	mov	eax, DWORD PTR _posState$2726[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR _prob$2723[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+260]
	mov	DWORD PTR _probLen$2790[ebp], edx
; Line 697
	mov	DWORD PTR _offset$2789[ebp], 8
; Line 698
	mov	DWORD PTR _limit$2788[ebp], 8
; Line 700
	jmp	SHORT $LN37@LzmaDec_Tr
$LN34@LzmaDec_Tr:
; Line 702
	mov	eax, DWORD PTR _range$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], ecx
; Line 703
	mov	edx, DWORD PTR _prob$2723[ebp]
	add	edx, 516				; 00000204H
	mov	DWORD PTR _probLen$2790[ebp], edx
; Line 704
	mov	DWORD PTR _offset$2789[ebp], 16		; 00000010H
; Line 705
	mov	DWORD PTR _limit$2788[ebp], 256		; 00000100H
$LN37@LzmaDec_Tr:
; Line 708
	mov	DWORD PTR _len$2759[ebp], 1
$LN32@LzmaDec_Tr:
	mov	eax, DWORD PTR _len$2759[ebp]
	mov	ecx, DWORD PTR _probLen$2790[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _ttt$2725[ebp], edx
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN29@LzmaDec_Tr
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN28@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN28@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	shl	edx, 8
	mov	eax, DWORD PTR _buf$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	edx, ecx
	mov	DWORD PTR _code$[ebp], edx
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx
$LN29@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shr	eax, 11					; 0000000bH
	imul	eax, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	cmp	ecx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN27@LzmaDec_Tr
	mov	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _len$2759[ebp]
	add	eax, DWORD PTR _len$2759[ebp]
	mov	DWORD PTR _len$2759[ebp], eax
	jmp	SHORT $LN31@LzmaDec_Tr
$LN27@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	sub	ecx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], edx
	mov	eax, DWORD PTR _len$2759[ebp]
	mov	ecx, DWORD PTR _len$2759[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _len$2759[ebp], edx
$LN31@LzmaDec_Tr:
	mov	eax, DWORD PTR _len$2759[ebp]
	cmp	eax, DWORD PTR _limit$2788[ebp]
	jb	$LN32@LzmaDec_Tr
	mov	ecx, DWORD PTR _len$2759[ebp]
	sub	ecx, DWORD PTR _limit$2788[ebp]
	mov	DWORD PTR _len$2759[ebp], ecx
; Line 709
	mov	edx, DWORD PTR _len$2759[ebp]
	add	edx, DWORD PTR _offset$2789[ebp]
	mov	DWORD PTR _len$2759[ebp], edx
; Line 712
	cmp	DWORD PTR _state$[ebp], 4
	jae	$LN63@LzmaDec_Tr
; Line 717
	cmp	DWORD PTR _len$2759[ebp], 4
	jae	SHORT $LN91@LzmaDec_Tr
	mov	eax, DWORD PTR _len$2759[ebp]
	mov	DWORD PTR tv364[ebp], eax
	jmp	SHORT $LN92@LzmaDec_Tr
$LN91@LzmaDec_Tr:
	mov	DWORD PTR tv364[ebp], 3
$LN92@LzmaDec_Tr:
	mov	ecx, DWORD PTR tv364[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _probs$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+864]
	mov	DWORD PTR _prob$2723[ebp], eax
; Line 718
	mov	DWORD PTR _posSlot$2810[ebp], 1
$LN24@LzmaDec_Tr:
	mov	ecx, DWORD PTR _posSlot$2810[ebp]
	mov	edx, DWORD PTR _prob$2723[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2725[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN21@LzmaDec_Tr
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN20@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN20@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN21@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN19@LzmaDec_Tr
	mov	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _posSlot$2810[ebp]
	add	ecx, DWORD PTR _posSlot$2810[ebp]
	mov	DWORD PTR _posSlot$2810[ebp], ecx
	jmp	SHORT $LN23@LzmaDec_Tr
$LN19@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _posSlot$2810[ebp]
	mov	edx, DWORD PTR _posSlot$2810[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _posSlot$2810[ebp], eax
$LN23@LzmaDec_Tr:
	cmp	DWORD PTR _posSlot$2810[ebp], 64	; 00000040H
	jb	$LN24@LzmaDec_Tr
	mov	ecx, DWORD PTR _posSlot$2810[ebp]
	sub	ecx, 64					; 00000040H
	mov	DWORD PTR _posSlot$2810[ebp], ecx
; Line 719
	cmp	DWORD PTR _posSlot$2810[ebp], 4
	jb	$LN63@LzmaDec_Tr
; Line 721
	mov	edx, DWORD PTR _posSlot$2810[ebp]
	shr	edx, 1
	sub	edx, 1
	mov	DWORD PTR _numDirectBits$2820[ebp], edx
; Line 725
	cmp	DWORD PTR _posSlot$2810[ebp], 14	; 0000000eH
	jae	SHORT $LN16@LzmaDec_Tr
; Line 727
	mov	eax, DWORD PTR _posSlot$2810[ebp]
	and	eax, 1
	or	eax, 2
	mov	ecx, DWORD PTR _numDirectBits$2820[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _probs$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+1376]
	mov	eax, DWORD PTR _posSlot$2810[ebp]
	shl	eax, 1
	sub	edx, eax
	sub	edx, 2
	mov	DWORD PTR _prob$2723[ebp], edx
; Line 729
	jmp	$LN15@LzmaDec_Tr
$LN16@LzmaDec_Tr:
; Line 731
	mov	ecx, DWORD PTR _numDirectBits$2820[ebp]
	sub	ecx, 4
	mov	DWORD PTR _numDirectBits$2820[ebp], ecx
$LN14@LzmaDec_Tr:
; Line 734
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN11@LzmaDec_Tr
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	edx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN10@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN10@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN11@LzmaDec_Tr:
; Line 735
	mov	edx, DWORD PTR _range$[ebp]
	shr	edx, 1
	mov	DWORD PTR _range$[ebp], edx
; Line 736
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _range$[ebp]
	shr	eax, 31					; 0000001fH
	sub	eax, 1
	and	eax, DWORD PTR _range$[ebp]
	mov	ecx, DWORD PTR _code$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
; Line 739
	mov	edx, DWORD PTR _numDirectBits$2820[ebp]
	sub	edx, 1
	mov	DWORD PTR _numDirectBits$2820[ebp], edx
	jne	SHORT $LN14@LzmaDec_Tr
; Line 740
	mov	eax, DWORD PTR _probs$[ebp]
	add	eax, 1604				; 00000644H
	mov	DWORD PTR _prob$2723[ebp], eax
; Line 741
	mov	DWORD PTR _numDirectBits$2820[ebp], 4
$LN15@LzmaDec_Tr:
; Line 744
	mov	DWORD PTR _i$2829[ebp], 1
$LN9@LzmaDec_Tr:
; Line 747
	mov	ecx, DWORD PTR _i$2829[ebp]
	mov	edx, DWORD PTR _prob$2723[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	mov	DWORD PTR _ttt$2725[ebp], eax
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN6@LzmaDec_Tr
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN5@LzmaDec_Tr
	xor	eax, eax
	jmp	$LN85@LzmaDec_Tr
$LN5@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	shl	edx, 8
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _buf$[ebp]
	movzx	edx, BYTE PTR [ecx]
	or	eax, edx
	mov	DWORD PTR _code$[ebp], eax
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, 1
	mov	DWORD PTR _buf$[ebp], eax
$LN6@LzmaDec_Tr:
	mov	ecx, DWORD PTR _range$[ebp]
	shr	ecx, 11					; 0000000bH
	imul	ecx, DWORD PTR _ttt$2725[ebp]
	mov	DWORD PTR _bound$2724[ebp], ecx
	mov	edx, DWORD PTR _code$[ebp]
	cmp	edx, DWORD PTR _bound$2724[ebp]
	jae	SHORT $LN4@LzmaDec_Tr
	mov	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _i$2829[ebp]
	add	ecx, DWORD PTR _i$2829[ebp]
	mov	DWORD PTR _i$2829[ebp], ecx
	jmp	SHORT $LN8@LzmaDec_Tr
$LN4@LzmaDec_Tr:
	mov	edx, DWORD PTR _range$[ebp]
	sub	edx, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _range$[ebp], edx
	mov	eax, DWORD PTR _code$[ebp]
	sub	eax, DWORD PTR _bound$2724[ebp]
	mov	DWORD PTR _code$[ebp], eax
	mov	ecx, DWORD PTR _i$2829[ebp]
	mov	edx, DWORD PTR _i$2829[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _i$2829[ebp], eax
$LN8@LzmaDec_Tr:
; Line 749
	mov	ecx, DWORD PTR _numDirectBits$2820[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numDirectBits$2820[ebp], ecx
	jne	$LN9@LzmaDec_Tr
$LN63@LzmaDec_Tr:
; Line 755
	cmp	DWORD PTR _range$[ebp], 16777216	; 01000000H
	jae	SHORT $LN2@LzmaDec_Tr
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	edx, DWORD PTR _bufLimit$[ebp]
	jb	SHORT $LN1@LzmaDec_Tr
	xor	eax, eax
	jmp	SHORT $LN85@LzmaDec_Tr
$LN1@LzmaDec_Tr:
	mov	eax, DWORD PTR _range$[ebp]
	shl	eax, 8
	mov	DWORD PTR _range$[ebp], eax
	mov	ecx, DWORD PTR _code$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _buf$[ebp]
	movzx	eax, BYTE PTR [edx]
	or	ecx, eax
	mov	DWORD PTR _code$[ebp], ecx
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, 1
	mov	DWORD PTR _buf$[ebp], ecx
$LN2@LzmaDec_Tr:
; Line 756
	mov	eax, DWORD PTR _res$[ebp]
$LN85@LzmaDec_Tr:
; Line 757
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_LzmaDec_TryDummy@12 ENDP
; Function compile flags: /Odtp /RTCsu
_probs$ = -12						; size = 4
_i$ = -8						; size = 4
_numProbs$ = -4						; size = 4
_p$ = 8							; size = 4
_LzmaDec_InitStateReal@4 PROC
; Line 783
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 784
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	eax, 768				; 00000300H
	shl	eax, cl
	add	eax, 1846				; 00000736H
	mov	DWORD PTR _numProbs$[ebp], eax
; Line 786
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _probs$[ebp], edx
; Line 787
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@LzmaDec_In@2
$LN2@LzmaDec_In@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@LzmaDec_In@2:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _numProbs$[ebp]
	jae	SHORT $LN1@LzmaDec_In@2
; Line 788
	mov	edx, 1024				; 00000400H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _probs$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	jmp	SHORT $LN2@LzmaDec_In@2
$LN1@LzmaDec_In@2:
; Line 789
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+68], 1
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+64], 1
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+60], 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+56], 1
; Line 790
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 791
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+80], 0
; Line 792
	mov	esp, ebp
	pop	ebp
	ret	4
_LzmaDec_InitStateReal@4 ENDP
_TEXT	ENDS
PUBLIC	_LzmaDec_DecodeToBuf@28
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$2951 = -36						; size = 4
_curFinishMode$2950 = -32				; size = 4
_dicPos$2949 = -28					; size = 4
_outSizeCur$2948 = -24					; size = 4
_inSizeCur$2947 = -16					; size = 4
_inSize$ = -8						; size = 4
_outSize$ = -4						; size = 4
_p$ = 8							; size = 4
_dest$ = 12						; size = 4
_destLen$ = 16						; size = 4
_src$ = 20						; size = 4
_srcLen$ = 24						; size = 4
_finishMode$ = 28					; size = 4
_status$ = 32						; size = 4
_LzmaDec_DecodeToBuf@28 PROC
; Line 930
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 931
	mov	eax, DWORD PTR _destLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _outSize$[ebp], ecx
; Line 932
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _inSize$[ebp], eax
; Line 933
	mov	ecx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], 0
$LN8@LzmaDec_De@2:
; Line 936
	mov	eax, DWORD PTR _inSize$[ebp]
	mov	DWORD PTR _inSizeCur$2947[ebp], eax
; Line 939
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	cmp	eax, DWORD PTR [edx+40]
	jne	SHORT $LN6@LzmaDec_De@2
; Line 940
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+36], 0
$LN6@LzmaDec_De@2:
; Line 941
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR _dicPos$2949[ebp], eax
; Line 942
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	sub	edx, DWORD PTR _dicPos$2949[ebp]
	cmp	DWORD PTR _outSize$[ebp], edx
	jbe	SHORT $LN5@LzmaDec_De@2
; Line 944
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _outSizeCur$2948[ebp], ecx
; Line 945
	mov	DWORD PTR _curFinishMode$2950[ebp], 0
; Line 947
	jmp	SHORT $LN4@LzmaDec_De@2
$LN5@LzmaDec_De@2:
; Line 949
	mov	edx, DWORD PTR _dicPos$2949[ebp]
	add	edx, DWORD PTR _outSize$[ebp]
	mov	DWORD PTR _outSizeCur$2948[ebp], edx
; Line 950
	mov	eax, DWORD PTR _finishMode$[ebp]
	mov	DWORD PTR _curFinishMode$2950[ebp], eax
$LN4@LzmaDec_De@2:
; Line 953
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curFinishMode$2950[ebp]
	push	edx
	lea	eax, DWORD PTR _inSizeCur$2947[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSizeCur$2948[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_DecodeToDic@24
	mov	DWORD PTR _res$2951[ebp], eax
; Line 954
	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, DWORD PTR _inSizeCur$2947[ebp]
	mov	DWORD PTR _src$[ebp], ecx
; Line 955
	mov	edx, DWORD PTR _inSize$[ebp]
	sub	edx, DWORD PTR _inSizeCur$2947[ebp]
	mov	DWORD PTR _inSize$[ebp], edx
; Line 956
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _inSizeCur$2947[ebp]
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 957
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _dicPos$2949[ebp]
	mov	DWORD PTR _outSizeCur$2948[ebp], ecx
; Line 958
	mov	edx, DWORD PTR _outSizeCur$2948[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR _dicPos$2949[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 959
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _outSizeCur$2948[ebp]
	mov	DWORD PTR _dest$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR _outSize$[ebp]
	sub	ecx, DWORD PTR _outSizeCur$2948[ebp]
	mov	DWORD PTR _outSize$[ebp], ecx
; Line 961
	mov	edx, DWORD PTR _destLen$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _outSizeCur$2948[ebp]
	mov	ecx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 962
	cmp	DWORD PTR _res$2951[ebp], 0
	je	SHORT $LN3@LzmaDec_De@2
; Line 963
	mov	eax, DWORD PTR _res$2951[ebp]
	jmp	SHORT $LN9@LzmaDec_De@2
$LN3@LzmaDec_De@2:
; Line 964
	cmp	DWORD PTR _outSizeCur$2948[ebp], 0
	je	SHORT $LN1@LzmaDec_De@2
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN2@LzmaDec_De@2
$LN1@LzmaDec_De@2:
; Line 965
	xor	eax, eax
	jmp	SHORT $LN9@LzmaDec_De@2
$LN2@LzmaDec_De@2:
; Line 966
	jmp	$LN8@LzmaDec_De@2
$LN9@LzmaDec_De@2:
; Line 967
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@LzmaDec_De@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN13@LzmaDec_De@2:
	DD	1
	DD	$LN12@LzmaDec_De@2
$LN12@LzmaDec_De@2:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN11@LzmaDec_De@2
$LN11@LzmaDec_De@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	0
_LzmaDec_DecodeToBuf@28 ENDP
_TEXT	ENDS
PUBLIC	_LzmaDec_FreeProbs@8
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
_alloc$ = 12						; size = 4
_LzmaDec_FreeProbs@8 PROC
; Line 970
	push	ebp
	mov	ebp, esp
	push	esi
; Line 971
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	mov	eax, DWORD PTR _alloc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 972
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 973
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_LzmaDec_FreeProbs@8 ENDP
_TEXT	ENDS
PUBLIC	_LzmaDec_Free@8
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
_alloc$ = 12						; size = 4
_LzmaDec_Free@8 PROC
; Line 982
	push	ebp
	mov	ebp, esp
; Line 983
	mov	eax, DWORD PTR _alloc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_FreeProbs@8
; Line 984
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_FreeDict@8
; Line 985
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_LzmaDec_Free@8 ENDP
; Function compile flags: /Odtp /RTCsu
_p$ = 8						; size = 4
_alloc$ = 12						; size = 4
_LzmaDec_FreeDict@8 PROC
; Line 976
	push	ebp
	mov	ebp, esp
	push	esi
; Line 977
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	mov	eax, DWORD PTR _alloc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 978
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 979
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_LzmaDec_FreeDict@8 ENDP
_TEXT	ENDS
PUBLIC	_LzmaProps_Decode@12
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_d$ = -5						; size = 1
_dicSize$ = -4						; size = 4
_p$ = 8							; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_LzmaProps_Decode@12 PROC
; Line 988
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 992
	cmp	DWORD PTR _size$[ebp], 5
	jae	SHORT $LN4@LzmaProps_
; Line 993
	mov	eax, 4
	jmp	$LN5@LzmaProps_
; Line 994
	jmp	SHORT $LN3@LzmaProps_
$LN4@LzmaProps_:
; Line 995
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+3]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	mov	DWORD PTR _dicSize$[ebp], ecx
$LN3@LzmaProps_:
; Line 997
	cmp	DWORD PTR _dicSize$[ebp], 4096		; 00001000H
	jae	SHORT $LN2@LzmaProps_
; Line 998
	mov	DWORD PTR _dicSize$[ebp], 4096		; 00001000H
$LN2@LzmaProps_:
; Line 999
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _dicSize$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 1001
	mov	eax, DWORD PTR _data$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _d$[ebp], cl
; Line 1002
	movzx	edx, BYTE PTR _d$[ebp]
	cmp	edx, 225				; 000000e1H
	jl	SHORT $LN1@LzmaProps_
; Line 1003
	mov	eax, 4
	jmp	SHORT $LN5@LzmaProps_
$LN1@LzmaProps_:
; Line 1005
	movzx	eax, BYTE PTR _d$[ebp]
	cdq
	mov	ecx, 9
	idiv	ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1006
	movzx	eax, BYTE PTR _d$[ebp]
	cdq
	mov	ecx, 9
	idiv	ecx
	mov	BYTE PTR _d$[ebp], al
; Line 1007
	movzx	eax, BYTE PTR _d$[ebp]
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1008
	movzx	eax, BYTE PTR _d$[ebp]
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 1010
	xor	eax, eax
$LN5@LzmaProps_:
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_LzmaProps_Decode@12 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_LzmaDec_AllocateProbs@16
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$3019 = -36					; size = 4
___result__$3017 = -32					; size = 4
_propNew$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_props$ = 12						; size = 4
_propsSize$ = 16					; size = 4
_alloc$ = 20						; size = 4
_LzmaDec_AllocateProbs@16 PROC
; Line 1028
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1030
	mov	eax, DWORD PTR _propsSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	push	ecx
	lea	edx, DWORD PTR _propNew$[ebp]
	push	edx
	call	_LzmaProps_Decode@12
	mov	DWORD PTR ___result__$3017[ebp], eax
	cmp	DWORD PTR ___result__$3017[ebp], 0
	je	SHORT $LN2@LzmaDec_Al
	mov	eax, DWORD PTR ___result__$3017[ebp]
	jmp	SHORT $LN3@LzmaDec_Al
$LN2@LzmaDec_Al:
; Line 1031
	mov	eax, DWORD PTR _alloc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _propNew$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_LzmaDec_AllocateProbs2@12
	mov	DWORD PTR ___result__$3019[ebp], eax
	cmp	DWORD PTR ___result__$3019[ebp], 0
	je	SHORT $LN1@LzmaDec_Al
	mov	eax, DWORD PTR ___result__$3019[ebp]
	jmp	SHORT $LN3@LzmaDec_Al
$LN1@LzmaDec_Al:
; Line 1032
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _propNew$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _propNew$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _propNew$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _propNew$[ebp+12]
	mov	DWORD PTR [eax+12], edx
; Line 1033
	xor	eax, eax
$LN3@LzmaDec_Al:
; Line 1034
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LzmaDec_Al
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN7@LzmaDec_Al:
	DD	1
	DD	$LN6@LzmaDec_Al
$LN6@LzmaDec_Al:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN5@LzmaDec_Al
$LN5@LzmaDec_Al:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
_LzmaDec_AllocateProbs@16 ENDP
; Function compile flags: /Odtp /RTCsu
_numProbs$ = -4					; size = 4
_p$ = 8							; size = 4
_propNew$ = 12						; size = 4
_alloc$ = 16						; size = 4
_LzmaDec_AllocateProbs2@12 PROC
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1015
	mov	eax, DWORD PTR _propNew$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _propNew$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	eax, 768				; 00000300H
	shl	eax, cl
	add	eax, 1846				; 00000736H
	mov	DWORD PTR _numProbs$[ebp], eax
; Line 1016
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN2@LzmaDec_Al@2
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _numProbs$[ebp]
	cmp	eax, DWORD PTR [edx+84]
	je	SHORT $LN3@LzmaDec_Al@2
$LN2@LzmaDec_Al@2:
; Line 1018
	mov	ecx, DWORD PTR _alloc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_LzmaDec_FreeProbs@8
; Line 1019
	mov	eax, DWORD PTR _numProbs$[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _alloc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _alloc$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1020
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _numProbs$[ebp]
	mov	DWORD PTR [edx+84], eax
; Line 1021
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN3@LzmaDec_Al@2
; Line 1022
	mov	eax, 2
	jmp	SHORT $LN4@LzmaDec_Al@2
$LN3@LzmaDec_Al@2:
; Line 1024
	xor	eax, eax
$LN4@LzmaDec_Al@2:
; Line 1025
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_LzmaDec_AllocateProbs2@12 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_LzmaDec_Allocate@16
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_mask$3037 = -48					; size = 4
_dictSize$3036 = -44					; size = 4
___result__$3034 = -40					; size = 4
___result__$3032 = -36					; size = 4
_dicBufSize$ = -32					; size = 4
_propNew$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_props$ = 12						; size = 4
_propsSize$ = 16					; size = 4
_alloc$ = 20						; size = 4
_LzmaDec_Allocate@16 PROC
; Line 1037
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1040
	mov	eax, DWORD PTR _propsSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	push	ecx
	lea	edx, DWORD PTR _propNew$[ebp]
	push	edx
	call	_LzmaProps_Decode@12
	mov	DWORD PTR ___result__$3032[ebp], eax
	cmp	DWORD PTR ___result__$3032[ebp], 0
	je	SHORT $LN9@LzmaDec_Al@3
	mov	eax, DWORD PTR ___result__$3032[ebp]
	jmp	$LN10@LzmaDec_Al@3
$LN9@LzmaDec_Al@3:
; Line 1041
	mov	eax, DWORD PTR _alloc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _propNew$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_LzmaDec_AllocateProbs2@12
	mov	DWORD PTR ___result__$3034[ebp], eax
	cmp	DWORD PTR ___result__$3034[ebp], 0
	je	SHORT $LN8@LzmaDec_Al@3
	mov	eax, DWORD PTR ___result__$3034[ebp]
	jmp	$LN10@LzmaDec_Al@3
$LN8@LzmaDec_Al@3:
; Line 1044
	mov	eax, DWORD PTR _propNew$[ebp+12]
	mov	DWORD PTR _dictSize$3036[ebp], eax
; Line 1045
	mov	DWORD PTR _mask$3037[ebp], 4095		; 00000fffH
; Line 1046
	cmp	DWORD PTR _dictSize$3036[ebp], 1073741824 ; 40000000H
	jb	SHORT $LN7@LzmaDec_Al@3
	mov	DWORD PTR _mask$3037[ebp], 4194303	; 003fffffH
	jmp	SHORT $LN6@LzmaDec_Al@3
$LN7@LzmaDec_Al@3:
; Line 1047
	cmp	DWORD PTR _dictSize$3036[ebp], 4194304	; 00400000H
	jb	SHORT $LN6@LzmaDec_Al@3
	mov	DWORD PTR _mask$3037[ebp], 1048575	; 000fffffH
$LN6@LzmaDec_Al@3:
; Line 1048
	mov	ecx, DWORD PTR _dictSize$3036[ebp]
	add	ecx, DWORD PTR _mask$3037[ebp]
	mov	edx, DWORD PTR _mask$3037[ebp]
	not	edx
	and	ecx, edx
	mov	DWORD PTR _dicBufSize$[ebp], ecx
; Line 1049
	mov	eax, DWORD PTR _dicBufSize$[ebp]
	cmp	eax, DWORD PTR _dictSize$3036[ebp]
	jae	SHORT $LN4@LzmaDec_Al@3
; Line 1050
	mov	ecx, DWORD PTR _dictSize$3036[ebp]
	mov	DWORD PTR _dicBufSize$[ebp], ecx
$LN4@LzmaDec_Al@3:
; Line 1053
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN2@LzmaDec_Al@3
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _dicBufSize$[ebp]
	cmp	ecx, DWORD PTR [eax+40]
	je	SHORT $LN3@LzmaDec_Al@3
$LN2@LzmaDec_Al@3:
; Line 1055
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_FreeDict@8
; Line 1056
	mov	esi, esp
	mov	ecx, DWORD PTR _dicBufSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	mov	eax, DWORD PTR _alloc$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 1057
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@LzmaDec_Al@3
; Line 1059
	mov	ecx, DWORD PTR _alloc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_LzmaDec_FreeProbs@8
; Line 1060
	mov	eax, 2
	jmp	SHORT $LN10@LzmaDec_Al@3
$LN3@LzmaDec_Al@3:
; Line 1063
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _dicBufSize$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 1064
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _propNew$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _propNew$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _propNew$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _propNew$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
; Line 1065
	xor	eax, eax
$LN10@LzmaDec_Al@3:
; Line 1066
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@LzmaDec_Al@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN14@LzmaDec_Al@3:
	DD	1
	DD	$LN13@LzmaDec_Al@3
$LN13@LzmaDec_Al@3:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN12@LzmaDec_Al@3
$LN12@LzmaDec_Al@3:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
_LzmaDec_Allocate@16 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_LzmaDecode@36
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$3076 = -140					; size = 4
_inSize$ = -136						; size = 4
_outSize$ = -132					; size = 4
_res$ = -128						; size = 4
_p$ = -120						; size = 112
__$ArrayPad$ = -4					; size = 4
_dest$ = 8						; size = 4
_destLen$ = 12						; size = 4
_src$ = 16						; size = 4
_srcLen$ = 20						; size = 4
_propData$ = 24						; size = 4
_propSize$ = 28						; size = 4
_finishMode$ = 32					; size = 4
_status$ = 36						; size = 4
_alloc$ = 40						; size = 4
_LzmaDecode@36 PROC
; Line 1071
	push	ebp
	mov	ebp, esp
	sub	esp, 140				; 0000008cH
	push	edi
	lea	edi, DWORD PTR [ebp-140]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1074
	mov	eax, DWORD PTR _destLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _outSize$[ebp], ecx
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _inSize$[ebp], eax
; Line 1075
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [edx], 0
; Line 1076
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1077
	cmp	DWORD PTR _inSize$[ebp], 5
	jae	SHORT $LN3@LzmaDecode
; Line 1078
	mov	eax, 6
	jmp	$LN4@LzmaDecode
$LN3@LzmaDecode:
; Line 1079
	mov	DWORD PTR _p$[ebp+20], 0
	mov	DWORD PTR _p$[ebp+16], 0
; Line 1080
	mov	ecx, DWORD PTR _alloc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _propSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _propData$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_AllocateProbs@16
	mov	DWORD PTR ___result__$3076[ebp], eax
	cmp	DWORD PTR ___result__$3076[ebp], 0
	je	SHORT $LN2@LzmaDecode
	mov	eax, DWORD PTR ___result__$3076[ebp]
	jmp	SHORT $LN4@LzmaDecode
$LN2@LzmaDecode:
; Line 1081
	mov	edx, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _p$[ebp+20], edx
; Line 1082
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	DWORD PTR _p$[ebp+40], eax
; Line 1083
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_Init@4
; Line 1084
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR _inSize$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1085
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _finishMode$[ebp]
	push	edx
	mov	eax, DWORD PTR _srcLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSize$[ebp]
	push	edx
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_DecodeToDic@24
	mov	DWORD PTR _res$[ebp], eax
; Line 1086
	mov	ecx, DWORD PTR _destLen$[ebp]
	mov	edx, DWORD PTR _p$[ebp+36]
	mov	DWORD PTR [ecx], edx
; Line 1087
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN1@LzmaDecode
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 3
	jne	SHORT $LN1@LzmaDecode
; Line 1088
	mov	DWORD PTR _res$[ebp], 6
$LN1@LzmaDecode:
; Line 1089
	mov	ecx, DWORD PTR _alloc$[ebp]
	push	ecx
	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_LzmaDec_FreeProbs@8
; Line 1090
	mov	eax, DWORD PTR _res$[ebp]
$LN4@LzmaDecode:
; Line 1091
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@LzmaDecode
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 140				; 0000008cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN8@LzmaDecode:
	DD	1
	DD	$LN7@LzmaDecode
$LN7@LzmaDecode:
	DD	-120					; ffffff88H
	DD	112					; 00000070H
	DD	$LN6@LzmaDecode
$LN6@LzmaDecode:
	DB	112					; 00000070H
	DB	0
_LzmaDecode@36 ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Crypto\Pbkdf2HmacSha1.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z		; NCrypto::NSha1::CHmac::Update
PUBLIC	__$ArrayPad$
PUBLIC	?Pbkdf2Hmac@NSha1@NCrypto@@YGXPBEI0IIPAEI@Z	; NCrypto::NSha1::Pbkdf2Hmac
EXTRN	?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z:PROC	; NCrypto::NSha1::CHmac::Final
EXTRN	?SetKey@CHmac@NSha1@NCrypto@@QAEXPBEI@Z:PROC	; NCrypto::NSha1::CHmac::SetKey
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\crypto\pbkdf2hmacsha1.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv81 = -452						; size = 4
_j$65959 = -448						; size = 4
_s$65955 = -444						; size = 4
_curSize$65953 = -440					; size = 4
_u$65950 = -432						; size = 20
_ctx$65949 = -404					; size = 192
_i$65945 = -208						; size = 4
_baseCtx$ = -200					; size = 192
__$ArrayPad$ = -4					; size = 4
_pwd$ = 8						; size = 4
_pwdSize$ = 12						; size = 4
_salt$ = 16						; size = 4
_saltSize$ = 20						; size = 4
_numIterations$ = 24					; size = 4
_key$ = 28						; size = 4
_keySize$ = 32						; size = 4
?Pbkdf2Hmac@NSha1@NCrypto@@YGXPBEI0IIPAEI@Z PROC	; NCrypto::NSha1::Pbkdf2Hmac
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 18
	mov	eax, DWORD PTR _pwdSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pwd$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _baseCtx$[ebp]
	call	?SetKey@CHmac@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CHmac::SetKey
; Line 20
	mov	DWORD PTR _i$65945[ebp], 1
	jmp	SHORT $LN12@Pbkdf2Hmac
$LN11@Pbkdf2Hmac:
	mov	edx, DWORD PTR _i$65945[ebp]
	add	edx, 1
	mov	DWORD PTR _i$65945[ebp], edx
$LN12@Pbkdf2Hmac:
	cmp	DWORD PTR _keySize$[ebp], 0
	je	$LN13@Pbkdf2Hmac
; Line 22
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _baseCtx$[ebp]
	lea	edi, DWORD PTR _ctx$65949[ebp]
	rep movsd
; Line 23
	mov	eax, DWORD PTR _saltSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _salt$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ctx$65949[ebp]
	call	?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CHmac::Update
; Line 26
	mov	edx, DWORD PTR _i$65945[ebp]
	bswap	edx
	mov	DWORD PTR _u$65950[ebp], edx
; Line 28
	push	4
	lea	eax, DWORD PTR _u$65950[ebp]
	push	eax
	lea	ecx, DWORD PTR _ctx$65949[ebp]
	call	?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CHmac::Update
; Line 29
	push	20					; 00000014H
	lea	ecx, DWORD PTR _u$65950[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ctx$65949[ebp]
	call	?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z	; NCrypto::NSha1::CHmac::Final
; Line 31
	cmp	DWORD PTR _keySize$[ebp], 20		; 00000014H
	jae	SHORT $LN15@Pbkdf2Hmac
	mov	edx, DWORD PTR _keySize$[ebp]
	mov	DWORD PTR tv81[ebp], edx
	jmp	SHORT $LN16@Pbkdf2Hmac
$LN15@Pbkdf2Hmac:
	mov	DWORD PTR tv81[ebp], 20			; 00000014H
$LN16@Pbkdf2Hmac:
	mov	eax, DWORD PTR tv81[ebp]
	mov	DWORD PTR _curSize$65953[ebp], eax
; Line 33
	mov	DWORD PTR _s$65955[ebp], 0
	jmp	SHORT $LN9@Pbkdf2Hmac
$LN8@Pbkdf2Hmac:
	mov	ecx, DWORD PTR _s$65955[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$65955[ebp], ecx
$LN9@Pbkdf2Hmac:
	mov	edx, DWORD PTR _s$65955[ebp]
	cmp	edx, DWORD PTR _curSize$65953[ebp]
	jae	SHORT $LN7@Pbkdf2Hmac
; Line 34
	mov	eax, DWORD PTR _key$[ebp]
	add	eax, DWORD PTR _s$65955[ebp]
	mov	ecx, DWORD PTR _s$65955[ebp]
	mov	dl, BYTE PTR _u$65950[ebp+ecx]
	mov	BYTE PTR [eax], dl
	jmp	SHORT $LN8@Pbkdf2Hmac
$LN7@Pbkdf2Hmac:
; Line 36
	mov	eax, DWORD PTR _numIterations$[ebp]
	mov	DWORD PTR _j$65959[ebp], eax
	jmp	SHORT $LN6@Pbkdf2Hmac
$LN5@Pbkdf2Hmac:
	mov	ecx, DWORD PTR _j$65959[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$65959[ebp], ecx
$LN6@Pbkdf2Hmac:
	cmp	DWORD PTR _j$65959[ebp], 1
	jbe	$LN4@Pbkdf2Hmac
; Line 38
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _baseCtx$[ebp]
	lea	edi, DWORD PTR _ctx$65949[ebp]
	rep movsd
; Line 39
	push	20					; 00000014H
	lea	edx, DWORD PTR _u$65950[ebp]
	push	edx
	lea	ecx, DWORD PTR _ctx$65949[ebp]
	call	?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CHmac::Update
; Line 40
	push	20					; 00000014H
	lea	eax, DWORD PTR _u$65950[ebp]
	push	eax
	lea	ecx, DWORD PTR _ctx$65949[ebp]
	call	?Final@CHmac@NSha1@NCrypto@@QAEXPAEI@Z	; NCrypto::NSha1::CHmac::Final
; Line 41
	mov	DWORD PTR _s$65955[ebp], 0
	jmp	SHORT $LN3@Pbkdf2Hmac
$LN2@Pbkdf2Hmac:
	mov	ecx, DWORD PTR _s$65955[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$65955[ebp], ecx
$LN3@Pbkdf2Hmac:
	mov	edx, DWORD PTR _s$65955[ebp]
	cmp	edx, DWORD PTR _curSize$65953[ebp]
	jae	SHORT $LN1@Pbkdf2Hmac
; Line 42
	mov	eax, DWORD PTR _s$65955[ebp]
	movzx	ecx, BYTE PTR _u$65950[ebp+eax]
	mov	edx, DWORD PTR _key$[ebp]
	add	edx, DWORD PTR _s$65955[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, ecx
	mov	ecx, DWORD PTR _key$[ebp]
	add	ecx, DWORD PTR _s$65955[ebp]
	mov	BYTE PTR [ecx], al
	jmp	SHORT $LN2@Pbkdf2Hmac
$LN1@Pbkdf2Hmac:
; Line 43
	jmp	$LN5@Pbkdf2Hmac
$LN4@Pbkdf2Hmac:
; Line 45
	mov	edx, DWORD PTR _key$[ebp]
	add	edx, DWORD PTR _curSize$65953[ebp]
	mov	DWORD PTR _key$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _keySize$[ebp]
	sub	eax, DWORD PTR _curSize$65953[ebp]
	mov	DWORD PTR _keySize$[ebp], eax
; Line 47
	jmp	$LN11@Pbkdf2Hmac
$LN13@Pbkdf2Hmac:
; Line 48
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Pbkdf2Hmac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN21@Pbkdf2Hmac:
	DD	3
	DD	$LN20@Pbkdf2Hmac
$LN20@Pbkdf2Hmac:
	DD	-200					; ffffff38H
	DD	192					; 000000c0H
	DD	$LN17@Pbkdf2Hmac
	DD	-404					; fffffe6cH
	DD	192					; 000000c0H
	DD	$LN18@Pbkdf2Hmac
	DD	-432					; fffffe50H
	DD	20					; 00000014H
	DD	$LN19@Pbkdf2Hmac
$LN19@Pbkdf2Hmac:
	DB	117					; 00000075H
	DB	0
$LN18@Pbkdf2Hmac:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
$LN17@Pbkdf2Hmac:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
?Pbkdf2Hmac@NSha1@NCrypto@@YGXPBEI0IIPAEI@Z ENDP	; NCrypto::NSha1::Pbkdf2Hmac
_TEXT	ENDS
PUBLIC	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z	; NCrypto::NSha1::CContext::Update
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_dataSize$ = 12						; size = 4
?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z PROC		; NCrypto::NSha1::CHmac::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\hmacsha1.h
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CContext::Update
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Update@CHmac@NSha1@NCrypto@@QAEXPBEI@Z ENDP		; NCrypto::NSha1::CHmac::Update
_TEXT	ENDS
EXTRN	_Sha1_Update@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z PROC		; NCrypto::NSha1::CContext::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\sha1cls.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Sha1_Update@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Update@CContext@NSha1@NCrypto@@QAEXPBEI@Z ENDP		; NCrypto::NSha1::CContext::Update
_TEXT	ENDS
PUBLIC	?Update@CHmac32@NSha1@NCrypto@@QAEXPBII@Z	; NCrypto::NSha1::CHmac32::Update
PUBLIC	__$ArrayPad$
PUBLIC	?Pbkdf2Hmac32@NSha1@NCrypto@@YGXPBEIPBIIIPAII@Z	; NCrypto::NSha1::Pbkdf2Hmac32
EXTRN	?GetLoopXorDigest@CHmac32@NSha1@NCrypto@@QAEXPAII@Z:PROC ; NCrypto::NSha1::CHmac32::GetLoopXorDigest
EXTRN	?Final@CHmac32@NSha1@NCrypto@@QAEXPAII@Z:PROC	; NCrypto::NSha1::CHmac32::Final
EXTRN	?SetKey@CHmac32@NSha1@NCrypto@@QAEXPBEI@Z:PROC	; NCrypto::NSha1::CHmac32::SetKey
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -448						; size = 4
_s$65984 = -444						; size = 4
_curSize$65982 = -440					; size = 4
_u$65981 = -432						; size = 20
_ctx$65980 = -404					; size = 192
_i$65976 = -208						; size = 4
_baseCtx$ = -200					; size = 192
__$ArrayPad$ = -4					; size = 4
_pwd$ = 8						; size = 4
_pwdSize$ = 12						; size = 4
_salt$ = 16						; size = 4
_saltSize$ = 20						; size = 4
_numIterations$ = 24					; size = 4
_key$ = 28						; size = 4
_keySize$ = 32						; size = 4
?Pbkdf2Hmac32@NSha1@NCrypto@@YGXPBEIPBIIIPAII@Z PROC	; NCrypto::NSha1::Pbkdf2Hmac32
; File c:\workspace\7z1505-src\cpp\7zip\crypto\pbkdf2hmacsha1.cpp
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 56
	mov	eax, DWORD PTR _pwdSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pwd$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _baseCtx$[ebp]
	call	?SetKey@CHmac32@NSha1@NCrypto@@QAEXPBEI@Z ; NCrypto::NSha1::CHmac32::SetKey
; Line 58
	mov	DWORD PTR _i$65976[ebp], 1
	jmp	SHORT $LN6@Pbkdf2Hmac@2
$LN5@Pbkdf2Hmac@2:
	mov	edx, DWORD PTR _i$65976[ebp]
	add	edx, 1
	mov	DWORD PTR _i$65976[ebp], edx
$LN6@Pbkdf2Hmac@2:
	cmp	DWORD PTR _keySize$[ebp], 0
	je	$LN7@Pbkdf2Hmac@2
; Line 60
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _baseCtx$[ebp]
	lea	edi, DWORD PTR _ctx$65980[ebp]
	rep movsd
; Line 61
	mov	eax, DWORD PTR _saltSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _salt$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ctx$65980[ebp]
	call	?Update@CHmac32@NSha1@NCrypto@@QAEXPBII@Z ; NCrypto::NSha1::CHmac32::Update
; Line 64
	mov	edx, DWORD PTR _i$65976[ebp]
	mov	DWORD PTR _u$65981[ebp], edx
; Line 66
	push	1
	lea	eax, DWORD PTR _u$65981[ebp]
	push	eax
	lea	ecx, DWORD PTR _ctx$65980[ebp]
	call	?Update@CHmac32@NSha1@NCrypto@@QAEXPBII@Z ; NCrypto::NSha1::CHmac32::Update
; Line 67
	push	5
	lea	ecx, DWORD PTR _u$65981[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ctx$65980[ebp]
	call	?Final@CHmac32@NSha1@NCrypto@@QAEXPAII@Z ; NCrypto::NSha1::CHmac32::Final
; Line 70
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _baseCtx$[ebp]
	lea	edi, DWORD PTR _ctx$65980[ebp]
	rep movsd
; Line 71
	mov	edx, DWORD PTR _numIterations$[ebp]
	sub	edx, 1
	push	edx
	lea	eax, DWORD PTR _u$65981[ebp]
	push	eax
	lea	ecx, DWORD PTR _ctx$65980[ebp]
	call	?GetLoopXorDigest@CHmac32@NSha1@NCrypto@@QAEXPAII@Z ; NCrypto::NSha1::CHmac32::GetLoopXorDigest
; Line 74
	cmp	DWORD PTR _keySize$[ebp], 5
	jae	SHORT $LN9@Pbkdf2Hmac@2
	mov	ecx, DWORD PTR _keySize$[ebp]
	mov	DWORD PTR tv83[ebp], ecx
	jmp	SHORT $LN10@Pbkdf2Hmac@2
$LN9@Pbkdf2Hmac@2:
	mov	DWORD PTR tv83[ebp], 5
$LN10@Pbkdf2Hmac@2:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _curSize$65982[ebp], edx
; Line 76
	mov	DWORD PTR _s$65984[ebp], 0
	jmp	SHORT $LN3@Pbkdf2Hmac@2
$LN2@Pbkdf2Hmac@2:
	mov	eax, DWORD PTR _s$65984[ebp]
	add	eax, 1
	mov	DWORD PTR _s$65984[ebp], eax
$LN3@Pbkdf2Hmac@2:
	mov	ecx, DWORD PTR _s$65984[ebp]
	cmp	ecx, DWORD PTR _curSize$65982[ebp]
	jae	SHORT $LN1@Pbkdf2Hmac@2
; Line 77
	mov	edx, DWORD PTR _s$65984[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR _s$65984[ebp]
	mov	ecx, DWORD PTR _u$65981[ebp+ecx*4]
	mov	DWORD PTR [eax+edx*4], ecx
	jmp	SHORT $LN2@Pbkdf2Hmac@2
$LN1@Pbkdf2Hmac@2:
; Line 92
	mov	edx, DWORD PTR _curSize$65982[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _key$[ebp], ecx
; Line 93
	mov	edx, DWORD PTR _keySize$[ebp]
	sub	edx, DWORD PTR _curSize$65982[ebp]
	mov	DWORD PTR _keySize$[ebp], edx
; Line 94
	jmp	$LN5@Pbkdf2Hmac@2
$LN7@Pbkdf2Hmac@2:
; Line 95
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Pbkdf2Hmac@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
$LN15@Pbkdf2Hmac@2:
	DD	3
	DD	$LN14@Pbkdf2Hmac@2
$LN14@Pbkdf2Hmac@2:
	DD	-200					; ffffff38H
	DD	192					; 000000c0H
	DD	$LN11@Pbkdf2Hmac@2
	DD	-404					; fffffe6cH
	DD	192					; 000000c0H
	DD	$LN12@Pbkdf2Hmac@2
	DD	-432					; fffffe50H
	DD	20					; 00000014H
	DD	$LN13@Pbkdf2Hmac@2
$LN13@Pbkdf2Hmac@2:
	DB	117					; 00000075H
	DB	0
$LN12@Pbkdf2Hmac@2:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
$LN11@Pbkdf2Hmac@2:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
?Pbkdf2Hmac32@NSha1@NCrypto@@YGXPBEIPBIIIPAII@Z ENDP	; NCrypto::NSha1::Pbkdf2Hmac32
_TEXT	ENDS
PUBLIC	?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z	; NCrypto::NSha1::CContext32::Update
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CHmac32@NSha1@NCrypto@@QAEXPBII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_dataSize$ = 12						; size = 4
?Update@CHmac32@NSha1@NCrypto@@QAEXPBII@Z PROC		; NCrypto::NSha1::CHmac32::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\hmacsha1.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z ; NCrypto::NSha1::CContext32::Update
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Update@CHmac32@NSha1@NCrypto@@QAEXPBII@Z ENDP		; NCrypto::NSha1::CHmac32::Update
_TEXT	ENDS
EXTRN	_Sha1_32_Update@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z PROC	; NCrypto::NSha1::CContext32::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\sha1cls.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Sha1_32_Update@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Update@CContext32@NSha1@NCrypto@@QAEXPBII@Z ENDP	; NCrypto::NSha1::CContext32::Update
_TEXT	ENDS
END

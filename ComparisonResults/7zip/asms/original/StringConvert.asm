; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Common\StringConvert.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?ReleaseBuf_SetEnd@UString@@QAEXI@Z		; UString::ReleaseBuf_SetEnd
PUBLIC	?GetBuf@UString@@QAEPA_WI@Z			; UString::GetBuf
PUBLIC	__TI1H
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString2
PUBLIC	__CTA1H
PUBLIC	__CT??_R0H@84
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0H@8
; File c:\workspace\7z1505-src\cpp\common\stringconvert.cpp
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT __CT??_R0H@84
xdata$x	SEGMENT
__CT??_R0H@84 DD 01H
	DD	FLAT:??_R0H@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1H
xdata$x	SEGMENT
__CTA1H	DD	01H
	DD	FLAT:__CT??_R0H@84
xdata$x	ENDS
;	COMDAT __TI1H
xdata$x	SEGMENT
__TI1H	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
$T67260 = -12						; size = 4
$T67258 = -8						; size = 4
_len$67166 = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_codePage$ = 16						; size = 4
?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z PROC ; MultiByteToUnicodeString2
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 44
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 45
	mov	ecx, DWORD PTR _src$[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@MultiByteT
; Line 46
	jmp	$LN7@MultiByteT
$LN5@MultiByteT:
; Line 74
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _src$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	push	0
	mov	ecx, DWORD PTR _codePage$[ebp]
	push	ecx
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$67166[ebp], eax
; Line 75
	cmp	DWORD PTR _len$67166[ebp], 0
	jne	SHORT $LN4@MultiByteT
; Line 77
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@MultiByteT
; Line 78
	mov	DWORD PTR $T67258[ebp], 282228		; 00044e74H
	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T67258[ebp]
	push	edx
	call	__CxxThrowException@8
$LN3@MultiByteT:
; Line 80
	jmp	SHORT $LN7@MultiByteT
$LN4@MultiByteT:
; Line 82
	mov	esi, esp
	mov	eax, DWORD PTR _len$67166[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$67166[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?GetBuf@UString@@QAEPA_WI@Z		; UString::GetBuf
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	push	0
	mov	edx, DWORD PTR _codePage$[ebp]
	push	edx
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$67166[ebp], eax
; Line 83
	cmp	DWORD PTR _len$67166[ebp], 0
	jne	SHORT $LN1@MultiByteT
; Line 84
	mov	DWORD PTR $T67260[ebp], 282228		; 00044e74H
	push	OFFSET __TI1H
	lea	eax, DWORD PTR $T67260[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@MultiByteT:
; Line 85
	mov	ecx, DWORD PTR _len$67166[ebp]
	push	ecx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?ReleaseBuf_SetEnd@UString@@QAEXI@Z	; UString::ReleaseBuf_SetEnd
$LN7@MultiByteT:
; Line 88
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z ENDP ; MultiByteToUnicodeString2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
EXTRN	?ReAlloc2@UString@@AAEXI@Z:PROC			; UString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf@UString@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf@UString@@QAEPA_WI@Z PROC			; UString::GetBuf, COMDAT
; _this$ = ecx
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf
; Line 487
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@UString@@AAEXI@Z		; UString::ReAlloc2
$LN1@GetBuf:
; Line 488
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 489
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf@UString@@QAEPA_WI@Z ENDP			; UString::GetBuf
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseBuf_SetEnd@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newLen$ = 8						; size = 4
?ReleaseBuf_SetEnd@UString@@QAEXI@Z PROC		; UString::ReleaseBuf_SetEnd, COMDAT
; _this$ = ecx
; Line 501
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	xor	ecx, ecx
	mov	edx, DWORD PTR _newLen$[ebp]
	mov	WORD PTR [eax+edx*2], cx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBuf_SetEnd@UString@@QAEXI@Z ENDP		; UString::ReleaseBuf_SetEnd
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z$0
__ehfuncinfo$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67283 = -36						; size = 4
_dest$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_codePage$ = 16						; size = 4
?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z PROC ; MultiByteToUnicodeString
; File c:\workspace\7z1505-src\cpp\common\stringconvert.cpp
; Line 288
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67283[ebp], 0
; Line 289
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 290
	mov	eax, DWORD PTR _codePage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	?MultiByteToUnicodeString2@@YGXAAVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString2
; Line 291
	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	ecx, DWORD PTR $T67283[ebp]
	or	ecx, 1
	mov	DWORD PTR $T67283[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 292
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@MultiByteT@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN9@MultiByteT@2:
	DD	1
	DD	$LN8@MultiByteT@2
$LN8@MultiByteT@2:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@MultiByteT@2
$LN6@MultiByteT@2:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z$0:
	lea	ecx, DWORD PTR _dest$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z$1:
	mov	eax, DWORD PTR $T67283[ebp]
	and	eax, 1
	je	$LN5@MultiByteT@2
	and	DWORD PTR $T67283[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN5@MultiByteT@2:
	ret	0
__ehhandler$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ENDP ; MultiByteToUnicodeString
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67299 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67299[ebp], ecx
	mov	edx, DWORD PTR $T67299[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
PUBLIC	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z ; UnicodeStringToMultiByte2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_defaultCharWasUsed$ = -5				; size = 1
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_codePage$ = 16						; size = 4
?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z PROC ; UnicodeStringToMultiByte2
; File c:\workspace\7z1505-src\cpp\common\stringconvert.cpp
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 297
	lea	eax, DWORD PTR _defaultCharWasUsed$[ebp]
	push	eax
	push	95					; 0000005fH
	mov	ecx, DWORD PTR _codePage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@IDAA_N@Z ; UnicodeStringToMultiByte2
; Line 298
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@UnicodeStr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@UnicodeStr:
	DD	1
	DD	$LN4@UnicodeStr
$LN4@UnicodeStr:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@UnicodeStr
$LN3@UnicodeStr:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	87					; 00000057H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	85					; 00000055H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z ENDP ; UnicodeStringToMultiByte2
_TEXT	ENDS
PUBLIC	?ReleaseBuf_SetEnd@AString@@QAEXI@Z		; AString::ReleaseBuf_SetEnd
PUBLIC	?GetBuf@AString@@QAEPADI@Z			; AString::GetBuf
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
EXTRN	__imp__WideCharToMultiByte@32:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv89 = -32						; size = 4
$T67309 = -28						; size = 4
$T67306 = -24						; size = 4
_isUtf$67194 = -17					; size = 1
_defUsed$67193 = -12					; size = 4
_len$67188 = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_codePage$ = 16						; size = 4
_defaultChar$ = 20					; size = 1
_defaultCharWasUsed$ = 24				; size = 4
?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@IDAA_N@Z PROC ; UnicodeStringToMultiByte2
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 110
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 111
	mov	eax, DWORD PTR _defaultCharWasUsed$[ebp]
	mov	BYTE PTR [eax], 0
; Line 112
	mov	ecx, DWORD PTR _src$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@UnicodeStr@2
; Line 113
	jmp	$LN8@UnicodeStr@2
$LN6@UnicodeStr@2:
; Line 178
	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _src$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	0
	mov	edx, DWORD PTR _codePage$[ebp]
	push	edx
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$67188[ebp], eax
; Line 179
	cmp	DWORD PTR _len$67188[ebp], 0
	jne	SHORT $LN5@UnicodeStr@2
; Line 181
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@UnicodeStr@2
; Line 182
	mov	DWORD PTR $T67306[ebp], 282228		; 00044e74H
	push	OFFSET __TI1H
	lea	eax, DWORD PTR $T67306[ebp]
	push	eax
	call	__CxxThrowException@8
$LN4@UnicodeStr@2:
; Line 184
	jmp	$LN8@UnicodeStr@2
$LN5@UnicodeStr@2:
; Line 186
	mov	DWORD PTR _defUsed$67193[ebp], 0
; Line 187
	cmp	DWORD PTR _codePage$[ebp], 65001	; 0000fde9H
	je	SHORT $LN9@UnicodeStr@2
	cmp	DWORD PTR _codePage$[ebp], 65000	; 0000fde8H
	je	SHORT $LN9@UnicodeStr@2
	mov	DWORD PTR tv89[ebp], 0
	jmp	SHORT $LN10@UnicodeStr@2
$LN9@UnicodeStr@2:
	mov	DWORD PTR tv89[ebp], 1
$LN10@UnicodeStr@2:
	mov	cl, BYTE PTR tv89[ebp]
	mov	BYTE PTR _isUtf$67194[ebp], cl
; Line 188
	mov	dl, BYTE PTR _defaultChar$[ebp]
	mov	BYTE PTR _defaultChar$[ebp], dl
; Line 193
	movzx	eax, BYTE PTR _isUtf$67194[ebp]
	neg	eax
	sbb	eax, eax
	not	eax
	lea	ecx, DWORD PTR _defUsed$67193[ebp]
	and	eax, ecx
	mov	esi, esp
	push	eax
	movzx	edx, BYTE PTR _isUtf$67194[ebp]
	neg	edx
	sbb	edx, edx
	not	edx
	lea	eax, DWORD PTR _defaultChar$[ebp]
	and	edx, eax
	push	edx
	mov	ecx, DWORD PTR _len$67188[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$67188[ebp]
	push	edx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?GetBuf@AString@@QAEPADI@Z		; AString::GetBuf
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	0
	mov	eax, DWORD PTR _codePage$[ebp]
	push	eax
	call	DWORD PTR __imp__WideCharToMultiByte@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$67188[ebp], eax
; Line 194
	movzx	ecx, BYTE PTR _isUtf$67194[ebp]
	test	ecx, ecx
	jne	SHORT $LN2@UnicodeStr@2
; Line 195
	xor	edx, edx
	cmp	DWORD PTR _defUsed$67193[ebp], 0
	setne	dl
	mov	eax, DWORD PTR _defaultCharWasUsed$[ebp]
	mov	BYTE PTR [eax], dl
$LN2@UnicodeStr@2:
; Line 196
	cmp	DWORD PTR _len$67188[ebp], 0
	jne	SHORT $LN1@UnicodeStr@2
; Line 197
	mov	DWORD PTR $T67309[ebp], 282228		; 00044e74H
	push	OFFSET __TI1H
	lea	ecx, DWORD PTR $T67309[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN1@UnicodeStr@2:
; Line 198
	mov	edx, DWORD PTR _len$67188[ebp]
	push	edx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?ReleaseBuf_SetEnd@AString@@QAEXI@Z	; AString::ReleaseBuf_SetEnd
$LN8@UnicodeStr@2:
; Line 201
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@UnicodeStr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN13@UnicodeStr@2:
	DD	1
	DD	$LN12@UnicodeStr@2
$LN12@UnicodeStr@2:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN11@UnicodeStr@2
$LN11@UnicodeStr@2:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	85					; 00000055H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@IDAA_N@Z ENDP ; UnicodeStringToMultiByte2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
_TEXT	ENDS
EXTRN	?ReAlloc2@AString@@AAEXI@Z:PROC			; AString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf@AString@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf@AString@@QAEPADI@Z PROC				; AString::GetBuf, COMDAT
; _this$ = ecx
; Line 250
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf@2
; Line 252
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@AString@@AAEXI@Z		; AString::ReAlloc2
$LN1@GetBuf@2:
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 254
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf@AString@@QAEPADI@Z ENDP				; AString::GetBuf
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseBuf_SetEnd@AString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newLen$ = 8						; size = 4
?ReleaseBuf_SetEnd@AString@@QAEXI@Z PROC		; AString::ReleaseBuf_SetEnd, COMDAT
; _this$ = ecx
; Line 266
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	BYTE PTR [eax+ecx], 0
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBuf_SetEnd@AString@@QAEXI@Z ENDP		; AString::ReleaseBuf_SetEnd
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z ; UnicodeStringToMultiByte
EXTRN	??0AString@@QAE@ABV0@@Z:PROC			; AString::AString
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
xdata$x	SEGMENT
__unwindtable$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z$0
__ehfuncinfo$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67328 = -36						; size = 4
_dest$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_codePage$ = 16						; size = 4
_defaultChar$ = 20					; size = 1
_defaultCharWasUsed$ = 24				; size = 4
?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z PROC ; UnicodeStringToMultiByte
; File c:\workspace\7z1505-src\cpp\common\stringconvert.cpp
; Line 301
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67328[ebp], 0
; Line 302
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 303
	mov	eax, DWORD PTR _defaultCharWasUsed$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _defaultChar$[ebp]
	push	ecx
	mov	edx, DWORD PTR _codePage$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@IDAA_N@Z ; UnicodeStringToMultiByte2
; Line 304
	lea	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	eax, DWORD PTR $T67328[ebp]
	or	eax, 1
	mov	DWORD PTR $T67328[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 305
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@UnicodeStr@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN9@UnicodeStr@3:
	DD	1
	DD	$LN8@UnicodeStr@3
$LN8@UnicodeStr@3:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@UnicodeStr@3
$LN6@UnicodeStr@3:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z$0:
	lea	ecx, DWORD PTR _dest$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z$1:
	mov	eax, DWORD PTR $T67328[ebp]
	and	eax, 1
	je	$LN5@UnicodeStr@3
	and	DWORD PTR $T67328[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
$LN5@UnicodeStr@3:
	ret	0
__ehhandler$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@IDAA_N@Z ENDP ; UnicodeStringToMultiByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67338 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67338[ebp], ecx
	mov	edx, DWORD PTR $T67338[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
_TEXT	ENDS
PUBLIC	?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z ; UnicodeStringToMultiByte
xdata$x	SEGMENT
__unwindtable$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z$0
__ehfuncinfo$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67343 = -48						; size = 4
_defaultCharWasUsed$ = -37				; size = 1
_dest$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_codePage$ = 16						; size = 4
?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z PROC ; UnicodeStringToMultiByte
; File c:\workspace\7z1505-src\cpp\common\stringconvert.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67343[ebp], 0
; Line 309
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 311
	lea	eax, DWORD PTR _defaultCharWasUsed$[ebp]
	push	eax
	push	95					; 0000005fH
	mov	ecx, DWORD PTR _codePage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	lea	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@IDAA_N@Z ; UnicodeStringToMultiByte2
; Line 312
	lea	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	edx, DWORD PTR $T67343[ebp]
	or	edx, 1
	mov	DWORD PTR $T67343[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dest$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 313
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@UnicodeStr@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN10@UnicodeStr@4:
	DD	2
	DD	$LN9@UnicodeStr@4
$LN9@UnicodeStr@4:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@UnicodeStr@4
	DD	-37					; ffffffdbH
	DD	1
	DD	$LN7@UnicodeStr@4
$LN7@UnicodeStr@4:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	87					; 00000057H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	85					; 00000055H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN6@UnicodeStr@4:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z$0:
	lea	ecx, DWORD PTR _dest$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z$1:
	mov	eax, DWORD PTR $T67343[ebp]
	and	eax, 1
	je	$LN5@UnicodeStr@4
	and	DWORD PTR $T67343[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
$LN5@UnicodeStr@4:
	ret	0
__ehhandler$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z ENDP ; UnicodeStringToMultiByte
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\GzHandler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kUnknownOS DD	FLAT:$SG70818
_kNameMaxLen DD	01000H
_kCommentMaxLen DD 010000H
_DATA	ENDS
CONST	SEGMENT
$SG70797 DB	'FAT', 00H
$SG70798 DB	'AMIGA', 00H
	ORG $+2
$SG70799 DB	'VMS', 00H
$SG70800 DB	'Unix', 00H
	ORG $+3
$SG70801 DB	'VM/CMS', 00H
	ORG $+1
$SG70802 DB	'Atari', 00H
	ORG $+2
$SG70803 DB	'HPFS', 00H
	ORG $+3
$SG70804 DB	'Macintosh', 00H
	ORG $+2
$SG70805 DB	'Z-System', 00H
	ORG $+3
$SG70806 DB	'CP/M', 00H
	ORG $+3
$SG70807 DB	'TOPS-20', 00H
$SG70808 DB	'NTFS', 00H
	ORG $+3
$SG70809 DB	'SMS/QDOS', 00H
	ORG $+3
$SG70810 DB	'Acorn', 00H
	ORG $+2
$SG70811 DB	'VFAT', 00H
	ORG $+3
$SG70812 DB	'MVS', 00H
$SG70813 DB	'BeOS', 00H
	ORG $+3
$SG70814 DB	'Tandem', 00H
	ORG $+1
$SG70815 DB	'OS/400', 00H
	ORG $+1
$SG70816 DB	'OS/X', 00H
	ORG $+3
_kHostOSes DD	FLAT:$SG70797
	DD	FLAT:$SG70798
	DD	FLAT:$SG70799
	DD	FLAT:$SG70800
	DD	FLAT:$SG70801
	DD	FLAT:$SG70802
	DD	FLAT:$SG70803
	DD	FLAT:$SG70804
	DD	FLAT:$SG70805
	DD	FLAT:$SG70806
	DD	FLAT:$SG70807
	DD	FLAT:$SG70808
	DD	FLAT:$SG70809
	DD	FLAT:$SG70810
	DD	FLAT:$SG70811
	DD	FLAT:$SG70812
	DD	FLAT:$SG70813
	DD	FLAT:$SG70814
	DD	FLAT:$SG70815
	DD	FLAT:$SG70816
$SG70818 DB	'Unknown', 00H
_kProps	DB	03H
	DB	07H
	DB	08H
	DB	0cH
	DB	017H
	DB	013H
	ORG $+2
_kArcProps DB	02dH
	DB	04aH
	ORG $+2
$SG71319 DB	'.gz', 00H
_k_Signature DB	01fH
	DB	08bH
	DB	08H
	ORG $+1
$SG71846 DB	'gzip', 00H
	ORG $+3
$SG71847 DB	'gz gzip tgz tpz', 00H
$SG71848 DB	'* * .tar .tar', 00H
	ORG $+2
_g_ArcInfo DW	01H
	DB	0efH
	DB	03H
	DW	00H
	ORG $+2
	DD	FLAT:_k_Signature
	DD	FLAT:$SG71846
	DD	FLAT:$SG71847
	DD	FLAT:$SG71848
	DD	FLAT:?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ
	DD	FLAT:?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ
	DD	FLAT:_IsArc_Gz@8
CONST	ENDS
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$70992 = -28						; size = 4
_limit$70990 = -24					; size = 4
_i$70983 = -20						; size = 4
_limit$70981 = -16					; size = 4
_len$70975 = -12					; size = 4
_xlen$70967 = -8					; size = 4
_extraFlags$ = -2					; size = 1
_flags$ = -1						; size = 1
_p$ = 8							; size = 4
_size$ = 12						; size = 4
_IsArc_Gz@8 PROC
; Line 255
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 256
	cmp	DWORD PTR _size$[ebp], 10		; 0000000aH
	jae	SHORT $LN29@IsArc_Gz
; Line 257
	mov	eax, 2
	jmp	$LN30@IsArc_Gz
$LN29@IsArc_Gz:
; Line 260
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 31					; 0000001fH
	jne	SHORT $LN27@IsArc_Gz
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	cmp	eax, 139				; 0000008bH
	jne	SHORT $LN27@IsArc_Gz
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	cmp	edx, 8
	je	SHORT $LN28@IsArc_Gz
$LN27@IsArc_Gz:
; Line 261
	xor	eax, eax
	jmp	$LN30@IsArc_Gz
$LN28@IsArc_Gz:
; Line 263
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR [eax+3]
	mov	BYTE PTR _flags$[ebp], cl
; Line 264
	movzx	edx, BYTE PTR _flags$[ebp]
	and	edx, 224				; 000000e0H
	je	SHORT $LN26@IsArc_Gz
; Line 265
	xor	eax, eax
	jmp	$LN30@IsArc_Gz
$LN26@IsArc_Gz:
; Line 267
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR [eax+8]
	mov	BYTE PTR _extraFlags$[ebp], cl
; Line 271
	movzx	edx, BYTE PTR _extraFlags$[ebp]
	test	edx, edx
	je	SHORT $LN25@IsArc_Gz
	movzx	eax, BYTE PTR _extraFlags$[ebp]
	cmp	eax, 2
	je	SHORT $LN25@IsArc_Gz
	movzx	ecx, BYTE PTR _extraFlags$[ebp]
	cmp	ecx, 4
	je	SHORT $LN25@IsArc_Gz
; Line 272
	xor	eax, eax
	jmp	$LN30@IsArc_Gz
$LN25@IsArc_Gz:
; Line 274
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 10					; 0000000aH
	mov	DWORD PTR _size$[ebp], edx
; Line 275
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _p$[ebp], eax
; Line 277
	movzx	ecx, BYTE PTR _flags$[ebp]
	and	ecx, 4
	je	$LN24@IsArc_Gz
; Line 279
	cmp	DWORD PTR _size$[ebp], 2
	jae	SHORT $LN23@IsArc_Gz
; Line 280
	mov	eax, 2
	jmp	$LN30@IsArc_Gz
$LN23@IsArc_Gz:
; Line 281
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _xlen$70967[ebp], eax
; Line 282
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, 2
	mov	DWORD PTR _size$[ebp], ecx
; Line 283
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 2
	mov	DWORD PTR _p$[ebp], edx
$LN22@IsArc_Gz:
; Line 284
	cmp	DWORD PTR _xlen$70967[ebp], 0
	je	$LN24@IsArc_Gz
; Line 286
	cmp	DWORD PTR _xlen$70967[ebp], 4
	jae	SHORT $LN20@IsArc_Gz
; Line 287
	xor	eax, eax
	jmp	$LN30@IsArc_Gz
$LN20@IsArc_Gz:
; Line 288
	cmp	DWORD PTR _size$[ebp], 4
	jae	SHORT $LN19@IsArc_Gz
; Line 289
	mov	eax, 2
	jmp	$LN30@IsArc_Gz
$LN19@IsArc_Gz:
; Line 290
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _len$70975[ebp], ecx
; Line 291
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 4
	mov	DWORD PTR _size$[ebp], edx
; Line 292
	mov	eax, DWORD PTR _xlen$70967[ebp]
	sub	eax, 4
	mov	DWORD PTR _xlen$70967[ebp], eax
; Line 293
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 4
	mov	DWORD PTR _p$[ebp], ecx
; Line 294
	mov	edx, DWORD PTR _len$70975[ebp]
	cmp	edx, DWORD PTR _xlen$70967[ebp]
	jbe	SHORT $LN18@IsArc_Gz
; Line 295
	xor	eax, eax
	jmp	$LN30@IsArc_Gz
$LN18@IsArc_Gz:
; Line 296
	mov	eax, DWORD PTR _len$70975[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jbe	SHORT $LN17@IsArc_Gz
; Line 297
	mov	eax, 2
	jmp	$LN30@IsArc_Gz
$LN17@IsArc_Gz:
; Line 298
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, DWORD PTR _len$70975[ebp]
	mov	DWORD PTR _size$[ebp], ecx
; Line 299
	mov	edx, DWORD PTR _xlen$70967[ebp]
	sub	edx, DWORD PTR _len$70975[ebp]
	mov	DWORD PTR _xlen$70967[ebp], edx
; Line 300
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _len$70975[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 301
	jmp	$LN22@IsArc_Gz
$LN24@IsArc_Gz:
; Line 304
	movzx	ecx, BYTE PTR _flags$[ebp]
	and	ecx, 8
	je	SHORT $LN16@IsArc_Gz
; Line 306
	mov	edx, DWORD PTR _kNameMaxLen
	mov	DWORD PTR _limit$70981[ebp], edx
; Line 307
	mov	eax, DWORD PTR _limit$70981[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jbe	SHORT $LN15@IsArc_Gz
; Line 308
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _limit$70981[ebp], ecx
$LN15@IsArc_Gz:
; Line 310
	mov	DWORD PTR _i$70983[ebp], 0
	jmp	SHORT $LN14@IsArc_Gz
$LN13@IsArc_Gz:
	mov	edx, DWORD PTR _i$70983[ebp]
	add	edx, 1
	mov	DWORD PTR _i$70983[ebp], edx
$LN14@IsArc_Gz:
	mov	eax, DWORD PTR _i$70983[ebp]
	cmp	eax, DWORD PTR _limit$70981[ebp]
	jae	SHORT $LN12@IsArc_Gz
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _i$70983[ebp]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN12@IsArc_Gz
	jmp	SHORT $LN13@IsArc_Gz
$LN12@IsArc_Gz:
; Line 311
	mov	eax, DWORD PTR _i$70983[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jne	SHORT $LN11@IsArc_Gz
; Line 312
	mov	eax, 2
	jmp	$LN30@IsArc_Gz
$LN11@IsArc_Gz:
; Line 313
	mov	ecx, DWORD PTR _i$70983[ebp]
	cmp	ecx, DWORD PTR _limit$70981[ebp]
	jne	SHORT $LN10@IsArc_Gz
; Line 314
	xor	eax, eax
	jmp	$LN30@IsArc_Gz
$LN10@IsArc_Gz:
; Line 315
	mov	edx, DWORD PTR _i$70983[ebp]
	add	edx, 1
	mov	DWORD PTR _i$70983[ebp], edx
; Line 316
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _i$70983[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 317
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, DWORD PTR _i$70983[ebp]
	mov	DWORD PTR _size$[ebp], ecx
$LN16@IsArc_Gz:
; Line 320
	movzx	edx, BYTE PTR _flags$[ebp]
	and	edx, 16					; 00000010H
	je	SHORT $LN9@IsArc_Gz
; Line 322
	mov	eax, DWORD PTR _kCommentMaxLen
	mov	DWORD PTR _limit$70990[ebp], eax
; Line 323
	mov	ecx, DWORD PTR _limit$70990[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jbe	SHORT $LN8@IsArc_Gz
; Line 324
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _limit$70990[ebp], edx
$LN8@IsArc_Gz:
; Line 326
	mov	DWORD PTR _i$70992[ebp], 0
	jmp	SHORT $LN7@IsArc_Gz
$LN6@IsArc_Gz:
	mov	eax, DWORD PTR _i$70992[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70992[ebp], eax
$LN7@IsArc_Gz:
	mov	ecx, DWORD PTR _i$70992[ebp]
	cmp	ecx, DWORD PTR _limit$70990[ebp]
	jae	SHORT $LN5@IsArc_Gz
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _i$70992[ebp]
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN5@IsArc_Gz
	jmp	SHORT $LN6@IsArc_Gz
$LN5@IsArc_Gz:
; Line 327
	mov	ecx, DWORD PTR _i$70992[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jne	SHORT $LN4@IsArc_Gz
; Line 328
	mov	eax, 2
	jmp	SHORT $LN30@IsArc_Gz
$LN4@IsArc_Gz:
; Line 329
	mov	edx, DWORD PTR _i$70992[ebp]
	cmp	edx, DWORD PTR _limit$70990[ebp]
	jne	SHORT $LN3@IsArc_Gz
; Line 330
	xor	eax, eax
	jmp	SHORT $LN30@IsArc_Gz
$LN3@IsArc_Gz:
; Line 331
	mov	eax, DWORD PTR _i$70992[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70992[ebp], eax
; Line 332
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _i$70992[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 333
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, DWORD PTR _i$70992[ebp]
	mov	DWORD PTR _size$[ebp], edx
$LN9@IsArc_Gz:
; Line 336
	movzx	eax, BYTE PTR _flags$[ebp]
	and	eax, 2
	je	SHORT $LN2@IsArc_Gz
; Line 338
	cmp	DWORD PTR _size$[ebp], 2
	jae	SHORT $LN1@IsArc_Gz
; Line 339
	mov	eax, 2
	jmp	SHORT $LN30@IsArc_Gz
$LN1@IsArc_Gz:
; Line 340
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 2
	mov	DWORD PTR _p$[ebp], ecx
; Line 341
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 2
	mov	DWORD PTR _size$[ebp], edx
$LN2@IsArc_Gz:
; Line 344
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?Is_Deflate@NGz@NArchive@@YGIPBEI@Z	; NArchive::NGz::Is_Deflate
$LN30@IsArc_Gz:
; Line 345
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_IsArc_Gz@8 ENDP
; Function compile flags: /Odtp /RTCsu
_type$ = -8						; size = 4
_b$ = -1						; size = 1
_p$ = 8							; size = 4
_size$ = 12						; size = 4
?Is_Deflate@NGz@NArchive@@YGIPBEI@Z PROC		; NArchive::NGz::Is_Deflate
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 222
	cmp	DWORD PTR _size$[ebp], 1
	jae	SHORT $LN10@Is_Deflate
; Line 223
	mov	eax, 2
	jmp	$LN11@Is_Deflate
$LN10@Is_Deflate:
; Line 224
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b$[ebp], cl
; Line 225
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 226
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _size$[ebp], eax
; Line 227
	movzx	ecx, BYTE PTR _b$[ebp]
	shr	ecx, 1
	and	ecx, 3
	mov	DWORD PTR _type$[ebp], ecx
; Line 228
	cmp	DWORD PTR _type$[ebp], 3
	jne	SHORT $LN9@Is_Deflate
; Line 229
	xor	eax, eax
	jmp	SHORT $LN11@Is_Deflate
$LN9@Is_Deflate:
; Line 230
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN8@Is_Deflate
; Line 233
	movzx	edx, BYTE PTR _b$[ebp]
	sar	edx, 3
	test	edx, edx
	je	SHORT $LN7@Is_Deflate
; Line 234
	xor	eax, eax
	jmp	SHORT $LN11@Is_Deflate
$LN7@Is_Deflate:
; Line 235
	cmp	DWORD PTR _size$[ebp], 4
	jae	SHORT $LN6@Is_Deflate
; Line 236
	mov	eax, 2
	jmp	SHORT $LN11@Is_Deflate
$LN6@Is_Deflate:
; Line 237
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+2]
	not	eax
	movzx	edx, ax
	cmp	ecx, edx
	je	SHORT $LN5@Is_Deflate
; Line 238
	xor	eax, eax
	jmp	SHORT $LN11@Is_Deflate
$LN5@Is_Deflate:
; Line 239
	jmp	SHORT $LN4@Is_Deflate
$LN8@Is_Deflate:
; Line 240
	cmp	DWORD PTR _type$[ebp], 2
	jne	SHORT $LN4@Is_Deflate
; Line 243
	cmp	DWORD PTR _size$[ebp], 1
	jae	SHORT $LN2@Is_Deflate
; Line 244
	mov	eax, 2
	jmp	SHORT $LN11@Is_Deflate
$LN2@Is_Deflate:
; Line 245
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 31					; 0000001fH
	add	ecx, 1
	cmp	ecx, 30					; 0000001eH
	jle	SHORT $LN4@Is_Deflate
; Line 246
	xor	eax, eax
	jmp	SHORT $LN11@Is_Deflate
$LN4@Is_Deflate:
; Line 248
	mov	eax, 1
$LN11@Is_Deflate:
; Line 249
	mov	esp, ebp
	pop	ebp
	ret	8
?Is_Deflate@NGz@NArchive@@YGIPBEI@Z ENDP		; NArchive::NGz::Is_Deflate
_TEXT	ENDS
PUBLIC	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
PUBLIC	?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ	; NArchive::NGz::CItem::HeaderCrcIsPresent
PUBLIC	?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ	; NArchive::NGz::CItem::CommentIsPresent
PUBLIC	?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ	; NArchive::NGz::CItem::NameIsPresent
PUBLIC	?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::ExtraFieldIsPresent
PUBLIC	?IsSupported@CItem@NGz@NArchive@@QBE_NXZ	; NArchive::NGz::CItem::IsSupported
PUBLIC	?Clear@CItem@NGz@NArchive@@QAEXXZ		; NArchive::NGz::CItem::Clear
PUBLIC	__$ArrayPad$
PUBLIC	?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ; NArchive::NGz::CItem::ReadHeader
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$71028 = -76					; size = 4
_headerCRC$71027 = -68					; size = 4
___result__$71024 = -60					; size = 4
___result__$71021 = -56					; size = 4
___result__$71018 = -52					; size = 4
___result__$71016 = -48					; size = 4
_xlen$71015 = -40					; size = 4
___result__$71005 = -32					; size = 4
_buf$ = -24						; size = 10
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_stream$ = 8						; size = 4
?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z PROC ; NArchive::NGz::CItem::ReadHeader
; _this$ = ecx
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 350
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CItem@NGz@NArchive@@QAEXXZ	; NArchive::NGz::CItem::Clear
; Line 356
	push	10					; 0000000aH
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z ; NArchive::NGz::ReadBytes
	mov	DWORD PTR ___result__$71005[ebp], eax
	cmp	DWORD PTR ___result__$71005[ebp], 0
	je	SHORT $LN13@ReadHeader
	mov	eax, DWORD PTR ___result__$71005[ebp]
	jmp	$LN14@ReadHeader
$LN13@ReadHeader:
; Line 360
	movzx	edx, BYTE PTR _buf$[ebp]
	cmp	edx, 31					; 0000001fH
	jne	SHORT $LN11@ReadHeader
	movzx	eax, BYTE PTR _buf$[ebp+1]
	cmp	eax, 139				; 0000008bH
	jne	SHORT $LN11@ReadHeader
	movzx	ecx, BYTE PTR _buf$[ebp+2]
	cmp	ecx, 8
	je	SHORT $LN12@ReadHeader
$LN11@ReadHeader:
; Line 361
	mov	eax, 1
	jmp	$LN14@ReadHeader
$LN12@ReadHeader:
; Line 363
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _buf$[ebp+3]
	mov	BYTE PTR [edx], al
; Line 364
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSupported@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::IsSupported
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN10@ReadHeader
; Line 365
	mov	eax, 1
	jmp	$LN14@ReadHeader
$LN10@ReadHeader:
; Line 367
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _buf$[ebp+4]
	mov	DWORD PTR [edx+4], eax
; Line 368
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _buf$[ebp+8]
	mov	BYTE PTR [ecx+1], dl
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _buf$[ebp+9]
	mov	BYTE PTR [eax+2], cl
; Line 373
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::ExtraFieldIsPresent
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@ReadHeader
; Line 376
	lea	eax, DWORD PTR _xlen$71015[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z ; NArchive::NGz::ReadUInt16
	mov	DWORD PTR ___result__$71016[ebp], eax
	cmp	DWORD PTR ___result__$71016[ebp], 0
	je	SHORT $LN8@ReadHeader
	mov	eax, DWORD PTR ___result__$71016[ebp]
	jmp	$LN14@ReadHeader
$LN8@ReadHeader:
; Line 377
	mov	edx, DWORD PTR _xlen$71015[ebp]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	call	?SkipBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@I@Z ; NArchive::NGz::SkipBytes
	mov	DWORD PTR ___result__$71018[ebp], eax
	cmp	DWORD PTR ___result__$71018[ebp], 0
	je	SHORT $LN9@ReadHeader
	mov	eax, DWORD PTR ___result__$71018[ebp]
	jmp	$LN14@ReadHeader
$LN9@ReadHeader:
; Line 382
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::NameIsPresent
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@ReadHeader
; Line 383
	mov	edx, DWORD PTR _kNameMaxLen
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z ; NArchive::NGz::ReadString
	mov	DWORD PTR ___result__$71021[ebp], eax
	cmp	DWORD PTR ___result__$71021[ebp], 0
	je	SHORT $LN6@ReadHeader
	mov	eax, DWORD PTR ___result__$71021[ebp]
	jmp	SHORT $LN14@ReadHeader
$LN6@ReadHeader:
; Line 384
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::CommentIsPresent
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@ReadHeader
; Line 385
	mov	eax, DWORD PTR _kCommentMaxLen
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z ; NArchive::NGz::ReadString
	mov	DWORD PTR ___result__$71024[ebp], eax
	cmp	DWORD PTR ___result__$71024[ebp], 0
	je	SHORT $LN4@ReadHeader
	mov	eax, DWORD PTR ___result__$71024[ebp]
	jmp	SHORT $LN14@ReadHeader
$LN4@ReadHeader:
; Line 387
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::HeaderCrcIsPresent
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ReadHeader
; Line 391
	lea	ecx, DWORD PTR _headerCRC$71027[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z ; NArchive::NGz::ReadUInt16
	mov	DWORD PTR ___result__$71028[ebp], eax
	cmp	DWORD PTR ___result__$71028[ebp], 0
	je	SHORT $LN2@ReadHeader
	mov	eax, DWORD PTR ___result__$71028[ebp]
	jmp	SHORT $LN14@ReadHeader
$LN2@ReadHeader:
; Line 397
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	neg	eax
$LN14@ReadHeader:
; Line 398
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ReadHeader
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN20@ReadHeader:
	DD	3
	DD	$LN19@ReadHeader
$LN19@ReadHeader:
	DD	-24					; ffffffe8H
	DD	10					; 0000000aH
	DD	$LN16@ReadHeader
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN17@ReadHeader
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN18@ReadHeader
$LN18@ReadHeader:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	82					; 00000052H
	DB	67					; 00000043H
	DB	0
$LN17@ReadHeader:
	DB	120					; 00000078H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN16@ReadHeader:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ENDP ; NArchive::NGz::CItem::ReadHeader
_TEXT	ENDS
PUBLIC	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::InputEofError, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 138
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
_TEXT	ENDS
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CItem@NGz@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CItem@NGz@NArchive@@QAEXXZ PROC			; NArchive::NGz::CItem::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 138
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 142
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CItem@NGz@NArchive@@QAEXXZ ENDP			; NArchive::NGz::CItem::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
_TEXT	ENDS
PUBLIC	?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z		; NArchive::NGz::CItem::TestFlag
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ PROC	; NArchive::NGz::CItem::HeaderCrcIsPresent, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 162
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z	; NArchive::NGz::CItem::TestFlag
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?HeaderCrcIsPresent@CItem@NGz@NArchive@@QBE_NXZ ENDP	; NArchive::NGz::CItem::HeaderCrcIsPresent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_flag$ = 8						; size = 1
?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z PROC		; NArchive::NGz::CItem::TestFlag, COMDAT
; _this$ = ecx
; Line 116
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax]
	movzx	ecx, BYTE PTR _flag$[ebp]
	and	eax, ecx
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z ENDP		; NArchive::NGz::CItem::TestFlag
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ PROC	; NArchive::NGz::CItem::ExtraFieldIsPresent, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z	; NArchive::NGz::CItem::TestFlag
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtraFieldIsPresent@CItem@NGz@NArchive@@QBE_NXZ ENDP	; NArchive::NGz::CItem::ExtraFieldIsPresent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ PROC		; NArchive::NGz::CItem::NameIsPresent, COMDAT
; _this$ = ecx
; Line 164
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z	; NArchive::NGz::CItem::TestFlag
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ ENDP		; NArchive::NGz::CItem::NameIsPresent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ PROC	; NArchive::NGz::CItem::CommentIsPresent, COMDAT
; _this$ = ecx
; Line 165
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TestFlag@CItem@NGz@NArchive@@ABE_NE@Z	; NArchive::NGz::CItem::TestFlag
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CommentIsPresent@CItem@NGz@NArchive@@QBE_NXZ ENDP	; NArchive::NGz::CItem::CommentIsPresent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsSupported@CItem@NGz@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSupported@CItem@NGz@NArchive@@QBE_NXZ PROC		; NArchive::NGz::CItem::IsSupported, COMDAT
; _this$ = ecx
; Line 166
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax]
	and	eax, 224				; 000000e0H
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSupported@CItem@NGz@NArchive@@QBE_NXZ ENDP		; NArchive::NGz::CItem::IsSupported
_TEXT	ENDS
EXTRN	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ:PROC ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$70885 = -4						; size = 4
_stream$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z PROC ; NArchive::NGz::ReadBytes
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 178
	mov	DWORD PTR _i$70885[ebp], 0
	jmp	SHORT $LN3@ReadBytes
$LN2@ReadBytes:
	mov	eax, DWORD PTR _i$70885[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70885[ebp], eax
$LN3@ReadBytes:
	mov	ecx, DWORD PTR _i$70885[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@ReadBytes
; Line 179
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$70885[ebp]
	mov	BYTE PTR [edx], al
	jmp	SHORT $LN2@ReadBytes
$LN1@ReadBytes:
; Line 180
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 181
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z ENDP ; NArchive::NGz::ReadBytes
; Function compile flags: /Odtp /RTCsu
_i$70895 = -4						; size = 4
_stream$ = 8						; size = 4
_size$ = 12						; size = 4
?SkipBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@I@Z PROC ; NArchive::NGz::SkipBytes
; Line 184
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 185
	mov	DWORD PTR _i$70895[ebp], 0
	jmp	SHORT $LN3@SkipBytes
$LN2@SkipBytes:
	mov	eax, DWORD PTR _i$70895[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70895[ebp], eax
$LN3@SkipBytes:
	mov	ecx, DWORD PTR _i$70895[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@SkipBytes
; Line 186
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
	jmp	SHORT $LN2@SkipBytes
$LN1@SkipBytes:
; Line 187
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 188
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SkipBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@I@Z ENDP ; NArchive::NGz::SkipBytes
; Function compile flags: /Odtp /RTCsu
_b$70909 = -5						; size = 1
_i$70905 = -4						; size = 4
_stream$ = 8						; size = 4
_value$ = 12						; size = 4
?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z PROC ; NArchive::NGz::ReadUInt16
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 192
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], 0
; Line 193
	mov	DWORD PTR _i$70905[ebp], 0
	jmp	SHORT $LN4@ReadUInt16
$LN3@ReadUInt16:
	mov	ecx, DWORD PTR _i$70905[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$70905[ebp], ecx
$LN4@ReadUInt16:
	cmp	DWORD PTR _i$70905[ebp], 2
	jge	SHORT $LN2@ReadUInt16
; Line 195
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
	mov	BYTE PTR _b$70909[ebp], al
; Line 196
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@ReadUInt16
; Line 197
	mov	eax, 1
	jmp	SHORT $LN5@ReadUInt16
$LN1@ReadUInt16:
; Line 199
	movzx	eax, BYTE PTR _b$70909[ebp]
	mov	ecx, DWORD PTR _i$70905[ebp]
	shl	ecx, 3
	shl	eax, cl
	mov	ecx, DWORD PTR _value$[ebp]
	or	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [edx], eax
; Line 200
	jmp	SHORT $LN3@ReadUInt16
$LN2@ReadUInt16:
; Line 201
	xor	eax, eax
$LN5@ReadUInt16:
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReadUInt16@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAI@Z ENDP ; NArchive::NGz::ReadUInt16
_TEXT	ENDS
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_b$70923 = -5						; size = 1
_i$70919 = -4						; size = 4
_stream$ = 8						; size = 4
_s$ = 12						; size = 4
_limit$ = 16						; size = 4
?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z PROC ; NArchive::NGz::ReadString
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 206
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 207
	mov	DWORD PTR _i$70919[ebp], 0
	jmp	SHORT $LN5@ReadString
$LN4@ReadString:
	mov	eax, DWORD PTR _i$70919[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70919[ebp], eax
$LN5@ReadString:
	mov	ecx, DWORD PTR _i$70919[ebp]
	cmp	ecx, DWORD PTR _limit$[ebp]
	jae	SHORT $LN3@ReadString
; Line 209
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
	mov	BYTE PTR _b$70923[ebp], al
; Line 210
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ReadString
; Line 211
	mov	eax, 1
	jmp	SHORT $LN6@ReadString
$LN2@ReadString:
; Line 213
	movzx	eax, BYTE PTR _b$70923[ebp]
	test	eax, eax
	jne	SHORT $LN1@ReadString
; Line 214
	xor	eax, eax
	jmp	SHORT $LN6@ReadString
$LN1@ReadString:
; Line 215
	movzx	ecx, BYTE PTR _b$70923[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 216
	jmp	SHORT $LN4@ReadString
$LN3@ReadString:
; Line 217
	mov	eax, 1
$LN6@ReadString:
; Line 218
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ReadString@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@AAVAString@@I@Z ENDP ; NArchive::NGz::ReadString
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReadFooter1@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ; NArchive::NGz::CItem::ReadFooter1
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$71037 = -28					; size = 4
_buf$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_stream$ = 8						; size = 4
?ReadFooter1@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z PROC ; NArchive::NGz::CItem::ReadFooter1
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 403
	push	8
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	?ReadBytes@NGz@NArchive@@YGJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@PAEI@Z ; NArchive::NGz::ReadBytes
	mov	DWORD PTR ___result__$71037[ebp], eax
	cmp	DWORD PTR ___result__$71037[ebp], 0
	je	SHORT $LN1@ReadFooter
	mov	eax, DWORD PTR ___result__$71037[ebp]
	jmp	SHORT $LN2@ReadFooter
$LN1@ReadFooter:
; Line 404
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 405
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _buf$[ebp+4]
	mov	DWORD PTR [ecx+12], edx
; Line 406
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	neg	eax
$LN2@ReadFooter:
; Line 407
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ReadFooter
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@ReadFooter:
	DD	1
	DD	$LN5@ReadFooter
$LN5@ReadFooter:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN4@ReadFooter
$LN4@ReadFooter:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?ReadFooter1@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ENDP ; NArchive::NGz::CItem::ReadFooter1
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ReadFooter2@CItem@NGz@NArchive@@QAEJPAUISequentialInStream@@@Z ; NArchive::NGz::CItem::ReadFooter2
EXTRN	?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z:PROC ; ReadStream_FALSE
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$71050 = -28					; size = 4
_buf$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_stream$ = 8						; size = 4
?ReadFooter2@CItem@NGz@NArchive@@QAEJPAUISequentialInStream@@@Z PROC ; NArchive::NGz::CItem::ReadFooter2
; _this$ = ecx
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 412
	push	8
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	?ReadStream_FALSE@@YGJPAUISequentialInStream@@PAXI@Z ; ReadStream_FALSE
	mov	DWORD PTR ___result__$71050[ebp], eax
	cmp	DWORD PTR ___result__$71050[ebp], 0
	je	SHORT $LN1@ReadFooter@2
	mov	eax, DWORD PTR ___result__$71050[ebp]
	jmp	SHORT $LN2@ReadFooter@2
$LN1@ReadFooter@2:
; Line 413
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 414
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _buf$[ebp+4]
	mov	DWORD PTR [ecx+12], edx
; Line 415
	xor	eax, eax
$LN2@ReadFooter@2:
; Line 416
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ReadFooter@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN6@ReadFooter@2:
	DD	1
	DD	$LN5@ReadFooter@2
$LN5@ReadFooter@2:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN4@ReadFooter@2
$LN4@ReadFooter@2:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?ReadFooter2@CItem@NGz@NArchive@@QAEJPAUISequentialInStream@@@Z ENDP ; NArchive::NGz::CItem::ReadFooter2
_TEXT	ENDS
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	__$ArrayPad$
PUBLIC	?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ; NArchive::NGz::CItem::WriteHeader
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$71067 = -36					; size = 4
___result__$71064 = -32					; size = 4
_buf$ = -24						; size = 10
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_stream$ = 8						; size = 4
?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z PROC ; NArchive::NGz::CItem::WriteHeader
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 421
	mov	BYTE PTR _buf$[ebp], 31			; 0000001fH
; Line 422
	mov	BYTE PTR _buf$[ebp+1], 139		; 0000008bH
; Line 423
	mov	BYTE PTR _buf$[ebp+2], 8
; Line 424
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 8
	mov	BYTE PTR _buf$[ebp+3], cl
; Line 426
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _buf$[ebp+4], eax
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR _buf$[ebp+8], dl
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+2]
	mov	BYTE PTR _buf$[ebp+9], cl
; Line 429
	push	10					; 0000000aH
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$71064[ebp], eax
	cmp	DWORD PTR ___result__$71064[ebp], 0
	je	SHORT $LN3@WriteHeade
	mov	eax, DWORD PTR ___result__$71064[ebp]
	jmp	SHORT $LN4@WriteHeade
$LN3@WriteHeade:
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::NameIsPresent
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@WriteHeade
; Line 434
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Len@AString@@QBEIXZ			; AString::Len
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$71067[ebp], eax
	cmp	DWORD PTR ___result__$71067[ebp], 0
	je	SHORT $LN2@WriteHeade
	mov	eax, DWORD PTR ___result__$71067[ebp]
	jmp	SHORT $LN4@WriteHeade
$LN2@WriteHeade:
; Line 438
	xor	eax, eax
$LN4@WriteHeade:
; Line 439
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@WriteHeade
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN8@WriteHeade:
	DD	1
	DD	$LN7@WriteHeade
$LN7@WriteHeade:
	DD	-24					; ffffffe8H
	DD	10					; 0000000aH
	DD	$LN6@WriteHeade
$LN6@WriteHeade:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ENDP ; NArchive::NGz::CItem::WriteHeader
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?WriteFooter@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ; NArchive::NGz::CItem::WriteFooter
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_buf$ = -20						; size = 8
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_stream$ = 8						; size = 4
?WriteFooter@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z PROC ; NArchive::NGz::CItem::WriteFooter
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 442
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 444
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _buf$[ebp], ecx
; Line 445
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _buf$[ebp+4], eax
; Line 446
	push	8
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@WriteFoote
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN5@WriteFoote:
	DD	1
	DD	$LN4@WriteFoote
$LN4@WriteFoote:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN3@WriteFoote
$LN3@WriteFoote:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?WriteFooter@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ENDP ; NArchive::NGz::CItem::WriteFooter
_TEXT	ENDS
PUBLIC	?GetNumberOfProperties@CHandler@NGz@NArchive@@UAGJPAI@Z ; NArchive::NGz::CHandler::GetNumberOfProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumberOfProperties@CHandler@NGz@NArchive@@UAGJPAI@Z PROC ; NArchive::NGz::CHandler::GetNumberOfProperties
; Line 514
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 6
	xor	eax, eax
	pop	ebp
	ret	8
?GetNumberOfProperties@CHandler@NGz@NArchive@@UAGJPAI@Z ENDP ; NArchive::NGz::CHandler::GetNumberOfProperties
_TEXT	ENDS
PUBLIC	?GetPropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z ; NArchive::NGz::CHandler::GetPropertyInfo
EXTRN	?k7z_PROPID_To_VARTYPE@@3QBEB:BYTE		; k7z_PROPID_To_VARTYPE
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
_varType$ = 24						; size = 4
?GetPropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z PROC ; NArchive::NGz::CHandler::GetPropertyInfo
; Line 514
	push	ebp
	mov	ebp, esp
	cmp	DWORD PTR _index$[ebp], 6
	jb	SHORT $LN1@GetPropert
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@GetPropert
$LN1@GetPropert:
	mov	eax, DWORD PTR _index$[ebp]
	movzx	ecx, BYTE PTR _kProps[eax]
	mov	edx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	dx, BYTE PTR ?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]
	mov	eax, DWORD PTR _varType$[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
$LN2@GetPropert:
	pop	ebp
	ret	20					; 00000014H
?GetPropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z ENDP ; NArchive::NGz::CHandler::GetPropertyInfo
_TEXT	ENDS
PUBLIC	?GetNumberOfArchiveProperties@CHandler@NGz@NArchive@@UAGJPAI@Z ; NArchive::NGz::CHandler::GetNumberOfArchiveProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumberOfArchiveProperties@CHandler@NGz@NArchive@@UAGJPAI@Z PROC ; NArchive::NGz::CHandler::GetNumberOfArchiveProperties
; Line 515
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 2
	xor	eax, eax
	pop	ebp
	ret	8
?GetNumberOfArchiveProperties@CHandler@NGz@NArchive@@UAGJPAI@Z ENDP ; NArchive::NGz::CHandler::GetNumberOfArchiveProperties
_TEXT	ENDS
PUBLIC	?GetArchivePropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z ; NArchive::NGz::CHandler::GetArchivePropertyInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
_varType$ = 24						; size = 4
?GetArchivePropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z PROC ; NArchive::NGz::CHandler::GetArchivePropertyInfo
; Line 515
	push	ebp
	mov	ebp, esp
	cmp	DWORD PTR _index$[ebp], 2
	jb	SHORT $LN1@GetArchive
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@GetArchive
$LN1@GetArchive:
	mov	eax, DWORD PTR _index$[ebp]
	movzx	ecx, BYTE PTR _kArcProps[eax]
	mov	edx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	dx, BYTE PTR ?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]
	mov	eax, DWORD PTR _varType$[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
$LN2@GetArchive:
	pop	ebp
	ret	20					; 00000014H
?GetArchivePropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z ENDP ; NArchive::NGz::CHandler::GetArchivePropertyInfo
_TEXT	ENDS
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
PUBLIC	?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z ; NArchive::NGz::CHandler::GetArchiveProperty
EXTRN	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::CPropVariant::Detach
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	?AddAscii@UString@@QAEXPBD@Z:PROC		; UString::AddAscii
EXTRN	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z:PROC ; MultiByteToUnicodeString
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	___CxxFrameHandler3:PROC
xdata$x	SEGMENT
__catchsym$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4
__unwindtable$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv163 = -92						; size = 4
tv162 = -85						; size = 1
tv192 = -84						; size = 4
tv67 = -80						; size = 4
tv161 = -76						; size = 4
$T72841 = -72						; size = 4
$T72840 = -68						; size = 4
_s$71317 = -60						; size = 12
_v$71311 = -44						; size = 4
_prop$71297 = -36					; size = 16
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_propID$ = 12						; size = 4
_value$ = 16						; size = 4
?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z PROC ; NArchive::NGz::CHandler::GetArchiveProperty
; Line 518
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 519
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 520
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv161[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 521
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 4
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 74			; 0000004aH
	ja	$LN15@GetArchive@2
	mov	edx, DWORD PTR tv67[ebp]
	movzx	eax, BYTE PTR $LN27@GetArchive@2[edx]
	jmp	DWORD PTR $LN33@GetArchive@2[eax*4]
$LN14@GetArchive@2:
; Line 523
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+64]
	test	edx, edx
	je	SHORT $LN13@GetArchive@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR [eax+72]
	push	edx
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN13@GetArchive@2:
	jmp	$LN15@GetArchive@2
$LN12@GetArchive@2:
; Line 524
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+65]
	test	ecx, ecx
	je	SHORT $LN11@GetArchive@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR [edx+80]
	push	ecx
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN11@GetArchive@2:
	jmp	$LN15@GetArchive@2
$LN10@GetArchive@2:
; Line 525
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+66]
	test	eax, eax
	je	SHORT $LN9@GetArchive@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	push	edx
	mov	eax, DWORD PTR [ecx+88]
	push	eax
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN9@GetArchive@2:
	jmp	$LN15@GetArchive@2
$LN8@GetArchive@2:
; Line 526
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv192[ebp], ecx
	mov	edx, DWORD PTR tv192[ebp]
	mov	eax, DWORD PTR tv192[ebp]
	mov	ecx, DWORD PTR [edx+96]
	or	ecx, DWORD PTR [eax+100]
	je	SHORT $LN7@GetArchive@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	mov	ecx, DWORD PTR [edx+96]
	push	ecx
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN7@GetArchive@2:
	jmp	$LN15@GetArchive@2
$LN6@GetArchive@2:
; Line 529
	mov	DWORD PTR _v$71311[ebp], 0
; Line 530
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+60]
	test	eax, eax
	jne	SHORT $LN5@GetArchive@2
	mov	ecx, DWORD PTR _v$71311[ebp]
	or	ecx, 1
	mov	DWORD PTR _v$71311[ebp], ecx
$LN5@GetArchive@2:
; Line 531
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+63]
	test	eax, eax
	je	SHORT $LN4@GetArchive@2
	mov	ecx, DWORD PTR _v$71311[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR _v$71311[ebp], ecx
$LN4@GetArchive@2:
; Line 532
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+62]
	test	eax, eax
	je	SHORT $LN3@GetArchive@2
	mov	ecx, DWORD PTR _v$71311[ebp]
	or	ecx, 64					; 00000040H
	mov	DWORD PTR _v$71311[ebp], ecx
$LN3@GetArchive@2:
; Line 533
	mov	edx, DWORD PTR _v$71311[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 534
	jmp	SHORT $LN15@GetArchive@2
$LN2@GetArchive@2:
; Line 537
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::NameIsPresent
	mov	BYTE PTR tv162[ebp], al
	movzx	eax, BYTE PTR tv162[ebp]
	test	eax, eax
	je	SHORT $LN15@GetArchive@2
; Line 539
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	push	ecx
	lea	edx, DWORD PTR _s$71317[ebp]
	push	edx
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	DWORD PTR tv163[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 540
	push	OFFSET $SG71319
	lea	ecx, DWORD PTR _s$71317[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 541
	lea	eax, DWORD PTR _s$71317[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 542
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _s$71317[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN15@GetArchive@2:
; Line 545
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 546
	mov	DWORD PTR $T72840[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$71297[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T72840[ebp]
	jmp	SHORT $LN18@GetArchive@2
__catch$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0:
; Line 547
	mov	DWORD PTR $T72841[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN25@GetArchive@2
	ret	0
	mov	eax, __tryend$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@GetArchive@2
$LN25@GetArchive@2:
	mov	eax, DWORD PTR $T72841[ebp]
$LN18@GetArchive@2:
; Line 548
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@GetArchive@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN32@GetArchive@2:
	DD	2
	DD	$LN31@GetArchive@2
$LN31@GetArchive@2:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN28@GetArchive@2
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN29@GetArchive@2
$LN29@GetArchive@2:
	DB	115					; 00000073H
	DB	0
$LN28@GetArchive@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	1
$LN33@GetArchive@2:
	DD	$LN2@GetArchive@2
	DD	$LN14@GetArchive@2
	DD	$LN8@GetArchive@2
	DD	$LN6@GetArchive@2
	DD	$LN10@GetArchive@2
	DD	$LN12@GetArchive@2
	DD	$LN15@GetArchive@2
$LN27@GetArchive@2:
	DB	0
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	1
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	5
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$71297[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3:
	lea	ecx, DWORD PTR _s$71317[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-96]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z ENDP ; NArchive::NGz::CHandler::GetArchiveProperty
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T72865 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72865[ebp], ecx
	mov	edx, DWORD PTR $T72865[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
_TEXT	ENDS
PUBLIC	?GetNumberOfItems@CHandler@NGz@NArchive@@UAGJPAI@Z ; NArchive::NGz::CHandler::GetNumberOfItems
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numItems$ = 12						; size = 4
?GetNumberOfItems@CHandler@NGz@NArchive@@UAGJPAI@Z PROC	; NArchive::NGz::CHandler::GetNumberOfItems
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 552
	push	ebp
	mov	ebp, esp
; Line 553
	mov	eax, DWORD PTR _numItems$[ebp]
	mov	DWORD PTR [eax], 1
; Line 554
	xor	eax, eax
; Line 555
	pop	ebp
	ret	8
?GetNumberOfItems@CHandler@NGz@NArchive@@UAGJPAI@Z ENDP	; NArchive::NGz::CHandler::GetNumberOfItems
_TEXT	ENDS
PUBLIC	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
PUBLIC	?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z ; NArchive::NGz::CHandler::GetProperty
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	?UnixTimeToFileTime@NTime@NWindows@@YGXIAAU_FILETIME@@@Z:PROC ; NWindows::NTime::UnixTimeToFileTime
xdata$x	SEGMENT
__catchsym$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$4
__unwindtable$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$3
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv183 = -112						; size = 4
tv160 = -108						; size = 4
tv182 = -104						; size = 4
tv181 = -100						; size = 4
tv175 = -96						; size = 4
tv180 = -92						; size = 4
tv179 = -85						; size = 1
tv67 = -84						; size = 4
tv178 = -80						; size = 4
$T72877 = -76						; size = 4
$T72876 = -72						; size = 4
$T72873 = -68						; size = 12
_utc$71346 = -52					; size = 8
_prop$71336 = -36					; size = 16
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_propID$ = 16						; size = 4
_value$ = 20						; size = 4
?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z PROC ; NArchive::NGz::CHandler::GetProperty
; Line 558
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-112]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 559
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 560
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv178[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 561
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 20			; 00000014H
	ja	$LN15@GetPropert@2
	mov	edx, DWORD PTR tv67[ebp]
	movzx	eax, BYTE PTR $LN29@GetPropert@2[edx]
	jmp	DWORD PTR $LN35@GetPropert@2[eax*4]
$LN14@GetPropert@2:
; Line 564
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?NameIsPresent@CItem@NGz@NArchive@@QBE_NXZ ; NArchive::NGz::CItem::NameIsPresent
	mov	BYTE PTR tv179[ebp], al
	movzx	ecx, BYTE PTR tv179[ebp]
	test	ecx, ecx
	je	SHORT $LN13@GetPropert@2
; Line 565
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	push	edx
	lea	eax, DWORD PTR $T72873[ebp]
	push	eax
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	DWORD PTR tv180[ebp], eax
	mov	ecx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv175[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR tv175[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T72873[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN13@GetPropert@2:
; Line 566
	jmp	$LN15@GetPropert@2
$LN12@GetPropert@2:
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN11@GetPropert@2
; Line 572
	lea	ecx, DWORD PTR _utc$71346[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	?UnixTimeToFileTime@NTime@NWindows@@YGXIAAU_FILETIME@@@Z ; NWindows::NTime::UnixTimeToFileTime
; Line 573
	lea	ecx, DWORD PTR _utc$71346[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN11@GetPropert@2:
; Line 575
	jmp	$LN15@GetPropert@2
$LN10@GetPropert@2:
; Line 578
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+65]
	test	eax, eax
	je	SHORT $LN9@GetPropert@2
; Line 579
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR [ecx+80]
	push	eax
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN8@GetPropert@2
$LN9@GetPropert@2:
; Line 580
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv181[ebp], eax
	cmp	DWORD PTR tv181[ebp], 0
	je	SHORT $LN8@GetPropert@2
; Line 581
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	xor	eax, eax
	push	eax
	push	edx
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN8@GetPropert@2:
; Line 582
	jmp	$LN15@GetPropert@2
$LN6@GetPropert@2:
; Line 586
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+64]
	test	edx, edx
	jne	SHORT $LN4@GetPropert@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv182[ebp], eax
	cmp	DWORD PTR tv182[ebp], 0
	je	SHORT $LN5@GetPropert@2
$LN4@GetPropert@2:
; Line 587
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR [eax+72]
	push	edx
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN5@GetPropert@2:
; Line 588
	jmp	SHORT $LN15@GetPropert@2
$LN3@GetPropert@2:
; Line 591
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+22]
	cmp	ecx, 20					; 00000014H
	jae	SHORT $LN20@GetPropert@2
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+22]
	mov	ecx, DWORD PTR _kHostOSes[eax*4]
	mov	DWORD PTR tv160[ebp], ecx
	jmp	SHORT $LN21@GetPropert@2
$LN20@GetPropert@2:
	mov	edx, DWORD PTR _kUnknownOS
	mov	DWORD PTR tv160[ebp], edx
$LN21@GetPropert@2:
	mov	eax, DWORD PTR tv160[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN15@GetPropert@2
$LN2@GetPropert@2:
; Line 592
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv183[ebp], eax
	cmp	DWORD PTR tv183[ebp], 0
	je	SHORT $LN15@GetPropert@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
$LN15@GetPropert@2:
; Line 594
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 595
	mov	DWORD PTR $T72876[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$71336[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T72876[ebp]
	jmp	SHORT $LN18@GetPropert@2
__catch$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$0:
; Line 596
	mov	DWORD PTR $T72877[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN27@GetPropert@2
	ret	0
	mov	eax, __tryend$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@GetPropert@2
$LN27@GetPropert@2:
	mov	eax, DWORD PTR $T72877[ebp]
$LN18@GetPropert@2:
; Line 597
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@GetPropert@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 112				; 00000070H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN34@GetPropert@2:
	DD	2
	DD	$LN33@GetPropert@2
$LN33@GetPropert@2:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN30@GetPropert@2
	DD	-52					; ffffffccH
	DD	8
	DD	$LN31@GetPropert@2
$LN31@GetPropert@2:
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	0
$LN30@GetPropert@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	3
$LN35@GetPropert@2:
	DD	$LN14@GetPropert@2
	DD	$LN10@GetPropert@2
	DD	$LN6@GetPropert@2
	DD	$LN12@GetPropert@2
	DD	$LN2@GetPropert@2
	DD	$LN3@GetPropert@2
	DD	$LN15@GetPropert@2
$LN29@GetPropert@2:
	DB	0
	DB	6
	DB	6
	DB	6
	DB	1
	DB	2
	DB	6
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	5
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$71336[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z$3:
	lea	ecx, DWORD PTR $T72873[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z ENDP ; NArchive::NGz::CHandler::GetProperty
PUBLIC	??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator->
PUBLIC	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
PUBLIC	?SetRatioInfo@CCompressProgressInfoImp@NGz@NArchive@@UAGJPB_K0@Z ; NArchive::NGz::CCompressProgressInfoImp::SetRatioInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
_value$71475 = -28					; size = 8
_files$71474 = -12					; size = 8
_this$ = 8						; size = 4
_inSize$ = 12						; size = 4
___formal$ = 16						; size = 4
?SetRatioInfo@CCompressProgressInfoImp@NGz@NArchive@@UAGJPB_K0@Z PROC ; NArchive::NGz::CCompressProgressInfoImp::SetRatioInfo
; Line 612
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 613
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
	test	eax, eax
	je	SHORT $LN1@SetRatioIn
; Line 615
	mov	DWORD PTR _files$71474[ebp], 0
	mov	DWORD PTR _files$71474[ebp+4], 0
; Line 616
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _inSize$[ebp]
	mov	edx, DWORD PTR [eax+16]
	add	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+20]
	adc	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _value$71475[ebp], edx
	mov	DWORD PTR _value$71475[ebp+4], eax
; Line 617
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ; CMyComPtr<IArchiveOpenCallback>::operator->
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _value$71475[ebp]
	push	ecx
	lea	edx, DWORD PTR _files$71474[ebp]
	push	edx
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@SetRatioIn
$LN1@SetRatioIn:
; Line 619
	xor	eax, eax
$LN2@SetRatioIn:
; Line 620
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SetRatioIn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN7@SetRatioIn:
	DD	2
	DD	$LN6@SetRatioIn
$LN6@SetRatioIn:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN4@SetRatioIn
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN5@SetRatioIn
$LN5@SetRatioIn:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN4@SetRatioIn:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
?SetRatioInfo@CCompressProgressInfoImp@NGz@NArchive@@UAGJPB_K0@Z ENDP ; NArchive::NGz::CCompressProgressInfoImp::SetRatioInfo
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
PUBLIC	?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z ; NArchive::NGz::CHandler::Open
xdata$x	SEGMENT
__catchsym$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0
__unwindtable$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2
__ehfuncinfo$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv139 = -60						; size = 4
tv138 = -56						; size = 4
tv137 = -52						; size = 4
$T72903 = -48						; size = 4
___result__$71489 = -44					; size = 4
___result__$71487 = -40					; size = 4
_endPos$71486 = -32					; size = 8
___result__$71484 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_stream$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z PROC ; NArchive::NGz::CHandler::Open
; Line 626
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 627
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 628
	mov	esi, esp
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR ___result__$71484[ebp], edx
	cmp	DWORD PTR ___result__$71484[ebp], 0
	je	SHORT $LN3@Open
	mov	eax, DWORD PTR ___result__$71484[ebp]
	jmp	$LN5@Open
$LN3@Open:
; Line 629
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+60], 0
; Line 631
	mov	esi, esp
	lea	ecx, DWORD PTR _endPos$71486[ebp]
	push	ecx
	push	2
	push	-1
	push	-8					; fffffff8H
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	mov	eax, DWORD PTR tv138[ebp]
	mov	DWORD PTR ___result__$71487[ebp], eax
	cmp	DWORD PTR ___result__$71487[ebp], 0
	je	SHORT $LN2@Open
	mov	eax, DWORD PTR ___result__$71487[ebp]
	jmp	SHORT $LN5@Open
$LN2@Open:
; Line 632
	mov	ecx, DWORD PTR _endPos$71486[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _endPos$71486[ebp+4]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	DWORD PTR [eax+76], edx
; Line 633
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?ReadFooter2@CItem@NGz@NArchive@@QAEJPAUISequentialInStream@@@Z ; NArchive::NGz::CItem::ReadFooter2
	mov	DWORD PTR tv139[ebp], eax
	mov	edx, DWORD PTR tv139[ebp]
	mov	DWORD PTR ___result__$71489[ebp], edx
	cmp	DWORD PTR ___result__$71489[ebp], 0
	je	SHORT $LN1@Open
	mov	eax, DWORD PTR ___result__$71489[ebp]
	jmp	SHORT $LN5@Open
$LN1@Open:
; Line 634
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
; Line 635
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+60], 1
; Line 636
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+61], 1
; Line 637
	xor	eax, eax
	jmp	SHORT $LN5@Open
__catch$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0:
; Line 638
	mov	DWORD PTR $T72903[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@Open
	ret	0
	mov	eax, __tryend$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$1
	ret	0
__tryend$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN5@Open
$LN10@Open:
	mov	eax, DWORD PTR $T72903[ebp]
$LN5@Open:
; Line 639
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN15@Open:
	DD	1
	DD	$LN14@Open
$LN14@Open:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN12@Open
$LN12@Open:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z ENDP ; NArchive::NGz::CHandler::Open
PUBLIC	?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize
PUBLIC	?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
PUBLIC	?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z ; NArchive::NGz::CHandler::OpenSeq
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCInBufferException@@@8
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__catchsym$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$2
__catchsym$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$4 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$0
__unwindtable$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$4
	DD	00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv165 = -56						; size = 8
tv164 = -45						; size = 1
tv163 = -44						; size = 4
$T72920 = -40						; size = 4
$T72919 = -36						; size = 4
_e$71505 = -28						; size = 4
___result__$71500 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_stream$ = 12						; size = 4
?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z PROC ; NArchive::NGz::CHandler::OpenSeq
; Line 642
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 643
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 645
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 646
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 647
	mov	esi, esp
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 648
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	call	?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
; Line 649
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ; NArchive::NGz::CItem::ReadHeader
	mov	DWORD PTR tv163[ebp], eax
	mov	edx, DWORD PTR tv163[ebp]
	mov	DWORD PTR ___result__$71500[ebp], edx
	cmp	DWORD PTR ___result__$71500[ebp], 0
	je	SHORT $LN2@OpenSeq
	mov	eax, DWORD PTR ___result__$71500[ebp]
	jmp	$LN5@OpenSeq
$LN2@OpenSeq:
; Line 650
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	mov	BYTE PTR tv164[ebp], al
	movzx	ecx, BYTE PTR tv164[ebp]
	test	ecx, ecx
	je	SHORT $LN1@OpenSeq
; Line 651
	mov	eax, 1
	jmp	SHORT $LN5@OpenSeq
$LN1@OpenSeq:
; Line 652
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+108]
	call	?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize
	mov	DWORD PTR tv165[ebp], eax
	mov	DWORD PTR tv165[ebp+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv165[ebp]
	mov	DWORD PTR [eax+92], ecx
	mov	edx, DWORD PTR tv165[ebp+4]
	mov	DWORD PTR [eax+96], edx
; Line 653
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], 1
; Line 654
	xor	eax, eax
	jmp	SHORT $LN5@OpenSeq
__catch$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$0:
; Line 656
	mov	ecx, DWORD PTR _e$71505[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T72919[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN12@OpenSeq
	ret	0
	mov	eax, __tryend$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$1
	ret	0
__tryend$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN11@OpenSeq
$LN12@OpenSeq:
	mov	eax, DWORD PTR $T72919[ebp]
	jmp	SHORT $LN5@OpenSeq
$LN11@OpenSeq:
	jmp	SHORT $LN7@OpenSeq
__catch$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z$2:
; Line 657
	mov	DWORD PTR $T72920[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN14@OpenSeq
	ret	0
	mov	eax, $LN7@OpenSeq
	ret	0
$LN7@OpenSeq:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN5@OpenSeq
$LN14@OpenSeq:
	mov	eax, DWORD PTR $T72920[ebp]
$LN5@OpenSeq:
; Line 658
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@OpenSeq
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN20@OpenSeq:
	DD	1
	DD	$LN19@OpenSeq
$LN19@OpenSeq:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN17@OpenSeq
$LN17@OpenSeq:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z ENDP ; NArchive::NGz::CHandler::OpenSeq
PUBLIC	?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ	; NBitl::CDecoder<CInBuffer>::Init
PUBLIC	?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ; NBitl::CBaseDecoder<CInBuffer>::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_needInit$ = 8						; size = 1
?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::InitInStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 120
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ; NBitl::CBaseDecoder<CInBuffer>::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@InitInStre
; Line 122
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN3@InitInStre
$LN2@InitInStre:
; Line 123
	movzx	ecx, BYTE PTR _needInit$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@InitInStre
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Init
; Line 126
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3418], 0
$LN1@InitInStre:
; Line 128
	xor	eax, eax
$LN3@InitInStre:
; Line 129
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
_TEXT	ENDS
PUBLIC	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ	; CMyComPtr<IInStream>::Release
PUBLIC	?Close@CHandler@NGz@NArchive@@UAGJXZ		; NArchive::NGz::CHandler::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Close@CHandler@NGz@NArchive@@UAGJXZ PROC		; NArchive::NGz::CHandler::Close
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 661
	push	ebp
	mov	ebp, esp
	push	esi
; Line 662
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+60], 0
; Line 663
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+61], 0
; Line 664
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+62], 0
; Line 665
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+63], 0
; Line 667
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+64], 0
; Line 668
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+65], 0
; Line 669
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+66], 0
; Line 671
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0
	mov	DWORD PTR [ecx+76], 0
; Line 672
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 0
	mov	DWORD PTR [edx+100], 0
; Line 674
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ ; CMyComPtr<IInStream>::Release
; Line 675
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	add	eax, 8
	mov	ecx, DWORD PTR [ecx+8]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	xor	eax, eax
; Line 677
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?Close@CHandler@NGz@NArchive@@UAGJXZ ENDP		; NArchive::NGz::CHandler::Close
_TEXT	ENDS
PUBLIC	?GetCRC@COutStreamWithCRC@@QBEIXZ		; COutStreamWithCRC::GetCRC
PUBLIC	?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NDecoder::CCoder::AlignToByte
PUBLIC	??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ ; CMyComPtr<ICompressProgressInfo>::operator ICompressProgressInfo *
PUBLIC	?InitCRC@COutStreamWithCRC@@QAEXXZ		; COutStreamWithCRC::InitCRC
PUBLIC	?GetSize@COutStreamWithCRC@@QBE_KXZ		; COutStreamWithCRC::GetSize
PUBLIC	?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetStreamSize
PUBLIC	??1CItem@NGz@NArchive@@QAE@XZ			; NArchive::NGz::CItem::~CItem
PUBLIC	??0CItem@NGz@NArchive@@QAE@XZ			; NArchive::NGz::CItem::CItem
PUBLIC	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
PUBLIC	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ	; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
PUBLIC	??7?$CMyComPtr@UIInStream@@@@QBE_NXZ		; CMyComPtr<IInStream>::operator!
PUBLIC	??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
PUBLIC	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
PUBLIC	?Init@COutStreamWithCRC@@QAEX_N@Z		; COutStreamWithCRC::Init
PUBLIC	?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z ; COutStreamWithCRC::SetStream
PUBLIC	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	??0COutStreamWithCRC@@QAE@XZ			; COutStreamWithCRC::COutStreamWithCRC
PUBLIC	??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ	; CMyComPtr<ISequentialOutStream>::operator!
PUBLIC	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
PUBLIC	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z ; NArchive::NGz::CHandler::Extract
EXTRN	?SetCur@CLocalProgress@@QAEJXZ:PROC		; CLocalProgress::SetCur
EXTRN	?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z:PROC ; CLocalProgress::Init
EXTRN	??0CLocalProgress@@QAE@XZ:PROC			; CLocalProgress::CLocalProgress
EXTRN	??2@YAPAXI@Z:PROC				; operator new
xdata$x	SEGMENT
__catchsym$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$11 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2
__catchsym$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$10 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffff4cH
	DD	FLAT:__catch$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0
__ehfuncinfo$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z DD 06H
	DD	07H
	DD	08H
	DD	01H
	DD	FLAT:__catchsym$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$10
	DD	00H
	DD	08H
	DD	09H
	DD	01H
	DD	FLAT:__catchsym$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$11
__unwindtable$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8
	DD	05H
	DD	00H
	DD	06H
	DD	FLAT:__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv485 = -416						; size = 4
tv484 = -412						; size = 4
tv483 = -405						; size = 1
tv482 = -404						; size = 8
tv481 = -396						; size = 4
tv480 = -392						; size = 8
tv479 = -381						; size = 1
tv478 = -380						; size = 8
tv477 = -372						; size = 8
tv476 = -364						; size = 4
tv475 = -360						; size = 4
tv474 = -356						; size = 4
tv473 = -352						; size = 8
tv472 = -344						; size = 8
tv471 = -333						; size = 1
tv470 = -332						; size = 4
tv469 = -328						; size = 4
tv468 = -324						; size = 4
tv467 = -320						; size = 8
tv466 = -312						; size = 4
tv193 = -308						; size = 4
tv465 = -304						; size = 4
tv166 = -297						; size = 1
tv165 = -296						; size = 4
tv464 = -292						; size = 4
tv462 = -288						; size = 4
tv144 = -284						; size = 4
tv143 = -280						; size = 4
tv461 = -276						; size = 4
tv459 = -272						; size = 4
tv458 = -265						; size = 1
tv457 = -264						; size = 4
tv456 = -260						; size = 4
tv455 = -256						; size = 4
$T72966 = -252						; size = 4
$T72965 = -248						; size = 4
$T72964 = -244						; size = 4
$T72963 = -240						; size = 4
$T72962 = -236						; size = 4
$T72961 = -232						; size = 4
$T72960 = -228						; size = 4
$T72959 = -224						; size = 4
$T72958 = -220						; size = 4
$T72957 = -216						; size = 4
$T72954 = -212						; size = 4
$T72953 = -208						; size = 4
$T72950 = -204						; size = 4
$T72949 = -200						; size = 4
$T72948 = -196						; size = 4
$T72947 = -192						; size = 4
_retResult$71616 = -188					; size = 4
_e$71613 = -180						; size = 4
_startOffset$71592 = -172				; size = 8
_item$71577 = -160					; size = 40
___result__$71574 = -116				; size = 4
_result$71568 = -112					; size = 4
_crcError$71567 = -105					; size = 1
_numStreams$71566 = -104				; size = 8
_unpackedSize$71565 = -96				; size = 8
_packSize$71564 = -88					; size = 8
_firstItem$71563 = -77					; size = 1
___result__$71559 = -76					; size = 4
_needReadFirstItem$71554 = -69				; size = 1
_progress$71553 = -64					; size = 4
_lps$71547 = -56					; size = 4
_outStream$71546 = -48					; size = 4
_outStreamSpec$71540 = -40				; size = 4
___result__$71534 = -36					; size = 4
_askMode$71533 = -32					; size = 4
_realOutStream$71532 = -24				; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_indices$ = 12						; size = 4
_numItems$ = 16						; size = 4
_testMode$ = 20						; size = 4
_extractCallback$ = 24					; size = 4
?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z PROC ; NArchive::NGz::CHandler::Extract
; Line 681
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 400				; 00000190H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 100				; 00000064H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 682
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 683
	cmp	DWORD PTR _numItems$[ebp], 0
	jne	SHORT $LN42@Extract
; Line 684
	xor	eax, eax
	jmp	$LN44@Extract
$LN42@Extract:
; Line 685
	cmp	DWORD PTR _numItems$[ebp], -1
	je	SHORT $LN41@Extract
	cmp	DWORD PTR _numItems$[ebp], 1
	jne	SHORT $LN40@Extract
	mov	eax, DWORD PTR _indices$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN41@Extract
$LN40@Extract:
; Line 686
	mov	eax, -2147024809			; 80070057H
	jmp	$LN44@Extract
$LN41@Extract:
; Line 688
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+64]
	test	edx, edx
	je	SHORT $LN39@Extract
; Line 689
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR [eax+72]
	push	edx
	mov	eax, DWORD PTR _extractCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@Extract:
; Line 692
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR tv455[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 695
	xor	ecx, ecx
	cmp	DWORD PTR _testMode$[ebp], 0
	setne	cl
	mov	DWORD PTR _askMode$71533[ebp], ecx
; Line 696
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator&
	mov	DWORD PTR tv456[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _askMode$71533[ebp]
	push	edx
	mov	eax, DWORD PTR tv456[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv457[ebp], eax
	mov	edx, DWORD PTR tv457[ebp]
	mov	DWORD PTR ___result__$71534[ebp], edx
	cmp	DWORD PTR ___result__$71534[ebp], 0
	je	SHORT $LN38@Extract
	mov	eax, DWORD PTR ___result__$71534[ebp]
	mov	DWORD PTR $T72947[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72947[ebp]
	jmp	$LN44@Extract
$LN38@Extract:
; Line 697
	cmp	DWORD PTR _testMode$[ebp], 0
	jne	SHORT $LN37@Extract
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ ; CMyComPtr<ISequentialOutStream>::operator!
	mov	BYTE PTR tv458[ebp], al
	movzx	ecx, BYTE PTR tv458[ebp]
	test	ecx, ecx
	je	SHORT $LN37@Extract
; Line 698
	mov	DWORD PTR $T72948[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72948[ebp]
	jmp	$LN44@Extract
$LN37@Extract:
; Line 700
	mov	esi, esp
	mov	edx, DWORD PTR _askMode$71533[ebp]
	push	edx
	mov	eax, DWORD PTR _extractCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 702
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv459[ebp], eax
	mov	ecx, DWORD PTR tv459[ebp]
	mov	DWORD PTR $T72950[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	cmp	DWORD PTR $T72950[ebp], 0
	je	SHORT $LN46@Extract
	mov	ecx, DWORD PTR $T72950[ebp]
	call	??0COutStreamWithCRC@@QAE@XZ
	mov	DWORD PTR tv461[ebp], eax
	mov	edx, DWORD PTR tv461[ebp]
	mov	DWORD PTR tv143[ebp], edx
	jmp	SHORT $LN47@Extract
$LN46@Extract:
	mov	DWORD PTR tv143[ebp], 0
$LN47@Extract:
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T72949[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR $T72949[ebp]
	mov	DWORD PTR _outStreamSpec$71540[ebp], ecx
; Line 703
	mov	edx, DWORD PTR _outStreamSpec$71540[ebp]
	push	edx
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 704
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	mov	ecx, DWORD PTR _outStreamSpec$71540[ebp]
	call	?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z ; COutStreamWithCRC::SetStream
; Line 705
	push	1
	mov	ecx, DWORD PTR _outStreamSpec$71540[ebp]
	call	?Init@COutStreamWithCRC@@QAEX_N@Z	; COutStreamWithCRC::Init
; Line 706
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 708
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv462[ebp], eax
	mov	ecx, DWORD PTR tv462[ebp]
	mov	DWORD PTR $T72954[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	cmp	DWORD PTR $T72954[ebp], 0
	je	SHORT $LN48@Extract
	mov	ecx, DWORD PTR $T72954[ebp]
	call	??0CLocalProgress@@QAE@XZ		; CLocalProgress::CLocalProgress
	mov	DWORD PTR tv464[ebp], eax
	mov	edx, DWORD PTR tv464[ebp]
	mov	DWORD PTR tv165[ebp], edx
	jmp	SHORT $LN49@Extract
$LN48@Extract:
	mov	DWORD PTR tv165[ebp], 0
$LN49@Extract:
	mov	eax, DWORD PTR tv165[ebp]
	mov	DWORD PTR $T72953[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	ecx, DWORD PTR $T72953[ebp]
	mov	DWORD PTR _lps$71547[ebp], ecx
; Line 709
	mov	edx, DWORD PTR _lps$71547[ebp]
	push	edx
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 710
	push	1
	mov	eax, DWORD PTR _extractCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lps$71547[ebp]
	call	?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z ; CLocalProgress::Init
; Line 712
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+61]
	mov	BYTE PTR _needReadFirstItem$71554[ebp], dl
; Line 714
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+61]
	test	ecx, ecx
	je	$LN36@Extract
; Line 716
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??7?$CMyComPtr@UIInStream@@@@QBE_NXZ	; CMyComPtr<IInStream>::operator!
	mov	BYTE PTR tv166[ebp], al
	movzx	edx, BYTE PTR tv166[ebp]
	test	edx, edx
	je	SHORT $LN35@Extract
; Line 717
	mov	DWORD PTR $T72957[ebp], -2147467259	; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72957[ebp]
	jmp	$LN44@Extract
$LN35@Extract:
; Line 718
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv465[ebp], eax
	mov	eax, DWORD PTR tv465[ebp]
	mov	DWORD PTR tv193[ebp], eax
	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR tv193[ebp]
	push	ecx
	mov	edx, DWORD PTR tv193[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv466[ebp], eax
	mov	edx, DWORD PTR tv466[ebp]
	mov	DWORD PTR ___result__$71559[ebp], edx
	cmp	DWORD PTR ___result__$71559[ebp], 0
	je	SHORT $LN34@Extract
	mov	eax, DWORD PTR ___result__$71559[ebp]
	mov	DWORD PTR $T72958[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72958[ebp]
	jmp	$LN44@Extract
$LN34@Extract:
; Line 719
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+112]
	call	?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
; Line 722
	jmp	SHORT $LN33@Extract
$LN36@Extract:
; Line 723
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+61], 1
$LN33@Extract:
; Line 725
	mov	BYTE PTR _firstItem$71563[ebp], 1
; Line 727
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	call	?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize
	mov	DWORD PTR tv467[ebp], eax
	mov	DWORD PTR tv467[ebp+4], edx
	mov	ecx, DWORD PTR tv467[ebp]
	mov	DWORD PTR _packSize$71564[ebp], ecx
	mov	edx, DWORD PTR tv467[ebp+4]
	mov	DWORD PTR _packSize$71564[ebp+4], edx
; Line 730
	mov	DWORD PTR _unpackedSize$71565[ebp], 0
	mov	DWORD PTR _unpackedSize$71565[ebp+4], 0
; Line 731
	mov	DWORD PTR _numStreams$71566[ebp], 0
	mov	DWORD PTR _numStreams$71566[ebp+4], 0
; Line 733
	mov	BYTE PTR _crcError$71567[ebp], 0
; Line 735
	mov	DWORD PTR _result$71568[ebp], 0
; Line 737
	mov	BYTE PTR __$EHRec$[ebp+12], 6
$LN31@Extract:
; Line 741
	mov	eax, DWORD PTR _lps$71547[ebp]
	mov	ecx, DWORD PTR _packSize$71564[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	edx, DWORD PTR _packSize$71564[ebp+4]
	mov	DWORD PTR [eax+36], edx
; Line 742
	mov	eax, DWORD PTR _lps$71547[ebp]
	mov	ecx, DWORD PTR _unpackedSize$71565[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	edx, DWORD PTR _unpackedSize$71565[ebp+4]
	mov	DWORD PTR [eax+44], edx
; Line 744
	mov	ecx, DWORD PTR _lps$71547[ebp]
	call	?SetCur@CLocalProgress@@QAEJXZ		; CLocalProgress::SetCur
	mov	DWORD PTR tv468[ebp], eax
	mov	eax, DWORD PTR tv468[ebp]
	mov	DWORD PTR ___result__$71574[ebp], eax
	cmp	DWORD PTR ___result__$71574[ebp], 0
	je	SHORT $LN29@Extract
	mov	ecx, DWORD PTR ___result__$71574[ebp]
	mov	DWORD PTR $T72959[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72959[ebp]
	jmp	$LN44@Extract
$LN29@Extract:
; Line 746
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??0CItem@NGz@NArchive@@QAE@XZ		; NArchive::NGz::CItem::CItem
	mov	DWORD PTR tv469[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
; Line 748
	movzx	edx, BYTE PTR _firstItem$71563[ebp]
	test	edx, edx
	je	SHORT $LN27@Extract
	movzx	eax, BYTE PTR _needReadFirstItem$71554[ebp]
	test	eax, eax
	je	$LN28@Extract
$LN27@Extract:
; Line 750
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	?ReadHeader@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ; NArchive::NGz::CItem::ReadHeader
	mov	DWORD PTR tv470[ebp], eax
	mov	eax, DWORD PTR tv470[ebp]
	mov	DWORD PTR _result$71568[ebp], eax
; Line 752
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN26@Extract
	cmp	DWORD PTR _result$71568[ebp], 1
	je	SHORT $LN26@Extract
; Line 753
	mov	ecx, DWORD PTR _result$71568[ebp]
	mov	DWORD PTR $T72960[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72960[ebp]
	jmp	$LN44@Extract
$LN26@Extract:
; Line 755
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	mov	BYTE PTR tv471[ebp], al
	movzx	eax, BYTE PTR tv471[ebp]
	test	eax, eax
	je	SHORT $LN25@Extract
; Line 756
	mov	DWORD PTR _result$71568[ebp], 1
$LN25@Extract:
; Line 758
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN24@Extract
	movzx	ecx, BYTE PTR _firstItem$71563[ebp]
	test	ecx, ecx
	je	SHORT $LN24@Extract
; Line 760
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+60], 0
; Line 761
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	$LN30@Extract
$LN24@Extract:
; Line 764
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	call	?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetStreamSize
	mov	DWORD PTR tv472[ebp], eax
	mov	DWORD PTR tv472[ebp+4], edx
	mov	ecx, DWORD PTR _packSize$71564[ebp]
	cmp	ecx, DWORD PTR tv472[ebp]
	jne	SHORT $LN23@Extract
	mov	edx, DWORD PTR _packSize$71564[ebp+4]
	cmp	edx, DWORD PTR tv472[ebp+4]
	jne	SHORT $LN23@Extract
; Line 766
	mov	DWORD PTR _result$71568[ebp], 0
; Line 767
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	$LN30@Extract
$LN23@Extract:
; Line 770
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN28@Extract
; Line 772
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+62], 1
; Line 773
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	$LN30@Extract
$LN28@Extract:
; Line 777
	mov	ecx, DWORD PTR _numStreams$71566[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _numStreams$71566[ebp+4]
	adc	edx, 0
	mov	DWORD PTR _numStreams$71566[ebp], ecx
	mov	DWORD PTR _numStreams$71566[ebp+4], edx
; Line 778
	mov	BYTE PTR _firstItem$71563[ebp], 0
; Line 780
	mov	ecx, DWORD PTR _outStreamSpec$71540[ebp]
	call	?GetSize@COutStreamWithCRC@@QBE_KXZ	; COutStreamWithCRC::GetSize
	mov	DWORD PTR tv473[ebp], eax
	mov	DWORD PTR tv473[ebp+4], edx
	mov	eax, DWORD PTR tv473[ebp]
	mov	DWORD PTR _startOffset$71592[ebp], eax
	mov	ecx, DWORD PTR tv473[ebp+4]
	mov	DWORD PTR _startOffset$71592[ebp+4], ecx
; Line 781
	mov	ecx, DWORD PTR _outStreamSpec$71540[ebp]
	call	?InitCRC@COutStreamWithCRC@@QAEXXZ	; COutStreamWithCRC::InitCRC
; Line 783
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ ; CMyComPtr<ICompressProgressInfo>::operator ICompressProgressInfo *
	mov	DWORD PTR tv474[ebp], eax
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	mov	DWORD PTR tv475[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv474[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv475[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv476[ebp], eax
	mov	ecx, DWORD PTR tv476[ebp]
	mov	DWORD PTR _result$71568[ebp], ecx
; Line 785
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	call	?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize
	mov	DWORD PTR tv477[ebp], eax
	mov	DWORD PTR tv477[ebp+4], edx
	mov	eax, DWORD PTR tv477[ebp]
	mov	DWORD PTR _packSize$71564[ebp], eax
	mov	ecx, DWORD PTR tv477[ebp+4]
	mov	DWORD PTR _packSize$71564[ebp+4], ecx
; Line 786
	mov	ecx, DWORD PTR _outStreamSpec$71540[ebp]
	call	?GetSize@COutStreamWithCRC@@QBE_KXZ	; COutStreamWithCRC::GetSize
	mov	DWORD PTR tv478[ebp], eax
	mov	DWORD PTR tv478[ebp+4], edx
	mov	edx, DWORD PTR tv478[ebp]
	mov	DWORD PTR _unpackedSize$71565[ebp], edx
	mov	eax, DWORD PTR tv478[ebp+4]
	mov	DWORD PTR _unpackedSize$71565[ebp+4], eax
; Line 788
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN21@Extract
	cmp	DWORD PTR _result$71568[ebp], 1
	je	SHORT $LN21@Extract
; Line 789
	mov	ecx, DWORD PTR _result$71568[ebp]
	mov	DWORD PTR $T72961[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72961[ebp]
	jmp	$LN44@Extract
$LN21@Extract:
; Line 791
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	mov	BYTE PTR tv479[ebp], al
	movzx	eax, BYTE PTR tv479[ebp]
	test	eax, eax
	je	SHORT $LN20@Extract
; Line 793
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+112]
	call	?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetStreamSize
	mov	DWORD PTR tv480[ebp], eax
	mov	DWORD PTR tv480[ebp+4], edx
	mov	edx, DWORD PTR tv480[ebp]
	mov	DWORD PTR _packSize$71564[ebp], edx
	mov	eax, DWORD PTR tv480[ebp+4]
	mov	DWORD PTR _packSize$71564[ebp+4], eax
; Line 794
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+63], 1
; Line 795
	mov	DWORD PTR _result$71568[ebp], 1
$LN20@Extract:
; Line 798
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN19@Extract
; Line 799
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	$LN30@Extract
$LN19@Extract:
; Line 801
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	call	?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NDecoder::CCoder::AlignToByte
; Line 803
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	?ReadFooter1@CItem@NGz@NArchive@@QAEJPAVCCOMCoder@NDecoder@NDeflate@NCompress@@@Z ; NArchive::NGz::CItem::ReadFooter1
	mov	DWORD PTR tv481[ebp], eax
	mov	edx, DWORD PTR tv481[ebp]
	mov	DWORD PTR _result$71568[ebp], edx
; Line 805
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	call	?GetInputProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ; NCompress::NDeflate::NDecoder::CCoder::GetInputProcessedSize
	mov	DWORD PTR tv482[ebp], eax
	mov	DWORD PTR tv482[ebp+4], edx
	mov	ecx, DWORD PTR tv482[ebp]
	mov	DWORD PTR _packSize$71564[ebp], ecx
	mov	edx, DWORD PTR tv482[ebp+4]
	mov	DWORD PTR _packSize$71564[ebp+4], edx
; Line 807
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN18@Extract
	cmp	DWORD PTR _result$71568[ebp], 1
	je	SHORT $LN18@Extract
; Line 808
	mov	eax, DWORD PTR _result$71568[ebp]
	mov	DWORD PTR $T72962[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72962[ebp]
	jmp	$LN44@Extract
$LN18@Extract:
; Line 810
	cmp	DWORD PTR _result$71568[ebp], 0
	je	SHORT $LN17@Extract
; Line 812
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+112]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	mov	BYTE PTR tv483[ebp], al
	movzx	edx, BYTE PTR tv483[ebp]
	test	edx, edx
	je	SHORT $LN16@Extract
; Line 814
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+63], 1
; Line 815
	mov	DWORD PTR _result$71568[ebp], 1
$LN16@Extract:
; Line 817
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	SHORT $LN30@Extract
$LN17@Extract:
; Line 821
	mov	ecx, DWORD PTR _outStreamSpec$71540[ebp]
	call	?GetCRC@COutStreamWithCRC@@QBEIXZ	; COutStreamWithCRC::GetCRC
	mov	DWORD PTR tv484[ebp], eax
	mov	ecx, DWORD PTR _item$71577[ebp+8]
	cmp	ecx, DWORD PTR tv484[ebp]
	jne	SHORT $LN14@Extract
	mov	edx, DWORD PTR _unpackedSize$71565[ebp]
	sub	edx, DWORD PTR _startOffset$71592[ebp]
	mov	eax, DWORD PTR _unpackedSize$71565[ebp+4]
	sbb	eax, DWORD PTR _startOffset$71592[ebp+4]
	cmp	DWORD PTR _item$71577[ebp+12], edx
	je	SHORT $LN15@Extract
$LN14@Extract:
; Line 823
	mov	BYTE PTR _crcError$71567[ebp], 1
; Line 824
	mov	DWORD PTR _result$71568[ebp], 1
; Line 825
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	SHORT $LN30@Extract
$LN15@Extract:
; Line 829
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	lea	ecx, DWORD PTR _item$71577[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	jmp	$LN31@Extract
$LN30@Extract:
	jmp	SHORT $LN51@Extract
__catch$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$0:
; Line 831
	mov	ecx, DWORD PTR _e$71613[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T72963[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	mov	eax, $LN61@Extract
	ret	0
	mov	eax, $LN51@Extract
	ret	0
$LN51@Extract:
	mov	DWORD PTR __$EHRec$[ebp+12], 5
	jmp	SHORT $LN60@Extract
$LN61@Extract:
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72963[ebp]
	jmp	$LN44@Extract
$LN60@Extract:
; Line 833
	movzx	eax, BYTE PTR _firstItem$71563[ebp]
	test	eax, eax
	jne	SHORT $LN13@Extract
; Line 835
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _packSize$71564[ebp]
	mov	DWORD PTR [ecx+72], edx
	mov	eax, DWORD PTR _packSize$71564[ebp+4]
	mov	DWORD PTR [ecx+76], eax
; Line 836
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _unpackedSize$71565[ebp]
	mov	DWORD PTR [ecx+80], edx
	mov	eax, DWORD PTR _unpackedSize$71565[ebp+4]
	mov	DWORD PTR [ecx+84], eax
; Line 837
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _numStreams$71566[ebp]
	mov	DWORD PTR [ecx+88], edx
	mov	eax, DWORD PTR _numStreams$71566[ebp+4]
	mov	DWORD PTR [ecx+92], eax
; Line 839
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+64], 1
; Line 840
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+65], 1
; Line 841
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+66], 1
$LN13@Extract:
; Line 844
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 846
	mov	DWORD PTR _retResult$71616[ebp], 2
; Line 848
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+60]
	test	edx, edx
	jne	SHORT $LN12@Extract
; Line 849
	mov	DWORD PTR _retResult$71616[ebp], 7
	jmp	$LN11@Extract
$LN12@Extract:
; Line 850
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+63]
	test	ecx, ecx
	je	SHORT $LN10@Extract
; Line 851
	mov	DWORD PTR _retResult$71616[ebp], 5
	jmp	$LN11@Extract
$LN10@Extract:
; Line 852
	movzx	edx, BYTE PTR _crcError$71567[ebp]
	test	edx, edx
	je	SHORT $LN8@Extract
; Line 853
	mov	DWORD PTR _retResult$71616[ebp], 3
	jmp	SHORT $LN11@Extract
$LN8@Extract:
; Line 854
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+62]
	test	ecx, ecx
	je	SHORT $LN6@Extract
; Line 855
	mov	DWORD PTR _retResult$71616[ebp], 6
	jmp	SHORT $LN11@Extract
$LN6@Extract:
; Line 856
	cmp	DWORD PTR _result$71568[ebp], 1
	jne	SHORT $LN4@Extract
; Line 857
	mov	DWORD PTR _retResult$71616[ebp], 2
	jmp	SHORT $LN11@Extract
$LN4@Extract:
; Line 858
	cmp	DWORD PTR _result$71568[ebp], 0
	jne	SHORT $LN2@Extract
; Line 859
	mov	DWORD PTR _retResult$71616[ebp], 0
; Line 860
	jmp	SHORT $LN11@Extract
$LN2@Extract:
; Line 861
	mov	edx, DWORD PTR _result$71568[ebp]
	mov	DWORD PTR $T72964[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72964[ebp]
	jmp	$LN44@Extract
$LN11@Extract:
; Line 863
	mov	esi, esp
	mov	eax, DWORD PTR _retResult$71616[ebp]
	push	eax
	mov	ecx, DWORD PTR _extractCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _extractCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv485[ebp], eax
	mov	edx, DWORD PTR tv485[ebp]
	mov	DWORD PTR $T72965[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _progress$71553[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR $T72965[ebp]
	jmp	SHORT $LN44@Extract
__catch$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$2:
; Line 866
	mov	DWORD PTR $T72966[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN63@Extract
	ret	0
	mov	eax, __tryend$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3
	ret	0
__tryend$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN44@Extract
$LN63@Extract:
	mov	eax, DWORD PTR $T72966[ebp]
$LN44@Extract:
; Line 867
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN77@Extract
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN77@Extract:
	DD	5
	DD	$LN76@Extract
$LN76@Extract:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN70@Extract
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN71@Extract
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN72@Extract
	DD	-160					; ffffff60H
	DD	40					; 00000028H
	DD	$LN73@Extract
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN74@Extract
$LN74@Extract:
	DB	101					; 00000065H
	DB	0
$LN73@Extract:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN72@Extract:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN71@Extract:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN70@Extract:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$4:
	lea	ecx, DWORD PTR _realOutStream$71532[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$5:
	mov	eax, DWORD PTR $T72950[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$6:
	lea	ecx, DWORD PTR _outStream$71546[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$7:
	mov	eax, DWORD PTR $T72954[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$8:
	lea	ecx, DWORD PTR _progress$71553[ebp]
	jmp	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
__unwindfunclet$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z$9:
	lea	ecx, DWORD PTR _item$71577[ebp]
	jmp	??1CItem@NGz@NArchive@@QAE@XZ
__ehhandler$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-420]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z ENDP ; NArchive::NGz::CHandler::Extract
PUBLIC	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::AlignToByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::AlignToByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::AlignToByte
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AlignToByte@CCoder@NDecoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::AlignToByte
_TEXT	ENDS
PUBLIC	?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetStreamSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::GetStreamSize, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetStreamSize
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStreamSize@CCoder@NDecoder@NDeflate@NCompress@@QBE_KXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::GetStreamSize
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ; CMyComPtr<ISequentialOutStream>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z PROC ; COutStreamWithCRC::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\outstreamwithcrc.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ; CMyComPtr<ISequentialOutStream>::operator=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutStreamWithCRC@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutStreamWithCRC::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@COutStreamWithCRC@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_calculate$ = 8						; size = 1
?Init@COutStreamWithCRC@@QAEX_N@Z PROC			; COutStreamWithCRC::Init, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	DWORD PTR [eax+20], 0
; Line 28
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _calculate$[ebp]
	mov	BYTE PTR [ecx+28], dl
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], -1
; Line 30
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@COutStreamWithCRC@@QAEX_N@Z ENDP			; COutStreamWithCRC::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?InitCRC@COutStreamWithCRC@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitCRC@COutStreamWithCRC@@QAEXXZ PROC			; COutStreamWithCRC::InitCRC, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], -1
	mov	esp, ebp
	pop	ebp
	ret	0
?InitCRC@COutStreamWithCRC@@QAEXXZ ENDP			; COutStreamWithCRC::InitCRC
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSize@COutStreamWithCRC@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@COutStreamWithCRC@@QBE_KXZ PROC		; COutStreamWithCRC::GetSize, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR [ecx+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSize@COutStreamWithCRC@@QBE_KXZ ENDP		; COutStreamWithCRC::GetSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCRC@COutStreamWithCRC@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCRC@COutStreamWithCRC@@QBEIXZ PROC			; COutStreamWithCRC::GetCRC, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	xor	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCRC@COutStreamWithCRC@@QBEIXZ ENDP			; COutStreamWithCRC::GetCRC
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
xdata$x	SEGMENT
__unwindtable$??0CItem@NGz@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CItem@NGz@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CItem@NGz@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CItem@NGz@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CItem@NGz@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CItem@NGz@NArchive@@QAE@XZ PROC			; NArchive::NGz::CItem::CItem, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+2], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CItem@NGz@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0CItem@NGz@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CItem@NGz@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CItem@NGz@NArchive@@QAE@XZ ENDP			; NArchive::NGz::CItem::CItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T73026 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T73026[ebp], ecx
	mov	edx, DWORD PTR $T73026[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CItem@NGz@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CItem@NGz@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CItem@NGz@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CItem@NGz@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CItem@NGz@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CItem@NGz@NArchive@@QAE@XZ PROC			; NArchive::NGz::CItem::~CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CItem@NGz@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1CItem@NGz@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CItem@NGz@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CItem@NGz@NArchive@@QAE@XZ ENDP			; NArchive::NGz::CItem::~CItem
PUBLIC	??_7COutStreamWithCRC@@6B@			; COutStreamWithCRC::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ISequentialOutStream@@QAE@XZ			; ISequentialOutStream::ISequentialOutStream
PUBLIC	??_R4COutStreamWithCRC@@6B@			; COutStreamWithCRC::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCOutStreamWithCRC@@@8			; COutStreamWithCRC `RTTI Type Descriptor'
PUBLIC	??_R3COutStreamWithCRC@@8			; COutStreamWithCRC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2COutStreamWithCRC@@8			; COutStreamWithCRC::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@COutStreamWithCRC@@8		; COutStreamWithCRC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialOutStream@@@8		; ISequentialOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z ; COutStreamWithCRC::QueryInterface
PUBLIC	?AddRef@COutStreamWithCRC@@UAGKXZ		; COutStreamWithCRC::AddRef
PUBLIC	?Release@COutStreamWithCRC@@UAGKXZ		; COutStreamWithCRC::Release
EXTRN	?Write@COutStreamWithCRC@@UAGJPBXIPAI@Z:PROC	; COutStreamWithCRC::Write
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialOutStream@@8
rdata$r	SEGMENT
??_R2ISequentialOutStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8 ; ISequentialOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialOutStream@@8
rdata$r	SEGMENT
??_R3ISequentialOutStream@@8 DD 00H			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialOutStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@COutStreamWithCRC@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@COutStreamWithCRC@@8 DD FLAT:??_R0?AVCOutStreamWithCRC@@@8 ; COutStreamWithCRC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COutStreamWithCRC@@8
rdata$r	ENDS
;	COMDAT ??_R2COutStreamWithCRC@@8
rdata$r	SEGMENT
??_R2COutStreamWithCRC@@8 DD FLAT:??_R1A@?0A@EA@COutStreamWithCRC@@8 ; COutStreamWithCRC::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3COutStreamWithCRC@@8
rdata$r	SEGMENT
??_R3COutStreamWithCRC@@8 DD 00H			; COutStreamWithCRC::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2COutStreamWithCRC@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCOutStreamWithCRC@@@8
_DATA	SEGMENT
??_R0?AVCOutStreamWithCRC@@@8 DD FLAT:??_7type_info@@6B@ ; COutStreamWithCRC `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCOutStreamWithCRC@@', 00H
_DATA	ENDS
;	COMDAT ??_R4COutStreamWithCRC@@6B@
rdata$r	SEGMENT
??_R4COutStreamWithCRC@@6B@ DD 00H			; COutStreamWithCRC::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCOutStreamWithCRC@@@8
	DD	FLAT:??_R3COutStreamWithCRC@@8
rdata$r	ENDS
;	COMDAT ??_7COutStreamWithCRC@@6B@
CONST	SEGMENT
??_7COutStreamWithCRC@@6B@ DD FLAT:??_R4COutStreamWithCRC@@6B@ ; COutStreamWithCRC::`vftable'
	DD	FLAT:?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@COutStreamWithCRC@@UAGKXZ
	DD	FLAT:?Release@COutStreamWithCRC@@UAGKXZ
	DD	FLAT:?Write@COutStreamWithCRC@@UAGJPBXIPAI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0COutStreamWithCRC@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutStreamWithCRC@@QAE@XZ PROC			; COutStreamWithCRC::COutStreamWithCRC, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7COutStreamWithCRC@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutStreamWithCRC@@QAE@XZ ENDP			; COutStreamWithCRC::COutStreamWithCRC
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z PROC ; COutStreamWithCRC::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\outstreamwithcrc.h
; Line 21
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter
$LN1@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@COutStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z ENDP ; COutStreamWithCRC::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@COutStreamWithCRC@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@COutStreamWithCRC@@UAGKXZ PROC			; COutStreamWithCRC::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\outstreamwithcrc.h
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@COutStreamWithCRC@@UAGKXZ ENDP			; COutStreamWithCRC::AddRef
_TEXT	ENDS
PUBLIC	??_GCOutStreamWithCRC@@QAEPAXI@Z		; COutStreamWithCRC::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@COutStreamWithCRC@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73053 = -8						; size = 4
$T73052 = -4						; size = 4
_this$ = 8						; size = 4
?Release@COutStreamWithCRC@@UAGKXZ PROC			; COutStreamWithCRC::Release, COMDAT
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73053[ebp], edx
	mov	eax, DWORD PTR $T73053[ebp]
	mov	DWORD PTR $T73052[ebp], eax
	cmp	DWORD PTR $T73052[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T73052[ebp]
	call	??_GCOutStreamWithCRC@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@COutStreamWithCRC@@UAGKXZ ENDP			; COutStreamWithCRC::Release
_TEXT	ENDS
PUBLIC	??1COutStreamWithCRC@@QAE@XZ			; COutStreamWithCRC::~COutStreamWithCRC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCOutStreamWithCRC@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCOutStreamWithCRC@@QAEPAXI@Z PROC			; COutStreamWithCRC::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutStreamWithCRC@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCOutStreamWithCRC@@QAEPAXI@Z ENDP			; COutStreamWithCRC::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1COutStreamWithCRC@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutStreamWithCRC@@QAE@XZ PROC			; COutStreamWithCRC::~COutStreamWithCRC, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutStreamWithCRC@@QAE@XZ ENDP			; COutStreamWithCRC::~COutStreamWithCRC
_TEXT	ENDS
PUBLIC	??_7ISequentialOutStream@@6B@			; ISequentialOutStream::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ISequentialOutStream@@6B@			; ISequentialOutStream::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ISequentialOutStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialOutStream@@6B@ DD 00H			; ISequentialOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialOutStream@@@8
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialOutStream@@6B@
CONST	SEGMENT
??_7ISequentialOutStream@@6B@ DD FLAT:??_R4ISequentialOutStream@@6B@ ; ISequentialOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialOutStream@@QAE@XZ PROC			; ISequentialOutStream::ISequentialOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialOutStream@@QAE@XZ ENDP			; ISequentialOutStream::ISequentialOutStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	?GetFileTimeType@CHandler@NGz@NArchive@@UAGJPAI@Z ; NArchive::NGz::CHandler::GetFileTimeType
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_timeType$ = 12						; size = 4
?GetFileTimeType@CHandler@NGz@NArchive@@UAGJPAI@Z PROC	; NArchive::NGz::CHandler::GetFileTimeType
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 920
	push	ebp
	mov	ebp, esp
; Line 921
	mov	eax, DWORD PTR _timeType$[ebp]
	mov	DWORD PTR [eax], 1
; Line 922
	xor	eax, eax
; Line 923
	pop	ebp
	ret	8
?GetFileTimeType@CHandler@NGz@NArchive@@UAGJPAI@Z ENDP	; NArchive::NGz::CHandler::GetFileTimeType
_TEXT	ENDS
PUBLIC	?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z ; NArchive::NGz::CItem::CopyDataPropsFrom
PUBLIC	??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>
PUBLIC	??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::operator->
PUBLIC	??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::operator IArchiveUpdateCallbackFile *
PUBLIC	??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::operator&
PUBLIC	??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::CMyComPtr<IArchiveUpdateCallbackFile>
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z ; NArchive::NGz::CItem::CopyMetaPropsFrom
PUBLIC	?IntToBool@@YG_NH@Z				; IntToBool
PUBLIC	?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z ; NArchive::NGz::CHandler::UpdateItems
EXTRN	?CopyStream@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z:PROC ; NCompress::CopyStream
EXTRN	_IID_IArchiveUpdateCallbackFile:BYTE
EXTRN	??4AString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator=
EXTRN	?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z:PROC ; UnicodeStringToMultiByte
EXTRN	?DeleteFrontal@UString@@QAEXI@Z:PROC		; UString::DeleteFrontal
EXTRN	?ReverseFind_PathSepar@UString@@QBEHXZ:PROC	; UString::ReverseFind_PathSepar
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	?FileTimeToUnixTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z:PROC ; NWindows::NTime::FileTimeToUnixTime
xdata$x	SEGMENT
__catchsym$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$12 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0
__tryblocktable$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z DD 00H
	DD	0aH
	DD	0bH
	DD	01H
	DD	FLAT:__catchsym$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$12
__ehfuncinfo$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$11
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv487 = -508						; size = 4
tv486 = -504						; size = 4
tv485 = -500						; size = 4
tv484 = -496						; size = 4
tv396 = -492						; size = 4
tv483 = -488						; size = 4
tv482 = -481						; size = 1
tv481 = -480						; size = 4
tv370 = -476						; size = 4
tv480 = -472						; size = 4
tv479 = -468						; size = 4
tv478 = -464						; size = 4
tv336 = -460						; size = 4
tv335 = -456						; size = 4
tv477 = -452						; size = 4
tv475 = -448						; size = 4
tv474 = -441						; size = 1
tv473 = -440						; size = 4
tv472 = -436						; size = 4
tv471 = -432						; size = 4
tv470 = -425						; size = 1
tv469 = -424						; size = 4
tv468 = -420						; size = 4
tv467 = -413						; size = 1
tv429 = -412						; size = 4
tv466 = -408						; size = 4
tv465 = -404						; size = 4
tv464 = -400						; size = 4
tv463 = -396						; size = 4
tv462 = -392						; size = 4
tv461 = -388						; size = 4
tv460 = -381						; size = 1
tv459 = -380						; size = 4
tv458 = -376						; size = 4
$T73087 = -372						; size = 4
$T73086 = -368						; size = 4
$T73085 = -364						; size = 4
$T73084 = -360						; size = 4
$T73081 = -356						; size = 4
$T73080 = -352						; size = 4
$T73079 = -348						; size = 4
$T73078 = -344						; size = 4
$T73077 = -340						; size = 4
$T73076 = -336						; size = 4
$T73075 = -332						; size = 4
$T73074 = -328						; size = 4
$T73073 = -324						; size = 4
$T73072 = -320						; size = 4
$T73071 = -316						; size = 12
$T73070 = -304						; size = 4
$T73069 = -300						; size = 4
$T73068 = -296						; size = 4
___result__$71820 = -292				; size = 4
_offset$71818 = -288					; size = 8
___result__$71815 = -280				; size = 4
_opCallback$71812 = -272				; size = 4
_progress$71774 = -260					; size = 4
_lps$71768 = -252					; size = 4
___result__$71755 = -248				; size = 4
_prop$71754 = -240					; size = 16
_size$71753 = -220					; size = 8
___result__$71743 = -212				; size = 4
_prop$71742 = -204					; size = 16
_slashPos$71734 = -184					; size = 4
_name$71733 = -176					; size = 12
___result__$71729 = -160				; size = 4
_prop$71728 = -152					; size = 16
___result__$71719 = -132				; size = 4
_prop$71718 = -124					; size = 16
_newItem$71715 = -100					; size = 40
___result__$71713 = -56					; size = 4
_indexInArchive$71710 = -48				; size = 4
_newProps$71709 = -36					; size = 4
_newData$71708 = -24					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_outStream$ = 12					; size = 4
_numItems$ = 16						; size = 4
_updateCallback$ = 20					; size = 4
?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z PROC ; NArchive::NGz::CHandler::UpdateItems
; Line 927
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 928
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 930
	cmp	DWORD PTR _numItems$[ebp], 1
	je	SHORT $LN29@UpdateItem
; Line 931
	mov	eax, -2147024809			; 80070057H
	jmp	$LN31@UpdateItem
$LN29@UpdateItem:
; Line 935
	cmp	DWORD PTR _updateCallback$[ebp], 0
	jne	SHORT $LN28@UpdateItem
; Line 936
	mov	eax, -2147467259			; 80004005H
	jmp	$LN31@UpdateItem
$LN28@UpdateItem:
; Line 937
	mov	esi, esp
	lea	eax, DWORD PTR _indexInArchive$71710[ebp]
	push	eax
	lea	ecx, DWORD PTR _newProps$71709[ebp]
	push	ecx
	lea	edx, DWORD PTR _newData$71708[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _updateCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv458[ebp], eax
	mov	ecx, DWORD PTR tv458[ebp]
	mov	DWORD PTR ___result__$71713[ebp], ecx
	cmp	DWORD PTR ___result__$71713[ebp], 0
	je	SHORT $LN27@UpdateItem
	mov	eax, DWORD PTR ___result__$71713[ebp]
	jmp	$LN31@UpdateItem
$LN27@UpdateItem:
; Line 939
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??0CItem@NGz@NArchive@@QAE@XZ		; NArchive::NGz::CItem::CItem
	mov	DWORD PTR tv459[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 941
	mov	edx, DWORD PTR _newProps$71709[ebp]
	push	edx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv460[ebp], al
	movzx	eax, BYTE PTR tv460[ebp]
	test	eax, eax
	jne	SHORT $LN26@UpdateItem
; Line 943
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z ; NArchive::NGz::CItem::CopyMetaPropsFrom
; Line 945
	jmp	$LN25@UpdateItem
$LN26@UpdateItem:
; Line 947
	mov	BYTE PTR _newItem$71715[ebp+2], 0
; Line 949
	lea	ecx, DWORD PTR _prop$71718[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv461[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 950
	mov	esi, esp
	lea	edx, DWORD PTR _prop$71718[ebp]
	push	edx
	push	12					; 0000000cH
	push	0
	mov	eax, DWORD PTR _updateCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv462[ebp], eax
	mov	ecx, DWORD PTR tv462[ebp]
	mov	DWORD PTR ___result__$71719[ebp], ecx
	cmp	DWORD PTR ___result__$71719[ebp], 0
	je	SHORT $LN24@UpdateItem
	mov	edx, DWORD PTR ___result__$71719[ebp]
	mov	DWORD PTR $T73068[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71718[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73068[ebp]
	jmp	$LN31@UpdateItem
$LN24@UpdateItem:
; Line 951
	movzx	eax, WORD PTR _prop$71718[ebp]
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN23@UpdateItem
; Line 952
	lea	ecx, DWORD PTR _newItem$71715[ebp+4]
	push	ecx
	lea	edx, DWORD PTR _prop$71718[ebp+8]
	push	edx
	call	?FileTimeToUnixTime@NTime@NWindows@@YG_NABU_FILETIME@@AAI@Z ; NWindows::NTime::FileTimeToUnixTime
	jmp	SHORT $LN22@UpdateItem
$LN23@UpdateItem:
; Line 953
	movzx	eax, WORD PTR _prop$71718[ebp]
	test	eax, eax
	jne	SHORT $LN21@UpdateItem
; Line 954
	mov	DWORD PTR _newItem$71715[ebp+4], 0
; Line 955
	jmp	SHORT $LN22@UpdateItem
$LN21@UpdateItem:
; Line 956
	mov	DWORD PTR $T73069[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71718[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73069[ebp]
	jmp	$LN31@UpdateItem
$LN22@UpdateItem:
; Line 957
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71718[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
; Line 959
	lea	ecx, DWORD PTR _prop$71728[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv463[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 960
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$71728[ebp]
	push	ecx
	push	3
	push	0
	mov	edx, DWORD PTR _updateCallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _updateCallback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv464[ebp], eax
	mov	eax, DWORD PTR tv464[ebp]
	mov	DWORD PTR ___result__$71729[ebp], eax
	cmp	DWORD PTR ___result__$71729[ebp], 0
	je	SHORT $LN19@UpdateItem
	mov	ecx, DWORD PTR ___result__$71729[ebp]
	mov	DWORD PTR $T73070[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71728[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73070[ebp]
	jmp	$LN31@UpdateItem
$LN19@UpdateItem:
; Line 961
	movzx	edx, WORD PTR _prop$71728[ebp]
	cmp	edx, 8
	jne	$LN18@UpdateItem
; Line 963
	mov	eax, DWORD PTR _prop$71728[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _name$71733[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR tv465[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 964
	lea	ecx, DWORD PTR _name$71733[ebp]
	call	?ReverseFind_PathSepar@UString@@QBEHXZ	; UString::ReverseFind_PathSepar
	mov	DWORD PTR _slashPos$71734[ebp], eax
; Line 965
	cmp	DWORD PTR _slashPos$71734[ebp], 0
	jl	SHORT $LN17@UpdateItem
; Line 966
	mov	ecx, DWORD PTR _slashPos$71734[ebp]
	add	ecx, 1
	push	ecx
	lea	ecx, DWORD PTR _name$71733[ebp]
	call	?DeleteFrontal@UString@@QAEXI@Z		; UString::DeleteFrontal
$LN17@UpdateItem:
; Line 967
	push	0
	lea	edx, DWORD PTR _name$71733[ebp]
	push	edx
	lea	eax, DWORD PTR $T73071[ebp]
	push	eax
	call	?UnicodeStringToMultiByte@@YG?AVAString@@ABVUString@@I@Z ; UnicodeStringToMultiByte
	mov	DWORD PTR tv466[ebp], eax
	mov	ecx, DWORD PTR tv466[ebp]
	mov	DWORD PTR tv429[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	edx, DWORD PTR tv429[ebp]
	push	edx
	lea	ecx, DWORD PTR _newItem$71715[ebp+16]
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T73071[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 968
	lea	ecx, DWORD PTR _newItem$71715[ebp+16]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	mov	BYTE PTR tv467[ebp], al
	movzx	eax, BYTE PTR tv467[ebp]
	test	eax, eax
	jne	SHORT $LN16@UpdateItem
; Line 969
	movzx	ecx, BYTE PTR _newItem$71715[ebp]
	or	ecx, 8
	mov	BYTE PTR _newItem$71715[ebp], cl
$LN16@UpdateItem:
; Line 970
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _name$71733[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	SHORT $LN15@UpdateItem
$LN18@UpdateItem:
; Line 971
	movzx	edx, WORD PTR _prop$71728[ebp]
	test	edx, edx
	je	SHORT $LN15@UpdateItem
; Line 972
	mov	DWORD PTR $T73072[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71728[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73072[ebp]
	jmp	$LN31@UpdateItem
$LN15@UpdateItem:
; Line 973
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71728[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
; Line 975
	lea	ecx, DWORD PTR _prop$71742[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv468[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
; Line 976
	mov	esi, esp
	lea	eax, DWORD PTR _prop$71742[ebp]
	push	eax
	push	6
	push	0
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _updateCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv469[ebp], eax
	mov	edx, DWORD PTR tv469[ebp]
	mov	DWORD PTR ___result__$71743[ebp], edx
	cmp	DWORD PTR ___result__$71743[ebp], 0
	je	SHORT $LN13@UpdateItem
	mov	eax, DWORD PTR ___result__$71743[ebp]
	mov	DWORD PTR $T73073[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71742[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73073[ebp]
	jmp	$LN31@UpdateItem
$LN13@UpdateItem:
; Line 977
	movzx	ecx, WORD PTR _prop$71742[ebp]
	test	ecx, ecx
	je	SHORT $LN12@UpdateItem
; Line 978
	movzx	edx, WORD PTR _prop$71742[ebp]
	cmp	edx, 11					; 0000000bH
	jne	SHORT $LN10@UpdateItem
	movsx	eax, WORD PTR _prop$71742[ebp+8]
	test	eax, eax
	je	SHORT $LN12@UpdateItem
$LN10@UpdateItem:
; Line 979
	mov	DWORD PTR $T73074[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71742[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73074[ebp]
	jmp	$LN31@UpdateItem
$LN12@UpdateItem:
; Line 980
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71742[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
$LN25@UpdateItem:
; Line 983
	mov	ecx, DWORD PTR _newData$71708[ebp]
	push	ecx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv470[ebp], al
	movzx	edx, BYTE PTR tv470[ebp]
	test	edx, edx
	je	$LN9@UpdateItem
; Line 987
	lea	ecx, DWORD PTR _prop$71754[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv471[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
; Line 988
	mov	esi, esp
	lea	eax, DWORD PTR _prop$71754[ebp]
	push	eax
	push	7
	push	0
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _updateCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv472[ebp], eax
	mov	edx, DWORD PTR tv472[ebp]
	mov	DWORD PTR ___result__$71755[ebp], edx
	cmp	DWORD PTR ___result__$71755[ebp], 0
	je	SHORT $LN8@UpdateItem
	mov	eax, DWORD PTR ___result__$71755[ebp]
	mov	DWORD PTR $T73075[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71754[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73075[ebp]
	jmp	$LN31@UpdateItem
$LN8@UpdateItem:
; Line 989
	movzx	ecx, WORD PTR _prop$71754[ebp]
	cmp	ecx, 21					; 00000015H
	je	SHORT $LN7@UpdateItem
; Line 990
	mov	DWORD PTR $T73076[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71754[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73076[ebp]
	jmp	$LN31@UpdateItem
$LN7@UpdateItem:
; Line 991
	mov	edx, DWORD PTR _prop$71754[ebp+8]
	mov	DWORD PTR _size$71753[ebp], edx
	mov	eax, DWORD PTR _prop$71754[ebp+12]
	mov	DWORD PTR _size$71753[ebp+4], eax
; Line 992
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _prop$71754[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
; Line 993
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 108				; 0000006cH
	push	edx
	lea	eax, DWORD PTR _newItem$71715[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$71753[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _size$71753[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	call	?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z ; NArchive::NGz::UpdateArchive
	mov	DWORD PTR tv473[ebp], eax
	mov	ecx, DWORD PTR tv473[ebp]
	mov	DWORD PTR $T73077[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73077[ebp]
	jmp	$LN31@UpdateItem
$LN9@UpdateItem:
; Line 996
	cmp	DWORD PTR _indexInArchive$71710[ebp], 0
	je	SHORT $LN6@UpdateItem
; Line 997
	mov	DWORD PTR $T73078[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73078[ebp]
	jmp	$LN31@UpdateItem
$LN6@UpdateItem:
; Line 999
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??7?$CMyComPtr@UIInStream@@@@QBE_NXZ	; CMyComPtr<IInStream>::operator!
	mov	BYTE PTR tv474[ebp], al
	movzx	edx, BYTE PTR tv474[ebp]
	test	edx, edx
	je	SHORT $LN5@UpdateItem
; Line 1000
	mov	DWORD PTR $T73079[ebp], -2147467263	; 80004001H
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73079[ebp]
	jmp	$LN31@UpdateItem
$LN5@UpdateItem:
; Line 1002
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv475[ebp], eax
	mov	eax, DWORD PTR tv475[ebp]
	mov	DWORD PTR $T73081[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	cmp	DWORD PTR $T73081[ebp], 0
	je	SHORT $LN33@UpdateItem
	mov	ecx, DWORD PTR $T73081[ebp]
	call	??0CLocalProgress@@QAE@XZ		; CLocalProgress::CLocalProgress
	mov	DWORD PTR tv477[ebp], eax
	mov	ecx, DWORD PTR tv477[ebp]
	mov	DWORD PTR tv335[ebp], ecx
	jmp	SHORT $LN34@UpdateItem
$LN33@UpdateItem:
	mov	DWORD PTR tv335[ebp], 0
$LN34@UpdateItem:
	mov	edx, DWORD PTR tv335[ebp]
	mov	DWORD PTR $T73080[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	eax, DWORD PTR $T73080[ebp]
	mov	DWORD PTR _lps$71768[ebp], eax
; Line 1003
	mov	ecx, DWORD PTR _lps$71768[ebp]
	push	ecx
	lea	ecx, DWORD PTR _progress$71774[ebp]
	call	??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
; Line 1004
	push	1
	mov	edx, DWORD PTR _updateCallback$[ebp]
	push	edx
	mov	ecx, DWORD PTR _lps$71768[ebp]
	call	?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z ; CLocalProgress::Init
; Line 1006
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::CMyComPtr<IArchiveUpdateCallbackFile>
	mov	DWORD PTR tv336[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
; Line 1007
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::operator&
	mov	DWORD PTR tv478[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv478[ebp]
	push	eax
	push	OFFSET _IID_IArchiveUpdateCallbackFile
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _updateCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1008
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::operator IArchiveUpdateCallbackFile *
	mov	DWORD PTR tv479[ebp], eax
	cmp	DWORD PTR tv479[ebp], 0
	je	$LN4@UpdateItem
; Line 1012
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::operator->
	mov	DWORD PTR tv480[ebp], eax
	mov	edx, DWORD PTR tv480[ebp]
	mov	DWORD PTR tv370[ebp], edx
	mov	esi, esp
	push	3
	push	0
	push	1
	mov	eax, DWORD PTR tv370[ebp]
	push	eax
	mov	ecx, DWORD PTR tv370[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv481[ebp], eax
	mov	ecx, DWORD PTR tv481[ebp]
	mov	DWORD PTR ___result__$71815[ebp], ecx
	cmp	DWORD PTR ___result__$71815[ebp], 0
	je	SHORT $LN4@UpdateItem
	mov	edx, DWORD PTR ___result__$71815[ebp]
	mov	DWORD PTR $T73084[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _progress$71774[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73084[ebp]
	jmp	$LN31@UpdateItem
$LN4@UpdateItem:
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z ; NArchive::NGz::CItem::CopyDataPropsFrom
; Line 1017
	mov	DWORD PTR _offset$71818[ebp], 0
	mov	DWORD PTR _offset$71818[ebp+4], 0
; Line 1018
	mov	ecx, DWORD PTR _newProps$71709[ebp]
	push	ecx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv482[ebp], al
	movzx	edx, BYTE PTR tv482[ebp]
	test	edx, edx
	je	SHORT $LN2@UpdateItem
; Line 1020
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ; NArchive::NGz::CItem::WriteHeader
; Line 1021
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _offset$71818[ebp]
	add	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR _offset$71818[ebp+4]
	adc	eax, DWORD PTR [ecx+92]
	mov	DWORD PTR _offset$71818[ebp], edx
	mov	DWORD PTR _offset$71818[ebp+4], eax
$LN2@UpdateItem:
; Line 1023
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator->
	mov	DWORD PTR tv483[ebp], eax
	mov	ecx, DWORD PTR tv483[ebp]
	mov	DWORD PTR tv396[ebp], ecx
	mov	esi, esp
	push	0
	push	0
	mov	edx, DWORD PTR _offset$71818[ebp+4]
	push	edx
	mov	eax, DWORD PTR _offset$71818[ebp]
	push	eax
	mov	ecx, DWORD PTR tv396[ebp]
	push	ecx
	mov	edx, DWORD PTR tv396[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv484[ebp], eax
	mov	edx, DWORD PTR tv484[ebp]
	mov	DWORD PTR ___result__$71820[ebp], edx
	cmp	DWORD PTR ___result__$71820[ebp], 0
	je	SHORT $LN1@UpdateItem
	mov	eax, DWORD PTR ___result__$71820[ebp]
	mov	DWORD PTR $T73085[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _progress$71774[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73085[ebp]
	jmp	$LN31@UpdateItem
$LN1@UpdateItem:
; Line 1025
	lea	ecx, DWORD PTR _progress$71774[ebp]
	call	??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ ; CMyComPtr<ICompressProgressInfo>::operator ICompressProgressInfo *
	mov	DWORD PTR tv485[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 96					; 00000060H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv486[ebp], eax
	mov	ecx, DWORD PTR tv485[ebp]
	push	ecx
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	mov	eax, DWORD PTR tv486[ebp]
	push	eax
	call	?CopyStream@NCompress@@YGJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ; NCompress::CopyStream
	mov	DWORD PTR tv487[ebp], eax
	mov	ecx, DWORD PTR tv487[ebp]
	mov	DWORD PTR $T73086[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	call	??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _progress$71774[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T73086[ebp]
	jmp	SHORT $LN31@UpdateItem
__catch$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0:
; Line 1027
	mov	DWORD PTR $T73087[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN48@UpdateItem
	ret	0
	mov	eax, __tryend$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$1
	ret	0
__tryend$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN31@UpdateItem
$LN48@UpdateItem:
	mov	eax, DWORD PTR $T73087[ebp]
$LN31@UpdateItem:
; Line 1028
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN63@UpdateItem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN63@UpdateItem:
	DD	11					; 0000000bH
	DD	$LN62@UpdateItem
$LN62@UpdateItem:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN50@UpdateItem
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN51@UpdateItem
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN52@UpdateItem
	DD	-100					; ffffff9cH
	DD	40					; 00000028H
	DD	$LN53@UpdateItem
	DD	-124					; ffffff84H
	DD	16					; 00000010H
	DD	$LN54@UpdateItem
	DD	-152					; ffffff68H
	DD	16					; 00000010H
	DD	$LN55@UpdateItem
	DD	-176					; ffffff50H
	DD	12					; 0000000cH
	DD	$LN56@UpdateItem
	DD	-204					; ffffff34H
	DD	16					; 00000010H
	DD	$LN57@UpdateItem
	DD	-240					; ffffff10H
	DD	16					; 00000010H
	DD	$LN58@UpdateItem
	DD	-260					; fffffefcH
	DD	4
	DD	$LN59@UpdateItem
	DD	-272					; fffffef0H
	DD	4
	DD	$LN60@UpdateItem
$LN60@UpdateItem:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN59@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN58@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN57@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN56@UpdateItem:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN55@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN54@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN53@UpdateItem:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN52@UpdateItem:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN51@UpdateItem:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN50@UpdateItem:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2:
	lea	ecx, DWORD PTR _newItem$71715[ebp]
	jmp	??1CItem@NGz@NArchive@@QAE@XZ
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3:
	lea	ecx, DWORD PTR _prop$71718[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4:
	lea	ecx, DWORD PTR _prop$71728[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5:
	lea	ecx, DWORD PTR _name$71733[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6:
	lea	ecx, DWORD PTR $T73071[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7:
	lea	ecx, DWORD PTR _prop$71742[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8:
	lea	ecx, DWORD PTR _prop$71754[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$9:
	mov	eax, DWORD PTR $T73081[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$10:
	lea	ecx, DWORD PTR _progress$71774[ebp]
	jmp	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
__unwindfunclet$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$11:
	lea	ecx, DWORD PTR _opCallback$71812[ebp]
	jmp	??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>
__ehhandler$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-512]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z ENDP ; NArchive::NGz::CHandler::UpdateItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IntToBool@@YG_NH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?IntToBool@@YG_NH@Z PROC				; IntToBool, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 18
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	cmp	DWORD PTR _value$[ebp], 0
	setne	al
	pop	ebp
	ret	4
?IntToBool@@YG_NH@Z ENDP				; IntToBool
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z PROC ; NArchive::NGz::CItem::CopyMetaPropsFrom, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 145
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	dl, BYTE PTR [ecx+2]
	mov	BYTE PTR [eax+2], dl
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 149
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
; Line 150
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
; Line 152
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyMetaPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z ENDP ; NArchive::NGz::CItem::CopyMetaPropsFrom
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z PROC ; NArchive::NGz::CItem::CopyDataPropsFrom, COMDAT
; _this$ = ecx
; Line 155
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR [eax+1], dl
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 159
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyDataPropsFrom@CItem@NGz@NArchive@@QAEXABV123@@Z ENDP ; NArchive::NGz::CItem::CopyDataPropsFrom
_TEXT	ENDS
PUBLIC	?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ	; CSequentialInStreamWithCRC::GetSize
PUBLIC	?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ	; CSequentialInStreamWithCRC::GetCRC
PUBLIC	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
PUBLIC	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ	; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
PUBLIC	??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
PUBLIC	??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CCOMCoder::CCOMCoder
PUBLIC	?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ	; NArchive::CSingleMethodProps::GetLevel
PUBLIC	?Init@CSequentialInStreamWithCRC@@QAEXXZ	; CSequentialInStreamWithCRC::Init
PUBLIC	?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z ; CSequentialInStreamWithCRC::SetStream
PUBLIC	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??0CSequentialInStreamWithCRC@@QAE@XZ		; CSequentialInStreamWithCRC::CSequentialInStreamWithCRC
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator&
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
EXTRN	?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z:PROC ; CProps::SetCoderProps
xdata$x	SEGMENT
__ehfuncinfo$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$6
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv213 = -184						; size = 4
tv206 = -180						; size = 4
tv187 = -176						; size = 4
tv155 = -172						; size = 4
tv135 = -168						; size = 4
$T73150 = -164						; size = 4
$T73149 = -160						; size = 4
$T73148 = -156						; size = 4
$T73147 = -152						; size = 4
$T73142 = -148						; size = 4
$T73141 = -144						; size = 4
$T73140 = -140						; size = 4
$T73137 = -136						; size = 4
$T73136 = -132						; size = 4
$T73133 = -128						; size = 4
$T73132 = -124						; size = 4
$T73131 = -120						; size = 4
___result__$71688 = -116				; size = 4
___result__$71684 = -112				; size = 4
___result__$71681 = -108				; size = 4
_deflateEncoder$ = -100					; size = 4
_deflateEncoderSpec$ = -92				; size = 4
___result__$71671 = -88					; size = 4
_progress$ = -80					; size = 4
_lps$ = -72						; size = 4
_crcStream$ = -64					; size = 4
_inStreamSpec$ = -56					; size = 4
___result__$71654 = -52					; size = 4
_fileInStream$ = -44					; size = 4
___result__$71650 = -36					; size = 4
___result__$71648 = -32					; size = 4
_complexity$ = -24					; size = 8
__$EHRec$ = -12						; size = 12
_outStream$ = 8						; size = 4
_unpackSize$ = 12					; size = 8
_item$ = 20						; size = 4
_props$ = 24						; size = 4
_updateCallback$ = 28					; size = 4
?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z PROC ; NArchive::NGz::UpdateArchive
; Line 882
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-184]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 883
	mov	DWORD PTR _complexity$[ebp], 0
	mov	DWORD PTR _complexity$[ebp+4], 0
; Line 884
	mov	esi, esp
	mov	eax, DWORD PTR _unpackSize$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _unpackSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _updateCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71648[ebp], eax
	cmp	DWORD PTR ___result__$71648[ebp], 0
	je	SHORT $LN7@UpdateArch
	mov	eax, DWORD PTR ___result__$71648[ebp]
	jmp	$LN8@UpdateArch
$LN7@UpdateArch:
; Line 885
	mov	esi, esp
	lea	eax, DWORD PTR _complexity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _updateCallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71650[ebp], eax
	cmp	DWORD PTR ___result__$71650[ebp], 0
	je	SHORT $LN6@UpdateArch
	mov	eax, DWORD PTR ___result__$71650[ebp]
	jmp	$LN8@UpdateArch
$LN6@UpdateArch:
; Line 887
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 889
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator&
	mov	esi, esp
	push	eax
	push	0
	mov	edx, DWORD PTR _updateCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71654[ebp], eax
	cmp	DWORD PTR ___result__$71654[ebp], 0
	je	SHORT $LN5@UpdateArch
	mov	eax, DWORD PTR ___result__$71654[ebp]
	mov	DWORD PTR $T73131[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T73131[ebp]
	jmp	$LN8@UpdateArch
$LN5@UpdateArch:
; Line 891
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73133[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T73133[ebp], 0
	je	SHORT $LN10@UpdateArch
	mov	ecx, DWORD PTR $T73133[ebp]
	call	??0CSequentialInStreamWithCRC@@QAE@XZ
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN11@UpdateArch
$LN10@UpdateArch:
	mov	DWORD PTR tv135[ebp], 0
$LN11@UpdateArch:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T73132[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T73132[ebp]
	mov	DWORD PTR _inStreamSpec$[ebp], edx
; Line 892
	mov	eax, DWORD PTR _inStreamSpec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 893
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	push	eax
	mov	ecx, DWORD PTR _inStreamSpec$[ebp]
	call	?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z ; CSequentialInStreamWithCRC::SetStream
; Line 894
	mov	ecx, DWORD PTR _inStreamSpec$[ebp]
	call	?Init@CSequentialInStreamWithCRC@@QAEXXZ ; CSequentialInStreamWithCRC::Init
; Line 896
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73137[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T73137[ebp], 0
	je	SHORT $LN12@UpdateArch
	mov	ecx, DWORD PTR $T73137[ebp]
	call	??0CLocalProgress@@QAE@XZ		; CLocalProgress::CLocalProgress
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN13@UpdateArch
$LN12@UpdateArch:
	mov	DWORD PTR tv155[ebp], 0
$LN13@UpdateArch:
	mov	ecx, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T73136[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T73136[ebp]
	mov	DWORD PTR _lps$[ebp], edx
; Line 897
	mov	eax, DWORD PTR _lps$[ebp]
	push	eax
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 898
	push	1
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lps$[ebp]
	call	?Init@CLocalProgress@@QAEXPAUIProgress@@_N@Z ; CLocalProgress::Init
; Line 902
	mov	ecx, DWORD PTR _props$[ebp]
	call	?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ ; NArchive::CSingleMethodProps::GetLevel
	cmp	eax, 7
	setl	dl
	lea	edx, DWORD PTR [edx+edx+2]
	mov	eax, DWORD PTR _item$[ebp]
	mov	BYTE PTR [eax+1], dl
; Line 904
	mov	ecx, DWORD PTR _item$[ebp]
	mov	BYTE PTR [ecx+2], 0
; Line 906
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$[ebp]
	call	?WriteHeader@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ; NArchive::NGz::CItem::WriteHeader
	mov	DWORD PTR ___result__$71671[ebp], eax
	cmp	DWORD PTR ___result__$71671[ebp], 0
	je	SHORT $LN4@UpdateArch
	mov	eax, DWORD PTR ___result__$71671[ebp]
	mov	DWORD PTR $T73140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T73140[ebp]
	jmp	$LN8@UpdateArch
$LN4@UpdateArch:
; Line 908
	push	39680					; 00009b00H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T73142[ebp], 0
	je	SHORT $LN14@UpdateArch
	mov	ecx, DWORD PTR $T73142[ebp]
	call	??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CCOMCoder::CCOMCoder
	mov	DWORD PTR tv187[ebp], eax
	jmp	SHORT $LN15@UpdateArch
$LN14@UpdateArch:
	mov	DWORD PTR tv187[ebp], 0
$LN15@UpdateArch:
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR $T73141[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR $T73141[ebp]
	mov	DWORD PTR _deflateEncoderSpec$[ebp], edx
; Line 909
	mov	eax, DWORD PTR _deflateEncoderSpec$[ebp]
	push	eax
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	call	??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 910
	cmp	DWORD PTR _deflateEncoderSpec$[ebp], 0
	je	SHORT $LN16@UpdateArch
	mov	ecx, DWORD PTR _deflateEncoderSpec$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv206[ebp], ecx
	jmp	SHORT $LN17@UpdateArch
$LN16@UpdateArch:
	mov	DWORD PTR tv206[ebp], 0
$LN17@UpdateArch:
	push	0
	mov	edx, DWORD PTR tv206[ebp]
	push	edx
	mov	ecx, DWORD PTR _props$[ebp]
	call	?SetCoderProps@CProps@@QBEJPAUICompressSetCoderProperties@@PB_K@Z ; CProps::SetCoderProps
	mov	DWORD PTR ___result__$71681[ebp], eax
	cmp	DWORD PTR ___result__$71681[ebp], 0
	je	SHORT $LN3@UpdateArch
	mov	eax, DWORD PTR ___result__$71681[ebp]
	mov	DWORD PTR $T73147[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T73147[ebp]
	jmp	$LN8@UpdateArch
$LN3@UpdateArch:
; Line 911
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	call	??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ; CMyComPtr<ICompressCoder>::operator->
	mov	DWORD PTR tv213[ebp], eax
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ ; CMyComPtr<ICompressProgressInfo>::operator ICompressProgressInfo *
	mov	esi, esp
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	push	eax
	mov	edx, DWORD PTR tv213[ebp]
	push	edx
	mov	eax, DWORD PTR tv213[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$71684[ebp], eax
	cmp	DWORD PTR ___result__$71684[ebp], 0
	je	SHORT $LN2@UpdateArch
	mov	eax, DWORD PTR ___result__$71684[ebp]
	mov	DWORD PTR $T73148[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T73148[ebp]
	jmp	$LN8@UpdateArch
$LN2@UpdateArch:
; Line 913
	mov	ecx, DWORD PTR _inStreamSpec$[ebp]
	call	?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ ; CSequentialInStreamWithCRC::GetCRC
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 914
	mov	ecx, DWORD PTR _inStreamSpec$[ebp]
	call	?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ ; CSequentialInStreamWithCRC::GetSize
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 915
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	call	?WriteFooter@CItem@NGz@NArchive@@QAEJPAUISequentialOutStream@@@Z ; NArchive::NGz::CItem::WriteFooter
	mov	DWORD PTR ___result__$71688[ebp], eax
	cmp	DWORD PTR ___result__$71688[ebp], 0
	je	SHORT $LN1@UpdateArch
	mov	ecx, DWORD PTR ___result__$71688[ebp]
	mov	DWORD PTR $T73149[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T73149[ebp]
	jmp	SHORT $LN8@UpdateArch
$LN1@UpdateArch:
; Line 916
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _updateCallback$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _updateCallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T73150[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _progress$[ebp]
	call	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _crcStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T73150[ebp]
$LN8@UpdateArch:
; Line 917
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@UpdateArch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 184				; 000000b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN32@UpdateArch:
	DD	5
	DD	$LN31@UpdateArch
$LN31@UpdateArch:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN25@UpdateArch
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN26@UpdateArch
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN27@UpdateArch
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN28@UpdateArch
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN29@UpdateArch
$LN29@UpdateArch:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN28@UpdateArch:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN27@UpdateArch:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN26@UpdateArch:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN25@UpdateArch:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$0:
	lea	ecx, DWORD PTR _fileInStream$[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$1:
	mov	eax, DWORD PTR $T73133[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$2:
	lea	ecx, DWORD PTR _crcStream$[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$3:
	mov	eax, DWORD PTR $T73137[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$4:
	lea	ecx, DWORD PTR _progress$[ebp]
	jmp	??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$5:
	mov	eax, DWORD PTR $T73142[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z$6:
	lea	ecx, DWORD PTR _deflateEncoder$[ebp]
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__ehhandler$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateArchive@NGz@NArchive@@YGJPAUISequentialOutStream@@_KAAVCItem@12@ABVCSingleMethodProps@2@PAUIArchiveUpdateCallback@@@Z ENDP ; NArchive::NGz::UpdateArchive
PUBLIC	??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NDeflate::NEncoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NEncoder::CCOMCoder::`vftable'
PUBLIC	??0ICompressSetCoderProperties@@QAE@XZ		; ICompressSetCoderProperties::ICompressSetCoderProperties
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCOMCoder@NEncoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NEncoder::CCOMCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCOMCoder@NEncoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCOMCoder@NEncoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCOMCoder@NEncoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderProperties@@@8		; ICompressSetCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NEncoder::CCoder::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AVCCoder@NEncoder@NDeflate@NCompress@@@8	; NCompress::NDeflate::NEncoder::CCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCoder@NEncoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NEncoder::CCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoder@NEncoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NEncoder::CCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NEncoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface
PUBLIC	?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NEncoder::CCOMCoder::AddRef
PUBLIC	?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NEncoder::CCOMCoder::Release
PUBLIC	??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::Release`adjustor{4}'
EXTRN	??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z:PROC ; NCompress::NDeflate::NEncoder::CCoder::CCoder
EXTRN	?Code@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::Code
EXTRN	?SetCoderProperties@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z:PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::SetCoderProperties
;	COMDAT ??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.h
rdata$r	SEGMENT
??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@ DD 00H ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NEncoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCoder@NEncoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NEncoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCoder@NEncoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NEncoder::CCoder::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCoder@NEncoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NEncoder::CCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoder@NEncoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCoder@NEncoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NEncoder::CCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoder@NEncoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCoder@NEncoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NEncoder::CCoder::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R17?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderProperties@@8 ; ICompressSetCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderProperties@@8 DD 00H		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCOMCoder@NEncoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCOMCoder@NEncoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCOMCoder@NEncoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCOMCoder@NEncoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1BA@?0A@EA@CCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R3CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCOMCoder@NEncoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	FLAT:??_R2CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCOMCoder@NEncoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCOMCoder@NEncoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NEncoder::CCOMCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCOMCoder@NEncoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NDeflate::NEncoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NEncoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NEncoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NDeflate::NEncoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?SetCoderProperties@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NEncoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ PROC	; NCompress::NDeflate::NEncoder::CCOMCoder::CCOMCoder, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z ; NCompress::NDeflate::NEncoder::CCoder::CCoder
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCOMCoder@NEncoder@NDeflate@NCompress@@6BICompressSetCoderProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ENDP	; NCompress::NDeflate::NEncoder::CCOMCoder::CCOMCoder
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
EXTRN	_IID_ICompressSetCoderProperties:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface, COMDAT
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN8@QueryInter@2
$LN7@QueryInter@2:
	mov	DWORD PTR tv75[ebp], 0
$LN8@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@QueryInter@2
$LN4@QueryInter@2:
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN10@QueryInter@2
$LN9@QueryInter@2:
	mov	DWORD PTR tv86[ebp], 0
$LN10@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN3@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN5@QueryInter@2
$LN3@QueryInter@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
	xor	eax, eax
$LN5@QueryInter@2:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::AddRef, COMDAT
; Line 193
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z ; NCompress::NDeflate::NEncoder::CCOMCoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73184 = -8						; size = 4
$T73183 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::Release, COMDAT
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73184[ebp], edx
	mov	eax, DWORD PTR $T73184[ebp]
	mov	DWORD PTR $T73183[ebp], eax
	cmp	DWORD PTR $T73183[ebp], 0
	je	SHORT $LN4@Release@2
	push	1
	mov	ecx, DWORD PTR $T73183[ebp]
	call	??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@2
$LN4@Release@2:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@2:
	xor	eax, eax
$LN2@Release@2:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder::Release
_TEXT	ENDS
PUBLIC	??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CCOMCoder::~CCOMCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCOMCoder@NEncoder@NDeflate@NCompress@@QAEPAXI@Z ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`vftable'
PUBLIC	??_R4ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderProperties@@6B@ DD 00H		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderProperties@@@8
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressSetCoderProperties@@6B@ DD FLAT:??_R4ICompressSetCoderProperties@@6B@ ; ICompressSetCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderProperties@@QAE@XZ PROC		; ICompressSetCoderProperties::ICompressSetCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderProperties@@QAE@XZ ENDP		; ICompressSetCoderProperties::ICompressSetCoderProperties
_TEXT	ENDS
EXTRN	??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ:PROC ; NCompress::NDeflate::NEncoder::CCoder::~CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ PROC	; NCompress::NDeflate::NEncoder::CCOMCoder::~CCOMCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CCoder::~CCoder
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCOMCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ENDP	; NCompress::NDeflate::NEncoder::CCOMCoder::~CCOMCoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ PROC	; NArchive::CSingleMethodProps::GetLevel, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\handlerout.h
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], -1
	jne	SHORT $LN3@GetLevel
	mov	DWORD PTR tv67[ebp], 5
	jmp	SHORT $LN4@GetLevel
$LN3@GetLevel:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv67[ebp], edx
$LN4@GetLevel:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLevel@CSingleMethodProps@NArchive@@QBEHXZ ENDP	; NArchive::CSingleMethodProps::GetLevel
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z PROC ; CSequentialInStreamWithCRC::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\instreamwithcrc.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CSequentialInStreamWithCRC@@QAEXPAUISequentialInStream@@@Z ENDP ; CSequentialInStreamWithCRC::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CSequentialInStreamWithCRC@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CSequentialInStreamWithCRC@@QAEXXZ PROC		; CSequentialInStreamWithCRC::Init, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	DWORD PTR [eax+20], 0
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28], 0
; Line 31
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], -1
; Line 32
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CSequentialInStreamWithCRC@@QAEXXZ ENDP		; CSequentialInStreamWithCRC::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ PROC		; CSequentialInStreamWithCRC::GetCRC, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	xor	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCRC@CSequentialInStreamWithCRC@@QBEIXZ ENDP		; CSequentialInStreamWithCRC::GetCRC
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ PROC	; CSequentialInStreamWithCRC::GetSize, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	mov	edx, DWORD PTR [ecx+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSize@CSequentialInStreamWithCRC@@QBE_KXZ ENDP	; CSequentialInStreamWithCRC::GetSize
_TEXT	ENDS
PUBLIC	??_7CSequentialInStreamWithCRC@@6B@		; CSequentialInStreamWithCRC::`vftable'
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??_R4CSequentialInStreamWithCRC@@6B@		; CSequentialInStreamWithCRC::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSequentialInStreamWithCRC@@@8		; CSequentialInStreamWithCRC `RTTI Type Descriptor'
PUBLIC	??_R3CSequentialInStreamWithCRC@@8		; CSequentialInStreamWithCRC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSequentialInStreamWithCRC@@8		; CSequentialInStreamWithCRC::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSequentialInStreamWithCRC@@8	; CSequentialInStreamWithCRC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	?QueryInterface@CSequentialInStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z ; CSequentialInStreamWithCRC::QueryInterface
PUBLIC	?AddRef@CSequentialInStreamWithCRC@@UAGKXZ	; CSequentialInStreamWithCRC::AddRef
PUBLIC	?Release@CSequentialInStreamWithCRC@@UAGKXZ	; CSequentialInStreamWithCRC::Release
EXTRN	?Read@CSequentialInStreamWithCRC@@UAGJPAXIPAI@Z:PROC ; CSequentialInStreamWithCRC::Read
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CSequentialInStreamWithCRC@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSequentialInStreamWithCRC@@8 DD FLAT:??_R0?AVCSequentialInStreamWithCRC@@@8 ; CSequentialInStreamWithCRC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSequentialInStreamWithCRC@@8
rdata$r	ENDS
;	COMDAT ??_R2CSequentialInStreamWithCRC@@8
rdata$r	SEGMENT
??_R2CSequentialInStreamWithCRC@@8 DD FLAT:??_R1A@?0A@EA@CSequentialInStreamWithCRC@@8 ; CSequentialInStreamWithCRC::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CSequentialInStreamWithCRC@@8
rdata$r	SEGMENT
??_R3CSequentialInStreamWithCRC@@8 DD 00H		; CSequentialInStreamWithCRC::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CSequentialInStreamWithCRC@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSequentialInStreamWithCRC@@@8
_DATA	SEGMENT
??_R0?AVCSequentialInStreamWithCRC@@@8 DD FLAT:??_7type_info@@6B@ ; CSequentialInStreamWithCRC `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSequentialInStreamWithCRC@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CSequentialInStreamWithCRC@@6B@
rdata$r	SEGMENT
??_R4CSequentialInStreamWithCRC@@6B@ DD 00H		; CSequentialInStreamWithCRC::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSequentialInStreamWithCRC@@@8
	DD	FLAT:??_R3CSequentialInStreamWithCRC@@8
rdata$r	ENDS
;	COMDAT ??_7CSequentialInStreamWithCRC@@6B@
CONST	SEGMENT
??_7CSequentialInStreamWithCRC@@6B@ DD FLAT:??_R4CSequentialInStreamWithCRC@@6B@ ; CSequentialInStreamWithCRC::`vftable'
	DD	FLAT:?QueryInterface@CSequentialInStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CSequentialInStreamWithCRC@@UAGKXZ
	DD	FLAT:?Release@CSequentialInStreamWithCRC@@UAGKXZ
	DD	FLAT:?Read@CSequentialInStreamWithCRC@@UAGJPAXIPAI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CSequentialInStreamWithCRC@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CSequentialInStreamWithCRC@@QAE@XZ PROC		; CSequentialInStreamWithCRC::CSequentialInStreamWithCRC, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CSequentialInStreamWithCRC@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CSequentialInStreamWithCRC@@QAE@XZ ENDP		; CSequentialInStreamWithCRC::CSequentialInStreamWithCRC
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CSequentialInStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CSequentialInStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z PROC ; CSequentialInStreamWithCRC::QueryInterface, COMDAT
; Line 17
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@3
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter@3
$LN2@QueryInter@3:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter@3
$LN1@QueryInter@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter@3:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CSequentialInStreamWithCRC@@UAGJABU_GUID@@PAPAX@Z ENDP ; CSequentialInStreamWithCRC::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CSequentialInStreamWithCRC@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CSequentialInStreamWithCRC@@UAGKXZ PROC		; CSequentialInStreamWithCRC::AddRef, COMDAT
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CSequentialInStreamWithCRC@@UAGKXZ ENDP		; CSequentialInStreamWithCRC::AddRef
_TEXT	ENDS
PUBLIC	??_GCSequentialInStreamWithCRC@@QAEPAXI@Z	; CSequentialInStreamWithCRC::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CSequentialInStreamWithCRC@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73218 = -8						; size = 4
$T73217 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CSequentialInStreamWithCRC@@UAGKXZ PROC	; CSequentialInStreamWithCRC::Release, COMDAT
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@3
$LN1@Release@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73218[ebp], edx
	mov	eax, DWORD PTR $T73218[ebp]
	mov	DWORD PTR $T73217[ebp], eax
	cmp	DWORD PTR $T73217[ebp], 0
	je	SHORT $LN4@Release@3
	push	1
	mov	ecx, DWORD PTR $T73217[ebp]
	call	??_GCSequentialInStreamWithCRC@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@3
$LN4@Release@3:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@3:
	xor	eax, eax
$LN2@Release@3:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CSequentialInStreamWithCRC@@UAGKXZ ENDP	; CSequentialInStreamWithCRC::Release
_TEXT	ENDS
PUBLIC	??1CSequentialInStreamWithCRC@@QAE@XZ		; CSequentialInStreamWithCRC::~CSequentialInStreamWithCRC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCSequentialInStreamWithCRC@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCSequentialInStreamWithCRC@@QAEPAXI@Z PROC		; CSequentialInStreamWithCRC::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSequentialInStreamWithCRC@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCSequentialInStreamWithCRC@@QAEPAXI@Z ENDP		; CSequentialInStreamWithCRC::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CSequentialInStreamWithCRC@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CSequentialInStreamWithCRC@@QAE@XZ PROC		; CSequentialInStreamWithCRC::~CSequentialInStreamWithCRC, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSequentialInStreamWithCRC@@QAE@XZ ENDP		; CSequentialInStreamWithCRC::~CSequentialInStreamWithCRC
_TEXT	ENDS
PUBLIC	?SetProperties@CHandler@NGz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z ; NArchive::NGz::CHandler::SetProperties
EXTRN	?SetProperties@CSingleMethodProps@NArchive@@QAEJPBQB_WPBUtagPROPVARIANT@@I@Z:PROC ; NArchive::CSingleMethodProps::SetProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_names$ = 12						; size = 4
_values$ = 16						; size = 4
_numProps$ = 20						; size = 4
?SetProperties@CHandler@NGz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z PROC ; NArchive::NGz::CHandler::SetProperties
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 1031
	push	ebp
	mov	ebp, esp
; Line 1032
	mov	eax, DWORD PTR _numProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _values$[ebp]
	push	ecx
	mov	edx, DWORD PTR _names$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	?SetProperties@CSingleMethodProps@NArchive@@QAEJPBQB_WPBUtagPROPVARIANT@@I@Z ; NArchive::CSingleMethodProps::SetProperties
; Line 1033
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?SetProperties@CHandler@NGz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z ENDP ; NArchive::NGz::CHandler::SetProperties
_TEXT	ENDS
PUBLIC	??0CHandler@NGz@NArchive@@QAE@XZ		; NArchive::NGz::CHandler::CHandler
xdata$x	SEGMENT
__unwindtable$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ$0
__ehfuncinfo$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T73230 = -20						; size = 4
$T73229 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ PROC	; NArchive::NGz::CreateArc
; Line 1042
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	168					; 000000a8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73230[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T73230[ebp], 0
	je	SHORT $LN3@CreateArc
	mov	ecx, DWORD PTR $T73230[ebp]
	call	??0CHandler@NGz@NArchive@@QAE@XZ	; NArchive::NGz::CHandler::CHandler
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@CreateArc
$LN3@CreateArc:
	mov	DWORD PTR tv74[ebp], 0
$LN4@CreateArc:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T73229[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T73229[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ$0:
	mov	eax, DWORD PTR $T73230[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateArc@NGz@NArchive@@YGPAUIInArchive@@XZ ENDP	; NArchive::NGz::CreateArc
PUBLIC	??1CSingleMethodProps@NArchive@@QAE@XZ		; NArchive::CSingleMethodProps::~CSingleMethodProps
PUBLIC	??1?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
PUBLIC	??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ; CMyComPtr<ICompressCoder>::operator=
PUBLIC	??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder
PUBLIC	??0CSingleMethodProps@NArchive@@QAE@XZ		; NArchive::CSingleMethodProps::CSingleMethodProps
PUBLIC	??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ	; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
PUBLIC	??0?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
PUBLIC	??_7CHandler@NGz@NArchive@@6BISetProperties@@@	; NArchive::NGz::CHandler::`vftable'
PUBLIC	??_7CHandler@NGz@NArchive@@6BIOutArchive@@@	; NArchive::NGz::CHandler::`vftable'
PUBLIC	??_7CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@	; NArchive::NGz::CHandler::`vftable'
PUBLIC	??_7CHandler@NGz@NArchive@@6BIInArchive@@@	; NArchive::NGz::CHandler::`vftable'
PUBLIC	??0ISetProperties@@QAE@XZ			; ISetProperties::ISetProperties
PUBLIC	??0IOutArchive@@QAE@XZ				; IOutArchive::IOutArchive
PUBLIC	??0IArchiveOpenSeq@@QAE@XZ			; IArchiveOpenSeq::IArchiveOpenSeq
PUBLIC	??0IInArchive@@QAE@XZ				; IInArchive::IInArchive
PUBLIC	??_R4CHandler@NGz@NArchive@@6BIInArchive@@@	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHandler@NGz@NArchive@@@8		; NArchive::NGz::CHandler `RTTI Type Descriptor'
PUBLIC	??_R3CHandler@NGz@NArchive@@8			; NArchive::NGz::CHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHandler@NGz@NArchive@@8			; NArchive::NGz::CHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHandler@NGz@NArchive@@8		; NArchive::NGz::CHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IInArchive@@8			; IInArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIInArchive@@@8				; IInArchive `RTTI Type Descriptor'
PUBLIC	??_R3IInArchive@@8				; IInArchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInArchive@@8				; IInArchive::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@IArchiveOpenSeq@@8			; IArchiveOpenSeq::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUIArchiveOpenSeq@@@8			; IArchiveOpenSeq `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveOpenSeq@@8				; IArchiveOpenSeq::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveOpenSeq@@8				; IArchiveOpenSeq::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveOpenSeq@@8		; IArchiveOpenSeq::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@IOutArchive@@8			; IOutArchive::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUIOutArchive@@@8				; IOutArchive `RTTI Type Descriptor'
PUBLIC	??_R3IOutArchive@@8				; IOutArchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IOutArchive@@8				; IOutArchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IOutArchive@@8			; IOutArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@ISetProperties@@8			; ISetProperties::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUISetProperties@@@8			; ISetProperties `RTTI Type Descriptor'
PUBLIC	??_R3ISetProperties@@8				; ISetProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISetProperties@@8				; ISetProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISetProperties@@8			; ISetProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NGz::CHandler::QueryInterface
PUBLIC	?AddRef@CHandler@NGz@NArchive@@UAGKXZ		; NArchive::NGz::CHandler::AddRef
PUBLIC	?Release@CHandler@NGz@NArchive@@UAGKXZ		; NArchive::NGz::CHandler::Release
PUBLIC	??_R4CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@ ; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CHandler@NGz@NArchive@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CHandler@NGz@NArchive@@W3AGKXZ		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{4}'
PUBLIC	?Release@CHandler@NGz@NArchive@@W3AGKXZ		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{4}'
PUBLIC	??_R4CHandler@NGz@NArchive@@6BIOutArchive@@@	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CHandler@NGz@NArchive@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CHandler@NGz@NArchive@@W7AGKXZ		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{8}'
PUBLIC	?Release@CHandler@NGz@NArchive@@W7AGKXZ		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{8}'
PUBLIC	??_R4CHandler@NGz@NArchive@@6BISetProperties@@@	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CHandler@NGz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CHandler@NGz@NArchive@@WM@AGKXZ		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{12}'
PUBLIC	?Release@CHandler@NGz@NArchive@@WM@AGKXZ	; [thunk]:NArchive::NGz::CHandler::Release`adjustor{12}'
;	COMDAT ??_R4CHandler@NGz@NArchive@@6BISetProperties@@@
rdata$r	SEGMENT
??_R4CHandler@NGz@NArchive@@6BISetProperties@@@ DD 00H	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCHandler@NGz@NArchive@@@8
	DD	FLAT:??_R3CHandler@NGz@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R4CHandler@NGz@NArchive@@6BIOutArchive@@@
rdata$r	SEGMENT
??_R4CHandler@NGz@NArchive@@6BIOutArchive@@@ DD 00H	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@NGz@NArchive@@@8
	DD	FLAT:??_R3CHandler@NGz@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R4CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@
rdata$r	SEGMENT
??_R4CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@ DD 00H	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@NGz@NArchive@@@8
	DD	FLAT:??_R3CHandler@NGz@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISetProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISetProperties@@8 DD FLAT:??_R0?AUISetProperties@@@8 ; ISetProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ISetProperties@@8
rdata$r	SEGMENT
??_R2ISetProperties@@8 DD FLAT:??_R1A@?0A@EA@ISetProperties@@8 ; ISetProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISetProperties@@8
rdata$r	SEGMENT
??_R3ISetProperties@@8 DD 00H				; ISetProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISetProperties@@@8
_DATA	SEGMENT
??_R0?AUISetProperties@@@8 DD FLAT:??_7type_info@@6B@	; ISetProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISetProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ISetProperties@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ISetProperties@@8 DD FLAT:??_R0?AUISetProperties@@@8 ; ISetProperties::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IOutArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IOutArchive@@8 DD FLAT:??_R0?AUIOutArchive@@@8 ; IOutArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2IOutArchive@@8
rdata$r	SEGMENT
??_R2IOutArchive@@8 DD FLAT:??_R1A@?0A@EA@IOutArchive@@8 ; IOutArchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IOutArchive@@8
rdata$r	SEGMENT
??_R3IOutArchive@@8 DD 00H				; IOutArchive::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIOutArchive@@@8
_DATA	SEGMENT
??_R0?AUIOutArchive@@@8 DD FLAT:??_7type_info@@6B@	; IOutArchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIOutArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@IOutArchive@@8
rdata$r	SEGMENT
??_R17?0A@EA@IOutArchive@@8 DD FLAT:??_R0?AUIOutArchive@@@8 ; IOutArchive::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveOpenSeq@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveOpenSeq@@8 DD FLAT:??_R0?AUIArchiveOpenSeq@@@8 ; IArchiveOpenSeq::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveOpenSeq@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveOpenSeq@@8
rdata$r	SEGMENT
??_R2IArchiveOpenSeq@@8 DD FLAT:??_R1A@?0A@EA@IArchiveOpenSeq@@8 ; IArchiveOpenSeq::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveOpenSeq@@8
rdata$r	SEGMENT
??_R3IArchiveOpenSeq@@8 DD 00H				; IArchiveOpenSeq::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IArchiveOpenSeq@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveOpenSeq@@@8
_DATA	SEGMENT
??_R0?AUIArchiveOpenSeq@@@8 DD FLAT:??_7type_info@@6B@	; IArchiveOpenSeq `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveOpenSeq@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@IArchiveOpenSeq@@8
rdata$r	SEGMENT
??_R13?0A@EA@IArchiveOpenSeq@@8 DD FLAT:??_R0?AUIArchiveOpenSeq@@@8 ; IArchiveOpenSeq::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveOpenSeq@@8
rdata$r	ENDS
;	COMDAT ??_R2IInArchive@@8
rdata$r	SEGMENT
??_R2IInArchive@@8 DD FLAT:??_R1A@?0A@EA@IInArchive@@8	; IInArchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IInArchive@@8
rdata$r	SEGMENT
??_R3IInArchive@@8 DD 00H				; IInArchive::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInArchive@@@8
_DATA	SEGMENT
??_R0?AUIInArchive@@@8 DD FLAT:??_7type_info@@6B@	; IInArchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IInArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInArchive@@8 DD FLAT:??_R0?AUIInArchive@@@8 ; IInArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CHandler@NGz@NArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHandler@NGz@NArchive@@8 DD FLAT:??_R0?AVCHandler@NGz@NArchive@@@8 ; NArchive::NGz::CHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHandler@NGz@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2CHandler@NGz@NArchive@@8
rdata$r	SEGMENT
??_R2CHandler@NGz@NArchive@@8 DD FLAT:??_R1A@?0A@EA@CHandler@NGz@NArchive@@8 ; NArchive::NGz::CHandler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IInArchive@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IArchiveOpenSeq@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@IOutArchive@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ISetProperties@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CHandler@NGz@NArchive@@8
rdata$r	SEGMENT
??_R3CHandler@NGz@NArchive@@8 DD 00H			; NArchive::NGz::CHandler::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2CHandler@NGz@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHandler@NGz@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCHandler@NGz@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::NGz::CHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHandler@NGz@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CHandler@NGz@NArchive@@6BIInArchive@@@
rdata$r	SEGMENT
??_R4CHandler@NGz@NArchive@@6BIInArchive@@@ DD 00H	; NArchive::NGz::CHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@NGz@NArchive@@@8
	DD	FLAT:??_R3CHandler@NGz@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_7CHandler@NGz@NArchive@@6BISetProperties@@@
CONST	SEGMENT
??_7CHandler@NGz@NArchive@@6BISetProperties@@@ DD FLAT:??_R4CHandler@NGz@NArchive@@6BISetProperties@@@ ; NArchive::NGz::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@NGz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@NGz@NArchive@@WM@AGKXZ
	DD	FLAT:?Release@CHandler@NGz@NArchive@@WM@AGKXZ
	DD	FLAT:?SetProperties@CHandler@NGz@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CHandler@NGz@NArchive@@6BIOutArchive@@@
CONST	SEGMENT
??_7CHandler@NGz@NArchive@@6BIOutArchive@@@ DD FLAT:??_R4CHandler@NGz@NArchive@@6BIOutArchive@@@ ; NArchive::NGz::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@NGz@NArchive@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@NGz@NArchive@@W7AGKXZ
	DD	FLAT:?Release@CHandler@NGz@NArchive@@W7AGKXZ
	DD	FLAT:?UpdateItems@CHandler@NGz@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	DD	FLAT:?GetFileTimeType@CHandler@NGz@NArchive@@UAGJPAI@Z
CONST	ENDS
;	COMDAT ??_7CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@
CONST	SEGMENT
??_7CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@ DD FLAT:??_R4CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@ ; NArchive::NGz::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@NGz@NArchive@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@NGz@NArchive@@W3AGKXZ
	DD	FLAT:?Release@CHandler@NGz@NArchive@@W3AGKXZ
	DD	FLAT:?OpenSeq@CHandler@NGz@NArchive@@UAGJPAUISequentialInStream@@@Z
CONST	ENDS
;	COMDAT ??_7CHandler@NGz@NArchive@@6BIInArchive@@@
CONST	SEGMENT
??_7CHandler@NGz@NArchive@@6BIInArchive@@@ DD FLAT:??_R4CHandler@NGz@NArchive@@6BIInArchive@@@ ; NArchive::NGz::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@NGz@NArchive@@UAGKXZ
	DD	FLAT:?Release@CHandler@NGz@NArchive@@UAGKXZ
	DD	FLAT:?Open@CHandler@NGz@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	FLAT:?Close@CHandler@NGz@NArchive@@UAGJXZ
	DD	FLAT:?GetNumberOfItems@CHandler@NGz@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetProperty@CHandler@NGz@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?Extract@CHandler@NGz@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	FLAT:?GetArchiveProperty@CHandler@NGz@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?GetNumberOfProperties@CHandler@NGz@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetPropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z
	DD	FLAT:?GetNumberOfArchiveProperties@CHandler@NGz@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetArchivePropertyInfo@CHandler@NGz@NArchive@@UAGJIPAPA_WPAKPAG@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CHandler@NGz@NArchive@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CHandler@NGz@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CHandler@NGz@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CHandler@NGz@NArchive@@QAE@XZ
_TEXT	SEGMENT
tv169 = -28						; size = 4
$T73240 = -24						; size = 4
$T73239 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CHandler@NGz@NArchive@@QAE@XZ PROC			; NArchive::NGz::CHandler::CHandler, COMDAT
; _this$ = ecx
; Line 489
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CHandler@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IInArchive@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0IArchiveOpenSeq@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0IOutArchive@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0ISetProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CHandler@NGz@NArchive@@6BIInArchive@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CHandler@NGz@NArchive@@6BIArchiveOpenSeq@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CHandler@NGz@NArchive@@6BIOutArchive@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CHandler@NGz@NArchive@@6BISetProperties@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CItem@NGz@NArchive@@QAE@XZ		; NArchive::NGz::CItem::CItem
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0CSingleMethodProps@NArchive@@QAE@XZ	; NArchive::CSingleMethodProps::CSingleMethodProps
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 491
	push	3440					; 00000d70H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73240[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T73240[ebp], 0
	je	SHORT $LN3@CHandler
	mov	ecx, DWORD PTR $T73240[ebp]
	call	??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN4@CHandler
$LN3@CHandler:
	mov	DWORD PTR tv169[ebp], 0
$LN4@CHandler:
	mov	ecx, DWORD PTR tv169[ebp]
	mov	DWORD PTR $T73239[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T73239[ebp]
	mov	DWORD PTR [edx+112], eax
; Line 492
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ; CMyComPtr<ICompressCoder>::operator=
; Line 493
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1CItem@NGz@NArchive@@QAE@XZ
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	jmp	??1CSingleMethodProps@NArchive@@QAE@XZ
__unwindfunclet$??0CHandler@NGz@NArchive@@QAE@XZ$4:
	mov	eax, DWORD PTR $T73240[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CHandler@NGz@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CHandler@NGz@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CHandler@NGz@NArchive@@QAE@XZ ENDP			; NArchive::NGz::CHandler::CHandler
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8	; NCompress::NDeflate::NDecoder::CCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressGetInStreamProcessedSize@@@8	; ICompressGetInStreamProcessedSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressGetInStreamProcessedSize@@8	; ICompressGetInStreamProcessedSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressGetInStreamProcessedSize@@8	; ICompressGetInStreamProcessedSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressSetInStream@@@8		; ICompressSetInStream `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUICompressSetOutStreamSize@@@8		; ICompressSetOutStreamSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}'
PUBLIC	??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}'
EXTRN	??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::CCoder
EXTRN	?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::Code
EXTRN	??_ECCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z:PROC ; NCompress::NDeflate::NDecoder::CCOMCoder::`vector deleting destructor'
EXTRN	?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::CodeResume
EXTRN	?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::GetInStreamProcessedSize
EXTRN	?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::SetInStream
EXTRN	?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ:PROC ; NCompress::NDeflate::NDecoder::CCoder::ReleaseInStream
EXTRN	?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::SetOutStreamSize
EXTRN	?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::Read
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R2ICompressSetOutStreamSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R3ICompressSetOutStreamSize@@8 DD 00H		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetOutStreamSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetOutStreamSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetOutStreamSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetOutStreamSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetInStream@@8
rdata$r	SEGMENT
??_R2ICompressSetInStream@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetInStream@@8 ; ICompressSetInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetInStream@@8
rdata$r	SEGMENT
??_R3ICompressSetInStream@@8 DD 00H			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetInStream@@@8
_DATA	SEGMENT
??_R0?AUICompressSetInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R2ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R3ICompressGetInStreamProcessedSize@@8 DD 00H	; ICompressGetInStreamProcessedSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressGetInStreamProcessedSize@@@8
_DATA	SEGMENT
??_R0?AUICompressGetInStreamProcessedSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressGetInStreamProcessedSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressGetInStreamProcessedSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCoder@NDecoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0cH
	DD	FLAT:??_R2CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NDecoder::CCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoder@NDecoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCOMCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NDecoder::CCOMCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCOMCoder@NDecoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCOMCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCOMCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCOMCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCOMCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:??_ECCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
	DD	FLAT:?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z ; NCompress::NDeflate::NDecoder::CCoder::CCoder
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CCOMCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCOMCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCOMCoder::CCOMCoder
_TEXT	ENDS
EXTRN	_IID_ISequentialInStream:BYTE
EXTRN	_IID_ICompressSetOutStreamSize:BYTE
EXTRN	_IID_ICompressSetInStream:BYTE
EXTRN	_IID_ICompressGetInStreamProcessedSize:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv148 = -20						; size = 4
tv138 = -16						; size = 4
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter@4
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter@4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN14@QueryInter@4
$LN13@QueryInter@4:
	mov	DWORD PTR tv75[ebp], 0
$LN14@QueryInter@4:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN9@QueryInter@4
$LN10@QueryInter@4:
	push	OFFSET _IID_ICompressGetInStreamProcessedSize
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter@4
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter@4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN16@QueryInter@4
$LN15@QueryInter@4:
	mov	DWORD PTR tv86[ebp], 0
$LN16@QueryInter@4:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN9@QueryInter@4
$LN8@QueryInter@4:
	push	OFFSET _IID_ICompressSetInStream
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@4
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter@4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN18@QueryInter@4
$LN17@QueryInter@4:
	mov	DWORD PTR tv128[ebp], 0
$LN18@QueryInter@4:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter@4
$LN6@QueryInter@4:
	push	OFFSET _IID_ICompressSetOutStreamSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@4
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN19@QueryInter@4
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN20@QueryInter@4
$LN19@QueryInter@4:
	mov	DWORD PTR tv138[ebp], 0
$LN20@QueryInter@4:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter@4
$LN4@QueryInter@4:
	push	OFFSET _IID_ISequentialInStream
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@4
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN21@QueryInter@4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN22@QueryInter@4
$LN21@QueryInter@4:
	mov	DWORD PTR tv148[ebp], 0
$LN22@QueryInter@4:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv148[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter@4
$LN2@QueryInter@4:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter@4
$LN9@QueryInter@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
	xor	eax, eax
$LN11@QueryInter@4:
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ PROC	; NCompress::NDeflate::NDecoder::CCoder::AddRef, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T73274 = -8						; size = 4
$T73273 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::Release, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+20], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	jmp	SHORT $LN2@Release@4
$LN1@Release@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73274[ebp], edx
	mov	eax, DWORD PTR $T73274[ebp]
	mov	DWORD PTR $T73273[ebp], eax
	cmp	DWORD PTR $T73273[ebp], 0
	je	SHORT $LN4@Release@4
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T73273[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T73273[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release@4
$LN4@Release@4:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release@4:
	xor	eax, eax
$LN2@Release@4:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::Release
_TEXT	ENDS
PUBLIC	??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCOMCoder::~CCOMCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z PROC ; NCompress::NDeflate::NDecoder::CCOMCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCOMCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z ENDP ; NCompress::NDeflate::NDecoder::CCOMCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ	; NCompress::NDeflate::NDecoder::CCoder::~CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCOMCoder::~CCOMCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::~CCoder
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCOMCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCOMCoder::~CCOMCoder
_TEXT	ENDS
PUBLIC	??1CLzOutWindow@@QAE@XZ				; CLzOutWindow::~CLzOutWindow
PUBLIC	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
EXTRN	??_ECCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::`vector deleting destructor'
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:??_ECCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
	DD	FLAT:?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1
__ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCoder::~CCoder, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1CLzOutWindow@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CLzOutWindow@@QAE@XZ
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::~CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z PROC	; NCompress::NDeflate::NDecoder::CCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::~CCoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z ENDP	; NCompress::NDeflate::NDecoder::CCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::~CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::~CLzOutWindow
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
_TEXT	ENDS
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
_TEXT	ENDS
PUBLIC	??1COneMethodInfo@@QAE@XZ			; COneMethodInfo::~COneMethodInfo
PUBLIC	??0COneMethodInfo@@QAE@XZ			; COneMethodInfo::COneMethodInfo
EXTRN	?Init@CSingleMethodProps@NArchive@@QAEXXZ:PROC	; NArchive::CSingleMethodProps::Init
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\handlerout.h
xdata$x	SEGMENT
__unwindtable$??0CSingleMethodProps@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSingleMethodProps@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CSingleMethodProps@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CSingleMethodProps@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CSingleMethodProps@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSingleMethodProps@NArchive@@QAE@XZ PROC		; NArchive::CSingleMethodProps::CSingleMethodProps, COMDAT
; _this$ = ecx
; Line 60
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CSingleMethodProps@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0COneMethodInfo@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CSingleMethodProps@NArchive@@QAEXXZ ; NArchive::CSingleMethodProps::Init
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSingleMethodProps@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1COneMethodInfo@@QAE@XZ
__ehhandler$??0CSingleMethodProps@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CSingleMethodProps@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CSingleMethodProps@NArchive@@QAE@XZ ENDP		; NArchive::CSingleMethodProps::CSingleMethodProps
PUBLIC	??1CMethodProps@@QAE@XZ				; CMethodProps::~CMethodProps
PUBLIC	??0CMethodProps@@QAE@XZ				; CMethodProps::CMethodProps
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0COneMethodInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1
__ehfuncinfo$??0COneMethodInfo@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0COneMethodInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0COneMethodInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0COneMethodInfo@@QAE@XZ PROC				; COneMethodInfo::COneMethodInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0COneMethodInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CMethodProps@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CMethodProps@@QAE@XZ
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0COneMethodInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0COneMethodInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0COneMethodInfo@@QAE@XZ ENDP				; COneMethodInfo::COneMethodInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1COneMethodInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1
__ehfuncinfo$??1COneMethodInfo@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1COneMethodInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1COneMethodInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1COneMethodInfo@@QAE@XZ PROC				; COneMethodInfo::~COneMethodInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1COneMethodInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CMethodProps@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CMethodProps@@QAE@XZ
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1COneMethodInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1COneMethodInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1COneMethodInfo@@QAE@XZ ENDP				; COneMethodInfo::~COneMethodInfo
PUBLIC	??0CProps@@QAE@XZ				; CProps::CProps
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMethodProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMethodProps@@QAE@XZ PROC				; CMethodProps::CMethodProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CProps@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMethodProps@@QAE@XZ ENDP				; CMethodProps::CMethodProps
_TEXT	ENDS
PUBLIC	??1CProps@@QAE@XZ				; CProps::~CProps
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CMethodProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMethodProps@@QAE@XZ PROC				; CMethodProps::~CMethodProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CProps@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CMethodProps@@QAE@XZ ENDP				; CMethodProps::~CMethodProps
_TEXT	ENDS
PUBLIC	??0?$CObjectVector@UCProp@@@@QAE@XZ		; CObjectVector<CProp>::CObjectVector<CProp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CProps@@QAE@XZ PROC					; CProps::CProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@UCProp@@@@QAE@XZ	; CObjectVector<CProp>::CObjectVector<CProp>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CProps@@QAE@XZ ENDP					; CProps::CProps
_TEXT	ENDS
PUBLIC	??1?$CObjectVector@UCProp@@@@QAE@XZ		; CObjectVector<CProp>::~CObjectVector<CProp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CProps@@QAE@XZ PROC					; CProps::~CProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CObjectVector@UCProp@@@@QAE@XZ	; CObjectVector<CProp>::~CObjectVector<CProp>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CProps@@QAE@XZ ENDP					; CProps::~CProps
_TEXT	ENDS
EXTRN	_IID_ISetProperties:BYTE
EXTRN	_IID_IOutArchive:BYTE
EXTRN	_IID_IArchiveOpenSeq:BYTE
EXTRN	_IID_IInArchive:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z PROC ; NArchive::NGz::CHandler::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 483
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter@5
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter@5
$LN10@QueryInter@5:
	push	OFFSET _IID_IInArchive
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter@5
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter@5
$LN8@QueryInter@5:
	push	OFFSET _IID_IArchiveOpenSeq
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@5
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter@5
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN14@QueryInter@5
$LN13@QueryInter@5:
	mov	DWORD PTR tv92[ebp], 0
$LN14@QueryInter@5:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter@5
$LN6@QueryInter@5:
	push	OFFSET _IID_IOutArchive
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@5
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter@5
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN16@QueryInter@5
$LN15@QueryInter@5:
	mov	DWORD PTR tv134[ebp], 0
$LN16@QueryInter@5:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter@5
$LN4@QueryInter@5:
	push	OFFSET _IID_ISetProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@5
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter@5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN18@QueryInter@5
$LN17@QueryInter@5:
	mov	DWORD PTR tv144[ebp], 0
$LN18@QueryInter@5:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter@5
$LN2@QueryInter@5:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter@5
$LN9@QueryInter@5:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
	xor	eax, eax
$LN11@QueryInter@5:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z ENDP ; NArchive::NGz::CHandler::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@NGz@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CHandler@NGz@NArchive@@UAGKXZ PROC		; NArchive::NGz::CHandler::AddRef, COMDAT
; Line 483
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CHandler@NGz@NArchive@@UAGKXZ ENDP		; NArchive::NGz::CHandler::AddRef
_TEXT	ENDS
PUBLIC	??_GCHandler@NGz@NArchive@@QAEPAXI@Z		; NArchive::NGz::CHandler::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CHandler@NGz@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T73364 = -8						; size = 4
$T73363 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CHandler@NGz@NArchive@@UAGKXZ PROC		; NArchive::NGz::CHandler::Release, COMDAT
; Line 483
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN2@Release@5
$LN1@Release@5:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T73364[ebp], edx
	mov	eax, DWORD PTR $T73364[ebp]
	mov	DWORD PTR $T73363[ebp], eax
	cmp	DWORD PTR $T73363[ebp], 0
	je	SHORT $LN4@Release@5
	push	1
	mov	ecx, DWORD PTR $T73363[ebp]
	call	??_GCHandler@NGz@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@5
$LN4@Release@5:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@5:
	xor	eax, eax
$LN2@Release@5:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CHandler@NGz@NArchive@@UAGKXZ ENDP		; NArchive::NGz::CHandler::Release
_TEXT	ENDS
PUBLIC	??1CHandler@NGz@NArchive@@QAE@XZ		; NArchive::NGz::CHandler::~CHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCHandler@NGz@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCHandler@NGz@NArchive@@QAEPAXI@Z PROC		; NArchive::NGz::CHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CHandler@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCHandler@NGz@NArchive@@QAEPAXI@Z ENDP		; NArchive::NGz::CHandler::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IInArchive@@6B@				; IInArchive::`vftable'
PUBLIC	??_R4IInArchive@@6B@				; IInArchive::`RTTI Complete Object Locator'
;	COMDAT ??_R4IInArchive@@6B@
rdata$r	SEGMENT
??_R4IInArchive@@6B@ DD 00H				; IInArchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIInArchive@@@8
	DD	FLAT:??_R3IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_7IInArchive@@6B@
CONST	SEGMENT
??_7IInArchive@@6B@ DD FLAT:??_R4IInArchive@@6B@	; IInArchive::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IInArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IInArchive@@QAE@XZ PROC				; IInArchive::IInArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IInArchive@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IInArchive@@QAE@XZ ENDP				; IInArchive::IInArchive
_TEXT	ENDS
PUBLIC	??_7IArchiveOpenSeq@@6B@			; IArchiveOpenSeq::`vftable'
PUBLIC	??_R4IArchiveOpenSeq@@6B@			; IArchiveOpenSeq::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveOpenSeq@@6B@
rdata$r	SEGMENT
??_R4IArchiveOpenSeq@@6B@ DD 00H			; IArchiveOpenSeq::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveOpenSeq@@@8
	DD	FLAT:??_R3IArchiveOpenSeq@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveOpenSeq@@6B@
CONST	SEGMENT
??_7IArchiveOpenSeq@@6B@ DD FLAT:??_R4IArchiveOpenSeq@@6B@ ; IArchiveOpenSeq::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveOpenSeq@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveOpenSeq@@QAE@XZ PROC				; IArchiveOpenSeq::IArchiveOpenSeq, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveOpenSeq@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveOpenSeq@@QAE@XZ ENDP				; IArchiveOpenSeq::IArchiveOpenSeq
_TEXT	ENDS
PUBLIC	??_7IOutArchive@@6B@				; IOutArchive::`vftable'
PUBLIC	??_R4IOutArchive@@6B@				; IOutArchive::`RTTI Complete Object Locator'
;	COMDAT ??_R4IOutArchive@@6B@
rdata$r	SEGMENT
??_R4IOutArchive@@6B@ DD 00H				; IOutArchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIOutArchive@@@8
	DD	FLAT:??_R3IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_7IOutArchive@@6B@
CONST	SEGMENT
??_7IOutArchive@@6B@ DD FLAT:??_R4IOutArchive@@6B@	; IOutArchive::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IOutArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOutArchive@@QAE@XZ PROC				; IOutArchive::IOutArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IOutArchive@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOutArchive@@QAE@XZ ENDP				; IOutArchive::IOutArchive
_TEXT	ENDS
PUBLIC	??_7ISetProperties@@6B@				; ISetProperties::`vftable'
PUBLIC	??_R4ISetProperties@@6B@			; ISetProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISetProperties@@6B@
rdata$r	SEGMENT
??_R4ISetProperties@@6B@ DD 00H				; ISetProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISetProperties@@@8
	DD	FLAT:??_R3ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ISetProperties@@6B@
CONST	SEGMENT
??_7ISetProperties@@6B@ DD FLAT:??_R4ISetProperties@@6B@ ; ISetProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISetProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISetProperties@@QAE@XZ PROC				; ISetProperties::ISetProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISetProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISetProperties@@QAE@XZ ENDP				; ISetProperties::ISetProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CSingleMethodProps@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CSingleMethodProps@NArchive@@QAE@XZ PROC		; NArchive::CSingleMethodProps::~CSingleMethodProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COneMethodInfo@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSingleMethodProps@NArchive@@QAE@XZ ENDP		; NArchive::CSingleMethodProps::~CSingleMethodProps
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CHandler@NGz@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$2
__ehfuncinfo$??1CHandler@NGz@NArchive@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CHandler@NGz@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CHandler@NGz@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CHandler@NGz@NArchive@@QAE@XZ PROC			; NArchive::NGz::CHandler::~CHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CHandler@NGz@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??1CSingleMethodProps@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1CItem@NGz@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1CItem@NGz@NArchive@@QAE@XZ
__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$??1CHandler@NGz@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	jmp	??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
__ehhandler$??1CHandler@NGz@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CHandler@NGz@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CHandler@NGz@NArchive@@QAE@XZ ENDP			; NArchive::NGz::CHandler::~CHandler
xdata$x	SEGMENT
__unwindtable$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ$0
__ehfuncinfo$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv75 = -28						; size = 4
tv74 = -24						; size = 4
$T73395 = -20						; size = 4
$T73394 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ PROC	; NArchive::NGz::CreateArcOut
; Line 1042
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	168					; 000000a8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T73395[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T73395[ebp], 0
	je	SHORT $LN3@CreateArcO
	mov	ecx, DWORD PTR $T73395[ebp]
	call	??0CHandler@NGz@NArchive@@QAE@XZ	; NArchive::NGz::CHandler::CHandler
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@CreateArcO
$LN3@CreateArcO:
	mov	DWORD PTR tv74[ebp], 0
$LN4@CreateArcO:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T73394[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	cmp	DWORD PTR $T73394[ebp], 0
	je	SHORT $LN5@CreateArcO
	mov	ecx, DWORD PTR $T73394[ebp]
	add	ecx, 8
	mov	DWORD PTR tv75[ebp], ecx
	jmp	SHORT $LN6@CreateArcO
$LN5@CreateArcO:
	mov	DWORD PTR tv75[ebp], 0
$LN6@CreateArcO:
	mov	eax, DWORD PTR tv75[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ$0:
	mov	eax, DWORD PTR $T73395[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateArcOut@NGz@NArchive@@YGPAUIOutArchive@@XZ ENDP	; NArchive::NGz::CreateArcOut
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z PROC ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UICompressProgressInfo@@@@QAE@PAUICompressProgressInfo@@@Z ENDP ; CMyComPtr<ICompressProgressInfo>::CMyComPtr<ICompressProgressInfo>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ PROC	; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressProgressInfo@@@@QAE@XZ ENDP	; CMyComPtr<ICompressProgressInfo>::~CMyComPtr<ICompressProgressInfo>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ PROC ; CMyComPtr<ICompressProgressInfo>::operator ICompressProgressInfo *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UICompressProgressInfo@@@@QBEPAUICompressProgressInfo@@XZ ENDP ; CMyComPtr<ICompressProgressInfo>::operator ICompressProgressInfo *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z PROC ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ENDP ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UISequentialInStream@@@@QAEPAPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@2
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@2:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@2
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@2:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialInStream>::operator=
_TEXT	ENDS
PUBLIC	?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ	; NBitl::CBaseDecoder<CInBuffer>::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CBaseDecoder<CInBuffer>::Init
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 90
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::Init
_TEXT	ENDS
PUBLIC	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z	; NBitl::CDecoder<CInBuffer>::MovePos
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::AlignToByte, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR [eax]
	and	ecx, 7
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::AlignToByte
_TEXT	ENDS
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z PROC ; NBitl::CBaseDecoder<CInBuffer>::Create, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ENDP ; NBitl::CBaseDecoder<CInBuffer>::Create
_TEXT	ENDS
PUBLIC	?GetStreamSize@CInBufferBase@@QBE_KXZ		; CInBufferBase::GetStreamSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::GetStreamSize, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetStreamSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetStreamSize
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStreamSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::GetStreamSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetStreamSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStreamSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetStreamSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	adc	edx, DWORD PTR [ecx+20]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStreamSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetStreamSize
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 32					; 00000020H
	sub	esi, DWORD PTR [ecx]
	shr	esi, 3
	xor	ecx, ecx
	sub	eax, esi
	sbb	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 4
	ja	SHORT $LN3@ExtraBitsW
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	shl	ecx, 3
	cmp	edx, ecx
	jb	SHORT $LN3@ExtraBitsW
	mov	DWORD PTR tv80[ebp], 0
	jmp	SHORT $LN4@ExtraBitsW
$LN3@ExtraBitsW:
	mov	DWORD PTR tv80[ebp], 1
$LN4@ExtraBitsW:
	mov	al, BYTE PTR tv80[ebp]
; Line 64
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@UCProp@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCProp@@@@QAE@XZ PROC		; CObjectVector<CProp>::CObjectVector<CProp>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCProp@@@@QAE@XZ ENDP		; CObjectVector<CProp>::CObjectVector<CProp>
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GCProp@@QAEPAXI@Z				; CProp::`scalar deleting destructor'
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCProp@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCProp@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCProp@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T73446 = -28						; size = 4
$T73445 = -24						; size = 4
_i$71954 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCProp@@@@QAE@XZ PROC		; CObjectVector<CProp>::~CObjectVector<CProp>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$71954[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$71954[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$71954[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$71954[ebp], eax
	mov	ecx, DWORD PTR _i$71954[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T73446[ebp], edx
	mov	eax, DWORD PTR $T73446[ebp]
	mov	DWORD PTR $T73445[ebp], eax
	cmp	DWORD PTR $T73445[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T73445[ebp]
	call	??_GCProp@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCProp@@@@QAE@XZ ENDP		; CObjectVector<CProp>::~CObjectVector<CProp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@5:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ PROC		; CMyComPtr<IInStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@6:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ ENDP		; CMyComPtr<IInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator IInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator IInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z PROC ; CMyComPtr<IInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@3
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@3:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@3
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@3:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ENDP ; CMyComPtr<IInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UIInStream@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UIInStream@@@@QBE_NXZ PROC		; CMyComPtr<IInStream>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UIInStream@@@@QBE_NXZ ENDP		; CMyComPtr<IInStream>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z PROC ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@6
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ENDP ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@7:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialOutStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@7:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialOutStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UISequentialOutStream@@@@QAEPAPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialOutStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@4
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@4:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@4
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@4:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialOutStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ PROC	; CMyComPtr<ISequentialOutStream>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UISequentialOutStream@@@@QBE_NXZ ENDP	; CMyComPtr<ISequentialOutStream>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ PROC		; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressCoder@@@@QAE@XZ ENDP		; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z PROC ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@8
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UICompressCoder@@@@QAE@PAUICompressCoder@@@Z ENDP ; CMyComPtr<ICompressCoder>::CMyComPtr<ICompressCoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ PROC		; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@9:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressCoder@@@@QAE@XZ ENDP		; CMyComPtr<ICompressCoder>::~CMyComPtr<ICompressCoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ PROC ; CMyComPtr<ICompressCoder>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressCoder@@@@QBEPAUICompressCoder@@XZ ENDP ; CMyComPtr<ICompressCoder>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z PROC ; CMyComPtr<ICompressCoder>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@5
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@5:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@5
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@5:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UICompressCoder@@@@QAEPAUICompressCoder@@PAU1@@Z ENDP ; CMyComPtr<ICompressCoder>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ PROC ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ENDP ; CMyComPtr<IArchiveOpenCallback>::operator IArchiveOpenCallback *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ PROC ; CMyComPtr<IArchiveOpenCallback>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveOpenCallback@@@@QBEPAUIArchiveOpenCallback@@XZ ENDP ; CMyComPtr<IArchiveOpenCallback>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ PROC ; CMyComPtr<IArchiveUpdateCallbackFile>::CMyComPtr<IArchiveUpdateCallbackFile>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ENDP ; CMyComPtr<IArchiveUpdateCallbackFile>::CMyComPtr<IArchiveUpdateCallbackFile>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ PROC ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@10
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@10:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAE@XZ ENDP ; CMyComPtr<IArchiveUpdateCallbackFile>::~CMyComPtr<IArchiveUpdateCallbackFile>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ PROC ; CMyComPtr<IArchiveUpdateCallbackFile>::operator IArchiveUpdateCallbackFile *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ ENDP ; CMyComPtr<IArchiveUpdateCallbackFile>::operator IArchiveUpdateCallbackFile *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ PROC ; CMyComPtr<IArchiveUpdateCallbackFile>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QAEPAPAUIArchiveUpdateCallbackFile@@XZ ENDP ; CMyComPtr<IArchiveUpdateCallbackFile>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ PROC ; CMyComPtr<IArchiveUpdateCallbackFile>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveUpdateCallbackFile@@@@QBEPAUIArchiveUpdateCallbackFile@@XZ ENDP ; CMyComPtr<IArchiveUpdateCallbackFile>::operator->
_TEXT	ENDS
PUBLIC	??1CProp@@QAE@XZ				; CProp::~CProp
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCProp@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCProp@@QAEPAXI@Z PROC				; CProp::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCProp@@QAEPAXI@Z ENDP				; CProp::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CProp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CProp@@QAE@XZ PROC					; CProp::~CProp, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CProp@@QAE@XZ ENDP					; CProp::~CProp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T73520 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T73520[ebp], ecx
	mov	edx, DWORD PTR $T73520[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z PROC	; NBitl::CDecoder<CInBuffer>::MovePos, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shr	edx, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], edx
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	4
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ENDP	; NBitl::CDecoder<CInBuffer>::MovePos
_TEXT	ENDS
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CBaseDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 32			; 00000020H
; Line 38
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 39
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CHandler@NGz@NArchive@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CHandler@NGz@NArchive@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NGz::CHandler::QueryInterface
?QueryInterface@CHandler@NGz@NArchive@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@NGz@NArchive@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CHandler@NGz@NArchive@@WM@AGKXZ PROC		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CHandler@NGz@NArchive@@UAGKXZ	; NArchive::NGz::CHandler::AddRef
?AddRef@CHandler@NGz@NArchive@@WM@AGKXZ ENDP		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CHandler@NGz@NArchive@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CHandler@NGz@NArchive@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NGz::CHandler::QueryInterface
?QueryInterface@CHandler@NGz@NArchive@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface
?QueryInterface@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CHandler@NGz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CHandler@NGz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CHandler@NGz@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NGz::CHandler::QueryInterface
?QueryInterface@CHandler@NGz@NArchive@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NArchive::NGz::CHandler::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CHandler@NGz@NArchive@@W3AGKXZ
_TEXT	SEGMENT
?Release@CHandler@NGz@NArchive@@W3AGKXZ PROC		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CHandler@NGz@NArchive@@UAGKXZ	; NArchive::NGz::CHandler::Release
?Release@CHandler@NGz@NArchive@@W3AGKXZ ENDP		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CHandler@NGz@NArchive@@W7AGKXZ
_TEXT	SEGMENT
?Release@CHandler@NGz@NArchive@@W7AGKXZ PROC		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CHandler@NGz@NArchive@@UAGKXZ	; NArchive::NGz::CHandler::Release
?Release@CHandler@NGz@NArchive@@W7AGKXZ ENDP		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NEncoder::CCOMCoder::Release
?Release@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CHandler@NGz@NArchive@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CHandler@NGz@NArchive@@WM@AGKXZ PROC		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CHandler@NGz@NArchive@@UAGKXZ	; NArchive::NGz::CHandler::Release
?Release@CHandler@NGz@NArchive@@WM@AGKXZ ENDP		; [thunk]:NArchive::NGz::CHandler::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@NGz@NArchive@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CHandler@NGz@NArchive@@W3AGKXZ PROC		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CHandler@NGz@NArchive@@UAGKXZ	; NArchive::NGz::CHandler::AddRef
?AddRef@CHandler@NGz@NArchive@@W3AGKXZ ENDP		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@NGz@NArchive@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CHandler@NGz@NArchive@@W7AGKXZ PROC		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CHandler@NGz@NArchive@@UAGKXZ	; NArchive::NGz::CHandler::AddRef
?AddRef@CHandler@NGz@NArchive@@W7AGKXZ ENDP		; [thunk]:NArchive::NGz::CHandler::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NEncoder::CCOMCoder::AddRef
?AddRef@CCOMCoder@NEncoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NEncoder::CCOMCoder::AddRef`adjustor{4}'
_TEXT	ENDS
PUBLIC	??0CRegisterArc@NGz@NArchive@@QAE@XZ		; NArchive::NGz::CRegisterArc::CRegisterArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_RegisterArc@NGz@NArchive@@YAXXZ
text$yc	SEGMENT
??__Eg_RegisterArc@NGz@NArchive@@YAXXZ PROC		; NArchive::NGz::`dynamic initializer for 'g_RegisterArc'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\gzhandler.cpp
; Line 1042
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_RegisterArc
	call	??0CRegisterArc@NGz@NArchive@@QAE@XZ	; NArchive::NGz::CRegisterArc::CRegisterArc
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_RegisterArc@NGz@NArchive@@YAXXZ ENDP		; NArchive::NGz::`dynamic initializer for 'g_RegisterArc''
text$yc	ENDS
EXTRN	?RegisterArc@@YGXPBUCArcInfo@@@Z:PROC		; RegisterArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRegisterArc@NGz@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRegisterArc@NGz@NArchive@@QAE@XZ PROC		; NArchive::NGz::CRegisterArc::CRegisterArc, COMDAT
; _this$ = ecx
; Line 1042
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET _g_ArcInfo
	call	?RegisterArc@@YGXPBUCArcInfo@@@Z	; RegisterArc
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRegisterArc@NGz@NArchive@@QAE@XZ ENDP		; NArchive::NGz::CRegisterArc::CRegisterArc
_TEXT	ENDS
_BSS	SEGMENT
_g_RegisterArc DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_RegisterArc$initializer$ DD FLAT:??__Eg_RegisterArc@NGz@NArchive@@YAXXZ
CRT$XCU	ENDS
END

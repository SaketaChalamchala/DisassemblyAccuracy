; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\ExtractCallbackConsole.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kError	DD	FLAT:$SG75384
_kTestString DD	FLAT:$SG75478
_kExtractString DD FLAT:$SG75480
_kSkipString DD	FLAT:$SG75482
_kMemoryExceptionMessage DD FLAT:$SG75484
_kExtracting DD	FLAT:$SG75486
_kTesting DD	FLAT:$SG75488
_kEverythingIsOk DD FLAT:$SG75490
_kNoFiles DD	FLAT:$SG75492
_kUnsupportedMethod DD FLAT:$SG75494
_kCrcFailed DD	FLAT:$SG75496
_kCrcFailedEncrypted DD FLAT:$SG75498
_kDataError DD	FLAT:$SG75500
_kDataErrorEncrypted DD FLAT:$SG75502
_kUnavailableData DD FLAT:$SG75504
_kUnexpectedEnd DD FLAT:$SG75506
_kDataAfterEnd DD FLAT:$SG75508
_kIsNotArc DD	FLAT:$SG75510
_kHeadersError DD FLAT:$SG75512
_kWrongPassword DD FLAT:$SG75514
_kTab	DD	FLAT:$SG75543
_DATA	ENDS
CONST	SEGMENT
$SG75384 DB	'ERROR: ', 00H
$SG75389 DB	'Scan', 00H
	ORG $+3
$SG75414 DB	'bytes', 00H
	ORG $+2
$SG75424 DB	' (', 00H
	ORG $+1
$SG75431 DB	'folder', 00H
	ORG $+1
$SG75432 DB	'folders', 00H
$SG75433 DB	', ', 00H
	ORG $+1
$SG75434 DB	'file', 00H
	ORG $+3
$SG75435 DB	'files', 00H
	ORG $+2
$SG75436 DB	', ', 00H
	ORG $+1
$SG75438 DB	'alternate streams', 00H
	ORG $+2
$SG75439 DB	', ', 00H
	ORG $+1
$SG75478 DB	'T', 00H
	ORG $+2
$SG75480 DB	'-', 00H
	ORG $+2
$SG75482 DB	'.', 00H
	ORG $+2
$SG75484 DB	'Can''t allocate required memory!', 00H
$SG75486 DB	'Extracting archive: ', 00H
	ORG $+3
$SG75488 DB	'Testing archive: ', 00H
	ORG $+2
$SG75490 DB	'Everything is Ok', 00H
	ORG $+3
$SG75492 DB	'No files to process', 00H
$SG75494 DB	'Unsupported Method', 00H
	ORG $+1
$SG75496 DB	'CRC Failed', 00H
	ORG $+1
$SG75498 DB	'CRC Failed in encrypted file. Wrong password?', 00H
	ORG $+2
$SG75500 DB	'Data Error', 00H
	ORG $+1
$SG75502 DB	'Data Error in encrypted file. Wrong password?', 00H
	ORG $+2
$SG75504 DB	'Unavailable data', 00H
	ORG $+3
$SG75506 DB	'Unexpected end of data', 00H
	ORG $+1
$SG75508 DB	'There are some data after the end of the payload data', 00H
	ORG $+2
$SG75510 DB	'Is not archive', 00H
	ORG $+1
$SG75512 DB	'Headers Error', 00H
	ORG $+2
$SG75514 DB	'Wrong password', 00H
	ORG $+1
$SG75516 DB	'Is not archive', 00H
	ORG $+1
$SG75517 DB	'Headers Error', 00H
	ORG $+2
$SG75518 DB	'Headers Error in encrypted archive. Wrong password?', 00H
$SG75519 DB	'Unavailable start of archive', 00H
	ORG $+3
$SG75520 DB	'Unconfirmed start of archive', 00H
	ORG $+3
$SG75521 DB	'Unexpected end of archive', 00H
	ORG $+2
$SG75522 DB	'There are data after the end of archive', 00H
$SG75523 DB	'Unsupported method', 00H
	ORG $+1
$SG75524 DB	'Unsupported feature', 00H
$SG75525 DB	'Data Error', 00H
	ORG $+1
$SG75526 DB	'CRC Error', 00H
	ORG $+2
_k_ErrorFlagsMessages DD FLAT:$SG75516
	DD	FLAT:$SG75517
	DD	FLAT:$SG75518
	DD	FLAT:$SG75519
	DD	FLAT:$SG75520
	DD	FLAT:$SG75521
	DD	FLAT:$SG75522
	DD	FLAT:$SG75523
	DD	FLAT:$SG75524
	DD	FLAT:$SG75525
	DD	FLAT:$SG75526
$SG75543 DB	'  ', 00H
	ORG $+1
$SG75550 DB	'Path:     ', 00H
	ORG $+1
$SG75553 DB	'Size:     ', 00H
	ORG $+1
$SG75559 DB	'Modified: ', 00H
	ORG $+1
$SG75575 DB	'Would you like to replace the existing file:', 0aH, 00H
	ORG $+2
$SG75576 DB	'with the file from archive:', 0aH, 00H
	ORG $+3
$SG75614 DB	'???', 00H
$SG75620 DB	' <', 00H
	ORG $+1
$SG75621 DB	'>', 00H
	ORG $+2
$SG75661 DB	'Error #', 00H
$SG75674 DB	' : ', 00H
$SG75706 DB	'Open', 00H
	ORG $+3
$SG75744 DB	' as [', 00H
	ORG $+2
$SG75745 DB	'] archive', 00H
	ORG $+2
$SG75753 DB	'W', 00H, 'A', 00H, 'R', 00H, 'N', 00H, 'I', 00H, 'N', 00H
	DB	'G', 00H, ':', 00H, 0aH, 00H, 00H, 00H
$SG75755 DB	'The archive is open with offset', 00H
$SG75757 DB	'Can not open the file', 00H
	ORG $+2
$SG75758 DB	'The file is open', 00H
	ORG $+3
$SG75780 DB	'ERRORS:', 00H
$SG75783 DB	'ERRORS:', 00H
$SG75792 DB	'WARNINGS:', 00H
	ORG $+2
$SG75795 DB	'WARNINGS:', 00H
	ORG $+2
$SG75817 DB	'Can''t allocate required memory', 00H
	ORG $+1
$SG75841 DB	'Sub items Errors: ', 00H
CONST	ENDS
PUBLIC	?NeedPercents@CExtractScanConsole@@ABE_NXZ	; CExtractScanConsole::NeedPercents
PUBLIC	?StartScanning@CExtractScanConsole@@QAEXXZ	; CExtractScanConsole::StartScanning
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartScanning@CExtractScanConsole@@QAEXXZ PROC		; CExtractScanConsole::StartScanning
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CExtractScanConsole@@ABE_NXZ ; CExtractScanConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@StartScann
; Line 41
	push	OFFSET $SG75389
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
$LN2@StartScann:
; Line 42
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartScanning@CExtractScanConsole@@QAEXXZ ENDP		; CExtractScanConsole::StartScanning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedPercents@CExtractScanConsole@@ABE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NeedPercents@CExtractScanConsole@@ABE_NXZ PROC		; CExtractScanConsole::NeedPercents, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+180], 0
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedPercents@CExtractScanConsole@@ABE_NXZ ENDP		; CExtractScanConsole::NeedPercents
_TEXT	ENDS
PUBLIC	?GetTotalBytes@CDirItemsStat@@QBE_KXZ		; CDirItemsStat::GetTotalBytes
PUBLIC	?ScanProgress@CExtractScanConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z ; CExtractScanConsole::ScanProgress
EXTRN	?Print@CPercentPrinter@@QAEXXZ:PROC		; CPercentPrinter::Print
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_st$ = 8						; size = 4
_path$ = 12						; size = 4
___formal$ = 16						; size = 1
?ScanProgress@CExtractScanConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z PROC ; CExtractScanConsole::ScanProgress
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CExtractScanConsole@@ABE_NXZ ; CExtractScanConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@ScanProgre
; Line 48
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx]
	add	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx+4]
	adc	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], eax
	mov	DWORD PTR [edx+36], ecx
; Line 49
	mov	ecx, DWORD PTR _st$[ebp]
	call	?GetTotalBytes@CDirItemsStat@@QBE_KXZ	; CDirItemsStat::GetTotalBytes
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], edx
; Line 50
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 51
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@ScanProgre:
; Line 54
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 55
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ScanProgress@CExtractScanConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z ENDP ; CExtractScanConsole::ScanProgress
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTotalBytes@CDirItemsStat@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTotalBytes@CDirItemsStat@@QBE_KXZ PROC		; CDirItemsStat::GetTotalBytes, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	add	edx, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax+28]
	adc	esi, DWORD PTR [ecx+36]
	mov	eax, edx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalBytes@CDirItemsStat@@QBE_KXZ ENDP		; CDirItemsStat::GetTotalBytes
_TEXT	ENDS
PUBLIC	?TestBreakSignal@NConsoleClose@@YG_NXZ		; NConsoleClose::TestBreakSignal
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?CheckBreak2@@YGJXZ PROC				; CheckBreak2
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 31
	push	ebp
	mov	ebp, esp
; Line 32
	call	?TestBreakSignal@NConsoleClose@@YG_NXZ	; NConsoleClose::TestBreakSignal
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	and	eax, -2147467260			; 80004004H
; Line 33
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CheckBreak2@@YGJXZ ENDP				; CheckBreak2
_TEXT	ENDS
EXTRN	?g_BreakCounter@NConsoleClose@@3IA:DWORD	; NConsoleClose::g_BreakCounter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?TestBreakSignal@NConsoleClose@@YG_NXZ
_TEXT	SEGMENT
?TestBreakSignal@NConsoleClose@@YG_NXZ PROC		; NConsoleClose::TestBreakSignal, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\consoleclose.h
; Line 11
	push	ebp
	mov	ebp, esp
; Line 15
	xor	eax, eax
	cmp	DWORD PTR ?g_BreakCounter@NConsoleClose@@3IA, 0 ; NConsoleClose::g_BreakCounter
	setne	al
; Line 17
	pop	ebp
	ret	0
?TestBreakSignal@NConsoleClose@@YG_NXZ ENDP		; NConsoleClose::TestBreakSignal
_TEXT	ENDS
PUBLIC	_HRESULT_FROM_WIN32@4
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z	; CStdOutStream::operator<<
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?ClosePercentsAndFlush@CExtractScanConsole@@AAEXXZ ; CExtractScanConsole::ClosePercentsAndFlush
PUBLIC	?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z ; CExtractScanConsole::ScanError
EXTRN	?Flush@CStdOutStream@@QAE_NXZ:PROC		; CStdOutStream::Flush
EXTRN	??6CStdOutStream@@QAEAAV0@PB_W@Z:PROC		; CStdOutStream::operator<<
EXTRN	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z:PROC ; NWindows::NError::MyFormatMessage
EXTRN	?endl@@YGAAVCStdOutStream@@AAV1@@Z:PROC		; endl
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z$0
__ehfuncinfo$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv134 = -36						; size = 4
tv135 = -32						; size = 4
$T76819 = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z PROC ; CExtractScanConsole::ScanError
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 58
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercentsAndFlush@CExtractScanConsole@@AAEXXZ ; CExtractScanConsole::ClosePercentsAndFlush
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN1@ScanError
; Line 64
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _path$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _systemError$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T76819[ebp]
	push	edx
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv134[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _kError
	push	ecx
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T76819[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN1@ScanError:
; Line 67
	mov	ecx, DWORD PTR _systemError$[ebp]
	push	ecx
	call	_HRESULT_FROM_WIN32@4
; Line 68
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z$0:
	lea	ecx, DWORD PTR $T76819[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ScanError@CExtractScanConsole@@UAEJABVUString@@K@Z ENDP ; CExtractScanConsole::ScanError
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T76831 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T76831[ebp], ecx
	mov	edx, DWORD PTR $T76831[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT _HRESULT_FROM_WIN32@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32@4 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
_HRESULT_FROM_WIN32@4 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z PROC	; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ENDP	; CStdOutStream::operator<<
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
EXTRN	?ClosePrint@CPercentPrinter@@QAEX_N@Z:PROC	; CPercentPrinter::ClosePrint
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ClosePercentsAndFlush@CExtractScanConsole@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercentsAndFlush@CExtractScanConsole@@AAEXXZ PROC	; CExtractScanConsole::ClosePercentsAndFlush, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.h
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CExtractScanConsole@@ABE_NXZ ; CExtractScanConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce
; Line 29
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce:
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN3@ClosePerce
; Line 31
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN3@ClosePerce:
; Line 32
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercentsAndFlush@CExtractScanConsole@@AAEXXZ ENDP	; CExtractScanConsole::ClosePercentsAndFlush
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
EXTRN	?Add_Space@AString@@QAEXXZ:PROC			; AString::Add_Space
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
EXTRN	?ConvertUInt64ToString@@YGX_KPAD@Z:PROC		; ConvertUInt64ToString
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_temp$ = -40						; size = 32
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_val$ = 12						; size = 8
_name$ = 20						; size = 4
?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z PROC	; Print_UInt64_and_String
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 74
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _val$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 75
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 76
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 77
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 78
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Print_UInt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN5@Print_UInt:
	DD	1
	DD	$LN4@Print_UInt
$LN4@Print_UInt:
	DD	-40					; ffffffd8H
	DD	32					; 00000020H
	DD	$LN3@Print_UInt
$LN3@Print_UInt:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ENDP	; Print_UInt64_and_String
_TEXT	ENDS
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
PUBLIC	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z	; PrintSize_bytes_Smart
EXTRN	__aullshr:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_temp$ = -16						; size = 4
_c$ = -5						; size = 1
_numBits$ = -4						; size = 4
_s$ = 8							; size = 4
_val$ = 12						; size = 8
?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z PROC	; PrintSize_bytes_Smart
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 82
	push	OFFSET $SG75414
	mov	eax, DWORD PTR _val$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
; Line 84
	mov	eax, DWORD PTR _val$[ebp]
	or	eax, DWORD PTR _val$[ebp+4]
	jne	SHORT $LN4@PrintSize_
; Line 85
	jmp	$LN5@PrintSize_
$LN4@PrintSize_:
; Line 87
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
; Line 88
	mov	BYTE PTR _c$[ebp], 75			; 0000004bH
; Line 89
	mov	BYTE PTR _temp$[ebp], 75		; 0000004bH
	mov	BYTE PTR _temp$[ebp+1], 105		; 00000069H
	mov	BYTE PTR _temp$[ebp+2], 66		; 00000042H
	mov	BYTE PTR _temp$[ebp+3], 0
; Line 90
	cmp	DWORD PTR _val$[ebp+4], 2
	jb	SHORT $LN3@PrintSize_
	ja	SHORT $LN7@PrintSize_
	cmp	DWORD PTR _val$[ebp], -2147483648	; 80000000H
	jb	SHORT $LN3@PrintSize_
$LN7@PrintSize_:
	mov	DWORD PTR _numBits$[ebp], 30		; 0000001eH
	mov	BYTE PTR _c$[ebp], 71			; 00000047H
	jmp	SHORT $LN2@PrintSize_
$LN3@PrintSize_:
; Line 91
	cmp	DWORD PTR _val$[ebp+4], 0
	ja	SHORT $LN8@PrintSize_
	cmp	DWORD PTR _val$[ebp], 10485760		; 00a00000H
	jb	SHORT $LN2@PrintSize_
$LN8@PrintSize_:
	mov	DWORD PTR _numBits$[ebp], 20		; 00000014H
	mov	BYTE PTR _c$[ebp], 77			; 0000004dH
$LN2@PrintSize_:
; Line 92
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR _temp$[ebp], cl
; Line 93
	push	OFFSET $SG75424
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 94
	lea	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, 1
	xor	edx, edx
	mov	ecx, DWORD PTR _numBits$[ebp]
	call	__allshl
	add	eax, DWORD PTR _val$[ebp]
	adc	edx, DWORD PTR _val$[ebp+4]
	sub	eax, 1
	sbb	edx, 0
	mov	ecx, DWORD PTR _numBits$[ebp]
	call	__aullshr
	push	edx
	push	eax
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
; Line 95
	push	41					; 00000029H
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
$LN5@PrintSize_:
; Line 96
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@PrintSize_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN11@PrintSize_:
	DD	1
	DD	$LN10@PrintSize_
$LN10@PrintSize_:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN9@PrintSize_
$LN9@PrintSize_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z ENDP	; PrintSize_bytes_Smart
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
_TEXT	ENDS
PUBLIC	?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z ; Print_DirItemsStat
EXTRN	?Add_LF@AString@@QAEXXZ:PROC			; AString::Add_LF
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv169 = -24						; size = 4
tv74 = -20						; size = 4
tv149 = -16						; size = 4
tv66 = -12						; size = 4
tv136 = -8						; size = 4
tv129 = -4						; size = 4
_s$ = 8							; size = 4
_st$ = 12						; size = 4
?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z PROC ; Print_DirItemsStat
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 100
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR tv129[ebp]
	mov	edx, DWORD PTR tv129[ebp]
	mov	eax, DWORD PTR [ecx]
	or	eax, DWORD PTR [edx+4]
	je	SHORT $LN2@Print_DirI
; Line 102
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR tv136[ebp]
	cmp	DWORD PTR [edx], 1
	jne	SHORT $LN5@Print_DirI
	mov	eax, DWORD PTR tv136[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN5@Print_DirI
	mov	DWORD PTR tv66[ebp], OFFSET $SG75431
	jmp	SHORT $LN6@Print_DirI
$LN5@Print_DirI:
	mov	DWORD PTR tv66[ebp], OFFSET $SG75432
$LN6@Print_DirI:
	mov	ecx, DWORD PTR tv66[ebp]
	push	ecx
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
; Line 103
	push	OFFSET $SG75433
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
$LN2@Print_DirI:
; Line 105
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR tv149[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	SHORT $LN7@Print_DirI
	mov	edx, DWORD PTR tv149[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN7@Print_DirI
	mov	DWORD PTR tv74[ebp], OFFSET $SG75434
	jmp	SHORT $LN8@Print_DirI
$LN7@Print_DirI:
	mov	DWORD PTR tv74[ebp], OFFSET $SG75435
$LN8@Print_DirI:
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
; Line 106
	push	OFFSET $SG75436
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 107
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z ; PrintSize_bytes_Smart
; Line 108
	mov	eax, DWORD PTR _st$[ebp]
	mov	DWORD PTR tv169[ebp], eax
	mov	ecx, DWORD PTR tv169[ebp]
	mov	edx, DWORD PTR tv169[ebp]
	mov	eax, DWORD PTR [ecx+16]
	or	eax, DWORD PTR [edx+20]
	je	SHORT $LN3@Print_DirI
; Line 110
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Add_LF@AString@@QAEXXZ			; AString::Add_LF
; Line 111
	push	OFFSET $SG75438
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
; Line 112
	push	OFFSET $SG75439
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 113
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z ; PrintSize_bytes_Smart
$LN3@Print_DirI:
; Line 115
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z ENDP ; Print_DirItemsStat
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z ; CExtractScanConsole::PrintStat
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
xdata$x	SEGMENT
__unwindtable$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z$0
__ehfuncinfo$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$75445 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_st$ = 8						; size = 4
?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z PROC ; CExtractScanConsole::PrintStat
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@PrintStat
; Line 121
	lea	ecx, DWORD PTR _s$75445[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 122
	mov	ecx, DWORD PTR _st$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$75445[ebp]
	push	edx
	call	?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z ; Print_DirItemsStat
; Line 123
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$75445[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 124
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$75445[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN2@PrintStat:
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@PrintStat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@PrintStat:
	DD	1
	DD	$LN7@PrintStat
$LN7@PrintStat:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@PrintStat
$LN5@PrintStat:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z$0:
	lea	ecx, DWORD PTR _s$75445[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintStat@CExtractScanConsole@@QAEXABUCDirItemsStat@@@Z ENDP ; CExtractScanConsole::PrintStat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T76876 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T76876[ebp], ecx
	mov	edx, DWORD PTR $T76876[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
PUBLIC	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
PUBLIC	?NeedPercents@COpenCallbackConsole@@IBE_NXZ	; COpenCallbackConsole::NeedPercents
PUBLIC	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
PUBLIC	?SetTotal@CExtractCallbackConsole@@UAGJ_K@Z	; CExtractCallbackConsole::SetTotal
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T76881 = -16						; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_size$ = 12						; size = 8
?SetTotal@CExtractCallbackConsole@@UAGJ_K@Z PROC	; CExtractCallbackConsole::SetTotal
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 186
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 188
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@SetTotal
; Line 190
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+32], edx
	mov	eax, DWORD PTR _size$[ebp+4]
	mov	DWORD PTR [ecx+36], eax
; Line 191
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@SetTotal:
; Line 193
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76881[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76881[ebp]
; Line 194
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTotal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@SetTotal:
	DD	1
	DD	$LN5@SetTotal
$LN5@SetTotal:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@SetTotal
$LN4@SetTotal:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?SetTotal@CExtractCallbackConsole@@UAGJ_K@Z ENDP	; CExtractCallbackConsole::SetTotal
_TEXT	ENDS
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z PROC ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 158
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ENDP ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
_TEXT	ENDS
PUBLIC	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
_TEXT	ENDS
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::Unlock, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedPercents@COpenCallbackConsole@@IBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NeedPercents@COpenCallbackConsole@@IBE_NXZ PROC	; COpenCallbackConsole::NeedPercents, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\opencallbackconsole.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+172], 0
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedPercents@COpenCallbackConsole@@IBE_NXZ ENDP	; COpenCallbackConsole::NeedPercents
_TEXT	ENDS
PUBLIC	?SetCompleted@CExtractCallbackConsole@@UAGJPB_K@Z ; CExtractCallbackConsole::SetCompleted
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T76898 = -16						; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_completeValue$ = 12					; size = 4
?SetCompleted@CExtractCallbackConsole@@UAGJPB_K@Z PROC	; CExtractCallbackConsole::SetCompleted
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 198
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 200
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@SetComplet
; Line 202
	cmp	DWORD PTR _completeValue$[ebp], 0
	je	SHORT $LN1@SetComplet
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _completeValue$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+24], eax
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+28], edx
$LN1@SetComplet:
; Line 204
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN2@SetComplet:
; Line 206
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76898[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76898[ebp]
; Line 207
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SetComplet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@SetComplet:
	DD	1
	DD	$LN6@SetComplet
$LN6@SetComplet:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@SetComplet
$LN5@SetComplet:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?SetCompleted@CExtractCallbackConsole@@UAGJPB_K@Z ENDP	; CExtractCallbackConsole::SetCompleted
_TEXT	ENDS
PUBLIC	?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercentsAndFlush
PUBLIC	?AskOverwrite@CExtractCallbackConsole@@UAGJPB_WPBU_FILETIME@@PB_K012PAH@Z ; CExtractCallbackConsole::AskOverwrite
EXTRN	?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z:PROC ; ScanUserYesNoAllQuit
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv151 = -40						; size = 4
$T76906 = -36						; size = 4
$T76905 = -32						; size = 4
$T76904 = -28						; size = 4
$T76903 = -24						; size = 4
_overwriteAnswer$ = -20					; size = 4
___result__$75571 = -16					; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_existName$ = 12					; size = 4
_existTime$ = 16					; size = 4
_existSize$ = 20					; size = 4
_newName$ = 24						; size = 4
_newTime$ = 28						; size = 4
_newSize$ = 32						; size = 4
_answer$ = 36						; size = 4
?AskOverwrite@CExtractCallbackConsole@@UAGJPB_WPBU_FILETIME@@PB_K012PAH@Z PROC ; CExtractCallbackConsole::AskOverwrite
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 235
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 237
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR ___result__$75571[ebp], eax
	cmp	DWORD PTR ___result__$75571[ebp], 0
	je	SHORT $LN13@AskOverwri
	mov	eax, DWORD PTR ___result__$75571[ebp]
	mov	DWORD PTR $T76903[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76903[ebp]
	jmp	$LN14@AskOverwri
$LN13@AskOverwri:
; Line 239
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercentsAndFlush
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN12@AskOverwri
; Line 243
	push	OFFSET $SG75575
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 244
	mov	eax, DWORD PTR _existSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _existTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _existName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	push	ecx
	call	?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z ; PrintFileInfo
; Line 245
	push	OFFSET $SG75576
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 246
	mov	eax, DWORD PTR _newSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _newName$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	push	ecx
	call	?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z ; PrintFileInfo
$LN12@AskOverwri:
; Line 249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	push	eax
	call	?ScanUserYesNoAllQuit@@YG?AW4EEnum@NUserAnswerMode@@PAVCStdOutStream@@@Z ; ScanUserYesNoAllQuit
	mov	DWORD PTR _overwriteAnswer$[ebp], eax
; Line 251
	mov	ecx, DWORD PTR _overwriteAnswer$[ebp]
	mov	DWORD PTR tv151[ebp], ecx
	cmp	DWORD PTR tv151[ebp], 5
	ja	SHORT $LN3@AskOverwri
	mov	edx, DWORD PTR tv151[ebp]
	jmp	DWORD PTR $LN19@AskOverwri[edx*4]
$LN9@AskOverwri:
; Line 253
	mov	DWORD PTR $T76904[ebp], -2147467260	; 80004004H
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76904[ebp]
	jmp	$LN14@AskOverwri
$LN8@AskOverwri:
; Line 254
	mov	eax, DWORD PTR _answer$[ebp]
	mov	DWORD PTR [eax], 2
	jmp	SHORT $LN10@AskOverwri
$LN7@AskOverwri:
; Line 255
	mov	ecx, DWORD PTR _answer$[ebp]
	mov	DWORD PTR [ecx], 3
	jmp	SHORT $LN10@AskOverwri
$LN6@AskOverwri:
; Line 256
	mov	edx, DWORD PTR _answer$[ebp]
	mov	DWORD PTR [edx], 1
	jmp	SHORT $LN10@AskOverwri
$LN5@AskOverwri:
; Line 257
	mov	eax, DWORD PTR _answer$[ebp]
	mov	DWORD PTR [eax], 0
	jmp	SHORT $LN10@AskOverwri
$LN4@AskOverwri:
; Line 258
	mov	ecx, DWORD PTR _answer$[ebp]
	mov	DWORD PTR [ecx], 4
	jmp	SHORT $LN10@AskOverwri
$LN3@AskOverwri:
; Line 259
	mov	DWORD PTR $T76905[ebp], -2147467259	; 80004005H
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76905[ebp]
	jmp	SHORT $LN14@AskOverwri
$LN10@AskOverwri:
; Line 262
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	je	SHORT $LN2@AskOverwri
; Line 264
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 265
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	je	SHORT $LN2@AskOverwri
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN2@AskOverwri:
; Line 269
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76906[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76906[ebp]
$LN14@AskOverwri:
; Line 270
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@AskOverwri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	3
$LN18@AskOverwri:
	DD	1
	DD	$LN17@AskOverwri
$LN17@AskOverwri:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN16@AskOverwri
$LN16@AskOverwri:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
	npad	3
$LN19@AskOverwri:
	DD	$LN5@AskOverwri
	DD	$LN8@AskOverwri
	DD	$LN6@AskOverwri
	DD	$LN7@AskOverwri
	DD	$LN4@AskOverwri
	DD	$LN9@AskOverwri
?AskOverwrite@CExtractCallbackConsole@@UAGJPB_WPBU_FILETIME@@PB_K012PAH@Z ENDP ; CExtractCallbackConsole::AskOverwrite
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ PROC ; CExtractCallbackConsole::ClosePercentsAndFlush, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.h
; Line 82
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce@2
; Line 84
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce@2:
; Line 85
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN3@ClosePerce@2
; Line 86
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN3@ClosePerce@2:
; Line 87
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ ENDP ; CExtractCallbackConsole::ClosePercentsAndFlush
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?ConvertFileTimeToString@@YG_NABU_FILETIME@@PAD_N2@Z:PROC ; ConvertFileTimeToString
EXTRN	__imp__FileTimeToLocalFileTime@8:PROC
xdata$x	SEGMENT
__unwindtable$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z$0
__ehfuncinfo$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_locTime$75556 = -120					; size = 8
_temp$75555 = -104					; size = 64
_s$75552 = -32						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__so$ = 8						; size = 4
_path$ = 12						; size = 4
_ft$ = 16						; size = 4
_size$ = 20						; size = 4
?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z PROC ; PrintFileInfo
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 212
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 213
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	push	OFFSET $SG75550
	mov	ecx, DWORD PTR _kTab
	push	ecx
	mov	ecx, DWORD PTR __so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 214
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN4@PrintFileI
; Line 216
	lea	ecx, DWORD PTR _s$75552[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 217
	mov	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	lea	edx, DWORD PTR _s$75552[ebp]
	push	edx
	call	?PrintSize_bytes_Smart@@YGXAAVAString@@_K@Z ; PrintSize_bytes_Smart
; Line 218
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$75552[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	push	OFFSET $SG75553
	mov	eax, DWORD PTR _kTab
	push	eax
	mov	ecx, DWORD PTR __so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 219
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$75552[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN4@PrintFileI:
; Line 220
	cmp	DWORD PTR _ft$[ebp], 0
	je	SHORT $LN5@PrintFileI
; Line 224
	mov	esi, esp
	lea	ecx, DWORD PTR _locTime$75556[ebp]
	push	ecx
	mov	edx, DWORD PTR _ft$[ebp]
	push	edx
	call	DWORD PTR __imp__FileTimeToLocalFileTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@PrintFileI
; Line 225
	push	1
	push	1
	lea	eax, DWORD PTR _temp$75555[ebp]
	push	eax
	lea	ecx, DWORD PTR _locTime$75556[ebp]
	push	ecx
	call	?ConvertFileTimeToString@@YG_NABU_FILETIME@@PAD_N2@Z ; ConvertFileTimeToString
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@PrintFileI
; Line 226
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	eax, DWORD PTR _temp$75555[ebp]
	push	eax
	push	OFFSET $SG75559
	mov	ecx, DWORD PTR _kTab
	push	ecx
	mov	ecx, DWORD PTR __so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN5@PrintFileI:
; Line 228
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@PrintFileI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN13@PrintFileI:
	DD	3
	DD	$LN12@PrintFileI
$LN12@PrintFileI:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN8@PrintFileI
	DD	-104					; ffffff98H
	DD	64					; 00000040H
	DD	$LN9@PrintFileI
	DD	-120					; ffffff88H
	DD	8
	DD	$LN10@PrintFileI
$LN10@PrintFileI:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN9@PrintFileI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN8@PrintFileI:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z$0:
	lea	ecx, DWORD PTR _s$75552[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintFileInfo@@YGXPAVCStdOutStream@@PB_WPBU_FILETIME@@PB_K@Z ENDP ; PrintFileInfo
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercents_for_so
PUBLIC	?PrepareOperation@CExtractCallbackConsole@@UAGJPB_WHHPB_K@Z ; CExtractCallbackConsole::PrepareOperation
EXTRN	??6CStdOutStream@@QAEAAV0@_K@Z:PROC		; CStdOutStream::operator<<
EXTRN	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z:PROC ; CStdOutStream::PrintUString
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -36						; size = 4
tv70 = -32						; size = 4
$T76928 = -28						; size = 4
_show2$ = -21						; size = 1
_requiredLevel$ = -20					; size = 4
_s$ = -16						; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_name$ = 12						; size = 4
___formal$ = 16						; size = 4
_askExtractMode$ = 20					; size = 4
_position$ = 24						; size = 4
?PrepareOperation@CExtractCallbackConsole@@UAGJPB_WHHPB_K@Z PROC ; CExtractCallbackConsole::PrepareOperation
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 274
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 276
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 252				; 000000fcH
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 279
	mov	DWORD PTR _requiredLevel$[ebp], 1
; Line 281
	mov	ecx, DWORD PTR _askExtractMode$[ebp]
	mov	DWORD PTR tv70[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN14@PrepareOpe
	cmp	DWORD PTR tv70[ebp], 1
	je	SHORT $LN13@PrepareOpe
	cmp	DWORD PTR tv70[ebp], 2
	je	SHORT $LN12@PrepareOpe
	jmp	SHORT $LN11@PrepareOpe
$LN14@PrepareOpe:
; Line 283
	mov	edx, DWORD PTR _kExtractString
	mov	DWORD PTR _s$[ebp], edx
	jmp	SHORT $LN15@PrepareOpe
$LN13@PrepareOpe:
; Line 284
	mov	eax, DWORD PTR _kTestString
	mov	DWORD PTR _s$[ebp], eax
	jmp	SHORT $LN15@PrepareOpe
$LN12@PrepareOpe:
; Line 285
	mov	ecx, DWORD PTR _kSkipString
	mov	DWORD PTR _s$[ebp], ecx
	mov	DWORD PTR _requiredLevel$[ebp], 2
	jmp	SHORT $LN15@PrepareOpe
$LN11@PrepareOpe:
; Line 286
	mov	DWORD PTR _s$[ebp], OFFSET $SG75614
	mov	DWORD PTR _requiredLevel$[ebp], 2
$LN15@PrepareOpe:
; Line 289
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+352]
	cmp	eax, DWORD PTR _requiredLevel$[ebp]
	jb	SHORT $LN19@PrepareOpe
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN19@PrepareOpe
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN20@PrepareOpe
$LN19@PrepareOpe:
	mov	DWORD PTR tv83[ebp], 0
$LN20@PrepareOpe:
	mov	dl, BYTE PTR tv83[ebp]
	mov	BYTE PTR _show2$[ebp], dl
; Line 291
	movzx	eax, BYTE PTR _show2$[ebp]
	test	eax, eax
	je	$LN10@PrepareOpe
; Line 293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercents_for_so
; Line 295
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 296
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN9@PrepareOpe
; Line 297
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
$LN9@PrepareOpe:
; Line 298
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 300
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 240				; 000000f0H
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 301
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN8@PrepareOpe
; Line 302
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 240				; 000000f0H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN8@PrepareOpe:
; Line 303
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 228				; 000000e4H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 240				; 000000f0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Line 304
	cmp	DWORD PTR _position$[ebp], 0
	je	SHORT $LN7@PrepareOpe
; Line 305
	push	OFFSET $SG75621
	mov	ecx, DWORD PTR _position$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	push	OFFSET $SG75620
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+200]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@_K@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN7@PrepareOpe:
; Line 306
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+344]
	test	ecx, ecx
	je	SHORT $LN10@PrepareOpe
; Line 309
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN10@PrepareOpe:
; Line 312
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@PrepareOpe
; Line 314
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+348], 1
	jb	SHORT $LN4@PrepareOpe
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 318
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+348], 1
	ja	SHORT $LN2@PrepareOpe
	movzx	eax, BYTE PTR _show2$[ebp]
	test	eax, eax
	jne	SHORT $LN4@PrepareOpe
$LN2@PrepareOpe:
; Line 320
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 321
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN4@PrepareOpe
; Line 322
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN4@PrepareOpe:
; Line 325
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN5@PrepareOpe:
; Line 328
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76928[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76928[ebp]
; Line 329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@PrepareOpe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN23@PrepareOpe:
	DD	1
	DD	$LN22@PrepareOpe
$LN22@PrepareOpe:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN21@PrepareOpe
$LN21@PrepareOpe:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?PrepareOperation@CExtractCallbackConsole@@UAGJPB_WHHPB_K@Z ENDP ; CExtractCallbackConsole::PrepareOperation
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ PROC ; CExtractCallbackConsole::ClosePercents_for_so, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.h
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+200]
	cmp	eax, DWORD PTR [edx+188]
	jne	SHORT $LN2@ClosePerce@3
; Line 78
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce@3:
; Line 79
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ ENDP ; CExtractCallbackConsole::ClosePercents_for_so
_TEXT	ENDS
PUBLIC	?MessageError@CExtractCallbackConsole@@UAGJPB_W@Z ; CExtractCallbackConsole::MessageError
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T76940 = -24						; size = 4
$T76939 = -20						; size = 4
___result__$75634 = -16					; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_message$ = 12						; size = 4
?MessageError@CExtractCallbackConsole@@UAGJPB_W@Z PROC	; CExtractCallbackConsole::MessageError
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 333
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 335
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR ___result__$75634[ebp], eax
	cmp	DWORD PTR ___result__$75634[ebp], 0
	je	SHORT $LN2@MessageErr
	mov	eax, DWORD PTR ___result__$75634[ebp]
	mov	DWORD PTR $T76939[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76939[ebp]
	jmp	$LN3@MessageErr
$LN2@MessageErr:
; Line 337
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+336]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+340]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+336], edx
	mov	DWORD PTR [ecx+340], eax
; Line 338
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+328]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+332]
	adc	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+328], eax
	mov	DWORD PTR [edx+332], ecx
; Line 340
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercentsAndFlush
; Line 341
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+204], 0
	je	SHORT $LN1@MessageErr
; Line 343
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _kError
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 344
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN1@MessageErr:
; Line 347
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76940[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76940[ebp]
$LN3@MessageErr:
; Line 348
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@MessageErr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@MessageErr:
	DD	1
	DD	$LN6@MessageErr
$LN6@MessageErr:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@MessageErr
$LN5@MessageErr:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?MessageError@CExtractCallbackConsole@@UAGJPB_W@Z ENDP	; CExtractCallbackConsole::MessageError
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetExtractErrorMessage@@YGXHHAAVAString@@@Z	; SetExtractErrorMessage
EXTRN	?ConvertUInt32ToString@@YGXIPAD@Z:PROC		; ConvertUInt32ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -44						; size = 4
tv67 = -40						; size = 4
tv65 = -36						; size = 4
_temp$75660 = -28					; size = 16
_s$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_opRes$ = 8						; size = 4
_encrypted$ = 12					; size = 4
_dest$ = 16						; size = 4
?SetExtractErrorMessage@@YGXHHAAVAString@@@Z PROC	; SetExtractErrorMessage
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 352
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 353
	mov	DWORD PTR _s$[ebp], 0
; Line 355
	mov	eax, DWORD PTR _opRes$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 8
	ja	$LN12@SetExtract
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN23@SetExtract[edx*4]
$LN11@SetExtract:
; Line 358
	mov	eax, DWORD PTR _kUnsupportedMethod
	mov	DWORD PTR _s$[ebp], eax
; Line 359
	jmp	$LN12@SetExtract
$LN10@SetExtract:
; Line 361
	cmp	DWORD PTR _encrypted$[ebp], 0
	je	SHORT $LN16@SetExtract
	mov	ecx, DWORD PTR _kCrcFailedEncrypted
	mov	DWORD PTR tv67[ebp], ecx
	jmp	SHORT $LN17@SetExtract
$LN16@SetExtract:
	mov	edx, DWORD PTR _kCrcFailed
	mov	DWORD PTR tv67[ebp], edx
$LN17@SetExtract:
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 362
	jmp	SHORT $LN12@SetExtract
$LN9@SetExtract:
; Line 364
	cmp	DWORD PTR _encrypted$[ebp], 0
	je	SHORT $LN18@SetExtract
	mov	ecx, DWORD PTR _kDataErrorEncrypted
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN19@SetExtract
$LN18@SetExtract:
	mov	edx, DWORD PTR _kDataError
	mov	DWORD PTR tv69[ebp], edx
$LN19@SetExtract:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 365
	jmp	SHORT $LN12@SetExtract
$LN8@SetExtract:
; Line 367
	mov	ecx, DWORD PTR _kUnavailableData
	mov	DWORD PTR _s$[ebp], ecx
; Line 368
	jmp	SHORT $LN12@SetExtract
$LN7@SetExtract:
; Line 370
	mov	edx, DWORD PTR _kUnexpectedEnd
	mov	DWORD PTR _s$[ebp], edx
; Line 371
	jmp	SHORT $LN12@SetExtract
$LN6@SetExtract:
; Line 373
	mov	eax, DWORD PTR _kDataAfterEnd
	mov	DWORD PTR _s$[ebp], eax
; Line 374
	jmp	SHORT $LN12@SetExtract
$LN5@SetExtract:
; Line 376
	mov	ecx, DWORD PTR _kIsNotArc
	mov	DWORD PTR _s$[ebp], ecx
; Line 377
	jmp	SHORT $LN12@SetExtract
$LN4@SetExtract:
; Line 379
	mov	edx, DWORD PTR _kHeadersError
	mov	DWORD PTR _s$[ebp], edx
; Line 380
	jmp	SHORT $LN12@SetExtract
$LN3@SetExtract:
; Line 382
	mov	eax, DWORD PTR _kWrongPassword
	mov	DWORD PTR _s$[ebp], eax
$LN12@SetExtract:
; Line 386
	mov	ecx, DWORD PTR _kError
	push	ecx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 387
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN2@SetExtract
; Line 388
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 389
	jmp	SHORT $LN14@SetExtract
$LN2@SetExtract:
; Line 392
	lea	eax, DWORD PTR _temp$75660[ebp]
	push	eax
	mov	ecx, DWORD PTR _opRes$[ebp]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 393
	push	OFFSET $SG75661
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 394
	lea	edx, DWORD PTR _temp$75660[ebp]
	push	edx
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
$LN14@SetExtract:
; Line 396
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@SetExtract
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN22@SetExtract:
	DD	1
	DD	$LN21@SetExtract
$LN21@SetExtract:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN20@SetExtract
$LN20@SetExtract:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
	npad	3
$LN23@SetExtract:
	DD	$LN11@SetExtract
	DD	$LN9@SetExtract
	DD	$LN10@SetExtract
	DD	$LN8@SetExtract
	DD	$LN7@SetExtract
	DD	$LN6@SetExtract
	DD	$LN5@SetExtract
	DD	$LN4@SetExtract
	DD	$LN3@SetExtract
?SetExtractErrorMessage@@YGXHHAAVAString@@@Z ENDP	; SetExtractErrorMessage
_TEXT	ENDS
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?SetOperationResult@CExtractCallbackConsole@@UAGJHH@Z ; CExtractCallbackConsole::SetOperationResult
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
$T76955 = -36						; size = 4
_s$75672 = -28						; size = 12
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_opRes$ = 12						; size = 4
_encrypted$ = 16					; size = 4
?SetOperationResult@CExtractCallbackConsole@@UAGJHH@Z PROC ; CExtractCallbackConsole::SetOperationResult
; Line 399
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 400
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 402
	cmp	DWORD PTR _opRes$[ebp], 0
	jne	SHORT $LN5@SetOperati
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@SetOperati
; Line 406
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 407
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 408
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+44]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], edx
	mov	DWORD PTR [ecx+44], eax
$LN4@SetOperati:
; Line 411
	jmp	$LN3@SetOperati
$LN5@SetOperati:
; Line 413
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+336]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+340]
	adc	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+336], eax
	mov	DWORD PTR [edx+340], ecx
; Line 414
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+332]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+328], ecx
	mov	DWORD PTR [eax+332], edx
; Line 416
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+204], 0
	je	$LN3@SetOperati
; Line 418
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercentsAndFlush
; Line 420
	lea	ecx, DWORD PTR _s$75672[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
; Line 421
	lea	edx, DWORD PTR _s$75672[ebp]
	push	edx
	mov	eax, DWORD PTR _encrypted$[ebp]
	push	eax
	mov	ecx, DWORD PTR _opRes$[ebp]
	push	ecx
	call	?SetExtractErrorMessage@@YGXHHAAVAString@@@Z ; SetExtractErrorMessage
; Line 423
	lea	ecx, DWORD PTR _s$75672[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 424
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 252				; 000000fcH
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@SetOperati
; Line 425
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 252				; 000000fcH
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG75674
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
$LN1@SetOperati:
; Line 426
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 427
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
; Line 428
	lea	ecx, DWORD PTR _s$75672[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN3@SetOperati:
; Line 431
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T76955[ebp], eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76955[ebp]
; Line 432
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SetOperati
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN11@SetOperati:
	DD	2
	DD	$LN10@SetOperati
$LN10@SetOperati:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@SetOperati
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN9@SetOperati
$LN9@SetOperati:
	DB	115					; 00000073H
	DB	0
$LN8@SetOperati:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?SetOperationResult@CExtractCallbackConsole@@UAGJHH@Z ENDP ; CExtractCallbackConsole::SetOperationResult
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
_TEXT	ENDS
PUBLIC	?ReportExtractResult@CExtractCallbackConsole@@UAGJHHPB_W@Z ; CExtractCallbackConsole::ReportExtractResult
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_opRes$ = 12						; size = 4
_encrypted$ = 16					; size = 4
_name$ = 20						; size = 4
?ReportExtractResult@CExtractCallbackConsole@@UAGJHHPB_W@Z PROC ; CExtractCallbackConsole::ReportExtractResult
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 435
	push	ebp
	mov	ebp, esp
	push	esi
; Line 436
	cmp	DWORD PTR _opRes$[ebp], 0
	je	SHORT $LN1@ReportExtr
; Line 438
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 439
	mov	esi, esp
	mov	ecx, DWORD PTR _encrypted$[ebp]
	push	ecx
	mov	edx, DWORD PTR _opRes$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@ReportExtr
$LN1@ReportExtr:
; Line 442
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
$LN2@ReportExtr:
; Line 443
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?ReportExtractResult@CExtractCallbackConsole@@UAGJHHPB_W@Z ENDP ; CExtractCallbackConsole::ReportExtractResult
_TEXT	ENDS
PUBLIC	?SetPassword@CExtractCallbackConsole@@UAEJABVUString@@@Z ; CExtractCallbackConsole::SetPassword
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_password$ = 8						; size = 4
?SetPassword@CExtractCallbackConsole@@UAEJABVUString@@@Z PROC ; CExtractCallbackConsole::SetPassword
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 451
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+211], 1
; Line 452
	mov	ecx, DWORD PTR _password$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 453
	xor	eax, eax
; Line 454
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPassword@CExtractCallbackConsole@@UAEJABVUString@@@Z ENDP ; CExtractCallbackConsole::SetPassword
_TEXT	ENDS
PUBLIC	?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z ; CExtractCallbackConsole::CryptoGetTextPassword
xdata$x	SEGMENT
__catchsym$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$0
__tryblocktable$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$3
__unwindtable$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv84 = -44						; size = 4
tv83 = -40						; size = 4
$T76966 = -36						; size = 4
$T76965 = -32						; size = 4
_lock$75693 = -24					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_password$ = 12						; size = 4
?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z PROC ; CExtractCallbackConsole::CryptoGetTextPassword
; Line 457
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 458
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 459
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$75693[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR tv83[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 460
	mov	esi, esp
	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T76965[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _lock$75693[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T76965[ebp]
	jmp	SHORT $LN2@CryptoGetT
__catch$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$0:
; Line 461
	mov	DWORD PTR $T76966[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN8@CryptoGetT
	ret	0
	mov	eax, __tryend$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$1
	ret	0
__tryend$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@CryptoGetT
$LN8@CryptoGetT:
	mov	eax, DWORD PTR $T76966[ebp]
$LN2@CryptoGetT:
; Line 462
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@CryptoGetT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN13@CryptoGetT:
	DD	1
	DD	$LN12@CryptoGetT
$LN12@CryptoGetT:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@CryptoGetT
$LN10@CryptoGetT:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z$2:
	lea	ecx, DWORD PTR _lock$75693[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoGetTextPassword@CExtractCallbackConsole@@UAGJPAPA_W@Z ENDP ; CExtractCallbackConsole::CryptoGetTextPassword
PUBLIC	?BeforeOpen@CExtractCallbackConsole@@UAEJPB_W_N@Z ; CExtractCallbackConsole::BeforeOpen
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv92 = -12						; size = 4
___result__$75702 = -8					; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_testMode$ = 12						; size = 1
?BeforeOpen@CExtractCallbackConsole@@UAEJPB_W_N@Z PROC	; CExtractCallbackConsole::BeforeOpen
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 468
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR ___result__$75702[ebp], eax
	cmp	DWORD PTR ___result__$75702[ebp], 0
	je	SHORT $LN3@BeforeOpen
	mov	eax, DWORD PTR ___result__$75702[ebp]
	jmp	$LN4@BeforeOpen
$LN3@BeforeOpen:
; Line 470
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+264]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+268]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], ecx
	mov	DWORD PTR [eax+268], edx
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+272], 0
; Line 472
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+273], 0
; Line 473
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+336], 0
	mov	DWORD PTR [eax+340], 0
; Line 475
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercents_for_so
; Line 476
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN2@BeforeOpen
; Line 477
	movzx	edx, BYTE PTR _testMode$[ebp]
	test	edx, edx
	je	SHORT $LN6@BeforeOpen
	mov	eax, DWORD PTR _kTesting
	mov	DWORD PTR tv92[ebp], eax
	jmp	SHORT $LN7@BeforeOpen
$LN6@BeforeOpen:
	mov	ecx, DWORD PTR _kExtracting
	mov	DWORD PTR tv92[ebp], ecx
$LN7@BeforeOpen:
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN2@BeforeOpen:
; Line 479
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@BeforeOpen
; Line 480
	push	OFFSET $SG75706
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
$LN1@BeforeOpen:
; Line 481
	xor	eax, eax
$LN4@BeforeOpen:
; Line 482
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?BeforeOpen@CExtractCallbackConsole@@UAEJPB_W_N@Z ENDP	; CExtractCallbackConsole::BeforeOpen
_TEXT	ENDS
PUBLIC	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z	; PrintErrorFlags
xdata$x	SEGMENT
__unwindtable$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z$0
__ehfuncinfo$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv84 = -32						; size = 4
tv85 = -28						; size = 4
$T76986 = -24						; size = 12
__$EHRec$ = -12						; size = 12
_so$ = 8						; size = 4
_s$ = 12						; size = 4
_errorFlags$ = 16					; size = 4
?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z PROC	; PrintErrorFlags
; Line 518
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 519
	cmp	DWORD PTR _errorFlags$[ebp], 0
	jne	SHORT $LN1@PrintError
; Line 520
	jmp	SHORT $LN2@PrintError
$LN1@PrintError:
; Line 521
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _errorFlags$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T76986[ebp]
	push	ecx
	call	?GetOpenArcErrorMessage@@YG?AVAString@@I@Z ; GetOpenArcErrorMessage
	mov	DWORD PTR tv85[ebp], eax
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR tv84[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv84[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T76986[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN2@PrintError:
; Line 522
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z$0:
	lea	ecx, DWORD PTR $T76986[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ENDP	; PrintErrorFlags
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	__$ArrayPad$
EXTRN	??0AString@@QAE@ABV0@@Z:PROC			; AString::AString
EXTRN	?ConvertUInt32ToHex@@YGXIPAD@Z:PROC		; ConvertUInt32ToHex
xdata$x	SEGMENT
__unwindtable$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z$0
__ehfuncinfo$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T76996 = -76						; size = 4
_sz$75730 = -68						; size = 16
_m$75727 = -48						; size = 4
_f$75725 = -44						; size = 4
_i$75721 = -40						; size = 4
_s$ = -32						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_errorFlags$ = 12					; size = 4
?GetOpenArcErrorMessage@@YG?AVAString@@I@Z PROC		; GetOpenArcErrorMessage
; Line 488
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T76996[ebp], 0
; Line 489
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 491
	mov	DWORD PTR _i$75721[ebp], 0
	jmp	SHORT $LN7@GetOpenArc
$LN6@GetOpenArc:
	mov	eax, DWORD PTR _i$75721[ebp]
	add	eax, 1
	mov	DWORD PTR _i$75721[ebp], eax
$LN7@GetOpenArc:
	cmp	DWORD PTR _i$75721[ebp], 11		; 0000000bH
	jae	SHORT $LN5@GetOpenArc
; Line 493
	mov	edx, 1
	mov	ecx, DWORD PTR _i$75721[ebp]
	shl	edx, cl
	mov	DWORD PTR _f$75725[ebp], edx
; Line 494
	mov	eax, DWORD PTR _errorFlags$[ebp]
	and	eax, DWORD PTR _f$75725[ebp]
	jne	SHORT $LN4@GetOpenArc
; Line 495
	jmp	SHORT $LN6@GetOpenArc
$LN4@GetOpenArc:
; Line 496
	mov	ecx, DWORD PTR _i$75721[ebp]
	mov	edx, DWORD PTR _k_ErrorFlagsMessages[ecx*4]
	mov	DWORD PTR _m$75727[ebp], edx
; Line 497
	lea	ecx, DWORD PTR _s$[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@GetOpenArc
; Line 498
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Add_LF@AString@@QAEXXZ			; AString::Add_LF
$LN3@GetOpenArc:
; Line 499
	mov	ecx, DWORD PTR _m$75727[ebp]
	push	ecx
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 500
	mov	edx, DWORD PTR _f$75725[ebp]
	not	edx
	and	edx, DWORD PTR _errorFlags$[ebp]
	mov	DWORD PTR _errorFlags$[ebp], edx
; Line 501
	jmp	SHORT $LN6@GetOpenArc
$LN5@GetOpenArc:
; Line 503
	cmp	DWORD PTR _errorFlags$[ebp], 0
	je	SHORT $LN2@GetOpenArc
; Line 506
	mov	BYTE PTR _sz$75730[ebp], 48		; 00000030H
; Line 507
	mov	BYTE PTR _sz$75730[ebp+1], 120		; 00000078H
; Line 508
	lea	eax, DWORD PTR _sz$75730[ebp+2]
	push	eax
	mov	ecx, DWORD PTR _errorFlags$[ebp]
	push	ecx
	call	?ConvertUInt32ToHex@@YGXIPAD@Z		; ConvertUInt32ToHex
; Line 509
	lea	ecx, DWORD PTR _s$[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@GetOpenArc
; Line 510
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Add_LF@AString@@QAEXXZ			; AString::Add_LF
$LN1@GetOpenArc:
; Line 511
	lea	eax, DWORD PTR _sz$75730[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
$LN2@GetOpenArc:
; Line 514
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	edx, DWORD PTR $T76996[ebp]
	or	edx, 1
	mov	DWORD PTR $T76996[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 515
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@GetOpenArc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN17@GetOpenArc:
	DD	2
	DD	$LN16@GetOpenArc
$LN16@GetOpenArc:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN13@GetOpenArc
	DD	-68					; ffffffbcH
	DD	16					; 00000010H
	DD	$LN14@GetOpenArc
$LN14@GetOpenArc:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	0
$LN13@GetOpenArc:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z$1:
	mov	eax, DWORD PTR $T76996[ebp]
	and	eax, 1
	je	$LN12@GetOpenArc
	and	DWORD PTR $T76996[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
$LN12@GetOpenArc:
	ret	0
__ehhandler$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetOpenArcErrorMessage@@YG?AVAString@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetOpenArcErrorMessage@@YG?AVAString@@I@Z ENDP		; GetOpenArcErrorMessage
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
_TEXT	ENDS
PUBLIC	?Add_Messsage_Pre_ArcType@@YGXAAVUString@@PBDPB_W@Z ; Add_Messsage_Pre_ArcType
EXTRN	??YUString@@QAEAAV0@PB_W@Z:PROC			; UString::operator+=
EXTRN	?AddAscii@UString@@QAEXPBD@Z:PROC		; UString::AddAscii
EXTRN	?Add_LF@UString@@QAEXXZ:PROC			; UString::Add_LF
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = 8							; size = 4
_pre$ = 12						; size = 4
_arcType$ = 16						; size = 4
?Add_Messsage_Pre_ArcType@@YGXAAVUString@@PBDPB_W@Z PROC ; Add_Messsage_Pre_ArcType
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 525
	push	ebp
	mov	ebp, esp
; Line 526
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Add_LF@UString@@QAEXXZ			; UString::Add_LF
; Line 527
	mov	eax, DWORD PTR _pre$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 528
	push	OFFSET $SG75744
	mov	ecx, DWORD PTR _s$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 529
	mov	ecx, DWORD PTR _arcType$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@PB_W@Z		; UString::operator+=
; Line 530
	push	OFFSET $SG75745
	mov	ecx, DWORD PTR _s$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 531
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?Add_Messsage_Pre_ArcType@@YGXAAVUString@@PBDPB_W@Z ENDP ; Add_Messsage_Pre_ArcType
_TEXT	ENDS
PUBLIC	?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z		; CCodecs::GetFormatNamePtr
PUBLIC	?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z ; Print_ErrorFormatIndex_Warning
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
xdata$x	SEGMENT
__unwindtable$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z$0
__ehfuncinfo$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$ = -32						; size = 12
_er$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__so$ = 8						; size = 4
_codecs$ = 12						; size = 4
_arc$ = 16						; size = 4
?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z PROC ; Print_ErrorFormatIndex_Warning
; Line 534
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 535
	mov	eax, DWORD PTR _arc$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _er$[ebp], eax
; Line 537
	push	OFFSET $SG75753
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 538
	mov	ecx, DWORD PTR _arc$[ebp]
	add	ecx, 112				; 00000070H
	push	ecx
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 539
	mov	edx, DWORD PTR _arc$[ebp]
	mov	eax, DWORD PTR _er$[ebp]
	mov	ecx, DWORD PTR [edx+148]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN2@Print_Erro
; Line 541
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Add_LF@UString@@QAEXXZ			; UString::Add_LF
; Line 542
	push	OFFSET $SG75755
	lea	ecx, DWORD PTR _s$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 544
	jmp	SHORT $LN1@Print_Erro
$LN2@Print_Erro:
; Line 546
	mov	edx, DWORD PTR _er$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	call	?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z	; CCodecs::GetFormatNamePtr
	push	eax
	push	OFFSET $SG75757
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?Add_Messsage_Pre_ArcType@@YGXAAVUString@@PBDPB_W@Z ; Add_Messsage_Pre_ArcType
; Line 547
	mov	edx, DWORD PTR _arc$[ebp]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	call	?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z	; CCodecs::GetFormatNamePtr
	push	eax
	push	OFFSET $SG75758
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?Add_Messsage_Pre_ArcType@@YGXAAVUString@@PBDPB_W@Z ; Add_Messsage_Pre_ArcType
$LN1@Print_Erro:
; Line 550
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR __so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 551
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Print_Erro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN9@Print_Erro:
	DD	1
	DD	$LN8@Print_Erro
$LN8@Print_Erro:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@Print_Erro
$LN6@Print_Erro:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z ENDP ; Print_ErrorFormatIndex_Warning
PUBLIC	??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
PUBLIC	??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@		; `string'
;	COMDAT ??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\loadcodecs.h
CONST	SEGMENT
??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@ DB '#', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_formatIndex$ = 8					; size = 4
?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z PROC		; CCodecs::GetFormatNamePtr, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 309
	cmp	DWORD PTR _formatIndex$[ebp], 0
	jge	SHORT $LN3@GetFormatN
	mov	DWORD PTR tv72[ebp], OFFSET ??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@
	jmp	SHORT $LN4@GetFormatN
$LN3@GetFormatN:
	mov	eax, DWORD PTR _formatIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv72[ebp], eax
$LN4@GetFormatN:
	mov	eax, DWORD PTR tv72[ebp]
; Line 310
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z ENDP		; CCodecs::GetFormatNamePtr
_TEXT	ENDS
PUBLIC	?GetWarningFlags@CArcErrorInfo@@QBEIXZ		; CArcErrorInfo::GetWarningFlags
PUBLIC	?GetErrorFlags@CArcErrorInfo@@QBEIXZ		; CArcErrorInfo::GetErrorFlags
PUBLIC	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z	; CObjectVector<CArc>::operator[]
PUBLIC	?Size@?$CObjectVector@VCArc@@@@QBEIXZ		; CObjectVector<CArc>::Size
PUBLIC	?ClosePercents@COpenCallbackConsole@@QAEXXZ	; COpenCallbackConsole::ClosePercents
PUBLIC	?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z ; CExtractCallbackConsole::OpenResult
EXTRN	?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z:PROC ; Print_OpenArchive_Error
EXTRN	?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z:PROC ; Print_OpenArchive_Props
xdata$x	SEGMENT
__unwindtable$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z$0
__ehfuncinfo$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv504 = -68						; size = 4
tv505 = -64						; size = 4
$T77023 = -60						; size = 12
___result__$75810 = -48					; size = 4
_res$75809 = -44					; size = 4
___result__$75804 = -40					; size = 4
_warningFlags$75785 = -36				; size = 4
_errorFlags$75773 = -32					; size = 4
_er$75772 = -28						; size = 4
_arc$75771 = -24					; size = 4
_level$75767 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_codecs$ = 8						; size = 4
_arcLink$ = 12						; size = 4
_name$ = 16						; size = 4
_result$ = 20						; size = 4
?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z PROC ; CExtractCallbackConsole::OpenResult
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 557
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ClosePercents@COpenCallbackConsole@@QAEXXZ ; COpenCallbackConsole::ClosePercents
; Line 560
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN37@OpenResult
; Line 562
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0
	mov	DWORD PTR [ecx+44], 0
; Line 563
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 564
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Empty@UString@@QAEXXZ			; UString::Empty
$LN37@OpenResult:
; Line 568
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercentsAndFlush@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercentsAndFlush
; Line 570
	mov	DWORD PTR _level$75767[ebp], 0
	jmp	SHORT $LN36@OpenResult
$LN35@OpenResult:
	mov	edx, DWORD PTR _level$75767[ebp]
	add	edx, 1
	mov	DWORD PTR _level$75767[ebp], edx
$LN36@OpenResult:
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	?Size@?$CObjectVector@VCArc@@@@QBEIXZ	; CObjectVector<CArc>::Size
	cmp	DWORD PTR _level$75767[ebp], eax
	jae	$LN34@OpenResult
; Line 572
	mov	eax, DWORD PTR _level$75767[ebp]
	push	eax
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ; CObjectVector<CArc>::operator[]
	mov	DWORD PTR _arc$75771[ebp], eax
; Line 573
	mov	ecx, DWORD PTR _arc$75771[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _er$75772[ebp], ecx
; Line 575
	mov	ecx, DWORD PTR _er$75772[ebp]
	call	?GetErrorFlags@CArcErrorInfo@@QBEIXZ	; CArcErrorInfo::GetErrorFlags
	mov	DWORD PTR _errorFlags$75773[ebp], eax
; Line 577
	cmp	DWORD PTR _errorFlags$75773[ebp], 0
	jne	SHORT $LN32@OpenResult
	mov	ecx, DWORD PTR _er$75772[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	$LN33@OpenResult
$LN32@OpenResult:
; Line 579
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+204], 0
	je	SHORT $LN31@OpenResult
; Line 581
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 582
	cmp	DWORD PTR _level$75767[ebp], 0
	je	SHORT $LN31@OpenResult
; Line 583
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arc$75771[ebp]
	add	ecx, 112				; 00000070H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN31@OpenResult:
; Line 586
	cmp	DWORD PTR _errorFlags$75773[ebp], 0
	je	SHORT $LN29@OpenResult
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+204], 0
	je	SHORT $LN28@OpenResult
; Line 589
	mov	ecx, DWORD PTR _errorFlags$75773[ebp]
	push	ecx
	push	OFFSET $SG75780
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	push	eax
	call	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ; PrintErrorFlags
$LN28@OpenResult:
; Line 590
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+316]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+312], edx
	mov	DWORD PTR [ecx+316], eax
; Line 591
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+272], 1
$LN29@OpenResult:
; Line 594
	mov	ecx, DWORD PTR _er$75772[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN27@OpenResult
; Line 596
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+204], 0
	je	SHORT $LN26@OpenResult
; Line 597
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _er$75772[ebp]
	add	ecx, 24					; 00000018H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG75783
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN26@OpenResult:
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+312]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+316]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+312], ecx
	mov	DWORD PTR [eax+316], edx
; Line 599
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+272], 1
$LN27@OpenResult:
; Line 602
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+204], 0
	je	SHORT $LN33@OpenResult
; Line 604
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 605
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN33@OpenResult:
; Line 609
	mov	ecx, DWORD PTR _er$75772[ebp]
	call	?GetWarningFlags@CArcErrorInfo@@QBEIXZ	; CArcErrorInfo::GetWarningFlags
	mov	DWORD PTR _warningFlags$75785[ebp], eax
; Line 611
	cmp	DWORD PTR _warningFlags$75785[ebp], 0
	jne	SHORT $LN23@OpenResult
	mov	ecx, DWORD PTR _er$75772[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	$LN24@OpenResult
$LN23@OpenResult:
; Line 613
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	je	SHORT $LN22@OpenResult
; Line 615
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 616
	cmp	DWORD PTR _level$75767[ebp], 0
	je	SHORT $LN22@OpenResult
; Line 617
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arc$75771[ebp]
	add	ecx, 112				; 00000070H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN22@OpenResult:
; Line 620
	cmp	DWORD PTR _warningFlags$75785[ebp], 0
	je	SHORT $LN20@OpenResult
; Line 622
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	je	SHORT $LN19@OpenResult
; Line 623
	mov	ecx, DWORD PTR _warningFlags$75785[ebp]
	push	ecx
	push	OFFSET $SG75792
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	push	eax
	call	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ; PrintErrorFlags
$LN19@OpenResult:
; Line 624
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+324]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], edx
	mov	DWORD PTR [ecx+324], eax
; Line 625
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+273], 1
$LN20@OpenResult:
; Line 628
	mov	ecx, DWORD PTR _er$75772[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN18@OpenResult
; Line 630
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN17@OpenResult
; Line 631
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _er$75772[ebp]
	add	ecx, 36					; 00000024H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG75795
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN17@OpenResult:
; Line 632
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+320]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+324]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], ecx
	mov	DWORD PTR [eax+324], edx
; Line 633
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+273], 1
$LN18@OpenResult:
; Line 636
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	je	SHORT $LN24@OpenResult
; Line 638
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 639
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	je	SHORT $LN24@OpenResult
; Line 640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN24@OpenResult:
; Line 645
	mov	ecx, DWORD PTR _er$75772[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jl	SHORT $LN14@OpenResult
; Line 647
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	je	SHORT $LN13@OpenResult
; Line 649
	mov	eax, DWORD PTR _arc$75771[ebp]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	push	eax
	call	?Print_ErrorFormatIndex_Warning@@YGXPAVCStdOutStream@@PBVCCodecs@@ABVCArc@@@Z ; Print_ErrorFormatIndex_Warning
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	je	SHORT $LN13@OpenResult
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN13@OpenResult:
; Line 653
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+273], 1
$LN14@OpenResult:
; Line 655
	jmp	$LN35@OpenResult
$LN34@OpenResult:
; Line 657
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN11@OpenResult
; Line 659
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	je	SHORT $LN10@OpenResult
; Line 661
	mov	eax, DWORD PTR _arcLink$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	push	eax
	call	?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Props
	mov	DWORD PTR ___result__$75804[ebp], eax
	cmp	DWORD PTR ___result__$75804[ebp], 0
	je	SHORT $LN9@OpenResult
	mov	eax, DWORD PTR ___result__$75804[ebp]
	jmp	$LN38@OpenResult
$LN9@OpenResult:
; Line 662
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN10@OpenResult:
; Line 665
	jmp	$LN8@OpenResult
$LN11@OpenResult:
; Line 667
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+288]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+292]
	adc	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], eax
	mov	DWORD PTR [edx+292], ecx
; Line 668
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	je	SHORT $LN7@OpenResult
; Line 669
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN7@OpenResult:
; Line 670
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+204], 0
	je	$LN8@OpenResult
; Line 672
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kError
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 673
	mov	eax, DWORD PTR _arcLink$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	push	eax
	call	?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Error
	mov	DWORD PTR _res$75809[ebp], eax
; Line 674
	mov	ecx, DWORD PTR _res$75809[ebp]
	mov	DWORD PTR ___result__$75810[ebp], ecx
	cmp	DWORD PTR ___result__$75810[ebp], 0
	je	SHORT $LN5@OpenResult
	mov	eax, DWORD PTR ___result__$75810[ebp]
	jmp	$LN38@OpenResult
$LN5@OpenResult:
; Line 675
	cmp	DWORD PTR _result$[ebp], 1
	jne	SHORT $LN4@OpenResult
; Line 678
	jmp	SHORT $LN3@OpenResult
$LN4@OpenResult:
; Line 680
	cmp	DWORD PTR _result$[ebp], -2147024882	; 8007000eH
	jne	SHORT $LN2@OpenResult
; Line 681
	push	OFFSET $SG75817
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 682
	jmp	SHORT $LN1@OpenResult
$LN2@OpenResult:
; Line 683
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T77023[ebp]
	push	ecx
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv505[ebp], eax
	mov	edx, DWORD PTR tv505[ebp]
	mov	DWORD PTR tv504[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv504[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T77023[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN1@OpenResult:
; Line 684
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN3@OpenResult:
; Line 686
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN8@OpenResult:
; Line 691
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
$LN38@OpenResult:
; Line 692
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z$0:
	lea	ecx, DWORD PTR $T77023[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OpenResult@CExtractCallbackConsole@@UAEJPBVCCodecs@@ABUCArchiveLink@@PB_WJ@Z ENDP ; CExtractCallbackConsole::OpenResult
PUBLIC	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ		; CArcErrorInfo::NeedTailWarning
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWarningFlags@CArcErrorInfo@@QBEIXZ
_TEXT	SEGMENT
_a$ = -8						; size = 4
_this$ = -4						; size = 4
?GetWarningFlags@CArcErrorInfo@@QBEIXZ PROC		; CArcErrorInfo::GetWarningFlags, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\openarchive.h
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _a$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ	; CArcErrorInfo::NeedTailWarning
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetWarning
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 64					; 00000040H
	jne	SHORT $LN1@GetWarning
; Line 212
	mov	edx, DWORD PTR _a$[ebp]
	or	edx, 64					; 00000040H
	mov	DWORD PTR _a$[ebp], edx
$LN1@GetWarning:
; Line 213
	mov	eax, DWORD PTR _a$[ebp]
; Line 214
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWarningFlags@CArcErrorInfo@@QBEIXZ ENDP		; CArcErrorInfo::GetWarningFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedTailWarning@CArcErrorInfo@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?NeedTailWarning@CArcErrorInfo@@QBE_NXZ PROC		; CArcErrorInfo::NeedTailWarning, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	jne	SHORT $LN3@NeedTailWa
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN3@NeedTailWa
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@NeedTailWa
$LN3@NeedTailWa:
	mov	DWORD PTR tv69[ebp], 0
$LN4@NeedTailWa:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedTailWarning@CArcErrorInfo@@QBE_NXZ ENDP		; CArcErrorInfo::NeedTailWarning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetErrorFlags@CArcErrorInfo@@QBEIXZ
_TEXT	SEGMENT
_a$ = -8						; size = 4
_this$ = -4						; size = 4
?GetErrorFlags@CArcErrorInfo@@QBEIXZ PROC		; CArcErrorInfo::GetErrorFlags, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _a$[ebp], ecx
; Line 219
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	test	eax, eax
	je	SHORT $LN1@GetErrorFl
; Line 220
	mov	ecx, DWORD PTR _a$[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR _a$[ebp], ecx
$LN1@GetErrorFl:
; Line 221
	mov	eax, DWORD PTR _a$[ebp]
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	0
?GetErrorFlags@CArcErrorInfo@@QBEIXZ ENDP		; CArcErrorInfo::GetErrorFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClosePercents@COpenCallbackConsole@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercents@COpenCallbackConsole@@QAEXXZ PROC	; COpenCallbackConsole::ClosePercents, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\opencallbackconsole.h
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 33
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce@4
; Line 34
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce@4:
; Line 35
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercents@COpenCallbackConsole@@QAEXXZ ENDP	; COpenCallbackConsole::ClosePercents
_TEXT	ENDS
PUBLIC	?ThereAreNoFiles@CExtractCallbackConsole@@UAEJXZ ; CExtractCallbackConsole::ThereAreNoFiles
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ThereAreNoFiles@CExtractCallbackConsole@@UAEJXZ PROC	; CExtractCallbackConsole::ThereAreNoFiles
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 695
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 696
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePercents_for_so@CExtractCallbackConsole@@AAEXXZ ; CExtractCallbackConsole::ClosePercents_for_so
; Line 698
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	je	SHORT $LN2@ThereAreNo
; Line 700
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _kNoFiles
	push	ecx
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 701
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+344]
	test	ecx, ecx
	je	SHORT $LN2@ThereAreNo
; Line 702
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN2@ThereAreNo:
; Line 704
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 705
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThereAreNoFiles@CExtractCallbackConsole@@UAEJXZ ENDP	; CExtractCallbackConsole::ThereAreNoFiles
_TEXT	ENDS
PUBLIC	?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z	; CExtractCallbackConsole::ExtractResult
xdata$x	SEGMENT
__unwindtable$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z$1
__ehfuncinfo$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv291 = -64						; size = 4
tv65 = -60						; size = 4
tv343 = -56						; size = 4
tv301 = -52						; size = 4
$T77043 = -48						; size = 4
$T77042 = -44						; size = 12
$T77041 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_result$ = 8						; size = 4
?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z PROC	; CExtractCallbackConsole::ExtractResult
; _this$ = ecx
; Line 708
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 709
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 711
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?NeedPercents@COpenCallbackConsole@@IBE_NXZ ; COpenCallbackConsole::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@ExtractRes
; Line 713
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
; Line 714
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 715
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Empty@UString@@QAEXXZ			; UString::Empty
$LN17@ExtractRes:
; Line 718
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN16@ExtractRes
; Line 719
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN16@ExtractRes:
; Line 721
	cmp	DWORD PTR _result$[ebp], 0
	jne	$LN15@ExtractRes
; Line 723
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv301[ebp], eax
	mov	ecx, DWORD PTR tv301[ebp]
	mov	edx, DWORD PTR tv301[ebp]
	mov	eax, DWORD PTR [ecx+336]
	or	eax, DWORD PTR [edx+340]
	jne	$LN14@ExtractRes
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+272]
	test	edx, edx
	jne	$LN14@ExtractRes
; Line 725
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+273]
	test	ecx, ecx
	je	SHORT $LN13@ExtractRes
; Line 726
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+304]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+308]
	adc	ecx, 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+304], eax
	mov	DWORD PTR [edx+308], ecx
; Line 727
	jmp	SHORT $LN12@ExtractRes
$LN13@ExtractRes:
; Line 728
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+280]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+284]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], ecx
	mov	DWORD PTR [eax+284], edx
$LN12@ExtractRes:
; Line 729
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN11@ExtractRes
; Line 730
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _kEverythingIsOk
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN11@ExtractRes:
; Line 732
	jmp	$LN10@ExtractRes
$LN14@ExtractRes:
; Line 734
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+300]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], edx
	mov	DWORD PTR [ecx+300], eax
; Line 735
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 0
	je	SHORT $LN10@ExtractRes
; Line 737
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 738
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv343[ebp], ecx
	mov	edx, DWORD PTR tv343[ebp]
	mov	eax, DWORD PTR tv343[ebp]
	mov	ecx, DWORD PTR [edx+336]
	or	ecx, DWORD PTR [eax+340]
	je	SHORT $LN10@ExtractRes
; Line 739
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+340]
	push	eax
	mov	ecx, DWORD PTR [edx+336]
	push	ecx
	push	OFFSET $SG75841
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+200]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@_K@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN10@ExtractRes:
; Line 742
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	je	SHORT $LN7@ExtractRes
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+344]
	test	edx, edx
	je	SHORT $LN7@ExtractRes
; Line 743
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN7@ExtractRes:
; Line 745
	jmp	$LN6@ExtractRes
$LN15@ExtractRes:
; Line 747
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+296]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+300]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], edx
	mov	DWORD PTR [ecx+300], eax
; Line 748
	cmp	DWORD PTR _result$[ebp], -2147467260	; 80004004H
	je	SHORT $LN4@ExtractRes
	cmp	DWORD PTR _result$[ebp], 112		; 00000070H
	jne	SHORT $LN5@ExtractRes
$LN4@ExtractRes:
; Line 749
	mov	edx, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T77041[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T77041[ebp]
	jmp	$LN18@ExtractRes
$LN5@ExtractRes:
; Line 751
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+204], 0
	je	$LN6@ExtractRes
; Line 753
	mov	ecx, DWORD PTR _kError
	push	ecx
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 754
	cmp	DWORD PTR _result$[ebp], -2147024882	; 8007000eH
	jne	SHORT $LN2@ExtractRes
; Line 755
	mov	eax, DWORD PTR _kMemoryExceptionMessage
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 756
	jmp	SHORT $LN1@ExtractRes
$LN2@ExtractRes:
; Line 757
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	lea	eax, DWORD PTR $T77042[ebp]
	push	eax
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv291[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv291[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+204]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T77042[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN1@ExtractRes:
; Line 758
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 759
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+204]
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
$LN6@ExtractRes:
; Line 763
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
	mov	DWORD PTR $T77043[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T77043[ebp]
$LN18@ExtractRes:
; Line 764
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@ExtractRes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN25@ExtractRes:
	DD	1
	DD	$LN24@ExtractRes
$LN24@ExtractRes:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN22@ExtractRes
$LN22@ExtractRes:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__unwindfunclet$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z$1:
	lea	ecx, DWORD PTR $T77042[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ExtractResult@CExtractCallbackConsole@@UAEJJ@Z ENDP	; CExtractCallbackConsole::ExtractResult
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z PROC ; CObjectVector<CArcInfoEx>::operator[], COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ENDP ; CObjectVector<CArcInfoEx>::operator[]
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VCArc@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VCArc@@@@QBEIXZ PROC		; CObjectVector<CArc>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VCArc@@@@QBEIXZ ENDP		; CObjectVector<CArc>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z PROC	; CObjectVector<CArc>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ENDP	; CObjectVector<CArc>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_CriticalSection@@YAXXZ
text$yc	SEGMENT
??__Eg_CriticalSection@@YAXXZ PROC			; `dynamic initializer for 'g_CriticalSection'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\extractcallbackconsole.cpp
; Line 134
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	push	OFFSET ??__Fg_CriticalSection@@YAXXZ	; `dynamic atexit destructor for 'g_CriticalSection''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_CriticalSection@@YAXXZ ENDP			; `dynamic initializer for 'g_CriticalSection''
text$yc	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
_TEXT	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_CriticalSection@@YAXXZ
text$yd	SEGMENT
??__Fg_CriticalSection@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CriticalSection'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_CriticalSection@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CriticalSection''
text$yd	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
_TEXT	ENDS
_BSS	SEGMENT
_g_CriticalSection DB 018H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_CriticalSection$initializer$ DD FLAT:??__Eg_CriticalSection@@YAXXZ
CRT$XCU	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Tar\TarOut.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
PUBLIC	?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ; NArchive::NTar::COutArchive::WriteBytes
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarout.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z PROC	; NArchive::NTar::COutArchive::WriteBytes
; _this$ = ecx
; Line 13
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 14
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
	adc	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], ecx
; Line 15
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	push	eax
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
; Line 16
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ENDP	; NArchive::NTar::COutArchive::WriteBytes
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::operator[]
PUBLIC	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
PUBLIC	?IsSparse@CItem@NTar@NArchive@@QBE_NXZ		; NArchive::NTar::CItem::IsSparse
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	__$ArrayPad$
PUBLIC	?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z ; NArchive::NTar::COutArchive::WriteHeaderReal
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$67724 = -584				; size = 4
_p$67722 = -580						; size = 4
_sb$67721 = -576					; size = 4
_t$67717 = -572						; size = 4
_i$67713 = -568						; size = 4
___result__$67710 = -564				; size = 4
_i$67705 = -560						; size = 4
_kNumDigits$67704 = -556				; size = 4
_i$67699 = -552						; size = 4
_checkSum$67698 = -548					; size = 4
_p$67697 = -544						; size = 4
_sb$67696 = -540					; size = 4
_i$67692 = -536						; size = 4
_cur$ = -532						; size = 4
_record$ = -524						; size = 512
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_item$ = 8						; size = 4
?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z PROC ; NArchive::NTar::COutArchive::WriteHeaderReal
; _this$ = ecx
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 584				; 00000248H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-584]
	mov	ecx, 146				; 00000092H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _record$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 87
	lea	ecx, DWORD PTR _record$[ebp]
	mov	DWORD PTR _cur$[ebp], ecx
; Line 89
	mov	ecx, DWORD PTR _item$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	eax, 100				; 00000064H
	jbe	SHORT $LN29@WriteHeade
; Line 90
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN29@WriteHeade:
; Line 91
	push	100					; 00000064H
	mov	ecx, DWORD PTR _item$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _cur$[ebp]
	push	edx
	call	?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z	; NArchive::NTar::MyStrNCpy
; Line 92
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 100				; 00000064H
	mov	DWORD PTR _cur$[ebp], eax
; Line 94
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z	; NArchive::NTar::WriteOctal_8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN28@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN28@WriteHeade:
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 8
	mov	DWORD PTR _cur$[ebp], edx
; Line 95
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	push	edx
	call	?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z	; NArchive::NTar::WriteOctal_8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN27@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN27@WriteHeade:
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 8
	mov	DWORD PTR _cur$[ebp], ecx
; Line 96
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z	; NArchive::NTar::WriteOctal_8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN26@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN26@WriteHeade:
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 8
	mov	DWORD PTR _cur$[ebp], eax
; Line 98
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _cur$[ebp], edx
; Line 99
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	?WriteOctal_12_Signed@NTar@NArchive@@YGXPAD_J@Z ; NArchive::NTar::WriteOctal_12_Signed
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _cur$[ebp], ecx
; Line 101
	push	8
	push	32					; 00000020H
	mov	edx, DWORD PTR _cur$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 102
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 8
	mov	DWORD PTR _cur$[ebp], eax
; Line 104
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR _item$[ebp]
	mov	al, BYTE PTR [edx+104]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cur$[ebp], ecx
; Line 106
	push	100					; 00000064H
	mov	edx, DWORD PTR _item$[ebp]
	add	edx, 60					; 0000003cH
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z ; NArchive::NTar::CopyString
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN25@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN25@WriteHeade:
; Line 107
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 100				; 00000064H
	mov	DWORD PTR _cur$[ebp], edx
; Line 109
	push	8
	mov	eax, DWORD PTR _item$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 110
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 8
	mov	DWORD PTR _cur$[ebp], edx
; Line 112
	push	32					; 00000020H
	mov	eax, DWORD PTR _item$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z ; NArchive::NTar::CopyString
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN24@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN24@WriteHeade:
; Line 113
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _cur$[ebp], eax
; Line 114
	push	32					; 00000020H
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 84					; 00000054H
	push	ecx
	mov	edx, DWORD PTR _cur$[ebp]
	push	edx
	call	?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z ; NArchive::NTar::CopyString
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN23@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN23@WriteHeade:
; Line 115
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _cur$[ebp], ecx
; Line 118
	mov	edx, DWORD PTR _item$[ebp]
	movzx	eax, BYTE PTR [edx+105]
	test	eax, eax
	je	SHORT $LN22@WriteHeade
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z	; NArchive::NTar::WriteOctal_8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN22@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN22@WriteHeade:
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 8
	mov	DWORD PTR _cur$[ebp], edx
; Line 119
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, BYTE PTR [eax+106]
	test	ecx, ecx
	je	SHORT $LN20@WriteHeade
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z	; NArchive::NTar::WriteOctal_8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN20@WriteHeade
	mov	eax, -2147467259			; 80004005H
	jmp	$LN30@WriteHeade
$LN20@WriteHeade:
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 8
	mov	DWORD PTR _cur$[ebp], eax
; Line 121
	mov	ecx, DWORD PTR _item$[ebp]
	call	?IsSparse@CItem@NTar@NArchive@@QBE_NXZ	; NArchive::NTar::CItem::IsSparse
	movzx	ecx, al
	test	ecx, ecx
	je	$LN18@WriteHeade
; Line 123
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	mov	edx, 4
	cmp	edx, eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR _record$[ebp+482], al
; Line 124
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	push	eax
	lea	ecx, DWORD PTR _record$[ebp+483]
	push	ecx
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
; Line 125
	mov	DWORD PTR _i$67692[ebp], 0
	jmp	SHORT $LN17@WriteHeade
$LN16@WriteHeade:
	mov	edx, DWORD PTR _i$67692[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67692[ebp], edx
$LN17@WriteHeade:
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	cmp	DWORD PTR _i$67692[ebp], eax
	jae	SHORT $LN18@WriteHeade
	cmp	DWORD PTR _i$67692[ebp], 4
	jae	SHORT $LN18@WriteHeade
; Line 127
	mov	eax, DWORD PTR _i$67692[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::operator[]
	mov	DWORD PTR _sb$67696[ebp], eax
; Line 128
	mov	ecx, DWORD PTR _i$67692[ebp]
	imul	ecx, 24					; 00000018H
	lea	edx, DWORD PTR _record$[ebp+ecx+386]
	mov	DWORD PTR _p$67697[ebp], edx
; Line 129
	mov	eax, DWORD PTR _sb$67696[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _p$67697[ebp]
	push	eax
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
; Line 130
	mov	ecx, DWORD PTR _sb$67696[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	mov	ecx, DWORD PTR _p$67697[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
; Line 131
	jmp	$LN16@WriteHeade
$LN18@WriteHeade:
; Line 135
	mov	DWORD PTR _checkSum$67698[ebp], 0
; Line 137
	mov	DWORD PTR _i$67699[ebp], 0
	jmp	SHORT $LN14@WriteHeade
$LN13@WriteHeade:
	mov	edx, DWORD PTR _i$67699[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67699[ebp], edx
$LN14@WriteHeade:
	cmp	DWORD PTR _i$67699[ebp], 512		; 00000200H
	jae	SHORT $LN12@WriteHeade
; Line 138
	mov	eax, DWORD PTR _i$67699[ebp]
	movzx	ecx, BYTE PTR _record$[ebp+eax]
	add	ecx, DWORD PTR _checkSum$67698[ebp]
	mov	DWORD PTR _checkSum$67698[ebp], ecx
	jmp	SHORT $LN13@WriteHeade
$LN12@WriteHeade:
; Line 144
	mov	DWORD PTR _kNumDigits$67704[ebp], 6
; Line 145
	mov	DWORD PTR _i$67705[ebp], 0
	jmp	SHORT $LN11@WriteHeade
$LN10@WriteHeade:
	mov	edx, DWORD PTR _i$67705[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67705[ebp], edx
$LN11@WriteHeade:
	cmp	DWORD PTR _i$67705[ebp], 6
	jae	SHORT $LN9@WriteHeade
; Line 147
	mov	eax, DWORD PTR _checkSum$67698[ebp]
	and	eax, 7
	add	eax, 48					; 00000030H
	mov	ecx, 153				; 00000099H
	sub	ecx, DWORD PTR _i$67705[ebp]
	mov	BYTE PTR _record$[ebp+ecx], al
; Line 148
	mov	edx, DWORD PTR _checkSum$67698[ebp]
	shr	edx, 3
	mov	DWORD PTR _checkSum$67698[ebp], edx
; Line 149
	jmp	SHORT $LN10@WriteHeade
$LN9@WriteHeade:
; Line 150
	mov	BYTE PTR _record$[ebp+154], 0
; Line 153
	push	512					; 00000200H
	lea	eax, DWORD PTR _record$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ; NArchive::NTar::COutArchive::WriteBytes
	mov	DWORD PTR ___result__$67710[ebp], eax
	cmp	DWORD PTR ___result__$67710[ebp], 0
	je	SHORT $LN8@WriteHeade
	mov	eax, DWORD PTR ___result__$67710[ebp]
	jmp	$LN30@WriteHeade
$LN8@WriteHeade:
; Line 155
	mov	ecx, DWORD PTR _item$[ebp]
	call	?IsSparse@CItem@NTar@NArchive@@QBE_NXZ	; NArchive::NTar::CItem::IsSparse
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@WriteHeade
; Line 157
	mov	DWORD PTR _i$67713[ebp], 4
$LN6@WriteHeade:
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	cmp	DWORD PTR _i$67713[ebp], eax
	jae	$LN7@WriteHeade
; Line 159
	push	512					; 00000200H
	push	0
	lea	edx, DWORD PTR _record$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 160
	mov	DWORD PTR _t$67717[ebp], 0
	jmp	SHORT $LN4@WriteHeade
$LN3@WriteHeade:
	mov	eax, DWORD PTR _t$67717[ebp]
	add	eax, 1
	mov	DWORD PTR _t$67717[ebp], eax
	mov	ecx, DWORD PTR _i$67713[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67713[ebp], ecx
$LN4@WriteHeade:
	cmp	DWORD PTR _t$67717[ebp], 21		; 00000015H
	jae	SHORT $LN2@WriteHeade
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	cmp	DWORD PTR _i$67713[ebp], eax
	jae	SHORT $LN2@WriteHeade
; Line 162
	mov	edx, DWORD PTR _i$67713[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::operator[]
	mov	DWORD PTR _sb$67721[ebp], eax
; Line 163
	mov	eax, DWORD PTR _t$67717[ebp]
	imul	eax, 24					; 00000018H
	lea	ecx, DWORD PTR _record$[ebp+eax]
	mov	DWORD PTR _p$67722[ebp], ecx
; Line 164
	mov	edx, DWORD PTR _sb$67721[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	edx, DWORD PTR _p$67722[ebp]
	push	edx
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
; Line 165
	mov	eax, DWORD PTR _sb$67721[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	push	edx
	mov	eax, DWORD PTR _p$67722[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
; Line 166
	jmp	$LN3@WriteHeade
$LN2@WriteHeade:
; Line 167
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 108				; 0000006cH
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	cmp	DWORD PTR _i$67713[ebp], eax
	sbb	ecx, ecx
	neg	ecx
	mov	BYTE PTR _record$[ebp+504], cl
; Line 168
	push	512					; 00000200H
	lea	edx, DWORD PTR _record$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ; NArchive::NTar::COutArchive::WriteBytes
	mov	DWORD PTR ___result__$67724[ebp], eax
	cmp	DWORD PTR ___result__$67724[ebp], 0
	je	SHORT $LN1@WriteHeade
	mov	eax, DWORD PTR ___result__$67724[ebp]
	jmp	SHORT $LN30@WriteHeade
$LN1@WriteHeade:
; Line 169
	jmp	$LN6@WriteHeade
$LN7@WriteHeade:
; Line 172
	xor	eax, eax
$LN30@WriteHeade:
; Line 173
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@WriteHeade
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 584				; 00000248H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN34@WriteHeade:
	DD	1
	DD	$LN33@WriteHeade
$LN33@WriteHeade:
	DD	-524					; fffffdf4H
	DD	512					; 00000200H
	DD	$LN32@WriteHeade
$LN32@WriteHeade:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z ENDP ; NArchive::NTar::COutArchive::WriteHeaderReal
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsSparse@CItem@NTar@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSparse@CItem@NTar@NArchive@@QBE_NXZ PROC		; NArchive::NTar::CItem::IsSparse, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\taritem.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+104]
	xor	eax, eax
	cmp	ecx, 83					; 00000053H
	sete	al
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSparse@CItem@NTar@NArchive@@QBE_NXZ ENDP		; NArchive::NTar::CItem::IsSparse
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_c$67612 = -5						; size = 1
_i$67608 = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z PROC		; NArchive::NTar::MyStrNCpy
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarout.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 20
	mov	DWORD PTR _i$67608[ebp], 0
	jmp	SHORT $LN4@MyStrNCpy
$LN3@MyStrNCpy:
	mov	eax, DWORD PTR _i$67608[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67608[ebp], eax
$LN4@MyStrNCpy:
	mov	ecx, DWORD PTR _i$67608[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN5@MyStrNCpy
; Line 22
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, DWORD PTR _i$67608[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _c$67612[ebp], al
; Line 23
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _i$67608[ebp]
	mov	dl, BYTE PTR _c$67612[ebp]
	mov	BYTE PTR [ecx], dl
; Line 24
	movsx	eax, BYTE PTR _c$67612[ebp]
	test	eax, eax
	jne	SHORT $LN1@MyStrNCpy
; Line 25
	jmp	SHORT $LN5@MyStrNCpy
$LN1@MyStrNCpy:
; Line 26
	jmp	SHORT $LN3@MyStrNCpy
$LN5@MyStrNCpy:
; Line 27
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MyStrNCpy@NTar@NArchive@@YGXPADPBDI@Z ENDP		; NArchive::NTar::MyStrNCpy
; Function compile flags: /Odtp /RTCsu
_i$67621 = -8						; size = 4
_kNumDigits$ = -4					; size = 4
_s$ = 8							; size = 4
_val$ = 12						; size = 4
?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z PROC		; NArchive::NTar::WriteOctal_8
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 31
	mov	DWORD PTR _kNumDigits$[ebp], 7
; Line 32
	cmp	DWORD PTR _val$[ebp], 2097152		; 00200000H
	jb	SHORT $LN4@WriteOctal
; Line 33
	xor	al, al
	jmp	SHORT $LN5@WriteOctal
$LN4@WriteOctal:
; Line 34
	mov	DWORD PTR _i$67621[ebp], 0
	jmp	SHORT $LN3@WriteOctal
$LN2@WriteOctal:
	mov	eax, DWORD PTR _i$67621[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67621[ebp], eax
$LN3@WriteOctal:
	cmp	DWORD PTR _i$67621[ebp], 7
	jae	SHORT $LN1@WriteOctal
; Line 36
	mov	ecx, DWORD PTR _val$[ebp]
	and	ecx, 7
	add	ecx, 48					; 00000030H
	mov	edx, 6
	sub	edx, DWORD PTR _i$67621[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+edx], cl
; Line 37
	mov	ecx, DWORD PTR _val$[ebp]
	shr	ecx, 3
	mov	DWORD PTR _val$[ebp], ecx
; Line 38
	jmp	SHORT $LN2@WriteOctal
$LN1@WriteOctal:
; Line 39
	mov	al, 1
$LN5@WriteOctal:
; Line 40
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteOctal_8@NTar@NArchive@@YG_NPADI@Z ENDP		; NArchive::NTar::WriteOctal_8
_TEXT	ENDS
EXTRN	__aullshr:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67640 = -12						; size = 4
_i$67635 = -8						; size = 4
_kNumDigits$ = -4					; size = 4
_s$ = 8							; size = 4
_val$ = 12						; size = 8
?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z PROC		; NArchive::NTar::WriteOctal_12
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 44
	mov	DWORD PTR _kNumDigits$[ebp], 11		; 0000000bH
; Line 45
	cmp	DWORD PTR _val$[ebp+4], 2
	jb	SHORT $LN7@WriteOctal@2
	ja	SHORT $LN10@WriteOctal@2
	cmp	DWORD PTR _val$[ebp], 0
	jb	SHORT $LN7@WriteOctal@2
$LN10@WriteOctal@2:
; Line 48
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], -128			; ffffff80H
; Line 49
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+3], 0
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+2], 0
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+1], 0
; Line 50
	mov	DWORD PTR _i$67635[ebp], 0
	jmp	SHORT $LN6@WriteOctal@2
$LN5@WriteOctal@2:
	mov	ecx, DWORD PTR _i$67635[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67635[ebp], ecx
	mov	eax, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR _val$[ebp+4]
	mov	cl, 8
	call	__allshl
	mov	DWORD PTR _val$[ebp], eax
	mov	DWORD PTR _val$[ebp+4], edx
$LN6@WriteOctal@2:
	cmp	DWORD PTR _i$67635[ebp], 8
	jae	SHORT $LN4@WriteOctal@2
; Line 51
	mov	eax, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR _val$[ebp+4]
	mov	cl, 56					; 00000038H
	call	__aullshr
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _i$67635[ebp]
	mov	BYTE PTR [edx+4], al
	jmp	SHORT $LN5@WriteOctal@2
$LN4@WriteOctal@2:
; Line 52
	jmp	SHORT $LN8@WriteOctal@2
$LN7@WriteOctal@2:
; Line 54
	mov	DWORD PTR _i$67640[ebp], 0
	jmp	SHORT $LN3@WriteOctal@2
$LN2@WriteOctal@2:
	mov	eax, DWORD PTR _i$67640[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67640[ebp], eax
$LN3@WriteOctal@2:
	cmp	DWORD PTR _i$67640[ebp], 11		; 0000000bH
	jae	SHORT $LN8@WriteOctal@2
; Line 56
	mov	ecx, DWORD PTR _val$[ebp]
	and	ecx, 7
	mov	edx, DWORD PTR _val$[ebp+4]
	and	edx, 0
	add	ecx, 48					; 00000030H
	adc	edx, 0
	mov	eax, 10					; 0000000aH
	sub	eax, DWORD PTR _i$67640[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 57
	mov	eax, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR _val$[ebp+4]
	mov	cl, 3
	call	__aullshr
	mov	DWORD PTR _val$[ebp], eax
	mov	DWORD PTR _val$[ebp+4], edx
; Line 58
	jmp	SHORT $LN2@WriteOctal@2
$LN8@WriteOctal@2:
; Line 59
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ENDP		; NArchive::NTar::WriteOctal_12
_TEXT	ENDS
EXTRN	__allshr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67652 = -4						; size = 4
_s$ = 8							; size = 4
_val$ = 12						; size = 8
?WriteOctal_12_Signed@NTar@NArchive@@YGXPAD_J@Z PROC	; NArchive::NTar::WriteOctal_12_Signed
; Line 62
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 63
	cmp	DWORD PTR _val$[ebp+4], 0
	jl	SHORT $LN4@WriteOctal@3
	jg	SHORT $LN7@WriteOctal@3
	cmp	DWORD PTR _val$[ebp], 0
	jb	SHORT $LN4@WriteOctal@3
$LN7@WriteOctal@3:
; Line 65
	mov	eax, DWORD PTR _val$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?WriteOctal_12@NTar@NArchive@@YGXPAD_K@Z ; NArchive::NTar::WriteOctal_12
; Line 66
	jmp	SHORT $LN5@WriteOctal@3
$LN4@WriteOctal@3:
; Line 68
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+3], -1
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+2], -1
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+1], -1
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], -1
; Line 69
	mov	DWORD PTR _i$67652[ebp], 0
	jmp	SHORT $LN3@WriteOctal@3
$LN2@WriteOctal@3:
	mov	ecx, DWORD PTR _i$67652[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67652[ebp], ecx
	mov	eax, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR _val$[ebp+4]
	mov	cl, 8
	call	__allshl
	mov	DWORD PTR _val$[ebp], eax
	mov	DWORD PTR _val$[ebp+4], edx
$LN3@WriteOctal@3:
	cmp	DWORD PTR _i$67652[ebp], 8
	jae	SHORT $LN5@WriteOctal@3
; Line 70
	mov	eax, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR _val$[ebp+4]
	mov	cl, 56					; 00000038H
	call	__allshr
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _i$67652[ebp]
	mov	BYTE PTR [edx+4], al
	jmp	SHORT $LN2@WriteOctal@3
$LN5@WriteOctal@3:
; Line 71
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?WriteOctal_12_Signed@NTar@NArchive@@YGXPAD_J@Z ENDP	; NArchive::NTar::WriteOctal_12_Signed
_TEXT	ENDS
PUBLIC	?MyStringCopy@@YGXPADPBD@Z			; MyStringCopy
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_maxSize$ = 16						; size = 4
?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z PROC	; NArchive::NTar::CopyString
; Line 74
	push	ebp
	mov	ebp, esp
; Line 75
	mov	ecx, DWORD PTR _src$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	eax, DWORD PTR _maxSize$[ebp]
	jb	SHORT $LN1@CopyString
; Line 76
	xor	al, al
	jmp	SHORT $LN2@CopyString
$LN1@CopyString:
; Line 77
	mov	ecx, DWORD PTR _src$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	?MyStringCopy@@YGXPADPBD@Z		; MyStringCopy
; Line 78
	mov	al, 1
$LN2@CopyString:
; Line 79
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?CopyString@NTar@NArchive@@YG_NPADABVAString@@I@Z ENDP	; NArchive::NTar::CopyString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStringCopy@@YGXPADPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
?MyStringCopy@@YGXPADPBD@Z PROC				; MyStringCopy, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN2@MyStringCo:
; Line 34
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _dest$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$[ebp], edx
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax
	test	ecx, ecx
	je	SHORT $LN5@MyStringCo
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN6@MyStringCo
$LN5@MyStringCo:
	mov	DWORD PTR tv68[ebp], 0
$LN6@MyStringCo:
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@MyStringCo
	jmp	SHORT $LN2@MyStringCo
$LN3@MyStringCo:
; Line 35
	mov	esp, ebp
	pop	ebp
	ret	8
?MyStringCopy@@YGXPADPBD@Z ENDP				; MyStringCopy
_TEXT	ENDS
PUBLIC	??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z	; NArchive::NTar::CItem::operator=
PUBLIC	?FillDataResidual@COutArchive@NTar@NArchive@@QAEJ_K@Z ; NArchive::NTar::COutArchive::FillDataResidual
PUBLIC	??1CItem@NTar@NArchive@@QAE@XZ			; NArchive::NTar::CItem::~CItem
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	??0CItem@NTar@NArchive@@QAE@ABU012@@Z		; NArchive::NTar::CItem::CItem
PUBLIC	__$ArrayPad$
PUBLIC	?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z ; NArchive::NTar::COutArchive::WriteHeader
EXTRN	?SetFrom@AString@@QAEXPBDI@Z:PROC		; AString::SetFrom
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
EXTRN	?kLongLink@NFileHeader@NTar@NArchive@@3PBDB:DWORD ; NArchive::NTar::NFileHeader::kLongLink
EXTRN	___CxxFrameHandler3:PROC
xdata$x	SEGMENT
__unwindtable$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z$0
__ehfuncinfo$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67900 = -196						; size = 4
$T67899 = -192						; size = 4
$T67898 = -188						; size = 4
$T67897 = -184						; size = 4
___result__$67751 = -180				; size = 4
___result__$67747 = -176				; size = 4
___result__$67744 = -172				; size = 4
_nameStreamSize$67743 = -168				; size = 4
_name$67739 = -164					; size = 4
_i$67735 = -160						; size = 4
_mi$ = -152						; size = 120
_linkSize$ = -28					; size = 4
_nameSize$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z PROC ; NArchive::NTar::COutArchive::WriteHeader
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarout.cpp
; Line 176
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 184				; 000000b8H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	ecx, DWORD PTR _item$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	DWORD PTR _nameSize$[ebp], eax
; Line 178
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	DWORD PTR _linkSize$[ebp], eax
; Line 186
	cmp	DWORD PTR _nameSize$[ebp], 100		; 00000064H
	jae	SHORT $LN12@WriteHeade@2
	cmp	DWORD PTR _linkSize$[ebp], 100		; 00000064H
	jae	SHORT $LN12@WriteHeade@2
; Line 187
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z ; NArchive::NTar::COutArchive::WriteHeaderReal
	jmp	$LN13@WriteHeade@2
$LN12@WriteHeade@2:
; Line 189
	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??0CItem@NTar@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 190
	mov	edx, DWORD PTR ?kLongLink@NFileHeader@NTar@NArchive@@3PBDB ; NArchive::NTar::NFileHeader::kLongLink
	push	edx
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 191
	lea	ecx, DWORD PTR _mi$[ebp+60]
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 192
	mov	DWORD PTR _i$67735[ebp], 0
	jmp	SHORT $LN11@WriteHeade@2
$LN10@WriteHeade@2:
	mov	eax, DWORD PTR _i$67735[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67735[ebp], eax
$LN11@WriteHeade@2:
	cmp	DWORD PTR _i$67735[ebp], 2
	jge	$LN9@WriteHeade@2
; Line 196
	cmp	DWORD PTR _i$67735[ebp], 0
	jne	SHORT $LN8@WriteHeade@2
; Line 198
	mov	BYTE PTR _mi$[ebp+104], 75		; 0000004bH
; Line 199
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 60					; 0000003cH
	mov	DWORD PTR _name$67739[ebp], ecx
; Line 201
	jmp	SHORT $LN7@WriteHeade@2
$LN8@WriteHeade@2:
; Line 203
	mov	BYTE PTR _mi$[ebp+104], 76		; 0000004cH
; Line 204
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR _name$67739[ebp], edx
$LN7@WriteHeade@2:
; Line 206
	mov	ecx, DWORD PTR _name$67739[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	eax, 100				; 00000064H
	jae	SHORT $LN6@WriteHeade@2
; Line 207
	jmp	SHORT $LN10@WriteHeade@2
$LN6@WriteHeade@2:
; Line 208
	mov	ecx, DWORD PTR _name$67739[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	add	eax, 1
	mov	DWORD PTR _nameStreamSize$67743[ebp], eax
; Line 209
	mov	eax, DWORD PTR _nameStreamSize$67743[ebp]
	xor	ecx, ecx
	mov	DWORD PTR _mi$[ebp+16], eax
	mov	DWORD PTR _mi$[ebp+20], ecx
; Line 210
	lea	edx, DWORD PTR _mi$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z ; NArchive::NTar::COutArchive::WriteHeaderReal
	mov	DWORD PTR ___result__$67744[ebp], eax
	cmp	DWORD PTR ___result__$67744[ebp], 0
	je	SHORT $LN5@WriteHeade@2
	mov	eax, DWORD PTR ___result__$67744[ebp]
	mov	DWORD PTR $T67897[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??1CItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T67897[ebp]
	jmp	$LN13@WriteHeade@2
$LN5@WriteHeade@2:
; Line 211
	mov	ecx, DWORD PTR _nameStreamSize$67743[ebp]
	push	ecx
	mov	ecx, DWORD PTR _name$67739[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ; NArchive::NTar::COutArchive::WriteBytes
	mov	DWORD PTR ___result__$67747[ebp], eax
	cmp	DWORD PTR ___result__$67747[ebp], 0
	je	SHORT $LN4@WriteHeade@2
	mov	edx, DWORD PTR ___result__$67747[ebp]
	mov	DWORD PTR $T67898[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??1CItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T67898[ebp]
	jmp	$LN13@WriteHeade@2
$LN4@WriteHeade@2:
; Line 212
	mov	eax, DWORD PTR _nameStreamSize$67743[ebp]
	xor	ecx, ecx
	push	ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FillDataResidual@COutArchive@NTar@NArchive@@QAEJ_K@Z ; NArchive::NTar::COutArchive::FillDataResidual
	mov	DWORD PTR ___result__$67751[ebp], eax
	cmp	DWORD PTR ___result__$67751[ebp], 0
	je	SHORT $LN3@WriteHeade@2
	mov	edx, DWORD PTR ___result__$67751[ebp]
	mov	DWORD PTR $T67899[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??1CItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T67899[ebp]
	jmp	$LN13@WriteHeade@2
$LN3@WriteHeade@2:
; Line 213
	jmp	$LN10@WriteHeade@2
$LN9@WriteHeade@2:
; Line 215
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z
; Line 216
	lea	ecx, DWORD PTR _mi$[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	eax, 100				; 00000064H
	jb	SHORT $LN2@WriteHeade@2
; Line 217
	push	99					; 00000063H
	mov	ecx, DWORD PTR _item$[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	lea	ecx, DWORD PTR _mi$[ebp]
	call	?SetFrom@AString@@QAEXPBDI@Z		; AString::SetFrom
$LN2@WriteHeade@2:
; Line 218
	lea	ecx, DWORD PTR _mi$[ebp+60]
	call	?Len@AString@@QBEIXZ			; AString::Len
	cmp	eax, 100				; 00000064H
	jb	SHORT $LN1@WriteHeade@2
; Line 219
	push	99					; 00000063H
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 60					; 0000003cH
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	lea	ecx, DWORD PTR _mi$[ebp+60]
	call	?SetFrom@AString@@QAEXPBDI@Z		; AString::SetFrom
$LN1@WriteHeade@2:
; Line 220
	lea	ecx, DWORD PTR _mi$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteHeaderReal@COutArchive@NTar@NArchive@@AAEJABUCItem@23@@Z ; NArchive::NTar::COutArchive::WriteHeaderReal
	mov	DWORD PTR $T67900[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _mi$[ebp]
	call	??1CItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR $T67900[ebp]
$LN13@WriteHeade@2:
; Line 221
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@WriteHeade@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN19@WriteHeade@2:
	DD	1
	DD	$LN18@WriteHeade@2
$LN18@WriteHeade@2:
	DD	-152					; ffffff68H
	DD	120					; 00000078H
	DD	$LN16@WriteHeade@2
$LN16@WriteHeade@2:
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z$0:
	lea	ecx, DWORD PTR _mi$[ebp]
	jmp	??1CItem@NTar@NArchive@@QAE@XZ
__ehhandler$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?WriteHeader@COutArchive@NTar@NArchive@@QAEJABUCItem@23@@Z ENDP ; NArchive::NTar::COutArchive::WriteHeader
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::CRecordVector<NArchive::NTar::CSparseBlock>
EXTRN	??0AString@@QAE@ABV0@@Z:PROC			; AString::AString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CItem@NTar@NArchive@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$3
__ehfuncinfo$??0CItem@NTar@NArchive@@QAE@ABU012@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CItem@NTar@NArchive@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CItem@NTar@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CItem@NTar@NArchive@@QAE@ABU012@@Z PROC		; NArchive::NTar::CItem::CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CItem@NTar@NArchive@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	ecx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+32], ecx
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+36], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+44], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ecx+48], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+52], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+56], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR [ecx+96], eax
	mov	edx, DWORD PTR [edx+100]
	mov	DWORD PTR [ecx+100], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+104]
	mov	BYTE PTR [eax+104], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+105]
	mov	BYTE PTR [eax+105], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+106]
	mov	BYTE PTR [eax+106], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::CRecordVector<NArchive::NTar::CSparseBlock>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CItem@NTar@NArchive@@QAE@ABU012@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0CItem@NTar@NArchive@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CItem@NTar@NArchive@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CItem@NTar@NArchive@@QAE@ABU012@@Z ENDP		; NArchive::NTar::CItem::CItem
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67928 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67928[ebp], ecx
	mov	edx, DWORD PTR $T67928[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NTar::CSparseBlock>::~CRecordVector<NArchive::NTar::CSparseBlock>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CItem@NTar@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$3
__ehfuncinfo$??1CItem@NTar@NArchive@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CItem@NTar@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CItem@NTar@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CItem@NTar@NArchive@@QAE@XZ PROC			; NArchive::NTar::CItem::~CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NTar::CSparseBlock>::~CRecordVector<NArchive::NTar::CSparseBlock>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CItem@NTar@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1CItem@NTar@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CItem@NTar@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CItem@NTar@NArchive@@QAE@XZ ENDP			; NArchive::NTar::CItem::~CItem
PUBLIC	??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::operator=
EXTRN	??4AString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z
_TEXT	SEGMENT
_$S1$67765 = -8						; size = 4
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z PROC	; NArchive::NTar::CItem::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	ecx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+32], ecx
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+36], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+44], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ecx+48], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+52], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+56], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 84					; 00000054H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
	mov	DWORD PTR _$S1$67765[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	ecx, DWORD PTR _$S1$67765[ebp]
	add	ecx, 1
	mov	DWORD PTR _$S1$67765[ebp], ecx
$LN3@operator:
	cmp	DWORD PTR _$S1$67765[ebp], 8
	jae	SHORT $LN1@operator
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _$S1$67765[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, DWORD PTR _$S1$67765[ebp]
	mov	cl, BYTE PTR [eax+96]
	mov	BYTE PTR [edx+96], cl
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+104]
	mov	BYTE PTR [edx+104], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+105]
	mov	BYTE PTR [edx+105], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+106]
	mov	BYTE PTR [edx+106], cl
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 108				; 0000006cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z ; CRecordVector<NArchive::NTar::CSparseBlock>::operator=
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CItem@NTar@NArchive@@QAEAAU012@ABU012@@Z ENDP	; NArchive::NTar::CItem::operator=
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_buf$ = -532						; size = 512
_rem$ = -16						; size = 4
_lastRecordSize$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_dataSize$ = 8						; size = 8
?FillDataResidual@COutArchive@NTar@NArchive@@QAEJ_K@Z PROC ; NArchive::NTar::COutArchive::FillDataResidual
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarout.cpp
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _dataSize$[ebp]
	and	eax, 511				; 000001ffH
	mov	DWORD PTR _lastRecordSize$[ebp], eax
; Line 226
	jne	SHORT $LN1@FillDataRe
; Line 227
	xor	eax, eax
	jmp	SHORT $LN2@FillDataRe
$LN1@FillDataRe:
; Line 228
	mov	ecx, 512				; 00000200H
	sub	ecx, DWORD PTR _lastRecordSize$[ebp]
	mov	DWORD PTR _rem$[ebp], ecx
; Line 230
	mov	edx, DWORD PTR _rem$[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 231
	mov	ecx, DWORD PTR _rem$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ; NArchive::NTar::COutArchive::WriteBytes
$LN2@FillDataRe:
; Line 232
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@FillDataRe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN6@FillDataRe:
	DD	1
	DD	$LN5@FillDataRe
$LN5@FillDataRe:
	DD	-532					; fffffdecH
	DD	512					; 00000200H
	DD	$LN4@FillDataRe
$LN4@FillDataRe:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?FillDataResidual@COutArchive@NTar@NArchive@@QAEJ_K@Z ENDP ; NArchive::NTar::COutArchive::FillDataResidual
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?WriteFinishHeader@COutArchive@NTar@NArchive@@QAEJXZ ; NArchive::NTar::COutArchive::WriteFinishHeader
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$67787 = -536				; size = 4
_i$67783 = -532						; size = 4
_record$ = -524						; size = 512
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?WriteFinishHeader@COutArchive@NTar@NArchive@@QAEJXZ PROC ; NArchive::NTar::COutArchive::WriteFinishHeader
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	push	512					; 00000200H
	push	0
	lea	eax, DWORD PTR _record$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 238
	mov	DWORD PTR _i$67783[ebp], 0
	jmp	SHORT $LN4@WriteFinis
$LN3@WriteFinis:
	mov	ecx, DWORD PTR _i$67783[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67783[ebp], ecx
$LN4@WriteFinis:
	cmp	DWORD PTR _i$67783[ebp], 2
	jae	SHORT $LN2@WriteFinis
; Line 240
	push	512					; 00000200H
	lea	edx, DWORD PTR _record$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NTar@NArchive@@AAEJPBXI@Z ; NArchive::NTar::COutArchive::WriteBytes
	mov	DWORD PTR ___result__$67787[ebp], eax
	cmp	DWORD PTR ___result__$67787[ebp], 0
	je	SHORT $LN1@WriteFinis
	mov	eax, DWORD PTR ___result__$67787[ebp]
	jmp	SHORT $LN5@WriteFinis
$LN1@WriteFinis:
; Line 241
	jmp	SHORT $LN3@WriteFinis
$LN2@WriteFinis:
; Line 242
	xor	eax, eax
$LN5@WriteFinis:
; Line 243
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@WriteFinis
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@WriteFinis:
	DD	1
	DD	$LN8@WriteFinis
$LN8@WriteFinis:
	DD	-524					; fffffdf4H
	DD	512					; 00000200H
	DD	$LN7@WriteFinis
$LN7@WriteFinis:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
?WriteFinishHeader@COutArchive@NTar@NArchive@@QAEJXZ ENDP ; NArchive::NTar::COutArchive::WriteFinishHeader
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z
_TEXT	SEGMENT
$T67956 = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z PROC ; CRecordVector<NArchive::NTar::CSparseBlock>::CRecordVector<NArchive::NTar::CSparseBlock>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 38
	mov	ecx, DWORD PTR _v$[ebp]
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	mov	DWORD PTR _size$[ebp], eax
; Line 39
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CRecordVec
; Line 41
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 16					; 00000010H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T67956[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T67956[ebp]
	mov	DWORD PTR [eax], ecx
; Line 42
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 44
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@CRecordVec:
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@ABV0@@Z ENDP ; CRecordVector<NArchive::NTar::CSparseBlock>::CRecordVector<NArchive::NTar::CSparseBlock>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ PROC ; CRecordVector<NArchive::NTar::CSparseBlock>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ENDP ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
$T67961 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::NTar::CSparseBlock>::~CRecordVector<NArchive::NTar::CSparseBlock>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67961[ebp], ecx
	mov	edx, DWORD PTR $T67961[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::NTar::CSparseBlock>::~CRecordVector<NArchive::NTar::CSparseBlock>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
$T67965 = -16						; size = 4
$T67964 = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z PROC ; CRecordVector<NArchive::NTar::CSparseBlock>::operator=, COMDAT
; _this$ = ecx
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 169
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN3@operator@2
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	jmp	$LN4@operator@2
$LN3@operator@2:
; Line 171
	mov	ecx, DWORD PTR _v$[ebp]
	call	?Size@?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::NTar::CSparseBlock>::Size
	mov	DWORD PTR _size$[ebp], eax
; Line 172
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jbe	SHORT $LN2@operator@2
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67964[ebp], ecx
	mov	edx, DWORD PTR $T67964[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 177
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 178
	xor	ecx, ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	edx, 16					; 00000010H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T67965[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T67965[ebp]
	mov	DWORD PTR [eax], ecx
; Line 179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN2@operator@2:
; Line 181
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 182
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN1@operator@2
; Line 183
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@operator@2:
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
$LN4@operator@2:
; Line 185
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QAEAAV0@ABV0@@Z ENDP ; CRecordVector<NArchive::NTar::CSparseBlock>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z PROC ; CRecordVector<NArchive::NTar::CSparseBlock>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCSparseBlock@NTar@NArchive@@@@QBEABUCSparseBlock@NTar@NArchive@@I@Z ENDP ; CRecordVector<NArchive::NTar::CSparseBlock>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
_TEXT	ENDS
END

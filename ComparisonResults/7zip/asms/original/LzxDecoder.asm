; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\LzxDecoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
PUBLIC	??1CLzOutWindow@@QAE@XZ				; CLzOutWindow::~CLzOutWindow
PUBLIC	??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ	; NCompress::NLzx::NBitStream::CDecoder::~CDecoder
PUBLIC	??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ; CMyComPtr<ISequentialOutStream>::operator=
PUBLIC	??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ	; NCompress::NLzx::Cx86ConvertOutStream::Cx86ConvertOutStream
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	??0CLzOutWindow@@QAE@XZ				; CLzOutWindow::CLzOutWindow
PUBLIC	??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ	; NCompress::NLzx::NBitStream::CDecoder::CDecoder
PUBLIC	??_7CDecoder@NLzx@NCompress@@6B@		; NCompress::NLzx::CDecoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CDecoder@NLzx@NCompress@@QAE@_N@Z		; NCompress::NLzx::CDecoder::CDecoder
PUBLIC	??_R4CDecoder@NLzx@NCompress@@6B@		; NCompress::NLzx::CDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecoder@NLzx@NCompress@@@8		; NCompress::NLzx::CDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CDecoder@NLzx@NCompress@@8			; NCompress::NLzx::CDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecoder@NLzx@NCompress@@8			; NCompress::NLzx::CDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecoder@NLzx@NCompress@@8	; NCompress::NLzx::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CDecoder@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NLzx::CDecoder::QueryInterface
PUBLIC	?AddRef@CDecoder@NLzx@NCompress@@UAGKXZ		; NCompress::NLzx::CDecoder::AddRef
PUBLIC	?Release@CDecoder@NLzx@NCompress@@UAGKXZ	; NCompress::NLzx::CDecoder::Release
PUBLIC	?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NLzx::CDecoder::Code
PUBLIC	?Flush@CDecoder@NLzx@NCompress@@UAGJXZ		; NCompress::NLzx::CDecoder::Flush
PUBLIC	?SetOutStreamSize@CDecoder@NLzx@NCompress@@UAGJPB_K@Z ; NCompress::NLzx::CDecoder::SetOutStreamSize
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecoder@NLzx@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecoder@NLzx@NCompress@@8 DD FLAT:??_R0?AVCDecoder@NLzx@NCompress@@@8 ; NCompress::NLzx::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecoder@NLzx@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecoder@NLzx@NCompress@@8
rdata$r	SEGMENT
??_R2CDecoder@NLzx@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CDecoder@NLzx@NCompress@@8 ; NCompress::NLzx::CDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CDecoder@NLzx@NCompress@@8
rdata$r	SEGMENT
??_R3CDecoder@NLzx@NCompress@@8 DD 00H			; NCompress::NLzx::CDecoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CDecoder@NLzx@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecoder@NLzx@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCDecoder@NLzx@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NLzx::CDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecoder@NLzx@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDecoder@NLzx@NCompress@@6B@
rdata$r	SEGMENT
??_R4CDecoder@NLzx@NCompress@@6B@ DD 00H		; NCompress::NLzx::CDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NLzx@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NLzx@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CDecoder@NLzx@NCompress@@6B@
CONST	SEGMENT
??_7CDecoder@NLzx@NCompress@@6B@ DD FLAT:??_R4CDecoder@NLzx@NCompress@@6B@ ; NCompress::NLzx::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NLzx@NCompress@@UAGKXZ
	DD	FLAT:?Release@CDecoder@NLzx@NCompress@@UAGKXZ
	DD	FLAT:?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:?Flush@CDecoder@NLzx@NCompress@@UAGJXZ
	DD	FLAT:?SetOutStreamSize@CDecoder@NLzx@NCompress@@UAGJPB_K@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CDecoder@NLzx@NCompress@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$3
__ehfuncinfo$??0CDecoder@NLzx@NCompress@@QAE@_N@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CDecoder@NLzx@NCompress@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv137 = -28						; size = 4
$T67614 = -24						; size = 4
$T67613 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wimMode$ = 8						; size = 1
??0CDecoder@NLzx@NCompress@@QAE@_N@Z PROC		; NCompress::NLzx::CDecoder::CDecoder
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDecoder@NLzx@NCompress@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NLzx@NCompress@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ ; NCompress::NLzx::NBitStream::CDecoder::CDecoder
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0CLzOutWindow@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7352				; 00001cb8H
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+7360], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+7368], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _wimMode$[ebp]
	mov	BYTE PTR [eax+7369], cl
; Line 19
	push	32796					; 0000801cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T67614[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T67614[ebp], 0
	je	SHORT $LN3@CDecoder
	mov	ecx, DWORD PTR $T67614[ebp]
	call	??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN4@CDecoder
$LN3@CDecoder:
	mov	DWORD PTR tv137[ebp], 0
$LN4@CDecoder:
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T67613[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T67613[ebp]
	mov	DWORD PTR [eax+7348], ecx
; Line 20
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+7348]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7352				; 00001cb8H
	call	??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ; CMyComPtr<ISequentialOutStream>::operator=
; Line 21
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1CLzOutWindow@@QAE@XZ
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7352				; 00001cb8H
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$??0CDecoder@NLzx@NCompress@@QAE@_N@Z$3:
	mov	eax, DWORD PTR $T67614[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CDecoder@NLzx@NCompress@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDecoder@NLzx@NCompress@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDecoder@NLzx@NCompress@@QAE@_N@Z ENDP		; NCompress::NLzx::CDecoder::CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	??0CInBuffer@@QAE@XZ				; CInBuffer::CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ PROC	; NCompress::NLzx::NBitStream::CDecoder::CDecoder, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBuffer@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ ENDP	; NCompress::NLzx::NBitStream::CDecoder::CDecoder
_TEXT	ENDS
EXTRN	??0CInBufferBase@@QAE@XZ:PROC			; CInBufferBase::CInBufferBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBuffer@@QAE@XZ PROC				; CInBuffer::CInBuffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBuffer@@QAE@XZ ENDP				; CInBuffer::CInBuffer
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CDecoder@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CDecoder@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NLzx::CDecoder::QueryInterface, COMDAT
; Line 141
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter
$LN1@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDecoder@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NLzx::CDecoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NLzx@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDecoder@NLzx@NCompress@@UAGKXZ PROC		; NCompress::NLzx::CDecoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 141
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDecoder@NLzx@NCompress@@UAGKXZ ENDP		; NCompress::NLzx::CDecoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z		; NCompress::NLzx::CDecoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CDecoder@NLzx@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T67654 = -8						; size = 4
$T67653 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDecoder@NLzx@NCompress@@UAGKXZ PROC		; NCompress::NLzx::CDecoder::Release, COMDAT
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67654[ebp], edx
	mov	eax, DWORD PTR $T67654[ebp]
	mov	DWORD PTR $T67653[ebp], eax
	cmp	DWORD PTR $T67653[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T67653[ebp]
	call	??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDecoder@NLzx@NCompress@@UAGKXZ ENDP		; NCompress::NLzx::CDecoder::Release
_TEXT	ENDS
PUBLIC	??1CDecoder@NLzx@NCompress@@QAE@XZ		; NCompress::NLzx::CDecoder::~CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z PROC		; NCompress::NLzx::CDecoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDecoder@NLzx@NCompress@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDecoder@NLzx@NCompress@@QAEPAXI@Z ENDP		; NCompress::NLzx::CDecoder::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDecoder@NLzx@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDecoder@NLzx@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDecoder@NLzx@NCompress@@QAE@XZ$1
__ehfuncinfo$??1CDecoder@NLzx@NCompress@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CDecoder@NLzx@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDecoder@NLzx@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDecoder@NLzx@NCompress@@QAE@XZ PROC			; NCompress::NLzx::CDecoder::~CDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDecoder@NLzx@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7352				; 00001cb8H
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1CLzOutWindow@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDecoder@NLzx@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ
__unwindfunclet$??1CDecoder@NLzx@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1CLzOutWindow@@QAE@XZ
__ehhandler$??1CDecoder@NLzx@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDecoder@NLzx@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDecoder@NLzx@NCompress@@QAE@XZ ENDP			; NCompress::NLzx::CDecoder::~CDecoder
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ PROC	; NCompress::NLzx::NBitStream::CDecoder::~CDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDecoder@NBitStream@NLzx@NCompress@@QAE@XZ ENDP	; NCompress::NLzx::NBitStream::CDecoder::~CDecoder
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
_TEXT	ENDS
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::~CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::~CLzOutWindow
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::CLzOutWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
PUBLIC	??_7Cx86ConvertOutStream@NLzx@NCompress@@6B@	; NCompress::NLzx::Cx86ConvertOutStream::`vftable'
PUBLIC	??0ISequentialOutStream@@QAE@XZ			; ISequentialOutStream::ISequentialOutStream
PUBLIC	??_R4Cx86ConvertOutStream@NLzx@NCompress@@6B@	; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCx86ConvertOutStream@NLzx@NCompress@@@8	; NCompress::NLzx::Cx86ConvertOutStream `RTTI Type Descriptor'
PUBLIC	??_R3Cx86ConvertOutStream@NLzx@NCompress@@8	; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Cx86ConvertOutStream@NLzx@NCompress@@8	; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Cx86ConvertOutStream@NLzx@NCompress@@8 ; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialOutStream@@@8		; ISequentialOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Base Class Array'
PUBLIC	?QueryInterface@Cx86ConvertOutStream@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NLzx::Cx86ConvertOutStream::QueryInterface
PUBLIC	?AddRef@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ ; NCompress::NLzx::Cx86ConvertOutStream::AddRef
PUBLIC	?Release@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ ; NCompress::NLzx::Cx86ConvertOutStream::Release
EXTRN	?Write@Cx86ConvertOutStream@NLzx@NCompress@@UAGJPBXIPAI@Z:PROC ; NCompress::NLzx::Cx86ConvertOutStream::Write
;	COMDAT ??_R2ISequentialOutStream@@8
rdata$r	SEGMENT
??_R2ISequentialOutStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8 ; ISequentialOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialOutStream@@8
rdata$r	SEGMENT
??_R3ISequentialOutStream@@8 DD 00H			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialOutStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Cx86ConvertOutStream@NLzx@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Cx86ConvertOutStream@NLzx@NCompress@@8 DD FLAT:??_R0?AVCx86ConvertOutStream@NLzx@NCompress@@@8 ; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Cx86ConvertOutStream@NLzx@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2Cx86ConvertOutStream@NLzx@NCompress@@8
rdata$r	SEGMENT
??_R2Cx86ConvertOutStream@NLzx@NCompress@@8 DD FLAT:??_R1A@?0A@EA@Cx86ConvertOutStream@NLzx@NCompress@@8 ; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3Cx86ConvertOutStream@NLzx@NCompress@@8
rdata$r	SEGMENT
??_R3Cx86ConvertOutStream@NLzx@NCompress@@8 DD 00H	; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2Cx86ConvertOutStream@NLzx@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCx86ConvertOutStream@NLzx@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCx86ConvertOutStream@NLzx@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NLzx::Cx86ConvertOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCx86ConvertOutStream@NLzx@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Cx86ConvertOutStream@NLzx@NCompress@@6B@
rdata$r	SEGMENT
??_R4Cx86ConvertOutStream@NLzx@NCompress@@6B@ DD 00H	; NCompress::NLzx::Cx86ConvertOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCx86ConvertOutStream@NLzx@NCompress@@@8
	DD	FLAT:??_R3Cx86ConvertOutStream@NLzx@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7Cx86ConvertOutStream@NLzx@NCompress@@6B@
CONST	SEGMENT
??_7Cx86ConvertOutStream@NLzx@NCompress@@6B@ DD FLAT:??_R4Cx86ConvertOutStream@NLzx@NCompress@@6B@ ; NCompress::NLzx::Cx86ConvertOutStream::`vftable'
	DD	FLAT:?QueryInterface@Cx86ConvertOutStream@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ
	DD	FLAT:?Release@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ
	DD	FLAT:?Write@Cx86ConvertOutStream@NLzx@NCompress@@UAGJPBXIPAI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ PROC	; NCompress::NLzx::Cx86ConvertOutStream::Cx86ConvertOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Cx86ConvertOutStream@NLzx@NCompress@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Cx86ConvertOutStream@NLzx@NCompress@@QAE@XZ ENDP	; NCompress::NLzx::Cx86ConvertOutStream::Cx86ConvertOutStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@Cx86ConvertOutStream@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@Cx86ConvertOutStream@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NLzx::Cx86ConvertOutStream::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzx86converter.h
; Line 38
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter@2
$LN1@QueryInter@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter@2:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@Cx86ConvertOutStream@NLzx@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NLzx::Cx86ConvertOutStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ PROC ; NCompress::NLzx::Cx86ConvertOutStream::AddRef, COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ ENDP ; NCompress::NLzx::Cx86ConvertOutStream::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
$T67695 = -4						; size = 4
_this$ = 8						; size = 4
?Release@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ PROC ; NCompress::NLzx::Cx86ConvertOutStream::Release, COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67695[ebp], edx
	mov	eax, DWORD PTR $T67695[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
$LN2@Release@2:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@Cx86ConvertOutStream@NLzx@NCompress@@UAGKXZ ENDP ; NCompress::NLzx::Cx86ConvertOutStream::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??_7ISequentialOutStream@@6B@			; ISequentialOutStream::`vftable'
PUBLIC	??_R4ISequentialOutStream@@6B@			; ISequentialOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialOutStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialOutStream@@6B@ DD 00H			; ISequentialOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialOutStream@@@8
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialOutStream@@6B@
CONST	SEGMENT
??_7ISequentialOutStream@@6B@ DD FLAT:??_R4ISequentialOutStream@@6B@ ; ISequentialOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialOutStream@@QAE@XZ PROC			; ISequentialOutStream::ISequentialOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialOutStream@@QAE@XZ ENDP			; ISequentialOutStream::ISequentialOutStream
_TEXT	ENDS
EXTRN	?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ:PROC ; NCompress::NLzx::Cx86ConvertOutStream::Flush
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$67022 = -4					; size = 4
_this$ = 8						; size = 4
?Flush@CDecoder@NLzx@NCompress@@UAGJXZ PROC		; NCompress::NLzx::CDecoder::Flush
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.cpp
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
	mov	DWORD PTR ___result__$67022[ebp], eax
	cmp	DWORD PTR ___result__$67022[ebp], 0
	je	SHORT $LN1@Flush
	mov	eax, DWORD PTR ___result__$67022[ebp]
	jmp	SHORT $LN2@Flush
$LN1@Flush:
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+7348]
	call	?Flush@Cx86ConvertOutStream@NLzx@NCompress@@QAEJXZ ; NCompress::NLzx::Cx86ConvertOutStream::Flush
$LN2@Flush:
; Line 36
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Flush@CDecoder@NLzx@NCompress@@UAGJXZ ENDP		; NCompress::NLzx::CDecoder::Flush
_TEXT	ENDS
PUBLIC	?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
PUBLIC	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z	; NCompress::NLzx::CDecoder::ReadBits
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z PROC		; NCompress::NLzx::CDecoder::ReadBits
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ENDP		; NCompress::NLzx::CDecoder::ReadBits
_TEXT	ENDS
PUBLIC	?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ; NCompress::NLzx::NBitStream::CDecoder::MovePos
PUBLIC	?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ; NCompress::NLzx::NBitStream::CDecoder::GetValue
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::ReadBits, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ; NCompress::NLzx::NBitStream::CDecoder::GetValue
	mov	DWORD PTR _res$[ebp], eax
; Line 70
	mov	ecx, DWORD PTR _numBits$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ; NCompress::NLzx::NBitStream::CDecoder::MovePos
; Line 71
	mov	eax, DWORD PTR _res$[ebp]
; Line 72
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::GetValue, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	shr	eax, cl
	and	eax, 131071				; 0001ffffH
	mov	ecx, 17					; 00000011H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
; Line 59
	mov	esp, ebp
	pop	ebp
	ret	4
?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::GetValue
_TEXT	ENDS
PUBLIC	?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ; NCompress::NLzx::NBitStream::CDecoder::Normalize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::MovePos, COMDAT
; _this$ = ecx
; Line 62
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ; NCompress::NLzx::NBitStream::CDecoder::Normalize
; Line 65
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::MovePos
_TEXT	ENDS
PUBLIC	?ReadByte@CInBufferBase@@QAEEXZ			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ
_TEXT	SEGMENT
_b1$66779 = -6						; size = 1
_b0$66778 = -5						; size = 1
_this$ = -4						; size = 4
?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ PROC ; NCompress::NLzx::NBitStream::CDecoder::Normalize, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	jmp	SHORT $LN3@Normalize
$LN2@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
$LN3@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 16			; 00000010H
	jb	SHORT $LN4@Normalize
; Line 49
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	mov	BYTE PTR _b0$66778[ebp], al
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	mov	BYTE PTR _b1$66779[ebp], al
; Line 51
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	shl	edx, 8
	movzx	eax, BYTE PTR _b1$66779[ebp]
	or	edx, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 52
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	shl	eax, 8
	movzx	ecx, BYTE PTR _b0$66778[ebp]
	or	eax, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 53
	jmp	SHORT $LN2@Normalize
$LN4@Normalize:
; Line 54
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ENDP ; NCompress::NLzx::NBitStream::CDecoder::Normalize
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAEEXZ
_TEXT	SEGMENT
tv70 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte@CInBufferBase@@QAEEXZ PROC			; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv70[ebp], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	al, BYTE PTR tv70[ebp]
$LN2@ReadByte:
; Line 76
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CInBufferBase@@QAEEXZ ENDP			; CInBufferBase::ReadByte
_TEXT	ENDS
PUBLIC	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,20>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
PUBLIC	?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,20>::SetCodeLengths
PUBLIC	__$ArrayPad$
PUBLIC	?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z ; NCompress::NLzx::CDecoder::ReadTable
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_number$67047 = -52					; size = 4
_symbol$ = -45						; size = 1
_num$ = -44						; size = 4
_i$ = -40						; size = 4
_levelLevels$ = -32					; size = 20
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lastLevels$ = 8					; size = 4
_newLevels$ = 12					; size = 4
_numSymbols$ = 16					; size = 4
?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z PROC	; NCompress::NLzx::CDecoder::ReadTable
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.cpp
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@ReadTable
$LN16@ReadTable:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@ReadTable:
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jae	SHORT $LN15@ReadTable
; Line 47
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	mov	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _levelLevels$[ebp+ecx], al
	jmp	SHORT $LN16@ReadTable
$LN15@ReadTable:
; Line 48
	lea	edx, DWORD PTR _levelLevels$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5712				; 00001650H
	call	?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,20>::SetCodeLengths
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@ReadTable
	xor	al, al
	jmp	$LN18@ReadTable
$LN14@ReadTable:
; Line 49
	mov	DWORD PTR _num$[ebp], 0
; Line 50
	mov	BYTE PTR _symbol$[ebp], 0
; Line 51
	mov	DWORD PTR _i$[ebp], 0
$LN13@ReadTable:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _numSymbols$[ebp]
	jae	$LN12@ReadTable
; Line 53
	cmp	DWORD PTR _num$[ebp], 0
	je	SHORT $LN11@ReadTable
; Line 55
	mov	edx, DWORD PTR _newLevels$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR _symbol$[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _lastLevels$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR _symbol$[ebp]
	mov	BYTE PTR [ecx], dl
; Line 56
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 57
	mov	ecx, DWORD PTR _num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _num$[ebp], ecx
; Line 58
	jmp	SHORT $LN13@ReadTable
$LN11@ReadTable:
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5712				; 00001650H
	call	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,20>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
	mov	DWORD PTR _number$67047[ebp], eax
; Line 61
	cmp	DWORD PTR _number$67047[ebp], 17	; 00000011H
	jne	SHORT $LN10@ReadTable
; Line 63
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	add	eax, 4
	mov	DWORD PTR _num$[ebp], eax
; Line 64
	mov	BYTE PTR _symbol$[ebp], 0
	jmp	$LN9@ReadTable
$LN10@ReadTable:
; Line 66
	cmp	DWORD PTR _number$67047[ebp], 18	; 00000012H
	jne	SHORT $LN8@ReadTable
; Line 68
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	add	eax, 20					; 00000014H
	mov	DWORD PTR _num$[ebp], eax
; Line 69
	mov	BYTE PTR _symbol$[ebp], 0
	jmp	SHORT $LN9@ReadTable
$LN8@ReadTable:
; Line 71
	cmp	DWORD PTR _number$67047[ebp], 19	; 00000013H
	je	SHORT $LN5@ReadTable
	cmp	DWORD PTR _number$67047[ebp], 16	; 00000010H
	ja	SHORT $LN6@ReadTable
$LN5@ReadTable:
; Line 73
	cmp	DWORD PTR _number$67047[ebp], 16	; 00000010H
	ja	SHORT $LN4@ReadTable
; Line 74
	mov	DWORD PTR _num$[ebp], 1
; Line 75
	jmp	SHORT $LN3@ReadTable
$LN4@ReadTable:
; Line 77
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	add	eax, 4
	mov	DWORD PTR _num$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5712				; 00001650H
	call	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,20>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
	mov	DWORD PTR _number$67047[ebp], eax
; Line 79
	cmp	DWORD PTR _number$67047[ebp], 16	; 00000010H
	jbe	SHORT $LN3@ReadTable
; Line 80
	xor	al, al
	jmp	SHORT $LN18@ReadTable
$LN3@ReadTable:
; Line 82
	mov	ecx, DWORD PTR _lastLevels$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [ecx]
	add	eax, 17					; 00000011H
	sub	eax, DWORD PTR _number$67047[ebp]
	xor	edx, edx
	mov	ecx, 17					; 00000011H
	div	ecx
	mov	BYTE PTR _symbol$[ebp], dl
; Line 84
	jmp	SHORT $LN9@ReadTable
$LN6@ReadTable:
; Line 85
	xor	al, al
	jmp	SHORT $LN18@ReadTable
$LN9@ReadTable:
; Line 86
	jmp	$LN13@ReadTable
$LN12@ReadTable:
; Line 87
	mov	al, 1
$LN18@ReadTable:
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@ReadTable
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN23@ReadTable:
	DD	1
	DD	$LN22@ReadTable
$LN22@ReadTable:
	DD	-32					; ffffffe0H
	DD	20					; 00000014H
	DD	$LN21@ReadTable
$LN21@ReadTable:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z ENDP	; NCompress::NLzx::CDecoder::ReadTable
_TEXT	ENDS
PUBLIC	?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,249>::SetCodeLengths
PUBLIC	?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,656>::SetCodeLengths
PUBLIC	?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,8>::SetCodeLengths
PUBLIC	?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadUInt32
PUBLIC	?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ ; NCompress::NLzx::NBitStream::CDecoder::GetBitPosition
PUBLIC	?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBitsBig
PUBLIC	?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ ; NCompress::NLzx::NBitStream::CDecoder::DirectReadByte
PUBLIC	__$ArrayPad$
PUBLIC	?ReadTables@CDecoder@NLzx@NCompress@@AAE_NXZ	; NCompress::NLzx::CDecoder::ReadTables
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv135 = -700						; size = 4
_i$67098 = -696						; size = 4
_i$67090 = -692						; size = 4
_j$67084 = -688						; size = 4
_rep$67083 = -684					; size = 4
_i$67079 = -680						; size = 4
_blockType$67070 = -676					; size = 4
_newLevels$ = -668					; size = 656
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ReadTables@CDecoder@NLzx@NCompress@@AAE_NXZ PROC	; NCompress::NLzx::CDecoder::ReadTables
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 700				; 000002bcH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-700]
	mov	ecx, 175				; 000000afH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+7368]
	test	ecx, ecx
	je	SHORT $LN26@ReadTables
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ ; NCompress::NLzx::NBitStream::CDecoder::DirectReadByte
$LN26@ReadTables:
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ; NCompress::NLzx::NBitStream::CDecoder::Normalize
; Line 98
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	mov	DWORD PTR _blockType$67070[ebp], eax
; Line 99
	cmp	DWORD PTR _blockType$67070[ebp], 3
	jbe	SHORT $LN25@ReadTables
; Line 100
	xor	al, al
	jmp	$LN27@ReadTables
$LN25@ReadTables:
; Line 101
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+7369]
	test	eax, eax
	je	SHORT $LN24@ReadTables
; Line 102
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	cmp	eax, 1
	jne	SHORT $LN23@ReadTables
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+7356], 32768		; 00008000H
; Line 104
	jmp	SHORT $LN22@ReadTables
$LN23@ReadTables:
; Line 105
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+7356], eax
$LN22@ReadTables:
; Line 106
	jmp	SHORT $LN21@ReadTables
$LN24@ReadTables:
; Line 107
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBitsBig
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+7356], eax
$LN21@ReadTables:
; Line 109
	xor	edx, edx
	cmp	DWORD PTR _blockType$67070[ebp], 3
	sete	dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+112], dl
; Line 111
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+112]
	test	edx, edx
	je	SHORT $LN29@ReadTables
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+7356]
	and	ecx, 1
	je	SHORT $LN29@ReadTables
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN30@ReadTables
$LN29@ReadTables:
	mov	DWORD PTR tv135[ebp], 0
$LN30@ReadTables:
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv135[ebp]
	mov	BYTE PTR [edx+7368], al
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+112]
	test	edx, edx
	je	$LN20@ReadTables
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ ; NCompress::NLzx::NBitStream::CDecoder::GetBitPosition
	mov	ecx, 16					; 00000010H
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
; Line 116
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadUInt32
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN19@ReadTables
; Line 117
	xor	al, al
	jmp	$LN27@ReadTables
$LN19@ReadTables:
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], edx
; Line 119
	mov	DWORD PTR _i$67079[ebp], 1
	jmp	SHORT $LN18@ReadTables
$LN17@ReadTables:
	mov	ecx, DWORD PTR _i$67079[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67079[ebp], ecx
$LN18@ReadTables:
	cmp	DWORD PTR _i$67079[ebp], 3
	jae	SHORT $LN16@ReadTables
; Line 121
	mov	DWORD PTR _rep$67083[ebp], 0
; Line 122
	mov	DWORD PTR _j$67084[ebp], 0
	jmp	SHORT $LN15@ReadTables
$LN14@ReadTables:
	mov	edx, DWORD PTR _j$67084[ebp]
	add	edx, 1
	mov	DWORD PTR _j$67084[ebp], edx
$LN15@ReadTables:
	cmp	DWORD PTR _j$67084[ebp], 4
	jae	SHORT $LN13@ReadTables
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ ; NCompress::NLzx::NBitStream::CDecoder::DirectReadByte
	movzx	eax, al
	mov	ecx, DWORD PTR _j$67084[ebp]
	shl	ecx, 3
	shl	eax, cl
	or	eax, DWORD PTR _rep$67083[ebp]
	mov	DWORD PTR _rep$67083[ebp], eax
	jmp	SHORT $LN14@ReadTables
$LN13@ReadTables:
; Line 124
	mov	ecx, DWORD PTR _rep$67083[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _i$67079[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+96], ecx
; Line 125
	jmp	$LN17@ReadTables
$LN16@ReadTables:
; Line 126
	mov	al, 1
	jmp	$LN27@ReadTables
$LN20@ReadTables:
; Line 128
	xor	ecx, ecx
	cmp	DWORD PTR _blockType$67070[ebp], 2
	sete	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+113], cl
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+113]
	test	ecx, ecx
	je	SHORT $LN12@ReadTables
; Line 131
	mov	DWORD PTR _i$67090[ebp], 0
	jmp	SHORT $LN11@ReadTables
$LN10@ReadTables:
	mov	edx, DWORD PTR _i$67090[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67090[ebp], edx
$LN11@ReadTables:
	cmp	DWORD PTR _i$67090[ebp], 8
	jae	SHORT $LN9@ReadTables
; Line 132
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	mov	ecx, DWORD PTR _i$67090[ebp]
	mov	BYTE PTR _newLevels$[ebp+ecx], al
	jmp	SHORT $LN10@ReadTables
$LN9@ReadTables:
; Line 133
	lea	edx, DWORD PTR _newLevels$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5032				; 000013a8H
	call	?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,8>::SetCodeLengths
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN12@ReadTables
	xor	al, al
	jmp	$LN27@ReadTables
$LN12@ReadTables:
; Line 137
	push	256					; 00000100H
	lea	ecx, DWORD PTR _newLevels$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 6440				; 00001928H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z ; NCompress::NLzx::CDecoder::ReadTable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@ReadTables
	xor	al, al
	jmp	$LN27@ReadTables
$LN7@ReadTables:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	lea	eax, DWORD PTR _newLevels$[ebp+256]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 6696				; 00001a28H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z ; NCompress::NLzx::CDecoder::ReadTable
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@ReadTables
	xor	al, al
	jmp	$LN27@ReadTables
$LN6@ReadTables:
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	add	ecx, 256				; 00000100H
	mov	DWORD PTR _i$67098[ebp], ecx
	jmp	SHORT $LN5@ReadTables
$LN4@ReadTables:
	mov	edx, DWORD PTR _i$67098[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67098[ebp], edx
$LN5@ReadTables:
	cmp	DWORD PTR _i$67098[ebp], 656		; 00000290H
	jae	SHORT $LN3@ReadTables
; Line 140
	mov	eax, DWORD PTR _i$67098[ebp]
	mov	BYTE PTR _newLevels$[ebp+eax], 0
	jmp	SHORT $LN4@ReadTables
$LN3@ReadTables:
; Line 141
	lea	ecx, DWORD PTR _newLevels$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,656>::SetCodeLengths
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@ReadTables
	xor	al, al
	jmp	SHORT $LN27@ReadTables
$LN2@ReadTables:
; Line 143
	push	249					; 000000f9H
	lea	eax, DWORD PTR _newLevels$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7096				; 00001bb8H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadTable@CDecoder@NLzx@NCompress@@AAE_NPAE0I@Z ; NCompress::NLzx::CDecoder::ReadTable
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ReadTables
	xor	al, al
	jmp	SHORT $LN27@ReadTables
$LN1@ReadTables:
; Line 144
	lea	eax, DWORD PTR _newLevels$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3388				; 00000d3cH
	call	?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<16,249>::SetCodeLengths
$LN27@ReadTables:
; Line 145
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@ReadTables
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 700				; 000002bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN33@ReadTables:
	DD	1
	DD	$LN32@ReadTables
$LN32@ReadTables:
	DD	-668					; fffffd64H
	DD	656					; 00000290H
	DD	$LN31@ReadTables
$LN31@ReadTables:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
?ReadTables@CDecoder@NLzx@NCompress@@AAE_NXZ ENDP	; NCompress::NLzx::CDecoder::ReadTables
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ PROC ; NCompress::NLzx::NBitStream::CDecoder::GetBitPosition, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
	and	eax, 15					; 0000000fH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBitPosition@CDecoder@NBitStream@NLzx@NCompress@@QBEIXZ ENDP ; NCompress::NLzx::NBitStream::CDecoder::GetBitPosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z
_TEXT	SEGMENT
_res$ = -16						; size = 4
_numBits1$ = -12					; size = 4
_numBits0$ = -8						; size = 4
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::ReadBitsBig, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _numBits$[ebp]
	shr	eax, 1
	mov	DWORD PTR _numBits0$[ebp], eax
; Line 77
	mov	ecx, DWORD PTR _numBits$[ebp]
	sub	ecx, DWORD PTR _numBits0$[ebp]
	mov	DWORD PTR _numBits1$[ebp], ecx
; Line 78
	mov	edx, DWORD PTR _numBits0$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
	mov	ecx, DWORD PTR _numBits1$[ebp]
	shl	eax, cl
	mov	DWORD PTR _res$[ebp], eax
; Line 79
	mov	eax, DWORD PTR _numBits1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
	add	eax, DWORD PTR _res$[ebp]
; Line 80
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBitsBig@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::ReadBitsBig
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::ReadUInt32, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN1@ReadUInt32
; Line 85
	xor	al, al
	jmp	SHORT $LN2@ReadUInt32
$LN1@ReadUInt32:
; Line 86
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	shr	edx, 16					; 00000010H
	and	edx, 65535				; 0000ffffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	shl	ecx, 16					; 00000010H
	and	ecx, -65536				; ffff0000H
	or	edx, ecx
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax], edx
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], 32			; 00000020H
; Line 88
	mov	al, 1
$LN2@ReadUInt32:
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadUInt32@CDecoder@NBitStream@NLzx@NCompress@@QAE_NAAI@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::ReadUInt32
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ PROC ; NCompress::NLzx::NBitStream::CDecoder::DirectReadByte, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ ENDP ; NCompress::NLzx::NBitStream::CDecoder::DirectReadByte
_TEXT	ENDS
PUBLIC	?ClearPrevLevels@CDecoder@NLzx@NCompress@@AAEXXZ ; NCompress::NLzx::CDecoder::ClearPrevLevels
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?ClearPrevLevels@CDecoder@NLzx@NCompress@@AAEXXZ PROC	; NCompress::NLzx::CDecoder::ClearPrevLevels
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.cpp
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@ClearPrevL
$LN5@ClearPrevL:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@ClearPrevL:
	cmp	DWORD PTR _i$[ebp], 656			; 00000290H
	jae	SHORT $LN4@ClearPrevL
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+6440], 0
	jmp	SHORT $LN5@ClearPrevL
$LN4@ClearPrevL:
; Line 167
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ClearPrevL
$LN2@ClearPrevL:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@ClearPrevL:
	cmp	DWORD PTR _i$[ebp], 249			; 000000f9H
	jae	SHORT $LN7@ClearPrevL
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax+7096], 0
	jmp	SHORT $LN2@ClearPrevL
$LN7@ClearPrevL:
; Line 169
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearPrevLevels@CDecoder@NLzx@NCompress@@AAEXXZ ENDP	; NCompress::NLzx::CDecoder::ClearPrevLevels
_TEXT	ENDS
PUBLIC	?CopyBlock@CLzOutWindow@@QAE_NII@Z		; CLzOutWindow::CopyBlock
PUBLIC	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,8>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
PUBLIC	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,249>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
PUBLIC	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,656>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
PUBLIC	?PutByte@CLzOutWindow@@QAEXE@Z			; CLzOutWindow::PutByte
PUBLIC	?GetByte@CLzOutWindow@@QBEEI@Z			; CLzOutWindow::GetByte
PUBLIC	?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z ; NCompress::NLzx::Cx86ConvertOutStream::Init
PUBLIC	?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ; NCompress::NLzx::NBitStream::CDecoder::Init
PUBLIC	?CodeSpec@CDecoder@NLzx@NCompress@@AAEJI@Z	; NCompress::NLzx::CDecoder::CodeSpec
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_locLen$67209 = -64					; size = 4
_alignTemp$67202 = -60					; size = 4
_numDirectBits$67197 = -56				; size = 4
_distance$67196 = -52					; size = 4
_distance$67194 = -48					; size = 4
_lenTemp$67187 = -44					; size = 4
_len$67185 = -40					; size = 4
_lenSlot$67184 = -36					; size = 4
_posSlot$67183 = -32					; size = 4
_posLenSlot$67180 = -28					; size = 4
_number$67173 = -24					; size = 4
_next$67158 = -20					; size = 4
_i$67145 = -16						; size = 4
_translationMode$67142 = -9				; size = 1
_i86TranslationSize$67141 = -8				; size = 4
_this$ = -4						; size = 4
_curSize$ = 8						; size = 4
?CodeSpec@CDecoder@NLzx@NCompress@@AAEJI@Z PROC		; NCompress::NLzx::CDecoder::CodeSpec
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+7364], -2		; fffffffeH
	jne	$LN27@CodeSpec
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+7364], 0
; Line 177
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ; NCompress::NLzx::NBitStream::CDecoder::Init
; Line 178
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+7360]
	test	eax, eax
	je	SHORT $LN34@CodeSpec
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+112]
	test	edx, edx
	jne	SHORT $LN35@CodeSpec
$LN34@CodeSpec:
; Line 179
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Normalize@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ; NCompress::NLzx::NBitStream::CDecoder::Normalize
$LN35@CodeSpec:
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+7360]
	test	ecx, ecx
	jne	$LN27@CodeSpec
; Line 182
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+7368], 0
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+7356], 0
; Line 184
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPrevLevels@CDecoder@NLzx@NCompress@@AAEXXZ ; NCompress::NLzx::CDecoder::ClearPrevLevels
; Line 185
	mov	DWORD PTR _i86TranslationSize$67141[ebp], 12000000 ; 00b71b00H
; Line 186
	mov	BYTE PTR _translationMode$67142[ebp], 1
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+7369]
	test	edx, edx
	jne	SHORT $LN32@CodeSpec
; Line 189
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR _translationMode$67142[ebp], al
; Line 190
	movzx	eax, BYTE PTR _translationMode$67142[ebp]
	test	eax, eax
	je	SHORT $LN32@CodeSpec
; Line 192
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	shl	eax, 16					; 00000010H
	mov	DWORD PTR _i86TranslationSize$67141[ebp], eax
; Line 193
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CDecoder@NLzx@NCompress@@AAEII@Z ; NCompress::NLzx::CDecoder::ReadBits
	or	eax, DWORD PTR _i86TranslationSize$67141[ebp]
	mov	DWORD PTR _i86TranslationSize$67141[ebp], eax
$LN32@CodeSpec:
; Line 196
	mov	ecx, DWORD PTR _i86TranslationSize$67141[ebp]
	push	ecx
	movzx	edx, BYTE PTR _translationMode$67142[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+7348]
	call	?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z ; NCompress::NLzx::Cx86ConvertOutStream::Init
; Line 198
	mov	DWORD PTR _i$67145[ebp], 0
	jmp	SHORT $LN30@CodeSpec
$LN29@CodeSpec:
	mov	ecx, DWORD PTR _i$67145[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67145[ebp], ecx
$LN30@CodeSpec:
	cmp	DWORD PTR _i$67145[ebp], 3
	jae	SHORT $LN27@CodeSpec
; Line 199
	mov	edx, DWORD PTR _i$67145[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+96], 0
	jmp	SHORT $LN29@CodeSpec
$LN27@CodeSpec:
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+7364], 0
	jle	SHORT $LN25@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	SHORT $LN25@CodeSpec
; Line 205
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?GetByte@CLzOutWindow@@QBEEI@Z		; CLzOutWindow::GetByte
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 206
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+7364]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+7364], eax
; Line 207
	mov	edx, DWORD PTR _curSize$[ebp]
	sub	edx, 1
	mov	DWORD PTR _curSize$[ebp], edx
; Line 208
	jmp	SHORT $LN27@CodeSpec
$LN25@CodeSpec:
; Line 210
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	$LN24@CodeSpec
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+7356], 0
	jne	SHORT $LN23@CodeSpec
; Line 213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadTables@CDecoder@NLzx@NCompress@@AAE_NXZ ; NCompress::NLzx::CDecoder::ReadTables
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN23@CodeSpec
; Line 214
	mov	eax, 1
	jmp	$LN37@CodeSpec
$LN23@CodeSpec:
; Line 215
	mov	edx, DWORD PTR _curSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+7356]
	push	ecx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR _next$67158[ebp], eax
; Line 216
	mov	edx, DWORD PTR _curSize$[ebp]
	sub	edx, DWORD PTR _next$67158[ebp]
	mov	DWORD PTR _curSize$[ebp], edx
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+7356]
	sub	ecx, DWORD PTR _next$67158[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+7356], ecx
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	test	ecx, ecx
	je	SHORT $LN17@CodeSpec
$LN20@CodeSpec:
; Line 220
	cmp	DWORD PTR _next$67158[ebp], 0
	jbe	SHORT $LN19@CodeSpec
; Line 222
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?DirectReadByte@CDecoder@NBitStream@NLzx@NCompress@@QAEEXZ ; NCompress::NLzx::NBitStream::CDecoder::DirectReadByte
	movzx	edx, al
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 223
	mov	eax, DWORD PTR _next$67158[ebp]
	sub	eax, 1
	mov	DWORD PTR _next$67158[ebp], eax
; Line 224
	jmp	SHORT $LN20@CodeSpec
$LN19@CodeSpec:
; Line 226
	jmp	$LN18@CodeSpec
$LN17@CodeSpec:
	cmp	DWORD PTR _next$67158[ebp], 0
	jbe	$LN18@CodeSpec
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,656>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
	mov	DWORD PTR _number$67173[ebp], eax
; Line 229
	cmp	DWORD PTR _number$67173[ebp], 256	; 00000100H
	jae	SHORT $LN15@CodeSpec
; Line 231
	movzx	edx, BYTE PTR _number$67173[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 232
	mov	eax, DWORD PTR _next$67158[ebp]
	sub	eax, 1
	mov	DWORD PTR _next$67158[ebp], eax
; Line 234
	jmp	$LN14@CodeSpec
$LN15@CodeSpec:
; Line 236
	mov	ecx, DWORD PTR _number$67173[ebp]
	sub	ecx, 256				; 00000100H
	mov	DWORD PTR _posLenSlot$67180[ebp], ecx
; Line 237
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _posLenSlot$67180[ebp]
	cmp	eax, DWORD PTR [edx+108]
	jb	SHORT $LN13@CodeSpec
; Line 238
	mov	eax, 1
	jmp	$LN37@CodeSpec
$LN13@CodeSpec:
; Line 239
	mov	ecx, DWORD PTR _posLenSlot$67180[ebp]
	shr	ecx, 3
	mov	DWORD PTR _posSlot$67183[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _posLenSlot$67180[ebp]
	xor	edx, edx
	mov	ecx, 8
	div	ecx
	mov	DWORD PTR _lenSlot$67184[ebp], edx
; Line 241
	mov	edx, DWORD PTR _lenSlot$67184[ebp]
	add	edx, 2
	mov	DWORD PTR _len$67185[ebp], edx
; Line 242
	cmp	DWORD PTR _lenSlot$67184[ebp], 7
	jne	SHORT $LN12@CodeSpec
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3388				; 00000d3cH
	call	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,249>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
	mov	DWORD PTR _lenTemp$67187[ebp], eax
; Line 245
	cmp	DWORD PTR _lenTemp$67187[ebp], 249	; 000000f9H
	jb	SHORT $LN11@CodeSpec
; Line 246
	mov	eax, 1
	jmp	$LN37@CodeSpec
$LN11@CodeSpec:
; Line 247
	mov	ecx, DWORD PTR _len$67185[ebp]
	add	ecx, DWORD PTR _lenTemp$67187[ebp]
	mov	DWORD PTR _len$67185[ebp], ecx
$LN12@CodeSpec:
; Line 250
	cmp	DWORD PTR _posSlot$67183[ebp], 3
	jae	SHORT $LN10@CodeSpec
; Line 252
	mov	edx, DWORD PTR _posSlot$67183[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+96]
	mov	DWORD PTR _distance$67194[ebp], ecx
; Line 253
	mov	edx, DWORD PTR _posSlot$67183[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+edx*4+96], ecx
; Line 254
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$67194[ebp]
	mov	DWORD PTR [edx+96], eax
; Line 256
	jmp	$LN9@CodeSpec
$LN10@CodeSpec:
; Line 260
	cmp	DWORD PTR _posSlot$67183[ebp], 38	; 00000026H
	jae	SHORT $LN8@CodeSpec
; Line 262
	mov	ecx, DWORD PTR _posSlot$67183[ebp]
	shr	ecx, 1
	sub	ecx, 1
	mov	DWORD PTR _numDirectBits$67197[ebp], ecx
; Line 263
	mov	edx, DWORD PTR _posSlot$67183[ebp]
	and	edx, 1
	or	edx, 2
	mov	ecx, DWORD PTR _numDirectBits$67197[ebp]
	shl	edx, cl
	mov	DWORD PTR _distance$67196[ebp], edx
; Line 265
	jmp	SHORT $LN7@CodeSpec
$LN8@CodeSpec:
; Line 267
	mov	DWORD PTR _numDirectBits$67197[ebp], 17	; 00000011H
; Line 268
	mov	eax, DWORD PTR _posSlot$67183[ebp]
	sub	eax, 34					; 00000022H
	shl	eax, 17					; 00000011H
	mov	DWORD PTR _distance$67196[ebp], eax
$LN7@CodeSpec:
; Line 271
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+113]
	test	edx, edx
	je	SHORT $LN6@CodeSpec
	cmp	DWORD PTR _numDirectBits$67197[ebp], 3
	jb	SHORT $LN6@CodeSpec
; Line 273
	mov	eax, DWORD PTR _numDirectBits$67197[ebp]
	sub	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
	mov	ecx, DWORD PTR _distance$67196[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _distance$67196[ebp], edx
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 5032				; 000013a8H
	call	??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ; NCompress::NHuffman::CDecoder<16,8>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
	mov	DWORD PTR _alignTemp$67202[ebp], eax
; Line 275
	cmp	DWORD PTR _alignTemp$67202[ebp], 8
	jb	SHORT $LN5@CodeSpec
; Line 276
	mov	eax, 1
	jmp	$LN37@CodeSpec
$LN5@CodeSpec:
; Line 277
	mov	ecx, DWORD PTR _distance$67196[ebp]
	add	ecx, DWORD PTR _alignTemp$67202[ebp]
	mov	DWORD PTR _distance$67196[ebp], ecx
; Line 279
	jmp	SHORT $LN4@CodeSpec
$LN6@CodeSpec:
; Line 280
	mov	edx, DWORD PTR _numDirectBits$67197[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadBits@CDecoder@NBitStream@NLzx@NCompress@@QAEII@Z ; NCompress::NLzx::NBitStream::CDecoder::ReadBits
	add	eax, DWORD PTR _distance$67196[ebp]
	mov	DWORD PTR _distance$67196[ebp], eax
$LN4@CodeSpec:
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax+104], edx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+100], edx
; Line 283
	mov	eax, DWORD PTR _distance$67196[ebp]
	sub	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], eax
$LN9@CodeSpec:
; Line 286
	mov	edx, DWORD PTR _len$67185[ebp]
	mov	DWORD PTR _locLen$67209[ebp], edx
; Line 287
	mov	eax, DWORD PTR _locLen$67209[ebp]
	cmp	eax, DWORD PTR _next$67158[ebp]
	jbe	SHORT $LN3@CodeSpec
; Line 288
	mov	ecx, DWORD PTR _next$67158[ebp]
	mov	DWORD PTR _locLen$67209[ebp], ecx
$LN3@CodeSpec:
; Line 290
	mov	edx, DWORD PTR _locLen$67209[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?CopyBlock@CLzOutWindow@@QAE_NII@Z	; CLzOutWindow::CopyBlock
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@CodeSpec
; Line 291
	mov	eax, 1
	jmp	SHORT $LN37@CodeSpec
$LN2@CodeSpec:
; Line 293
	mov	eax, DWORD PTR _len$67185[ebp]
	sub	eax, DWORD PTR _locLen$67209[ebp]
	mov	DWORD PTR _len$67185[ebp], eax
; Line 294
	mov	ecx, DWORD PTR _next$67158[ebp]
	sub	ecx, DWORD PTR _locLen$67209[ebp]
	mov	DWORD PTR _next$67158[ebp], ecx
; Line 295
	cmp	DWORD PTR _len$67185[ebp], 0
	je	SHORT $LN14@CodeSpec
; Line 297
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$67185[ebp]
	mov	DWORD PTR [edx+7364], eax
; Line 298
	xor	eax, eax
	jmp	SHORT $LN37@CodeSpec
$LN14@CodeSpec:
; Line 301
	jmp	$LN17@CodeSpec
$LN18@CodeSpec:
; Line 302
	jmp	$LN25@CodeSpec
$LN24@CodeSpec:
; Line 303
	xor	eax, eax
$LN37@CodeSpec:
; Line 304
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CodeSpec@CDecoder@NLzx@NCompress@@AAEJI@Z ENDP		; NCompress::NLzx::CDecoder::CodeSpec
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyBlock@CLzOutWindow@@QAE_NII@Z
_TEXT	SEGMENT
_pos2$66626 = -20					; size = 4
_dest$66618 = -16					; size = 4
_src$66617 = -12					; size = 4
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
_len$ = 12						; size = 4
?CopyBlock@CLzOutWindow@@QAE_NII@Z PROC			; CLzOutWindow::CopyBlock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzoutwindow.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN13@CopyBlock
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+36]
	test	edx, edx
	je	SHORT $LN11@CopyBlock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _distance$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN12@CopyBlock
$LN11@CopyBlock:
; Line 24
	xor	al, al
	jmp	$LN14@CopyBlock
$LN12@CopyBlock:
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _pos$[ebp], eax
$LN13@CopyBlock:
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR _pos$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _src$66617[ebp], ecx
; Line 30
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _dest$66618[ebp], eax
; Line 31
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN9@CopyBlock:
; Line 33
	mov	edx, DWORD PTR _dest$66618[ebp]
	mov	eax, DWORD PTR _src$66617[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _dest$66618[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$66618[ebp], edx
	mov	eax, DWORD PTR _src$66617[ebp]
	add	eax, 1
	mov	DWORD PTR _src$66617[ebp], eax
; Line 34
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	jne	SHORT $LN9@CopyBlock
; Line 36
	jmp	SHORT $LN6@CopyBlock
$LN5@CopyBlock:
; Line 39
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN2@CopyBlock
; Line 40
	mov	DWORD PTR _pos$[ebp], 0
$LN2@CopyBlock:
; Line 41
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pos2$66626[ebp], edx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _pos2$66626[ebp]
	mov	esi, DWORD PTR _pos$[ebp]
	mov	cl, BYTE PTR [ecx+esi]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _pos2$66626[ebp]
	add	edx, 1
	mov	DWORD PTR _pos2$66626[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos2$66626[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos2$66626[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@CopyBlock
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN4@CopyBlock:
; Line 47
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 1
	mov	DWORD PTR _len$[ebp], edx
	jne	SHORT $LN5@CopyBlock
$LN6@CopyBlock:
; Line 48
	mov	al, 1
$LN14@CopyBlock:
; Line 49
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyBlock@CLzOutWindow@@QAE_NII@Z ENDP			; CLzOutWindow::CopyBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PutByte@CLzOutWindow@@QAEXE@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?PutByte@CLzOutWindow@@QAEXE@Z PROC			; CLzOutWindow::PutByte, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 54
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN2@PutByte
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@PutByte:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PutByte@CLzOutWindow@@QAEXE@Z ENDP			; CLzOutWindow::PutByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetByte@CLzOutWindow@@QBEEI@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
?GetByte@CLzOutWindow@@QBEEI@Z PROC			; CLzOutWindow::GetByte, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 63
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN1@GetByte
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pos$[ebp], edx
$LN1@GetByte:
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 66
	mov	esp, ebp
	pop	ebp
	ret	4
?GetByte@CLzOutWindow@@QBEEI@Z ENDP			; CLzOutWindow::GetByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_translationMode$ = 8					; size = 1
_translationSize$ = 12					; size = 4
?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z PROC ; NCompress::NLzx::Cx86ConvertOutStream::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzx86converter.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _translationMode$[ebp]
	mov	BYTE PTR [eax+24], cl
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _translationSize$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 33
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
; Line 34
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 35
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z ENDP ; NCompress::NLzx::Cx86ConvertOutStream::Init
_TEXT	ENDS
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ PROC	; NCompress::NLzx::NBitStream::CDecoder::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 37
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 32			; 00000020H
; Line 39
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CDecoder@NBitStream@NLzx@NCompress@@QAEXXZ ENDP	; NCompress::NLzx::NBitStream::CDecoder::Init
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ ; NCompress::NLzx::NBitStream::CDecoder::GetProcessedSize
PUBLIC	??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ	; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher
PUBLIC	??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z ; NCompress::NLzx::CDecoderFlusher::CDecoderFlusher
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
PUBLIC	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
PUBLIC	?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z ; NCompress::NLzx::Cx86ConvertOutStream::SetStream
PUBLIC	?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z ; NCompress::NLzx::NBitStream::CDecoder::SetStream
PUBLIC	?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NLzx::CDecoder::CodeReal
EXTRN	?GetProcessedSize@COutBuffer@@QBE_KXZ:PROC	; COutBuffer::GetProcessedSize
xdata$x	SEGMENT
__unwindtable$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
__ehfuncinfo$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv219 = -124						; size = 8
$T67750 = -116						; size = 4
$T67749 = -112						; size = 4
$T67748 = -108						; size = 4
___result__$67246 = -104				; size = 4
_nowPos64$67245 = -96					; size = 8
_inSize$67244 = -80					; size = 8
___result__$67240 = -68					; size = 4
_rem$67236 = -64					; size = 8
_curSize$67235 = -56					; size = 4
_start$ = -52						; size = 8
_flusher$ = -40						; size = 8
___result__$67228 = -28					; size = 4
_size$ = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
___formal$ = 16						; size = 4
_outSize$ = 20						; size = 4
_progress$ = 24						; size = 4
?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NLzx::CDecoder::CodeReal
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 309
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN9@CodeReal
; Line 310
	mov	eax, -2147024809			; 80070057H
	jmp	$LN10@CodeReal
$LN9@CodeReal:
; Line 311
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _size$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _size$[ebp+4], edx
; Line 314
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z ; NCompress::NLzx::NBitStream::CDecoder::SetStream
; Line 315
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+7348]
	call	?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z ; NCompress::NLzx::Cx86ConvertOutStream::SetStream
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7352				; 00001cb8H
	call	??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Line 317
	mov	esi, esp
	mov	eax, DWORD PTR _outSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67228[ebp], eax
	cmp	DWORD PTR ___result__$67228[ebp], 0
	je	SHORT $LN8@CodeReal
	mov	eax, DWORD PTR ___result__$67228[ebp]
	jmp	$LN10@CodeReal
$LN8@CodeReal:
; Line 319
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z ; NCompress::NLzx::CDecoderFlusher::CDecoderFlusher
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	DWORD PTR _start$[ebp], eax
	mov	DWORD PTR _start$[ebp+4], edx
$LN7@CodeReal:
; Line 324
	mov	DWORD PTR _curSize$67235[ebp], 262144	; 00040000H
; Line 325
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _start$[ebp]
	sbb	edx, DWORD PTR _start$[ebp+4]
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, eax
	mov	eax, DWORD PTR _size$[ebp+4]
	sbb	eax, edx
	mov	DWORD PTR _rem$67236[ebp], ecx
	mov	DWORD PTR _rem$67236[ebp+4], eax
; Line 326
	mov	ecx, DWORD PTR _curSize$67235[ebp]
	xor	edx, edx
	mov	DWORD PTR tv219[ebp], ecx
	mov	DWORD PTR tv219[ebp+4], edx
	mov	eax, DWORD PTR tv219[ebp+4]
	cmp	eax, DWORD PTR _rem$67236[ebp+4]
	jb	SHORT $LN5@CodeReal
	ja	SHORT $LN13@CodeReal
	mov	ecx, DWORD PTR tv219[ebp]
	cmp	ecx, DWORD PTR _rem$67236[ebp]
	jbe	SHORT $LN5@CodeReal
$LN13@CodeReal:
; Line 327
	mov	edx, DWORD PTR _rem$67236[ebp]
	mov	DWORD PTR _curSize$67235[ebp], edx
$LN5@CodeReal:
; Line 328
	cmp	DWORD PTR _curSize$67235[ebp], 0
	jne	SHORT $LN4@CodeReal
; Line 329
	jmp	$LN6@CodeReal
$LN4@CodeReal:
; Line 330
	mov	eax, DWORD PTR _curSize$67235[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeSpec@CDecoder@NLzx@NCompress@@AAEJI@Z ; NCompress::NLzx::CDecoder::CodeSpec
	mov	DWORD PTR ___result__$67240[ebp], eax
	cmp	DWORD PTR ___result__$67240[ebp], 0
	je	SHORT $LN3@CodeReal
	mov	ecx, DWORD PTR ___result__$67240[ebp]
	mov	DWORD PTR $T67748[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ ; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T67748[ebp]
	jmp	$LN10@CodeReal
$LN3@CodeReal:
; Line 331
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN2@CodeReal
; Line 333
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ ; NCompress::NLzx::NBitStream::CDecoder::GetProcessedSize
	mov	DWORD PTR _inSize$67244[ebp], eax
	mov	DWORD PTR _inSize$67244[ebp+4], edx
; Line 334
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _start$[ebp]
	sbb	edx, DWORD PTR _start$[ebp+4]
	mov	DWORD PTR _nowPos64$67245[ebp], eax
	mov	DWORD PTR _nowPos64$67245[ebp+4], edx
; Line 335
	mov	esi, esp
	lea	edx, DWORD PTR _nowPos64$67245[ebp]
	push	edx
	lea	eax, DWORD PTR _inSize$67244[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67246[ebp], eax
	cmp	DWORD PTR ___result__$67246[ebp], 0
	je	SHORT $LN2@CodeReal
	mov	edx, DWORD PTR ___result__$67246[ebp]
	mov	DWORD PTR $T67749[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ ; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T67749[ebp]
	jmp	SHORT $LN10@CodeReal
$LN2@CodeReal:
; Line 337
	jmp	$LN7@CodeReal
$LN6@CodeReal:
; Line 338
	mov	BYTE PTR _flusher$[ebp+4], 0
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T67750[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ ; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T67750[ebp]
$LN10@CodeReal:
; Line 340
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN19@CodeReal:
	DD	3
	DD	$LN18@CodeReal
$LN18@CodeReal:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN14@CodeReal
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN15@CodeReal
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN16@CodeReal
$LN16@CodeReal:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
$LN15@CodeReal:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN14@CodeReal:
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
	lea	ecx, DWORD PTR _flusher$[ebp]
	jmp	??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ ; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher
__ehhandler$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NLzx::CDecoder::CodeReal
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_outStream$ = 8						; size = 4
?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z PROC ; NCompress::NLzx::Cx86ConvertOutStream::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzx86converter.h
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _outStream$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@Cx86ConvertOutStream@NLzx@NCompress@@QAEXPAUISequentialOutStream@@@Z ENDP ; NCompress::NLzx::Cx86ConvertOutStream::SetStream
_TEXT	ENDS
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CDecoder@NBitStream@NLzx@NCompress@@QAEXPAUISequentialInStream@@@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ PROC ; NCompress::NLzx::NBitStream::CDecoder::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 32					; 00000020H
	sub	esi, DWORD PTR [ecx+44]
	shr	esi, 3
	xor	ecx, ecx
	sub	eax, esi
	sbb	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CDecoder@NBitStream@NLzx@NCompress@@QBE_KXZ ENDP ; NCompress::NLzx::NBitStream::CDecoder::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_decoder$ = 8						; size = 4
??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z PROC ; NCompress::NLzx::CDecoderFlusher::CDecoderFlusher, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.cpp
; Line 152
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _decoder$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CDecoderFlusher@NLzx@NCompress@@QAE@PAVCDecoder@12@@Z ENDP ; NCompress::NLzx::CDecoderFlusher::CDecoderFlusher
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ PROC		; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@CDecoderFl
; Line 156
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CDecoderFl:
; Line 158
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDecoderFlusher@NLzx@NCompress@@QAE@XZ ENDP		; NCompress::NLzx::CDecoderFlusher::~CDecoderFlusher
_TEXT	ENDS
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
;	COMDAT ??_R0?AUCOutBufferException@@@8
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
__catchsym$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3 DD 09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1
__ehfuncinfo$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv78 = -40						; size = 4
$T67780 = -36						; size = 4
$T67779 = -32						; size = 4
_e$67259 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
_inSize$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NLzx::CDecoder::Code
; Line 344
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 345
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CDecoder@NLzx@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NLzx::CDecoder::CodeReal
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	jmp	SHORT $LN2@Code
__catch$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
; Line 346
	mov	edx, DWORD PTR _e$67259[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T67779[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN8@Code
	ret	0
	mov	eax, __tryend$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
	ret	0
__catch$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1:
; Line 347
	mov	DWORD PTR $T67780[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@Code
	ret	0
	mov	eax, __tryend$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
	ret	0
__tryend$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Code
$LN10@Code:
	mov	eax, DWORD PTR $T67780[ebp]
	jmp	SHORT $LN2@Code
$LN9@Code:
	jmp	SHORT $LN2@Code
$LN8@Code:
; Line 346
	mov	eax, DWORD PTR $T67779[ebp]
$LN2@Code:
; Line 348
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Code
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN16@Code:
	DD	1
	DD	$LN15@Code
$LN15@Code:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN13@Code
$LN13@Code:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Code@CDecoder@NLzx@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NLzx::CDecoder::Code
EXTRN	?Init@CLzOutWindow@@QAEX_N@Z:PROC		; CLzOutWindow::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_outSize$ = 12						; size = 4
?SetOutStreamSize@CDecoder@NLzx@NCompress@@UAGJPB_K@Z PROC ; NCompress::NLzx::CDecoder::SetOutStreamSize
; Line 366
	push	ebp
	mov	ebp, esp
; Line 367
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN2@SetOutStre
; Line 368
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN3@SetOutStre
$LN2@SetOutStre:
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+7360]
	test	ecx, ecx
	jne	SHORT $LN1@SetOutStre
; Line 371
	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+7348]
	call	?Init@Cx86ConvertOutStream@NLzx@NCompress@@QAEX_NI@Z ; NCompress::NLzx::Cx86ConvertOutStream::Init
$LN1@SetOutStre:
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+7364], -2		; fffffffeH
; Line 373
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+7360]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Init@CLzOutWindow@@QAEX_N@Z		; CLzOutWindow::Init
; Line 374
	xor	eax, eax
$LN3@SetOutStre:
; Line 375
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetOutStreamSize@CDecoder@NLzx@NCompress@@UAGJPB_K@Z ENDP ; NCompress::NLzx::CDecoder::SetOutStreamSize
_TEXT	ENDS
PUBLIC	?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z ; NCompress::NLzx::NBitStream::CDecoder::Create
PUBLIC	?SetParams@CDecoder@NLzx@NCompress@@QAEJI@Z	; NCompress::NLzx::CDecoder::SetParams
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_numPosSlots$ = -8					; size = 4
_this$ = -4						; size = 4
_numDictBits$ = 8					; size = 4
?SetParams@CDecoder@NLzx@NCompress@@QAEJI@Z PROC	; NCompress::NLzx::CDecoder::SetParams
; _this$ = ecx
; Line 378
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 379
	cmp	DWORD PTR _numDictBits$[ebp], 15	; 0000000fH
	jb	SHORT $LN7@SetParams
	cmp	DWORD PTR _numDictBits$[ebp], 21	; 00000015H
	jbe	SHORT $LN8@SetParams
$LN7@SetParams:
; Line 380
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN9@SetParams
$LN8@SetParams:
; Line 382
	cmp	DWORD PTR _numDictBits$[ebp], 20	; 00000014H
	jae	SHORT $LN6@SetParams
; Line 383
	mov	eax, DWORD PTR _numDictBits$[ebp]
	shl	eax, 1
	mov	DWORD PTR _numPosSlots$[ebp], eax
	jmp	SHORT $LN5@SetParams
$LN6@SetParams:
; Line 384
	cmp	DWORD PTR _numDictBits$[ebp], 20	; 00000014H
	jne	SHORT $LN4@SetParams
; Line 385
	mov	DWORD PTR _numPosSlots$[ebp], 42	; 0000002aH
; Line 386
	jmp	SHORT $LN5@SetParams
$LN4@SetParams:
; Line 387
	mov	DWORD PTR _numPosSlots$[ebp], 50	; 00000032H
$LN5@SetParams:
; Line 388
	mov	ecx, DWORD PTR _numPosSlots$[ebp]
	shl	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], ecx
; Line 389
	push	2097152					; 00200000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@SetParams
; Line 390
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN9@SetParams
$LN2@SetParams:
; Line 391
	push	65536					; 00010000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z ; NCompress::NLzx::NBitStream::CDecoder::Create
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@SetParams
; Line 392
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN9@SetParams
$LN1@SetParams:
; Line 393
	xor	eax, eax
$LN9@SetParams:
; Line 394
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetParams@CDecoder@NLzx@NCompress@@QAEJI@Z ENDP	; NCompress::NLzx::CDecoder::SetParams
_TEXT	ENDS
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z PROC ; NCompress::NLzx::NBitStream::CDecoder::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzxdecoder.h
; Line 31
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@CDecoder@NBitStream@NLzx@NCompress@@QAE_NI@Z ENDP ; NCompress::NLzx::NBitStream::CDecoder::Create
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -196						; size = 4
_len$67320 = -192					; size = 4
_limit$67312 = -188					; size = 4
_kMaxValue$ = -184					; size = 4
_index$ = -180						; size = 4
_startPos$ = -176					; size = 4
_len$67302 = -172					; size = 4
_symbol$ = -168						; size = 4
_i$ = -164						; size = 4
_tmpPositions$ = -156					; size = 68
_lenCounts$ = -80					; size = 68
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<16,656>::SetCodeLengths, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen
$LN18@SetCodeLen:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	SHORT $LN17@SetCodeLen
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen
$LN17@SetCodeLen:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen
$LN15@SetCodeLen:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen:
	cmp	DWORD PTR _symbol$[ebp], 656		; 00000290H
	jae	SHORT $LN14@SetCodeLen
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67302[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67302[ebp], 16		; 00000010H
	jbe	SHORT $LN13@SetCodeLen
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen
$LN13@SetCodeLen:
; Line 37
	mov	edx, DWORD PTR _len$67302[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67302[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+136], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen
$LN14@SetCodeLen:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 65536	; 00010000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen
$LN11@SetCodeLen:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	$LN10@SetCodeLen
; Line 49
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 65536	; 00010000H
	jbe	SHORT $LN9@SetCodeLen
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen
$LN9@SetCodeLen:
; Line 52
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jne	SHORT $LN22@SetCodeLen
	mov	DWORD PTR tv128[ebp], 65536		; 00010000H
	jmp	SHORT $LN23@SetCodeLen
$LN22@SetCodeLen:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+64]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+68], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 7
	mov	DWORD PTR _limit$67312[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen
$LN6@SetCodeLen:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67312[ebp]
	jae	SHORT $LN8@SetCodeLen
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+2760], dl
	jmp	SHORT $LN6@SetCodeLen
$LN8@SetCodeLen:
; Line 61
	jmp	$LN11@SetCodeLen
$LN10@SetCodeLen:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen
$LN3@SetCodeLen:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen:
	cmp	DWORD PTR _symbol$[ebp], 656		; 00000290H
	jae	SHORT $LN2@SetCodeLen
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67320[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67320[ebp], 0
	je	SHORT $LN1@SetCodeLen
; Line 67
	mov	eax, DWORD PTR _len$67320[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+136], eax
	mov	ecx, DWORD PTR _len$67320[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67320[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen:
; Line 68
	jmp	SHORT $LN3@SetCodeLen
$LN2@SetCodeLen:
; Line 70
	mov	al, 1
$LN20@SetCodeLen:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN27@SetCodeLen:
	DD	2
	DD	$LN26@SetCodeLen
$LN26@SetCodeLen:
	DD	-80					; ffffffb0H
	DD	68					; 00000044H
	DD	$LN24@SetCodeLen
	DD	-156					; ffffff64H
	DD	68					; 00000044H
	DD	$LN25@SetCodeLen
$LN25@SetCodeLen:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<16,656>::SetCodeLengths
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -196						; size = 4
_len$67352 = -192					; size = 4
_limit$67344 = -188					; size = 4
_kMaxValue$ = -184					; size = 4
_index$ = -180						; size = 4
_startPos$ = -176					; size = 4
_len$67334 = -172					; size = 4
_symbol$ = -168						; size = 4
_i$ = -164						; size = 4
_tmpPositions$ = -156					; size = 68
_lenCounts$ = -80					; size = 68
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<16,249>::SetCodeLengths, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen@2
$LN18@SetCodeLen@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen@2:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	SHORT $LN17@SetCodeLen@2
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen@2
$LN17@SetCodeLen@2:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen@2
$LN15@SetCodeLen@2:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen@2:
	cmp	DWORD PTR _symbol$[ebp], 249		; 000000f9H
	jae	SHORT $LN14@SetCodeLen@2
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67334[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67334[ebp], 16		; 00000010H
	jbe	SHORT $LN13@SetCodeLen@2
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen@2
$LN13@SetCodeLen@2:
; Line 37
	mov	edx, DWORD PTR _len$67334[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67334[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+136], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen@2
$LN14@SetCodeLen@2:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 65536	; 00010000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen@2
$LN11@SetCodeLen@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen@2:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	$LN10@SetCodeLen@2
; Line 49
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 65536	; 00010000H
	jbe	SHORT $LN9@SetCodeLen@2
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen@2
$LN9@SetCodeLen@2:
; Line 52
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jne	SHORT $LN22@SetCodeLen@2
	mov	DWORD PTR tv128[ebp], 65536		; 00010000H
	jmp	SHORT $LN23@SetCodeLen@2
$LN22@SetCodeLen@2:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen@2:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+64]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+68], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen@2
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 7
	mov	DWORD PTR _limit$67344[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen@2
$LN6@SetCodeLen@2:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen@2:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67344[ebp]
	jae	SHORT $LN8@SetCodeLen@2
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+1132], dl
	jmp	SHORT $LN6@SetCodeLen@2
$LN8@SetCodeLen@2:
; Line 61
	jmp	$LN11@SetCodeLen@2
$LN10@SetCodeLen@2:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen@2
$LN3@SetCodeLen@2:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen@2:
	cmp	DWORD PTR _symbol$[ebp], 249		; 000000f9H
	jae	SHORT $LN2@SetCodeLen@2
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67352[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67352[ebp], 0
	je	SHORT $LN1@SetCodeLen@2
; Line 67
	mov	eax, DWORD PTR _len$67352[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+136], eax
	mov	ecx, DWORD PTR _len$67352[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67352[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen@2:
; Line 68
	jmp	SHORT $LN3@SetCodeLen@2
$LN2@SetCodeLen@2:
; Line 70
	mov	al, 1
$LN20@SetCodeLen@2:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN27@SetCodeLen@2:
	DD	2
	DD	$LN26@SetCodeLen@2
$LN26@SetCodeLen@2:
	DD	-80					; ffffffb0H
	DD	68					; 00000044H
	DD	$LN24@SetCodeLen@2
	DD	-156					; ffffff64H
	DD	68					; 00000044H
	DD	$LN25@SetCodeLen@2
$LN25@SetCodeLen@2:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<16,249>::SetCodeLengths
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -196						; size = 4
_len$67384 = -192					; size = 4
_limit$67376 = -188					; size = 4
_kMaxValue$ = -184					; size = 4
_index$ = -180						; size = 4
_startPos$ = -176					; size = 4
_len$67366 = -172					; size = 4
_symbol$ = -168						; size = 4
_i$ = -164						; size = 4
_tmpPositions$ = -156					; size = 68
_lenCounts$ = -80					; size = 68
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<16,8>::SetCodeLengths, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen@3
$LN18@SetCodeLen@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen@3:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	SHORT $LN17@SetCodeLen@3
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen@3
$LN17@SetCodeLen@3:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen@3
$LN15@SetCodeLen@3:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen@3:
	cmp	DWORD PTR _symbol$[ebp], 8
	jae	SHORT $LN14@SetCodeLen@3
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67366[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67366[ebp], 16		; 00000010H
	jbe	SHORT $LN13@SetCodeLen@3
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen@3
$LN13@SetCodeLen@3:
; Line 37
	mov	edx, DWORD PTR _len$67366[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67366[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+136], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen@3
$LN14@SetCodeLen@3:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 65536	; 00010000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen@3
$LN11@SetCodeLen@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen@3:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	$LN10@SetCodeLen@3
; Line 49
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 65536	; 00010000H
	jbe	SHORT $LN9@SetCodeLen@3
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen@3
$LN9@SetCodeLen@3:
; Line 52
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jne	SHORT $LN22@SetCodeLen@3
	mov	DWORD PTR tv128[ebp], 65536		; 00010000H
	jmp	SHORT $LN23@SetCodeLen@3
$LN22@SetCodeLen@3:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen@3:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+64]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+68], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen@3
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 7
	mov	DWORD PTR _limit$67376[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen@3
$LN6@SetCodeLen@3:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen@3:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67376[ebp]
	jae	SHORT $LN8@SetCodeLen@3
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+168], dl
	jmp	SHORT $LN6@SetCodeLen@3
$LN8@SetCodeLen@3:
; Line 61
	jmp	$LN11@SetCodeLen@3
$LN10@SetCodeLen@3:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen@3
$LN3@SetCodeLen@3:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen@3:
	cmp	DWORD PTR _symbol$[ebp], 8
	jae	SHORT $LN2@SetCodeLen@3
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67384[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67384[ebp], 0
	je	SHORT $LN1@SetCodeLen@3
; Line 67
	mov	eax, DWORD PTR _len$67384[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+136], eax
	mov	ecx, DWORD PTR _len$67384[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67384[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen@3:
; Line 68
	jmp	SHORT $LN3@SetCodeLen@3
$LN2@SetCodeLen@3:
; Line 70
	mov	al, 1
$LN20@SetCodeLen@3:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN27@SetCodeLen@3:
	DD	2
	DD	$LN26@SetCodeLen@3
$LN26@SetCodeLen@3:
	DD	-80					; ffffffb0H
	DD	68					; 00000044H
	DD	$LN24@SetCodeLen@3
	DD	-156					; ffffff64H
	DD	68					; 00000044H
	DD	$LN25@SetCodeLen@3
$LN25@SetCodeLen@3:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen@3:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<16,8>::SetCodeLengths
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -196						; size = 4
_len$67416 = -192					; size = 4
_limit$67408 = -188					; size = 4
_kMaxValue$ = -184					; size = 4
_index$ = -180						; size = 4
_startPos$ = -176					; size = 4
_len$67398 = -172					; size = 4
_symbol$ = -168						; size = 4
_i$ = -164						; size = 4
_tmpPositions$ = -156					; size = 68
_lenCounts$ = -80					; size = 68
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<16,20>::SetCodeLengths, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen@4
$LN18@SetCodeLen@4:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen@4:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	SHORT $LN17@SetCodeLen@4
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen@4
$LN17@SetCodeLen@4:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen@4
$LN15@SetCodeLen@4:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen@4:
	cmp	DWORD PTR _symbol$[ebp], 20		; 00000014H
	jae	SHORT $LN14@SetCodeLen@4
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67398[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67398[ebp], 16		; 00000010H
	jbe	SHORT $LN13@SetCodeLen@4
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen@4
$LN13@SetCodeLen@4:
; Line 37
	mov	edx, DWORD PTR _len$67398[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67398[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+136], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen@4
$LN14@SetCodeLen@4:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+68], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 65536	; 00010000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen@4
$LN11@SetCodeLen@4:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen@4:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	ja	$LN10@SetCodeLen@4
; Line 49
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 65536	; 00010000H
	jbe	SHORT $LN9@SetCodeLen@4
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen@4
$LN9@SetCodeLen@4:
; Line 52
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jne	SHORT $LN22@SetCodeLen@4
	mov	DWORD PTR tv128[ebp], 65536		; 00010000H
	jmp	SHORT $LN23@SetCodeLen@4
$LN22@SetCodeLen@4:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen@4:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+64]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+68], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen@4
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 7
	mov	DWORD PTR _limit$67408[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen@4
$LN6@SetCodeLen@4:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen@4:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67408[ebp]
	jae	SHORT $LN8@SetCodeLen@4
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+216], dl
	jmp	SHORT $LN6@SetCodeLen@4
$LN8@SetCodeLen@4:
; Line 61
	jmp	$LN11@SetCodeLen@4
$LN10@SetCodeLen@4:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen@4
$LN3@SetCodeLen@4:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen@4:
	cmp	DWORD PTR _symbol$[ebp], 20		; 00000014H
	jae	SHORT $LN2@SetCodeLen@4
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67416[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67416[ebp], 0
	je	SHORT $LN1@SetCodeLen@4
; Line 67
	mov	eax, DWORD PTR _len$67416[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+136], eax
	mov	ecx, DWORD PTR _len$67416[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67416[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen@4:
; Line 68
	jmp	SHORT $LN3@SetCodeLen@4
$LN2@SetCodeLen@4:
; Line 70
	mov	al, 1
$LN20@SetCodeLen@4:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN27@SetCodeLen@4:
	DD	2
	DD	$LN26@SetCodeLen@4
$LN26@SetCodeLen@4:
	DD	-80					; ffffffb0H
	DD	68					; 00000044H
	DD	$LN24@SetCodeLen@4
	DD	-156					; ffffff64H
	DD	68					; 00000044H
	DD	$LN25@SetCodeLen@4
$LN25@SetCodeLen@4:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen@4:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<16,20>::SetCodeLengths
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator ISequentialOutStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialOutStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialOutStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z PROC ; NCompress::NHuffman::CDecoder<16,20>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ; NCompress::NLzx::NBitStream::CDecoder::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+216]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb
$LN6@DecodeSymb:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb
$LN3@DecodeSymb:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb
	jmp	SHORT $LN3@DecodeSymb
$LN5@DecodeSymb:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ; NCompress::NLzx::NBitStream::CDecoder::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 20		; 00000014H
	jb	SHORT $LN1@DecodeSymb
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb
$LN1@DecodeSymb:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+136]
$LN7@DecodeSymb:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0BE@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ENDP ; NCompress::NHuffman::CDecoder<16,20>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z PROC ; NCompress::NHuffman::CDecoder<16,656>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ; NCompress::NLzx::NBitStream::CDecoder::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb@2
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+2760]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb@2
$LN6@DecodeSymb@2:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb@2
$LN3@DecodeSymb@2:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb@2:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb@2
	jmp	SHORT $LN3@DecodeSymb@2
$LN5@DecodeSymb@2:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ; NCompress::NLzx::NBitStream::CDecoder::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 656		; 00000290H
	jb	SHORT $LN1@DecodeSymb@2
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb@2
$LN1@DecodeSymb@2:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+136]
$LN7@DecodeSymb@2:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0CJA@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ENDP ; NCompress::NHuffman::CDecoder<16,656>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z PROC ; NCompress::NHuffman::CDecoder<16,249>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ; NCompress::NLzx::NBitStream::CDecoder::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb@3
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+1132]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb@3
$LN6@DecodeSymb@3:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb@3
$LN3@DecodeSymb@3:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb@3:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb@3
	jmp	SHORT $LN3@DecodeSymb@3
$LN5@DecodeSymb@3:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ; NCompress::NLzx::NBitStream::CDecoder::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 249		; 000000f9H
	jb	SHORT $LN1@DecodeSymb@3
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb@3
$LN1@DecodeSymb@3:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+136]
$LN7@DecodeSymb@3:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$0PJ@@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ENDP ; NCompress::NHuffman::CDecoder<16,249>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z PROC ; NCompress::NHuffman::CDecoder<16,8>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@CDecoder@NBitStream@NLzx@NCompress@@QBEII@Z ; NCompress::NLzx::NBitStream::CDecoder::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb@4
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 7
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+168]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb@4
$LN6@DecodeSymb@4:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb@4
$LN3@DecodeSymb@4:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb@4:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb@4
	jmp	SHORT $LN3@DecodeSymb@4
$LN5@DecodeSymb@4:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@CDecoder@NBitStream@NLzx@NCompress@@QAEXI@Z ; NCompress::NLzx::NBitStream::CDecoder::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 16					; 00000010H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+68]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 8
	jb	SHORT $LN1@DecodeSymb@4
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb@4
$LN1@DecodeSymb@4:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+136]
$LN7@DecodeSymb@4:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@VCDecoder@NBitStream@NLzx@NCompress@@@?$CDecoder@$0BA@$07@NHuffman@NCompress@@QAEIPAVCDecoder@NBitStream@NLzx@2@@Z ENDP ; NCompress::NHuffman::CDecoder<16,8>::DecodeSymbol<NCompress::NLzx::NBitStream::CDecoder>
_TEXT	ENDS
END

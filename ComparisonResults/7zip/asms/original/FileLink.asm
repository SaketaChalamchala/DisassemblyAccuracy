; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\FileLink.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_k_LinkPrefix DD FLAT:$SG67908
_DATA	ENDS
CONST	SEGMENT
$SG67908 DB	'\', 00H, '?', 00H, '?', 00H, '\', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?WriteString@NFile@NWindows@@YGXPAEPB_W@Z	; NWindows::NFile::WriteString
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_c$67920 = -4						; size = 2
_dest$ = 8						; size = 4
_path$ = 12						; size = 4
?WriteString@NFile@NWindows@@YGXPAEPB_W@Z PROC		; NWindows::NFile::WriteString
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN3@WriteStrin:
; Line 97
	mov	eax, DWORD PTR _path$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$67920[ebp], cx
	mov	edx, DWORD PTR _path$[ebp]
	add	edx, 2
	mov	DWORD PTR _path$[ebp], edx
; Line 98
	movzx	eax, WORD PTR _c$67920[ebp]
	test	eax, eax
	jne	SHORT $LN1@WriteStrin
; Line 99
	jmp	SHORT $LN4@WriteStrin
$LN1@WriteStrin:
; Line 100
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	dx, WORD PTR _c$67920[ebp]
	mov	WORD PTR [ecx], dx
; Line 101
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 2
	mov	DWORD PTR _dest$[ebp], eax
; Line 102
	jmp	SHORT $LN3@WriteStrin
$LN4@WriteStrin:
; Line 103
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteString@NFile@NWindows@@YGXPAEPB_W@Z ENDP		; NWindows::NFile::WriteString
_TEXT	ENDS
PUBLIC	??B?$CBuffer@E@@QAEPAEXZ			; CBuffer<unsigned char>::operator unsigned char *
PUBLIC	?Alloc@?$CBuffer@E@@QAEXI@Z			; CBuffer<unsigned char>::Alloc
PUBLIC	?MyStringLen@@YGIPB_W@Z				; MyStringLen
PUBLIC	?FillLinkData@NFile@NWindows@@YG_NAAV?$CBuffer@E@@PB_W_N@Z ; NWindows::NFile::FillLinkData
EXTRN	_memset:PROC
EXTRN	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDrivePath
EXTRN	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsSuperPath
EXTRN	?IsAbsolutePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsAbsolutePath
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_flags$67990 = -48					; size = 4
_printOffs$ = -44					; size = 4
_subOffs$ = -40						; size = 4
_p$ = -36						; size = 4
_tag$ = -32						; size = 4
_size$ = -28						; size = 4
_newOrderScheme$ = -21					; size = 1
_totalNamesSize$ = -20					; size = 4
_len1$ = -16						; size = 4
_len2$ = -12						; size = 4
_add_Prefix_Len$ = -8					; size = 4
_needPrintName$ = -2					; size = 1
_isAbs$ = -1						; size = 1
_dest$ = 8						; size = 4
_path$ = 12						; size = 4
_isSymLink$ = 16					; size = 1
?FillLinkData@NFile@NWindows@@YG_NAAV?$CBuffer@E@@PB_W_N@Z PROC ; NWindows::NFile::FillLinkData
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 109
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?IsAbsolutePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsAbsolutePath
	mov	BYTE PTR _isAbs$[ebp], al
; Line 110
	movzx	ecx, BYTE PTR _isAbs$[ebp]
	test	ecx, ecx
	jne	SHORT $LN10@FillLinkDa
	movzx	edx, BYTE PTR _isSymLink$[ebp]
	test	edx, edx
	jne	SHORT $LN10@FillLinkDa
; Line 111
	xor	al, al
	jmp	$LN11@FillLinkDa
$LN10@FillLinkDa:
; Line 113
	mov	BYTE PTR _needPrintName$[ebp], 1
; Line 115
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperPath
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@FillLinkDa
; Line 117
	mov	edx, DWORD PTR _path$[ebp]
	add	edx, 8
	mov	DWORD PTR _path$[ebp], edx
; Line 118
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN9@FillLinkDa
; Line 119
	mov	BYTE PTR _needPrintName$[ebp], 0
$LN9@FillLinkDa:
; Line 122
	movzx	edx, BYTE PTR _isAbs$[ebp]
	neg	edx
	sbb	edx, edx
	and	edx, 4
	mov	DWORD PTR _add_Prefix_Len$[ebp], edx
; Line 124
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?MyStringLen@@YGIPB_W@Z			; MyStringLen
	shl	eax, 1
	mov	DWORD PTR _len2$[ebp], eax
; Line 125
	mov	ecx, DWORD PTR _add_Prefix_Len$[ebp]
	mov	edx, DWORD PTR _len2$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _len1$[ebp], eax
; Line 126
	movzx	ecx, BYTE PTR _needPrintName$[ebp]
	test	ecx, ecx
	jne	SHORT $LN7@FillLinkDa
; Line 127
	mov	DWORD PTR _len2$[ebp], 0
$LN7@FillLinkDa:
; Line 129
	mov	edx, DWORD PTR _len1$[ebp]
	add	edx, DWORD PTR _len2$[ebp]
	mov	DWORD PTR _totalNamesSize$[ebp], edx
; Line 134
	mov	al, BYTE PTR _isSymLink$[ebp]
	mov	BYTE PTR _newOrderScheme$[ebp], al
; Line 137
	movzx	ecx, BYTE PTR _newOrderScheme$[ebp]
	test	ecx, ecx
	jne	SHORT $LN6@FillLinkDa
; Line 138
	mov	edx, DWORD PTR _totalNamesSize$[ebp]
	add	edx, 4
	mov	DWORD PTR _totalNamesSize$[ebp], edx
$LN6@FillLinkDa:
; Line 140
	movzx	eax, BYTE PTR _isSymLink$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 4
	mov	ecx, DWORD PTR _totalNamesSize$[ebp]
	lea	edx, DWORD PTR [eax+ecx+16]
	mov	DWORD PTR _size$[ebp], edx
; Line 141
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 142
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 145
	movzx	edx, BYTE PTR _isSymLink$[ebp]
	neg	edx
	sbb	edx, edx
	and	edx, 9
	add	edx, -1610612733			; a0000003H
	mov	DWORD PTR _tag$[ebp], edx
; Line 146
	mov	ecx, DWORD PTR _dest$[ebp]
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	mov	DWORD PTR _p$[ebp], eax
; Line 147
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _tag$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 148
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 8
	mov	eax, DWORD PTR _p$[ebp]
	mov	WORD PTR [eax+4], dx
; Line 149
	xor	ecx, ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	WORD PTR [edx+6], cx
; Line 150
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 152
	mov	DWORD PTR _subOffs$[ebp], 0
; Line 153
	mov	DWORD PTR _printOffs$[ebp], 0
; Line 154
	movzx	ecx, BYTE PTR _newOrderScheme$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@FillLinkDa
; Line 155
	mov	edx, DWORD PTR _len2$[ebp]
	mov	DWORD PTR _subOffs$[ebp], edx
; Line 156
	jmp	SHORT $LN4@FillLinkDa
$LN5@FillLinkDa:
; Line 157
	mov	eax, DWORD PTR _len1$[ebp]
	add	eax, 2
	mov	DWORD PTR _printOffs$[ebp], eax
$LN4@FillLinkDa:
; Line 159
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR _subOffs$[ebp]
	mov	WORD PTR [ecx], dx
; Line 160
	mov	eax, DWORD PTR _p$[ebp]
	mov	cx, WORD PTR _len1$[ebp]
	mov	WORD PTR [eax+2], cx
; Line 161
	mov	edx, DWORD PTR _p$[ebp]
	mov	ax, WORD PTR _printOffs$[ebp]
	mov	WORD PTR [edx+4], ax
; Line 162
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR _len2$[ebp]
	mov	WORD PTR [ecx+6], dx
; Line 164
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 165
	movzx	ecx, BYTE PTR _isSymLink$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@FillLinkDa
; Line 167
	movzx	edx, BYTE PTR _isAbs$[ebp]
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	DWORD PTR _flags$67990[ebp], edx
; Line 168
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _flags$67990[ebp]
	mov	DWORD PTR [eax], ecx
; Line 169
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 4
	mov	DWORD PTR _p$[ebp], edx
$LN3@FillLinkDa:
; Line 172
	cmp	DWORD PTR _add_Prefix_Len$[ebp], 0
	je	SHORT $LN2@FillLinkDa
; Line 173
	mov	eax, DWORD PTR _k_LinkPrefix
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _subOffs$[ebp]
	push	ecx
	call	?WriteString@NFile@NWindows@@YGXPAEPB_W@Z ; NWindows::NFile::WriteString
$LN2@FillLinkDa:
; Line 174
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _subOffs$[ebp]
	mov	ecx, DWORD PTR _add_Prefix_Len$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	push	edx
	call	?WriteString@NFile@NWindows@@YGXPAEPB_W@Z ; NWindows::NFile::WriteString
; Line 175
	movzx	eax, BYTE PTR _needPrintName$[ebp]
	test	eax, eax
	je	SHORT $LN1@FillLinkDa
; Line 176
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _printOffs$[ebp]
	push	edx
	call	?WriteString@NFile@NWindows@@YGXPAEPB_W@Z ; NWindows::NFile::WriteString
$LN1@FillLinkDa:
; Line 177
	mov	al, 1
$LN11@FillLinkDa:
; Line 178
	pop	edi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?FillLinkData@NFile@NWindows@@YG_NAAV?$CBuffer@E@@PB_W_N@Z ENDP ; NWindows::NFile::FillLinkData
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStringLen@@YGIPB_W@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_s$ = 8							; size = 4
?MyStringLen@@YGIPB_W@Z PROC				; MyStringLen, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 53
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MyStringLe
$LN2@MyStringLe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@MyStringLe:
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	je	SHORT $LN1@MyStringLe
	jmp	SHORT $LN2@MyStringLe
$LN1@MyStringLe:
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
; Line 55
	mov	esp, ebp
	pop	ebp
	ret	4
?MyStringLen@@YGIPB_W@Z ENDP				; MyStringLen
_TEXT	ENDS
PUBLIC	?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z	; NWindows::NFile::CReparseAttr::Parse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_printLen$ = -24					; size = 4
_printOffs$ = -20					; size = 4
_subLen$ = -16						; size = 4
_subOffs$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_size$ = 12						; size = 4
?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z PROC	; NWindows::NFile::CReparseAttr::Parse
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	cmp	DWORD PTR _size$[ebp], 8
	jae	SHORT $LN12@Parse
; Line 200
	xor	al, al
	jmp	$LN13@Parse
$LN12@Parse:
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 202
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 203
	mov	edx, DWORD PTR _len$[ebp]
	add	edx, 8
	cmp	edx, DWORD PTR _size$[ebp]
	jbe	SHORT $LN11@Parse
; Line 204
	xor	al, al
	jmp	$LN13@Parse
$LN11@Parse:
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1610612733		; a0000003H
	je	SHORT $LN10@Parse
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], -1610612724		; a000000cH
	je	SHORT $LN10@Parse
; Line 213
	xor	al, al
	jmp	$LN13@Parse
$LN10@Parse:
; Line 215
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+6]
	test	eax, eax
	je	SHORT $LN9@Parse
; Line 216
	xor	al, al
	jmp	$LN13@Parse
$LN9@Parse:
; Line 218
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 8
	mov	DWORD PTR _p$[ebp], ecx
; Line 219
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 8
	mov	DWORD PTR _size$[ebp], edx
; Line 221
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN8@Parse
; Line 222
	xor	al, al
	jmp	$LN13@Parse
$LN8@Parse:
; Line 224
	cmp	DWORD PTR _len$[ebp], 8
	jae	SHORT $LN7@Parse
; Line 225
	xor	al, al
	jmp	$LN13@Parse
$LN7@Parse:
; Line 226
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _subOffs$[ebp], edx
; Line 227
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _subLen$[ebp], ecx
; Line 228
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+4]
	mov	DWORD PTR _printOffs$[ebp], eax
; Line 229
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	mov	DWORD PTR _printLen$[ebp], edx
; Line 230
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 8
	mov	DWORD PTR _len$[ebp], eax
; Line 231
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 8
	mov	DWORD PTR _p$[ebp], ecx
; Line 233
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -1610612724		; a000000cH
	jne	SHORT $LN6@Parse
; Line 236
	cmp	DWORD PTR _len$[ebp], 4
	jae	SHORT $LN5@Parse
; Line 237
	xor	al, al
	jmp	$LN13@Parse
$LN5@Parse:
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax
; Line 239
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _len$[ebp], ecx
; Line 240
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 4
	mov	DWORD PTR _p$[ebp], edx
$LN6@Parse:
; Line 243
	mov	eax, DWORD PTR _subOffs$[ebp]
	and	eax, 1
	jne	SHORT $LN3@Parse
	mov	ecx, DWORD PTR _subOffs$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	ja	SHORT $LN3@Parse
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, DWORD PTR _subOffs$[ebp]
	cmp	edx, DWORD PTR _subLen$[ebp]
	jae	SHORT $LN4@Parse
$LN3@Parse:
; Line 244
	xor	al, al
	jmp	SHORT $LN13@Parse
$LN4@Parse:
; Line 245
	mov	eax, DWORD PTR _printOffs$[ebp]
	and	eax, 1
	jne	SHORT $LN1@Parse
	mov	ecx, DWORD PTR _printOffs$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	ja	SHORT $LN1@Parse
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, DWORD PTR _printOffs$[ebp]
	cmp	edx, DWORD PTR _printLen$[ebp]
	jae	SHORT $LN2@Parse
$LN1@Parse:
; Line 246
	xor	al, al
	jmp	SHORT $LN13@Parse
$LN2@Parse:
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _subLen$[ebp]
	shr	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _subOffs$[ebp]
	push	edx
	call	?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z ; NWindows::NFile::GetString
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _printLen$[ebp]
	shr	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _printOffs$[ebp]
	push	edx
	call	?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z ; NWindows::NFile::GetString
; Line 250
	mov	al, 1
$LN13@Parse:
; Line 251
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z ENDP	; NWindows::NFile::CReparseAttr::Parse
_TEXT	ENDS
PUBLIC	?ReleaseBuf_SetLen@UString@@QAEXI@Z		; UString::ReleaseBuf_SetLen
PUBLIC	?GetBuf@UString@@QAEPA_WI@Z			; UString::GetBuf
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$68004 = -12						; size = 2
_i$ = -8						; size = 4
_s$ = -4						; size = 4
_p$ = 8							; size = 4
_len$ = 12						; size = 4
_res$ = 16						; size = 4
?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z PROC	; NWindows::NFile::GetString
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 184
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?GetBuf@UString@@QAEPA_WI@Z		; UString::GetBuf
	mov	DWORD PTR _s$[ebp], eax
; Line 186
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@GetString
$LN3@GetString:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@GetString:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jae	SHORT $LN2@GetString
; Line 188
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$68004[ebp], dx
; Line 189
	movzx	eax, WORD PTR _c$68004[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetString
; Line 190
	jmp	SHORT $LN2@GetString
$LN1@GetString:
; Line 191
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	ax, WORD PTR _c$68004[ebp]
	mov	WORD PTR [edx+ecx*2], ax
; Line 192
	jmp	SHORT $LN3@GetString
$LN2@GetString:
; Line 193
	xor	ecx, ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	mov	WORD PTR [eax+edx*2], cx
; Line 194
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?ReleaseBuf_SetLen@UString@@QAEXI@Z	; UString::ReleaseBuf_SetLen
; Line 195
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetString@NFile@NWindows@@YGXPBEIAAVUString@@@Z ENDP	; NWindows::NFile::GetString
_TEXT	ENDS
EXTRN	?ReAlloc2@UString@@AAEXI@Z:PROC			; UString::ReAlloc2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBuf@UString@@QAEPA_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_minLen$ = 8						; size = 4
?GetBuf@UString@@QAEPA_WI@Z PROC			; UString::GetBuf, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _minLen$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN1@GetBuf
; Line 487
	mov	edx, DWORD PTR _minLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReAlloc2@UString@@AAEXI@Z		; UString::ReAlloc2
$LN1@GetBuf:
; Line 488
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 489
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetBuf@UString@@QAEPA_WI@Z ENDP			; UString::GetBuf
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReleaseBuf_SetLen@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_newLen$ = 8						; size = 4
?ReleaseBuf_SetLen@UString@@QAEXI@Z PROC		; UString::ReleaseBuf_SetLen, COMDAT
; _this$ = ecx
; Line 500
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLen$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBuf_SetLen@UString@@QAEXI@Z ENDP		; UString::ReleaseBuf_SetLen
_TEXT	ENDS
PUBLIC	?Parse@CReparseShortInfo@NFile@NWindows@@QAE_NPBEI@Z ; NWindows::NFile::CReparseShortInfo::Parse
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_printLen$ = -32					; size = 4
_printOffs$ = -28					; size = 4
_subLen$ = -24						; size = 4
_subOffs$ = -20						; size = 4
_len$ = -16						; size = 4
_Tag$ = -12						; size = 4
_start$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_size$ = 12						; size = 4
?Parse@CReparseShortInfo@NFile@NWindows@@QAE_NPBEI@Z PROC ; NWindows::NFile::CReparseShortInfo::Parse
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 255
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 257
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 258
	cmp	DWORD PTR _size$[ebp], 8
	jae	SHORT $LN12@Parse@2
; Line 259
	xor	al, al
	jmp	$LN13@Parse@2
$LN12@Parse@2:
; Line 260
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Tag$[ebp], ecx
; Line 261
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+4]
	mov	DWORD PTR _len$[ebp], eax
; Line 262
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 8
	cmp	ecx, DWORD PTR _size$[ebp]
	jbe	SHORT $LN11@Parse@2
; Line 263
	xor	al, al
	jmp	$LN13@Parse@2
$LN11@Parse@2:
; Line 270
	cmp	DWORD PTR _Tag$[ebp], -1610612733	; a0000003H
	je	SHORT $LN10@Parse@2
	cmp	DWORD PTR _Tag$[ebp], -1610612724	; a000000cH
	je	SHORT $LN10@Parse@2
; Line 272
	xor	al, al
	jmp	$LN13@Parse@2
$LN10@Parse@2:
; Line 274
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+6]
	test	eax, eax
	je	SHORT $LN9@Parse@2
; Line 275
	xor	al, al
	jmp	$LN13@Parse@2
$LN9@Parse@2:
; Line 277
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 8
	mov	DWORD PTR _p$[ebp], ecx
; Line 278
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 8
	mov	DWORD PTR _size$[ebp], edx
; Line 280
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN8@Parse@2
; Line 281
	xor	al, al
	jmp	$LN13@Parse@2
$LN8@Parse@2:
; Line 283
	cmp	DWORD PTR _len$[ebp], 8
	jae	SHORT $LN7@Parse@2
; Line 284
	xor	al, al
	jmp	$LN13@Parse@2
$LN7@Parse@2:
; Line 285
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _subOffs$[ebp], edx
; Line 286
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _subLen$[ebp], ecx
; Line 287
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, WORD PTR [edx+4]
	mov	DWORD PTR _printOffs$[ebp], eax
; Line 288
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	mov	DWORD PTR _printLen$[ebp], edx
; Line 289
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 8
	mov	DWORD PTR _len$[ebp], eax
; Line 290
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 8
	mov	DWORD PTR _p$[ebp], ecx
; Line 293
	cmp	DWORD PTR _Tag$[ebp], -1610612724	; a000000cH
	jne	SHORT $LN6@Parse@2
; Line 295
	cmp	DWORD PTR _len$[ebp], 4
	jae	SHORT $LN5@Parse@2
; Line 296
	xor	al, al
	jmp	SHORT $LN13@Parse@2
$LN5@Parse@2:
; Line 298
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 4
	mov	DWORD PTR _len$[ebp], edx
; Line 299
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
$LN6@Parse@2:
; Line 302
	mov	ecx, DWORD PTR _subOffs$[ebp]
	and	ecx, 1
	jne	SHORT $LN3@Parse@2
	mov	edx, DWORD PTR _subOffs$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	ja	SHORT $LN3@Parse@2
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, DWORD PTR _subOffs$[ebp]
	cmp	eax, DWORD PTR _subLen$[ebp]
	jae	SHORT $LN4@Parse@2
$LN3@Parse@2:
; Line 303
	xor	al, al
	jmp	SHORT $LN13@Parse@2
$LN4@Parse@2:
; Line 304
	mov	ecx, DWORD PTR _printOffs$[ebp]
	and	ecx, 1
	jne	SHORT $LN1@Parse@2
	mov	edx, DWORD PTR _printOffs$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	ja	SHORT $LN1@Parse@2
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, DWORD PTR _printOffs$[ebp]
	cmp	eax, DWORD PTR _printLen$[ebp]
	jae	SHORT $LN2@Parse@2
$LN1@Parse@2:
; Line 305
	xor	al, al
	jmp	SHORT $LN13@Parse@2
$LN2@Parse@2:
; Line 307
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	add	ecx, DWORD PTR _subOffs$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _subLen$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 309
	mov	al, 1
$LN13@Parse@2:
; Line 310
	mov	esp, ebp
	pop	ebp
	ret	8
?Parse@CReparseShortInfo@NFile@NWindows@@QAE_NPBEI@Z ENDP ; NWindows::NFile::CReparseShortInfo::Parse
_TEXT	ENDS
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?Ptr@UString@@QBEPB_WI@Z			; UString::Ptr
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?IsOkNamePair@CReparseAttr@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::CReparseAttr::IsOkNamePair
EXTRN	__imp__wcscmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsOkNamePair@CReparseAttr@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::CReparseAttr::IsOkNamePair
; _this$ = ecx
; Line 313
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 314
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z ; NWindows::NFile::IsLinkPrefix
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@IsOkNamePa
; Line 316
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@IsOkNamePa
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	jmp	SHORT $LN4@IsOkNamePa
$LN2@IsOkNamePa:
; Line 318
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	esi, esp
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	call	DWORD PTR __imp__wcscmp
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@IsOkNamePa
; Line 319
	mov	al, 1
	jmp	SHORT $LN4@IsOkNamePa
$LN3@IsOkNamePa:
; Line 321
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	DWORD PTR __imp__wcscmp
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	add	eax, 1
$LN4@IsOkNamePa:
; Line 322
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsOkNamePair@CReparseAttr@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::CReparseAttr::IsOkNamePair
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Ptr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Ptr@UString@@QBEPB_WI@Z PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	esp, ebp
	pop	ebp
	ret	4
?Ptr@UString@@QBEPB_WI@Z ENDP				; UString::Ptr
_TEXT	ENDS
EXTRN	?IsString1PrefixedByString2@@YG_NPB_W0@Z:PROC	; IsString1PrefixedByString2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = 8							; size = 4
?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z PROC		; NWindows::NFile::IsLinkPrefix
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
; Line 81
	push	ebp
	mov	ebp, esp
; Line 82
	mov	eax, DWORD PTR _k_LinkPrefix
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?IsString1PrefixedByString2@@YG_NPB_W0@Z ; IsString1PrefixedByString2
; Line 83
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z ENDP		; NWindows::NFile::IsLinkPrefix
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?ReplaceOneCharAtPos@UString@@QAEXI_W@Z		; UString::ReplaceOneCharAtPos
PUBLIC	?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ ; NWindows::NFile::CReparseAttr::GetPath
EXTRN	?DeleteFrontal@UString@@QAEXI@Z:PROC		; UString::DeleteFrontal
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ$0
__ehfuncinfo$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68298 = -40						; size = 4
_s$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ PROC ; NWindows::NFile::CReparseAttr::GetPath
; _this$ = ecx
; Line 334
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T68298[ebp], 0
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 336
	lea	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsLinkPrefix@NFile@NWindows@@YG?B_NPB_W@Z ; NWindows::NFile::IsLinkPrefix
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetPath
; Line 338
	push	92					; 0000005cH
	push	1
	lea	ecx, DWORD PTR _s$[ebp]
	call	?ReplaceOneCharAtPos@UString@@QAEXI_W@Z	; UString::ReplaceOneCharAtPos
; Line 339
	push	4
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetPath
; Line 340
	push	4
	lea	ecx, DWORD PTR _s$[ebp]
	call	?DeleteFrontal@UString@@QAEXI@Z		; UString::DeleteFrontal
$LN2@GetPath:
; Line 342
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	ecx, DWORD PTR $T68298[ebp]
	or	ecx, 1
	mov	DWORD PTR $T68298[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 343
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GetPath
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN11@GetPath:
	DD	1
	DD	$LN10@GetPath
$LN10@GetPath:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN8@GetPath
$LN8@GetPath:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ$1:
	mov	eax, DWORD PTR $T68298[ebp]
	and	eax, 1
	je	$LN7@GetPath
	and	DWORD PTR $T68298[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN7@GetPath:
	ret	0
__ehhandler$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ ENDP ; NWindows::NFile::CReparseAttr::GetPath
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T68314 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68314[ebp], ecx
	mov	edx, DWORD PTR $T68314[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReplaceOneCharAtPos@UString@@QAEXI_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
_c$ = 12						; size = 2
?ReplaceOneCharAtPos@UString@@QAEXI_W@Z PROC		; UString::ReplaceOneCharAtPos, COMDAT
; _this$ = ecx
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
	mov	esp, ebp
	pop	ebp
	ret	8
?ReplaceOneCharAtPos@UString@@QAEXI_W@Z ENDP		; UString::ReplaceOneCharAtPos
_TEXT	ENDS
PUBLIC	?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z		; CBuffer<unsigned char>::CopyFrom
PUBLIC	??1?$CObjArray@E@@QAE@XZ			; CObjArray<unsigned char>::~CObjArray<unsigned char>
PUBLIC	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
PUBLIC	??B?$CObjArray@E@@QAEPAEXZ			; CObjArray<unsigned char>::operator unsigned char *
PUBLIC	??0?$CObjArray@E@@QAE@I@Z			; CObjArray<unsigned char>::CObjArray<unsigned char>
PUBLIC	?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::CFileBase::GetFileInformation
PUBLIC	??1CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::~CInFile
PUBLIC	?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::OpenReparse
PUBLIC	??0CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::CInFile
PUBLIC	?Free@?$CBuffer@E@@QAEXXZ			; CBuffer<unsigned char>::Free
PUBLIC	?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::GetReparseData
xdata$x	SEGMENT
__unwindtable$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z$1
__ehfuncinfo$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68321 = -67						; size = 1
$T68320 = -66						; size = 1
$T68319 = -65						; size = 1
_returnedSize$ = -60					; size = 4
_buf$ = -48						; size = 4
_kBufSize$ = -40					; size = 4
_file$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_reparseData$ = 12					; size = 4
_fileInfo$ = 16						; size = 4
?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z PROC ; NWindows::NFile::NIO::GetReparseData
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
; Line 359
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 360
	mov	ecx, DWORD PTR _reparseData$[ebp]
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 361
	lea	ecx, DWORD PTR _file$[ebp]
	call	??0CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 362
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	call	?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::OpenReparse
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@GetReparse
; Line 363
	mov	BYTE PTR $T68319[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68319[ebp]
	jmp	$LN4@GetReparse
$LN3@GetReparse:
; Line 365
	cmp	DWORD PTR _fileInfo$[ebp], 0
	je	SHORT $LN2@GetReparse
; Line 366
	mov	edx, DWORD PTR _fileInfo$[ebp]
	push	edx
	lea	ecx, DWORD PTR _file$[ebp]
	call	?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::CFileBase::GetFileInformation
$LN2@GetReparse:
; Line 368
	mov	DWORD PTR _kBufSize$[ebp], 16384	; 00004000H
; Line 369
	push	16384					; 00004000H
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??0?$CObjArray@E@@QAE@I@Z		; CObjArray<unsigned char>::CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 371
	lea	eax, DWORD PTR _returnedSize$[ebp]
	push	eax
	push	16384					; 00004000H
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	push	eax
	push	589992					; 000900a8H
	lea	ecx, DWORD PTR _file$[ebp]
	call	?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@GetReparse
; Line 372
	mov	BYTE PTR $T68320[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68320[ebp]
	jmp	SHORT $LN4@GetReparse
$LN1@GetReparse:
; Line 373
	mov	edx, DWORD PTR _returnedSize$[ebp]
	push	edx
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	push	eax
	mov	ecx, DWORD PTR _reparseData$[ebp]
	call	?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z	; CBuffer<unsigned char>::CopyFrom
; Line 374
	mov	BYTE PTR $T68321[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _buf$[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68321[ebp]
$LN4@GetReparse:
; Line 375
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GetReparse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN13@GetReparse:
	DD	3
	DD	$LN12@GetReparse
$LN12@GetReparse:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN8@GetReparse
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN9@GetReparse
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN10@GetReparse
$LN10@GetReparse:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN9@GetReparse:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN8@GetReparse:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z$0:
	lea	ecx, DWORD PTR _file$[ebp]
	jmp	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
__unwindfunclet$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z$1:
	lea	ecx, DWORD PTR _buf$[ebp]
	jmp	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
__ehhandler$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetReparseData@NIO@NFile@NWindows@@YG_NPB_WAAV?$CBuffer@E@@PAU_BY_HANDLE_FILE_INFORMATION@@@Z ENDP ; NWindows::NFile::NIO::GetReparseData
PUBLIC	?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_controlCode$ = 8					; size = 4
_outBuffer$ = 12					; size = 4
_outSize$ = 16						; size = 4
_bytesReturned$ = 20					; size = 4
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z PROC ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	push	0
	mov	eax, DWORD PTR _bytesReturned$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outBuffer$[ebp]
	push	edx
	push	0
	push	0
	mov	eax, DWORD PTR _controlCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
; Line 82
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DeviceIoControlOut@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXKPAK@Z ENDP ; NWindows::NFile::NIO::CFileBase::DeviceIoControlOut
_TEXT	ENDS
PUBLIC	?BOOLToBool@@YG_NH@Z				; BOOLToBool
EXTRN	__imp__DeviceIoControl@32:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_controlCode$ = 8					; size = 4
_inBuffer$ = 12						; size = 4
_inSize$ = 16						; size = 4
_outBuffer$ = 20					; size = 4
_outSize$ = 24						; size = 4
_bytesReturned$ = 28					; size = 4
_overlapped$ = 32					; size = 4
?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z PROC ; NWindows::NFile::NIO::CFileBase::DeviceIoControl, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	esi, esp
	mov	eax, DWORD PTR _overlapped$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bytesReturned$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _controlCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__DeviceIoControl@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
; Line 77
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ENDP ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?BOOLToBool@@YG_NH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
?BOOLToBool@@YG_NH@Z PROC				; BOOLToBool, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\defs.h
; Line 10
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	cmp	DWORD PTR _v$[ebp], 0
	setne	al
	pop	ebp
	ret	4
?BOOLToBool@@YG_NH@Z ENDP				; BOOLToBool
_TEXT	ENDS
EXTRN	__imp__GetFileInformationByHandle@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_info$ = 8						; size = 4
?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z PROC ; NWindows::NFile::NIO::CFileBase::GetFileInformation, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 111
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetFileInformationByHandle@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ENDP ; NWindows::NFile::NIO::CFileBase::GetFileInformation
_TEXT	ENDS
EXTRN	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z:PROC ; NWindows::NFile::NIO::CInFile::Open
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z PROC ; NWindows::NFile::NIO::CInFile::OpenReparse, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	push	35651584				; 02200000H
	push	3
	push	1
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::CInFile::Open
; Line 174
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ENDP ; NWindows::NFile::NIO::CInFile::OpenReparse
_TEXT	ENDS
PUBLIC	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::CFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::CInFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::CFileBase, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::CFileBase
_TEXT	ENDS
PUBLIC	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::~CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::~CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::~CFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::~CInFile
_TEXT	ENDS
EXTRN	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ:PROC ; NWindows::NFile::NIO::CFileBase::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::~CFileBase, COMDAT
; _this$ = ecx
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::~CFileBase
_TEXT	ENDS
PUBLIC	??1COutFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::COutFile::~COutFile
PUBLIC	??0COutFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::COutFile::COutFile
PUBLIC	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::~CFileInfo
PUBLIC	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
PUBLIC	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::CFileInfo
PUBLIC	?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z ; NWindows::NFile::NIO::SetReparseData
EXTRN	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z:PROC ; NWindows::NFile::NIO::COutFile::Open
EXTRN	?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z:PROC ; NWindows::NFile::NIO::COutFile::Create
EXTRN	?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NDir::CreateComplexDir
EXTRN	__imp__SetLastError@4:PROC
EXTRN	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NFind::CFileInfo::Find
xdata$x	SEGMENT
__unwindtable$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$2
__ehfuncinfo$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68359 = -142						; size = 1
$T68358 = -141						; size = 1
$T68357 = -140						; size = 1
$T68356 = -139						; size = 1
$T68355 = -138						; size = 1
$T68354 = -137						; size = 1
_returnedSize$ = -132					; size = 4
_file$ = -120						; size = 16
_file$68166 = -96					; size = 16
_fi$ = -72						; size = 56
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_isDir$ = 12						; size = 1
_data$ = 16						; size = 4
_size$ = 20						; size = 4
?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z PROC ; NWindows::NFile::NIO::SetReparseData
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-144]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 394
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 395
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@SetReparse
; Line 397
	lea	ecx, DWORD PTR _fi$[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	edx, al
	movzx	eax, BYTE PTR _isDir$[ebp]
	cmp	edx, eax
	je	SHORT $LN8@SetReparse
; Line 399
	mov	esi, esp
	push	267					; 0000010bH
	call	DWORD PTR __imp__SetLastError@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 400
	mov	BYTE PTR $T68354[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68354[ebp]
	jmp	$LN10@SetReparse
$LN8@SetReparse:
; Line 403
	jmp	$LN7@SetReparse
$LN9@SetReparse:
; Line 405
	movzx	ecx, BYTE PTR _isDir$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@SetReparse
; Line 407
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::CreateComplexDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@SetReparse
; Line 408
	mov	BYTE PTR $T68355[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68355[ebp]
	jmp	$LN10@SetReparse
$LN5@SetReparse:
; Line 410
	jmp	SHORT $LN7@SetReparse
$LN6@SetReparse:
; Line 412
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NIO::CreatePrefixDirOfFile
; Line 413
	lea	ecx, DWORD PTR _file$68166[ebp]
	call	??0COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 414
	push	1
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	lea	ecx, DWORD PTR _file$68166[ebp]
	call	?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::COutFile::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@SetReparse
; Line 415
	mov	BYTE PTR $T68356[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _file$68166[ebp]
	call	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68356[ebp]
	jmp	$LN10@SetReparse
$LN3@SetReparse:
; Line 416
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _file$68166[ebp]
	call	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
$LN7@SetReparse:
; Line 419
	lea	ecx, DWORD PTR _file$[ebp]
	call	??0COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 423
	push	35651584				; 02200000H
	push	3
	push	2
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _file$[ebp]
	call	?Open@COutFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::COutFile::Open
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@SetReparse
; Line 424
	mov	BYTE PTR $T68357[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68357[ebp]
	jmp	SHORT $LN10@SetReparse
$LN2@SetReparse:
; Line 427
	push	0
	lea	eax, DWORD PTR _returnedSize$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	push	589988					; 000900a4H
	lea	ecx, DWORD PTR _file$[ebp]
	call	?DeviceIoControl@CFileBase@NIO@NFile@NWindows@@QBE_NKPAXK0KPAKPAU_OVERLAPPED@@@Z ; NWindows::NFile::NIO::CFileBase::DeviceIoControl
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@SetReparse
; Line 428
	mov	BYTE PTR $T68358[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68358[ebp]
	jmp	SHORT $LN10@SetReparse
$LN1@SetReparse:
; Line 429
	mov	BYTE PTR $T68359[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fi$[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	al, BYTE PTR $T68359[ebp]
$LN10@SetReparse:
; Line 430
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@SetReparse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 144				; 00000090H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN21@SetReparse:
	DD	4
	DD	$LN20@SetReparse
$LN20@SetReparse:
	DD	-72					; ffffffb8H
	DD	56					; 00000038H
	DD	$LN15@SetReparse
	DD	-96					; ffffffa0H
	DD	16					; 00000010H
	DD	$LN16@SetReparse
	DD	-120					; ffffff88H
	DD	16					; 00000010H
	DD	$LN17@SetReparse
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN18@SetReparse
$LN18@SetReparse:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN17@SetReparse:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN16@SetReparse:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN15@SetReparse:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$0:
	lea	ecx, DWORD PTR _fi$[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$1:
	lea	ecx, DWORD PTR _file$68166[ebp]
	jmp	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
__unwindfunclet$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z$2:
	lea	ecx, DWORD PTR _file$[ebp]
	jmp	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
__ehhandler$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetReparseData@NIO@NFile@NWindows@@YG_NPB_W_NPBXK@Z ENDP ; NWindows::NFile::NIO::SetReparseData
PUBLIC	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NFind::CFileInfoBase::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z PROC ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ENDP ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
_TEXT	ENDS
PUBLIC	?DeleteFrom@UString@@QAEXI@Z			; UString::DeleteFrom
EXTRN	?ReverseFind_PathSepar@UString@@QBEHXZ:PROC	; UString::ReverseFind_PathSepar
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
xdata$x	SEGMENT
__unwindtable$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z$0
__ehfuncinfo$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68380 = -39						; size = 1
$T68379 = -38						; size = 1
$T68378 = -37						; size = 1
_pos$ = -36						; size = 4
_path2$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z PROC ; NWindows::NFile::NIO::CreatePrefixDirOfFile
; File c:\workspace\7z1505-src\cpp\windows\filelink.cpp
; Line 378
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 379
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _path2$[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 380
	lea	ecx, DWORD PTR _path2$[ebp]
	call	?ReverseFind_PathSepar@UString@@QBEHXZ	; UString::ReverseFind_PathSepar
	mov	DWORD PTR _pos$[ebp], eax
; Line 381
	cmp	DWORD PTR _pos$[ebp], 0
	jge	SHORT $LN2@CreatePref
; Line 382
	mov	BYTE PTR $T68378[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path2$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T68378[ebp]
	jmp	SHORT $LN3@CreatePref
$LN2@CreatePref:
; Line 384
	cmp	DWORD PTR _pos$[ebp], 2
	jne	SHORT $LN1@CreatePref
	lea	ecx, DWORD PTR _path2$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 58					; 0000003aH
	jne	SHORT $LN1@CreatePref
; Line 385
	mov	BYTE PTR $T68379[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path2$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T68379[ebp]
	jmp	SHORT $LN3@CreatePref
$LN1@CreatePref:
; Line 387
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	lea	ecx, DWORD PTR _path2$[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
; Line 388
	lea	ecx, DWORD PTR _path2$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?CreateComplexDir@NDir@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NDir::CreateComplexDir
	mov	BYTE PTR $T68380[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path2$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T68380[ebp]
$LN3@CreatePref:
; Line 389
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@CreatePref
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@CreatePref:
	DD	1
	DD	$LN8@CreatePref
$LN8@CreatePref:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@CreatePref
$LN6@CreatePref:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z$0:
	lea	ecx, DWORD PTR _path2$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreatePrefixDirOfFile@NIO@NFile@NWindows@@YG_NPB_W@Z ENDP ; NWindows::NFile::NIO::CreatePrefixDirOfFile
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeleteFrom@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@UString@@QAEXI@Z PROC			; UString::DeleteFrom, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 604
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@DeleteFrom
; Line 607
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@DeleteFrom:
; Line 610
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@UString@@QAEXI@Z ENDP			; UString::DeleteFrom
_TEXT	ENDS
PUBLIC	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::CFileInfo
_TEXT	ENDS
EXTRN	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ:PROC ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::~CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::~CFileInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::COutFile::COutFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::CFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::COutFile::COutFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1COutFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::COutFile::~COutFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::~CFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::COutFile::~COutFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CBuffer@E@@QAEXXZ
_TEXT	SEGMENT
$T68406 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CBuffer@E@@QAEXXZ PROC				; CBuffer<unsigned char>::Free, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Free
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T68406[ebp], edx
	mov	eax, DWORD PTR $T68406[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN1@Free:
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 22
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CBuffer@E@@QAEXXZ ENDP				; CBuffer<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QAEPAEXZ PROC				; CBuffer<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QAEPAEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char *
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Alloc@?$CBuffer@E@@QAEXI@Z
_TEXT	SEGMENT
$T68411 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?Alloc@?$CBuffer@E@@QAEXI@Z PROC			; CBuffer<unsigned char>::Alloc, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN3@Alloc
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 48
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN3@Alloc
; Line 50
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68411[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T68411[ebp]
	mov	DWORD PTR [eax], ecx
; Line 51
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@Alloc:
; Line 54
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Alloc@?$CBuffer@E@@QAEXI@Z ENDP			; CBuffer<unsigned char>::Alloc
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z PROC			; CBuffer<unsigned char>::CopyFrom, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 69
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CopyFrom
; Line 70
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@CopyFrom:
; Line 71
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z ENDP			; CBuffer<unsigned char>::CopyFrom
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@E@@QAE@I@Z
_TEXT	SEGMENT
$T68416 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CObjArray@E@@QAE@I@Z PROC				; CObjArray<unsigned char>::CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CObjArray
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68416[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T68416[ebp]
	mov	DWORD PTR [edx], eax
$LN2@CObjArray:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CObjArray@E@@QAE@I@Z ENDP				; CObjArray<unsigned char>::CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@E@@QAE@XZ
_TEXT	SEGMENT
$T68419 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@E@@QAE@XZ PROC				; CObjArray<unsigned char>::~CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68419[ebp], ecx
	mov	edx, DWORD PTR $T68419[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@E@@QAE@XZ ENDP				; CObjArray<unsigned char>::~CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@E@@QAEPAEXZ PROC				; CObjArray<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@E@@QAEPAEXZ ENDP				; CObjArray<unsigned char>::operator unsigned char *
_TEXT	ENDS
END

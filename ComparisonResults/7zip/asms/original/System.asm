; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\System.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG65804 DB	'GlobalMemoryStatusEx', 00H
	ORG $+3
$SG65805 DB	'kernel32.dll', 00H
CONST	ENDS
PUBLIC	?GetNumberOfProcessors@NSystem@NWindows@@YGIXZ	; NWindows::NSystem::GetNumberOfProcessors
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\system.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_systemInfo$ = -40					; size = 36
?GetNumberOfProcessors@NSystem@NWindows@@YGIXZ PROC	; NWindows::NSystem::GetNumberOfProcessors
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 15
	mov	esi, esp
	lea	eax, DWORD PTR _systemInfo$[ebp]
	push	eax
	call	DWORD PTR __imp__GetSystemInfo@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 16
	mov	eax, DWORD PTR _systemInfo$[ebp+20]
; Line 17
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetNumberO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GetNumberO:
	DD	1
	DD	$LN4@GetNumberO
$LN4@GetNumberO:
	DD	-40					; ffffffd8H
	DD	36					; 00000024H
	DD	$LN3@GetNumberO
$LN3@GetNumberO:
	DB	115					; 00000073H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?GetNumberOfProcessors@NSystem@NWindows@@YGIXZ ENDP	; NWindows::NSystem::GetNumberOfProcessors
_TEXT	ENDS
PUBLIC	??$MyMin@K@@YGKKK@Z				; MyMin<unsigned long>
PUBLIC	??$MyMin@_K@@YG_K_K0@Z				; MyMin<unsigned __int64>
PUBLIC	__$ArrayPad$
PUBLIC	?GetRamSize@NSystem@NWindows@@YG_KXZ		; NWindows::NSystem::GetRamSize
EXTRN	__imp__GlobalMemoryStatus@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_stat$65812 = -116					; size = 32
_globalMemoryStatusEx$ = -80				; size = 4
_stat$ = -72						; size = 64
__$ArrayPad$ = -4					; size = 4
?GetRamSize@NSystem@NWindows@@YG_KXZ PROC		; NWindows::NSystem::GetRamSize
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-120]
	mov	ecx, 30					; 0000001eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 50
	mov	DWORD PTR _stat$[ebp], 64		; 00000040H
; Line 59
	mov	esi, esp
	push	OFFSET $SG65804
	mov	edi, esp
	push	OFFSET $SG65805
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _globalMemoryStatusEx$[ebp], eax
; Line 60
	cmp	DWORD PTR _globalMemoryStatusEx$[ebp], 0
	je	SHORT $LN1@GetRamSize
	mov	esi, esp
	lea	eax, DWORD PTR _stat$[ebp]
	push	eax
	call	DWORD PTR _globalMemoryStatusEx$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@GetRamSize
; Line 61
	mov	ecx, DWORD PTR _stat$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _stat$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _stat$[ebp+44]
	push	eax
	mov	ecx, DWORD PTR _stat$[ebp+40]
	push	ecx
	call	??$MyMin@_K@@YG_K_K0@Z			; MyMin<unsigned __int64>
	jmp	SHORT $LN2@GetRamSize
$LN1@GetRamSize:
; Line 65
	mov	DWORD PTR _stat$65812[ebp], 32		; 00000020H
; Line 66
	mov	esi, esp
	lea	edx, DWORD PTR _stat$65812[ebp]
	push	edx
	call	DWORD PTR __imp__GlobalMemoryStatus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 67
	mov	eax, DWORD PTR _stat$65812[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _stat$65812[ebp+24]
	push	ecx
	call	??$MyMin@K@@YGKKK@Z			; MyMin<unsigned long>
	xor	edx, edx
$LN2@GetRamSize:
; Line 70
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetRamSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 120				; 00000078H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@GetRamSize:
	DD	2
	DD	$LN6@GetRamSize
$LN6@GetRamSize:
	DD	-72					; ffffffb8H
	DD	64					; 00000040H
	DD	$LN4@GetRamSize
	DD	-116					; ffffff8cH
	DD	32					; 00000020H
	DD	$LN5@GetRamSize
$LN5@GetRamSize:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN4@GetRamSize:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
?GetRamSize@NSystem@NWindows@@YG_KXZ ENDP		; NWindows::NSystem::GetRamSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@_K@@YG_K_K0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 8
_a$ = 8							; size = 8
_b$ = 16						; size = 8
??$MyMin@_K@@YG_K_K0@Z PROC				; MyMin<unsigned __int64>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	ja	SHORT $LN3@MyMin
	jb	SHORT $LN5@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	ecx, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
$LN5@MyMin:
	mov	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], edx
	mov	eax, DWORD PTR _a$[ebp+4]
	mov	DWORD PTR tv65[ebp+4], eax
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp+4]
	mov	DWORD PTR tv65[ebp+4], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	edx, DWORD PTR tv65[ebp+4]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$MyMin@_K@@YG_K_K0@Z ENDP				; MyMin<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@K@@YGKKK@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@K@@YGKKK@Z PROC				; MyMin<unsigned long>, COMDAT
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin@2
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin@2
$LN3@MyMin@2:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin@2:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@K@@YGKKK@Z ENDP				; MyMin<unsigned long>
_TEXT	ENDS
END

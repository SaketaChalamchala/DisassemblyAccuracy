; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\QuantumDecoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
PUBLIC	?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init
PUBLIC	__$ArrayPad$
PUBLIC	?Init@CDecoder@NQuantum@NCompress@@AAEXXZ	; NCompress::NQuantum::CDecoder::Init
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv78 = -40						; size = 4
_kNumPosSymbolsMax$ = -32				; size = 12
_numItems$ = -16					; size = 4
_i$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Init@CDecoder@NQuantum@NCompress@@AAEXXZ PROC		; NCompress::NQuantum::CDecoder::Init
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init
; Line 23
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@Init
$LN5@Init:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@Init:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN4@Init
; Line 24
	push	64					; 00000040H
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 204				; 000000ccH
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+340]
	call	?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init
	jmp	SHORT $LN5@Init
$LN4@Init:
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jne	SHORT $LN9@Init
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN10@Init
$LN9@Init:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	shl	edx, 1
	mov	DWORD PTR tv78[ebp], edx
$LN10@Init:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR _numItems$[ebp], eax
; Line 26
	mov	DWORD PTR _kNumPosSymbolsMax$[ebp], 24	; 00000018H
	mov	DWORD PTR _kNumPosSymbolsMax$[ebp+4], 36 ; 00000024H
	mov	DWORD PTR _kNumPosSymbolsMax$[ebp+8], 42 ; 0000002aH
; Line 27
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Init
$LN2@Init:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@Init:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN1@Init
; Line 28
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _kNumPosSymbolsMax$[ebp+edx*4]
	push	eax
	mov	ecx, DWORD PTR _numItems$[ebp]
	push	ecx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	push	eax
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 204				; 000000ccH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1156]
	call	?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init
	jmp	SHORT $LN2@Init
$LN1@Init:
; Line 29
	push	27					; 0000001bH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1768				; 000006e8H
	call	?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init
; Line 30
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@Init:
	DD	1
	DD	$LN12@Init
$LN12@Init:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN11@Init
$LN11@Init:
	DB	107					; 0000006bH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
?Init@CDecoder@NQuantum@NCompress@@AAEXXZ ENDP		; NCompress::NQuantum::CDecoder::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z
_TEXT	SEGMENT
_i$66746 = -8						; size = 4
_this$ = -4						; size = 4
_numItems$ = 8						; size = 4
?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z PROC ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numItems$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 137
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 4
; Line 138
	mov	DWORD PTR _i$66746[ebp], 0
	jmp	SHORT $LN3@Init@2
$LN2@Init@2:
	mov	eax, DWORD PTR _i$66746[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66746[ebp], eax
$LN3@Init@2:
	mov	ecx, DWORD PTR _i$66746[ebp]
	cmp	ecx, DWORD PTR _numItems$[ebp]
	jae	SHORT $LN1@Init@2
; Line 140
	mov	edx, DWORD PTR _numItems$[ebp]
	sub	edx, DWORD PTR _i$66746[ebp]
	mov	eax, DWORD PTR _i$66746[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+eax*2+8], dx
; Line 141
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$66746[ebp]
	mov	al, BYTE PTR _i$66746[ebp]
	mov	BYTE PTR [edx+138], al
; Line 142
	jmp	SHORT $LN2@Init@2
$LN1@Init@2:
; Line 143
	xor	ecx, ecx
	mov	edx, DWORD PTR _numItems$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+edx*2+8], cx
; Line 144
	mov	esp, ebp
	pop	ebp
	ret	4
?Init@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEXI@Z ENDP ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Init
_TEXT	ENDS
PUBLIC	?CopyBlock@CLzOutWindow@@QAE_NII@Z		; CLzOutWindow::CopyBlock
PUBLIC	?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z ; NCompress::NQuantum::CStreamBitDecoder::ReadBits
PUBLIC	?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode
PUBLIC	?WasFinished@CStreamBitDecoder@NQuantum@NCompress@@QBE_NXZ ; NCompress::NQuantum::CStreamBitDecoder::WasFinished
PUBLIC	?PutByte@CLzOutWindow@@QAEXE@Z			; CLzOutWindow::PutByte
PUBLIC	?GetByte@CLzOutWindow@@QBEEI@Z			; CLzOutWindow::GetByte
PUBLIC	?Init@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXXZ ; NCompress::NQuantum::NRangeCoder::CDecoder::Init
PUBLIC	?CodeSpec@CDecoder@NQuantum@NCompress@@AAEJI@Z	; NCompress::NQuantum::CDecoder::CodeSpec
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_locLen$66961 = -40					; size = 4
_numDirectBits$66959 = -36				; size = 4
_rep0$66957 = -32					; size = 4
_numDirectBits$66953 = -28				; size = 4
_lenSlot$66951 = -24					; size = 4
_len$66949 = -20					; size = 4
_b$66946 = -13						; size = 1
_selector$66944 = -12					; size = 4
_b$66938 = -5						; size = 1
_this$ = -4						; size = 4
_curSize$ = 8						; size = 4
?CodeSpec@CDecoder@NQuantum@NCompress@@AAEJI@Z PROC	; NCompress::NQuantum::CDecoder::CodeSpec
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.cpp
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], -2			; fffffffeH
	jne	SHORT $LN17@CodeSpec
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Init@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXXZ ; NCompress::NQuantum::NRangeCoder::CDecoder::Init
; Line 37
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+120], 0
$LN17@CodeSpec:
; Line 39
	cmp	DWORD PTR _curSize$[ebp], 0
	jne	SHORT $LN15@CodeSpec
; Line 40
	xor	eax, eax
	jmp	$LN18@CodeSpec
$LN15@CodeSpec:
; Line 42
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+120], 0
	jle	SHORT $LN13@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	SHORT $LN13@CodeSpec
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetByte@CLzOutWindow@@QBEEI@Z		; CLzOutWindow::GetByte
	mov	BYTE PTR _b$66938[ebp], al
; Line 46
	movzx	edx, BYTE PTR _b$66938[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 47
	mov	eax, DWORD PTR _curSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _curSize$[ebp], eax
; Line 48
	jmp	SHORT $LN15@CodeSpec
$LN13@CodeSpec:
; Line 50
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	$LN12@CodeSpec
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?WasFinished@CStreamBitDecoder@NQuantum@NCompress@@QBE_NXZ ; NCompress::NQuantum::CStreamBitDecoder::WasFinished
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@CodeSpec
; Line 53
	mov	eax, 1
	jmp	$LN18@CodeSpec
$LN11@CodeSpec:
; Line 55
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 48					; 00000030H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode
	mov	DWORD PTR _selector$66944[ebp], eax
; Line 56
	cmp	DWORD PTR _selector$66944[ebp], 4
	jae	SHORT $LN10@CodeSpec
; Line 58
	mov	ebx, DWORD PTR _selector$66944[ebp]
	shl	ebx, 6
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _selector$66944[ebp]
	imul	ecx, 204				; 000000ccH
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+340]
	call	?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode
	add	ebx, eax
	mov	BYTE PTR _b$66946[ebp], bl
; Line 59
	movzx	eax, BYTE PTR _b$66946[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 60
	mov	ecx, DWORD PTR _curSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _curSize$[ebp], ecx
; Line 62
	jmp	$LN9@CodeSpec
$LN10@CodeSpec:
; Line 64
	mov	edx, DWORD PTR _selector$66944[ebp]
	sub	edx, 4
	mov	DWORD PTR _selector$66944[ebp], edx
; Line 65
	mov	eax, DWORD PTR _selector$66944[ebp]
	add	eax, 3
	mov	DWORD PTR _len$66949[ebp], eax
; Line 66
	cmp	DWORD PTR _selector$66944[ebp], 2
	jne	SHORT $LN8@CodeSpec
; Line 68
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1768				; 000006e8H
	call	?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode
	mov	DWORD PTR _lenSlot$66951[ebp], eax
; Line 69
	cmp	DWORD PTR _lenSlot$66951[ebp], 6
	jb	SHORT $LN7@CodeSpec
; Line 71
	mov	edx, DWORD PTR _lenSlot$66951[ebp]
	sub	edx, 2
	mov	DWORD PTR _lenSlot$66951[ebp], edx
; Line 72
	mov	eax, DWORD PTR _lenSlot$66951[ebp]
	shr	eax, 2
	mov	DWORD PTR _numDirectBits$66953[ebp], eax
; Line 73
	mov	edx, DWORD PTR _lenSlot$66951[ebp]
	and	edx, 3
	or	edx, 4
	mov	ecx, DWORD PTR _numDirectBits$66953[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _len$66949[ebp]
	lea	ecx, DWORD PTR [eax+edx-2]
	mov	DWORD PTR _len$66949[ebp], ecx
; Line 74
	cmp	DWORD PTR _numDirectBits$66953[ebp], 6
	jge	SHORT $LN6@CodeSpec
; Line 75
	mov	edx, DWORD PTR _numDirectBits$66953[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z ; NCompress::NQuantum::CStreamBitDecoder::ReadBits
	add	eax, DWORD PTR _len$66949[ebp]
	mov	DWORD PTR _len$66949[ebp], eax
$LN6@CodeSpec:
; Line 77
	jmp	SHORT $LN8@CodeSpec
$LN7@CodeSpec:
; Line 78
	mov	eax, DWORD PTR _len$66949[ebp]
	add	eax, DWORD PTR _lenSlot$66951[ebp]
	mov	DWORD PTR _len$66949[ebp], eax
$LN8@CodeSpec:
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _selector$66944[ebp]
	imul	edx, 204				; 000000ccH
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1156]
	call	?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode
	mov	DWORD PTR _rep0$66957[ebp], eax
; Line 81
	cmp	DWORD PTR _rep0$66957[ebp], 4
	jb	SHORT $LN4@CodeSpec
; Line 83
	mov	ecx, DWORD PTR _rep0$66957[ebp]
	shr	ecx, 1
	sub	ecx, 1
	mov	DWORD PTR _numDirectBits$66959[ebp], ecx
; Line 84
	mov	esi, DWORD PTR _rep0$66957[ebp]
	and	esi, 1
	or	esi, 2
	mov	ecx, DWORD PTR _numDirectBits$66959[ebp]
	shl	esi, cl
	mov	edx, DWORD PTR _numDirectBits$66959[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z ; NCompress::NQuantum::CStreamBitDecoder::ReadBits
	add	esi, eax
	mov	DWORD PTR _rep0$66957[ebp], esi
$LN4@CodeSpec:
; Line 86
	mov	eax, DWORD PTR _len$66949[ebp]
	mov	DWORD PTR _locLen$66961[ebp], eax
; Line 87
	mov	ecx, DWORD PTR _len$66949[ebp]
	cmp	ecx, DWORD PTR _curSize$[ebp]
	jbe	SHORT $LN3@CodeSpec
; Line 88
	mov	edx, DWORD PTR _curSize$[ebp]
	mov	DWORD PTR _locLen$66961[ebp], edx
$LN3@CodeSpec:
; Line 89
	mov	eax, DWORD PTR _locLen$66961[ebp]
	push	eax
	mov	ecx, DWORD PTR _rep0$66957[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?CopyBlock@CLzOutWindow@@QAE_NII@Z	; CLzOutWindow::CopyBlock
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@CodeSpec
; Line 90
	mov	eax, 1
	jmp	SHORT $LN18@CodeSpec
$LN2@CodeSpec:
; Line 91
	mov	eax, DWORD PTR _curSize$[ebp]
	sub	eax, DWORD PTR _locLen$66961[ebp]
	mov	DWORD PTR _curSize$[ebp], eax
; Line 92
	mov	ecx, DWORD PTR _len$66949[ebp]
	sub	ecx, DWORD PTR _locLen$66961[ebp]
	mov	DWORD PTR _len$66949[ebp], ecx
; Line 93
	je	SHORT $LN9@CodeSpec
; Line 95
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$66949[ebp]
	mov	DWORD PTR [edx+120], eax
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rep0$66957[ebp]
	mov	DWORD PTR [ecx+124], edx
; Line 97
	jmp	SHORT $LN12@CodeSpec
$LN9@CodeSpec:
; Line 100
	jmp	$LN13@CodeSpec
$LN12@CodeSpec:
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?WasFinished@CStreamBitDecoder@NQuantum@NCompress@@QBE_NXZ ; NCompress::NQuantum::CStreamBitDecoder::WasFinished
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	neg	eax
$LN18@CodeSpec:
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CodeSpec@CDecoder@NQuantum@NCompress@@AAEJI@Z ENDP	; NCompress::NQuantum::CDecoder::CodeSpec
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyBlock@CLzOutWindow@@QAE_NII@Z
_TEXT	SEGMENT
_pos2$66612 = -20					; size = 4
_dest$66604 = -16					; size = 4
_src$66603 = -12					; size = 4
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
_len$ = 12						; size = 4
?CopyBlock@CLzOutWindow@@QAE_NII@Z PROC			; CLzOutWindow::CopyBlock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzoutwindow.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN13@CopyBlock
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+36]
	test	edx, edx
	je	SHORT $LN11@CopyBlock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _distance$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN12@CopyBlock
$LN11@CopyBlock:
; Line 24
	xor	al, al
	jmp	$LN14@CopyBlock
$LN12@CopyBlock:
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _pos$[ebp], eax
$LN13@CopyBlock:
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR _pos$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _src$66603[ebp], ecx
; Line 30
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _dest$66604[ebp], eax
; Line 31
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN9@CopyBlock:
; Line 33
	mov	edx, DWORD PTR _dest$66604[ebp]
	mov	eax, DWORD PTR _src$66603[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _dest$66604[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$66604[ebp], edx
	mov	eax, DWORD PTR _src$66603[ebp]
	add	eax, 1
	mov	DWORD PTR _src$66603[ebp], eax
; Line 34
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	jne	SHORT $LN9@CopyBlock
; Line 36
	jmp	SHORT $LN6@CopyBlock
$LN5@CopyBlock:
; Line 39
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN2@CopyBlock
; Line 40
	mov	DWORD PTR _pos$[ebp], 0
$LN2@CopyBlock:
; Line 41
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pos2$66612[ebp], edx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _pos2$66612[ebp]
	mov	esi, DWORD PTR _pos$[ebp]
	mov	cl, BYTE PTR [ecx+esi]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _pos2$66612[ebp]
	add	edx, 1
	mov	DWORD PTR _pos2$66612[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos2$66612[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos2$66612[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@CopyBlock
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN4@CopyBlock:
; Line 47
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 1
	mov	DWORD PTR _len$[ebp], edx
	jne	SHORT $LN5@CopyBlock
$LN6@CopyBlock:
; Line 48
	mov	al, 1
$LN14@CopyBlock:
; Line 49
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyBlock@CLzOutWindow@@QAE_NII@Z ENDP			; CLzOutWindow::CopyBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PutByte@CLzOutWindow@@QAEXE@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?PutByte@CLzOutWindow@@QAEXE@Z PROC			; CLzOutWindow::PutByte, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 54
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN2@PutByte
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@PutByte:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PutByte@CLzOutWindow@@QAEXE@Z ENDP			; CLzOutWindow::PutByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetByte@CLzOutWindow@@QBEEI@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
?GetByte@CLzOutWindow@@QBEEI@Z PROC			; CLzOutWindow::GetByte, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 63
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN1@GetByte
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pos$[ebp], edx
$LN1@GetByte:
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 66
	mov	esp, ebp
	pop	ebp
	ret	4
?GetByte@CLzOutWindow@@QBEEI@Z ENDP			; CLzOutWindow::GetByte
_TEXT	ENDS
PUBLIC	?WasFinished@CInBufferBase@@QBE_NXZ		; CInBufferBase::WasFinished
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WasFinished@CStreamBitDecoder@NQuantum@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?WasFinished@CStreamBitDecoder@NQuantum@NCompress@@QBE_NXZ PROC ; NCompress::NQuantum::CStreamBitDecoder::WasFinished, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?WasFinished@CInBufferBase@@QBE_NXZ	; CInBufferBase::WasFinished
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?WasFinished@CStreamBitDecoder@NQuantum@NCompress@@QBE_NXZ ENDP ; NCompress::NQuantum::CStreamBitDecoder::WasFinished
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?WasFinished@CInBufferBase@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?WasFinished@CInBufferBase@@QBE_NXZ PROC		; CInBufferBase::WasFinished, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?WasFinished@CInBufferBase@@QBE_NXZ ENDP		; CInBufferBase::WasFinished
_TEXT	ENDS
PUBLIC	?ReadBit@CStreamBitDecoder@NQuantum@NCompress@@QAEIXZ ; NCompress::NQuantum::CStreamBitDecoder::ReadBit
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z PROC ; NCompress::NQuantum::CStreamBitDecoder::ReadBits, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 48
	mov	DWORD PTR _res$[ebp], 0
$LN3@ReadBits:
; Line 50
	mov	esi, DWORD PTR _res$[ebp]
	shl	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CStreamBitDecoder@NQuantum@NCompress@@QAEIXZ ; NCompress::NQuantum::CStreamBitDecoder::ReadBit
	or	esi, eax
	mov	DWORD PTR _res$[ebp], esi
; Line 51
	mov	eax, DWORD PTR _numBits$[ebp]
	sub	eax, 1
	mov	DWORD PTR _numBits$[ebp], eax
	jne	SHORT $LN3@ReadBits
; Line 52
	mov	eax, DWORD PTR _res$[ebp]
; Line 53
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z ENDP ; NCompress::NQuantum::CStreamBitDecoder::ReadBits
_TEXT	ENDS
PUBLIC	?ReadByte@CInBufferBase@@QAEEXZ			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadBit@CStreamBitDecoder@NQuantum@NCompress@@QAEIXZ
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
?ReadBit@CStreamBitDecoder@NQuantum@NCompress@@QAEIXZ PROC ; NCompress::NQuantum::CStreamBitDecoder::ReadBit, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 65536			; 00010000H
	jb	SHORT $LN1@ReadBit
; Line 40
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	movzx	ecx, al
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@ReadBit:
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 7
	and	ecx, 1
	mov	DWORD PTR _res$[ebp], ecx
; Line 42
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 43
	mov	eax, DWORD PTR _res$[ebp]
; Line 44
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadBit@CStreamBitDecoder@NQuantum@NCompress@@QAEIXZ ENDP ; NCompress::NQuantum::CStreamBitDecoder::ReadBit
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAEEXZ
_TEXT	SEGMENT
tv70 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte@CInBufferBase@@QAEEXZ PROC			; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv70[ebp], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	al, BYTE PTR tv70[ebp]
$LN2@ReadByte:
; Line 76
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CInBufferBase@@QAEEXZ ENDP			; CInBufferBase::ReadByte
_TEXT	ENDS
PUBLIC	?Init@CStreamBitDecoder@NQuantum@NCompress@@QAEXXZ ; NCompress::NQuantum::CStreamBitDecoder::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXXZ PROC ; NCompress::NQuantum::NRangeCoder::CDecoder::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 77
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Init@CStreamBitDecoder@NQuantum@NCompress@@QAEXXZ ; NCompress::NQuantum::CStreamBitDecoder::Init
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 65536		; 00010000H
; Line 81
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ReadBits@CStreamBitDecoder@NQuantum@NCompress@@QAEIH@Z ; NCompress::NQuantum::CStreamBitDecoder::ReadBits
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 82
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXXZ ENDP ; NCompress::NQuantum::NRangeCoder::CDecoder::Init
_TEXT	ENDS
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@CStreamBitDecoder@NQuantum@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CStreamBitDecoder@NQuantum@NCompress@@QAEXXZ PROC	; NCompress::NQuantum::CStreamBitDecoder::Init, COMDAT
; _this$ = ecx
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 65536			; 00010000H
; Line 32
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CStreamBitDecoder@NQuantum@NCompress@@QAEXXZ ENDP	; NCompress::NQuantum::CStreamBitDecoder::Init
_TEXT	ENDS
PUBLIC	?Decode@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXIII@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::Decode
PUBLIC	?GetThreshold@CDecoder@NRangeCoder@NQuantum@NCompress@@QBEII@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::GetThreshold
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z
_TEXT	SEGMENT
tv251 = -44						; size = 4
tv219 = -40						; size = 4
tv147 = -36						; size = 4
tv139 = -32						; size = 4
_tmpVal$66778 = -25					; size = 1
_tmpFreq$66777 = -24					; size = 2
_j$66772 = -20						; size = 4
_res$ = -16						; size = 4
_i$ = -12						; size = 4
_threshold$ = -8					; size = 4
_this$ = -4						; size = 4
_rangeDecoder$ = 8					; size = 4
?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z PROC ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _rangeDecoder$[ebp]
	call	?GetThreshold@CDecoder@NRangeCoder@NQuantum@NCompress@@QBEII@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::GetThreshold
	mov	DWORD PTR _threshold$[ebp], eax
; Line 150
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN26@Decode
$LN25@Decode:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN26@Decode:
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+8]
	cmp	edx, DWORD PTR _threshold$[ebp]
	jbe	SHORT $LN24@Decode
	jmp	SHORT $LN25@Decode
$LN24@Decode:
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2+6]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2+8]
	push	ecx
	mov	ecx, DWORD PTR _rangeDecoder$[ebp]
	call	?Decode@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXIII@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::Decode
; Line 152
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+138]
	mov	DWORD PTR _res$[ebp], ecx
$LN23@Decode:
; Line 154
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2+8]
	add	ecx, 8
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+edx*2+8], cx
; Line 155
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	test	ecx, ecx
	je	SHORT $LN29@Decode
	mov	DWORD PTR tv139[ebp], 1
	jmp	SHORT $LN30@Decode
$LN29@Decode:
	mov	DWORD PTR tv139[ebp], 0
$LN30@Decode:
	cmp	DWORD PTR tv139[ebp], 0
	jne	SHORT $LN23@Decode
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	ecx, 3800				; 00000ed8H
	jle	$LN20@Decode
; Line 159
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR [ecx+4], edx
	cmp	DWORD PTR tv147[ebp], 0
	jne	$LN19@Decode
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 50			; 00000032H
; Line 162
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN18@Decode
$LN17@Decode:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN18@Decode:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx]
	jae	SHORT $LN16@Decode
; Line 163
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+8]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [edx+ecx*2+10]
	sub	eax, ecx
	add	eax, 1
	sar	eax, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+edx*2+8], ax
	jmp	SHORT $LN17@Decode
$LN16@Decode:
; Line 164
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@Decode
$LN14@Decode:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN15@Decode:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	cmp	DWORD PTR _i$[ebp], ecx
	jae	$LN8@Decode
; Line 165
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$66772[ebp], edx
	jmp	SHORT $LN12@Decode
$LN11@Decode:
	mov	eax, DWORD PTR _j$66772[ebp]
	add	eax, 1
	mov	DWORD PTR _j$66772[ebp], eax
$LN12@Decode:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _j$66772[ebp]
	cmp	edx, DWORD PTR [ecx]
	jae	$LN10@Decode
; Line 166
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+8]
	mov	eax, DWORD PTR _j$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [ecx+eax*2+8]
	cmp	edx, eax
	jge	SHORT $LN9@Decode
; Line 168
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*2+8]
	mov	WORD PTR _tmpFreq$66777[ebp], ax
; Line 169
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR [ecx+138]
	mov	BYTE PTR _tmpVal$66778[ebp], dl
; Line 170
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _j$66772[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [esi+edx*2+8]
	mov	WORD PTR [ecx+eax*2+8], dx
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _j$66772[ebp]
	mov	dl, BYTE PTR [ecx+138]
	mov	BYTE PTR [eax+138], dl
; Line 172
	mov	eax, DWORD PTR _j$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR _tmpFreq$66777[ebp]
	mov	WORD PTR [ecx+eax*2+8], dx
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _j$66772[ebp]
	mov	cl, BYTE PTR _tmpVal$66778[ebp]
	mov	BYTE PTR [eax+138], cl
$LN9@Decode:
; Line 175
	jmp	$LN11@Decode
$LN10@Decode:
	jmp	$LN14@Decode
$LN8@Decode:
; Line 176
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2+8]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [eax+edx*2+10]
	add	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+eax*2+8], cx
; Line 177
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	test	eax, eax
	je	SHORT $LN31@Decode
	mov	DWORD PTR tv219[ebp], 1
	jmp	SHORT $LN32@Decode
$LN31@Decode:
	mov	DWORD PTR tv219[ebp], 0
$LN32@Decode:
	cmp	DWORD PTR tv219[ebp], 0
	jne	SHORT $LN8@Decode
; Line 179
	jmp	SHORT $LN20@Decode
$LN19@Decode:
; Line 181
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Decode:
; Line 184
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*2+8]
	shr	ax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+ecx*2+8], ax
; Line 185
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+8]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [ecx+eax*2+10]
	cmp	edx, eax
	jg	SHORT $LN3@Decode
; Line 186
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+10]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+ecx*2+8], ax
$LN3@Decode:
; Line 188
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	test	eax, eax
	je	SHORT $LN33@Decode
	mov	DWORD PTR tv251[ebp], 1
	jmp	SHORT $LN34@Decode
$LN33@Decode:
	mov	DWORD PTR tv251[ebp], 0
$LN34@Decode:
	cmp	DWORD PTR tv251[ebp], 0
	jne	SHORT $LN4@Decode
$LN20@Decode:
; Line 191
	mov	eax, DWORD PTR _res$[ebp]
; Line 192
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Decode@CModelDecoder@NRangeCoder@NQuantum@NCompress@@QAEIPAVCDecoder@234@@Z ENDP ; NCompress::NQuantum::NRangeCoder::CModelDecoder::Decode
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetThreshold@CDecoder@NRangeCoder@NQuantum@NCompress@@QBEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_total$ = 8						; size = 4
?GetThreshold@CDecoder@NRangeCoder@NQuantum@NCompress@@QBEII@Z PROC ; NCompress::NQuantum::NRangeCoder::CDecoder::GetThreshold, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	add	eax, 1
	imul	eax, DWORD PTR _total$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+4]
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	4
?GetThreshold@CDecoder@NRangeCoder@NQuantum@NCompress@@QBEII@Z ENDP ; NCompress::NQuantum::NRangeCoder::CDecoder::GetThreshold
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Decode@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXIII@Z
_TEXT	SEGMENT
_offset$ = -12						; size = 4
_high$ = -8						; size = 4
_this$ = -4						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_total$ = 16						; size = 4
?Decode@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXIII@Z PROC ; NCompress::NQuantum::NRangeCoder::CDecoder::Decode, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	imul	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	xor	edx, edx
	div	DWORD PTR _total$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _high$[ebp], edx
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	imul	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	xor	edx, edx
	div	DWORD PTR _total$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 103
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 104
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN5@Decode@2:
; Line 107
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 32768				; 00008000H
	mov	ecx, DWORD PTR _high$[ebp]
	and	ecx, 32768				; 00008000H
	cmp	eax, ecx
	je	SHORT $LN3@Decode@2
; Line 109
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16384				; 00004000H
	je	SHORT $LN1@Decode@2
	mov	ecx, DWORD PTR _high$[ebp]
	and	ecx, 16384				; 00004000H
	je	SHORT $LN2@Decode@2
$LN1@Decode@2:
; Line 110
	jmp	SHORT $LN4@Decode@2
$LN2@Decode@2:
; Line 111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 16383				; 00003fffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 112
	mov	edx, DWORD PTR _high$[ebp]
	or	edx, 16384				; 00004000H
	mov	DWORD PTR _high$[ebp], edx
$LN3@Decode@2:
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 1
	and	ecx, 65535				; 0000ffffH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 115
	mov	eax, DWORD PTR _high$[ebp]
	shl	eax, 1
	or	eax, 1
	and	eax, 65535				; 0000ffffH
	mov	DWORD PTR _high$[ebp], eax
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+8]
	shl	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ReadBit@CStreamBitDecoder@NQuantum@NCompress@@QAEIXZ ; NCompress::NQuantum::CStreamBitDecoder::ReadBit
	or	esi, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], esi
; Line 117
	jmp	$LN5@Decode@2
$LN4@Decode@2:
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _high$[ebp]
	sub	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 119
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Decode@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXIII@Z ENDP ; NCompress::NQuantum::NRangeCoder::CDecoder::Decode
_TEXT	ENDS
PUBLIC	?Flush@CDecoder@NQuantum@NCompress@@QAEJXZ	; NCompress::NQuantum::CDecoder::Flush
PUBLIC	?GetProcessedSize@CDecoder@NRangeCoder@NQuantum@NCompress@@QBE_KXZ ; NCompress::NQuantum::NRangeCoder::CDecoder::GetProcessedSize
PUBLIC	??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher
PUBLIC	??0CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@PAV123@@Z ; NCompress::NQuantum::CDecoder::CDecoderFlusher::CDecoderFlusher
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
PUBLIC	?SetStream@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::SetStream
PUBLIC	?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NQuantum::CDecoder::CodeReal
EXTRN	?GetProcessedSize@COutBuffer@@QBE_KXZ:PROC	; COutBuffer::GetProcessedSize
EXTRN	___CxxFrameHandler3:PROC
xdata$x	SEGMENT
__unwindtable$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
__ehfuncinfo$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv203 = -120						; size = 8
$T67202 = -112						; size = 4
$T67201 = -108						; size = 4
$T67200 = -104						; size = 4
___result_$66998 = -100					; size = 4
_nowPos64$66997 = -92					; size = 8
_inSize$66996 = -76					; size = 8
___result_$66991 = -64					; size = 4
_rem$66987 = -60					; size = 8
_curSize$66986 = -52					; size = 4
_start$ = -48						; size = 8
_flusher$ = -36						; size = 8
_size$ = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
___formal$ = 16						; size = 4
_outSize$ = 20						; size = 4
_progress$ = 24						; size = 4
?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NQuantum::CDecoder::CodeReal
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.cpp
; Line 106
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-120]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN8@CodeReal
; Line 108
	mov	eax, -2147024809			; 80070057H
	jmp	$LN9@CodeReal
$LN8@CodeReal:
; Line 109
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _size$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _size$[ebp+4], edx
; Line 112
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?SetStream@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::SetStream
; Line 114
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Line 115
	mov	esi, esp
	mov	edx, DWORD PTR _outSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??0CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@PAV123@@Z ; NCompress::NQuantum::CDecoder::CDecoderFlusher::CDecoderFlusher
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	DWORD PTR _start$[ebp], eax
	mov	DWORD PTR _start$[ebp+4], edx
$LN7@CodeReal:
; Line 121
	mov	DWORD PTR _curSize$66986[ebp], 262144	; 00040000H
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _start$[ebp]
	sbb	edx, DWORD PTR _start$[ebp+4]
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, eax
	mov	eax, DWORD PTR _size$[ebp+4]
	sbb	eax, edx
	mov	DWORD PTR _rem$66987[ebp], ecx
	mov	DWORD PTR _rem$66987[ebp+4], eax
; Line 123
	mov	ecx, DWORD PTR _curSize$66986[ebp]
	xor	edx, edx
	mov	DWORD PTR tv203[ebp], ecx
	mov	DWORD PTR tv203[ebp+4], edx
	mov	eax, DWORD PTR tv203[ebp+4]
	cmp	eax, DWORD PTR _rem$66987[ebp+4]
	jb	SHORT $LN5@CodeReal
	ja	SHORT $LN12@CodeReal
	mov	ecx, DWORD PTR tv203[ebp]
	cmp	ecx, DWORD PTR _rem$66987[ebp]
	jbe	SHORT $LN5@CodeReal
$LN12@CodeReal:
; Line 124
	mov	edx, DWORD PTR _rem$66987[ebp]
	mov	DWORD PTR _curSize$66986[ebp], edx
$LN5@CodeReal:
; Line 125
	cmp	DWORD PTR _curSize$66986[ebp], 0
	jne	SHORT $LN4@CodeReal
; Line 126
	jmp	$LN6@CodeReal
$LN4@CodeReal:
; Line 127
	mov	eax, DWORD PTR _curSize$66986[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeSpec@CDecoder@NQuantum@NCompress@@AAEJI@Z ; NCompress::NQuantum::CDecoder::CodeSpec
	mov	DWORD PTR ___result_$66991[ebp], eax
	cmp	DWORD PTR ___result_$66991[ebp], 0
	je	SHORT $LN3@CodeReal
	mov	ecx, DWORD PTR ___result_$66991[ebp]
	mov	DWORD PTR $T67200[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T67200[ebp]
	jmp	$LN9@CodeReal
$LN3@CodeReal:
; Line 128
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN2@CodeReal
; Line 130
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?GetProcessedSize@CDecoder@NRangeCoder@NQuantum@NCompress@@QBE_KXZ ; NCompress::NQuantum::NRangeCoder::CDecoder::GetProcessedSize
	mov	DWORD PTR _inSize$66996[ebp], eax
	mov	DWORD PTR _inSize$66996[ebp+4], edx
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _start$[ebp]
	sbb	edx, DWORD PTR _start$[ebp+4]
	mov	DWORD PTR _nowPos64$66997[ebp], eax
	mov	DWORD PTR _nowPos64$66997[ebp+4], edx
; Line 132
	mov	esi, esp
	lea	edx, DWORD PTR _nowPos64$66997[ebp]
	push	edx
	lea	eax, DWORD PTR _inSize$66996[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result_$66998[ebp], eax
	cmp	DWORD PTR ___result_$66998[ebp], 0
	je	SHORT $LN2@CodeReal
	mov	edx, DWORD PTR ___result_$66998[ebp]
	mov	DWORD PTR $T67201[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T67201[ebp]
	jmp	SHORT $LN9@CodeReal
$LN2@CodeReal:
; Line 134
	jmp	$LN7@CodeReal
$LN6@CodeReal:
; Line 135
	mov	BYTE PTR _flusher$[ebp+4], 0
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@CDecoder@NQuantum@NCompress@@QAEJXZ ; NCompress::NQuantum::CDecoder::Flush
	mov	DWORD PTR $T67202[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _flusher$[ebp]
	call	??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T67202[ebp]
$LN9@CodeReal:
; Line 137
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 120				; 00000078H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN18@CodeReal:
	DD	3
	DD	$LN17@CodeReal
$LN17@CodeReal:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN13@CodeReal
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN14@CodeReal
	DD	-92					; ffffffa4H
	DD	8
	DD	$LN15@CodeReal
$LN15@CodeReal:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
$LN14@CodeReal:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN13@CodeReal:
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
	lea	ecx, DWORD PTR _flusher$[ebp]
	jmp	??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher
__ehhandler$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NQuantum::CDecoder::CodeReal
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
_TEXT	ENDS
PUBLIC	?SetStream@CStreamBitDecoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z ; NCompress::NQuantum::CStreamBitDecoder::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z PROC ; NCompress::NQuantum::NRangeCoder::CDecoder::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 73
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?SetStream@CStreamBitDecoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z ; NCompress::NQuantum::CStreamBitDecoder::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CDecoder@NRangeCoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z ENDP ; NCompress::NQuantum::NRangeCoder::CDecoder::SetStream
_TEXT	ENDS
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@CStreamBitDecoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CStreamBitDecoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z PROC ; NCompress::NQuantum::CStreamBitDecoder::SetStream, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _stream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CStreamBitDecoder@NQuantum@NCompress@@QAEXPAUISequentialInStream@@@Z ENDP ; NCompress::NQuantum::CStreamBitDecoder::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CStreamBitDecoder@NQuantum@NCompress@@QBE_KXZ ; NCompress::NQuantum::CStreamBitDecoder::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@CDecoder@NRangeCoder@NQuantum@NCompress@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CDecoder@NRangeCoder@NQuantum@NCompress@@QBE_KXZ PROC ; NCompress::NQuantum::NRangeCoder::CDecoder::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetProcessedSize@CStreamBitDecoder@NQuantum@NCompress@@QBE_KXZ ; NCompress::NQuantum::CStreamBitDecoder::GetProcessedSize
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CDecoder@NRangeCoder@NQuantum@NCompress@@QBE_KXZ ENDP ; NCompress::NQuantum::NRangeCoder::CDecoder::GetProcessedSize
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@CStreamBitDecoder@NQuantum@NCompress@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CStreamBitDecoder@NQuantum@NCompress@@QBE_KXZ PROC ; NCompress::NQuantum::CStreamBitDecoder::GetProcessedSize, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CStreamBitDecoder@NQuantum@NCompress@@QBE_KXZ ENDP ; NCompress::NQuantum::CStreamBitDecoder::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@PAV123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_decoder$ = 8						; size = 4
??0CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@PAV123@@Z PROC ; NCompress::NQuantum::CDecoder::CDecoderFlusher::CDecoderFlusher, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _decoder$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@PAV123@@Z ENDP ; NCompress::NQuantum::CDecoder::CDecoderFlusher::CDecoderFlusher
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ PROC ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@CDecoderFl
; Line 244
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Flush@CDecoder@NQuantum@NCompress@@QAEJXZ ; NCompress::NQuantum::CDecoder::Flush
$LN2@CDecoderFl:
; Line 246
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDecoderFlusher@CDecoder@NQuantum@NCompress@@QAE@XZ ENDP ; NCompress::NQuantum::CDecoder::CDecoderFlusher::~CDecoderFlusher
_TEXT	ENDS
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@CDecoder@NQuantum@NCompress@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@CDecoder@NQuantum@NCompress@@QAEJXZ PROC		; NCompress::NQuantum::CDecoder::Flush, COMDAT
; _this$ = ecx
; Line 249
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@CDecoder@NQuantum@NCompress@@QAEJXZ ENDP		; NCompress::NQuantum::CDecoder::Flush
_TEXT	ENDS
PUBLIC	?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NQuantum::CDecoder::Code
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCOutBufferException@@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.cpp
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUCInBufferException@@@8
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	03H
	DD	FLAT:__catchsym$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$4
__ehfuncinfo$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$4 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffe8H
	DD	FLAT:__catch$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
	DD	09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffdcH
	DD	FLAT:__catch$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv84 = -56						; size = 4
$T67240 = -52						; size = 4
$T67239 = -48						; size = 4
$T67238 = -44						; size = 4
_e$67015 = -36						; size = 4
_e$67012 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
_inSize$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NQuantum::CDecoder::Code
; Line 141
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 142
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CDecoder@NQuantum@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NQuantum::CDecoder::CodeReal
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	jmp	SHORT $LN2@Code
__catch$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
; Line 143
	mov	edx, DWORD PTR _e$67012[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T67238[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Code
	ret	0
	mov	eax, __tryend$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1:
; Line 144
	mov	ecx, DWORD PTR _e$67015[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T67239[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN11@Code
	ret	0
	mov	eax, __tryend$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2:
; Line 145
	mov	DWORD PTR $T67240[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN13@Code
	ret	0
	mov	eax, __tryend$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
	ret	0
__tryend$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN12@Code
$LN13@Code:
	mov	eax, DWORD PTR $T67240[ebp]
	jmp	SHORT $LN2@Code
$LN12@Code:
	jmp	SHORT $LN10@Code
$LN11@Code:
; Line 144
	mov	eax, DWORD PTR $T67239[ebp]
	jmp	SHORT $LN2@Code
$LN10@Code:
	jmp	SHORT $LN2@Code
$LN9@Code:
; Line 143
	mov	eax, DWORD PTR $T67238[ebp]
$LN2@Code:
; Line 146
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Code
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	1
$LN21@Code:
	DD	2
	DD	$LN20@Code
$LN20@Code:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN17@Code
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN18@Code
$LN18@Code:
	DB	101					; 00000065H
	DB	0
$LN17@Code:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Code@CDecoder@NQuantum@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NQuantum::CDecoder::Code
PUBLIC	?SetOutStreamSize@CDecoder@NQuantum@NCompress@@UAGJPB_K@Z ; NCompress::NQuantum::CDecoder::SetOutStreamSize
EXTRN	?Init@CLzOutWindow@@QAEX_N@Z:PROC		; CLzOutWindow::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_outSize$ = 12						; size = 4
?SetOutStreamSize@CDecoder@NQuantum@NCompress@@UAGJPB_K@Z PROC ; NCompress::NQuantum::CDecoder::SetOutStreamSize
; Line 164
	push	ebp
	mov	ebp, esp
; Line 165
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN2@SetOutStre
; Line 166
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN3@SetOutStre
$LN2@SetOutStre:
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], -2			; fffffffeH
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+132]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CLzOutWindow@@QAEX_N@Z		; CLzOutWindow::Init
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+132]
	test	ecx, ecx
	jne	SHORT $LN1@SetOutStre
; Line 170
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CDecoder@NQuantum@NCompress@@AAEXXZ ; NCompress::NQuantum::CDecoder::Init
$LN1@SetOutStre:
; Line 171
	xor	eax, eax
$LN3@SetOutStre:
; Line 172
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetOutStreamSize@CDecoder@NQuantum@NCompress@@UAGJPB_K@Z ENDP ; NCompress::NQuantum::CDecoder::SetOutStreamSize
_TEXT	ENDS
PUBLIC	?Create@CDecoder@NRangeCoder@NQuantum@NCompress@@QAE_NI@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::Create
PUBLIC	?SetParams@CDecoder@NQuantum@NCompress@@QAEJH@Z	; NCompress::NQuantum::CDecoder::SetParams
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numDictBits$ = 8					; size = 4
?SetParams@CDecoder@NQuantum@NCompress@@QAEJH@Z PROC	; NCompress::NQuantum::CDecoder::SetParams
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 176
	cmp	DWORD PTR _numDictBits$[ebp], 21	; 00000015H
	jle	SHORT $LN3@SetParams
; Line 177
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN4@SetParams
$LN3@SetParams:
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numDictBits$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, 1
	mov	ecx, DWORD PTR [edx+128]
	shl	eax, cl
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@SetParams
; Line 180
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN4@SetParams
$LN2@SetParams:
; Line 181
	push	1048576					; 00100000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Create@CDecoder@NRangeCoder@NQuantum@NCompress@@QAE_NI@Z ; NCompress::NQuantum::NRangeCoder::CDecoder::Create
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@SetParams
; Line 182
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN4@SetParams
$LN1@SetParams:
; Line 183
	xor	eax, eax
$LN4@SetParams:
; Line 184
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetParams@CDecoder@NQuantum@NCompress@@QAEJH@Z ENDP	; NCompress::NQuantum::CDecoder::SetParams
_TEXT	ENDS
PUBLIC	?Create@CStreamBitDecoder@NQuantum@NCompress@@QAE_NI@Z ; NCompress::NQuantum::CStreamBitDecoder::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CDecoder@NRangeCoder@NQuantum@NCompress@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufferSize$ = 8					; size = 4
?Create@CDecoder@NRangeCoder@NQuantum@NCompress@@QAE_NI@Z PROC ; NCompress::NQuantum::NRangeCoder::CDecoder::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\quantumdecoder.h
; Line 72
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufferSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Create@CStreamBitDecoder@NQuantum@NCompress@@QAE_NI@Z ; NCompress::NQuantum::CStreamBitDecoder::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@CDecoder@NRangeCoder@NQuantum@NCompress@@QAE_NI@Z ENDP ; NCompress::NQuantum::NRangeCoder::CDecoder::Create
_TEXT	ENDS
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CStreamBitDecoder@NQuantum@NCompress@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufferSize$ = 8					; size = 4
?Create@CStreamBitDecoder@NQuantum@NCompress@@QAE_NI@Z PROC ; NCompress::NQuantum::CStreamBitDecoder::Create, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufferSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@CStreamBitDecoder@NQuantum@NCompress@@QAE_NI@Z ENDP ; NCompress::NQuantum::CStreamBitDecoder::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
_TEXT	ENDS
END

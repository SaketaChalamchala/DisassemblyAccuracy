; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Cab\CabRegister.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

EXTRN	?kMarker@NHeader@NCab@NArchive@@3QBEB:QWORD	; NArchive::NCab::NHeader::kMarker
CONST	SEGMENT
$SG68997 DB	'Cab', 00H
$SG68998 DB	'cab', 00H
_g_ArcInfo DW	08H
	DB	08H
	DB	08H
	DW	00H
	ORG $+2
	DD	FLAT:?kMarker@NHeader@NCab@NArchive@@3QBEB
	DD	FLAT:$SG68997
	DD	FLAT:$SG68998
	DD	00H
	DD	FLAT:?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??0CHandler@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CHandler::CHandler
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ$0
__ehfuncinfo$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabregister.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T69275 = -20						; size = 4
$T69274 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ PROC	; NArchive::NCab::CreateArc
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	88					; 00000058H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T69275[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T69275[ebp], 0
	je	SHORT $LN3@CreateArc
	mov	ecx, DWORD PTR $T69275[ebp]
	call	??0CHandler@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@CreateArc
$LN3@CreateArc:
	mov	DWORD PTR tv74[ebp], 0
$LN4@CreateArc:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T69274[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T69274[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ$0:
	mov	eax, DWORD PTR $T69275[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateArc@NCab@NArchive@@YGPAUIInArchive@@XZ ENDP	; NArchive::NCab::CreateArc
PUBLIC	??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CMvDatabaseEx::~CMvDatabaseEx
PUBLIC	??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CMvDatabaseEx::CMvDatabaseEx
PUBLIC	??_7CHandler@NCab@NArchive@@6B@			; NArchive::NCab::CHandler::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0IInArchive@@QAE@XZ				; IInArchive::IInArchive
PUBLIC	??_R4CHandler@NCab@NArchive@@6B@		; NArchive::NCab::CHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHandler@NCab@NArchive@@@8		; NArchive::NCab::CHandler `RTTI Type Descriptor'
PUBLIC	??_R3CHandler@NCab@NArchive@@8			; NArchive::NCab::CHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHandler@NCab@NArchive@@8			; NArchive::NCab::CHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHandler@NCab@NArchive@@8		; NArchive::NCab::CHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IInArchive@@8			; IInArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIInArchive@@@8				; IInArchive `RTTI Type Descriptor'
PUBLIC	??_R3IInArchive@@8				; IInArchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInArchive@@8				; IInArchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CHandler@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::NCab::CHandler::QueryInterface
PUBLIC	?AddRef@CHandler@NCab@NArchive@@UAGKXZ		; NArchive::NCab::CHandler::AddRef
PUBLIC	?Release@CHandler@NCab@NArchive@@UAGKXZ		; NArchive::NCab::CHandler::Release
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z:PROC ; NArchive::NCab::CHandler::Open
EXTRN	?Close@CHandler@NCab@NArchive@@UAGJXZ:PROC	; NArchive::NCab::CHandler::Close
EXTRN	?GetNumberOfItems@CHandler@NCab@NArchive@@UAGJPAI@Z:PROC ; NArchive::NCab::CHandler::GetNumberOfItems
EXTRN	?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z:PROC ; NArchive::NCab::CHandler::GetProperty
EXTRN	?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z:PROC ; NArchive::NCab::CHandler::Extract
EXTRN	?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z:PROC ; NArchive::NCab::CHandler::GetArchiveProperty
EXTRN	?GetNumberOfProperties@CHandler@NCab@NArchive@@UAGJPAI@Z:PROC ; NArchive::NCab::CHandler::GetNumberOfProperties
EXTRN	?GetPropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z:PROC ; NArchive::NCab::CHandler::GetPropertyInfo
EXTRN	?GetNumberOfArchiveProperties@CHandler@NCab@NArchive@@UAGJPAI@Z:PROC ; NArchive::NCab::CHandler::GetNumberOfArchiveProperties
EXTRN	?GetArchivePropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z:PROC ; NArchive::NCab::CHandler::GetArchivePropertyInfo
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IInArchive@@8
rdata$r	SEGMENT
??_R2IInArchive@@8 DD FLAT:??_R1A@?0A@EA@IInArchive@@8	; IInArchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IInArchive@@8
rdata$r	SEGMENT
??_R3IInArchive@@8 DD 00H				; IInArchive::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInArchive@@@8
_DATA	SEGMENT
??_R0?AUIInArchive@@@8 DD FLAT:??_7type_info@@6B@	; IInArchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IInArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInArchive@@8 DD FLAT:??_R0?AUIInArchive@@@8 ; IInArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CHandler@NCab@NArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHandler@NCab@NArchive@@8 DD FLAT:??_R0?AVCHandler@NCab@NArchive@@@8 ; NArchive::NCab::CHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHandler@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2CHandler@NCab@NArchive@@8
rdata$r	SEGMENT
??_R2CHandler@NCab@NArchive@@8 DD FLAT:??_R1A@?0A@EA@CHandler@NCab@NArchive@@8 ; NArchive::NCab::CHandler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IInArchive@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CHandler@NCab@NArchive@@8
rdata$r	SEGMENT
??_R3CHandler@NCab@NArchive@@8 DD 00H			; NArchive::NCab::CHandler::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CHandler@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHandler@NCab@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCHandler@NCab@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::NCab::CHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHandler@NCab@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CHandler@NCab@NArchive@@6B@
rdata$r	SEGMENT
??_R4CHandler@NCab@NArchive@@6B@ DD 00H			; NArchive::NCab::CHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@NCab@NArchive@@@8
	DD	FLAT:??_R3CHandler@NCab@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_7CHandler@NCab@NArchive@@6B@
CONST	SEGMENT
??_7CHandler@NCab@NArchive@@6B@ DD FLAT:??_R4CHandler@NCab@NArchive@@6B@ ; NArchive::NCab::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@NCab@NArchive@@UAGKXZ
	DD	FLAT:?Release@CHandler@NCab@NArchive@@UAGKXZ
	DD	FLAT:?Open@CHandler@NCab@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	FLAT:?Close@CHandler@NCab@NArchive@@UAGJXZ
	DD	FLAT:?GetNumberOfItems@CHandler@NCab@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetProperty@CHandler@NCab@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?Extract@CHandler@NCab@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	FLAT:?GetArchiveProperty@CHandler@NCab@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?GetNumberOfProperties@CHandler@NCab@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetPropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z
	DD	FLAT:?GetNumberOfArchiveProperties@CHandler@NCab@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetArchivePropertyInfo@CHandler@NCab@NArchive@@UAGJIPAPA_WPAKPAG@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CHandler@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHandler@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CHandler@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CHandler@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CHandler@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CHandler@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CHandler::CHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CHandler@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IInArchive@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CHandler@NCab@NArchive@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CHandler@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
__ehhandler$??0CHandler@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CHandler@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CHandler@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CHandler::CHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IInArchive:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CHandler@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CHandler@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z PROC ; NArchive::NCab::CHandler::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.h
; Line 20
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN3@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_IInArchive
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN3@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN5@QueryInter
$LN3@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN5@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CHandler@NCab@NArchive@@UAGJABU_GUID@@PAPAX@Z ENDP ; NArchive::NCab::CHandler::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@NCab@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CHandler@NCab@NArchive@@UAGKXZ PROC		; NArchive::NCab::CHandler::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabhandler.h
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CHandler@NCab@NArchive@@UAGKXZ ENDP		; NArchive::NCab::CHandler::AddRef
_TEXT	ENDS
PUBLIC	??_GCHandler@NCab@NArchive@@QAEPAXI@Z		; NArchive::NCab::CHandler::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CHandler@NCab@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T69317 = -8						; size = 4
$T69316 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CHandler@NCab@NArchive@@UAGKXZ PROC		; NArchive::NCab::CHandler::Release, COMDAT
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T69317[ebp], edx
	mov	eax, DWORD PTR $T69317[ebp]
	mov	DWORD PTR $T69316[ebp], eax
	cmp	DWORD PTR $T69316[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T69316[ebp]
	call	??_GCHandler@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CHandler@NCab@NArchive@@UAGKXZ ENDP		; NArchive::NCab::CHandler::Release
_TEXT	ENDS
PUBLIC	??1CHandler@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CHandler::~CHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCHandler@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCHandler@NCab@NArchive@@QAEPAXI@Z PROC		; NArchive::NCab::CHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CHandler@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCHandler@NCab@NArchive@@QAEPAXI@Z ENDP		; NArchive::NCab::CHandler::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CHandler@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CHandler@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CHandler@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CHandler@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CHandler@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CHandler@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CHandler::~CHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CHandler@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CHandler@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
__ehhandler$??1CHandler@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CHandler@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CHandler@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CHandler::~CHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T69334 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69334[ebp], ecx
	mov	edx, DWORD PTR $T69334[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
PUBLIC	??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::~CObjectVector<NArchive::NCab::CDatabaseEx>
PUBLIC	??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CMvItem>::~CRecordVector<NArchive::NCab::CMvItem>
PUBLIC	??1?$CRecordVector@H@@QAE@XZ			; CRecordVector<int>::~CRecordVector<int>
PUBLIC	??1?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ$2
__ehfuncinfo$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CMvDatabaseEx::~CMvDatabaseEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::~CRecordVector<int>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CMvItem>::~CRecordVector<NArchive::NCab::CMvItem>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::~CObjectVector<NArchive::NCab::CDatabaseEx>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::~CObjectVector<NArchive::NCab::CDatabaseEx>
__unwindfunclet$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CMvItem>::~CRecordVector<NArchive::NCab::CMvItem>
__unwindfunclet$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::~CRecordVector<int>
__ehhandler$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CMvDatabaseEx@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CMvDatabaseEx::~CMvDatabaseEx
PUBLIC	??_7IInArchive@@6B@				; IInArchive::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4IInArchive@@6B@				; IInArchive::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4IInArchive@@6B@
rdata$r	SEGMENT
??_R4IInArchive@@6B@ DD 00H				; IInArchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIInArchive@@@8
	DD	FLAT:??_R3IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_7IInArchive@@6B@
CONST	SEGMENT
??_7IInArchive@@6B@ DD FLAT:??_R4IInArchive@@6B@	; IInArchive::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IInArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IInArchive@@QAE@XZ PROC				; IInArchive::IInArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IInArchive@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IInArchive@@QAE@XZ ENDP				; IInArchive::IInArchive
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
PUBLIC	??0?$CRecordVector@H@@QAE@XZ			; CRecordVector<int>::CRecordVector<int>
PUBLIC	??0?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CMvItem>::CRecordVector<NArchive::NCab::CMvItem>
PUBLIC	??0?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::CObjectVector<NArchive::NCab::CDatabaseEx>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ$2
__ehfuncinfo$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CMvDatabaseEx::CMvDatabaseEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::CObjectVector<NArchive::NCab::CDatabaseEx>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CMvItem>::CRecordVector<NArchive::NCab::CMvItem>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::CRecordVector<int>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::CRecordVector<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CDatabaseEx>::~CObjectVector<NArchive::NCab::CDatabaseEx>
__unwindfunclet$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CMvItem>::~CRecordVector<NArchive::NCab::CMvItem>
__unwindfunclet$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$CRecordVector@H@@QAE@XZ		; CRecordVector<int>::~CRecordVector<int>
__ehhandler$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMvDatabaseEx@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CMvDatabaseEx::CMvDatabaseEx
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::CObjectVector<NArchive::NCab::CDatabaseEx>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::CObjectVector<NArchive::NCab::CDatabaseEx>
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z	; NArchive::NCab::CDatabaseEx::`scalar deleting destructor'
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T69369 = -28						; size = 4
$T69368 = -24						; size = 4
_i$69061 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ PROC ; CObjectVector<NArchive::NCab::CDatabaseEx>::~CObjectVector<NArchive::NCab::CDatabaseEx>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$69061[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$69061[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$69061[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$69061[ebp], eax
	mov	ecx, DWORD PTR _i$69061[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T69369[ebp], edx
	mov	eax, DWORD PTR $T69369[ebp]
	mov	DWORD PTR $T69368[ebp], eax
	cmp	DWORD PTR $T69368[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T69368[ebp]
	call	??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCDatabaseEx@NCab@NArchive@@@@QAE@XZ ENDP ; CObjectVector<NArchive::NCab::CDatabaseEx>::~CObjectVector<NArchive::NCab::CDatabaseEx>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::CRecordVector<NArchive::NCab::CMvItem>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::CRecordVector<NArchive::NCab::CMvItem>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
$T69383 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::NCab::CMvItem>::~CRecordVector<NArchive::NCab::CMvItem>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69383[ebp], ecx
	mov	edx, DWORD PTR $T69383[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCMvItem@NCab@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::NCab::CMvItem>::~CRecordVector<NArchive::NCab::CMvItem>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@H@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@H@@QAE@XZ PROC			; CRecordVector<int>::CRecordVector<int>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@H@@QAE@XZ ENDP			; CRecordVector<int>::CRecordVector<int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@H@@QAE@XZ
_TEXT	SEGMENT
$T69388 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@H@@QAE@XZ PROC			; CRecordVector<int>::~CRecordVector<int>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69388[ebp], ecx
	mov	edx, DWORD PTR $T69388[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@H@@QAE@XZ ENDP			; CRecordVector<int>::~CRecordVector<int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
$T69393 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69393[ebp], ecx
	mov	edx, DWORD PTR $T69393[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
_TEXT	ENDS
PUBLIC	??1CDatabaseEx@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CDatabaseEx::~CDatabaseEx
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z PROC		; NArchive::NCab::CDatabaseEx::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDatabaseEx@NCab@NArchive@@QAEPAXI@Z ENDP		; NArchive::NCab::CDatabaseEx::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CDatabase@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CDatabase::~CDatabase
PUBLIC	??1?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDatabaseEx@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDatabaseEx@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CDatabaseEx@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDatabaseEx@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatabaseEx@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CDatabaseEx::~CDatabaseEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDatabase@NCab@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDatabaseEx@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDatabase@NCab@NArchive@@QAE@XZ
__ehhandler$??1CDatabaseEx@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatabaseEx@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatabaseEx@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CDatabaseEx::~CDatabaseEx
PUBLIC	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
PUBLIC	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
PUBLIC	??1CInArcInfo@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CInArcInfo::~CInArcInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDatabase@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$1
__ehfuncinfo$??1CDatabase@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CDatabase@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDatabase@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatabase@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CDatabase::~CDatabase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatabase@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1CInArcInfo@NCab@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
__unwindfunclet$??1CDatabase@NCab@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
__ehhandler$??1CDatabase@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatabase@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatabase@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CDatabase::~CDatabase
PUBLIC	??1CArchInfo@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CArchInfo::~CArchInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInArcInfo@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInArcInfo@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CInArcInfo::~CInArcInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CArchInfo@NCab@NArchive@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInArcInfo@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CInArcInfo::~CInArcInfo
_TEXT	ENDS
PUBLIC	??1COtherArc@NCab@NArchive@@QAE@XZ		; NArchive::NCab::COtherArc::~COtherArc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CArchInfo@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CArchInfo@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CArchInfo@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CArchInfo@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CArchInfo@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CArchInfo@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CArchInfo::~CArchInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CArchInfo@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1COtherArc@NCab@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1COtherArc@NCab@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CArchInfo@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1COtherArc@NCab@NArchive@@QAE@XZ
__ehhandler$??1CArchInfo@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CArchInfo@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CArchInfo@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CArchInfo::~CArchInfo
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1COtherArc@NCab@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1COtherArc@NCab@NArchive@@QAE@XZ$0
__ehfuncinfo$??1COtherArc@NCab@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1COtherArc@NCab@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1COtherArc@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1COtherArc@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::COtherArc::~COtherArc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1COtherArc@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1COtherArc@NCab@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1COtherArc@NCab@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1COtherArc@NCab@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1COtherArc@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::COtherArc::~COtherArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T69442 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69442[ebp], ecx
	mov	edx, DWORD PTR $T69442[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T69449 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69449[ebp], ecx
	mov	edx, DWORD PTR $T69449[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
$T69454 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69454[ebp], ecx
	mov	edx, DWORD PTR $T69454[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCFolder@NCab@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::NCab::CFolder>::~CRecordVector<NArchive::NCab::CFolder>
_TEXT	ENDS
PUBLIC	??_GCItem@NCab@NArchive@@QAEPAXI@Z		; NArchive::NCab::CItem::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T69458 = -28						; size = 4
$T69457 = -24						; size = 4
_i$69136 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ PROC	; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$69136[ebp], eax
$LN2@CObjectVec@2:
	cmp	DWORD PTR _i$69136[ebp], 0
	je	SHORT $LN3@CObjectVec@2
; Line 489
	mov	eax, DWORD PTR _i$69136[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$69136[ebp], eax
	mov	ecx, DWORD PTR _i$69136[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T69458[ebp], edx
	mov	eax, DWORD PTR $T69458[ebp]
	mov	DWORD PTR $T69457[ebp], eax
	cmp	DWORD PTR $T69457[ebp], 0
	je	SHORT $LN5@CObjectVec@2
	push	1
	mov	ecx, DWORD PTR $T69457[ebp]
	call	??_GCItem@NCab@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@2
$LN5@CObjectVec@2:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@2:
	jmp	SHORT $LN2@CObjectVec@2
$LN3@CObjectVec@2:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCItem@NCab@NArchive@@@@QAE@XZ ENDP	; CObjectVector<NArchive::NCab::CItem>::~CObjectVector<NArchive::NCab::CItem>
PUBLIC	??1CItem@NCab@NArchive@@QAE@XZ			; NArchive::NCab::CItem::~CItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCItem@NCab@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCItem@NCab@NArchive@@QAEPAXI@Z PROC			; NArchive::NCab::CItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CItem@NCab@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCItem@NCab@NArchive@@QAEPAXI@Z ENDP			; NArchive::NCab::CItem::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CItem@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CItem@NCab@NArchive@@QAE@XZ PROC			; NArchive::NCab::CItem::~CItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CItem@NCab@NArchive@@QAE@XZ ENDP			; NArchive::NCab::CItem::~CItem
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
_TEXT	ENDS
PUBLIC	??0CRegisterArc@NCab@NArchive@@QAE@XZ		; NArchive::NCab::CRegisterArc::CRegisterArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_RegisterArc@NCab@NArchive@@YAXXZ
text$yc	SEGMENT
??__Eg_RegisterArc@NCab@NArchive@@YAXXZ PROC		; NArchive::NCab::`dynamic initializer for 'g_RegisterArc'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\cab\cabregister.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_RegisterArc
	call	??0CRegisterArc@NCab@NArchive@@QAE@XZ	; NArchive::NCab::CRegisterArc::CRegisterArc
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_RegisterArc@NCab@NArchive@@YAXXZ ENDP		; NArchive::NCab::`dynamic initializer for 'g_RegisterArc''
text$yc	ENDS
EXTRN	?RegisterArc@@YGXPBUCArcInfo@@@Z:PROC		; RegisterArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRegisterArc@NCab@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRegisterArc@NCab@NArchive@@QAE@XZ PROC		; NArchive::NCab::CRegisterArc::CRegisterArc, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET _g_ArcInfo
	call	?RegisterArc@@YGXPBUCArcInfo@@@Z	; RegisterArc
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRegisterArc@NCab@NArchive@@QAE@XZ ENDP		; NArchive::NCab::CRegisterArc::CRegisterArc
_TEXT	ENDS
_BSS	SEGMENT
_g_RegisterArc DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_RegisterArc$initializer$ DD FLAT:??__Eg_RegisterArc@NCab@NArchive@@YAXXZ
CRT$XCU	ENDS
END

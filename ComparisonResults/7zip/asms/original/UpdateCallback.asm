; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Common\UpdateCallback.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG76007 DB	'.', 00H, '.', 00H, '\', 00H, 00H, 00H
$SG76267 DB	00H, 00H
CONST	ENDS
PUBLIC	??1?$CMyComPtr@UIInArchive@@@@QAE@XZ		; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??1?$CRecordVector@_K@@QAE@XZ			; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
PUBLIC	??1?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	??1?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
PUBLIC	??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ	; CRecordVector<CKeyKeyValPair>::~CRecordVector<CKeyKeyValPair>
PUBLIC	??0?$CMyComPtr@UIInArchive@@@@QAE@XZ		; CMyComPtr<IInArchive>::CMyComPtr<IInArchive>
PUBLIC	??0?$CRecordVector@_K@@QAE@XZ			; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
PUBLIC	??0?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::CObjectVector<UString>
PUBLIC	??0?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
PUBLIC	??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ	; CRecordVector<CKeyKeyValPair>::CRecordVector<CKeyKeyValPair>
PUBLIC	??_7CArchiveUpdateCallback@@6BIInFileStream_Callback@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BICompressProgressInfo@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@ ; CArchiveUpdateCallback::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0IInFileStream_Callback@@QAE@XZ		; IInFileStream_Callback::IInFileStream_Callback
PUBLIC	??0ICompressProgressInfo@@QAE@XZ		; ICompressProgressInfo::ICompressProgressInfo
PUBLIC	??0ICryptoGetTextPassword@@QAE@XZ		; ICryptoGetTextPassword::ICryptoGetTextPassword
PUBLIC	??0ICryptoGetTextPassword2@@QAE@XZ		; ICryptoGetTextPassword2::ICryptoGetTextPassword2
PUBLIC	??0IArchiveGetRootProps@@QAE@XZ			; IArchiveGetRootProps::IArchiveGetRootProps
PUBLIC	??0IArchiveGetRawProps@@QAE@XZ			; IArchiveGetRawProps::IArchiveGetRawProps
PUBLIC	??0IArchiveExtractCallbackMessage@@QAE@XZ	; IArchiveExtractCallbackMessage::IArchiveExtractCallbackMessage
PUBLIC	??0IArchiveUpdateCallbackFile@@QAE@XZ		; IArchiveUpdateCallbackFile::IArchiveUpdateCallbackFile
PUBLIC	??0IArchiveUpdateCallback2@@QAE@XZ		; IArchiveUpdateCallback2::IArchiveUpdateCallback2
PUBLIC	??0CArchiveUpdateCallback@@QAE@XZ		; CArchiveUpdateCallback::CArchiveUpdateCallback
PUBLIC	??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCArchiveUpdateCallback@@@8		; CArchiveUpdateCallback `RTTI Type Descriptor'
PUBLIC	??_R3CArchiveUpdateCallback@@8			; CArchiveUpdateCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CArchiveUpdateCallback@@8			; CArchiveUpdateCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CArchiveUpdateCallback@@8		; CArchiveUpdateCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IArchiveUpdateCallback2@@8	; IArchiveUpdateCallback2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIArchiveUpdateCallback2@@@8		; IArchiveUpdateCallback2 `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveUpdateCallback2@@8			; IArchiveUpdateCallback2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveUpdateCallback2@@8			; IArchiveUpdateCallback2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveUpdateCallback@@8		; IArchiveUpdateCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIArchiveUpdateCallback@@@8		; IArchiveUpdateCallback `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveUpdateCallback@@8			; IArchiveUpdateCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveUpdateCallback@@8			; IArchiveUpdateCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IProgress@@8			; IProgress::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIProgress@@@8				; IProgress `RTTI Type Descriptor'
PUBLIC	??_R3IProgress@@8				; IProgress::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IProgress@@8				; IProgress::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IProgress@@8			; IProgress::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IArchiveUpdateCallbackFile@@8	; IArchiveUpdateCallbackFile::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUIArchiveUpdateCallbackFile@@@8		; IArchiveUpdateCallbackFile `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveUpdateCallbackFile@@8		; IArchiveUpdateCallbackFile::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveUpdateCallbackFile@@8		; IArchiveUpdateCallbackFile::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveUpdateCallbackFile@@8	; IArchiveUpdateCallbackFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@IArchiveExtractCallbackMessage@@8	; IArchiveExtractCallbackMessage::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUIArchiveExtractCallbackMessage@@@8	; IArchiveExtractCallbackMessage `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveExtractCallbackMessage@@8		; IArchiveExtractCallbackMessage::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveExtractCallbackMessage@@8		; IArchiveExtractCallbackMessage::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveExtractCallbackMessage@@8	; IArchiveExtractCallbackMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IProgress@@8			; IProgress::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@IArchiveGetRawProps@@8		; IArchiveGetRawProps::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUIArchiveGetRawProps@@@8			; IArchiveGetRawProps `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveGetRawProps@@8			; IArchiveGetRawProps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveGetRawProps@@8			; IArchiveGetRawProps::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveGetRawProps@@8		; IArchiveGetRawProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@IArchiveGetRootProps@@8		; IArchiveGetRootProps::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUIArchiveGetRootProps@@@8		; IArchiveGetRootProps `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveGetRootProps@@8			; IArchiveGetRootProps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveGetRootProps@@8			; IArchiveGetRootProps::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveGetRootProps@@8		; IArchiveGetRootProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@ICryptoGetTextPassword2@@8	; ICryptoGetTextPassword2::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R0?AUICryptoGetTextPassword2@@@8		; ICryptoGetTextPassword2 `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoGetTextPassword2@@8			; ICryptoGetTextPassword2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoGetTextPassword2@@8			; ICryptoGetTextPassword2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoGetTextPassword2@@8	; ICryptoGetTextPassword2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	??_R1BI@?0A@EA@ICryptoGetTextPassword@@8	; ICryptoGetTextPassword::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AUICryptoGetTextPassword@@@8		; ICryptoGetTextPassword `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoGetTextPassword@@8			; ICryptoGetTextPassword::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoGetTextPassword@@8			; ICryptoGetTextPassword::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoGetTextPassword@@8		; ICryptoGetTextPassword::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BI@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (24,-1,0,66)'
PUBLIC	??_R1BM@?0A@EA@ICompressProgressInfo@@8		; ICompressProgressInfo::`RTTI Base Class Descriptor at (28,-1,0,64)'
PUBLIC	??_R0?AUICompressProgressInfo@@@8		; ICompressProgressInfo `RTTI Type Descriptor'
PUBLIC	??_R3ICompressProgressInfo@@8			; ICompressProgressInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressProgressInfo@@8			; ICompressProgressInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressProgressInfo@@8		; ICompressProgressInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BM@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (28,-1,0,66)'
PUBLIC	??_R1CA@?0A@EA@IInFileStream_Callback@@8	; IInFileStream_Callback::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R0?AUIInFileStream_Callback@@@8		; IInFileStream_Callback `RTTI Type Descriptor'
PUBLIC	??_R3IInFileStream_Callback@@8			; IInFileStream_Callback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInFileStream_Callback@@8			; IInFileStream_Callback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IInFileStream_Callback@@8		; IInFileStream_Callback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CE@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (36,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
PUBLIC	?AddRef@CArchiveUpdateCallback@@UAGKXZ		; CArchiveUpdateCallback::AddRef
PUBLIC	?Release@CArchiveUpdateCallback@@UAGKXZ		; CArchiveUpdateCallback::Release
PUBLIC	?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z	; CArchiveUpdateCallback::SetTotal
PUBLIC	?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z ; CArchiveUpdateCallback::SetCompleted
PUBLIC	?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z ; CArchiveUpdateCallback::GetUpdateItemInfo
PUBLIC	?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z ; CArchiveUpdateCallback::GetProperty
PUBLIC	?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z ; CArchiveUpdateCallback::GetStream
PUBLIC	?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z ; CArchiveUpdateCallback::SetOperationResult
PUBLIC	?GetVolumeSize@CArchiveUpdateCallback@@UAGJIPA_K@Z ; CArchiveUpdateCallback::GetVolumeSize
PUBLIC	?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z ; CArchiveUpdateCallback::GetVolumeStream
PUBLIC	??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@W3AGKXZ		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{4}'
PUBLIC	?Release@CArchiveUpdateCallback@@W3AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{4}'
PUBLIC	?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z ; CArchiveUpdateCallback::GetStream2
PUBLIC	?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z ; CArchiveUpdateCallback::ReportOperation
PUBLIC	??_R4CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@W7AGKXZ		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{8}'
PUBLIC	?Release@CArchiveUpdateCallback@@W7AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{8}'
PUBLIC	?SetTotal@CArchiveUpdateCallback@@W7AGJ_K@Z	; [thunk]:CArchiveUpdateCallback::SetTotal`adjustor{8}'
PUBLIC	?SetCompleted@CArchiveUpdateCallback@@W7AGJPB_K@Z ; [thunk]:CArchiveUpdateCallback::SetCompleted`adjustor{8}'
PUBLIC	?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z ; CArchiveUpdateCallback::ReportExtractResult
PUBLIC	??_R4CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@WM@AGKXZ	; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{12}'
PUBLIC	?Release@CArchiveUpdateCallback@@WM@AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{12}'
PUBLIC	?GetParent@CArchiveUpdateCallback@@UAGJIPAI0@Z	; CArchiveUpdateCallback::GetParent
PUBLIC	?GetRawProp@CArchiveUpdateCallback@@UAGJIKPAPBXPAI1@Z ; CArchiveUpdateCallback::GetRawProp
PUBLIC	?GetNumRawProps@CArchiveUpdateCallback@@UAGJPAI@Z ; CArchiveUpdateCallback::GetNumRawProps
PUBLIC	?GetRawPropInfo@CArchiveUpdateCallback@@UAGJIPAPA_WPAK@Z ; CArchiveUpdateCallback::GetRawPropInfo
PUBLIC	??_R4CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@WBA@AGKXZ	; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{16}'
PUBLIC	?Release@CArchiveUpdateCallback@@WBA@AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{16}'
PUBLIC	?GetRootProp@CArchiveUpdateCallback@@UAGJKPAUtagPROPVARIANT@@@Z ; CArchiveUpdateCallback::GetRootProp
PUBLIC	?GetRootRawProp@CArchiveUpdateCallback@@UAGJKPAPBXPAI1@Z ; CArchiveUpdateCallback::GetRootRawProp
PUBLIC	??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@WBE@AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{20}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@WBE@AGKXZ	; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{20}'
PUBLIC	?Release@CArchiveUpdateCallback@@WBE@AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{20}'
PUBLIC	?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z ; CArchiveUpdateCallback::CryptoGetTextPassword2
PUBLIC	??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@WBI@AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{24}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@WBI@AGKXZ	; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{24}'
PUBLIC	?Release@CArchiveUpdateCallback@@WBI@AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{24}'
PUBLIC	?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z ; CArchiveUpdateCallback::CryptoGetTextPassword
PUBLIC	??_R4CArchiveUpdateCallback@@6BICompressProgressInfo@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CArchiveUpdateCallback@@WBM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{28}'
PUBLIC	?AddRef@CArchiveUpdateCallback@@WBM@AGKXZ	; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{28}'
PUBLIC	?Release@CArchiveUpdateCallback@@WBM@AGKXZ	; [thunk]:CArchiveUpdateCallback::Release`adjustor{28}'
PUBLIC	?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z ; CArchiveUpdateCallback::SetRatioInfo
PUBLIC	??_R4CArchiveUpdateCallback@@6BIInFileStream_Callback@@@ ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
PUBLIC	?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z ; CArchiveUpdateCallback::InFileStream_On_Error
PUBLIC	?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z ; CArchiveUpdateCallback::InFileStream_On_Destroy
EXTRN	?InitLocalPrivileges@@YG_NXZ:PROC		; InitLocalPrivileges
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4CArchiveUpdateCallback@@6BIInFileStream_Callback@@@
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BIInFileStream_Callback@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	020H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BICompressProgressInfo@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BICompressProgressInfo@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	01cH
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CE@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1CE@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (36,-1,0,64)'
	DD	00H
	DD	024H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IInFileStream_Callback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInFileStream_Callback@@8 DD FLAT:??_R0?AUIInFileStream_Callback@@@8 ; IInFileStream_Callback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInFileStream_Callback@@8
rdata$r	ENDS
;	COMDAT ??_R2IInFileStream_Callback@@8
rdata$r	SEGMENT
??_R2IInFileStream_Callback@@8 DD FLAT:??_R1A@?0A@EA@IInFileStream_Callback@@8 ; IInFileStream_Callback::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IInFileStream_Callback@@8
rdata$r	SEGMENT
??_R3IInFileStream_Callback@@8 DD 00H			; IInFileStream_Callback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IInFileStream_Callback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInFileStream_Callback@@@8
_DATA	SEGMENT
??_R0?AUIInFileStream_Callback@@@8 DD FLAT:??_7type_info@@6B@ ; IInFileStream_Callback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInFileStream_Callback@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CA@?0A@EA@IInFileStream_Callback@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@IInFileStream_Callback@@8 DD FLAT:??_R0?AUIInFileStream_Callback@@@8 ; IInFileStream_Callback::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	00H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInFileStream_Callback@@8
rdata$r	ENDS
;	COMDAT ??_R1BM@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BM@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (28,-1,0,66)'
	DD	00H
	DD	01cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressProgressInfo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressProgressInfo@@8 DD FLAT:??_R0?AUICompressProgressInfo@@@8 ; ICompressProgressInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressProgressInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressProgressInfo@@8
rdata$r	SEGMENT
??_R2ICompressProgressInfo@@8 DD FLAT:??_R1A@?0A@EA@ICompressProgressInfo@@8 ; ICompressProgressInfo::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressProgressInfo@@8
rdata$r	SEGMENT
??_R3ICompressProgressInfo@@8 DD 00H			; ICompressProgressInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressProgressInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressProgressInfo@@@8
_DATA	SEGMENT
??_R0?AUICompressProgressInfo@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressProgressInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressProgressInfo@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BM@?0A@EA@ICompressProgressInfo@@8
rdata$r	SEGMENT
??_R1BM@?0A@EA@ICompressProgressInfo@@8 DD FLAT:??_R0?AUICompressProgressInfo@@@8 ; ICompressProgressInfo::`RTTI Base Class Descriptor at (28,-1,0,64)'
	DD	01H
	DD	01cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressProgressInfo@@8
rdata$r	ENDS
;	COMDAT ??_R1BI@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BI@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (24,-1,0,66)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoGetTextPassword@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoGetTextPassword@@8 DD FLAT:??_R0?AUICryptoGetTextPassword@@@8 ; ICryptoGetTextPassword::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoGetTextPassword@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoGetTextPassword@@8
rdata$r	SEGMENT
??_R2ICryptoGetTextPassword@@8 DD FLAT:??_R1A@?0A@EA@ICryptoGetTextPassword@@8 ; ICryptoGetTextPassword::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoGetTextPassword@@8
rdata$r	SEGMENT
??_R3ICryptoGetTextPassword@@8 DD 00H			; ICryptoGetTextPassword::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoGetTextPassword@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoGetTextPassword@@@8
_DATA	SEGMENT
??_R0?AUICryptoGetTextPassword@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoGetTextPassword `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoGetTextPassword@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BI@?0A@EA@ICryptoGetTextPassword@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@ICryptoGetTextPassword@@8 DD FLAT:??_R0?AUICryptoGetTextPassword@@@8 ; ICryptoGetTextPassword::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	01H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoGetTextPassword@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoGetTextPassword2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoGetTextPassword2@@8 DD FLAT:??_R0?AUICryptoGetTextPassword2@@@8 ; ICryptoGetTextPassword2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoGetTextPassword2@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoGetTextPassword2@@8
rdata$r	SEGMENT
??_R2ICryptoGetTextPassword2@@8 DD FLAT:??_R1A@?0A@EA@ICryptoGetTextPassword2@@8 ; ICryptoGetTextPassword2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoGetTextPassword2@@8
rdata$r	SEGMENT
??_R3ICryptoGetTextPassword2@@8 DD 00H			; ICryptoGetTextPassword2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoGetTextPassword2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoGetTextPassword2@@@8
_DATA	SEGMENT
??_R0?AUICryptoGetTextPassword2@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoGetTextPassword2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoGetTextPassword2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BE@?0A@EA@ICryptoGetTextPassword2@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@ICryptoGetTextPassword2@@8 DD FLAT:??_R0?AUICryptoGetTextPassword2@@@8 ; ICryptoGetTextPassword2::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoGetTextPassword2@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveGetRootProps@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveGetRootProps@@8 DD FLAT:??_R0?AUIArchiveGetRootProps@@@8 ; IArchiveGetRootProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveGetRootProps@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveGetRootProps@@8
rdata$r	SEGMENT
??_R2IArchiveGetRootProps@@8 DD FLAT:??_R1A@?0A@EA@IArchiveGetRootProps@@8 ; IArchiveGetRootProps::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveGetRootProps@@8
rdata$r	SEGMENT
??_R3IArchiveGetRootProps@@8 DD 00H			; IArchiveGetRootProps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IArchiveGetRootProps@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveGetRootProps@@@8
_DATA	SEGMENT
??_R0?AUIArchiveGetRootProps@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveGetRootProps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveGetRootProps@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@IArchiveGetRootProps@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IArchiveGetRootProps@@8 DD FLAT:??_R0?AUIArchiveGetRootProps@@@8 ; IArchiveGetRootProps::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveGetRootProps@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveGetRawProps@@8 DD FLAT:??_R0?AUIArchiveGetRawProps@@@8 ; IArchiveGetRawProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R2IArchiveGetRawProps@@8 DD FLAT:??_R1A@?0A@EA@IArchiveGetRawProps@@8 ; IArchiveGetRawProps::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R3IArchiveGetRawProps@@8 DD 00H			; IArchiveGetRawProps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveGetRawProps@@@8
_DATA	SEGMENT
??_R0?AUIArchiveGetRawProps@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveGetRawProps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveGetRawProps@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@IArchiveGetRawProps@@8 DD FLAT:??_R0?AUIArchiveGetRawProps@@@8 ; IArchiveGetRawProps::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IProgress@@8
rdata$r	SEGMENT
??_R17?0A@EC@IProgress@@8 DD FLAT:??_R0?AUIProgress@@@8	; IProgress::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IProgress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveExtractCallbackMessage@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveExtractCallbackMessage@@8 DD FLAT:??_R0?AUIArchiveExtractCallbackMessage@@@8 ; IArchiveExtractCallbackMessage::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveExtractCallbackMessage@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveExtractCallbackMessage@@8
rdata$r	SEGMENT
??_R2IArchiveExtractCallbackMessage@@8 DD FLAT:??_R1A@?0A@EA@IArchiveExtractCallbackMessage@@8 ; IArchiveExtractCallbackMessage::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IProgress@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveExtractCallbackMessage@@8
rdata$r	SEGMENT
??_R3IArchiveExtractCallbackMessage@@8 DD 00H		; IArchiveExtractCallbackMessage::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IArchiveExtractCallbackMessage@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveExtractCallbackMessage@@@8
_DATA	SEGMENT
??_R0?AUIArchiveExtractCallbackMessage@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveExtractCallbackMessage `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveExtractCallbackMessage@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@IArchiveExtractCallbackMessage@@8
rdata$r	SEGMENT
??_R17?0A@EA@IArchiveExtractCallbackMessage@@8 DD FLAT:??_R0?AUIArchiveExtractCallbackMessage@@@8 ; IArchiveExtractCallbackMessage::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	02H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveExtractCallbackMessage@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveUpdateCallbackFile@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveUpdateCallbackFile@@8 DD FLAT:??_R0?AUIArchiveUpdateCallbackFile@@@8 ; IArchiveUpdateCallbackFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveUpdateCallbackFile@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveUpdateCallbackFile@@8
rdata$r	SEGMENT
??_R2IArchiveUpdateCallbackFile@@8 DD FLAT:??_R1A@?0A@EA@IArchiveUpdateCallbackFile@@8 ; IArchiveUpdateCallbackFile::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveUpdateCallbackFile@@8
rdata$r	SEGMENT
??_R3IArchiveUpdateCallbackFile@@8 DD 00H		; IArchiveUpdateCallbackFile::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IArchiveUpdateCallbackFile@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveUpdateCallbackFile@@@8
_DATA	SEGMENT
??_R0?AUIArchiveUpdateCallbackFile@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveUpdateCallbackFile `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveUpdateCallbackFile@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@IArchiveUpdateCallbackFile@@8
rdata$r	SEGMENT
??_R13?0A@EA@IArchiveUpdateCallbackFile@@8 DD FLAT:??_R0?AUIArchiveUpdateCallbackFile@@@8 ; IArchiveUpdateCallbackFile::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveUpdateCallbackFile@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IProgress@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IProgress@@8 DD FLAT:??_R0?AUIProgress@@@8 ; IProgress::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IProgress@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IProgress@@8
rdata$r	SEGMENT
??_R2IProgress@@8 DD FLAT:??_R1A@?0A@EA@IProgress@@8	; IProgress::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IProgress@@8
rdata$r	SEGMENT
??_R3IProgress@@8 DD 00H				; IProgress::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IProgress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIProgress@@@8
_DATA	SEGMENT
??_R0?AUIProgress@@@8 DD FLAT:??_7type_info@@6B@	; IProgress `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIProgress@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IProgress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IProgress@@8 DD FLAT:??_R0?AUIProgress@@@8 ; IProgress::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IProgress@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveUpdateCallback@@8
rdata$r	SEGMENT
??_R2IArchiveUpdateCallback@@8 DD FLAT:??_R1A@?0A@EA@IArchiveUpdateCallback@@8 ; IArchiveUpdateCallback::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IProgress@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveUpdateCallback@@8
rdata$r	SEGMENT
??_R3IArchiveUpdateCallback@@8 DD 00H			; IArchiveUpdateCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveUpdateCallback@@@8
_DATA	SEGMENT
??_R0?AUIArchiveUpdateCallback@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveUpdateCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveUpdateCallback@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveUpdateCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveUpdateCallback@@8 DD FLAT:??_R0?AUIArchiveUpdateCallback@@@8 ; IArchiveUpdateCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveUpdateCallback2@@8
rdata$r	SEGMENT
??_R2IArchiveUpdateCallback2@@8 DD FLAT:??_R1A@?0A@EA@IArchiveUpdateCallback2@@8 ; IArchiveUpdateCallback2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IArchiveUpdateCallback@@8
	DD	FLAT:??_R1A@?0A@EA@IProgress@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveUpdateCallback2@@8
rdata$r	SEGMENT
??_R3IArchiveUpdateCallback2@@8 DD 00H			; IArchiveUpdateCallback2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2IArchiveUpdateCallback2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveUpdateCallback2@@@8
_DATA	SEGMENT
??_R0?AUIArchiveUpdateCallback2@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveUpdateCallback2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveUpdateCallback2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveUpdateCallback2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveUpdateCallback2@@8 DD FLAT:??_R0?AUIArchiveUpdateCallback2@@@8 ; IArchiveUpdateCallback2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveUpdateCallback2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CArchiveUpdateCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CArchiveUpdateCallback@@8 DD FLAT:??_R0?AVCArchiveUpdateCallback@@@8 ; CArchiveUpdateCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	015H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2CArchiveUpdateCallback@@8
rdata$r	SEGMENT
??_R2CArchiveUpdateCallback@@8 DD FLAT:??_R1A@?0A@EA@CArchiveUpdateCallback@@8 ; CArchiveUpdateCallback::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IArchiveUpdateCallback2@@8
	DD	FLAT:??_R1A@?0A@EA@IArchiveUpdateCallback@@8
	DD	FLAT:??_R1A@?0A@EC@IProgress@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IArchiveUpdateCallbackFile@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@IArchiveExtractCallbackMessage@@8
	DD	FLAT:??_R17?0A@EC@IProgress@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@IArchiveGetRawProps@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@IArchiveGetRootProps@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@ICryptoGetTextPassword2@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BI@?0A@EA@ICryptoGetTextPassword@@8
	DD	FLAT:??_R1BI@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BM@?0A@EA@ICompressProgressInfo@@8
	DD	FLAT:??_R1BM@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1CA@?0A@EA@IInFileStream_Callback@@8
	DD	FLAT:??_R1CE@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CArchiveUpdateCallback@@8
rdata$r	SEGMENT
??_R3CArchiveUpdateCallback@@8 DD 00H			; CArchiveUpdateCallback::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	016H
	DD	FLAT:??_R2CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCArchiveUpdateCallback@@@8
_DATA	SEGMENT
??_R0?AVCArchiveUpdateCallback@@@8 DD FLAT:??_7type_info@@6B@ ; CArchiveUpdateCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCArchiveUpdateCallback@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@
rdata$r	SEGMENT
??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@ DD 00H ; CArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCArchiveUpdateCallback@@@8
	DD	FLAT:??_R3CArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BIInFileStream_Callback@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BIInFileStream_Callback@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BIInFileStream_Callback@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z
	DD	FLAT:?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BICompressProgressInfo@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BICompressProgressInfo@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BICompressProgressInfo@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@WBM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@WBM@AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@WBM@AGKXZ
	DD	FLAT:?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@WBI@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@WBI@AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@WBI@AGKXZ
	DD	FLAT:?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@WBE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@WBE@AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@WBE@AGKXZ
	DD	FLAT:?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@WBA@AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@WBA@AGKXZ
	DD	FLAT:?GetRootProp@CArchiveUpdateCallback@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?GetRootRawProp@CArchiveUpdateCallback@@UAGJKPAPBXPAI1@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@WM@AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@WM@AGKXZ
	DD	FLAT:?GetParent@CArchiveUpdateCallback@@UAGJIPAI0@Z
	DD	FLAT:?GetRawProp@CArchiveUpdateCallback@@UAGJIKPAPBXPAI1@Z
	DD	FLAT:?GetNumRawProps@CArchiveUpdateCallback@@UAGJPAI@Z
	DD	FLAT:?GetRawPropInfo@CArchiveUpdateCallback@@UAGJIPAPA_WPAK@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@W7AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@W7AGKXZ
	DD	FLAT:?SetTotal@CArchiveUpdateCallback@@W7AGJ_K@Z
	DD	FLAT:?SetCompleted@CArchiveUpdateCallback@@W7AGJPB_K@Z
	DD	FLAT:?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@W3AGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@W3AGKXZ
	DD	FLAT:?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z
	DD	FLAT:?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z
CONST	ENDS
;	COMDAT ??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@
CONST	SEGMENT
??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@ DD FLAT:??_R4CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@ ; CArchiveUpdateCallback::`vftable'
	DD	FLAT:?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CArchiveUpdateCallback@@UAGKXZ
	DD	FLAT:?Release@CArchiveUpdateCallback@@UAGKXZ
	DD	FLAT:?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z
	DD	FLAT:?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z
	DD	FLAT:?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z
	DD	FLAT:?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z
	DD	FLAT:?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z
	DD	FLAT:?GetVolumeSize@CArchiveUpdateCallback@@UAGJIPA_K@Z
	DD	FLAT:?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$??0CArchiveUpdateCallback@@QAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0CArchiveUpdateCallback@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CArchiveUpdateCallback@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$6
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CArchiveUpdateCallback@@QAE@XZ PROC			; CArchiveUpdateCallback::CArchiveUpdateCallback
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CArchiveUpdateCallback@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IArchiveUpdateCallback2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0IArchiveUpdateCallbackFile@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0IArchiveExtractCallbackMessage@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0IArchiveGetRawProps@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0IArchiveGetRootProps@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0ICryptoGetTextPassword2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0ICryptoGetTextPassword@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0ICompressProgressInfo@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0IInFileStream_Callback@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallback2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CArchiveUpdateCallback@@6BIArchiveUpdateCallbackFile@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CArchiveUpdateCallback@@6BIArchiveExtractCallbackMessage@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CArchiveUpdateCallback@@6BIArchiveGetRawProps@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CArchiveUpdateCallback@@6BIArchiveGetRootProps@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword2@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], OFFSET ??_7CArchiveUpdateCallback@@6BICryptoGetTextPassword@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], OFFSET ??_7CArchiveUpdateCallback@@6BICompressProgressInfo@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], OFFSET ??_7CArchiveUpdateCallback@@6BIInFileStream_Callback@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ ; CRecordVector<CKeyKeyValPair>::CRecordVector<CKeyKeyValPair>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::CRecordVector<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??0?$CMyComPtr@UIInArchive@@@@QAE@XZ	; CMyComPtr<IInArchive>::CMyComPtr<IInArchive>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+144], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+152], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+156], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+157], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+158], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+159], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+160], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+161], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+164], 0
; Line 67
	call	?InitLocalPrivileges@@YG_NXZ		; InitLocalPrivileges
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+40], al
; Line 69
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ ; CRecordVector<CKeyKeyValPair>::~CRecordVector<CKeyKeyValPair>
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CArchiveUpdateCallback@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	jmp	??1?$CMyComPtr@UIInArchive@@@@QAE@XZ	; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
__ehhandler$??0CArchiveUpdateCallback@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CArchiveUpdateCallback@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CArchiveUpdateCallback@@QAE@XZ ENDP			; CArchiveUpdateCallback::CArchiveUpdateCallback
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T77587 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T77587[ebp], ecx
	mov	edx, DWORD PTR $T77587[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	??_7ICryptoGetTextPassword@@6B@			; ICryptoGetTextPassword::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICryptoGetTextPassword@@6B@		; ICryptoGetTextPassword::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICryptoGetTextPassword@@6B@
rdata$r	SEGMENT
??_R4ICryptoGetTextPassword@@6B@ DD 00H			; ICryptoGetTextPassword::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoGetTextPassword@@@8
	DD	FLAT:??_R3ICryptoGetTextPassword@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoGetTextPassword@@6B@
CONST	SEGMENT
??_7ICryptoGetTextPassword@@6B@ DD FLAT:??_R4ICryptoGetTextPassword@@6B@ ; ICryptoGetTextPassword::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoGetTextPassword@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoGetTextPassword@@QAE@XZ PROC			; ICryptoGetTextPassword::ICryptoGetTextPassword, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoGetTextPassword@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoGetTextPassword@@QAE@XZ ENDP			; ICryptoGetTextPassword::ICryptoGetTextPassword
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ICompressProgressInfo:BYTE
EXTRN	_IID_ICryptoGetTextPassword:BYTE
EXTRN	_IID_ICryptoGetTextPassword2:BYTE
EXTRN	_IID_IArchiveGetRootProps:BYTE
EXTRN	_IID_IArchiveGetRawProps:BYTE
EXTRN	_IID_IArchiveExtractCallbackMessage:BYTE
EXTRN	_IID_IArchiveUpdateCallbackFile:BYTE
EXTRN	_IID_IArchiveUpdateCallback2:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv184 = -28						; size = 4
tv174 = -24						; size = 4
tv164 = -20						; size = 4
tv154 = -16						; size = 4
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z PROC ; CArchiveUpdateCallback::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN18@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN17@QueryInter
$LN18@QueryInter:
	push	OFFSET _IID_IArchiveUpdateCallback2
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN16@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN17@QueryInter
$LN16@QueryInter:
; Line 80
	push	OFFSET _IID_IArchiveUpdateCallbackFile
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN14@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN21@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN22@QueryInter
$LN21@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN22@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN17@QueryInter
$LN14@QueryInter:
; Line 81
	push	OFFSET _IID_IArchiveExtractCallbackMessage
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN12@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN23@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN24@QueryInter
$LN23@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN24@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN17@QueryInter
$LN12@QueryInter:
; Line 82
	push	OFFSET _IID_IArchiveGetRawProps
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN25@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN26@QueryInter
$LN25@QueryInter:
	mov	DWORD PTR tv144[ebp], 0
$LN26@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN17@QueryInter
$LN10@QueryInter:
; Line 83
	push	OFFSET _IID_IArchiveGetRootProps
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN27@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv154[ebp], edx
	jmp	SHORT $LN28@QueryInter
$LN27@QueryInter:
	mov	DWORD PTR tv154[ebp], 0
$LN28@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN17@QueryInter
$LN8@QueryInter:
; Line 84
	push	OFFSET _IID_ICryptoGetTextPassword2
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN29@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN30@QueryInter
$LN29@QueryInter:
	mov	DWORD PTR tv164[ebp], 0
$LN30@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN17@QueryInter
$LN6@QueryInter:
; Line 85
	push	OFFSET _IID_ICryptoGetTextPassword
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN31@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR tv174[ebp], ecx
	jmp	SHORT $LN32@QueryInter
$LN31@QueryInter:
	mov	DWORD PTR tv174[ebp], 0
$LN32@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv174[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN17@QueryInter
$LN4@QueryInter:
; Line 86
	push	OFFSET _IID_ICompressProgressInfo
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN33@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR tv184[ebp], edx
	jmp	SHORT $LN34@QueryInter
$LN33@QueryInter:
	mov	DWORD PTR tv184[ebp], 0
$LN34@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN17@QueryInter
$LN2@QueryInter:
; Line 87
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN19@QueryInter
$LN17@QueryInter:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], eax
	xor	eax, eax
$LN19@QueryInter:
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ENDP ; CArchiveUpdateCallback::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CArchiveUpdateCallback@@UAGKXZ PROC		; CArchiveUpdateCallback::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.h
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+36], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CArchiveUpdateCallback@@UAGKXZ ENDP		; CArchiveUpdateCallback::AddRef
_TEXT	ENDS
PUBLIC	??_GCArchiveUpdateCallback@@QAEPAXI@Z		; CArchiveUpdateCallback::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CArchiveUpdateCallback@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T77619 = -8						; size = 4
$T77618 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CArchiveUpdateCallback@@UAGKXZ PROC		; CArchiveUpdateCallback::Release, COMDAT
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+36], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T77619[ebp], edx
	mov	eax, DWORD PTR $T77619[ebp]
	mov	DWORD PTR $T77618[ebp], eax
	cmp	DWORD PTR $T77618[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T77618[ebp]
	call	??_GCArchiveUpdateCallback@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CArchiveUpdateCallback@@UAGKXZ ENDP		; CArchiveUpdateCallback::Release
_TEXT	ENDS
PUBLIC	??1CArchiveUpdateCallback@@QAE@XZ		; CArchiveUpdateCallback::~CArchiveUpdateCallback
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCArchiveUpdateCallback@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCArchiveUpdateCallback@@QAEPAXI@Z PROC		; CArchiveUpdateCallback::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CArchiveUpdateCallback@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCArchiveUpdateCallback@@QAEPAXI@Z ENDP		; CArchiveUpdateCallback::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CArchiveUpdateCallback@@QAE@XZ DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??1CArchiveUpdateCallback@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CArchiveUpdateCallback@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CArchiveUpdateCallback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CArchiveUpdateCallback@@QAE@XZ PROC			; CArchiveUpdateCallback::~CArchiveUpdateCallback, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CArchiveUpdateCallback@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1?$CMyComPtr@UIInArchive@@@@QAE@XZ	; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ ; CRecordVector<CKeyKeyValPair>::~CRecordVector<CKeyKeyValPair>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ ; CRecordVector<CKeyKeyValPair>::~CRecordVector<CKeyKeyValPair>
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CArchiveUpdateCallback@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CArchiveUpdateCallback@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CArchiveUpdateCallback@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CArchiveUpdateCallback@@QAE@XZ ENDP			; CArchiveUpdateCallback::~CArchiveUpdateCallback
PUBLIC	??_7IArchiveUpdateCallback2@@6B@		; IArchiveUpdateCallback2::`vftable'
PUBLIC	??0IArchiveUpdateCallback@@QAE@XZ		; IArchiveUpdateCallback::IArchiveUpdateCallback
PUBLIC	??_R4IArchiveUpdateCallback2@@6B@		; IArchiveUpdateCallback2::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveUpdateCallback2@@6B@
rdata$r	SEGMENT
??_R4IArchiveUpdateCallback2@@6B@ DD 00H		; IArchiveUpdateCallback2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveUpdateCallback2@@@8
	DD	FLAT:??_R3IArchiveUpdateCallback2@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveUpdateCallback2@@6B@
CONST	SEGMENT
??_7IArchiveUpdateCallback2@@6B@ DD FLAT:??_R4IArchiveUpdateCallback2@@6B@ ; IArchiveUpdateCallback2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveUpdateCallback2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveUpdateCallback2@@QAE@XZ PROC			; IArchiveUpdateCallback2::IArchiveUpdateCallback2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IArchiveUpdateCallback@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveUpdateCallback2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveUpdateCallback2@@QAE@XZ ENDP			; IArchiveUpdateCallback2::IArchiveUpdateCallback2
_TEXT	ENDS
PUBLIC	??_7IArchiveUpdateCallbackFile@@6B@		; IArchiveUpdateCallbackFile::`vftable'
PUBLIC	??_R4IArchiveUpdateCallbackFile@@6B@		; IArchiveUpdateCallbackFile::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveUpdateCallbackFile@@6B@
rdata$r	SEGMENT
??_R4IArchiveUpdateCallbackFile@@6B@ DD 00H		; IArchiveUpdateCallbackFile::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveUpdateCallbackFile@@@8
	DD	FLAT:??_R3IArchiveUpdateCallbackFile@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveUpdateCallbackFile@@6B@
CONST	SEGMENT
??_7IArchiveUpdateCallbackFile@@6B@ DD FLAT:??_R4IArchiveUpdateCallbackFile@@6B@ ; IArchiveUpdateCallbackFile::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveUpdateCallbackFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveUpdateCallbackFile@@QAE@XZ PROC		; IArchiveUpdateCallbackFile::IArchiveUpdateCallbackFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveUpdateCallbackFile@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveUpdateCallbackFile@@QAE@XZ ENDP		; IArchiveUpdateCallbackFile::IArchiveUpdateCallbackFile
_TEXT	ENDS
PUBLIC	??_7IArchiveExtractCallbackMessage@@6B@		; IArchiveExtractCallbackMessage::`vftable'
PUBLIC	??0IProgress@@QAE@XZ				; IProgress::IProgress
PUBLIC	??_R4IArchiveExtractCallbackMessage@@6B@	; IArchiveExtractCallbackMessage::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveExtractCallbackMessage@@6B@
rdata$r	SEGMENT
??_R4IArchiveExtractCallbackMessage@@6B@ DD 00H		; IArchiveExtractCallbackMessage::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveExtractCallbackMessage@@@8
	DD	FLAT:??_R3IArchiveExtractCallbackMessage@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveExtractCallbackMessage@@6B@
CONST	SEGMENT
??_7IArchiveExtractCallbackMessage@@6B@ DD FLAT:??_R4IArchiveExtractCallbackMessage@@6B@ ; IArchiveExtractCallbackMessage::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveExtractCallbackMessage@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveExtractCallbackMessage@@QAE@XZ PROC		; IArchiveExtractCallbackMessage::IArchiveExtractCallbackMessage, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IProgress@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveExtractCallbackMessage@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveExtractCallbackMessage@@QAE@XZ ENDP		; IArchiveExtractCallbackMessage::IArchiveExtractCallbackMessage
_TEXT	ENDS
PUBLIC	??_7IArchiveGetRawProps@@6B@			; IArchiveGetRawProps::`vftable'
PUBLIC	??_R4IArchiveGetRawProps@@6B@			; IArchiveGetRawProps::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveGetRawProps@@6B@
rdata$r	SEGMENT
??_R4IArchiveGetRawProps@@6B@ DD 00H			; IArchiveGetRawProps::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveGetRawProps@@@8
	DD	FLAT:??_R3IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveGetRawProps@@6B@
CONST	SEGMENT
??_7IArchiveGetRawProps@@6B@ DD FLAT:??_R4IArchiveGetRawProps@@6B@ ; IArchiveGetRawProps::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveGetRawProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveGetRawProps@@QAE@XZ PROC			; IArchiveGetRawProps::IArchiveGetRawProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveGetRawProps@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveGetRawProps@@QAE@XZ ENDP			; IArchiveGetRawProps::IArchiveGetRawProps
_TEXT	ENDS
PUBLIC	??_7IArchiveGetRootProps@@6B@			; IArchiveGetRootProps::`vftable'
PUBLIC	??_R4IArchiveGetRootProps@@6B@			; IArchiveGetRootProps::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveGetRootProps@@6B@
rdata$r	SEGMENT
??_R4IArchiveGetRootProps@@6B@ DD 00H			; IArchiveGetRootProps::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveGetRootProps@@@8
	DD	FLAT:??_R3IArchiveGetRootProps@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveGetRootProps@@6B@
CONST	SEGMENT
??_7IArchiveGetRootProps@@6B@ DD FLAT:??_R4IArchiveGetRootProps@@6B@ ; IArchiveGetRootProps::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveGetRootProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveGetRootProps@@QAE@XZ PROC			; IArchiveGetRootProps::IArchiveGetRootProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveGetRootProps@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveGetRootProps@@QAE@XZ ENDP			; IArchiveGetRootProps::IArchiveGetRootProps
_TEXT	ENDS
PUBLIC	??_7ICryptoGetTextPassword2@@6B@		; ICryptoGetTextPassword2::`vftable'
PUBLIC	??_R4ICryptoGetTextPassword2@@6B@		; ICryptoGetTextPassword2::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICryptoGetTextPassword2@@6B@
rdata$r	SEGMENT
??_R4ICryptoGetTextPassword2@@6B@ DD 00H		; ICryptoGetTextPassword2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoGetTextPassword2@@@8
	DD	FLAT:??_R3ICryptoGetTextPassword2@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoGetTextPassword2@@6B@
CONST	SEGMENT
??_7ICryptoGetTextPassword2@@6B@ DD FLAT:??_R4ICryptoGetTextPassword2@@6B@ ; ICryptoGetTextPassword2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoGetTextPassword2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoGetTextPassword2@@QAE@XZ PROC			; ICryptoGetTextPassword2::ICryptoGetTextPassword2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoGetTextPassword2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoGetTextPassword2@@QAE@XZ ENDP			; ICryptoGetTextPassword2::ICryptoGetTextPassword2
_TEXT	ENDS
PUBLIC	??_7ICompressProgressInfo@@6B@			; ICompressProgressInfo::`vftable'
PUBLIC	??_R4ICompressProgressInfo@@6B@			; ICompressProgressInfo::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressProgressInfo@@6B@
rdata$r	SEGMENT
??_R4ICompressProgressInfo@@6B@ DD 00H			; ICompressProgressInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressProgressInfo@@@8
	DD	FLAT:??_R3ICompressProgressInfo@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressProgressInfo@@6B@
CONST	SEGMENT
??_7ICompressProgressInfo@@6B@ DD FLAT:??_R4ICompressProgressInfo@@6B@ ; ICompressProgressInfo::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressProgressInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressProgressInfo@@QAE@XZ PROC			; ICompressProgressInfo::ICompressProgressInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressProgressInfo@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressProgressInfo@@QAE@XZ ENDP			; ICompressProgressInfo::ICompressProgressInfo
_TEXT	ENDS
PUBLIC	??_7IInFileStream_Callback@@6B@			; IInFileStream_Callback::`vftable'
PUBLIC	??_R4IInFileStream_Callback@@6B@		; IInFileStream_Callback::`RTTI Complete Object Locator'
;	COMDAT ??_R4IInFileStream_Callback@@6B@
rdata$r	SEGMENT
??_R4IInFileStream_Callback@@6B@ DD 00H			; IInFileStream_Callback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIInFileStream_Callback@@@8
	DD	FLAT:??_R3IInFileStream_Callback@@8
rdata$r	ENDS
;	COMDAT ??_7IInFileStream_Callback@@6B@
CONST	SEGMENT
??_7IInFileStream_Callback@@6B@ DD FLAT:??_R4IInFileStream_Callback@@6B@ ; IInFileStream_Callback::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IInFileStream_Callback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IInFileStream_Callback@@QAE@XZ PROC			; IInFileStream_Callback::IInFileStream_Callback, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IInFileStream_Callback@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IInFileStream_Callback@@QAE@XZ ENDP			; IInFileStream_Callback::IInFileStream_Callback
_TEXT	ENDS
PUBLIC	??_7IArchiveUpdateCallback@@6B@			; IArchiveUpdateCallback::`vftable'
PUBLIC	??_R4IArchiveUpdateCallback@@6B@		; IArchiveUpdateCallback::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveUpdateCallback@@6B@
rdata$r	SEGMENT
??_R4IArchiveUpdateCallback@@6B@ DD 00H			; IArchiveUpdateCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveUpdateCallback@@@8
	DD	FLAT:??_R3IArchiveUpdateCallback@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveUpdateCallback@@6B@
CONST	SEGMENT
??_7IArchiveUpdateCallback@@6B@ DD FLAT:??_R4IArchiveUpdateCallback@@6B@ ; IArchiveUpdateCallback::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveUpdateCallback@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveUpdateCallback@@QAE@XZ PROC			; IArchiveUpdateCallback::IArchiveUpdateCallback, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IProgress@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveUpdateCallback@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveUpdateCallback@@QAE@XZ ENDP			; IArchiveUpdateCallback::IArchiveUpdateCallback
_TEXT	ENDS
PUBLIC	??_7IProgress@@6B@				; IProgress::`vftable'
PUBLIC	??_R4IProgress@@6B@				; IProgress::`RTTI Complete Object Locator'
;	COMDAT ??_R4IProgress@@6B@
rdata$r	SEGMENT
??_R4IProgress@@6B@ DD 00H				; IProgress::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIProgress@@@8
	DD	FLAT:??_R3IProgress@@8
rdata$r	ENDS
;	COMDAT ??_7IProgress@@6B@
CONST	SEGMENT
??_7IProgress@@6B@ DD FLAT:??_R4IProgress@@6B@		; IProgress::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IProgress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IProgress@@QAE@XZ PROC				; IProgress::IProgress, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IProgress@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IProgress@@QAE@XZ ENDP				; IProgress::IProgress
_TEXT	ENDS
xdata$x	SEGMENT
__catchsym$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$0
__unwindtable$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$2
__ehfuncinfo$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T77661 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_size$ = 12						; size = 8
?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z PROC		; CArchiveUpdateCallback::SetTotal
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 73
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 74
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 75
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+124]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	jmp	SHORT $LN2@SetTotal
__catch$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$0:
; Line 76
	mov	DWORD PTR $T77661[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@SetTotal
	ret	0
	mov	eax, __tryend$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$1
	ret	0
__tryend$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@SetTotal
$LN7@SetTotal:
	mov	eax, DWORD PTR $T77661[ebp]
$LN2@SetTotal:
; Line 77
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z ENDP		; CArchiveUpdateCallback::SetTotal
xdata$x	SEGMENT
__catchsym$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$0
__unwindtable$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$2
__ehfuncinfo$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T77674 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_completeValue$ = 12					; size = 4
?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z PROC	; CArchiveUpdateCallback::SetCompleted
; Line 80
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 81
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 82
	mov	esi, esp
	mov	eax, DWORD PTR _completeValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	jmp	SHORT $LN2@SetComplet
__catch$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$0:
; Line 83
	mov	DWORD PTR $T77674[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@SetComplet
	ret	0
	mov	eax, __tryend$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$1
	ret	0
__tryend$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@SetComplet
$LN7@SetComplet:
	mov	eax, DWORD PTR $T77674[ebp]
$LN2@SetComplet:
; Line 84
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z ENDP	; CArchiveUpdateCallback::SetCompleted
xdata$x	SEGMENT
__catchsym$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$0
__unwindtable$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$2
__ehfuncinfo$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv77 = -24						; size = 4
$T77687 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inSize$ = 12						; size = 4
_outSize$ = 16						; size = 4
?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z PROC	; CArchiveUpdateCallback::SetRatioInfo
; Line 87
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 88
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 89
	mov	esi, esp
	mov	eax, DWORD PTR _outSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+96]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+96]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv77[ebp]
	jmp	SHORT $LN2@SetRatioIn
__catch$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$0:
; Line 90
	mov	DWORD PTR $T77687[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@SetRatioIn
	ret	0
	mov	eax, __tryend$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$1
	ret	0
__tryend$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@SetRatioIn
$LN7@SetRatioIn:
	mov	eax, DWORD PTR $T77687[ebp]
$LN2@SetRatioIn:
; Line 91
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetRatioInfo@CArchiveUpdateCallback@@UAGJPB_K0@Z ENDP	; CArchiveUpdateCallback::SetRatioInfo
PUBLIC	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
PUBLIC	?ExistInArchive@CUpdatePair2@@QBE_NXZ		; CUpdatePair2::ExistInArchive
PUBLIC	?BoolToInt@@YGH_N@Z				; BoolToInt
PUBLIC	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
xdata$x	SEGMENT
__catchsym$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$0
__unwindtable$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$2
__ehfuncinfo$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv137 = -56						; size = 4
tv130 = -52						; size = 4
tv136 = -45						; size = 1
tv135 = -44						; size = 4
tv134 = -40						; size = 4
tv133 = -36						; size = 4
tv132 = -32						; size = 4
$T77702 = -28						; size = 4
_up$75783 = -24						; size = 4
___result__$75781 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_newData$ = 16						; size = 4
_newProps$ = 20						; size = 4
_indexInArchive$ = 24					; size = 4
?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z PROC ; CArchiveUpdateCallback::GetUpdateItemInfo
; Line 115
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 116
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR tv132[ebp]
	mov	DWORD PTR ___result__$75781[ebp], ecx
	cmp	DWORD PTR ___result__$75781[ebp], 0
	je	SHORT $LN5@GetUpdateI
	mov	eax, DWORD PTR ___result__$75781[ebp]
	jmp	$LN7@GetUpdateI
$LN5@GetUpdateI:
; Line 118
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	mov	DWORD PTR _up$75783[ebp], ecx
; Line 119
	cmp	DWORD PTR _newData$[ebp], 0
	je	SHORT $LN4@GetUpdateI
	mov	edx, DWORD PTR _up$75783[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	call	?BoolToInt@@YGH_N@Z			; BoolToInt
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR _newData$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
$LN4@GetUpdateI:
; Line 120
	cmp	DWORD PTR _newProps$[ebp], 0
	je	SHORT $LN3@GetUpdateI
	mov	eax, DWORD PTR _up$75783[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	call	?BoolToInt@@YGH_N@Z			; BoolToInt
	mov	DWORD PTR tv135[ebp], eax
	mov	edx, DWORD PTR _newProps$[ebp]
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR [edx], eax
$LN3@GetUpdateI:
; Line 121
	cmp	DWORD PTR _indexInArchive$[ebp], 0
	je	SHORT $LN2@GetUpdateI
; Line 123
	mov	ecx, DWORD PTR _indexInArchive$[ebp]
	mov	DWORD PTR [ecx], -1
; Line 124
	mov	ecx, DWORD PTR _up$75783[ebp]
	call	?ExistInArchive@CUpdatePair2@@QBE_NXZ	; CUpdatePair2::ExistInArchive
	mov	BYTE PTR tv136[ebp], al
	movzx	edx, BYTE PTR tv136[ebp]
	test	edx, edx
	je	SHORT $LN2@GetUpdateI
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+144], 0
	jne	SHORT $LN9@GetUpdateI
	mov	ecx, DWORD PTR _up$75783[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv130[ebp], edx
	jmp	SHORT $LN10@GetUpdateI
$LN9@GetUpdateI:
	mov	eax, DWORD PTR _up$75783[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR tv130[ebp], ecx
$LN10@GetUpdateI:
	mov	edx, DWORD PTR _indexInArchive$[ebp]
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR [edx], eax
$LN2@GetUpdateI:
; Line 127
	xor	eax, eax
	jmp	SHORT $LN7@GetUpdateI
__catch$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$0:
; Line 128
	mov	DWORD PTR $T77702[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN14@GetUpdateI
	ret	0
	mov	eax, __tryend$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$1
	ret	0
__tryend$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN7@GetUpdateI
$LN14@GetUpdateI:
	mov	eax, DWORD PTR $T77702[ebp]
$LN7@GetUpdateI:
; Line 129
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUpdateItemInfo@CArchiveUpdateCallback@@UAGJIPAH0PAI@Z ENDP ; CArchiveUpdateCallback::GetUpdateItemInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BoolToInt@@YGH_N@Z
_TEXT	SEGMENT
_value$ = 8						; size = 1
?BoolToInt@@YGH_N@Z PROC				; BoolToInt, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 15
	push	ebp
	mov	ebp, esp
	movzx	eax, BYTE PTR _value$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	ebp
	ret	4
?BoolToInt@@YGH_N@Z ENDP				; BoolToInt
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExistInArchive@CUpdatePair2@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExistInArchive@CUpdatePair2@@QBE_NXZ PROC		; CUpdatePair2::ExistInArchive, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updateproduce.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+8], -1
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?ExistInArchive@CUpdatePair2@@QBE_NXZ ENDP		; CUpdatePair2::ExistInArchive
_TEXT	ENDS
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
EXTRN	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::CPropVariant::Detach
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -32						; size = 4
$T77719 = -28						; size = 4
_prop$ = -20						; size = 16
_this$ = 8						; size = 4
_propID$ = 12						; size = 4
_value$ = 16						; size = 4
?GetRootProp@CArchiveUpdateCallback@@UAGJKPAUtagPROPVARIANT@@@Z PROC ; CArchiveUpdateCallback::GetRootProp
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 133
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
; Line 134
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 6
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 6
	ja	$LN10@GetRootPro
	mov	edx, DWORD PTR tv67[ebp]
	jmp	DWORD PTR $LN17@GetRootPro[edx*4]
$LN9@GetRootPro:
; Line 136
	push	1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN10@GetRootPro
$LN8@GetRootPro:
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN7@GetRootPro
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
$LN7@GetRootPro:
	jmp	SHORT $LN10@GetRootPro
$LN6@GetRootPro:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN5@GetRootPro
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN5@GetRootPro:
	jmp	SHORT $LN10@GetRootPro
$LN4@GetRootPro:
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN3@GetRootPro
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN3@GetRootPro:
	jmp	SHORT $LN10@GetRootPro
$LN2@GetRootPro:
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN10@GetRootPro
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN10@GetRootPro:
; Line 142
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 143
	mov	DWORD PTR $T77719[ebp], 0
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77719[ebp]
; Line 144
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@GetRootPro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN16@GetRootPro:
	DD	1
	DD	$LN15@GetRootPro
$LN15@GetRootPro:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN14@GetRootPro
$LN14@GetRootPro:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	3
$LN17@GetRootPro:
	DD	$LN9@GetRootPro
	DD	$LN10@GetRootPro
	DD	$LN10@GetRootPro
	DD	$LN8@GetRootPro
	DD	$LN6@GetRootPro
	DD	$LN4@GetRootPro
	DD	$LN2@GetRootPro
?GetRootProp@CArchiveUpdateCallback@@UAGJKPAUtagPROPVARIANT@@@Z ENDP ; CArchiveUpdateCallback::GetRootProp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_parent$ = 16						; size = 4
_parentType$ = 20					; size = 4
?GetParent@CArchiveUpdateCallback@@UAGJIPAI0@Z PROC	; CArchiveUpdateCallback::GetParent
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 147
	push	ebp
	mov	ebp, esp
; Line 148
	mov	eax, DWORD PTR _parentType$[ebp]
	mov	DWORD PTR [eax], 0
; Line 149
	mov	ecx, DWORD PTR _parent$[ebp]
	mov	DWORD PTR [ecx], -1
; Line 150
	xor	eax, eax
; Line 151
	pop	ebp
	ret	16					; 00000010H
?GetParent@CArchiveUpdateCallback@@UAGJIPAI0@Z ENDP	; CArchiveUpdateCallback::GetParent
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumRawProps@CArchiveUpdateCallback@@UAGJPAI@Z PROC	; CArchiveUpdateCallback::GetNumRawProps
; Line 154
	push	ebp
	mov	ebp, esp
; Line 155
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 0
; Line 156
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+147]
	test	edx, edx
	je	SHORT $LN1@GetNumRawP
; Line 157
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@GetNumRawP:
; Line 158
	xor	eax, eax
; Line 159
	pop	ebp
	ret	8
?GetNumRawProps@CArchiveUpdateCallback@@UAGJPAI@Z ENDP	; CArchiveUpdateCallback::GetNumRawProps
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
?GetRawPropInfo@CArchiveUpdateCallback@@UAGJIPAPA_WPAK@Z PROC ; CArchiveUpdateCallback::GetRawPropInfo
; Line 162
	push	ebp
	mov	ebp, esp
; Line 163
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR [eax], 0
; Line 164
	mov	ecx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [ecx], 62			; 0000003eH
; Line 165
	xor	eax, eax
; Line 166
	pop	ebp
	ret	16					; 00000010H
?GetRawPropInfo@CArchiveUpdateCallback@@UAGJIPAPA_WPAK@Z ENDP ; CArchiveUpdateCallback::GetRawPropInfo
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ ; CMyComPtr<IArchiveGetRootProps>::operator->
PUBLIC	??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ ; CMyComPtr<IArchiveGetRootProps>::operator IArchiveGetRootProps *
PUBLIC	?Size@?$CBuffer@E@@QBEIXZ			; CBuffer<unsigned char>::Size
PUBLIC	??B?$CBuffer@E@@QBEPBEXZ			; CBuffer<unsigned char>::operator unsigned char const *
PUBLIC	??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z ; CObjectVector<CBuffer<unsigned char> >::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv141 = -8						; size = 4
_buf$75946 = -4						; size = 4
_this$ = 8						; size = 4
_propID$ = 12						; size = 4
_data$ = 16						; size = 4
_dataSize$ = 20						; size = 4
_propType$ = 24						; size = 4
?GetRootRawProp@CArchiveUpdateCallback@@UAGJKPAPBXPAI1@Z PROC ; CArchiveUpdateCallback::GetRootRawProp
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 174
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], 0
; Line 175
	mov	ecx, DWORD PTR _dataSize$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 176
	mov	edx, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [edx], 0
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+143]
	test	ecx, ecx
	jne	SHORT $LN6@GetRootRaw
; Line 178
	xor	eax, eax
	jmp	$LN7@GetRootRaw
$LN6@GetRootRaw:
; Line 180
	cmp	DWORD PTR _propID$[ebp], 62		; 0000003eH
	jne	$LN5@GetRootRaw
; Line 182
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+141]
	test	eax, eax
	je	SHORT $LN4@GetRootRaw
; Line 183
	xor	eax, eax
	jmp	$LN7@GetRootRaw
$LN4@GetRootRaw:
; Line 185
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN3@GetRootRaw
; Line 187
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+116]
	cmp	DWORD PTR [eax+72], 0
	jge	SHORT $LN2@GetRootRaw
; Line 188
	xor	eax, eax
	jmp	$LN7@GetRootRaw
$LN2@GetRootRaw:
; Line 189
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+112]
	add	ecx, 104				; 00000068H
	call	??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z ; CObjectVector<CBuffer<unsigned char> >::operator[]
	mov	DWORD PTR _buf$75946[ebp], eax
; Line 190
	mov	ecx, DWORD PTR _buf$75946[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx], eax
; Line 191
	mov	ecx, DWORD PTR _buf$75946[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	ecx, DWORD PTR _dataSize$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 192
	mov	edx, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [edx], 1
; Line 193
	xor	eax, eax
	jmp	SHORT $LN7@GetRootRaw
$LN3@GetRootRaw:
; Line 196
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN5@GetRootRaw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	add	ecx, 12					; 0000000cH
	call	??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ ; CMyComPtr<IArchiveGetRootProps>::operator IArchiveGetRootProps *
	test	eax, eax
	je	SHORT $LN5@GetRootRaw
; Line 197
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	add	ecx, 12					; 0000000cH
	call	??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ ; CMyComPtr<IArchiveGetRootProps>::operator->
	mov	DWORD PTR tv141[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _propType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv141[ebp]
	push	ecx
	mov	edx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN7@GetRootRaw
$LN5@GetRootRaw:
; Line 200
	xor	eax, eax
$LN7@GetRootRaw:
; Line 201
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetRootRawProp@CArchiveUpdateCallback@@UAGJKPAPBXPAI1@Z ENDP ; CArchiveUpdateCallback::GetRootRawProp
_TEXT	ENDS
PUBLIC	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
PUBLIC	??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator->
PUBLIC	??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv94 = -28						; size = 4
tv145 = -24						; size = 4
_buf$75979 = -20					; size = 4
_buf$75974 = -16					; size = 4
_di$75968 = -12						; size = 4
_up$75965 = -8						; size = 4
_up$75963 = -4						; size = 4
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_propID$ = 16						; size = 4
_data$ = 20						; size = 4
_dataSize$ = 24						; size = 4
_propType$ = 28						; size = 4
?GetRawProp@CArchiveUpdateCallback@@UAGJIKPAPBXPAI1@Z PROC ; CArchiveUpdateCallback::GetRawProp
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 208
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], 0
; Line 209
	mov	ecx, DWORD PTR _dataSize$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 210
	mov	edx, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [edx], 0
; Line 213
	cmp	DWORD PTR _propID$[ebp], 62		; 0000003eH
	je	SHORT $LN11@GetRawProp
	cmp	DWORD PTR _propID$[ebp], 89		; 00000059H
	jne	$LN12@GetRawProp
$LN11@GetRawProp:
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+145]
	test	ecx, ecx
	je	SHORT $LN10@GetRawProp
; Line 216
	xor	eax, eax
	jmp	$LN13@GetRawProp
$LN10@GetRawProp:
; Line 218
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR _up$75963[ebp], eax
; Line 219
	mov	ecx, DWORD PTR _up$75963[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	test	edx, edx
	je	$LN9@GetRawProp
	mov	ecx, DWORD PTR _up$75963[ebp]
	call	?ExistInArchive@CUpdatePair2@@QBE_NXZ	; CUpdatePair2::ExistInArchive
	movzx	eax, al
	test	eax, eax
	je	$LN9@GetRawProp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	add	ecx, 8
	call	??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
	test	eax, eax
	je	SHORT $LN9@GetRawProp
; Line 222
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+132], 0
	je	SHORT $LN15@GetRawProp
	mov	eax, DWORD PTR _up$75963[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN16@GetRawProp
$LN15@GetRawProp:
	mov	ecx, DWORD PTR _up$75963[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv145[ebp], edx
$LN16@GetRawProp:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 8
	call	??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator->
	mov	DWORD PTR tv94[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _propType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dataSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _propID$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	mov	eax, DWORD PTR tv94[ebp]
	push	eax
	mov	ecx, DWORD PTR tv94[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN13@GetRawProp
$LN9@GetRawProp:
; Line 225
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+136]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR _up$75965[ebp], eax
; Line 230
	mov	eax, DWORD PTR _up$75965[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	test	ecx, ecx
	je	SHORT $LN8@GetRawProp
; Line 231
	xor	eax, eax
	jmp	$LN13@GetRawProp
$LN8@GetRawProp:
; Line 234
	mov	edx, DWORD PTR _up$75965[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+116]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR _di$75968[ebp], eax
; Line 238
	cmp	DWORD PTR _propID$[ebp], 62		; 0000003eH
	jne	SHORT $LN7@GetRawProp
; Line 240
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+147]
	test	eax, eax
	jne	SHORT $LN6@GetRawProp
; Line 241
	xor	eax, eax
	jmp	$LN13@GetRawProp
$LN6@GetRawProp:
; Line 242
	mov	ecx, DWORD PTR _di$75968[ebp]
	cmp	DWORD PTR [ecx+72], 0
	jge	SHORT $LN5@GetRawProp
; Line 243
	xor	eax, eax
	jmp	$LN13@GetRawProp
$LN5@GetRawProp:
; Line 244
	mov	edx, DWORD PTR _di$75968[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+116]
	add	ecx, 104				; 00000068H
	call	??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z ; CObjectVector<CBuffer<unsigned char> >::operator[]
	mov	DWORD PTR _buf$75974[ebp], eax
; Line 245
	mov	ecx, DWORD PTR _buf$75974[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx], eax
; Line 246
	mov	ecx, DWORD PTR _buf$75974[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	ecx, DWORD PTR _dataSize$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 247
	mov	edx, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [edx], 1
; Line 249
	jmp	SHORT $LN4@GetRawProp
$LN7@GetRawProp:
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+149]
	test	ecx, ecx
	jne	SHORT $LN3@GetRawProp
; Line 254
	xor	eax, eax
	jmp	SHORT $LN13@GetRawProp
$LN3@GetRawProp:
; Line 256
	mov	edx, DWORD PTR _di$75968[ebp]
	add	edx, 52					; 00000034H
	mov	DWORD PTR _buf$75979[ebp], edx
; Line 257
	mov	ecx, DWORD PTR _buf$75979[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN2@GetRawProp
; Line 258
	mov	eax, DWORD PTR _di$75968[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _buf$75979[ebp], eax
$LN2@GetRawProp:
; Line 259
	mov	ecx, DWORD PTR _buf$75979[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	je	SHORT $LN4@GetRawProp
; Line 261
	mov	ecx, DWORD PTR _buf$75979[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 262
	mov	ecx, DWORD PTR _buf$75979[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	edx, DWORD PTR _dataSize$[ebp]
	mov	DWORD PTR [edx], eax
; Line 263
	mov	eax, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [eax], 1
$LN4@GetRawProp:
; Line 268
	xor	eax, eax
	jmp	SHORT $LN13@GetRawProp
$LN12@GetRawProp:
; Line 272
	xor	eax, eax
$LN13@GetRawProp:
; Line 273
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?GetRawProp@CArchiveUpdateCallback@@UAGJIKPAPBXPAI1@Z ENDP ; CArchiveUpdateCallback::GetRawProp
_TEXT	ENDS
PUBLIC	?IsDir@CDirItem@@QBE_NXZ			; CDirItem::IsDir
PUBLIC	?ExistOnDisk@CUpdatePair2@@QBE_NXZ		; CUpdatePair2::ExistOnDisk
PUBLIC	??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator->
PUBLIC	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
PUBLIC	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
PUBLIC	??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z ; CRecordVector<CKeyKeyValPair>::operator[]
PUBLIC	??1CReparseAttr@NFile@NWindows@@QAE@XZ		; NWindows::NFile::CReparseAttr::~CReparseAttr
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::CReparseAttr::IsRelative
PUBLIC	??0CReparseAttr@NFile@NWindows@@QAE@XZ		; NWindows::NFile::CReparseAttr::CReparseAttr
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z:PROC	; CDirItems::GetLogPath
EXTRN	?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z:PROC ; NWindows::NFile::NDir::MyGetFullPathName
EXTRN	?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z:PROC	; CDirItems::GetPhyPath
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ:PROC ; NWindows::NFile::CReparseAttr::GetPath
EXTRN	?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z:PROC ; NWindows::NFile::CReparseAttr::Parse
xdata$x	SEGMENT
__catchsym$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$10 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z DD 00H
	DD	08H
	DD	09H
	DD	01H
	DD	FLAT:__catchsym$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$10
__ehfuncinfo$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$5
	DD	04H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$8
	DD	01H
	DD	FLAT:__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$9
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv357 = -357						; size = 1
tv328 = -356						; size = 4
tv356 = -352						; size = 4
tv275 = -348						; size = 4
tv355 = -344						; size = 4
tv354 = -337						; size = 1
tv353 = -336						; size = 4
tv248 = -332						; size = 4
tv352 = -328						; size = 4
tv263 = -324						; size = 4
tv351 = -320						; size = 4
tv350 = -316						; size = 4
tv349 = -309						; size = 1
tv348 = -308						; size = 4
tv205 = -304						; size = 4
tv323 = -300						; size = 4
tv347 = -296						; size = 4
tv346 = -292						; size = 4
tv345 = -288						; size = 4
tv318 = -284						; size = 4
tv344 = -280						; size = 4
tv343 = -273						; size = 1
tv342 = -272						; size = 4
tv341 = -268						; size = 4
tv340 = -264						; size = 4
tv339 = -257						; size = 1
tv338 = -256						; size = 4
tv337 = -249						; size = 1
tv336 = -248						; size = 4
tv335 = -244						; size = 4
tv334 = -240						; size = 4
tv333 = -236						; size = 4
tv332 = -232						; size = 4
tv331 = -228						; size = 4
$T77748 = -224						; size = 4
$T77747 = -220						; size = 4
$T77746 = -216						; size = 12
$T77743 = -204						; size = 4
$T77742 = -200						; size = 4
$T77741 = -196						; size = 4
$T77740 = -192						; size = 12
$T77739 = -180						; size = 4
$T77738 = -176						; size = 12
$T77737 = -164						; size = 4
_di$76071 = -160					; size = 4
_up2$76045 = -156					; size = 4
_pair$76044 = -152					; size = 4
_fullPath$76036 = -144					; size = 12
_phyPath$76034 = -124					; size = 12
_simpleName$76030 = -104				; size = 12
_attr$76028 = -84					; size = 32
_di$76027 = -48						; size = 4
_prop$76020 = -40					; size = 16
_up$76019 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_propID$ = 16						; size = 4
_value$ = 20						; size = 4
?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z PROC ; CArchiveUpdateCallback::GetProperty
; Line 321
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 322
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 323
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+148]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR tv331[ebp], eax
	mov	edx, DWORD PTR tv331[ebp]
	mov	DWORD PTR _up$76019[ebp], edx
; Line 324
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv332[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 326
	mov	eax, DWORD PTR _up$76019[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN37@GetPropert
; Line 336
	cmp	DWORD PTR _propID$[ebp], 54		; 00000036H
	jne	$LN36@GetPropert
; Line 338
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jne	SHORT $LN35@GetPropert
; Line 340
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 341
	mov	DWORD PTR $T77737[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77737[ebp]
	jmp	$LN39@GetPropert
$LN35@GetPropert:
; Line 343
	mov	edx, DWORD PTR _up$76019[ebp]
	cmp	DWORD PTR [edx+4], 0
	jl	$LN34@GetPropert
; Line 346
	mov	eax, DWORD PTR _up$76019[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR tv333[ebp], eax
	mov	eax, DWORD PTR tv333[ebp]
	mov	DWORD PTR _di$76027[ebp], eax
; Line 349
	lea	ecx, DWORD PTR _attr$76028[ebp]
	call	??0CReparseAttr@NFile@NWindows@@QAE@XZ	; NWindows::NFile::CReparseAttr::CReparseAttr
	mov	DWORD PTR tv334[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 350
	mov	ecx, DWORD PTR _di$76027[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	DWORD PTR tv335[ebp], eax
	mov	ecx, DWORD PTR _di$76027[ebp]
	add	ecx, 44					; 0000002cH
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	mov	DWORD PTR tv336[ebp], eax
	mov	ecx, DWORD PTR tv335[ebp]
	push	ecx
	mov	edx, DWORD PTR tv336[ebp]
	push	edx
	lea	ecx, DWORD PTR _attr$76028[ebp]
	call	?Parse@CReparseAttr@NFile@NWindows@@QAE_NPBEI@Z ; NWindows::NFile::CReparseAttr::Parse
	mov	BYTE PTR tv337[ebp], al
	movzx	eax, BYTE PTR tv337[ebp]
	test	eax, eax
	je	$LN33@GetPropert
; Line 352
	lea	ecx, DWORD PTR _simpleName$76030[ebp]
	push	ecx
	lea	ecx, DWORD PTR _attr$76028[ebp]
	call	?GetPath@CReparseAttr@NFile@NWindows@@QBE?AVUString@@XZ ; NWindows::NFile::CReparseAttr::GetPath
	mov	DWORD PTR tv338[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 353
	lea	ecx, DWORD PTR _attr$76028[ebp]
	call	?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::CReparseAttr::IsRelative
	mov	BYTE PTR tv339[ebp], al
	movzx	edx, BYTE PTR tv339[ebp]
	test	edx, edx
	je	SHORT $LN32@GetPropert
; Line 354
	lea	eax, DWORD PTR _simpleName$76030[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 355
	jmp	$LN31@GetPropert
$LN32@GetPropert:
; Line 357
	mov	ecx, DWORD PTR _up$76019[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR _phyPath$76034[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetPhyPath
	mov	DWORD PTR tv340[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 358
	lea	ecx, DWORD PTR _fullPath$76036[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv341[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 359
	lea	ecx, DWORD PTR _phyPath$76034[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv342[ebp], eax
	lea	edx, DWORD PTR _fullPath$76036[ebp]
	push	edx
	mov	eax, DWORD PTR tv342[ebp]
	push	eax
	call	?MyGetFullPathName@NDir@NFile@NWindows@@YG_NPB_WAAVUString@@@Z ; NWindows::NFile::NDir::MyGetFullPathName
	mov	BYTE PTR tv343[ebp], al
	movzx	ecx, BYTE PTR tv343[ebp]
	test	ecx, ecx
	je	SHORT $LN30@GetPropert
; Line 361
	lea	edx, DWORD PTR _fullPath$76036[ebp]
	push	edx
	lea	eax, DWORD PTR _simpleName$76030[ebp]
	push	eax
	lea	ecx, DWORD PTR $T77738[ebp]
	push	ecx
	call	?GetRelativePath@@YG?AVUString@@ABV1@0@Z ; GetRelativePath
	mov	DWORD PTR tv344[ebp], eax
	mov	edx, DWORD PTR tv344[ebp]
	mov	DWORD PTR tv318[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	mov	eax, DWORD PTR tv318[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	lea	ecx, DWORD PTR $T77738[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN30@GetPropert:
; Line 363
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR _fullPath$76036[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _phyPath$76034[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN31@GetPropert:
; Line 364
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 365
	mov	DWORD PTR $T77739[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _simpleName$76030[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _attr$76028[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77739[ebp]
	jmp	$LN39@GetPropert
$LN33@GetPropert:
; Line 367
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _attr$76028[ebp]
	call	??1CReparseAttr@NFile@NWindows@@QAE@XZ
$LN34@GetPropert:
; Line 370
	jmp	$LN37@GetPropert
$LN36@GetPropert:
; Line 371
	cmp	DWORD PTR _propID$[ebp], 90		; 0000005aH
	jne	$LN37@GetPropert
; Line 373
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jne	$LN27@GetPropert
; Line 375
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z ; CRecordVector<CKeyKeyValPair>::operator[]
	mov	DWORD PTR tv345[ebp], eax
	mov	eax, DWORD PTR tv345[ebp]
	mov	DWORD PTR _pair$76044[ebp], eax
; Line 376
	mov	ecx, DWORD PTR _pair$76044[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR tv346[ebp], eax
	mov	ecx, DWORD PTR tv346[ebp]
	mov	DWORD PTR _up2$76045[ebp], ecx
; Line 377
	mov	edx, DWORD PTR _up2$76045[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T77740[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetLogPath
	mov	DWORD PTR tv347[ebp], eax
	mov	eax, DWORD PTR tv347[ebp]
	mov	DWORD PTR tv323[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	mov	ecx, DWORD PTR tv323[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T77740[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 378
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 379
	mov	DWORD PTR $T77741[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77741[ebp]
	jmp	$LN39@GetPropert
$LN27@GetPropert:
; Line 381
	mov	eax, DWORD PTR _up$76019[ebp]
	cmp	DWORD PTR [eax+4], 0
	jl	SHORT $LN37@GetPropert
; Line 383
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 384
	mov	DWORD PTR $T77742[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77742[ebp]
	jmp	$LN39@GetPropert
$LN37@GetPropert:
; Line 392
	mov	edx, DWORD PTR _up$76019[ebp]
	movzx	eax, BYTE PTR [edx+3]
	test	eax, eax
	je	SHORT $LN25@GetPropert
	cmp	DWORD PTR _propID$[ebp], 6
	je	SHORT $LN25@GetPropert
	cmp	DWORD PTR _propID$[ebp], 3
	je	SHORT $LN25@GetPropert
	cmp	DWORD PTR _propID$[ebp], 63		; 0000003fH
	je	SHORT $LN25@GetPropert
; Line 394
	mov	ecx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv205[ebp], ecx
	cmp	DWORD PTR tv205[ebp], 7
	je	SHORT $LN22@GetPropert
	cmp	DWORD PTR tv205[ebp], 21		; 00000015H
	je	SHORT $LN21@GetPropert
	jmp	SHORT $LN23@GetPropert
$LN22@GetPropert:
; Line 396
	push	0
	push	0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN23@GetPropert
$LN21@GetPropert:
; Line 397
	push	1
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
$LN23@GetPropert:
; Line 400
	jmp	$LN20@GetPropert
$LN25@GetPropert:
	cmp	DWORD PTR _propID$[ebp], 3
	jne	SHORT $LN19@GetPropert
	mov	edx, DWORD PTR _up$76019[ebp]
	cmp	DWORD PTR [edx+12], 0
	jl	SHORT $LN19@GetPropert
; Line 401
	mov	eax, DWORD PTR _up$76019[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+152]
	call	??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	DWORD PTR tv348[ebp], eax
	mov	eax, DWORD PTR tv348[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN20@GetPropert
$LN19@GetPropert:
; Line 402
	cmp	DWORD PTR _propID$[ebp], 50		; 00000032H
	jne	SHORT $LN17@GetPropert
	mov	ecx, DWORD PTR _up$76019[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jl	SHORT $LN17@GetPropert
	mov	edx, DWORD PTR _up$76019[ebp]
	movzx	eax, BYTE PTR [edx+16]
	test	eax, eax
	je	SHORT $LN17@GetPropert
; Line 406
	jmp	$LN20@GetPropert
$LN17@GetPropert:
; Line 407
	mov	ecx, DWORD PTR _up$76019[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	test	edx, edx
	jne	SHORT $LN14@GetPropert
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+158]
	test	ecx, ecx
	je	$LN15@GetPropert
	cmp	DWORD PTR _propID$[ebp], 3
	je	SHORT $LN14@GetPropert
	cmp	DWORD PTR _propID$[ebp], 63		; 0000003fH
	jne	$LN15@GetPropert
$LN14@GetPropert:
	mov	ecx, DWORD PTR _up$76019[ebp]
	call	?ExistInArchive@CUpdatePair2@@QBE_NXZ	; CUpdatePair2::ExistInArchive
	mov	BYTE PTR tv349[ebp], al
	movzx	edx, BYTE PTR tv349[ebp]
	test	edx, edx
	je	$LN15@GetPropert
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
	mov	DWORD PTR tv350[ebp], eax
	cmp	DWORD PTR tv350[ebp], 0
	je	$LN15@GetPropert
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN41@GetPropert
	mov	ecx, DWORD PTR _up$76019[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	DWORD PTR tv351[ebp], eax
	mov	ecx, DWORD PTR tv351[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv263[ebp], edx
	jmp	SHORT $LN42@GetPropert
$LN41@GetPropert:
	mov	eax, DWORD PTR _up$76019[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv263[ebp], ecx
$LN42@GetPropert:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator->
	mov	DWORD PTR tv352[ebp], eax
	mov	edx, DWORD PTR tv352[ebp]
	mov	DWORD PTR tv248[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _propID$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv263[ebp]
	push	edx
	mov	eax, DWORD PTR tv248[ebp]
	push	eax
	mov	ecx, DWORD PTR tv248[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv353[ebp], eax
	mov	ecx, DWORD PTR tv353[ebp]
	mov	DWORD PTR $T77743[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77743[ebp]
	jmp	$LN39@GetPropert
	jmp	$LN20@GetPropert
$LN15@GetPropert:
; Line 409
	mov	ecx, DWORD PTR _up$76019[ebp]
	call	?ExistOnDisk@CUpdatePair2@@QBE_NXZ	; CUpdatePair2::ExistOnDisk
	mov	BYTE PTR tv354[ebp], al
	movzx	edx, BYTE PTR tv354[ebp]
	test	edx, edx
	je	$LN20@GetPropert
; Line 411
	mov	eax, DWORD PTR _up$76019[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR tv355[ebp], eax
	mov	eax, DWORD PTR tv355[ebp]
	mov	DWORD PTR _di$76071[ebp], eax
; Line 412
	mov	ecx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv275[ebp], ecx
	mov	edx, DWORD PTR tv275[ebp]
	sub	edx, 3
	mov	DWORD PTR tv275[ebp], edx
	cmp	DWORD PTR tv275[ebp], 60		; 0000003cH
	ja	$LN20@GetPropert
	mov	eax, DWORD PTR tv275[ebp]
	movzx	ecx, BYTE PTR $LN56@GetPropert[eax]
	jmp	DWORD PTR $LN65@GetPropert[ecx*4]
$LN8@GetPropert:
; Line 414
	mov	edx, DWORD PTR _up$76019[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T77746[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+128]
	call	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetLogPath
	mov	DWORD PTR tv356[ebp], eax
	mov	eax, DWORD PTR tv356[ebp]
	mov	DWORD PTR tv328[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	mov	ecx, DWORD PTR tv328[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABVUString@@@Z ; NWindows::NCOM::CPropVariant::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T77746[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	$LN20@GetPropert
$LN7@GetPropert:
; Line 415
	mov	ecx, DWORD PTR _di$76071[ebp]
	call	?IsDir@CDirItem@@QBE_NXZ		; CDirItem::IsDir
	mov	BYTE PTR tv357[ebp], al
	movzx	edx, BYTE PTR tv357[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN20@GetPropert
$LN6@GetPropert:
; Line 416
	mov	eax, DWORD PTR _di$76071[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN20@GetPropert
$LN5@GetPropert:
; Line 417
	mov	eax, DWORD PTR _di$76071[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN20@GetPropert
$LN4@GetPropert:
; Line 418
	mov	edx, DWORD PTR _di$76071[ebp]
	add	edx, 8
	push	edx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN20@GetPropert
$LN3@GetPropert:
; Line 419
	mov	eax, DWORD PTR _di$76071[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN20@GetPropert
$LN2@GetPropert:
; Line 420
	mov	ecx, DWORD PTR _di$76071[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	SHORT $LN20@GetPropert
$LN1@GetPropert:
; Line 421
	mov	edx, DWORD PTR _di$76071[ebp]
	movzx	eax, BYTE PTR [edx+76]
	push	eax
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
$LN20@GetPropert:
; Line 427
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 428
	mov	DWORD PTR $T77747[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$76020[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T77747[ebp]
	jmp	SHORT $LN39@GetPropert
__catch$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$0:
; Line 429
	mov	DWORD PTR $T77748[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN54@GetPropert
	ret	0
	mov	eax, __tryend$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN39@GetPropert
$LN54@GetPropert:
	mov	eax, DWORD PTR $T77748[ebp]
$LN39@GetPropert:
; Line 430
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN64@GetPropert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN64@GetPropert:
	DD	5
	DD	$LN63@GetPropert
$LN63@GetPropert:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN57@GetPropert
	DD	-84					; ffffffacH
	DD	32					; 00000020H
	DD	$LN58@GetPropert
	DD	-104					; ffffff98H
	DD	12					; 0000000cH
	DD	$LN59@GetPropert
	DD	-124					; ffffff84H
	DD	12					; 0000000cH
	DD	$LN60@GetPropert
	DD	-144					; ffffff70H
	DD	12					; 0000000cH
	DD	$LN61@GetPropert
$LN61@GetPropert:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN60@GetPropert:
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN59@GetPropert:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN58@GetPropert:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN57@GetPropert:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
	npad	2
$LN65@GetPropert:
	DD	$LN8@GetPropert
	DD	$LN7@GetPropert
	DD	$LN6@GetPropert
	DD	$LN5@GetPropert
	DD	$LN4@GetPropert
	DD	$LN3@GetPropert
	DD	$LN2@GetPropert
	DD	$LN1@GetPropert
	DD	$LN20@GetPropert
$LN56@GetPropert:
	DB	0
	DB	8
	DB	8
	DB	1
	DB	2
	DB	8
	DB	3
	DB	4
	DB	5
	DB	6
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$76020[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$3:
	lea	ecx, DWORD PTR _attr$76028[ebp]
	jmp	??1CReparseAttr@NFile@NWindows@@QAE@XZ
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$4:
	lea	ecx, DWORD PTR _simpleName$76030[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$5:
	lea	ecx, DWORD PTR _phyPath$76034[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$6:
	lea	ecx, DWORD PTR _fullPath$76036[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$7:
	lea	ecx, DWORD PTR $T77738[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$8:
	lea	ecx, DWORD PTR $T77740[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z$9:
	lea	ecx, DWORD PTR $T77746[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetProperty@CArchiveUpdateCallback@@UAGJIKPAUtagPROPVARIANT@@@Z ENDP ; CArchiveUpdateCallback::GetProperty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
xdata$x	SEGMENT
__unwindtable$??0CReparseAttr@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CReparseAttr@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??0CReparseAttr@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CReparseAttr@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CReparseAttr@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CReparseAttr@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::CReparseAttr::CReparseAttr, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CReparseAttr@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CReparseAttr@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CReparseAttr@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::CReparseAttr::CReparseAttr
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::CReparseAttr::IsRelative, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 1
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRelative@CReparseAttr@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::CReparseAttr::IsRelative
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDir@CDirItem@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CDirItem@@QBE_NXZ PROC				; CDirItem::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	and	eax, 16					; 00000010H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CDirItem@@QBE_NXZ ENDP				; CDirItem::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExistOnDisk@CUpdatePair2@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExistOnDisk@CUpdatePair2@@QBE_NXZ PROC			; CUpdatePair2::ExistOnDisk, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updateproduce.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], -1
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?ExistOnDisk@CUpdatePair2@@QBE_NXZ ENDP			; CUpdatePair2::ExistOnDisk
_TEXT	ENDS
PUBLIC	?Add_PathSepar@UString@@QAEXXZ			; UString::Add_PathSepar
PUBLIC	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
PUBLIC	?Size@?$CObjectVector@VUString@@@@QBEIXZ	; CObjectVector<UString>::Size
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	??YUString@@QAEAAV0@PB_W@Z:PROC			; UString::operator+=
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NName::IsDrivePath
EXTRN	?CompareFileNames@@YGHPB_W0@Z:PROC		; CompareFileNames
EXTRN	?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z:PROC ; SplitPathToParts
xdata$x	SEGMENT
__unwindtable$?GetRelativePath@@YG?AVUString@@ABV1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$3
__ehfuncinfo$?GetRelativePath@@YG?AVUString@@ABV1@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetRelativePath@@YG?AVUString@@ABV1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T77799 = -84						; size = 4
_k$ = -80						; size = 4
_s$ = -72						; size = 12
_i$ = -56						; size = 4
_partsFrom$ = -48					; size = 12
_partsTo$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_to$ = 12						; size = 4
_from$ = 16						; size = 4
?GetRelativePath@@YG?AVUString@@ABV1@0@Z PROC		; GetRelativePath
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 278
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetRelativePath@@YG?AVUString@@ABV1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T77799[ebp], 0
; Line 279
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 280
	lea	eax, DWORD PTR _partsTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _to$[ebp]
	push	ecx
	call	?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z ; SplitPathToParts
; Line 281
	lea	edx, DWORD PTR _partsFrom$[ebp]
	push	edx
	mov	eax, DWORD PTR _from$[ebp]
	push	eax
	call	?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z ; SplitPathToParts
; Line 284
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@GetRelativ
$LN15@GetRelativ:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN16@GetRelativ:
; Line 287
	mov	esi, DWORD PTR _i$[ebp]
	add	esi, 1
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	esi, eax
	jae	SHORT $LN12@GetRelativ
	mov	esi, DWORD PTR _i$[ebp]
	add	esi, 1
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	esi, eax
	jb	SHORT $LN13@GetRelativ
$LN12@GetRelativ:
; Line 288
	jmp	SHORT $LN14@GetRelativ
$LN13@GetRelativ:
; Line 289
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	ecx, eax
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	ecx, eax
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?CompareFileNames@@YGHPB_W0@Z		; CompareFileNames
	test	eax, eax
	je	SHORT $LN11@GetRelativ
; Line 290
	jmp	SHORT $LN14@GetRelativ
$LN11@GetRelativ:
; Line 291
	jmp	SHORT $LN15@GetRelativ
$LN14@GetRelativ:
; Line 293
	cmp	DWORD PTR _i$[ebp], 0
	jne	SHORT $LN10@GetRelativ
; Line 297
	mov	ecx, DWORD PTR _to$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@GetRelativ
	mov	ecx, DWORD PTR _from$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN10@GetRelativ
$LN8@GetRelativ:
; Line 298
	mov	eax, DWORD PTR _to$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	ecx, DWORD PTR $T77799[ebp]
	or	ecx, 1
	mov	DWORD PTR $T77799[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN17@GetRelativ
$LN10@GetRelativ:
; Line 302
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 305
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
	jmp	SHORT $LN7@GetRelativ
$LN6@GetRelativ:
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
$LN7@GetRelativ:
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _k$[ebp], eax
	jae	SHORT $LN5@GetRelativ
; Line 306
	push	OFFSET $SG76007
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@PB_W@Z		; UString::operator+=
	jmp	SHORT $LN6@GetRelativ
$LN5@GetRelativ:
; Line 308
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _k$[ebp], ecx
	jmp	SHORT $LN4@GetRelativ
$LN3@GetRelativ:
	mov	edx, DWORD PTR _k$[ebp]
	add	edx, 1
	mov	DWORD PTR _k$[ebp], edx
$LN4@GetRelativ:
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _k$[ebp], eax
	jae	SHORT $LN2@GetRelativ
; Line 310
	mov	eax, DWORD PTR _k$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	je	SHORT $LN1@GetRelativ
; Line 311
	lea	ecx, DWORD PTR _s$[ebp]
	call	?Add_PathSepar@UString@@QAEXXZ		; UString::Add_PathSepar
$LN1@GetRelativ:
; Line 312
	mov	ecx, DWORD PTR _k$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 313
	jmp	SHORT $LN3@GetRelativ
$LN2@GetRelativ:
; Line 315
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	eax, DWORD PTR $T77799[ebp]
	or	eax, 1
	mov	DWORD PTR $T77799[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _partsTo$[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN17@GetRelativ:
; Line 316
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@GetRelativ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN29@GetRelativ:
	DD	3
	DD	$LN28@GetRelativ
$LN28@GetRelativ:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN24@GetRelativ
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN25@GetRelativ
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN26@GetRelativ
$LN26@GetRelativ:
	DB	115					; 00000073H
	DB	0
$LN25@GetRelativ:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	0
$LN24@GetRelativ:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$0:
	lea	ecx, DWORD PTR _partsTo$[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$1:
	lea	ecx, DWORD PTR _partsFrom$[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$2:
	mov	eax, DWORD PTR $T77799[ebp]
	and	eax, 1
	je	$LN22@GetRelativ
	and	DWORD PTR $T77799[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN22@GetRelativ:
	ret	0
__unwindfunclet$?GetRelativePath@@YG?AVUString@@ABV1@0@Z$3:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetRelativePath@@YG?AVUString@@ABV1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetRelativePath@@YG?AVUString@@ABV1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetRelativePath@@YG?AVUString@@ABV1@0@Z ENDP		; GetRelativePath
PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add_PathSepar@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Add_PathSepar@UString@@QAEXXZ PROC			; UString::Add_PathSepar, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 529
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Add_PathSepar@UString@@QAEXXZ ENDP			; UString::Add_PathSepar
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CReparseAttr@NFile@NWindows@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CReparseAttr@NFile@NWindows@@QAE@XZ$0
__ehfuncinfo$??1CReparseAttr@NFile@NWindows@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CReparseAttr@NFile@NWindows@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CReparseAttr@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CReparseAttr@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::CReparseAttr::~CReparseAttr, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CReparseAttr@NFile@NWindows@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CReparseAttr@NFile@NWindows@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CReparseAttr@NFile@NWindows@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CReparseAttr@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::CReparseAttr::~CReparseAttr
PUBLIC	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
PUBLIC	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
PUBLIC	?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z ; CRecordVector<CKeyKeyValPair>::AddToUniqueSorted2
PUBLIC	?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ	; CRecordVector<CKeyKeyValPair>::Size
PUBLIC	?OpenShared@CInFileStream@@QAE_NPB_W_N@Z	; CInFileStream::OpenShared
PUBLIC	?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::OpenReparse
PUBLIC	?AreReparseData@CDirItem@@QBE_NXZ		; CDirItem::AreReparseData
PUBLIC	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
PUBLIC	?Add@?$CRecordVector@I@@QAEII@Z			; CRecordVector<unsigned int>::Add
PUBLIC	??0CStdInFileStream@@QAE@XZ			; CStdInFileStream::CStdInFileStream
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::Detach
PUBLIC	?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z	; CBufInStream::Init
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??0CBufInStream@@QAE@XZ				; CBufInStream::CBufInStream
PUBLIC	?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z ; CArchiveUpdateCallback::IsDir
PUBLIC	__$ArrayPad$
EXTRN	__imp__GetLastError@0:PROC
EXTRN	??0CInFileStream@@QAE@XZ:PROC			; CInFileStream::CInFileStream
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
xdata$x	SEGMENT
__catchsym$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$13 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$0
__tryblocktable$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z DD 00H
	DD	0aH
	DD	0bH
	DD	01H
	DD	FLAT:__catchsym$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$13
__ehfuncinfo$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z DD 019930522H
	DD	0cH
	DD	FLAT:__unwindtable$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$7
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$9
	DD	00H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$10
	DD	09H
	DD	FLAT:__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$11
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv469 = -476						; size = 4
tv468 = -472						; size = 4
tv467 = -468						; size = 4
tv466 = -464						; size = 4
tv465 = -460						; size = 4
tv464 = -456						; size = 4
tv463 = -449						; size = 1
tv462 = -448						; size = 4
tv461 = -444						; size = 4
tv460 = -437						; size = 1
tv459 = -436						; size = 4
tv458 = -429						; size = 1
tv457 = -428						; size = 4
tv247 = -424						; size = 4
tv263 = -420						; size = 4
tv246 = -416						; size = 4
tv456 = -412						; size = 4
tv454 = -408						; size = 4
tv230 = -404						; size = 4
tv229 = -400						; size = 4
tv453 = -396						; size = 4
tv451 = -392						; size = 4
tv450 = -388						; size = 4
tv449 = -384						; size = 4
tv426 = -380						; size = 4
tv448 = -376						; size = 4
tv175 = -372						; size = 4
tv174 = -368						; size = 4
tv447 = -364						; size = 4
tv445 = -360						; size = 4
tv444 = -356						; size = 4
tv443 = -352						; size = 4
tv420 = -348						; size = 4
tv442 = -344						; size = 4
tv441 = -340						; size = 4
tv440 = -336						; size = 4
tv439 = -329						; size = 1
tv438 = -328						; size = 4
tv377 = -324						; size = 4
$T77847 = -320						; size = 4
$T77846 = -316						; size = 4
$T77845 = -312						; size = 4
$T77840 = -308						; size = 4
$T77839 = -304						; size = 4
$T77836 = -300						; size = 4
$T77835 = -296						; size = 4
$T77834 = -292						; size = 12
$T77833 = -280						; size = 4
$T77830 = -276						; size = 4
$T77829 = -272						; size = 4
$T77828 = -268						; size = 4
$T77827 = -264						; size = 12
_lock$76206 = -248					; size = 4
_pairIndex$76203 = -240					; size = 4
_numItems$76202 = -236					; size = 4
_pair$76201 = -228					; size = 24
_props$76197 = -196					; size = 64
_path$76188 = -124					; size = 12
_inStreamLoc$76187 = -104				; size = 4
_inStreamSpec$76181 = -96				; size = 4
_inStreamLoc$76179 = -88				; size = 4
_inStreamSpec$76173 = -80				; size = 4
___result__$76165 = -76					; size = 4
_inStreamLoc$76162 = -68				; size = 4
_inStreamSpec$76120 = -60				; size = 4
___result__$76116 = -56					; size = 4
_name$76111 = -48					; size = 12
_isDir$76109 = -29					; size = 1
___result__$76107 = -28					; size = 4
_up$76104 = -24						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_inStream$ = 16						; size = 4
_mode$ = 20						; size = 4
?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z PROC ; CArchiveUpdateCallback::GetStream2
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 435
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-476]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 436
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 437
	mov	eax, DWORD PTR _inStream$[ebp]
	mov	DWORD PTR [eax], 0
; Line 438
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+144]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR tv377[ebp], eax
	mov	eax, DWORD PTR tv377[ebp]
	mov	DWORD PTR _up$76104[ebp], eax
; Line 439
	mov	ecx, DWORD PTR _up$76104[ebp]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN22@GetStream2
; Line 440
	mov	eax, -2147467259			; 80004005H
	jmp	$LN24@GetStream2
$LN22@GetStream2:
; Line 442
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv438[ebp], eax
	mov	ecx, DWORD PTR tv438[ebp]
	mov	DWORD PTR ___result__$76107[ebp], ecx
	cmp	DWORD PTR ___result__$76107[ebp], 0
	je	SHORT $LN21@GetStream2
	mov	eax, DWORD PTR ___result__$76107[ebp]
	jmp	$LN24@GetStream2
$LN21@GetStream2:
; Line 445
	mov	edx, DWORD PTR _up$76104[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z ; CArchiveUpdateCallback::IsDir
	mov	BYTE PTR tv439[ebp], al
	mov	al, BYTE PTR tv439[ebp]
	mov	BYTE PTR _isDir$76109[ebp], al
; Line 447
	mov	ecx, DWORD PTR _up$76104[ebp]
	movzx	edx, BYTE PTR [ecx+3]
	test	edx, edx
	je	$LN20@GetStream2
; Line 449
	lea	ecx, DWORD PTR _name$76111[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv440[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 450
	mov	eax, DWORD PTR _up$76104[ebp]
	cmp	DWORD PTR [eax+8], 0
	jl	SHORT $LN19@GetStream2
; Line 451
	mov	ecx, DWORD PTR _up$76104[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	DWORD PTR tv441[ebp], eax
	mov	ecx, DWORD PTR tv441[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	ecx, DWORD PTR _name$76111[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	jmp	SHORT $LN18@GetStream2
$LN19@GetStream2:
; Line 452
	mov	edx, DWORD PTR _up$76104[ebp]
	cmp	DWORD PTR [edx+4], 0
	jl	SHORT $LN18@GetStream2
; Line 453
	mov	eax, DWORD PTR _up$76104[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T77827[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	call	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetLogPath
	mov	DWORD PTR tv442[ebp], eax
	mov	ecx, DWORD PTR tv442[ebp]
	mov	DWORD PTR tv420[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	edx, DWORD PTR tv420[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$76111[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T77827[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN18@GetStream2:
; Line 454
	lea	ecx, DWORD PTR _name$76111[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv443[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	push	1
	movzx	ecx, BYTE PTR _isDir$76109[ebp]
	push	ecx
	mov	edx, DWORD PTR tv443[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv444[ebp], eax
	mov	ecx, DWORD PTR tv444[ebp]
	mov	DWORD PTR ___result__$76116[ebp], ecx
	cmp	DWORD PTR ___result__$76116[ebp], 0
	je	SHORT $LN16@GetStream2
	mov	edx, DWORD PTR ___result__$76116[ebp]
	mov	DWORD PTR $T77828[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _name$76111[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T77828[ebp]
	jmp	$LN24@GetStream2
$LN16@GetStream2:
; Line 459
	movzx	eax, BYTE PTR _isDir$76109[ebp]
	test	eax, eax
	jne	$LN15@GetStream2
; Line 461
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv445[ebp], eax
	mov	ecx, DWORD PTR tv445[ebp]
	mov	DWORD PTR $T77830[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	cmp	DWORD PTR $T77830[ebp], 0
	je	SHORT $LN26@GetStream2
	mov	ecx, DWORD PTR $T77830[ebp]
	call	??0CBufInStream@@QAE@XZ
	mov	DWORD PTR tv447[ebp], eax
	mov	edx, DWORD PTR tv447[ebp]
	mov	DWORD PTR tv174[ebp], edx
	jmp	SHORT $LN27@GetStream2
$LN26@GetStream2:
	mov	DWORD PTR tv174[ebp], 0
$LN27@GetStream2:
	mov	eax, DWORD PTR tv174[ebp]
	mov	DWORD PTR $T77829[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	ecx, DWORD PTR $T77829[ebp]
	mov	DWORD PTR _inStreamSpec$76120[ebp], ecx
; Line 462
	mov	edx, DWORD PTR _inStreamSpec$76120[ebp]
	push	edx
	lea	ecx, DWORD PTR _inStreamLoc$76162[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 463
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _inStreamSpec$76120[ebp]
	call	?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z ; CBufInStream::Init
; Line 464
	lea	ecx, DWORD PTR _inStreamLoc$76162[ebp]
	call	?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::Detach
	mov	DWORD PTR tv175[ebp], eax
	mov	eax, DWORD PTR _inStream$[ebp]
	mov	ecx, DWORD PTR tv175[ebp]
	mov	DWORD PTR [eax], ecx
; Line 465
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _inStreamLoc$76162[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
$LN15@GetStream2:
; Line 466
	mov	DWORD PTR $T77833[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _name$76111[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T77833[ebp]
	jmp	$LN24@GetStream2
$LN20@GetStream2:
; Line 469
	mov	edx, DWORD PTR _up$76104[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T77834[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	call	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetLogPath
	mov	DWORD PTR tv448[ebp], eax
	mov	eax, DWORD PTR tv448[ebp]
	mov	DWORD PTR tv426[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR tv426[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv449[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _mode$[ebp]
	push	ecx
	push	0
	movzx	edx, BYTE PTR _isDir$76109[ebp]
	push	edx
	mov	eax, DWORD PTR tv449[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv450[ebp], eax
	mov	ecx, DWORD PTR tv450[ebp]
	mov	DWORD PTR ___result__$76165[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T77834[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	cmp	DWORD PTR ___result__$76165[ebp], 0
	je	SHORT $LN14@GetStream2
	mov	eax, DWORD PTR ___result__$76165[ebp]
	jmp	$LN24@GetStream2
$LN14@GetStream2:
; Line 471
	movzx	edx, BYTE PTR _isDir$76109[ebp]
	test	edx, edx
	je	SHORT $LN13@GetStream2
; Line 472
	xor	eax, eax
	jmp	$LN24@GetStream2
$LN13@GetStream2:
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+153]
	test	ecx, ecx
	je	$LN12@GetStream2
; Line 477
	cmp	DWORD PTR _mode$[ebp], 0
	je	SHORT $LN11@GetStream2
	cmp	DWORD PTR _mode$[ebp], 1
	je	SHORT $LN11@GetStream2
; Line 478
	xor	eax, eax
	jmp	$LN24@GetStream2
$LN11@GetStream2:
; Line 480
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv451[ebp], eax
	mov	edx, DWORD PTR tv451[ebp]
	mov	DWORD PTR $T77836[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 6
	cmp	DWORD PTR $T77836[ebp], 0
	je	SHORT $LN28@GetStream2
	mov	ecx, DWORD PTR $T77836[ebp]
	call	??0CStdInFileStream@@QAE@XZ
	mov	DWORD PTR tv453[ebp], eax
	mov	eax, DWORD PTR tv453[ebp]
	mov	DWORD PTR tv229[ebp], eax
	jmp	SHORT $LN29@GetStream2
$LN28@GetStream2:
	mov	DWORD PTR tv229[ebp], 0
$LN29@GetStream2:
	mov	ecx, DWORD PTR tv229[ebp]
	mov	DWORD PTR $T77835[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR $T77835[ebp]
	mov	DWORD PTR _inStreamSpec$76173[ebp], edx
; Line 481
	mov	eax, DWORD PTR _inStreamSpec$76173[ebp]
	push	eax
	lea	ecx, DWORD PTR _inStreamLoc$76179[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 7
; Line 482
	lea	ecx, DWORD PTR _inStreamLoc$76179[ebp]
	call	?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::Detach
	mov	DWORD PTR tv230[ebp], eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	mov	edx, DWORD PTR tv230[ebp]
	mov	DWORD PTR [ecx], edx
; Line 483
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _inStreamLoc$76179[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Line 484
	jmp	$LN10@GetStream2
$LN12@GetStream2:
; Line 486
	push	88					; 00000058H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv454[ebp], eax
	mov	eax, DWORD PTR tv454[ebp]
	mov	DWORD PTR $T77840[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	cmp	DWORD PTR $T77840[ebp], 0
	je	SHORT $LN30@GetStream2
	mov	ecx, DWORD PTR $T77840[ebp]
	call	??0CInFileStream@@QAE@XZ		; CInFileStream::CInFileStream
	mov	DWORD PTR tv456[ebp], eax
	mov	ecx, DWORD PTR tv456[ebp]
	mov	DWORD PTR tv246[ebp], ecx
	jmp	SHORT $LN31@GetStream2
$LN30@GetStream2:
	mov	DWORD PTR tv246[ebp], 0
$LN31@GetStream2:
	mov	edx, DWORD PTR tv246[ebp]
	mov	DWORD PTR $T77839[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR $T77839[ebp]
	mov	DWORD PTR _inStreamSpec$76181[ebp], eax
; Line 487
	mov	ecx, DWORD PTR _inStreamSpec$76181[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inStreamLoc$76187[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 9
; Line 489
	mov	edx, DWORD PTR _inStreamSpec$76181[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+156]
	mov	BYTE PTR [edx+72], cl
; Line 490
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	je	SHORT $LN32@GetStream2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR tv263[ebp], eax
	jmp	SHORT $LN33@GetStream2
$LN32@GetStream2:
	mov	DWORD PTR tv263[ebp], 0
$LN33@GetStream2:
	mov	ecx, DWORD PTR _inStreamSpec$76181[ebp]
	mov	edx, DWORD PTR tv263[ebp]
	mov	DWORD PTR [ecx+76], edx
; Line 491
	mov	eax, DWORD PTR _inStreamSpec$76181[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 493
	mov	edx, DWORD PTR _up$76104[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _path$76188[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+124]
	call	?GetPhyPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetPhyPath
	mov	DWORD PTR tv247[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
; Line 494
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Add@?$CRecordVector@I@@QAEII@Z		; CRecordVector<unsigned int>::Add
; Line 495
	lea	ecx, DWORD PTR _path$76188[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ; CObjectVector<UString>::Add
; Line 498
	mov	edx, DWORD PTR _up$76104[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR tv457[ebp], eax
	mov	ecx, DWORD PTR tv457[ebp]
	call	?AreReparseData@CDirItem@@QBE_NXZ	; CDirItem::AreReparseData
	mov	BYTE PTR tv458[ebp], al
	movzx	edx, BYTE PTR tv458[ebp]
	test	edx, edx
	je	$LN9@GetStream2
; Line 500
	lea	ecx, DWORD PTR _path$76188[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv459[ebp], eax
	mov	eax, DWORD PTR tv459[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStreamSpec$76181[ebp]
	add	ecx, 24					; 00000018H
	call	?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NIO::CInFile::OpenReparse
	mov	BYTE PTR tv460[ebp], al
	movzx	ecx, BYTE PTR tv460[ebp]
	test	ecx, ecx
	jne	SHORT $LN8@GetStream2
; Line 502
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	edx, DWORD PTR _path$76188[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv461[ebp], eax
	mov	ecx, DWORD PTR tv461[ebp]
	mov	DWORD PTR $T77845[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _path$76188[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _inStreamLoc$76187[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T77845[ebp]
	jmp	$LN24@GetStream2
$LN8@GetStream2:
; Line 505
	jmp	$LN7@GetStream2
$LN9@GetStream2:
; Line 507
	lea	ecx, DWORD PTR _path$76188[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv462[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+152]
	push	eax
	mov	ecx, DWORD PTR tv462[ebp]
	push	ecx
	mov	ecx, DWORD PTR _inStreamSpec$76181[ebp]
	call	?OpenShared@CInFileStream@@QAE_NPB_W_N@Z ; CInFileStream::OpenShared
	mov	BYTE PTR tv463[ebp], al
	movzx	edx, BYTE PTR tv463[ebp]
	test	edx, edx
	jne	SHORT $LN7@GetStream2
; Line 509
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR _path$76188[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv464[ebp], eax
	mov	ecx, DWORD PTR tv464[ebp]
	mov	DWORD PTR $T77846[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _path$76188[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _inStreamLoc$76187[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	eax, DWORD PTR $T77846[ebp]
	jmp	$LN24@GetStream2
$LN7@GetStream2:
; Line 512
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+156]
	test	eax, eax
	je	$LN5@GetStream2
; Line 515
	mov	esi, esp
	lea	ecx, DWORD PTR _props$76197[ebp]
	push	ecx
	mov	edx, DWORD PTR _inStreamSpec$76181[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _inStreamSpec$76181[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv465[ebp], eax
	cmp	DWORD PTR tv465[ebp], 0
	jne	$LN5@GetStream2
; Line 517
	cmp	DWORD PTR _props$76197[ebp+32], 1
	jbe	$LN5@GetStream2
; Line 520
	mov	eax, DWORD PTR _props$76197[ebp+8]
	mov	DWORD PTR _pair$76201[ebp], eax
	mov	ecx, DWORD PTR _props$76197[ebp+12]
	mov	DWORD PTR _pair$76201[ebp+4], ecx
; Line 521
	mov	edx, DWORD PTR _props$76197[ebp+16]
	mov	DWORD PTR _pair$76201[ebp+8], edx
	mov	eax, DWORD PTR _props$76197[ebp+20]
	mov	DWORD PTR _pair$76201[ebp+12], eax
; Line 522
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _pair$76201[ebp+16], ecx
; Line 523
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ ; CRecordVector<CKeyKeyValPair>::Size
	mov	DWORD PTR tv466[ebp], eax
	mov	edx, DWORD PTR tv466[ebp]
	mov	DWORD PTR _numItems$76202[ebp], edx
; Line 524
	lea	eax, DWORD PTR _pair$76201[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z ; CRecordVector<CKeyKeyValPair>::AddToUniqueSorted2
	mov	DWORD PTR tv467[ebp], eax
	mov	ecx, DWORD PTR tv467[ebp]
	mov	DWORD PTR _pairIndex$76203[ebp], ecx
; Line 525
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ ; CRecordVector<CKeyKeyValPair>::Size
	mov	DWORD PTR tv468[ebp], eax
	mov	edx, DWORD PTR _numItems$76202[ebp]
	cmp	edx, DWORD PTR tv468[ebp]
	jne	SHORT $LN5@GetStream2
; Line 528
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 529
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pairIndex$76203[ebp]
	mov	DWORD PTR [edx+56], eax
$LN5@GetStream2:
; Line 537
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+160], 0
	je	SHORT $LN1@GetStream2
; Line 539
	push	OFFSET _CS
	lea	ecx, DWORD PTR _lock$76206[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
; Line 540
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	ecx, DWORD PTR _up$76104[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [eax+edx], 1
; Line 541
	lea	ecx, DWORD PTR _lock$76206[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
$LN1@GetStream2:
; Line 542
	lea	ecx, DWORD PTR _inStreamLoc$76187[ebp]
	call	?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::Detach
	mov	DWORD PTR tv469[ebp], eax
	mov	eax, DWORD PTR _inStream$[ebp]
	mov	ecx, DWORD PTR tv469[ebp]
	mov	DWORD PTR [eax], ecx
; Line 543
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	lea	ecx, DWORD PTR _path$76188[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _inStreamLoc$76187[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
$LN10@GetStream2:
; Line 545
	xor	eax, eax
	jmp	SHORT $LN24@GetStream2
__catch$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$0:
; Line 546
	mov	DWORD PTR $T77847[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN48@GetStream2
	ret	0
	mov	eax, __tryend$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$1
	ret	0
__tryend$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN24@GetStream2
$LN48@GetStream2:
	mov	eax, DWORD PTR $T77847[ebp]
$LN24@GetStream2:
; Line 547
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN60@GetStream2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 476				; 000001dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN60@GetStream2:
	DD	8
	DD	$LN59@GetStream2
$LN59@GetStream2:
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN50@GetStream2
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN51@GetStream2
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN52@GetStream2
	DD	-104					; ffffff98H
	DD	4
	DD	$LN53@GetStream2
	DD	-124					; ffffff84H
	DD	12					; 0000000cH
	DD	$LN54@GetStream2
	DD	-196					; ffffff3cH
	DD	64					; 00000040H
	DD	$LN55@GetStream2
	DD	-228					; ffffff1cH
	DD	24					; 00000018H
	DD	$LN56@GetStream2
	DD	-248					; ffffff08H
	DD	4
	DD	$LN57@GetStream2
$LN57@GetStream2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN56@GetStream2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$LN55@GetStream2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN54@GetStream2:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN53@GetStream2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN52@GetStream2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN51@GetStream2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN50@GetStream2:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$2:
	lea	ecx, DWORD PTR _name$76111[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$3:
	lea	ecx, DWORD PTR $T77827[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$4:
	mov	eax, DWORD PTR $T77830[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$5:
	lea	ecx, DWORD PTR _inStreamLoc$76162[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$6:
	lea	ecx, DWORD PTR $T77834[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$7:
	mov	eax, DWORD PTR $T77836[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$8:
	lea	ecx, DWORD PTR _inStreamLoc$76179[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$9:
	mov	eax, DWORD PTR $T77840[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$10:
	lea	ecx, DWORD PTR _inStreamLoc$76187[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z$11:
	lea	ecx, DWORD PTR _path$76188[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-480]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStream2@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@I@Z ENDP ; CArchiveUpdateCallback::GetStream2
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z PROC ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 158
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ENDP ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
_TEXT	ENDS
PUBLIC	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
_TEXT	ENDS
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::Unlock, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
_TEXT	ENDS
EXTRN	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z:PROC ; NWindows::NFile::NIO::CInFile::Open
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z PROC ; NWindows::NFile::NIO::CInFile::OpenReparse, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 171
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 173
	push	35651584				; 02200000H
	push	3
	push	1
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Open@CInFile@NIO@NFile@NWindows@@QAE_NPB_WKKK@Z ; NWindows::NFile::NIO::CInFile::Open
; Line 174
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OpenReparse@CInFile@NIO@NFile@NWindows@@QAE_NPB_W@Z ENDP ; NWindows::NFile::NIO::CInFile::OpenReparse
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z ; CMyComPtr<IUnknown>::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
_ref$ = 16						; size = 4
?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z PROC	; CBufInStream::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\streamobjects.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 47
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
; Line 49
	mov	edx, DWORD PTR _ref$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z ; CMyComPtr<IUnknown>::operator=
; Line 50
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Init@CBufInStream@@QAEXPBEIPAUIUnknown@@@Z ENDP	; CBufInStream::Init
_TEXT	ENDS
EXTRN	?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z:PROC ; NWindows::NFile::NIO::CInFile::OpenShared
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OpenShared@CInFileStream@@QAE_NPB_W_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_shareForWrite$ = 12					; size = 1
?OpenShared@CInFileStream@@QAE_NPB_W_N@Z PROC		; CInFileStream::OpenShared, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	movzx	eax, BYTE PTR _shareForWrite$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?OpenShared@CInFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::CInFile::OpenShared
; Line 76
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OpenShared@CInFileStream@@QAE_NPB_W_N@Z ENDP		; CInFileStream::OpenShared
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AreReparseData@CDirItem@@QBE_NXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?AreReparseData@CDirItem@@QBE_NXZ PROC			; CDirItem::AreReparseData, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN3@AreReparse
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	jne	SHORT $LN3@AreReparse
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN4@AreReparse
$LN3@AreReparse:
	mov	DWORD PTR tv72[ebp], 1
$LN4@AreReparse:
	mov	al, BYTE PTR tv72[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AreReparseData@CDirItem@@QBE_NXZ ENDP			; CDirItem::AreReparseData
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_up$ = 8						; size = 4
?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z PROC ; CArchiveUpdateCallback::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.h
; Line 138
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _up$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jl	SHORT $LN3@IsDir
; Line 140
	mov	ecx, DWORD PTR _up$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	ecx, eax
	call	?IsDir@CDirItem@@QBE_NXZ		; CDirItem::IsDir
	jmp	SHORT $LN4@IsDir
	jmp	SHORT $LN2@IsDir
$LN3@IsDir:
; Line 141
	mov	ecx, DWORD PTR _up$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jl	SHORT $LN2@IsDir
; Line 142
	mov	edx, DWORD PTR _up$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+144]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	al, BYTE PTR [eax+28]
	jmp	SHORT $LN4@IsDir
$LN2@IsDir:
; Line 143
	xor	al, al
$LN4@IsDir:
; Line 144
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsDir@CArchiveUpdateCallback@@QBE_NABUCUpdatePair2@@@Z ENDP ; CArchiveUpdateCallback::IsDir
_TEXT	ENDS
PUBLIC	??0?$CMyComPtr@UIUnknown@@@@QAE@XZ		; CMyComPtr<IUnknown>::CMyComPtr<IUnknown>
PUBLIC	??_7CBufInStream@@6B@				; CBufInStream::`vftable'
PUBLIC	??0IInStream@@QAE@XZ				; IInStream::IInStream
PUBLIC	??_R4CBufInStream@@6B@				; CBufInStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBufInStream@@@8			; CBufInStream `RTTI Type Descriptor'
PUBLIC	??_R3CBufInStream@@8				; CBufInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBufInStream@@8				; CBufInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBufInStream@@8			; CBufInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IInStream@@8			; IInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIInStream@@@8				; IInStream `RTTI Type Descriptor'
PUBLIC	??_R3IInStream@@8				; IInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInStream@@8				; IInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z ; CBufInStream::QueryInterface
PUBLIC	?AddRef@CBufInStream@@UAGKXZ			; CBufInStream::AddRef
PUBLIC	?Release@CBufInStream@@UAGKXZ			; CBufInStream::Release
EXTRN	?Read@CBufInStream@@UAGJPAXIPAI@Z:PROC		; CBufInStream::Read
EXTRN	?Seek@CBufInStream@@UAGJ_JIPA_K@Z:PROC		; CBufInStream::Seek
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2IInStream@@8
rdata$r	SEGMENT
??_R2IInStream@@8 DD FLAT:??_R1A@?0A@EA@IInStream@@8	; IInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IInStream@@8
rdata$r	SEGMENT
??_R3IInStream@@8 DD 00H				; IInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInStream@@@8
_DATA	SEGMENT
??_R0?AUIInStream@@@8 DD FLAT:??_7type_info@@6B@	; IInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInStream@@8 DD FLAT:??_R0?AUIInStream@@@8 ; IInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBufInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBufInStream@@8 DD FLAT:??_R0?AVCBufInStream@@@8 ; CBufInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBufInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CBufInStream@@8
rdata$r	SEGMENT
??_R2CBufInStream@@8 DD FLAT:??_R1A@?0A@EA@CBufInStream@@8 ; CBufInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IInStream@@8
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CBufInStream@@8
rdata$r	SEGMENT
??_R3CBufInStream@@8 DD 00H				; CBufInStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2CBufInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBufInStream@@@8
_DATA	SEGMENT
??_R0?AVCBufInStream@@@8 DD FLAT:??_7type_info@@6B@	; CBufInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBufInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBufInStream@@6B@
rdata$r	SEGMENT
??_R4CBufInStream@@6B@ DD 00H				; CBufInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBufInStream@@@8
	DD	FLAT:??_R3CBufInStream@@8
rdata$r	ENDS
;	COMDAT ??_7CBufInStream@@6B@
CONST	SEGMENT
??_7CBufInStream@@6B@ DD FLAT:??_R4CBufInStream@@6B@	; CBufInStream::`vftable'
	DD	FLAT:?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBufInStream@@UAGKXZ
	DD	FLAT:?Release@CBufInStream@@UAGKXZ
	DD	FLAT:?Read@CBufInStream@@UAGJPAXIPAI@Z
	DD	FLAT:?Seek@CBufInStream@@UAGJ_JIPA_K@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CBufInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBufInStream@@QAE@XZ PROC				; CBufInStream::CBufInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBufInStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$CMyComPtr@UIUnknown@@@@QAE@XZ	; CMyComPtr<IUnknown>::CMyComPtr<IUnknown>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBufInStream@@QAE@XZ ENDP				; CBufInStream::CBufInStream
_TEXT	ENDS
EXTRN	_IID_IInStream:BYTE
EXTRN	_IID_ISequentialInStream:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z PROC ; CBufInStream::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\streamobjects.h
; Line 53
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@2
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter@2
$LN6@QueryInter@2:
	push	OFFSET _IID_ISequentialInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@2
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter@2
$LN4@QueryInter@2:
	push	OFFSET _IID_IInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN7@QueryInter@2
$LN5@QueryInter@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN7@QueryInter@2:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBufInStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBufInStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBufInStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBufInStream@@UAGKXZ PROC			; CBufInStream::AddRef, COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBufInStream@@UAGKXZ ENDP			; CBufInStream::AddRef
_TEXT	ENDS
PUBLIC	??_GCBufInStream@@QAEPAXI@Z			; CBufInStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CBufInStream@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T77911 = -8						; size = 4
$T77910 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBufInStream@@UAGKXZ PROC			; CBufInStream::Release, COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T77911[ebp], edx
	mov	eax, DWORD PTR $T77911[ebp]
	mov	DWORD PTR $T77910[ebp], eax
	cmp	DWORD PTR $T77910[ebp], 0
	je	SHORT $LN4@Release@2
	push	1
	mov	ecx, DWORD PTR $T77910[ebp]
	call	??_GCBufInStream@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@2
$LN4@Release@2:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@2:
	xor	eax, eax
$LN2@Release@2:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBufInStream@@UAGKXZ ENDP			; CBufInStream::Release
_TEXT	ENDS
PUBLIC	??1CBufInStream@@QAE@XZ				; CBufInStream::~CBufInStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCBufInStream@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBufInStream@@QAEPAXI@Z PROC			; CBufInStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBufInStream@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCBufInStream@@QAEPAXI@Z ENDP			; CBufInStream::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UIUnknown@@@@QAE@XZ		; CMyComPtr<IUnknown>::~CMyComPtr<IUnknown>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBufInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBufInStream@@QAE@XZ PROC				; CBufInStream::~CBufInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$CMyComPtr@UIUnknown@@@@QAE@XZ	; CMyComPtr<IUnknown>::~CMyComPtr<IUnknown>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBufInStream@@QAE@XZ ENDP				; CBufInStream::~CBufInStream
_TEXT	ENDS
PUBLIC	??_7IInStream@@6B@				; IInStream::`vftable'
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??_R4IInStream@@6B@				; IInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4IInStream@@6B@
rdata$r	SEGMENT
??_R4IInStream@@6B@ DD 00H				; IInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIInStream@@@8
	DD	FLAT:??_R3IInStream@@8
rdata$r	ENDS
;	COMDAT ??_7IInStream@@6B@
CONST	SEGMENT
??_7IInStream@@6B@ DD FLAT:??_R4IInStream@@6B@		; IInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IInStream@@QAE@XZ PROC				; IInStream::IInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialInStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IInStream@@QAE@XZ ENDP				; IInStream::IInStream
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
_TEXT	ENDS
PUBLIC	??_7CStdInFileStream@@6B@			; CStdInFileStream::`vftable'
PUBLIC	??_R4CStdInFileStream@@6B@			; CStdInFileStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCStdInFileStream@@@8			; CStdInFileStream `RTTI Type Descriptor'
PUBLIC	??_R3CStdInFileStream@@8			; CStdInFileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStdInFileStream@@8			; CStdInFileStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStdInFileStream@@8		; CStdInFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CStdInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CStdInFileStream::QueryInterface
PUBLIC	?AddRef@CStdInFileStream@@UAGKXZ		; CStdInFileStream::AddRef
PUBLIC	?Release@CStdInFileStream@@UAGKXZ		; CStdInFileStream::Release
EXTRN	?Read@CStdInFileStream@@UAGJPAXIPAI@Z:PROC	; CStdInFileStream::Read
EXTRN	??_ECStdInFileStream@@UAEPAXI@Z:PROC		; CStdInFileStream::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CStdInFileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStdInFileStream@@8 DD FLAT:??_R0?AVCStdInFileStream@@@8 ; CStdInFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStdInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CStdInFileStream@@8
rdata$r	SEGMENT
??_R2CStdInFileStream@@8 DD FLAT:??_R1A@?0A@EA@CStdInFileStream@@8 ; CStdInFileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CStdInFileStream@@8
rdata$r	SEGMENT
??_R3CStdInFileStream@@8 DD 00H				; CStdInFileStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CStdInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStdInFileStream@@@8
_DATA	SEGMENT
??_R0?AVCStdInFileStream@@@8 DD FLAT:??_7type_info@@6B@	; CStdInFileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStdInFileStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CStdInFileStream@@6B@
rdata$r	SEGMENT
??_R4CStdInFileStream@@6B@ DD 00H			; CStdInFileStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStdInFileStream@@@8
	DD	FLAT:??_R3CStdInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_7CStdInFileStream@@6B@
CONST	SEGMENT
??_7CStdInFileStream@@6B@ DD FLAT:??_R4CStdInFileStream@@6B@ ; CStdInFileStream::`vftable'
	DD	FLAT:?QueryInterface@CStdInFileStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CStdInFileStream@@UAGKXZ
	DD	FLAT:?Release@CStdInFileStream@@UAGKXZ
	DD	FLAT:?Read@CStdInFileStream@@UAGJPAXIPAI@Z
	DD	FLAT:??_ECStdInFileStream@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CStdInFileStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CStdInFileStream@@QAE@XZ PROC			; CStdInFileStream::CStdInFileStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CStdInFileStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CStdInFileStream@@QAE@XZ ENDP			; CStdInFileStream::CStdInFileStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CStdInFileStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CStdInFileStream@@UAGJABU_GUID@@PAPAX@Z PROC ; CStdInFileStream::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 102
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@3
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter@3
$LN2@QueryInter@3:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter@3
$LN1@QueryInter@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter@3:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CStdInFileStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; CStdInFileStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CStdInFileStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CStdInFileStream@@UAGKXZ PROC			; CStdInFileStream::AddRef, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CStdInFileStream@@UAGKXZ ENDP			; CStdInFileStream::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CStdInFileStream@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T77932 = -8						; size = 4
$T77931 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CStdInFileStream@@UAGKXZ PROC			; CStdInFileStream::Release, COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@3
$LN1@Release@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T77932[ebp], edx
	mov	eax, DWORD PTR $T77932[ebp]
	mov	DWORD PTR $T77931[ebp], eax
	cmp	DWORD PTR $T77931[ebp], 0
	je	SHORT $LN4@Release@3
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T77931[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T77931[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release@3
$LN4@Release@3:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release@3:
	xor	eax, eax
$LN2@Release@3:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CStdInFileStream@@UAGKXZ ENDP			; CStdInFileStream::Release
_TEXT	ENDS
PUBLIC	??1CStdInFileStream@@UAE@XZ			; CStdInFileStream::~CStdInFileStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCStdInFileStream@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCStdInFileStream@@UAEPAXI@Z PROC			; CStdInFileStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CStdInFileStream@@UAE@XZ		; CStdInFileStream::~CStdInFileStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCStdInFileStream@@UAEPAXI@Z ENDP			; CStdInFileStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CStdInFileStream@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CStdInFileStream@@UAE@XZ PROC			; CStdInFileStream::~CStdInFileStream, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CStdInFileStream@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1CStdInFileStream@@UAE@XZ ENDP			; CStdInFileStream::~CStdInFileStream
_TEXT	ENDS
xdata$x	SEGMENT
__catchsym$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$0
__unwindtable$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$2
__ehfuncinfo$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z
	DD	01H
	DD	FLAT:__tryblocktable$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T77941 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_opRes$ = 12						; size = 4
?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z PROC ; CArchiveUpdateCallback::SetOperationResult
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 550
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 551
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 552
	mov	esi, esp
	mov	eax, DWORD PTR _opRes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	jmp	SHORT $LN2@SetOperati
__catch$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$0:
; Line 553
	mov	DWORD PTR $T77941[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@SetOperati
	ret	0
	mov	eax, __tryend$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$1
	ret	0
__tryend$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@SetOperati
$LN7@SetOperati:
	mov	eax, DWORD PTR $T77941[ebp]
$LN2@SetOperati:
; Line 554
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetOperationResult@CArchiveUpdateCallback@@UAGJH@Z ENDP ; CArchiveUpdateCallback::SetOperationResult
xdata$x	SEGMENT
__catchsym$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$0
__unwindtable$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$2
__ehfuncinfo$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv85 = -28						; size = 4
tv84 = -24						; size = 4
$T77954 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_inStream$ = 16						; size = 4
?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z PROC ; CArchiveUpdateCallback::GetStream
; Line 557
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-28], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 558
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 562
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+148]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR tv84[ebp], eax
	mov	edx, DWORD PTR tv84[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+8], 0
	setge	al
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	mov	eax, DWORD PTR tv85[ebp]
	jmp	SHORT $LN2@GetStream
__catch$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$0:
; Line 563
	mov	DWORD PTR $T77954[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@GetStream
	ret	0
	mov	eax, __tryend$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$1
	ret	0
__tryend$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@GetStream
$LN7@GetStream:
	mov	eax, DWORD PTR $T77954[ebp]
$LN2@GetStream:
; Line 564
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialInStream@@@Z ENDP ; CArchiveUpdateCallback::GetStream
PUBLIC	?Ptr@UString@@QBEPB_WXZ				; UString::Ptr
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	__$ArrayPad$
EXTRN	?ConvertUInt32ToString@@YGXIPA_W@Z:PROC		; ConvertUInt32ToString
EXTRN	?Archive_IsItem_Dir@@YGJPAUIInArchive@@IAA_N@Z:PROC ; Archive_IsItem_Dir
EXTRN	?GetItemPath@CArc@@QBEJIAAVUString@@@Z:PROC	; CArc::GetItemPath
xdata$x	SEGMENT
__catchsym$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$0
__tryblocktable$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z DD 00H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$5
__ehfuncinfo$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z
	DD	01H
	DD	FLAT:__tryblocktable$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$4
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv230 = -232						; size = 4
tv229 = -228						; size = 4
tv228 = -224						; size = 4
tv227 = -220						; size = 4
tv226 = -216						; size = 4
tv225 = -212						; size = 4
tv224 = -208						; size = 4
tv223 = -204						; size = 4
tv222 = -200						; size = 4
tv147 = -196						; size = 4
tv221 = -190						; size = 1
tv220 = -189						; size = 1
tv219 = -188						; size = 4
tv208 = -184						; size = 4
tv218 = -180						; size = 4
tv217 = -173						; size = 1
tv216 = -172						; size = 4
tv215 = -168						; size = 4
$T77975 = -164						; size = 4
$T77974 = -160						; size = 4
$T77973 = -156						; size = 4
$T77972 = -152						; size = 4
$T77969 = -148						; size = 4
$T77968 = -144						; size = 12
___result__$76261 = -132				; size = 4
___result__$76258 = -128				; size = 4
_ai$76255 = -124					; size = 4
_s$76249 = -120						; size = 4
_s2$76248 = -112					; size = 12
_temp$76247 = -92					; size = 32
_up$76243 = -56						; size = 4
_name$76239 = -48					; size = 12
_isDir$76237 = -25					; size = 1
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_indexType$ = 12					; size = 4
_index$ = 16						; size = 4
_op$ = 20						; size = 4
?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z PROC	; CArchiveUpdateCallback::ReportOperation
; Line 567
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 568
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 570
	mov	BYTE PTR _isDir$76237[ebp], 0
; Line 572
	cmp	DWORD PTR _indexType$[ebp], 3
	jne	$LN13@ReportOper
; Line 574
	lea	ecx, DWORD PTR _name$76239[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv215[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 575
	cmp	DWORD PTR _index$[ebp], -1
	je	$LN12@ReportOper
; Line 577
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+144]
	call	??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ; CRecordVector<CUpdatePair2>::operator[]
	mov	DWORD PTR tv216[ebp], eax
	mov	edx, DWORD PTR tv216[ebp]
	mov	DWORD PTR _up$76243[ebp], edx
; Line 578
	mov	ecx, DWORD PTR _up$76243[ebp]
	call	?ExistOnDisk@CUpdatePair2@@QBE_NXZ	; CUpdatePair2::ExistOnDisk
	mov	BYTE PTR tv217[ebp], al
	movzx	eax, BYTE PTR tv217[ebp]
	test	eax, eax
	je	$LN12@ReportOper
; Line 580
	mov	ecx, DWORD PTR _up$76243[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	eax, DWORD PTR $T77968[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+124]
	call	?GetLogPath@CDirItems@@QBE?AVUString@@I@Z ; CDirItems::GetLogPath
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv208[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	eax, DWORD PTR tv208[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$76239[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR $T77968[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 581
	mov	ecx, DWORD PTR _up$76243[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 36					; 00000024H
	call	??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ; CObjectVector<CDirItem>::operator[]
	mov	DWORD PTR tv219[ebp], eax
	mov	ecx, DWORD PTR tv219[ebp]
	call	?IsDir@CDirItem@@QBE_NXZ		; CDirItem::IsDir
	mov	BYTE PTR tv220[ebp], al
	mov	cl, BYTE PTR tv220[ebp]
	mov	BYTE PTR _isDir$76237[ebp], cl
$LN12@ReportOper:
; Line 584
	lea	ecx, DWORD PTR _name$76239[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	mov	BYTE PTR tv221[ebp], al
	movzx	edx, BYTE PTR tv221[ebp]
	test	edx, edx
	je	SHORT $LN17@ReportOper
	mov	DWORD PTR tv147[ebp], 0
	jmp	SHORT $LN18@ReportOper
$LN17@ReportOper:
	lea	ecx, DWORD PTR _name$76239[ebp]
	call	?Ptr@UString@@QBEPB_WXZ			; UString::Ptr
	mov	DWORD PTR tv222[ebp], eax
	mov	eax, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv147[ebp], eax
$LN18@ReportOper:
	mov	esi, esp
	movzx	ecx, BYTE PTR _isDir$76237[ebp]
	push	ecx
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv223[ebp], eax
	mov	ecx, DWORD PTR tv223[ebp]
	mov	DWORD PTR $T77969[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _name$76239[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T77969[ebp]
	jmp	$LN15@ReportOper
$LN13@ReportOper:
; Line 588
	lea	ecx, DWORD PTR _s2$76248[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv224[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 589
	mov	DWORD PTR _s$76249[ebp], 0
; Line 591
	cmp	DWORD PTR _indexType$[ebp], 1
	jne	$LN10@ReportOper
; Line 593
	cmp	DWORD PTR _index$[ebp], -1
	je	$LN9@ReportOper
; Line 595
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+140], 0
	je	SHORT $LN8@ReportOper
; Line 597
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+140]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	DWORD PTR tv225[ebp], eax
	mov	edx, DWORD PTR tv225[ebp]
	mov	DWORD PTR _ai$76255[ebp], edx
; Line 598
	mov	ecx, DWORD PTR _ai$76255[ebp]
	add	ecx, 16					; 00000010H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv226[ebp], eax
	mov	eax, DWORD PTR tv226[ebp]
	mov	DWORD PTR _s$76249[ebp], eax
; Line 599
	mov	ecx, DWORD PTR _ai$76255[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR _isDir$76237[ebp], dl
	jmp	$LN9@ReportOper
$LN8@ReportOper:
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	$LN9@ReportOper
; Line 603
	lea	ecx, DWORD PTR _s2$76248[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	call	?GetItemPath@CArc@@QBEJIAAVUString@@@Z	; CArc::GetItemPath
	mov	DWORD PTR tv227[ebp], eax
	mov	ecx, DWORD PTR tv227[ebp]
	mov	DWORD PTR ___result__$76258[ebp], ecx
	cmp	DWORD PTR ___result__$76258[ebp], 0
	je	SHORT $LN5@ReportOper
	mov	edx, DWORD PTR ___result__$76258[ebp]
	mov	DWORD PTR $T77972[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76248[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T77972[ebp]
	jmp	$LN15@ReportOper
$LN5@ReportOper:
; Line 604
	lea	ecx, DWORD PTR _s2$76248[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv228[ebp], eax
	mov	eax, DWORD PTR tv228[ebp]
	mov	DWORD PTR _s$76249[ebp], eax
; Line 605
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+132]
	call	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
	mov	DWORD PTR tv229[ebp], eax
	lea	edx, DWORD PTR _isDir$76237[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv229[ebp]
	push	ecx
	call	?Archive_IsItem_Dir@@YGJPAUIInArchive@@IAA_N@Z ; Archive_IsItem_Dir
	mov	DWORD PTR ___result__$76261[ebp], eax
	cmp	DWORD PTR ___result__$76261[ebp], 0
	je	SHORT $LN9@ReportOper
	mov	edx, DWORD PTR ___result__$76261[ebp]
	mov	DWORD PTR $T77973[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76248[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T77973[ebp]
	jmp	$LN15@ReportOper
$LN9@ReportOper:
; Line 608
	jmp	SHORT $LN3@ReportOper
$LN10@ReportOper:
; Line 609
	cmp	DWORD PTR _indexType$[ebp], 2
	jne	SHORT $LN3@ReportOper
; Line 611
	mov	eax, 35					; 00000023H
	mov	WORD PTR _temp$76247[ebp], ax
; Line 612
	lea	ecx, DWORD PTR _temp$76247[ebp+2]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	call	?ConvertUInt32ToString@@YGXIPA_W@Z	; ConvertUInt32ToString
; Line 613
	lea	eax, DWORD PTR _temp$76247[ebp]
	mov	DWORD PTR _s$76249[ebp], eax
$LN3@ReportOper:
; Line 616
	cmp	DWORD PTR _s$76249[ebp], 0
	jne	SHORT $LN1@ReportOper
; Line 617
	mov	DWORD PTR _s$76249[ebp], OFFSET $SG76267
$LN1@ReportOper:
; Line 619
	mov	esi, esp
	movzx	ecx, BYTE PTR _isDir$76237[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$76249[ebp]
	push	edx
	mov	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv230[ebp], eax
	mov	ecx, DWORD PTR tv230[ebp]
	mov	DWORD PTR $T77974[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76248[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T77974[ebp]
	jmp	SHORT $LN15@ReportOper
__catch$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$0:
; Line 621
	mov	DWORD PTR $T77975[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN25@ReportOper
	ret	0
	mov	eax, __tryend$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$1
	ret	0
__tryend$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN15@ReportOper
$LN25@ReportOper:
	mov	eax, DWORD PTR $T77975[ebp]
$LN15@ReportOper:
; Line 622
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@ReportOper
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN33@ReportOper:
	DD	4
	DD	$LN32@ReportOper
$LN32@ReportOper:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN27@ReportOper
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN28@ReportOper
	DD	-92					; ffffffa4H
	DD	32					; 00000020H
	DD	$LN29@ReportOper
	DD	-112					; ffffff90H
	DD	12					; 0000000cH
	DD	$LN30@ReportOper
$LN30@ReportOper:
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN29@ReportOper:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN28@ReportOper:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN27@ReportOper:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$2:
	lea	ecx, DWORD PTR _name$76239[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$3:
	lea	ecx, DWORD PTR $T77968[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z$4:
	lea	ecx, DWORD PTR _s2$76248[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReportOperation@CArchiveUpdateCallback@@UAGJIII@Z ENDP	; CArchiveUpdateCallback::ReportOperation
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Ptr@UString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Ptr@UString@@QBEPB_WXZ PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; Line 477
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?Ptr@UString@@QBEPB_WXZ ENDP				; UString::Ptr
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?Archive_GetItemBoolProp@@YGJPAUIInArchive@@IKAA_N@Z:PROC ; Archive_GetItemBoolProp
xdata$x	SEGMENT
__catchsym$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$0
__tryblocktable$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$3
__unwindtable$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z
	DD	01H
	DD	FLAT:__tryblocktable$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv173 = -160						; size = 4
tv172 = -156						; size = 4
tv171 = -152						; size = 4
tv170 = -148						; size = 4
tv169 = -144						; size = 4
tv168 = -140						; size = 4
tv167 = -136						; size = 4
tv166 = -132						; size = 4
tv165 = -128						; size = 4
$T78006 = -124						; size = 4
$T78005 = -120						; size = 4
$T78004 = -116						; size = 4
$T78003 = -112						; size = 4
$T78002 = -108						; size = 4
___result__$76296 = -104				; size = 4
___result__$76292 = -100				; size = 4
_s$76281 = -96						; size = 4
_s2$76280 = -88						; size = 12
_temp$76279 = -68					; size = 32
_isEncrypted$76278 = -25				; size = 1
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_indexType$ = 12					; size = 4
_index$ = 16						; size = 4
_opRes$ = 20						; size = 4
?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z PROC ; CArchiveUpdateCallback::ReportExtractResult
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 625
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 144				; 00000090H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 626
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 628
	mov	BYTE PTR _isEncrypted$76278[ebp], 0
; Line 630
	lea	ecx, DWORD PTR _s2$76280[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR tv165[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 631
	mov	DWORD PTR _s$76281[ebp], 0
; Line 633
	cmp	DWORD PTR _indexType$[ebp], 3
	jne	SHORT $LN11@ReportExtr
; Line 647
	mov	DWORD PTR $T78002[ebp], -2147467259	; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76280[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T78002[ebp]
	jmp	$LN13@ReportExtr
$LN11@ReportExtr:
; Line 650
	cmp	DWORD PTR _indexType$[ebp], 1
	jne	$LN10@ReportExtr
; Line 652
	cmp	DWORD PTR _index$[ebp], -1
	je	$LN9@ReportExtr
; Line 654
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN8@ReportExtr
; Line 655
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+136]
	call	??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ; CObjectVector<CArcItem>::operator[]
	mov	DWORD PTR tv166[ebp], eax
	mov	ecx, DWORD PTR tv166[ebp]
	add	ecx, 16					; 00000010H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv167[ebp], eax
	mov	eax, DWORD PTR tv167[ebp]
	mov	DWORD PTR _s$76281[ebp], eax
	jmp	SHORT $LN7@ReportExtr
$LN8@ReportExtr:
; Line 656
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	je	SHORT $LN7@ReportExtr
; Line 658
	lea	edx, DWORD PTR _s2$76280[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+128]
	call	?GetItemPath@CArc@@QBEJIAAVUString@@@Z	; CArc::GetItemPath
	mov	DWORD PTR tv168[ebp], eax
	mov	edx, DWORD PTR tv168[ebp]
	mov	DWORD PTR ___result__$76292[ebp], edx
	cmp	DWORD PTR ___result__$76292[ebp], 0
	je	SHORT $LN5@ReportExtr
	mov	eax, DWORD PTR ___result__$76292[ebp]
	mov	DWORD PTR $T78003[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76280[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T78003[ebp]
	jmp	$LN13@ReportExtr
$LN5@ReportExtr:
; Line 659
	lea	ecx, DWORD PTR _s2$76280[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv169[ebp], eax
	mov	ecx, DWORD PTR tv169[ebp]
	mov	DWORD PTR _s$76281[ebp], ecx
$LN7@ReportExtr:
; Line 661
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
	mov	DWORD PTR tv170[ebp], eax
	cmp	DWORD PTR tv170[ebp], 0
	je	SHORT $LN9@ReportExtr
; Line 663
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
	mov	DWORD PTR tv171[ebp], eax
	lea	edx, DWORD PTR _isEncrypted$76278[ebp]
	push	edx
	push	15					; 0000000fH
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv171[ebp]
	push	ecx
	call	?Archive_GetItemBoolProp@@YGJPAUIInArchive@@IKAA_N@Z ; Archive_GetItemBoolProp
	mov	DWORD PTR ___result__$76296[ebp], eax
	cmp	DWORD PTR ___result__$76296[ebp], 0
	je	SHORT $LN9@ReportExtr
	mov	edx, DWORD PTR ___result__$76296[ebp]
	mov	DWORD PTR $T78004[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76280[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T78004[ebp]
	jmp	$LN13@ReportExtr
$LN9@ReportExtr:
; Line 666
	jmp	SHORT $LN2@ReportExtr
$LN10@ReportExtr:
; Line 667
	cmp	DWORD PTR _indexType$[ebp], 2
	jne	SHORT $LN2@ReportExtr
; Line 669
	mov	eax, 35					; 00000023H
	mov	WORD PTR _temp$76279[ebp], ax
; Line 670
	lea	ecx, DWORD PTR _temp$76279[ebp+2]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	call	?ConvertUInt32ToString@@YGXIPA_W@Z	; ConvertUInt32ToString
; Line 671
	lea	eax, DWORD PTR _temp$76279[ebp]
	mov	DWORD PTR _s$76281[ebp], eax
$LN2@ReportExtr:
; Line 674
	movzx	ecx, BYTE PTR _isEncrypted$76278[ebp]
	push	ecx
	call	?BoolToInt@@YGH_N@Z			; BoolToInt
	mov	DWORD PTR tv172[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _s$76281[ebp]
	push	edx
	mov	eax, DWORD PTR tv172[ebp]
	push	eax
	mov	ecx, DWORD PTR _opRes$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+116]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+116]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv173[ebp], eax
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR $T78005[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _s2$76280[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T78005[ebp]
	jmp	SHORT $LN13@ReportExtr
__catch$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$0:
; Line 676
	mov	DWORD PTR $T78006[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN19@ReportExtr
	ret	0
	mov	eax, __tryend$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$1
	ret	0
__tryend$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN13@ReportExtr
$LN19@ReportExtr:
	mov	eax, DWORD PTR $T78006[ebp]
$LN13@ReportExtr:
; Line 677
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@ReportExtr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 160				; 000000a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN26@ReportExtr:
	DD	3
	DD	$LN25@ReportExtr
$LN25@ReportExtr:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN21@ReportExtr
	DD	-68					; ffffffbcH
	DD	32					; 00000020H
	DD	$LN22@ReportExtr
	DD	-88					; ffffffa8H
	DD	12					; 0000000cH
	DD	$LN23@ReportExtr
$LN23@ReportExtr:
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN22@ReportExtr:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN21@ReportExtr:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z$2:
	lea	ecx, DWORD PTR _s2$76280[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-164]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReportExtractResult@CArchiveUpdateCallback@@UAGJIIH@Z ENDP ; CArchiveUpdateCallback::ReportExtractResult
PUBLIC	??A?$CRecordVector@_K@@QAEAA_KI@Z		; CRecordVector<unsigned __int64>::operator[]
PUBLIC	?Size@?$CRecordVector@_K@@QBEIXZ		; CRecordVector<unsigned __int64>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_size$ = 16						; size = 4
?GetVolumeSize@CArchiveUpdateCallback@@UAGJIPA_K@Z PROC	; CArchiveUpdateCallback::GetVolumeSize
; Line 680
	push	ebp
	mov	ebp, esp
; Line 681
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Size@?$CRecordVector@_K@@QBEIXZ	; CRecordVector<unsigned __int64>::Size
	test	eax, eax
	jne	SHORT $LN2@GetVolumeS
; Line 682
	mov	eax, 1
	jmp	SHORT $LN3@GetVolumeS
$LN2@GetVolumeS:
; Line 683
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Size@?$CRecordVector@_K@@QBEIXZ	; CRecordVector<unsigned __int64>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN1@GetVolumeS
; Line 684
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Size@?$CRecordVector@_K@@QBEIXZ	; CRecordVector<unsigned __int64>::Size
	sub	eax, 1
	mov	DWORD PTR _index$[ebp], eax
$LN1@GetVolumeS:
; Line 685
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??A?$CRecordVector@_K@@QAEAA_KI@Z	; CRecordVector<unsigned __int64>::operator[]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], eax
; Line 686
	xor	eax, eax
$LN3@GetVolumeS:
; Line 687
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?GetVolumeSize@CArchiveUpdateCallback@@UAGJIPA_K@Z ENDP	; CArchiveUpdateCallback::GetVolumeSize
_TEXT	ENDS
PUBLIC	?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::Detach
PUBLIC	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
PUBLIC	?Create@COutFileStream@@QAE_NPB_W_N@Z		; COutFileStream::Create
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	??0COutFileStream@@QAE@XZ			; COutFileStream::COutFileStream
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	__$ArrayPad$
EXTRN	?InsertAtFront@UString@@QAEX_W@Z:PROC		; UString::InsertAtFront
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
xdata$x	SEGMENT
__catchsym$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$0
__tryblocktable$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z DD 00H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$6
__ehfuncinfo$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$5
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv164 = -172						; size = 4
tv163 = -165						; size = 1
tv128 = -164						; size = 4
tv95 = -160						; size = 4
tv162 = -156						; size = 4
tv160 = -152						; size = 4
tv159 = -148						; size = 4
tv158 = -144						; size = 4
tv157 = -140						; size = 4
$T78033 = -136						; size = 4
$T78032 = -132						; size = 4
$T78031 = -128						; size = 4
$T78028 = -124						; size = 4
$T78027 = -120						; size = 4
_streamLoc$76332 = -112					; size = 4
_streamSpec$76326 = -104				; size = 4
_fileName$76325 = -96					; size = 12
_res$76321 = -76					; size = 12
_temp$76320 = -56					; size = 32
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_volumeStream$ = 16					; size = 4
?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z PROC ; CArchiveUpdateCallback::GetVolumeStream
; Line 690
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 156				; 0000009cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-172]
	mov	ecx, 39					; 00000027H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 691
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 693
	lea	eax, DWORD PTR _temp$76320[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPA_W@Z	; ConvertUInt32ToString
; Line 694
	lea	edx, DWORD PTR _temp$76320[ebp]
	push	edx
	lea	ecx, DWORD PTR _res$76321[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR tv157[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
$LN3@GetVolumeS@2:
; Line 695
	lea	ecx, DWORD PTR _res$76321[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	DWORD PTR tv158[ebp], eax
	cmp	DWORD PTR tv158[ebp], 2
	jae	SHORT $LN2@GetVolumeS@2
; Line 696
	push	48					; 00000030H
	lea	ecx, DWORD PTR _res$76321[ebp]
	call	?InsertAtFront@UString@@QAEX_W@Z	; UString::InsertAtFront
	jmp	SHORT $LN3@GetVolumeS@2
$LN2@GetVolumeS@2:
; Line 697
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 100				; 00000064H
	push	eax
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv159[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 698
	push	46					; 0000002eH
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
; Line 699
	lea	ecx, DWORD PTR _res$76321[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 700
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 112				; 00000070H
	push	edx
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 701
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv160[ebp], eax
	mov	eax, DWORD PTR tv160[ebp]
	mov	DWORD PTR $T78028[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	cmp	DWORD PTR $T78028[ebp], 0
	je	SHORT $LN7@GetVolumeS@2
	mov	ecx, DWORD PTR $T78028[ebp]
	call	??0COutFileStream@@QAE@XZ
	mov	DWORD PTR tv162[ebp], eax
	mov	ecx, DWORD PTR tv162[ebp]
	mov	DWORD PTR tv95[ebp], ecx
	jmp	SHORT $LN8@GetVolumeS@2
$LN7@GetVolumeS@2:
	mov	DWORD PTR tv95[ebp], 0
$LN8@GetVolumeS@2:
	mov	edx, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T78027[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	eax, DWORD PTR $T78027[ebp]
	mov	DWORD PTR _streamSpec$76326[ebp], eax
; Line 702
	mov	ecx, DWORD PTR _streamSpec$76326[ebp]
	push	ecx
	lea	ecx, DWORD PTR _streamLoc$76332[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 703
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv128[ebp], eax
	push	0
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	mov	ecx, DWORD PTR _streamSpec$76326[ebp]
	call	?Create@COutFileStream@@QAE_NPB_W_N@Z	; COutFileStream::Create
	mov	BYTE PTR tv163[ebp], al
	movzx	eax, BYTE PTR tv163[ebp]
	test	eax, eax
	jne	SHORT $LN1@GetVolumeS@2
; Line 704
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T78031[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _streamLoc$76332[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _res$76321[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T78031[ebp]
	jmp	SHORT $LN5@GetVolumeS@2
$LN1@GetVolumeS@2:
; Line 705
	lea	ecx, DWORD PTR _streamLoc$76332[ebp]
	call	?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::Detach
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR _volumeStream$[ebp]
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR [ecx], edx
; Line 706
	mov	DWORD PTR $T78032[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _streamLoc$76332[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _res$76321[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR $T78032[ebp]
	jmp	SHORT $LN5@GetVolumeS@2
__catch$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$0:
; Line 707
	mov	DWORD PTR $T78033[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN16@GetVolumeS@2
	ret	0
	mov	eax, __tryend$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$1
	ret	0
__tryend$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN5@GetVolumeS@2
$LN16@GetVolumeS@2:
	mov	eax, DWORD PTR $T78033[ebp]
$LN5@GetVolumeS@2:
; Line 708
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@GetVolumeS@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN24@GetVolumeS@2:
	DD	4
	DD	$LN23@GetVolumeS@2
$LN23@GetVolumeS@2:
	DD	-56					; ffffffc8H
	DD	32					; 00000020H
	DD	$LN18@GetVolumeS@2
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN19@GetVolumeS@2
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN20@GetVolumeS@2
	DD	-112					; ffffff90H
	DD	4
	DD	$LN21@GetVolumeS@2
$LN21@GetVolumeS@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
$LN20@GetVolumeS@2:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN19@GetVolumeS@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN18@GetVolumeS@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$2:
	lea	ecx, DWORD PTR _res$76321[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$3:
	lea	ecx, DWORD PTR _fileName$76325[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$4:
	mov	eax, DWORD PTR $T78028[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z$5:
	lea	ecx, DWORD PTR _streamLoc$76332[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__ehhandler$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-176]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetVolumeStream@CArchiveUpdateCallback@@UAGJIPAPAUISequentialOutStream@@@Z ENDP ; CArchiveUpdateCallback::GetVolumeStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
_TEXT	ENDS
EXTRN	?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z:PROC ; NWindows::NFile::NIO::COutFile::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@COutFileStream@@QAE_NPB_W_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileName$ = 8						; size = 4
_createAlways$ = 12					; size = 1
?Create@COutFileStream@@QAE_NPB_W_N@Z PROC		; COutFileStream::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 120
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
; Line 122
	movzx	ecx, BYTE PTR _createAlways$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@COutFile@NIO@NFile@NWindows@@QAE_NPB_W_N@Z ; NWindows::NFile::NIO::COutFile::Create
; Line 123
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Create@COutFileStream@@QAE_NPB_W_N@Z ENDP		; COutFileStream::Create
_TEXT	ENDS
PUBLIC	??0COutFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::COutFile::COutFile
PUBLIC	??_7COutFileStream@@6B@				; COutFileStream::`vftable'
PUBLIC	??0IOutStream@@QAE@XZ				; IOutStream::IOutStream
PUBLIC	??_R4COutFileStream@@6B@			; COutFileStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCOutFileStream@@@8			; COutFileStream `RTTI Type Descriptor'
PUBLIC	??_R3COutFileStream@@8				; COutFileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2COutFileStream@@8				; COutFileStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@COutFileStream@@8			; COutFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IOutStream@@8			; IOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIOutStream@@@8				; IOutStream `RTTI Type Descriptor'
PUBLIC	??_R3IOutStream@@8				; IOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IOutStream@@8				; IOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialOutStream@@@8		; ISequentialOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Base Class Array'
PUBLIC	?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z ; COutFileStream::QueryInterface
PUBLIC	?AddRef@COutFileStream@@UAGKXZ			; COutFileStream::AddRef
PUBLIC	?Release@COutFileStream@@UAGKXZ			; COutFileStream::Release
EXTRN	?Write@COutFileStream@@UAGJPBXIPAI@Z:PROC	; COutFileStream::Write
EXTRN	?Seek@COutFileStream@@UAGJ_JIPA_K@Z:PROC	; COutFileStream::Seek
EXTRN	?SetSize@COutFileStream@@UAGJ_K@Z:PROC		; COutFileStream::SetSize
EXTRN	??_ECOutFileStream@@UAEPAXI@Z:PROC		; COutFileStream::`vector deleting destructor'
;	COMDAT ??_R2ISequentialOutStream@@8
rdata$r	SEGMENT
??_R2ISequentialOutStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8 ; ISequentialOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialOutStream@@8
rdata$r	SEGMENT
??_R3ISequentialOutStream@@8 DD 00H			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialOutStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R2IOutStream@@8
rdata$r	SEGMENT
??_R2IOutStream@@8 DD FLAT:??_R1A@?0A@EA@IOutStream@@8	; IOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IOutStream@@8
rdata$r	SEGMENT
??_R3IOutStream@@8 DD 00H				; IOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIOutStream@@@8
_DATA	SEGMENT
??_R0?AUIOutStream@@@8 DD FLAT:??_7type_info@@6B@	; IOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IOutStream@@8 DD FLAT:??_R0?AUIOutStream@@@8 ; IOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@COutFileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@COutFileStream@@8 DD FLAT:??_R0?AVCOutFileStream@@@8 ; COutFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COutFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R2COutFileStream@@8
rdata$r	SEGMENT
??_R2COutFileStream@@8 DD FLAT:??_R1A@?0A@EA@COutFileStream@@8 ; COutFileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3COutFileStream@@8
rdata$r	SEGMENT
??_R3COutFileStream@@8 DD 00H				; COutFileStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2COutFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCOutFileStream@@@8
_DATA	SEGMENT
??_R0?AVCOutFileStream@@@8 DD FLAT:??_7type_info@@6B@	; COutFileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCOutFileStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R4COutFileStream@@6B@
rdata$r	SEGMENT
??_R4COutFileStream@@6B@ DD 00H				; COutFileStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCOutFileStream@@@8
	DD	FLAT:??_R3COutFileStream@@8
rdata$r	ENDS
;	COMDAT ??_7COutFileStream@@6B@
CONST	SEGMENT
??_7COutFileStream@@6B@ DD FLAT:??_R4COutFileStream@@6B@ ; COutFileStream::`vftable'
	DD	FLAT:?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@COutFileStream@@UAGKXZ
	DD	FLAT:?Release@COutFileStream@@UAGKXZ
	DD	FLAT:?Write@COutFileStream@@UAGJPBXIPAI@Z
	DD	FLAT:?Seek@COutFileStream@@UAGJ_JIPA_K@Z
	DD	FLAT:?SetSize@COutFileStream@@UAGJ_K@Z
	DD	FLAT:??_ECOutFileStream@@UAEPAXI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0COutFileStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutFileStream@@QAE@XZ PROC				; COutFileStream::COutFileStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7COutFileStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0COutFile@NIO@NFile@NWindows@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutFileStream@@QAE@XZ ENDP				; COutFileStream::COutFileStream
_TEXT	ENDS
EXTRN	_IID_IOutStream:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z PROC ; COutFileStream::QueryInterface, COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@4
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN3@QueryInter@4
$LN4@QueryInter@4:
	push	OFFSET _IID_IOutStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@4
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN3@QueryInter@4
$LN2@QueryInter@4:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN5@QueryInter@4
$LN3@QueryInter@4:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN5@QueryInter@4:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@COutFileStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; COutFileStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@COutFileStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@COutFileStream@@UAGKXZ PROC			; COutFileStream::AddRef, COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@COutFileStream@@UAGKXZ ENDP			; COutFileStream::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@COutFileStream@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T78068 = -8						; size = 4
$T78067 = -4						; size = 4
_this$ = 8						; size = 4
?Release@COutFileStream@@UAGKXZ PROC			; COutFileStream::Release, COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release@4
$LN1@Release@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T78068[ebp], edx
	mov	eax, DWORD PTR $T78068[ebp]
	mov	DWORD PTR $T78067[ebp], eax
	cmp	DWORD PTR $T78067[ebp], 0
	je	SHORT $LN4@Release@4
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T78067[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T78067[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release@4
$LN4@Release@4:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release@4:
	xor	eax, eax
$LN2@Release@4:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@COutFileStream@@UAGKXZ ENDP			; COutFileStream::Release
_TEXT	ENDS
PUBLIC	??1COutFileStream@@UAE@XZ			; COutFileStream::~COutFileStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCOutFileStream@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCOutFileStream@@UAEPAXI@Z PROC			; COutFileStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutFileStream@@UAE@XZ		; COutFileStream::~COutFileStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCOutFileStream@@UAEPAXI@Z ENDP			; COutFileStream::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1COutFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::COutFile::~COutFile
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutFileStream@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutFileStream@@UAE@XZ PROC				; COutFileStream::~COutFileStream, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7COutFileStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1COutFile@NIO@NFile@NWindows@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutFileStream@@UAE@XZ ENDP				; COutFileStream::~COutFileStream
_TEXT	ENDS
PUBLIC	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::~CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::COutFile::~COutFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::~CFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::COutFile::~COutFile
_TEXT	ENDS
EXTRN	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ:PROC ; NWindows::NFile::NIO::CFileBase::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::~CFileBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::~CFileBase
_TEXT	ENDS
PUBLIC	??_7IOutStream@@6B@				; IOutStream::`vftable'
PUBLIC	??0ISequentialOutStream@@QAE@XZ			; ISequentialOutStream::ISequentialOutStream
PUBLIC	??_R4IOutStream@@6B@				; IOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4IOutStream@@6B@
rdata$r	SEGMENT
??_R4IOutStream@@6B@ DD 00H				; IOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIOutStream@@@8
	DD	FLAT:??_R3IOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7IOutStream@@6B@
CONST	SEGMENT
??_7IOutStream@@6B@ DD FLAT:??_R4IOutStream@@6B@	; IOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOutStream@@QAE@XZ PROC				; IOutStream::IOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialOutStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOutStream@@QAE@XZ ENDP				; IOutStream::IOutStream
_TEXT	ENDS
PUBLIC	??_7ISequentialOutStream@@6B@			; ISequentialOutStream::`vftable'
PUBLIC	??_R4ISequentialOutStream@@6B@			; ISequentialOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialOutStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialOutStream@@6B@ DD 00H			; ISequentialOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialOutStream@@@8
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialOutStream@@6B@
CONST	SEGMENT
??_7ISequentialOutStream@@6B@ DD FLAT:??_R4ISequentialOutStream@@6B@ ; ISequentialOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialOutStream@@QAE@XZ PROC			; ISequentialOutStream::ISequentialOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialOutStream@@QAE@XZ ENDP			; ISequentialOutStream::ISequentialOutStream
_TEXT	ENDS
PUBLIC	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0COutFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::COutFile::COutFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::CFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::COutFile::COutFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::CFileBase, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::CFileBase
_TEXT	ENDS
xdata$x	SEGMENT
__catchsym$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$0
__unwindtable$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$2
__ehfuncinfo$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv77 = -24						; size = 4
$T78092 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_passwordIsDefined$ = 12				; size = 4
_password$ = 16						; size = 4
?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z PROC ; CArchiveUpdateCallback::CryptoGetTextPassword2
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 711
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 712
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 713
	mov	esi, esp
	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _passwordIsDefined$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+104]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv77[ebp]
	jmp	SHORT $LN2@CryptoGetT
__catch$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$0:
; Line 714
	mov	DWORD PTR $T78092[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@CryptoGetT
	ret	0
	mov	eax, __tryend$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$1
	ret	0
__tryend$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@CryptoGetT
$LN7@CryptoGetT:
	mov	eax, DWORD PTR $T78092[ebp]
$LN2@CryptoGetT:
; Line 715
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoGetTextPassword2@CArchiveUpdateCallback@@UAGJPAHPAPA_W@Z ENDP ; CArchiveUpdateCallback::CryptoGetTextPassword2
xdata$x	SEGMENT
__catchsym$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$0
__unwindtable$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$2
__ehfuncinfo$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T78105 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_password$ = 12						; size = 4
?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z PROC ; CArchiveUpdateCallback::CryptoGetTextPassword
; Line 718
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 719
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 720
	mov	esi, esp
	mov	eax, DWORD PTR _password$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR tv76[ebp]
	jmp	SHORT $LN2@CryptoGetT@2
__catch$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$0:
; Line 721
	mov	DWORD PTR $T78105[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@CryptoGetT@2
	ret	0
	mov	eax, __tryend$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$1
	ret	0
__tryend$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@CryptoGetT@2
$LN7@CryptoGetT@2:
	mov	eax, DWORD PTR $T78105[ebp]
$LN2@CryptoGetT@2:
; Line 722
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoGetTextPassword@CArchiveUpdateCallback@@UAGJPAPA_W@Z ENDP ; CArchiveUpdateCallback::CryptoGetTextPassword
PUBLIC	_HRESULT_FROM_WIN32@4
PUBLIC	??A?$CRecordVector@I@@QAEAAII@Z			; CRecordVector<unsigned int>::operator[]
PUBLIC	?Size@?$CRecordVector@I@@QBEIXZ			; CRecordVector<unsigned int>::Size
xdata$x	SEGMENT
__unwindtable$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z$0
__ehfuncinfo$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T78118 = -44						; size = 4
___result__$76374 = -40					; size = 4
_i$76369 = -36						; size = 4
_index$76367 = -32					; size = 4
_lock$76366 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_val$ = 8						; size = 4
_error$ = 12						; size = 4
?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z PROC ; CArchiveUpdateCallback::InFileStream_On_Error
; _this$ = ecx
; Line 725
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	cmp	DWORD PTR _error$[ebp], 33		; 00000021H
	jne	$LN6@InFileStre
; Line 728
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$76366[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 729
	mov	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _index$76367[ebp], eax
; Line 730
	mov	DWORD PTR _i$76369[ebp], 0
	jmp	SHORT $LN5@InFileStre
$LN4@InFileStre:
	mov	ecx, DWORD PTR _i$76369[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$76369[ebp], ecx
$LN5@InFileStre:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Size@?$CRecordVector@I@@QBEIXZ		; CRecordVector<unsigned int>::Size
	cmp	DWORD PTR _i$76369[ebp], eax
	jae	SHORT $LN3@InFileStre
; Line 732
	mov	edx, DWORD PTR _i$76369[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$CRecordVector@I@@QAEAAII@Z		; CRecordVector<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _index$76367[ebp]
	jne	SHORT $LN2@InFileStre
; Line 734
	mov	esi, esp
	mov	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$76369[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$76374[ebp], eax
	cmp	DWORD PTR ___result__$76374[ebp], 0
	je	SHORT $LN1@InFileStre
	mov	ecx, DWORD PTR ___result__$76374[ebp]
	mov	DWORD PTR $T78118[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$76366[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	mov	eax, DWORD PTR $T78118[ebp]
	jmp	SHORT $LN7@InFileStre
$LN1@InFileStre:
; Line 735
	jmp	SHORT $LN3@InFileStre
$LN2@InFileStre:
; Line 737
	jmp	$LN4@InFileStre
$LN3@InFileStre:
; Line 738
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$76366[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
$LN6@InFileStre:
; Line 739
	mov	edx, DWORD PTR _error$[ebp]
	push	edx
	call	_HRESULT_FROM_WIN32@4
$LN7@InFileStre:
; Line 740
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@InFileStre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@InFileStre:
	DD	1
	DD	$LN12@InFileStre
$LN12@InFileStre:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@InFileStre
$LN10@InFileStre:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z$0:
	lea	ecx, DWORD PTR _lock$76366[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InFileStream_On_Error@CArchiveUpdateCallback@@UAEJIK@Z ENDP ; CArchiveUpdateCallback::InFileStream_On_Error
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32@4 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
_HRESULT_FROM_WIN32@4 ENDP
_TEXT	ENDS
PUBLIC	__TI1H
PUBLIC	?Delete@?$CObjectVector@VUString@@@@QAEXI@Z	; CObjectVector<UString>::Delete
PUBLIC	?Delete@?$CRecordVector@I@@QAEXI@Z		; CRecordVector<unsigned int>::Delete
PUBLIC	__CTA1H
PUBLIC	__CT??_R0H@84
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
EXTRN	__CxxThrowException@8:PROC
;	COMDAT ??_R0H@8
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT __CT??_R0H@84
xdata$x	SEGMENT
__CT??_R0H@84 DD 01H
	DD	FLAT:??_R0H@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1H
xdata$x	SEGMENT
__CTA1H	DD	01H
	DD	FLAT:__CT??_R0H@84
xdata$x	ENDS
;	COMDAT __TI1H
xdata$x	SEGMENT
__TI1H	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z$0
__ehfuncinfo$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T78132 = -40						; size = 4
_i$76384 = -36						; size = 4
_index$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_val$ = 8						; size = 4
?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z PROC ; CArchiveUpdateCallback::InFileStream_On_Destroy
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	push	OFFSET _g_CriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 745
	mov	eax, DWORD PTR _val$[ebp]
	mov	DWORD PTR _index$[ebp], eax
; Line 746
	mov	DWORD PTR _i$76384[ebp], 0
	jmp	SHORT $LN4@InFileStre@2
$LN3@InFileStre@2:
	mov	ecx, DWORD PTR _i$76384[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$76384[ebp], ecx
$LN4@InFileStre@2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Size@?$CRecordVector@I@@QBEIXZ		; CRecordVector<unsigned int>::Size
	cmp	DWORD PTR _i$76384[ebp], eax
	jae	SHORT $LN2@InFileStre@2
; Line 748
	mov	edx, DWORD PTR _i$76384[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??A?$CRecordVector@I@@QAEAAII@Z		; CRecordVector<unsigned int>::operator[]
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _index$[ebp]
	jne	SHORT $LN1@InFileStre@2
; Line 750
	mov	ecx, DWORD PTR _i$76384[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Delete@?$CRecordVector@I@@QAEXI@Z	; CRecordVector<unsigned int>::Delete
; Line 751
	mov	edx, DWORD PTR _i$76384[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Delete@?$CObjectVector@VUString@@@@QAEXI@Z ; CObjectVector<UString>::Delete
; Line 752
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	jmp	SHORT $LN6@InFileStre@2
$LN1@InFileStre@2:
; Line 754
	jmp	SHORT $LN3@InFileStre@2
$LN2@InFileStre@2:
; Line 755
	mov	DWORD PTR $T78132[ebp], 20141125	; 01335445H
	push	OFFSET __TI1H
	lea	eax, DWORD PTR $T78132[ebp]
	push	eax
	call	__CxxThrowException@8
; Line 756
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
$LN6@InFileStre@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@InFileStre@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN11@InFileStre@2:
	DD	1
	DD	$LN10@InFileStre@2
$LN10@InFileStre@2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@InFileStre@2
$LN8@InFileStre@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?InFileStream_On_Destroy@CArchiveUpdateCallback@@UAEXI@Z ENDP ; CArchiveUpdateCallback::InFileStream_On_Destroy
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VUString@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VUString@@@@QBEIXZ PROC		; CObjectVector<UString>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VUString@@@@QBEIXZ ENDP		; CObjectVector<UString>::Size
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::CObjectVector<UString>
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z PROC	; CObjectVector<UString>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VUString@@@@QBEABVUString@@I@Z ENDP	; CObjectVector<UString>::operator[]
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z PROC	; CObjectVector<UString>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ENDP	; CObjectVector<UString>::operator[]
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T78153 = -24						; size = 4
$T78152 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z PROC ; CObjectVector<UString>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T78153[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T78153[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T78153[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T78152[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T78152[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z$0:
	mov	eax, DWORD PTR $T78153[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@VUString@@@@QAEIABVUString@@@Z ENDP ; CObjectVector<UString>::Add
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GUString@@QAEPAXI@Z				; UString::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T78166 = -28						; size = 4
$T78165 = -24						; size = 4
_i$76408 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::~CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$76408[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$76408[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$76408[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$76408[ebp], eax
	mov	ecx, DWORD PTR _i$76408[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T78166[ebp], edx
	mov	eax, DWORD PTR $T78166[ebp]
	mov	DWORD PTR $T78165[ebp], eax
	cmp	DWORD PTR $T78165[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T78165[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	?Delete@?$CRecordVector@PAX@@QAEXI@Z		; CRecordVector<void *>::Delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Delete@?$CObjectVector@VUString@@@@QAEXI@Z
_TEXT	SEGMENT
tv71 = -16						; size = 4
$T78179 = -12						; size = 4
$T78178 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Delete@?$CObjectVector@VUString@@@@QAEXI@Z PROC	; CObjectVector<UString>::Delete, COMDAT
; _this$ = ecx
; Line 527
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 528
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T78179[ebp], ecx
	mov	edx, DWORD PTR $T78179[ebp]
	mov	DWORD PTR $T78178[ebp], edx
	cmp	DWORD PTR $T78178[ebp], 0
	je	SHORT $LN3@Delete
	push	1
	mov	ecx, DWORD PTR $T78178[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@Delete
$LN3@Delete:
	mov	DWORD PTR tv71[ebp], 0
$LN4@Delete:
; Line 529
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Delete@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::Delete
; Line 530
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Delete@?$CObjectVector@VUString@@@@QAEXI@Z ENDP	; CObjectVector<UString>::Delete
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QBEPBEXZ PROC				; CBuffer<unsigned char>::operator unsigned char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QBEPBEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CBuffer@E@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CBuffer@E@@QBEIXZ PROC				; CBuffer<unsigned char>::Size, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CBuffer@E@@QBEIXZ ENDP				; CBuffer<unsigned char>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIUnknown@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ PROC			; CMyComPtr<IUnknown>::CMyComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIUnknown@@@@QAE@XZ ENDP			; CMyComPtr<IUnknown>::CMyComPtr<IUnknown>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIUnknown@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ PROC			; CMyComPtr<IUnknown>::~CMyComPtr<IUnknown>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIUnknown@@@@QAE@XZ ENDP			; CMyComPtr<IUnknown>::~CMyComPtr<IUnknown>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z PROC ; CMyComPtr<IUnknown>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@2
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@2:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@2
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@2:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIUnknown@@@@QAEPAUIUnknown@@PAU1@@Z ENDP ; CMyComPtr<IUnknown>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z PROC ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ENDP ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::Detach, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx
; Line 47
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 48
	mov	eax, DWORD PTR _pt$[ebp]
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::Detach
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z PROC ; CObjectVector<CBuffer<unsigned char> >::operator[], COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@V?$CBuffer@E@@@@QBEABV?$CBuffer@E@@I@Z ENDP ; CObjectVector<CBuffer<unsigned char> >::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@I@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@I@@QBEIXZ PROC			; CRecordVector<unsigned int>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@I@@QBEIXZ ENDP			; CRecordVector<unsigned int>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
$T78206 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T78206[ebp], ecx
	mov	edx, DWORD PTR $T78206[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
_TEXT	ENDS
PUBLIC	?MoveItems@?$CRecordVector@I@@AAEXII@Z		; CRecordVector<unsigned int>::MoveItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Delete@?$CRecordVector@I@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Delete@?$CRecordVector@I@@QAEXI@Z PROC			; CRecordVector<unsigned int>::Delete, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 152
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveItems@?$CRecordVector@I@@AAEXII@Z	; CRecordVector<unsigned int>::MoveItems
; Line 153
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 154
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Delete@?$CRecordVector@I@@QAEXI@Z ENDP			; CRecordVector<unsigned int>::Delete
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ	; CRecordVector<unsigned int>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@I@@QAEII@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@I@@QAEII@Z PROC			; CRecordVector<unsigned int>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ ; CRecordVector<unsigned int>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@I@@QAEII@Z ENDP			; CRecordVector<unsigned int>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@I@@QAEAAII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@I@@QAEAAII@Z PROC			; CRecordVector<unsigned int>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@I@@QAEAAII@Z ENDP			; CRecordVector<unsigned int>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z PROC ; CObjectVector<CDirItem>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCDirItem@@@@QBEABUCDirItem@@I@Z ENDP ; CObjectVector<CDirItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@_K@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@_K@@QAE@XZ PROC			; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@_K@@QAE@XZ ENDP			; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@_K@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@_K@@QBEIXZ PROC			; CRecordVector<unsigned __int64>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@_K@@QBEIXZ ENDP			; CRecordVector<unsigned __int64>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@_K@@QAE@XZ
_TEXT	SEGMENT
$T78221 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@_K@@QAE@XZ PROC			; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T78221[ebp], ecx
	mov	edx, DWORD PTR $T78221[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@_K@@QAE@XZ ENDP			; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@_K@@QAEAA_KI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@_K@@QAEAA_KI@Z PROC			; CRecordVector<unsigned __int64>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@_K@@QAEAA_KI@Z ENDP			; CRecordVector<unsigned __int64>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIInArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIInArchive@@@@QAE@XZ PROC		; CMyComPtr<IInArchive>::CMyComPtr<IInArchive>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIInArchive@@@@QAE@XZ ENDP		; CMyComPtr<IInArchive>::CMyComPtr<IInArchive>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ PROC		; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ ENDP		; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ PROC	; CMyComPtr<IInArchive>::operator IInArchive *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ENDP	; CMyComPtr<IInArchive>::operator IInArchive *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ PROC	; CMyComPtr<IInArchive>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ENDP	; CMyComPtr<IInArchive>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ PROC ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ENDP ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ PROC ; CMyComPtr<IArchiveGetRawProps>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ENDP ; CMyComPtr<IArchiveGetRawProps>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ PROC ; CMyComPtr<IArchiveGetRootProps>::operator IArchiveGetRootProps *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ ENDP ; CMyComPtr<IArchiveGetRootProps>::operator IArchiveGetRootProps *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ PROC ; CMyComPtr<IArchiveGetRootProps>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveGetRootProps@@@@QBEPAUIArchiveGetRootProps@@XZ ENDP ; CMyComPtr<IArchiveGetRootProps>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ PROC	; CRecordVector<CKeyKeyValPair>::CRecordVector<CKeyKeyValPair>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ ENDP	; CRecordVector<CKeyKeyValPair>::CRecordVector<CKeyKeyValPair>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ PROC	; CRecordVector<CKeyKeyValPair>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCKeyKeyValPair@@@@QBEIXZ ENDP	; CRecordVector<CKeyKeyValPair>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ
_TEXT	SEGMENT
$T78246 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ PROC	; CRecordVector<CKeyKeyValPair>::~CRecordVector<CKeyKeyValPair>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T78246[ebp], ecx
	mov	edx, DWORD PTR $T78246[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCKeyKeyValPair@@@@QAE@XZ ENDP	; CRecordVector<CKeyKeyValPair>::~CRecordVector<CKeyKeyValPair>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z PROC ; CRecordVector<CKeyKeyValPair>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z ENDP ; CRecordVector<CKeyKeyValPair>::operator[]
_TEXT	ENDS
PUBLIC	?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z ; CRecordVector<CKeyKeyValPair>::Insert
PUBLIC	?Compare@CKeyKeyValPair@@QBEHABU1@@Z		; CKeyKeyValPair::Compare
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z
_TEXT	SEGMENT
_comp$76654 = -24					; size = 4
_midVal$76653 = -20					; size = 4
_mid$76652 = -16					; size = 4
_right$ = -12						; size = 4
_left$ = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z PROC ; CRecordVector<CKeyKeyValPair>::AddToUniqueSorted2, COMDAT
; _this$ = ecx
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 306
	mov	DWORD PTR _left$[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _right$[ebp], ecx
$LN5@AddToUniqu:
; Line 307
	mov	edx, DWORD PTR _left$[ebp]
	cmp	edx, DWORD PTR _right$[ebp]
	je	SHORT $LN4@AddToUniqu
; Line 309
	mov	eax, DWORD PTR _left$[ebp]
	add	eax, DWORD PTR _right$[ebp]
	shr	eax, 1
	mov	DWORD PTR _mid$76652[ebp], eax
; Line 310
	mov	ecx, DWORD PTR _mid$76652[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@UCKeyKeyValPair@@@@QAEAAUCKeyKeyValPair@@I@Z ; CRecordVector<CKeyKeyValPair>::operator[]
	mov	DWORD PTR _midVal$76653[ebp], eax
; Line 311
	mov	edx, DWORD PTR _midVal$76653[ebp]
	push	edx
	mov	ecx, DWORD PTR _item$[ebp]
	call	?Compare@CKeyKeyValPair@@QBEHABU1@@Z	; CKeyKeyValPair::Compare
	mov	DWORD PTR _comp$76654[ebp], eax
; Line 312
	cmp	DWORD PTR _comp$76654[ebp], 0
	jne	SHORT $LN3@AddToUniqu
; Line 313
	mov	eax, DWORD PTR _mid$76652[ebp]
	jmp	SHORT $LN6@AddToUniqu
$LN3@AddToUniqu:
; Line 314
	cmp	DWORD PTR _comp$76654[ebp], 0
	jge	SHORT $LN2@AddToUniqu
; Line 315
	mov	eax, DWORD PTR _mid$76652[ebp]
	mov	DWORD PTR _right$[ebp], eax
; Line 316
	jmp	SHORT $LN1@AddToUniqu
$LN2@AddToUniqu:
; Line 317
	mov	ecx, DWORD PTR _mid$76652[ebp]
	add	ecx, 1
	mov	DWORD PTR _left$[ebp], ecx
$LN1@AddToUniqu:
; Line 318
	jmp	SHORT $LN5@AddToUniqu
$LN4@AddToUniqu:
; Line 319
	mov	edx, DWORD PTR _item$[ebp]
	sub	esp, 24					; 00000018H
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z ; CRecordVector<CKeyKeyValPair>::Insert
; Line 320
	mov	eax, DWORD PTR _right$[ebp]
$LN6@AddToUniqu:
; Line 321
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddToUniqueSorted2@?$CRecordVector@UCKeyKeyValPair@@@@QAEIABUCKeyKeyValPair@@@Z ENDP ; CRecordVector<CKeyKeyValPair>::AddToUniqueSorted2
_TEXT	ENDS
PUBLIC	??$MyCompare@_K@@YGH_K0@Z			; MyCompare<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Compare@CKeyKeyValPair@@QBEHABU1@@Z
_TEXT	SEGMENT
tv87 = -20						; size = 4
tv86 = -16						; size = 4
tv74 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?Compare@CKeyKeyValPair@@QBEHABU1@@Z PROC		; CKeyKeyValPair::Compare, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.h
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR tv74[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	ja	SHORT $LN2@Compare
	jb	SHORT $LN5@Compare
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR tv74[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN2@Compare
$LN5@Compare:
	or	eax, -1
	jmp	SHORT $LN3@Compare
$LN2@Compare:
; Line 52
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv86[ebp], edx
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN1@Compare
	ja	SHORT $LN6@Compare
	mov	ecx, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jbe	SHORT $LN1@Compare
$LN6@Compare:
	mov	eax, 1
	jmp	SHORT $LN3@Compare
$LN1@Compare:
; Line 53
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	call	??$MyCompare@_K@@YGH_K0@Z		; MyCompare<unsigned __int64>
$LN3@Compare:
; Line 54
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Compare@CKeyKeyValPair@@QBEHABU1@@Z ENDP		; CKeyKeyValPair::Compare
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z PROC ; CObjectVector<CArcItem>::operator[], COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCArcItem@@@@QBEABUCArcItem@@I@Z ENDP ; CObjectVector<CArcItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z PROC ; CRecordVector<CUpdatePair2>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCUpdatePair2@@@@QBEABUCUpdatePair2@@I@Z ENDP ; CRecordVector<CUpdatePair2>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z PROC ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@5
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@PAUISequentialInStream@@@Z ENDP ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@6:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::Detach, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx
; Line 47
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 48
	mov	eax, DWORD PTR _pt$[ebp]
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::Detach
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GUString@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUString@@QAEPAXI@Z PROC				; UString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUString@@QAEPAXI@Z ENDP				; UString::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T78273 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T78273[ebp], ecx
	mov	edx, DWORD PTR $T78273[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
_TEXT	ENDS
PUBLIC	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z	; CRecordVector<void *>::MoveItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Delete@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?Delete@?$CRecordVector@PAX@@QAEXI@Z PROC		; CRecordVector<void *>::Delete, COMDAT
; _this$ = ecx
; Line 151
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 152
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ; CRecordVector<void *>::MoveItems
; Line 153
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 154
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Delete@?$CRecordVector@PAX@@QAEXI@Z ENDP		; CRecordVector<void *>::Delete
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MoveItems@?$CRecordVector@I@@AAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_destIndex$ = 8						; size = 4
_srcIndex$ = 12						; size = 4
?MoveItems@?$CRecordVector@I@@AAEXII@Z PROC		; CRecordVector<unsigned int>::MoveItems, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _srcIndex$[ebp]
	shl	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _srcIndex$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _destIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 16
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveItems@?$CRecordVector@I@@AAEXII@Z ENDP		; CRecordVector<unsigned int>::MoveItems
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ
_TEXT	SEGMENT
$T78287 = -20						; size = 4
$T78286 = -16						; size = 4
_p$76738 = -12						; size = 4
_newCapacity$76737 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ PROC	; CRecordVector<unsigned int>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$76737[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$76737[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T78286[ebp], eax
	mov	eax, DWORD PTR $T78286[ebp]
	mov	DWORD PTR _p$76738[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$76738[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T78287[ebp], edx
	mov	eax, DWORD PTR $T78287[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$76738[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$76737[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@I@@AAEXXZ ENDP	; CRecordVector<unsigned int>::ReserveOnePosition
_TEXT	ENDS
PUBLIC	?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z ; CRecordVector<CKeyKeyValPair>::MoveItems
PUBLIC	?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ ; CRecordVector<CKeyKeyValPair>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_item$ = 12						; size = 24
?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z PROC ; CRecordVector<CKeyKeyValPair>::Insert, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ ; CRecordVector<CKeyKeyValPair>::ReserveOnePosition
; Line 212
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z ; CRecordVector<CKeyKeyValPair>::MoveItems
; Line 213
	mov	edx, DWORD PTR _index$[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, edx
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _item$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _item$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _item$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _item$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _item$[ebp+20]
	mov	DWORD PTR [ecx+20], eax
; Line 214
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 215
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	3
$LN5@Insert:
	DD	1
	DD	$LN4@Insert
$LN4@Insert:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Insert
$LN3@Insert:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?Insert@?$CRecordVector@UCKeyKeyValPair@@@@QAEXIUCKeyKeyValPair@@@Z ENDP ; CRecordVector<CKeyKeyValPair>::Insert
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MoveItems@?$CRecordVector@PAX@@AAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_destIndex$ = 8						; size = 4
_srcIndex$ = 12						; size = 4
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z PROC		; CRecordVector<void *>::MoveItems, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _srcIndex$[ebp]
	shl	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _srcIndex$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _destIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 16
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ENDP		; CRecordVector<void *>::MoveItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T78299 = -20						; size = 4
$T78298 = -16						; size = 4
_p$76758 = -12						; size = 4
_newCapacity$76757 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@2
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$76757[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$76757[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T78298[ebp], eax
	mov	eax, DWORD PTR $T78298[ebp]
	mov	DWORD PTR _p$76758[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@2
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$76758[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@2:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T78299[ebp], edx
	mov	eax, DWORD PTR $T78299[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$76758[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$76757[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@2:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_destIndex$ = 8						; size = 4
_srcIndex$ = 12						; size = 4
?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z PROC ; CRecordVector<CKeyKeyValPair>::MoveItems, COMDAT
; _this$ = ecx
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _srcIndex$[ebp]
	imul	ecx, 24					; 00000018H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _srcIndex$[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _destIndex$[ebp]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 16
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveItems@?$CRecordVector@UCKeyKeyValPair@@@@AAEXII@Z ENDP ; CRecordVector<CKeyKeyValPair>::MoveItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ
_TEXT	SEGMENT
$T78305 = -20						; size = 4
$T78304 = -16						; size = 4
_p$76773 = -12						; size = 4
_newCapacity$76772 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ PROC ; CRecordVector<CKeyKeyValPair>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne@3
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$76772[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$76772[ebp]
	mov	edx, 24					; 00000018H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T78304[ebp], eax
	mov	eax, DWORD PTR $T78304[ebp]
	mov	DWORD PTR _p$76773[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne@3
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	imul	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$76773[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne@3:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T78305[ebp], edx
	mov	eax, DWORD PTR $T78305[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$76773[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$76772[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne@3:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@UCKeyKeyValPair@@@@AAEXXZ ENDP ; CRecordVector<CKeyKeyValPair>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@_K@@YGH_K0@Z
_TEXT	SEGMENT
tv66 = -8						; size = 4
tv67 = -4						; size = 4
_a$ = 8							; size = 8
_b$ = 16						; size = 8
??$MyCompare@_K@@YGH_K0@Z PROC				; MyCompare<unsigned __int64>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	ja	SHORT $LN5@MyCompare
	jb	SHORT $LN7@MyCompare
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	ecx, DWORD PTR _b$[ebp]
	jae	SHORT $LN5@MyCompare
$LN7@MyCompare:
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN6@MyCompare
$LN5@MyCompare:
	mov	edx, DWORD PTR _a$[ebp]
	cmp	edx, DWORD PTR _b$[ebp]
	jne	SHORT $LN3@MyCompare
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	jne	SHORT $LN3@MyCompare
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@MyCompare
$LN3@MyCompare:
	mov	DWORD PTR tv66[ebp], 1
$LN4@MyCompare:
	mov	ecx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv67[ebp], ecx
$LN6@MyCompare:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$MyCompare@_K@@YGH_K0@Z ENDP				; MyCompare<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@WBA@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@WBA@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@W7AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@W7AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@WBE@AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@WBE@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@WBE@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@WM@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@WM@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@WBI@AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@WBI@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{24}', COMDAT
	sub	DWORD PTR [esp+4], 24			; 00000018H
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@WBI@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{24}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@WBA@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@WBA@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@WBM@AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@WBM@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@WBM@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{28}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@WBE@AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@WBE@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@WBE@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@WBA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@WBI@AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@WBI@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{24}', COMDAT
	sub	DWORD PTR [esp+4], 24			; 00000018H
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@WBI@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{24}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@WBE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@WBE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@W3AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@W3AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@W3AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@WBM@AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@WBM@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@WBM@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{28}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetCompleted@CArchiveUpdateCallback@@W7AGJPB_K@Z
_TEXT	SEGMENT
?SetCompleted@CArchiveUpdateCallback@@W7AGJPB_K@Z PROC	; [thunk]:CArchiveUpdateCallback::SetCompleted`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?SetCompleted@CArchiveUpdateCallback@@UAGJPB_K@Z ; CArchiveUpdateCallback::SetCompleted
?SetCompleted@CArchiveUpdateCallback@@W7AGJPB_K@Z ENDP	; [thunk]:CArchiveUpdateCallback::SetCompleted`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@WBI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@WBI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{24}', COMDAT
	sub	DWORD PTR [esp+4], 24			; 00000018H
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@WBI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{24}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@W7AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@W7AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@W7AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CArchiveUpdateCallback@@WBM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CArchiveUpdateCallback@@WBM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?QueryInterface@CArchiveUpdateCallback@@UAGJABU_GUID@@PAPAX@Z ; CArchiveUpdateCallback::QueryInterface
?QueryInterface@CArchiveUpdateCallback@@WBM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CArchiveUpdateCallback::QueryInterface`adjustor{28}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CArchiveUpdateCallback@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CArchiveUpdateCallback@@WM@AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::Release
?Release@CArchiveUpdateCallback@@WM@AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CArchiveUpdateCallback@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CArchiveUpdateCallback@@W3AGKXZ PROC		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CArchiveUpdateCallback@@UAGKXZ	; CArchiveUpdateCallback::AddRef
?AddRef@CArchiveUpdateCallback@@W3AGKXZ ENDP		; [thunk]:CArchiveUpdateCallback::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetTotal@CArchiveUpdateCallback@@W7AGJ_K@Z
_TEXT	SEGMENT
?SetTotal@CArchiveUpdateCallback@@W7AGJ_K@Z PROC	; [thunk]:CArchiveUpdateCallback::SetTotal`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?SetTotal@CArchiveUpdateCallback@@UAGJ_K@Z ; CArchiveUpdateCallback::SetTotal
?SetTotal@CArchiveUpdateCallback@@W7AGJ_K@Z ENDP	; [thunk]:CArchiveUpdateCallback::SetTotal`adjustor{8}'
_TEXT	ENDS
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_CriticalSection@@YAXXZ
text$yc	SEGMENT
??__Eg_CriticalSection@@YAXXZ PROC			; `dynamic initializer for 'g_CriticalSection'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 32
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	push	OFFSET ??__Fg_CriticalSection@@YAXXZ	; `dynamic atexit destructor for 'g_CriticalSection''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_CriticalSection@@YAXXZ ENDP			; `dynamic initializer for 'g_CriticalSection''
text$yc	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__ECS@@YAXXZ
text$yc	SEGMENT
??__ECS@@YAXXZ PROC					; `dynamic initializer for 'CS'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\updatecallback.cpp
; Line 432
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _CS
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	push	OFFSET ??__FCS@@YAXXZ			; `dynamic atexit destructor for 'CS''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__ECS@@YAXXZ ENDP					; `dynamic initializer for 'CS''
text$yc	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_CriticalSection@@YAXXZ
text$yd	SEGMENT
??__Fg_CriticalSection@@YAXXZ PROC			; `dynamic atexit destructor for 'g_CriticalSection'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_CriticalSection
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_CriticalSection@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_CriticalSection''
text$yd	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__FCS@@YAXXZ
text$yd	SEGMENT
??__FCS@@YAXXZ PROC					; `dynamic atexit destructor for 'CS'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _CS
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__FCS@@YAXXZ ENDP					; `dynamic atexit destructor for 'CS''
text$yd	ENDS
_BSS	SEGMENT
_CS	DB	018H DUP (?)
_g_CriticalSection DB 018H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_CriticalSection$initializer$ DD FLAT:??__Eg_CriticalSection@@YAXXZ
_CS$initializer$ DD FLAT:??__ECS@@YAXXZ
CRT$XCU	ENDS
END

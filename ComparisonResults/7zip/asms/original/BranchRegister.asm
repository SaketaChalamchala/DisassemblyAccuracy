; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\BranchRegister.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG66593 DB	'PPC', 00H
$SG66594 DB	'IA64', 00H
	ORG $+3
$SG66595 DB	'ARM', 00H
$SG66596 DB	'ARMT', 00H
	ORG $+3
$SG66597 DB	'SPARC', 00H
	ORG $+2
_g_CodecsInfo DD FLAT:?CreateBra_Decoder_PPC@@YGPAXXZ
	DD	FLAT:?CreateBra_Encoder_PPC@@YGPAXXZ
	DQ	0000000003030205H
	DD	FLAT:$SG66593
	DD	01H
	DB	01H
	ORG $+7
	DD	FLAT:?CreateBra_Decoder_IA64@@YGPAXXZ
	DD	FLAT:?CreateBra_Encoder_IA64@@YGPAXXZ
	DQ	0000000003030401H
	DD	FLAT:$SG66594
	DD	01H
	DB	01H
	ORG $+7
	DD	FLAT:?CreateBra_Decoder_ARM@@YGPAXXZ
	DD	FLAT:?CreateBra_Encoder_ARM@@YGPAXXZ
	DQ	0000000003030501H
	DD	FLAT:$SG66595
	DD	01H
	DB	01H
	ORG $+7
	DD	FLAT:?CreateBra_Decoder_ARMT@@YGPAXXZ
	DD	FLAT:?CreateBra_Encoder_ARMT@@YGPAXXZ
	DQ	0000000003030701H
	DD	FLAT:$SG66596
	DD	01H
	DB	01H
	ORG $+7
	DD	FLAT:?CreateBra_Decoder_SPARC@@YGPAXXZ
	DD	FLAT:?CreateBra_Encoder_SPARC@@YGPAXXZ
	DQ	0000000003030805H
	DD	FLAT:$SG66597
	DD	01H
	DB	01H
	ORG $+7
CONST	ENDS
PUBLIC	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z		; CBranchCoder::CBranchCoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_PPC_Convert@16:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?CreateBra_Decoder_PPC@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Decoder_PPC@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Decoder_PPC@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Decoder_PPC@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\compress\branchregister.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66706 = -20						; size = 4
$T66705 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Decoder_PPC@@YGPAXXZ PROC			; CreateBra_Decoder_PPC
; Line 15
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Decoder_PPC@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66706[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66706[ebp], 0
	je	SHORT $LN3@CreateBra_
	push	0
	push	OFFSET _PPC_Convert@16
	mov	ecx, DWORD PTR $T66706[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_
$LN3@CreateBra_:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66705[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66705[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Decoder_PPC@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66706[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Decoder_PPC@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Decoder_PPC@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Decoder_PPC@@YGPAXXZ ENDP			; CreateBra_Decoder_PPC
PUBLIC	??_7CBranchCoder@@6B@				; CBranchCoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressFilter@@QAE@XZ			; ICompressFilter::ICompressFilter
PUBLIC	??_R4CBranchCoder@@6B@				; CBranchCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBranchCoder@@@8			; CBranchCoder `RTTI Type Descriptor'
PUBLIC	??_R3CBranchCoder@@8				; CBranchCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBranchCoder@@8				; CBranchCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBranchCoder@@8			; CBranchCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressFilter@@8		; ICompressFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressFilter@@@8			; ICompressFilter `RTTI Type Descriptor'
PUBLIC	??_R3ICompressFilter@@8				; ICompressFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressFilter@@8				; ICompressFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CBranchCoder@@UAGJABU_GUID@@PAPAX@Z ; CBranchCoder::QueryInterface
PUBLIC	?AddRef@CBranchCoder@@UAGKXZ			; CBranchCoder::AddRef
PUBLIC	?Release@CBranchCoder@@UAGKXZ			; CBranchCoder::Release
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Init@CBranchCoder@@UAGJXZ:PROC			; CBranchCoder::Init
EXTRN	?Filter@CBranchCoder@@UAGIPAEI@Z:PROC		; CBranchCoder::Filter
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\branchmisc.h
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressFilter@@8
rdata$r	SEGMENT
??_R2ICompressFilter@@8 DD FLAT:??_R1A@?0A@EA@ICompressFilter@@8 ; ICompressFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressFilter@@8
rdata$r	SEGMENT
??_R3ICompressFilter@@8 DD 00H				; ICompressFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressFilter@@@8
_DATA	SEGMENT
??_R0?AUICompressFilter@@@8 DD FLAT:??_7type_info@@6B@	; ICompressFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressFilter@@8 DD FLAT:??_R0?AUICompressFilter@@@8 ; ICompressFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBranchCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBranchCoder@@8 DD FLAT:??_R0?AVCBranchCoder@@@8 ; CBranchCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBranchCoder@@8
rdata$r	ENDS
;	COMDAT ??_R2CBranchCoder@@8
rdata$r	SEGMENT
??_R2CBranchCoder@@8 DD FLAT:??_R1A@?0A@EA@CBranchCoder@@8 ; CBranchCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CBranchCoder@@8
rdata$r	SEGMENT
??_R3CBranchCoder@@8 DD 00H				; CBranchCoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2CBranchCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBranchCoder@@@8
_DATA	SEGMENT
??_R0?AVCBranchCoder@@@8 DD FLAT:??_7type_info@@6B@	; CBranchCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBranchCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBranchCoder@@6B@
rdata$r	SEGMENT
??_R4CBranchCoder@@6B@ DD 00H				; CBranchCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBranchCoder@@@8
	DD	FLAT:??_R3CBranchCoder@@8
rdata$r	ENDS
;	COMDAT ??_7CBranchCoder@@6B@
CONST	SEGMENT
??_7CBranchCoder@@6B@ DD FLAT:??_R4CBranchCoder@@6B@	; CBranchCoder::`vftable'
	DD	FLAT:?QueryInterface@CBranchCoder@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBranchCoder@@UAGKXZ
	DD	FLAT:?Release@CBranchCoder@@UAGKXZ
	DD	FLAT:?Init@CBranchCoder@@UAGJXZ
	DD	FLAT:?Filter@CBranchCoder@@UAGIPAEI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bra$ = 8						; size = 4
_encode$ = 12						; size = 4
??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z PROC		; CBranchCoder::CBranchCoder, COMDAT
; _this$ = ecx
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressFilter@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBranchCoder@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _encode$[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bra$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z ENDP		; CBranchCoder::CBranchCoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CBranchCoder@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CBranchCoder@@UAGJABU_GUID@@PAPAX@Z PROC ; CBranchCoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\branchmisc.h
; Line 24
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter
$LN1@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBranchCoder@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBranchCoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBranchCoder@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBranchCoder@@UAGKXZ PROC			; CBranchCoder::AddRef, COMDAT
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBranchCoder@@UAGKXZ ENDP			; CBranchCoder::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBranchCoder@@UAGKXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
$T66735 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBranchCoder@@UAGKXZ PROC			; CBranchCoder::Release, COMDAT
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T66735[ebp], edx
	mov	eax, DWORD PTR $T66735[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
$LN2@Release:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBranchCoder@@UAGKXZ ENDP			; CBranchCoder::Release
_TEXT	ENDS
PUBLIC	??_7ICompressFilter@@6B@			; ICompressFilter::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressFilter@@6B@			; ICompressFilter::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressFilter@@6B@
rdata$r	SEGMENT
??_R4ICompressFilter@@6B@ DD 00H			; ICompressFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressFilter@@@8
	DD	FLAT:??_R3ICompressFilter@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressFilter@@6B@
CONST	SEGMENT
??_7ICompressFilter@@6B@ DD FLAT:??_R4ICompressFilter@@6B@ ; ICompressFilter::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressFilter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressFilter@@QAE@XZ PROC				; ICompressFilter::ICompressFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressFilter@@QAE@XZ ENDP				; ICompressFilter::ICompressFilter
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
xdata$x	SEGMENT
__unwindtable$?CreateBra_Encoder_PPC@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Encoder_PPC@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Encoder_PPC@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Encoder_PPC@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66743 = -20						; size = 4
$T66742 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Encoder_PPC@@YGPAXXZ PROC			; CreateBra_Encoder_PPC
; File c:\workspace\7z1505-src\cpp\7zip\compress\branchregister.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Encoder_PPC@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66743[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66743[ebp], 0
	je	SHORT $LN3@CreateBra_@2
	push	1
	push	OFFSET _PPC_Convert@16
	mov	ecx, DWORD PTR $T66743[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@2
$LN3@CreateBra_@2:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@2:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66742[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66742[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Encoder_PPC@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66743[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Encoder_PPC@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Encoder_PPC@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Encoder_PPC@@YGPAXXZ ENDP			; CreateBra_Encoder_PPC
EXTRN	_IA64_Convert@16:PROC
xdata$x	SEGMENT
__unwindtable$?CreateBra_Decoder_IA64@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Decoder_IA64@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Decoder_IA64@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Decoder_IA64@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66753 = -20						; size = 4
$T66752 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Decoder_IA64@@YGPAXXZ PROC			; CreateBra_Decoder_IA64
; Line 16
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Decoder_IA64@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66753[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66753[ebp], 0
	je	SHORT $LN3@CreateBra_@3
	push	0
	push	OFFSET _IA64_Convert@16
	mov	ecx, DWORD PTR $T66753[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@3
$LN3@CreateBra_@3:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@3:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66752[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66752[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Decoder_IA64@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66753[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Decoder_IA64@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Decoder_IA64@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Decoder_IA64@@YGPAXXZ ENDP			; CreateBra_Decoder_IA64
xdata$x	SEGMENT
__unwindtable$?CreateBra_Encoder_IA64@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Encoder_IA64@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Encoder_IA64@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Encoder_IA64@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66763 = -20						; size = 4
$T66762 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Encoder_IA64@@YGPAXXZ PROC			; CreateBra_Encoder_IA64
; Line 16
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Encoder_IA64@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66763[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66763[ebp], 0
	je	SHORT $LN3@CreateBra_@4
	push	1
	push	OFFSET _IA64_Convert@16
	mov	ecx, DWORD PTR $T66763[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@4
$LN3@CreateBra_@4:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@4:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66762[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66762[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Encoder_IA64@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66763[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Encoder_IA64@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Encoder_IA64@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Encoder_IA64@@YGPAXXZ ENDP			; CreateBra_Encoder_IA64
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
EXTRN	_ARM_Convert@16:PROC
xdata$x	SEGMENT
__unwindtable$?CreateBra_Decoder_ARM@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Decoder_ARM@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Decoder_ARM@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Decoder_ARM@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66777 = -20						; size = 4
$T66776 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Decoder_ARM@@YGPAXXZ PROC			; CreateBra_Decoder_ARM
; File c:\workspace\7z1505-src\cpp\7zip\compress\branchregister.cpp
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Decoder_ARM@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66777[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66777[ebp], 0
	je	SHORT $LN3@CreateBra_@5
	push	0
	push	OFFSET _ARM_Convert@16
	mov	ecx, DWORD PTR $T66777[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@5
$LN3@CreateBra_@5:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@5:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66776[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66776[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Decoder_ARM@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66777[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Decoder_ARM@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Decoder_ARM@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Decoder_ARM@@YGPAXXZ ENDP			; CreateBra_Decoder_ARM
xdata$x	SEGMENT
__unwindtable$?CreateBra_Encoder_ARM@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Encoder_ARM@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Encoder_ARM@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Encoder_ARM@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66787 = -20						; size = 4
$T66786 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Encoder_ARM@@YGPAXXZ PROC			; CreateBra_Encoder_ARM
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Encoder_ARM@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66787[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66787[ebp], 0
	je	SHORT $LN3@CreateBra_@6
	push	1
	push	OFFSET _ARM_Convert@16
	mov	ecx, DWORD PTR $T66787[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@6
$LN3@CreateBra_@6:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@6:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66786[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66786[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Encoder_ARM@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66787[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Encoder_ARM@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Encoder_ARM@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Encoder_ARM@@YGPAXXZ ENDP			; CreateBra_Encoder_ARM
EXTRN	_ARMT_Convert@16:PROC
xdata$x	SEGMENT
__unwindtable$?CreateBra_Decoder_ARMT@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Decoder_ARMT@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Decoder_ARMT@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Decoder_ARMT@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66797 = -20						; size = 4
$T66796 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Decoder_ARMT@@YGPAXXZ PROC			; CreateBra_Decoder_ARMT
; Line 18
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Decoder_ARMT@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66797[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66797[ebp], 0
	je	SHORT $LN3@CreateBra_@7
	push	0
	push	OFFSET _ARMT_Convert@16
	mov	ecx, DWORD PTR $T66797[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@7
$LN3@CreateBra_@7:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@7:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66796[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66796[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Decoder_ARMT@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66797[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Decoder_ARMT@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Decoder_ARMT@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Decoder_ARMT@@YGPAXXZ ENDP			; CreateBra_Decoder_ARMT
xdata$x	SEGMENT
__unwindtable$?CreateBra_Encoder_ARMT@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Encoder_ARMT@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Encoder_ARMT@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Encoder_ARMT@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66807 = -20						; size = 4
$T66806 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Encoder_ARMT@@YGPAXXZ PROC			; CreateBra_Encoder_ARMT
; Line 18
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Encoder_ARMT@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66807[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66807[ebp], 0
	je	SHORT $LN3@CreateBra_@8
	push	1
	push	OFFSET _ARMT_Convert@16
	mov	ecx, DWORD PTR $T66807[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@8
$LN3@CreateBra_@8:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@8:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66806[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66806[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Encoder_ARMT@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66807[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Encoder_ARMT@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Encoder_ARMT@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Encoder_ARMT@@YGPAXXZ ENDP			; CreateBra_Encoder_ARMT
EXTRN	_SPARC_Convert@16:PROC
xdata$x	SEGMENT
__unwindtable$?CreateBra_Decoder_SPARC@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Decoder_SPARC@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Decoder_SPARC@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Decoder_SPARC@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66817 = -20						; size = 4
$T66816 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Decoder_SPARC@@YGPAXXZ PROC			; CreateBra_Decoder_SPARC
; Line 19
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Decoder_SPARC@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66817[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66817[ebp], 0
	je	SHORT $LN3@CreateBra_@9
	push	0
	push	OFFSET _SPARC_Convert@16
	mov	ecx, DWORD PTR $T66817[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@9
$LN3@CreateBra_@9:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@9:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66816[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66816[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Decoder_SPARC@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66817[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Decoder_SPARC@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Decoder_SPARC@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Decoder_SPARC@@YGPAXXZ ENDP			; CreateBra_Decoder_SPARC
xdata$x	SEGMENT
__unwindtable$?CreateBra_Encoder_SPARC@@YGPAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateBra_Encoder_SPARC@@YGPAXXZ$0
__ehfuncinfo$?CreateBra_Encoder_SPARC@@YGPAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateBra_Encoder_SPARC@@YGPAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv76 = -24						; size = 4
$T66827 = -20						; size = 4
$T66826 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateBra_Encoder_SPARC@@YGPAXXZ PROC			; CreateBra_Encoder_SPARC
; Line 19
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateBra_Encoder_SPARC@@YGPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T66827[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T66827[ebp], 0
	je	SHORT $LN3@CreateBra_@10
	push	1
	push	OFFSET _SPARC_Convert@16
	mov	ecx, DWORD PTR $T66827[ebp]
	call	??0CBranchCoder@@QAE@P6GIPAEIIH@ZH@Z	; CBranchCoder::CBranchCoder
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@CreateBra_@10
$LN3@CreateBra_@10:
	mov	DWORD PTR tv76[ebp], 0
$LN4@CreateBra_@10:
	mov	eax, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T66826[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T66826[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateBra_Encoder_SPARC@@YGPAXXZ$0:
	mov	eax, DWORD PTR $T66827[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateBra_Encoder_SPARC@@YGPAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateBra_Encoder_SPARC@@YGPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateBra_Encoder_SPARC@@YGPAXXZ ENDP			; CreateBra_Encoder_SPARC
PUBLIC	??0CRegisterCodecsBranch@@QAE@XZ		; CRegisterCodecsBranch::CRegisterCodecsBranch
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_RegisterCodecs@@YAXXZ
text$yc	SEGMENT
??__Eg_RegisterCodecs@@YAXXZ PROC			; `dynamic initializer for 'g_RegisterCodecs'', COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_RegisterCodecs
	call	??0CRegisterCodecsBranch@@QAE@XZ	; CRegisterCodecsBranch::CRegisterCodecsBranch
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_RegisterCodecs@@YAXXZ ENDP			; `dynamic initializer for 'g_RegisterCodecs''
text$yc	ENDS
EXTRN	?RegisterCodec@@YGXPBUCCodecInfo@@@Z:PROC	; RegisterCodec
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRegisterCodecsBranch@@QAE@XZ
_TEXT	SEGMENT
_i$66607 = -8						; size = 4
_this$ = -4						; size = 4
??0CRegisterCodecsBranch@@QAE@XZ PROC			; CRegisterCodecsBranch::CRegisterCodecsBranch, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR _i$66607[ebp], 0
	jmp	SHORT $LN3@CRegisterC
$LN2@CRegisterC:
	mov	eax, DWORD PTR _i$66607[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66607[ebp], eax
$LN3@CRegisterC:
	cmp	DWORD PTR _i$66607[ebp], 5
	jae	SHORT $LN4@CRegisterC
	mov	ecx, DWORD PTR _i$66607[ebp]
	shl	ecx, 5
	add	ecx, OFFSET _g_CodecsInfo
	push	ecx
	call	?RegisterCodec@@YGXPBUCCodecInfo@@@Z	; RegisterCodec
	jmp	SHORT $LN2@CRegisterC
$LN4@CRegisterC:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRegisterCodecsBranch@@QAE@XZ ENDP			; CRegisterCodecsBranch::CRegisterCodecsBranch
_TEXT	ENDS
_BSS	SEGMENT
_g_RegisterCodecs DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_RegisterCodecs$initializer$ DD FLAT:??__Eg_RegisterCodecs@@YAXXZ
CRT$XCU	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Crypto\ZipCrypto.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?CryptoSetPassword@CCipher@NZip@NCrypto@@UAGJPBEI@Z ; NCrypto::NZip::CCipher::CryptoSetPassword
EXTRN	_g_CrcTable:BYTE
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\crypto\zipcrypto.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$66583 = -16						; size = 4
_Key2$ = -12						; size = 4
_Key1$ = -8						; size = 4
_Key0$ = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?CryptoSetPassword@CCipher@NZip@NCrypto@@UAGJPBEI@Z PROC ; NCrypto::NZip::CCipher::CryptoSetPassword
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 25
	mov	DWORD PTR _Key0$[ebp], 305419896	; 12345678H
; Line 26
	mov	DWORD PTR _Key1$[ebp], 591751049	; 23456789H
; Line 27
	mov	DWORD PTR _Key2$[ebp], 878082192	; 34567890H
; Line 29
	mov	DWORD PTR _i$66583[ebp], 0
	jmp	SHORT $LN3@CryptoSetP
$LN2@CryptoSetP:
	mov	eax, DWORD PTR _i$66583[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66583[ebp], eax
$LN3@CryptoSetP:
	mov	ecx, DWORD PTR _i$66583[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@CryptoSetP
; Line 30
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$66583[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, DWORD PTR _Key0$[ebp]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _Key0$[ebp]
	shr	ecx, 8
	xor	ecx, DWORD PTR _g_CrcTable[eax*4]
	mov	DWORD PTR _Key0$[ebp], ecx
	mov	edx, DWORD PTR _Key0$[ebp]
	and	edx, 255				; 000000ffH
	add	edx, DWORD PTR _Key1$[ebp]
	imul	edx, 134775813				; 08088405H
	add	edx, 1
	mov	DWORD PTR _Key1$[ebp], edx
	mov	eax, DWORD PTR _Key1$[ebp]
	shr	eax, 24					; 00000018H
	movzx	ecx, al
	xor	ecx, DWORD PTR _Key2$[ebp]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _Key2$[ebp]
	shr	edx, 8
	xor	edx, DWORD PTR _g_CrcTable[ecx*4]
	mov	DWORD PTR _Key2$[ebp], edx
	jmp	SHORT $LN2@CryptoSetP
$LN1@CryptoSetP:
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Key0$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _Key1$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Key2$[ebp]
	mov	DWORD PTR [ecx+28], edx
; Line 36
	xor	eax, eax
; Line 37
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CryptoSetPassword@CCipher@NZip@NCrypto@@UAGJPBEI@Z ENDP ; NCrypto::NZip::CCipher::CryptoSetPassword
_TEXT	ENDS
PUBLIC	?Init@CCipher@NZip@NCrypto@@UAGJXZ		; NCrypto::NZip::CCipher::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Init@CCipher@NZip@NCrypto@@UAGJXZ PROC			; NCrypto::NZip::CCipher::Init
; Line 40
	push	ebp
	mov	ebp, esp
; Line 41
	xor	eax, eax
; Line 42
	pop	ebp
	ret	4
?Init@CCipher@NZip@NCrypto@@UAGJXZ ENDP			; NCrypto::NZip::CCipher::Init
_TEXT	ENDS
PUBLIC	?RestoreKeys@CCipher@NZip@NCrypto@@IAEXXZ	; NCrypto::NZip::CCipher::RestoreKeys
PUBLIC	__$ArrayPad$
PUBLIC	?WriteHeader_Check16@CEncoder@NZip@NCrypto@@QAEJPAUISequentialOutStream@@G@Z ; NCrypto::NZip::CEncoder::WriteHeader_Check16
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
EXTRN	?Generate@CRandomGenerator@@QAEXPAEI@Z:PROC	; CRandomGenerator::Generate
EXTRN	?g_RandomGenerator@@3VCRandomGenerator@@A:BYTE	; g_RandomGenerator
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_h$ = -24						; size = 12
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_outStream$ = 8						; size = 4
_crc$ = 12						; size = 2
?WriteHeader_Check16@CEncoder@NZip@NCrypto@@QAEJPAUISequentialOutStream@@G@Z PROC ; NCrypto::NZip::CEncoder::WriteHeader_Check16
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	push	11					; 0000000bH
	lea	eax, DWORD PTR _h$[ebp]
	push	eax
	mov	ecx, OFFSET ?g_RandomGenerator@@3VCRandomGenerator@@A ; g_RandomGenerator
	call	?Generate@CRandomGenerator@@QAEXPAEI@Z	; CRandomGenerator::Generate
; Line 54
	movzx	ecx, WORD PTR _crc$[ebp]
	sar	ecx, 8
	mov	BYTE PTR _h$[ebp+11], cl
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RestoreKeys@CCipher@NZip@NCrypto@@IAEXXZ ; NCrypto::NZip::CCipher::RestoreKeys
; Line 57
	mov	esi, esp
	push	12					; 0000000cH
	lea	edx, DWORD PTR _h$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	push	12					; 0000000cH
	lea	ecx, DWORD PTR _h$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
; Line 59
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@WriteHeade
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN5@WriteHeade:
	DD	1
	DD	$LN4@WriteHeade
$LN4@WriteHeade:
	DD	-24					; ffffffe8H
	DD	12					; 0000000cH
	DD	$LN3@WriteHeade
$LN3@WriteHeade:
	DB	104					; 00000068H
	DB	0
?WriteHeader_Check16@CEncoder@NZip@NCrypto@@QAEJPAUISequentialOutStream@@G@Z ENDP ; NCrypto::NZip::CEncoder::WriteHeader_Check16
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?RestoreKeys@CCipher@NZip@NCrypto@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RestoreKeys@CCipher@NZip@NCrypto@@IAEXXZ PROC		; NCrypto::NZip::CCipher::RestoreKeys, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\zipcrypto.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+12], edx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+16], edx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+20], edx
; Line 47
	mov	esp, ebp
	pop	ebp
	ret	0
?RestoreKeys@CCipher@NZip@NCrypto@@IAEXXZ ENDP		; NCrypto::NZip::CCipher::RestoreKeys
_TEXT	ENDS
PUBLIC	?Filter@CEncoder@NZip@NCrypto@@UAGIPAEI@Z	; NCrypto::NZip::CEncoder::Filter
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_temp$66613 = -24					; size = 4
_b$66612 = -17						; size = 1
_i$66608 = -16						; size = 4
_Key2$ = -12						; size = 4
_Key1$ = -8						; size = 4
_Key0$ = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?Filter@CEncoder@NZip@NCrypto@@UAGIPAEI@Z PROC		; NCrypto::NZip::CEncoder::Filter
; File c:\workspace\7z1505-src\cpp\7zip\crypto\zipcrypto.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _Key0$[ebp], ecx
; Line 64
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _Key1$[ebp], eax
; Line 65
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _Key2$[ebp], edx
; Line 67
	mov	DWORD PTR _i$66608[ebp], 0
	jmp	SHORT $LN3@Filter
$LN2@Filter:
	mov	eax, DWORD PTR _i$66608[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66608[ebp], eax
$LN3@Filter:
	mov	ecx, DWORD PTR _i$66608[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	$LN1@Filter
; Line 69
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$66608[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _b$66612[ebp], al
; Line 70
	mov	ecx, DWORD PTR _Key2$[ebp]
	or	ecx, 2
	mov	DWORD PTR _temp$66613[ebp], ecx
; Line 71
	movzx	edx, BYTE PTR _b$66612[ebp]
	mov	eax, DWORD PTR _temp$66613[ebp]
	xor	eax, 1
	imul	eax, DWORD PTR _temp$66613[ebp]
	shr	eax, 8
	movzx	ecx, al
	xor	edx, ecx
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _i$66608[ebp]
	mov	BYTE PTR [eax], dl
; Line 72
	movzx	ecx, BYTE PTR _b$66612[ebp]
	xor	ecx, DWORD PTR _Key0$[ebp]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _Key0$[ebp]
	shr	edx, 8
	xor	edx, DWORD PTR _g_CrcTable[ecx*4]
	mov	DWORD PTR _Key0$[ebp], edx
	mov	eax, DWORD PTR _Key0$[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _Key1$[ebp]
	imul	eax, 134775813				; 08088405H
	add	eax, 1
	mov	DWORD PTR _Key1$[ebp], eax
	mov	ecx, DWORD PTR _Key1$[ebp]
	shr	ecx, 24					; 00000018H
	movzx	edx, cl
	xor	edx, DWORD PTR _Key2$[ebp]
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _Key2$[ebp]
	shr	eax, 8
	xor	eax, DWORD PTR _g_CrcTable[edx*4]
	mov	DWORD PTR _Key2$[ebp], eax
; Line 73
	jmp	$LN2@Filter
$LN1@Filter:
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Key0$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Key1$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 77
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _Key2$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 79
	mov	eax, DWORD PTR _size$[ebp]
; Line 80
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Filter@CEncoder@NZip@NCrypto@@UAGIPAEI@Z ENDP		; NCrypto::NZip::CEncoder::Filter
_TEXT	ENDS
PUBLIC	?ReadHeader@CDecoder@NZip@NCrypto@@QAEJPAUISequentialInStream@@@Z ; NCrypto::NZip::CDecoder::ReadHeader
EXTRN	?ReadStream_FAIL@@YGJPAUISequentialInStream@@PAXI@Z:PROC ; ReadStream_FAIL
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
?ReadHeader@CDecoder@NZip@NCrypto@@QAEJPAUISequentialInStream@@@Z PROC ; NCrypto::NZip::CDecoder::ReadHeader
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	call	?ReadStream_FAIL@@YGJPAUISequentialInStream@@PAXI@Z ; ReadStream_FAIL
; Line 85
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadHeader@CDecoder@NZip@NCrypto@@QAEJPAUISequentialInStream@@@Z ENDP ; NCrypto::NZip::CDecoder::ReadHeader
_TEXT	ENDS
PUBLIC	?Init_BeforeDecode@CDecoder@NZip@NCrypto@@QAEXXZ ; NCrypto::NZip::CDecoder::Init_BeforeDecode
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init_BeforeDecode@CDecoder@NZip@NCrypto@@QAEXXZ PROC	; NCrypto::NZip::CDecoder::Init_BeforeDecode
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 89
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RestoreKeys@CCipher@NZip@NCrypto@@IAEXXZ ; NCrypto::NZip::CCipher::RestoreKeys
; Line 90
	mov	esi, esp
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init_BeforeDecode@CDecoder@NZip@NCrypto@@QAEXXZ ENDP	; NCrypto::NZip::CDecoder::Init_BeforeDecode
_TEXT	ENDS
PUBLIC	?Filter@CDecoder@NZip@NCrypto@@UAGIPAEI@Z	; NCrypto::NZip::CDecoder::Filter
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_b$66637 = -21						; size = 1
_temp$66636 = -20					; size = 4
_i$66632 = -16						; size = 4
_Key2$ = -12						; size = 4
_Key1$ = -8						; size = 4
_Key0$ = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?Filter@CDecoder@NZip@NCrypto@@UAGIPAEI@Z PROC		; NCrypto::NZip::CDecoder::Filter
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _Key0$[ebp], ecx
; Line 96
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _Key1$[ebp], eax
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _Key2$[ebp], edx
; Line 99
	mov	DWORD PTR _i$66632[ebp], 0
	jmp	SHORT $LN3@Filter@2
$LN2@Filter@2:
	mov	eax, DWORD PTR _i$66632[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66632[ebp], eax
$LN3@Filter@2:
	mov	ecx, DWORD PTR _i$66632[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	$LN1@Filter@2
; Line 101
	mov	edx, DWORD PTR _Key2$[ebp]
	or	edx, 2
	mov	DWORD PTR _temp$66636[ebp], edx
; Line 102
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _i$66632[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _temp$66636[ebp]
	xor	edx, 1
	imul	edx, DWORD PTR _temp$66636[ebp]
	shr	edx, 8
	movzx	eax, dl
	xor	ecx, eax
	mov	BYTE PTR _b$66637[ebp], cl
; Line 103
	movzx	ecx, BYTE PTR _b$66637[ebp]
	xor	ecx, DWORD PTR _Key0$[ebp]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _Key0$[ebp]
	shr	edx, 8
	xor	edx, DWORD PTR _g_CrcTable[ecx*4]
	mov	DWORD PTR _Key0$[ebp], edx
	mov	eax, DWORD PTR _Key0$[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _Key1$[ebp]
	imul	eax, 134775813				; 08088405H
	add	eax, 1
	mov	DWORD PTR _Key1$[ebp], eax
	mov	ecx, DWORD PTR _Key1$[ebp]
	shr	ecx, 24					; 00000018H
	movzx	edx, cl
	xor	edx, DWORD PTR _Key2$[ebp]
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _Key2$[ebp]
	shr	eax, 8
	xor	eax, DWORD PTR _g_CrcTable[edx*4]
	mov	DWORD PTR _Key2$[ebp], eax
; Line 104
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _i$66632[ebp]
	mov	dl, BYTE PTR _b$66637[ebp]
	mov	BYTE PTR [ecx], dl
; Line 105
	jmp	$LN2@Filter@2
$LN1@Filter@2:
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Key0$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 108
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _Key1$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _Key2$[ebp]
	mov	DWORD PTR [ecx+20], edx
; Line 111
	mov	eax, DWORD PTR _size$[ebp]
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Filter@CDecoder@NZip@NCrypto@@UAGIPAEI@Z ENDP		; NCrypto::NZip::CDecoder::Filter
_TEXT	ENDS
END

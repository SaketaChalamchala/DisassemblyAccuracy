; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\C\AesOpt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	@AesCbc_Encode_Intel@12
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\c\aesopt.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_w$4795 = -40						; size = 4
_numRounds2$4793 = -36					; size = 4
_m$ = -32						; size = 16
_data$ = -8						; size = 4
_p$ = -4						; size = 4
_numBlocks$ = 8						; size = 4
@AesCbc_Encode_Intel@12 PROC
; _p$ = ecx
; _data$ = edx
; Line 19
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _data$[ebp], edx
	mov	DWORD PTR _p$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	XMMWORD PTR _m$[ebp], xmm0
; Line 21
	jmp	SHORT $LN6@
$LN5@:
	mov	ecx, DWORD PTR _numBlocks$[ebx]
	sub	ecx, 1
	mov	DWORD PTR _numBlocks$[ebx], ecx
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _data$[ebp], edx
$LN6@:
	cmp	DWORD PTR _numBlocks$[ebx], 0
	je	$LN4@
; Line 23
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR _numRounds2$4793[ebp], ecx
; Line 24
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 48					; 00000030H
	mov	DWORD PTR _w$4795[ebp], edx
; Line 25
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	xmm1, XMMWORD PTR _m$[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m$[ebp], xmm1
; Line 26
	mov	ecx, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+32]
	movdqa	xmm1, XMMWORD PTR _m$[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m$[ebp], xmm1
$LN3@:
; Line 29
	mov	edx, DWORD PTR _w$4795[ebp]
	movdqa	xmm0, XMMWORD PTR [edx]
	movdqa	xmm1, XMMWORD PTR _m$[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m$[ebp], xmm1
; Line 30
	mov	eax, DWORD PTR _w$4795[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+16]
	movdqa	xmm1, XMMWORD PTR _m$[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m$[ebp], xmm1
; Line 31
	mov	ecx, DWORD PTR _w$4795[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _w$4795[ebp], ecx
; Line 33
	mov	edx, DWORD PTR _numRounds2$4793[ebp]
	sub	edx, 1
	mov	DWORD PTR _numRounds2$4793[ebp], edx
	jne	SHORT $LN3@
; Line 34
	mov	eax, DWORD PTR _w$4795[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	xmm1, XMMWORD PTR _m$[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m$[ebp], xmm1
; Line 35
	mov	ecx, DWORD PTR _w$4795[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+16]
	movdqa	xmm1, XMMWORD PTR _m$[ebp]
	aesenclast xmm1, xmm0
	movdqa	XMMWORD PTR _m$[ebp], xmm1
; Line 36
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR _m$[ebp]
	movdqa	XMMWORD PTR [edx], xmm0
; Line 37
	jmp	$LN5@
$LN4@:
; Line 38
	mov	eax, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR _m$[ebp]
	movdqa	XMMWORD PTR [eax], xmm0
; Line 39
	pop	edi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	4
@AesCbc_Encode_Intel@12 ENDP
_TEXT	ENDS
PUBLIC	@AesCbc_Decode_Intel@12
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_m$4832 = -224						; size = 16
_w$4831 = -200						; size = 4
_numRounds2$4829 = -196					; size = 4
_t$4825 = -192						; size = 16
_t$4824 = -176						; size = 16
_t$4823 = -160						; size = 16
_t$4822 = -144						; size = 16
_t$4821 = -128						; size = 16
_t$4817 = -112						; size = 16
_m2$4816 = -96						; size = 16
_m1$4815 = -80						; size = 16
_m0$4814 = -64						; size = 16
_w$4813 = -40						; size = 4
_numRounds2$4811 = -36					; size = 4
_iv$ = -32						; size = 16
_data$ = -8						; size = 4
_p$ = -4						; size = 4
_numBlocks$ = 8						; size = 4
@AesCbc_Decode_Intel@12 PROC
; _p$ = ecx
; _data$ = edx
; Line 56
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _data$[ebp], edx
	mov	DWORD PTR _p$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	XMMWORD PTR _iv$[ebp], xmm0
; Line 58
	jmp	SHORT $LN12@
$LN11@:
	mov	ecx, DWORD PTR _numBlocks$[ebx]
	sub	ecx, 3
	mov	DWORD PTR _numBlocks$[ebx], ecx
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 48					; 00000030H
	mov	DWORD PTR _data$[ebp], edx
$LN12@:
	cmp	DWORD PTR _numBlocks$[ebx], 3
	jb	$LN10@
; Line 60
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _numRounds2$4811[ebp], ecx
; Line 61
	mov	edx, DWORD PTR _numRounds2$4811[ebp]
	shl	edx, 1
	shl	edx, 4
	add	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR _w$4813[ebp], edx
; Line 64
	mov	eax, DWORD PTR _w$4813[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+32]
	movdqa	XMMWORD PTR _t$4817[ebp], xmm0
; Line 65
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx]
	movdqa	xmm1, XMMWORD PTR _t$4817[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4814[ebp], xmm1
; Line 66
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [edx+16]
	movdqa	xmm1, XMMWORD PTR _t$4817[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4815[ebp], xmm1
; Line 67
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+32]
	movdqa	xmm1, XMMWORD PTR _t$4817[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4816[ebp], xmm1
; Line 69
	mov	ecx, DWORD PTR _numRounds2$4811[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numRounds2$4811[ebp], ecx
$LN9@:
; Line 72
	mov	edx, DWORD PTR _w$4813[ebp]
	movdqa	xmm0, XMMWORD PTR [edx+16]
	movdqa	XMMWORD PTR _t$4821[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4821[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4814[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4814[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4821[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4815[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4815[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4821[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4816[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4816[ebp], xmm1
; Line 73
	mov	eax, DWORD PTR _w$4813[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	XMMWORD PTR _t$4822[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4822[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4814[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4814[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4822[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4815[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4815[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4822[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4816[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4816[ebp], xmm1
; Line 74
	mov	ecx, DWORD PTR _w$4813[ebp]
	sub	ecx, 32					; 00000020H
	mov	DWORD PTR _w$4813[ebp], ecx
; Line 76
	mov	edx, DWORD PTR _numRounds2$4811[ebp]
	sub	edx, 1
	mov	DWORD PTR _numRounds2$4811[ebp], edx
	jne	$LN9@
; Line 77
	mov	eax, DWORD PTR _w$4813[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+16]
	movdqa	XMMWORD PTR _t$4823[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4823[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4814[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4814[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4823[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4815[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4815[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4823[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4816[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4816[ebp], xmm1
; Line 78
	mov	ecx, DWORD PTR _w$4813[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx]
	movdqa	XMMWORD PTR _t$4824[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4824[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4814[ebp]
	aesdeclast xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4814[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4824[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4815[ebp]
	aesdeclast xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4815[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4824[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4816[ebp]
	aesdeclast xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4816[ebp], xmm1
; Line 82
	movdqa	xmm0, XMMWORD PTR _iv$[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4814[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _t$4825[ebp], xmm1
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [edx]
	movdqa	XMMWORD PTR _iv$[ebp], xmm0
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR _t$4825[ebp]
	movdqa	XMMWORD PTR [eax], xmm0
; Line 83
	movdqa	xmm0, XMMWORD PTR _iv$[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4815[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _t$4825[ebp], xmm1
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+16]
	movdqa	XMMWORD PTR _iv$[ebp], xmm0
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR _t$4825[ebp]
	movdqa	XMMWORD PTR [edx+16], xmm0
; Line 84
	movdqa	xmm0, XMMWORD PTR _iv$[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4816[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _t$4825[ebp], xmm1
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+32]
	movdqa	XMMWORD PTR _iv$[ebp], xmm0
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR _t$4825[ebp]
	movdqa	XMMWORD PTR [ecx+32], xmm0
; Line 86
	jmp	$LN11@
$LN10@:
; Line 87
	jmp	SHORT $LN6@
$LN5@:
	mov	edx, DWORD PTR _numBlocks$[ebx]
	sub	edx, 1
	mov	DWORD PTR _numBlocks$[ebx], edx
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _data$[ebp], eax
$LN6@:
	cmp	DWORD PTR _numBlocks$[ebx], 0
	je	$LN4@
; Line 89
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _numRounds2$4829[ebp], edx
; Line 90
	mov	eax, DWORD PTR _numRounds2$4829[ebp]
	shl	eax, 1
	shl	eax, 4
	add	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _w$4831[ebp], eax
; Line 91
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR _w$4831[ebp]
	movdqa	xmm1, XMMWORD PTR [edx+32]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4832[ebp], xmm1
; Line 92
	mov	eax, DWORD PTR _numRounds2$4829[ebp]
	sub	eax, 1
	mov	DWORD PTR _numRounds2$4829[ebp], eax
$LN3@:
; Line 95
	mov	ecx, DWORD PTR _w$4831[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+16]
	movdqa	xmm1, XMMWORD PTR _m$4832[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4832[ebp], xmm1
; Line 96
	mov	edx, DWORD PTR _w$4831[ebp]
	movdqa	xmm0, XMMWORD PTR [edx]
	movdqa	xmm1, XMMWORD PTR _m$4832[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4832[ebp], xmm1
; Line 97
	mov	eax, DWORD PTR _w$4831[ebp]
	sub	eax, 32					; 00000020H
	mov	DWORD PTR _w$4831[ebp], eax
; Line 99
	mov	ecx, DWORD PTR _numRounds2$4829[ebp]
	sub	ecx, 1
	mov	DWORD PTR _numRounds2$4829[ebp], ecx
	jne	SHORT $LN3@
; Line 100
	mov	edx, DWORD PTR _w$4831[ebp]
	movdqa	xmm0, XMMWORD PTR [edx+16]
	movdqa	xmm1, XMMWORD PTR _m$4832[ebp]
	aesdec	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4832[ebp], xmm1
; Line 101
	mov	eax, DWORD PTR _w$4831[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	xmm1, XMMWORD PTR _m$4832[ebp]
	aesdeclast xmm1, xmm0
	movdqa	XMMWORD PTR _m$4832[ebp], xmm1
; Line 103
	movdqa	xmm0, XMMWORD PTR _iv$[ebp]
	movdqa	xmm1, XMMWORD PTR _m$4832[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4832[ebp], xmm1
; Line 104
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx]
	movdqa	XMMWORD PTR _iv$[ebp], xmm0
; Line 105
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	xmm0, XMMWORD PTR _m$4832[ebp]
	movdqa	XMMWORD PTR [edx], xmm0
; Line 106
	jmp	$LN5@
$LN4@:
; Line 107
	mov	eax, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR _iv$[ebp]
	movdqa	XMMWORD PTR [eax], xmm0
; Line 108
	pop	edi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	4
@AesCbc_Decode_Intel@12 ENDP
_TEXT	ENDS
PUBLIC	@AesCtr_Code_Intel@12
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_m$4869 = -224						; size = 16
_w$4868 = -200						; size = 4
_numRounds2$4866 = -196					; size = 4
_t$4862 = -192						; size = 16
_t$4861 = -176						; size = 16
_t$4860 = -160						; size = 16
_t$4859 = -144						; size = 16
_t$4855 = -128						; size = 16
_m2$4854 = -112						; size = 16
_m1$4853 = -96						; size = 16
_m0$4852 = -80						; size = 16
_w$4851 = -56						; size = 4
_numRounds2$4849 = -52					; size = 4
_one$ = -48						; size = 16
_ctr$ = -32						; size = 16
_data$ = -8						; size = 4
_p$ = -4						; size = 4
_numBlocks$ = 8						; size = 4
@AesCtr_Code_Intel@12 PROC
; _p$ = ecx
; _data$ = edx
; Line 111
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _data$[ebp], edx
	mov	DWORD PTR _p$[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	XMMWORD PTR _ctr$[ebp], xmm0
; Line 114
	mov	DWORD PTR _one$[ebp], 1
	mov	DWORD PTR _one$[ebp+4], 0
; Line 115
	mov	DWORD PTR _one$[ebp+8], 0
	mov	DWORD PTR _one$[ebp+12], 0
; Line 116
	jmp	SHORT $LN12@
$LN11@:
	mov	ecx, DWORD PTR _numBlocks$[ebx]
	sub	ecx, 3
	mov	DWORD PTR _numBlocks$[ebx], ecx
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 48					; 00000030H
	mov	DWORD PTR _data$[ebp], edx
$LN12@:
	cmp	DWORD PTR _numBlocks$[ebx], 3
	jb	$LN10@
; Line 118
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR _numRounds2$4849[ebp], ecx
; Line 119
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR _w$4851[ebp], edx
; Line 122
	mov	eax, DWORD PTR _w$4851[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+32]
	movdqa	XMMWORD PTR _t$4855[ebp], xmm0
; Line 123
	movdqa	xmm0, XMMWORD PTR _one$[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	paddq	xmm1, xmm0
	movdqa	XMMWORD PTR _ctr$[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4855[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4852[ebp], xmm1
; Line 124
	movdqa	xmm0, XMMWORD PTR _one$[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	paddq	xmm1, xmm0
	movdqa	XMMWORD PTR _ctr$[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4855[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4853[ebp], xmm1
; Line 125
	movdqa	xmm0, XMMWORD PTR _one$[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	paddq	xmm1, xmm0
	movdqa	XMMWORD PTR _ctr$[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4855[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4854[ebp], xmm1
; Line 127
	mov	ecx, DWORD PTR _w$4851[ebp]
	add	ecx, 48					; 00000030H
	mov	DWORD PTR _w$4851[ebp], ecx
$LN9@:
; Line 130
	mov	edx, DWORD PTR _w$4851[ebp]
	movdqa	xmm0, XMMWORD PTR [edx]
	movdqa	XMMWORD PTR _t$4859[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4859[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4852[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4852[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4859[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4853[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4853[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4859[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4854[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4854[ebp], xmm1
; Line 131
	mov	eax, DWORD PTR _w$4851[ebp]
	movdqa	xmm0, XMMWORD PTR [eax+16]
	movdqa	XMMWORD PTR _t$4860[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4860[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4852[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4852[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4860[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4853[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4853[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4860[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4854[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4854[ebp], xmm1
; Line 132
	mov	ecx, DWORD PTR _w$4851[ebp]
	add	ecx, 32					; 00000020H
	mov	DWORD PTR _w$4851[ebp], ecx
; Line 134
	mov	edx, DWORD PTR _numRounds2$4849[ebp]
	sub	edx, 1
	mov	DWORD PTR _numRounds2$4849[ebp], edx
	jne	$LN9@
; Line 135
	mov	eax, DWORD PTR _w$4851[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	XMMWORD PTR _t$4861[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4861[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4852[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4852[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4861[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4853[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4853[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4861[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4854[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4854[ebp], xmm1
; Line 136
	mov	ecx, DWORD PTR _w$4851[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+16]
	movdqa	XMMWORD PTR _t$4862[ebp], xmm0
	movdqa	xmm0, XMMWORD PTR _t$4862[ebp]
	movdqa	xmm1, XMMWORD PTR _m0$4852[ebp]
	aesenclast xmm1, xmm0
	movdqa	XMMWORD PTR _m0$4852[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4862[ebp]
	movdqa	xmm1, XMMWORD PTR _m1$4853[ebp]
	aesenclast xmm1, xmm0
	movdqa	XMMWORD PTR _m1$4853[ebp], xmm1
	movdqa	xmm0, XMMWORD PTR _t$4862[ebp]
	movdqa	xmm1, XMMWORD PTR _m2$4854[ebp]
	aesenclast xmm1, xmm0
	movdqa	XMMWORD PTR _m2$4854[ebp], xmm1
; Line 137
	movdqa	xmm0, XMMWORD PTR _m0$4852[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	xmm1, XMMWORD PTR [edx]
	pxor	xmm1, xmm0
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	XMMWORD PTR [eax], xmm1
; Line 138
	movdqa	xmm0, XMMWORD PTR _m1$4853[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	xmm1, XMMWORD PTR [ecx+16]
	pxor	xmm1, xmm0
	mov	edx, DWORD PTR _data$[ebp]
	movdqa	XMMWORD PTR [edx+16], xmm1
; Line 139
	movdqa	xmm0, XMMWORD PTR _m2$4854[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	xmm1, XMMWORD PTR [eax+32]
	pxor	xmm1, xmm0
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	XMMWORD PTR [ecx+32], xmm1
; Line 140
	jmp	$LN11@
$LN10@:
; Line 141
	jmp	SHORT $LN6@
$LN5@:
	mov	edx, DWORD PTR _numBlocks$[ebx]
	sub	edx, 1
	mov	DWORD PTR _numBlocks$[ebx], edx
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _data$[ebp], eax
$LN6@:
	cmp	DWORD PTR _numBlocks$[ebx], 0
	je	$LN4@
; Line 143
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	DWORD PTR _numRounds2$4866[ebp], edx
; Line 144
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _w$4868[ebp], eax
; Line 146
	movdqa	xmm0, XMMWORD PTR _one$[ebp]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	paddq	xmm1, xmm0
	movdqa	XMMWORD PTR _ctr$[ebp], xmm1
; Line 147
	mov	ecx, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+32]
	movdqa	xmm1, XMMWORD PTR _ctr$[ebp]
	pxor	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4869[ebp], xmm1
; Line 148
	mov	edx, DWORD PTR _w$4868[ebp]
	add	edx, 48					; 00000030H
	mov	DWORD PTR _w$4868[ebp], edx
$LN3@:
; Line 151
	mov	eax, DWORD PTR _w$4868[ebp]
	movdqa	xmm0, XMMWORD PTR [eax]
	movdqa	xmm1, XMMWORD PTR _m$4869[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4869[ebp], xmm1
; Line 152
	mov	ecx, DWORD PTR _w$4868[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx+16]
	movdqa	xmm1, XMMWORD PTR _m$4869[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4869[ebp], xmm1
; Line 153
	mov	edx, DWORD PTR _w$4868[ebp]
	add	edx, 32					; 00000020H
	mov	DWORD PTR _w$4868[ebp], edx
; Line 155
	mov	eax, DWORD PTR _numRounds2$4866[ebp]
	sub	eax, 1
	mov	DWORD PTR _numRounds2$4866[ebp], eax
	jne	SHORT $LN3@
; Line 156
	mov	ecx, DWORD PTR _w$4868[ebp]
	movdqa	xmm0, XMMWORD PTR [ecx]
	movdqa	xmm1, XMMWORD PTR _m$4869[ebp]
	aesenc	xmm1, xmm0
	movdqa	XMMWORD PTR _m$4869[ebp], xmm1
; Line 157
	mov	edx, DWORD PTR _w$4868[ebp]
	movdqa	xmm0, XMMWORD PTR [edx+16]
	movdqa	xmm1, XMMWORD PTR _m$4869[ebp]
	aesenclast xmm1, xmm0
	movdqa	XMMWORD PTR _m$4869[ebp], xmm1
; Line 158
	movdqa	xmm0, XMMWORD PTR _m$4869[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	movdqa	xmm1, XMMWORD PTR [eax]
	pxor	xmm1, xmm0
	mov	ecx, DWORD PTR _data$[ebp]
	movdqa	XMMWORD PTR [ecx], xmm1
; Line 159
	jmp	$LN5@
$LN4@:
; Line 160
	mov	edx, DWORD PTR _p$[ebp]
	movdqa	xmm0, XMMWORD PTR _ctr$[ebp]
	movdqa	XMMWORD PTR [edx], xmm0
; Line 161
	pop	edi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	4
@AesCtr_Code_Intel@12 ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\FileSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG67245 DB	'GetDiskFreeSpaceExA', 00H
$SG67246 DB	'kernel32.dll', 00H
	ORG $+3
$SG67258 DB	'GetDiskFreeSpaceExW', 00H
$SG67259 DB	'kernel32.dll', 00H
CONST	ENDS
PUBLIC	?BOOLToBool@@YG_NH@Z				; BOOLToBool
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	__$ArrayPad$
PUBLIC	?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z ; NWindows::NFile::NSystem::MyGetVolumeInformation
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
EXTRN	__imp__GetVolumeInformationW@32:PROC
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z:PROC ; MultiByteToUnicodeString
EXTRN	??0AString@@QAE@PBD@Z:PROC			; AString::AString
EXTRN	__imp__GetVolumeInformationA@32:PROC
EXTRN	?fs2fas@@YG?AVAString@@PB_W@Z:PROC		; fs2fas
EXTRN	?g_IsNT@@3_NA:BYTE				; g_IsNT
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__ehfuncinfo$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$4
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\filesystem.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv160 = -1712						; size = 4
tv131 = -1708						; size = 4
tv157 = -1704						; size = 4
tv87 = -1700						; size = 4
tv154 = -1696						; size = 4
tv161 = -1692						; size = 4
$T67302 = -1688						; size = 12
$T67301 = -1676						; size = 12
$T67300 = -1664						; size = 12
$T67299 = -1652						; size = 12
$T67298 = -1640						; size = 12
_f$67213 = -1624					; size = 524
_v$67212 = -1092					; size = 524
_f$67205 = -560						; size = 262
_v$67204 = -288						; size = 262
_res$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rootPath$ = 8						; size = 4
_volumeName$ = 12					; size = 4
_volumeSerialNumber$ = 16				; size = 4
_maximumComponentLength$ = 20				; size = 4
_fileSystemFlags$ = 24					; size = 4
_fileSystemName$ = 28					; size = 4
?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z PROC ; NWindows::NFile::NSystem::MyGetVolumeInformation
; Line 29
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1700				; 000006a4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1712]
	mov	ecx, 425				; 000001a9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 32
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	$LN2@MyGetVolum
; Line 34
	mov	BYTE PTR _v$67204[ebp], 0
; Line 35
	mov	BYTE PTR _f$67205[ebp], 0
; Line 39
	mov	esi, esp
	push	260					; 00000104H
	lea	ecx, DWORD PTR _f$67205[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileSystemFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _maximumComponentLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _volumeSerialNumber$[ebp]
	push	ecx
	push	260					; 00000104H
	lea	edx, DWORD PTR _v$67204[ebp]
	push	edx
	mov	eax, DWORD PTR _rootPath$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67298[ebp]
	push	ecx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv161[ebp], eax
	mov	edx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv154[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv154[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	DWORD PTR __imp__GetVolumeInformationA@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67298[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 40
	lea	eax, DWORD PTR _v$67204[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67299[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	push	0
	lea	ecx, DWORD PTR $T67299[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67300[ebp]
	push	edx
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	DWORD PTR tv87[ebp], eax
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv157[ebp]
	push	ecx
	mov	ecx, DWORD PTR _volumeName$[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T67300[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67299[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 41
	lea	edx, DWORD PTR _f$67205[ebp]
	push	edx
	lea	ecx, DWORD PTR $T67301[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	push	0
	lea	eax, DWORD PTR $T67301[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67302[ebp]
	push	ecx
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	DWORD PTR tv131[ebp], eax
	mov	edx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv160[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv160[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileSystemName$[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T67302[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67301[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 43
	jmp	SHORT $LN1@MyGetVolum
$LN2@MyGetVolum:
; Line 46
	xor	ecx, ecx
	mov	WORD PTR _v$67212[ebp], cx
; Line 47
	xor	edx, edx
	mov	WORD PTR _f$67213[ebp], dx
; Line 51
	mov	esi, esp
	push	260					; 00000104H
	lea	eax, DWORD PTR _f$67213[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileSystemFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _maximumComponentLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _volumeSerialNumber$[ebp]
	push	eax
	push	260					; 00000104H
	lea	ecx, DWORD PTR _v$67212[ebp]
	push	ecx
	mov	edx, DWORD PTR _rootPath$[ebp]
	push	edx
	call	DWORD PTR __imp__GetVolumeInformationW@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 52
	lea	eax, DWORD PTR _v$67212[ebp]
	push	eax
	mov	ecx, DWORD PTR _volumeName$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 53
	lea	ecx, DWORD PTR _f$67213[ebp]
	push	ecx
	mov	ecx, DWORD PTR _fileSystemName$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN1@MyGetVolum:
; Line 55
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
; Line 56
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@MyGetVolum
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1712				; 000006b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN16@MyGetVolum:
	DD	4
	DD	$LN15@MyGetVolum
$LN15@MyGetVolum:
	DD	-288					; fffffee0H
	DD	262					; 00000106H
	DD	$LN10@MyGetVolum
	DD	-560					; fffffdd0H
	DD	262					; 00000106H
	DD	$LN11@MyGetVolum
	DD	-1092					; fffffbbcH
	DD	524					; 0000020cH
	DD	$LN12@MyGetVolum
	DD	-1624					; fffff9a8H
	DD	524					; 0000020cH
	DD	$LN13@MyGetVolum
$LN13@MyGetVolum:
	DB	102					; 00000066H
	DB	0
$LN12@MyGetVolum:
	DB	118					; 00000076H
	DB	0
$LN11@MyGetVolum:
	DB	102					; 00000066H
	DB	0
$LN10@MyGetVolum:
	DB	118					; 00000076H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$0:
	lea	ecx, DWORD PTR $T67298[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$1:
	lea	ecx, DWORD PTR $T67299[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$2:
	lea	ecx, DWORD PTR $T67300[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$3:
	lea	ecx, DWORD PTR $T67301[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z$4:
	lea	ecx, DWORD PTR $T67302[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1712]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MyGetVolumeInformation@NSystem@NFile@NWindows@@YG_NPB_WAAVUString@@PAK221@Z ENDP ; NWindows::NFile::NSystem::MyGetVolumeInformation
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67332 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67332[ebp], ecx
	mov	edx, DWORD PTR $T67332[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67337 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67337[ebp], ecx
	mov	edx, DWORD PTR $T67337[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?BOOLToBool@@YG_NH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
?BOOLToBool@@YG_NH@Z PROC				; BOOLToBool, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\defs.h
; Line 10
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	cmp	DWORD PTR _v$[ebp], 0
	setne	al
	pop	ebp
	ret	4
?BOOLToBool@@YG_NH@Z ENDP				; BOOLToBool
_TEXT	ENDS
PUBLIC	?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NSystem::MyGetDriveType
EXTRN	__imp__GetDriveTypeW@4:PROC
EXTRN	__imp__GetDriveTypeA@4:PROC
xdata$x	SEGMENT
__unwindtable$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z$0
__ehfuncinfo$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv78 = -36						; size = 4
tv79 = -32						; size = 4
$T67343 = -28						; size = 12
$T67342 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pathName$ = 8						; size = 4
?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z PROC	; NWindows::NFile::NSystem::MyGetDriveType
; File c:\workspace\7z1505-src\cpp\windows\filesystem.cpp
; Line 59
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 61
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	SHORT $LN2@MyGetDrive
; Line 63
	mov	ecx, DWORD PTR _pathName$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67343[ebp]
	push	edx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv78[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__GetDriveTypeA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T67342[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67343[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	eax, DWORD PTR $T67342[ebp]
	jmp	SHORT $LN3@MyGetDrive
; Line 65
	jmp	SHORT $LN3@MyGetDrive
$LN2@MyGetDrive:
; Line 68
	mov	esi, esp
	mov	ecx, DWORD PTR _pathName$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetDriveTypeW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@MyGetDrive:
; Line 70
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z$0:
	lea	ecx, DWORD PTR $T67343[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MyGetDriveType@NSystem@NFile@NWindows@@YGIPB_W@Z ENDP	; NWindows::NFile::NSystem::MyGetDriveType
PUBLIC	?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
EXTRN	__imp__GetDiskFreeSpaceW@20:PROC
EXTRN	__imp__GetDiskFreeSpaceA@20:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__allmul:PROC
xdata$x	SEGMENT
__unwindtable$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z$1
__ehfuncinfo$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv168 = -212						; size = 4
tv170 = -208						; size = 4
tv166 = -204						; size = 4
tv169 = -200						; size = 4
$T67352 = -196						; size = 12
$T67351 = -181						; size = 1
$T67350 = -180						; size = 12
_freeSize2$67263 = -164					; size = 8
_totalSize2$67262 = -148				; size = 8
_freeBytesToCaller2$67261 = -132			; size = 8
_pGetDiskFreeSpaceEx$67256 = -120			; size = 4
_freeSize2$67250 = -112					; size = 8
_totalSize2$67249 = -96					; size = 8
_freeBytesToCaller2$67248 = -80				; size = 8
_pGetDiskFreeSpaceEx$67243 = -68			; size = 4
_sizeIsDetected$ = -61					; size = 1
_numClusters$ = -56					; size = 4
_numFreeClusters$ = -44					; size = 4
_bytesPerSector$ = -32					; size = 4
_numSectorsPerCluster$ = -20				; size = 4
__$EHRec$ = -12						; size = 12
_rootPath$ = 8						; size = 4
_clusterSize$ = 12					; size = 4
_totalSize$ = 16					; size = 4
_freeSize$ = 20						; size = 4
?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z PROC ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
; Line 87
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 200				; 000000c8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 89
	mov	BYTE PTR _sizeIsDetected$[ebp], 0
; Line 91
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	$LN7@MyGetDiskF
; Line 94
	mov	esi, esp
	push	OFFSET $SG67245
	mov	edi, esp
	push	OFFSET $SG67246
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pGetDiskFreeSpaceEx$67243[ebp], eax
; Line 95
	cmp	DWORD PTR _pGetDiskFreeSpaceEx$67243[ebp], 0
	je	$LN6@MyGetDiskF
; Line 98
	mov	esi, esp
	lea	ecx, DWORD PTR _freeSize2$67250[ebp]
	push	ecx
	lea	edx, DWORD PTR _totalSize2$67249[ebp]
	push	edx
	lea	eax, DWORD PTR _freeBytesToCaller2$67248[ebp]
	push	eax
	mov	ecx, DWORD PTR _rootPath$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67350[ebp]
	push	edx
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv169[ebp], eax
	mov	eax, DWORD PTR tv169[ebp]
	mov	DWORD PTR tv166[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv166[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	DWORD PTR _pGetDiskFreeSpaceEx$67243[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	mov	BYTE PTR _sizeIsDetected$[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67350[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 99
	mov	ecx, DWORD PTR _totalSize$[ebp]
	mov	edx, DWORD PTR _totalSize2$67249[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _totalSize2$67249[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; Line 100
	mov	ecx, DWORD PTR _freeSize$[ebp]
	mov	edx, DWORD PTR _freeSize2$67250[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _freeSize2$67250[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN6@MyGetDiskF:
; Line 102
	mov	esi, esp
	lea	ecx, DWORD PTR _numClusters$[ebp]
	push	ecx
	lea	edx, DWORD PTR _numFreeClusters$[ebp]
	push	edx
	lea	eax, DWORD PTR _bytesPerSector$[ebp]
	push	eax
	lea	ecx, DWORD PTR _numSectorsPerCluster$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rootPath$[ebp]
	push	edx
	lea	eax, DWORD PTR $T67352[ebp]
	push	eax
	call	?fs2fas@@YG?AVAString@@PB_W@Z		; fs2fas
	mov	DWORD PTR tv170[ebp], eax
	mov	ecx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv168[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	call	DWORD PTR __imp__GetDiskFreeSpaceA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR $T67351[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67352[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	movzx	edx, BYTE PTR $T67351[ebp]
	test	edx, edx
	je	SHORT $LN5@MyGetDiskF
; Line 103
	xor	al, al
	jmp	$LN8@MyGetDiskF
$LN5@MyGetDiskF:
; Line 105
	jmp	$LN4@MyGetDiskF
$LN7@MyGetDiskF:
; Line 109
	mov	esi, esp
	push	OFFSET $SG67258
	mov	edi, esp
	push	OFFSET $SG67259
	call	DWORD PTR __imp__GetModuleHandleA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pGetDiskFreeSpaceEx$67256[ebp], eax
; Line 110
	cmp	DWORD PTR _pGetDiskFreeSpaceEx$67256[ebp], 0
	je	SHORT $LN3@MyGetDiskF
; Line 113
	mov	esi, esp
	lea	eax, DWORD PTR _freeSize2$67263[ebp]
	push	eax
	lea	ecx, DWORD PTR _totalSize2$67262[ebp]
	push	ecx
	lea	edx, DWORD PTR _freeBytesToCaller2$67261[ebp]
	push	edx
	mov	eax, DWORD PTR _rootPath$[ebp]
	push	eax
	call	DWORD PTR _pGetDiskFreeSpaceEx$67256[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	mov	BYTE PTR _sizeIsDetected$[ebp], al
; Line 114
	mov	ecx, DWORD PTR _totalSize$[ebp]
	mov	edx, DWORD PTR _totalSize2$67262[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _totalSize2$67262[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; Line 115
	mov	ecx, DWORD PTR _freeSize$[ebp]
	mov	edx, DWORD PTR _freeSize2$67263[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _freeSize2$67263[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN3@MyGetDiskF:
; Line 117
	mov	esi, esp
	lea	ecx, DWORD PTR _numClusters$[ebp]
	push	ecx
	lea	edx, DWORD PTR _numFreeClusters$[ebp]
	push	edx
	lea	eax, DWORD PTR _bytesPerSector$[ebp]
	push	eax
	lea	ecx, DWORD PTR _numSectorsPerCluster$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rootPath$[ebp]
	push	edx
	call	DWORD PTR __imp__GetDiskFreeSpaceW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@MyGetDiskF
; Line 118
	xor	al, al
	jmp	SHORT $LN8@MyGetDiskF
$LN4@MyGetDiskF:
; Line 120
	mov	eax, DWORD PTR _bytesPerSector$[ebp]
	mov	ecx, DWORD PTR _numSectorsPerCluster$[ebp]
	mul	ecx
	mov	ecx, DWORD PTR _clusterSize$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 121
	movzx	edx, BYTE PTR _sizeIsDetected$[ebp]
	test	edx, edx
	jne	SHORT $LN1@MyGetDiskF
; Line 123
	mov	eax, DWORD PTR _numClusters$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _clusterSize$[ebp]
	push	ecx
	push	eax
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	call	__allmul
	mov	ecx, DWORD PTR _totalSize$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 124
	mov	edx, DWORD PTR _numFreeClusters$[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _clusterSize$[ebp]
	push	eax
	push	edx
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	__allmul
	mov	ecx, DWORD PTR _freeSize$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
$LN1@MyGetDiskF:
; Line 126
	mov	al, 1
$LN8@MyGetDiskF:
; Line 127
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@MyGetDiskF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN24@MyGetDiskF:
	DD	10					; 0000000aH
	DD	$LN23@MyGetDiskF
$LN23@MyGetDiskF:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@MyGetDiskF
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@MyGetDiskF
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN14@MyGetDiskF
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN15@MyGetDiskF
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN16@MyGetDiskF
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN17@MyGetDiskF
	DD	-112					; ffffff90H
	DD	8
	DD	$LN18@MyGetDiskF
	DD	-132					; ffffff7cH
	DD	8
	DD	$LN19@MyGetDiskF
	DD	-148					; ffffff6cH
	DD	8
	DD	$LN20@MyGetDiskF
	DD	-164					; ffffff5cH
	DD	8
	DD	$LN21@MyGetDiskF
$LN21@MyGetDiskF:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN20@MyGetDiskF:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN19@MyGetDiskF:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN18@MyGetDiskF:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN17@MyGetDiskF:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN16@MyGetDiskF:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN15@MyGetDiskF:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN14@MyGetDiskF:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN13@MyGetDiskF:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN12@MyGetDiskF:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z$0:
	lea	ecx, DWORD PTR $T67350[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z$1:
	lea	ecx, DWORD PTR $T67352[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MyGetDiskFreeSpace@NSystem@NFile@NWindows@@YG_NPB_WAA_K11@Z ENDP ; NWindows::NFile::NSystem::MyGetDiskFreeSpace
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Tar\TarHandlerOut.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?GetFileTimeType@CHandler@NTar@NArchive@@UAGJPAI@Z ; NArchive::NTar::CHandler::GetFileTimeType
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarhandlerout.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_type$ = 12						; size = 4
?GetFileTimeType@CHandler@NTar@NArchive@@UAGJPAI@Z PROC	; NArchive::NTar::CHandler::GetFileTimeType
; Line 22
	push	ebp
	mov	ebp, esp
; Line 23
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax], 1
; Line 24
	xor	eax, eax
; Line 25
	pop	ebp
	ret	8
?GetFileTimeType@CHandler@NTar@NArchive@@UAGJPAI@Z ENDP	; NArchive::NTar::CHandler::GetFileTimeType
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
PUBLIC	?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z ; NArchive::NTar::GetPropString
EXTRN	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z:PROC ; UnicodeStringToMultiByte2
EXTRN	?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z:PROC ; ConvertUnicodeToUTF8
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?MakeLegalName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z:PROC ; NArchive::NItemName::MakeLegalName
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
xdata$x	SEGMENT
__unwindtable$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z$2
__ehfuncinfo$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv153 = -92						; size = 4
tv87 = -88						; size = 4
$T69722 = -84						; size = 4
$T69721 = -80						; size = 4
$T69720 = -76						; size = 12
$T69719 = -64						; size = 4
_s$69238 = -56						; size = 12
___result__$69234 = -40					; size = 4
_prop$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_callback$ = 8						; size = 4
_index$ = 12						; size = 4
_propId$ = 16						; size = 4
_res$ = 20						; size = 4
_codePage$ = 24						; size = 4
_convertSlash$ = 28					; size = 1
?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z PROC ; NArchive::NTar::GetPropString
; Line 29
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 30
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 31
	mov	esi, esp
	lea	eax, DWORD PTR _prop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _propId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$69234[ebp], eax
	cmp	DWORD PTR ___result__$69234[ebp], 0
	je	SHORT $LN7@GetPropStr
	mov	ecx, DWORD PTR ___result__$69234[ebp]
	mov	DWORD PTR $T69719[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T69719[ebp]
	jmp	$LN8@GetPropStr
$LN7@GetPropStr:
; Line 32
	movzx	edx, WORD PTR _prop$[ebp]
	cmp	edx, 8
	jne	$LN6@GetPropStr
; Line 34
	mov	eax, DWORD PTR _prop$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _s$69238[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 35
	movzx	ecx, BYTE PTR _convertSlash$[ebp]
	test	ecx, ecx
	je	SHORT $LN5@GetPropStr
; Line 36
	lea	edx, DWORD PTR _s$69238[ebp]
	push	edx
	lea	eax, DWORD PTR $T69720[ebp]
	push	eax
	call	?MakeLegalName@NItemName@NArchive@@YG?AVUString@@ABV3@@Z ; NArchive::NItemName::MakeLegalName
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv153[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv153[ebp]
	push	edx
	lea	ecx, DWORD PTR _s$69238[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T69720[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN5@GetPropStr:
; Line 37
	cmp	DWORD PTR _codePage$[ebp], 65001	; 0000fde9H
	jne	SHORT $LN4@GetPropStr
; Line 39
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$69238[ebp]
	push	ecx
	call	?ConvertUnicodeToUTF8@@YGXABVUString@@AAVAString@@@Z ; ConvertUnicodeToUTF8
; Line 42
	jmp	SHORT $LN3@GetPropStr
$LN4@GetPropStr:
; Line 43
	mov	edx, DWORD PTR _codePage$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$69238[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?UnicodeStringToMultiByte2@@YGXAAVAString@@ABVUString@@I@Z ; UnicodeStringToMultiByte2
$LN3@GetPropStr:
; Line 44
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _s$69238[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	jmp	SHORT $LN2@GetPropStr
$LN6@GetPropStr:
; Line 45
	movzx	edx, WORD PTR _prop$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetPropStr
; Line 46
	mov	DWORD PTR $T69721[ebp], -2147024809	; 80070057H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T69721[ebp]
	jmp	SHORT $LN8@GetPropStr
$LN2@GetPropStr:
; Line 47
	mov	DWORD PTR $T69722[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T69722[ebp]
$LN8@GetPropStr:
; Line 48
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@GetPropStr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN17@GetPropStr:
	DD	2
	DD	$LN16@GetPropStr
$LN16@GetPropStr:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN13@GetPropStr
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN14@GetPropStr
$LN14@GetPropStr:
	DB	115					; 00000073H
	DB	0
$LN13@GetPropStr:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z$0:
	lea	ecx, DWORD PTR _prop$[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z$1:
	lea	ecx, DWORD PTR _s$69238[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z$2:
	lea	ecx, DWORD PTR $T69720[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z ENDP ; NArchive::NTar::GetPropString
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T69742 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69742[ebp], ecx
	mov	edx, DWORD PTR $T69742[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
_TEXT	ENDS
PUBLIC	?Sort@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEXP6GHPBQAX0PAX@Z1@Z ; CObjectVector<NArchive::NTar::CUpdateItem>::Sort
PUBLIC	?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z ; CObjectVector<NArchive::NTar::CUpdateItem>::Add
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
PUBLIC	?Back@AString@@QBEDXZ				; AString::Back
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	?IntToBool@@YG_NH@Z				; IntToBool
PUBLIC	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
PUBLIC	??1CUpdateItem@NTar@NArchive@@QAE@XZ		; NArchive::NTar::CUpdateItem::~CUpdateItem
PUBLIC	??0CUpdateItem@NTar@NArchive@@QAE@XZ		; NArchive::NTar::CUpdateItem::CUpdateItem
PUBLIC	??0?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::CObjectVector<NArchive::NTar::CUpdateItem>
PUBLIC	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
PUBLIC	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
PUBLIC	?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z ; NArchive::NTar::CHandler::UpdateItems
EXTRN	?UpdateArchive@NTar@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@ABV?$CObjectVector@UCItemEx@NTar@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@IPAUIArchiveUpdateCallback@@@Z:PROC ; NArchive::NTar::UpdateArchive
EXTRN	?FileTimeToUnixTime64@NTime@NWindows@@YG_JABU_FILETIME@@@Z:PROC ; NWindows::NTime::FileTimeToUnixTime64
xdata$x	SEGMENT
__catchsym$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0
__tryblocktable$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z DD 00H
	DD	06H
	DD	07H
	DD	01H
	DD	FLAT:__catchsym$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$8
__ehfuncinfo$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv443 = -436						; size = 4
tv442 = -432						; size = 4
tv441 = -428						; size = 4
tv440 = -424						; size = 4
tv439 = -417						; size = 1
tv438 = -416						; size = 4
tv437 = -412						; size = 4
tv436 = -406						; size = 1
tv435 = -405						; size = 1
tv434 = -404						; size = 4
tv433 = -400						; size = 4
tv432 = -396						; size = 4
tv431 = -392						; size = 4
tv430 = -388						; size = 4
tv429 = -384						; size = 4
tv428 = -380						; size = 4
tv427 = -375						; size = 1
tv426 = -374						; size = 1
tv425 = -373						; size = 1
tv424 = -372						; size = 4
tv423 = -368						; size = 4
tv88 = -364						; size = 4
tv422 = -360						; size = 4
tv421 = -356						; size = 4
tv420 = -352						; size = 4
$T69765 = -348						; size = 4
$T69764 = -344						; size = 4
$T69763 = -340						; size = 4
$T69762 = -336						; size = 4
$T69761 = -332						; size = 4
$T69760 = -328						; size = 4
$T69759 = -324						; size = 4
$T69758 = -320						; size = 4
$T69757 = -316						; size = 4
$T69756 = -312						; size = 4
$T69755 = -308						; size = 4
$T69754 = -304						; size = 4
$T69753 = -300						; size = 4
$T69752 = -296						; size = 4
$T69751 = -292						; size = 4
___result__$69402 = -288				; size = 4
_prop$69401 = -280					; size = 16
___result__$69397 = -260				; size = 4
___result__$69394 = -256				; size = 4
___result__$69390 = -252				; size = 4
___result__$69381 = -248				; size = 4
_prop$69380 = -240					; size = 16
___result__$69371 = -220				; size = 4
_prop$69370 = -212					; size = 16
___result__$69360 = -192				; size = 4
_prop$69359 = -184					; size = 16
___result__$69355 = -164				; size = 4
_indexInArchive$69351 = -156				; size = 4
_newProps$69350 = -144					; size = 4
_newData$69349 = -132					; size = 4
_ui$69348 = -120					; size = 72
_i$69344 = -44						; size = 4
_codePage$69343 = -40					; size = 4
_updateItems$69342 = -32				; size = 12
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_outStream$ = 12					; size = 4
_numItems$ = 16						; size = 4
_callback$ = 20						; size = 4
?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z PROC ; NArchive::NTar::CHandler::UpdateItems
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarhandlerout.cpp
; Line 69
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 70
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv420[ebp], eax
	cmp	DWORD PTR tv420[ebp], 0
	je	SHORT $LN30@UpdateItem
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+196], 0
	jne	SHORT $LN31@UpdateItem
$LN30@UpdateItem:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	mov	DWORD PTR tv421[ebp], eax
	cmp	DWORD PTR tv421[ebp], 0
	je	SHORT $LN32@UpdateItem
$LN31@UpdateItem:
; Line 72
	mov	eax, -2147467263			; 80004001H
	jmp	$LN34@UpdateItem
$LN32@UpdateItem:
; Line 73
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??0?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::CObjectVector<NArchive::NTar::CUpdateItem>
	mov	DWORD PTR tv422[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+202]
	test	edx, edx
	je	SHORT $LN36@UpdateItem
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+204]
	mov	DWORD PTR tv88[ebp], ecx
	jmp	SHORT $LN37@UpdateItem
$LN36@UpdateItem:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+212]
	mov	DWORD PTR tv88[ebp], eax
$LN37@UpdateItem:
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR _codePage$69343[ebp], ecx
; Line 75
	mov	DWORD PTR _i$69344[ebp], 0
	jmp	SHORT $LN29@UpdateItem
$LN28@UpdateItem:
	mov	edx, DWORD PTR _i$69344[ebp]
	add	edx, 1
	mov	DWORD PTR _i$69344[ebp], edx
$LN29@UpdateItem:
	mov	eax, DWORD PTR _i$69344[ebp]
	cmp	eax, DWORD PTR _numItems$[ebp]
	jae	$LN27@UpdateItem
; Line 77
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??0CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	DWORD PTR tv423[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 81
	cmp	DWORD PTR _callback$[ebp], 0
	jne	SHORT $LN26@UpdateItem
; Line 82
	mov	DWORD PTR $T69751[ebp], -2147467259	; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69751[ebp]
	jmp	$LN34@UpdateItem
$LN26@UpdateItem:
; Line 83
	mov	esi, esp
	lea	ecx, DWORD PTR _indexInArchive$69351[ebp]
	push	ecx
	lea	edx, DWORD PTR _newProps$69350[ebp]
	push	edx
	lea	eax, DWORD PTR _newData$69349[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$69344[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv424[ebp], eax
	mov	eax, DWORD PTR tv424[ebp]
	mov	DWORD PTR ___result__$69355[ebp], eax
	cmp	DWORD PTR ___result__$69355[ebp], 0
	je	SHORT $LN25@UpdateItem
	mov	ecx, DWORD PTR ___result__$69355[ebp]
	mov	DWORD PTR $T69752[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69752[ebp]
	jmp	$LN34@UpdateItem
$LN25@UpdateItem:
; Line 84
	mov	edx, DWORD PTR _newProps$69350[ebp]
	push	edx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv425[ebp], al
	mov	al, BYTE PTR tv425[ebp]
	mov	BYTE PTR _ui$69348[ebp+29], al
; Line 85
	mov	ecx, DWORD PTR _newData$69349[ebp]
	push	ecx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv426[ebp], al
	mov	dl, BYTE PTR tv426[ebp]
	mov	BYTE PTR _ui$69348[ebp+28], dl
; Line 86
	mov	eax, DWORD PTR _indexInArchive$69351[ebp]
	mov	DWORD PTR _ui$69348[ebp], eax
; Line 87
	mov	ecx, DWORD PTR _i$69344[ebp]
	mov	DWORD PTR _ui$69348[ebp+4], ecx
; Line 89
	mov	edx, DWORD PTR _newProps$69350[ebp]
	push	edx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv427[ebp], al
	movzx	eax, BYTE PTR tv427[ebp]
	test	eax, eax
	je	$LN24@UpdateItem
; Line 92
	lea	ecx, DWORD PTR _prop$69359[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv428[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 93
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$69359[ebp]
	push	ecx
	push	6
	mov	edx, DWORD PTR _i$69344[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _callback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv429[ebp], eax
	mov	ecx, DWORD PTR tv429[ebp]
	mov	DWORD PTR ___result__$69360[ebp], ecx
	cmp	DWORD PTR ___result__$69360[ebp], 0
	je	SHORT $LN23@UpdateItem
	mov	edx, DWORD PTR ___result__$69360[ebp]
	mov	DWORD PTR $T69753[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69359[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69753[ebp]
	jmp	$LN34@UpdateItem
$LN23@UpdateItem:
; Line 94
	movzx	eax, WORD PTR _prop$69359[ebp]
	test	eax, eax
	jne	SHORT $LN22@UpdateItem
; Line 95
	mov	BYTE PTR _ui$69348[ebp+30], 0
	jmp	SHORT $LN21@UpdateItem
$LN22@UpdateItem:
; Line 96
	movzx	ecx, WORD PTR _prop$69359[ebp]
	cmp	ecx, 11					; 0000000bH
	je	SHORT $LN20@UpdateItem
; Line 97
	mov	DWORD PTR $T69754[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69359[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69754[ebp]
	jmp	$LN34@UpdateItem
; Line 98
	jmp	SHORT $LN21@UpdateItem
$LN20@UpdateItem:
; Line 99
	movsx	edx, WORD PTR _prop$69359[ebp+8]
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	BYTE PTR _ui$69348[ebp+30], dl
$LN21@UpdateItem:
; Line 100
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69359[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
; Line 103
	lea	ecx, DWORD PTR _prop$69370[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv430[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 104
	mov	esi, esp
	lea	eax, DWORD PTR _prop$69370[ebp]
	push	eax
	push	53					; 00000035H
	mov	ecx, DWORD PTR _i$69344[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv431[ebp], eax
	mov	eax, DWORD PTR tv431[ebp]
	mov	DWORD PTR ___result__$69371[ebp], eax
	cmp	DWORD PTR ___result__$69371[ebp], 0
	je	SHORT $LN18@UpdateItem
	mov	ecx, DWORD PTR ___result__$69371[ebp]
	mov	DWORD PTR $T69755[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69370[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69755[ebp]
	jmp	$LN34@UpdateItem
$LN18@UpdateItem:
; Line 105
	movzx	edx, WORD PTR _prop$69370[ebp]
	test	edx, edx
	jne	SHORT $LN17@UpdateItem
; Line 106
	movzx	eax, BYTE PTR _ui$69348[ebp+30]
	neg	eax
	sbb	eax, eax
	and	eax, -16384				; ffffc000H
	add	eax, 32768				; 00008000H
	or	eax, 511				; 000001ffH
	mov	DWORD PTR _ui$69348[ebp+24], eax
	jmp	SHORT $LN16@UpdateItem
$LN17@UpdateItem:
; Line 107
	movzx	ecx, WORD PTR _prop$69370[ebp]
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN15@UpdateItem
; Line 108
	mov	DWORD PTR $T69756[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69370[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69756[ebp]
	jmp	$LN34@UpdateItem
; Line 109
	jmp	SHORT $LN16@UpdateItem
$LN15@UpdateItem:
; Line 110
	mov	edx, DWORD PTR _prop$69370[ebp+8]
	mov	DWORD PTR _ui$69348[ebp+24], edx
$LN16@UpdateItem:
; Line 111
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69370[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
; Line 113
	lea	ecx, DWORD PTR _prop$69380[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv432[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
; Line 114
	mov	esi, esp
	lea	eax, DWORD PTR _prop$69380[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _i$69344[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv433[ebp], eax
	mov	eax, DWORD PTR tv433[ebp]
	mov	DWORD PTR ___result__$69381[ebp], eax
	cmp	DWORD PTR ___result__$69381[ebp], 0
	je	SHORT $LN13@UpdateItem
	mov	ecx, DWORD PTR ___result__$69381[ebp]
	mov	DWORD PTR $T69757[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69380[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69757[ebp]
	jmp	$LN34@UpdateItem
$LN13@UpdateItem:
; Line 115
	movzx	edx, WORD PTR _prop$69380[ebp]
	test	edx, edx
	jne	SHORT $LN12@UpdateItem
; Line 116
	mov	DWORD PTR _ui$69348[ebp+8], 0
	mov	DWORD PTR _ui$69348[ebp+12], 0
	jmp	SHORT $LN11@UpdateItem
$LN12@UpdateItem:
; Line 117
	movzx	eax, WORD PTR _prop$69380[ebp]
	cmp	eax, 64					; 00000040H
	je	SHORT $LN10@UpdateItem
; Line 118
	mov	DWORD PTR $T69758[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69380[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69758[ebp]
	jmp	$LN34@UpdateItem
; Line 119
	jmp	SHORT $LN11@UpdateItem
$LN10@UpdateItem:
; Line 120
	lea	ecx, DWORD PTR _prop$69380[ebp+8]
	push	ecx
	call	?FileTimeToUnixTime64@NTime@NWindows@@YG_JABU_FILETIME@@@Z ; NWindows::NTime::FileTimeToUnixTime64
	mov	DWORD PTR _ui$69348[ebp+8], eax
	mov	DWORD PTR _ui$69348[ebp+12], edx
$LN11@UpdateItem:
; Line 121
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69380[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
; Line 122
	push	1
	mov	edx, DWORD PTR _codePage$69343[ebp]
	push	edx
	lea	eax, DWORD PTR _ui$69348[ebp+32]
	push	eax
	push	3
	mov	ecx, DWORD PTR _i$69344[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	call	?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z ; NArchive::NTar::GetPropString
	mov	DWORD PTR tv434[ebp], eax
	mov	eax, DWORD PTR tv434[ebp]
	mov	DWORD PTR ___result__$69390[ebp], eax
	cmp	DWORD PTR ___result__$69390[ebp], 0
	je	SHORT $LN8@UpdateItem
	mov	ecx, DWORD PTR ___result__$69390[ebp]
	mov	DWORD PTR $T69759[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69759[ebp]
	jmp	$LN34@UpdateItem
$LN8@UpdateItem:
; Line 123
	movzx	edx, BYTE PTR _ui$69348[ebp+30]
	test	edx, edx
	je	SHORT $LN7@UpdateItem
	lea	ecx, DWORD PTR _ui$69348[ebp+32]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	mov	BYTE PTR tv435[ebp], al
	movzx	eax, BYTE PTR tv435[ebp]
	test	eax, eax
	jne	SHORT $LN7@UpdateItem
	lea	ecx, DWORD PTR _ui$69348[ebp+32]
	call	?Back@AString@@QBEDXZ			; AString::Back
	mov	BYTE PTR tv436[ebp], al
	movsx	ecx, BYTE PTR tv436[ebp]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN7@UpdateItem
; Line 124
	push	47					; 0000002fH
	lea	ecx, DWORD PTR _ui$69348[ebp+32]
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
$LN7@UpdateItem:
; Line 125
	push	0
	mov	edx, DWORD PTR _codePage$69343[ebp]
	push	edx
	lea	eax, DWORD PTR _ui$69348[ebp+44]
	push	eax
	push	25					; 00000019H
	mov	ecx, DWORD PTR _i$69344[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	call	?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z ; NArchive::NTar::GetPropString
	mov	DWORD PTR tv437[ebp], eax
	mov	eax, DWORD PTR tv437[ebp]
	mov	DWORD PTR ___result__$69394[ebp], eax
	cmp	DWORD PTR ___result__$69394[ebp], 0
	je	SHORT $LN6@UpdateItem
	mov	ecx, DWORD PTR ___result__$69394[ebp]
	mov	DWORD PTR $T69760[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69760[ebp]
	jmp	$LN34@UpdateItem
$LN6@UpdateItem:
; Line 126
	push	0
	mov	edx, DWORD PTR _codePage$69343[ebp]
	push	edx
	lea	eax, DWORD PTR _ui$69348[ebp+56]
	push	eax
	push	26					; 0000001aH
	mov	ecx, DWORD PTR _i$69344[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	call	?GetPropString@NTar@NArchive@@YGJPAUIArchiveUpdateCallback@@IKAAVAString@@I_N@Z ; NArchive::NTar::GetPropString
	mov	DWORD PTR tv438[ebp], eax
	mov	eax, DWORD PTR tv438[ebp]
	mov	DWORD PTR ___result__$69397[ebp], eax
	cmp	DWORD PTR ___result__$69397[ebp], 0
	je	SHORT $LN24@UpdateItem
	mov	ecx, DWORD PTR ___result__$69397[ebp]
	mov	DWORD PTR $T69761[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69761[ebp]
	jmp	$LN34@UpdateItem
$LN24@UpdateItem:
; Line 129
	mov	edx, DWORD PTR _newData$69349[ebp]
	push	edx
	call	?IntToBool@@YG_NH@Z			; IntToBool
	mov	BYTE PTR tv439[ebp], al
	movzx	eax, BYTE PTR tv439[ebp]
	test	eax, eax
	je	$LN4@UpdateItem
; Line 131
	lea	ecx, DWORD PTR _prop$69401[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv440[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 6
; Line 132
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$69401[ebp]
	push	ecx
	push	7
	mov	edx, DWORD PTR _i$69344[ebp]
	push	edx
	mov	eax, DWORD PTR _callback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _callback$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv441[ebp], eax
	mov	ecx, DWORD PTR tv441[ebp]
	mov	DWORD PTR ___result__$69402[ebp], ecx
	cmp	DWORD PTR ___result__$69402[ebp], 0
	je	SHORT $LN3@UpdateItem
	mov	edx, DWORD PTR ___result__$69402[ebp]
	mov	DWORD PTR $T69762[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69401[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69762[ebp]
	jmp	$LN34@UpdateItem
$LN3@UpdateItem:
; Line 133
	movzx	eax, WORD PTR _prop$69401[ebp]
	cmp	eax, 21					; 00000015H
	je	SHORT $LN2@UpdateItem
; Line 134
	mov	DWORD PTR $T69763[ebp], -2147024809	; 80070057H
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69401[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69763[ebp]
	jmp	$LN34@UpdateItem
$LN2@UpdateItem:
; Line 135
	mov	ecx, DWORD PTR _prop$69401[ebp+8]
	mov	DWORD PTR _ui$69348[ebp+16], ecx
	mov	edx, DWORD PTR _prop$69401[ebp+12]
	mov	DWORD PTR _ui$69348[ebp+20], edx
; Line 141
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _prop$69401[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
$LN4@UpdateItem:
; Line 142
	lea	eax, DWORD PTR _ui$69348[ebp]
	push	eax
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z ; CObjectVector<NArchive::NTar::CUpdateItem>::Add
; Line 143
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _ui$69348[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	jmp	$LN28@UpdateItem
$LN27@UpdateItem:
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+201]
	test	edx, edx
	je	SHORT $LN1@UpdateItem
; Line 147
	push	0
	push	OFFSET ?CompareUpdateItems@NTar@NArchive@@YGHPBQAX0PAX@Z ; NArchive::NTar::CompareUpdateItems
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	?Sort@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEXP6GHPBQAX0PAX@Z1@Z ; CObjectVector<NArchive::NTar::CUpdateItem>::Sort
$LN1@UpdateItem:
; Line 149
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ; CMyComPtr<IInStream>::operator IInStream *
	mov	DWORD PTR tv442[ebp], eax
	mov	eax, DWORD PTR _callback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codePage$69343[ebp]
	push	ecx
	lea	edx, DWORD PTR _updateItems$69342[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv442[ebp]
	push	edx
	call	?UpdateArchive@NTar@NArchive@@YGJPAUIInStream@@PAUISequentialOutStream@@ABV?$CObjectVector@UCItemEx@NTar@NArchive@@@@ABV?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@IPAUIArchiveUpdateCallback@@@Z ; NArchive::NTar::UpdateArchive
	mov	DWORD PTR tv443[ebp], eax
	mov	eax, DWORD PTR tv443[ebp]
	mov	DWORD PTR $T69764[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	call	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
	mov	eax, DWORD PTR $T69764[ebp]
	jmp	SHORT $LN34@UpdateItem
__catch$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$0:
; Line 150
	mov	DWORD PTR $T69765[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN47@UpdateItem
	ret	0
	mov	eax, __tryend$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$1
	ret	0
__tryend$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN34@UpdateItem
$LN47@UpdateItem:
	mov	eax, DWORD PTR $T69765[ebp]
$LN34@UpdateItem:
; Line 151
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN60@UpdateItem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN60@UpdateItem:
	DD	9
	DD	$LN59@UpdateItem
$LN59@UpdateItem:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN49@UpdateItem
	DD	-120					; ffffff88H
	DD	72					; 00000048H
	DD	$LN50@UpdateItem
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN51@UpdateItem
	DD	-144					; ffffff70H
	DD	4
	DD	$LN52@UpdateItem
	DD	-156					; ffffff64H
	DD	4
	DD	$LN53@UpdateItem
	DD	-184					; ffffff48H
	DD	16					; 00000010H
	DD	$LN54@UpdateItem
	DD	-212					; ffffff2cH
	DD	16					; 00000010H
	DD	$LN55@UpdateItem
	DD	-240					; ffffff10H
	DD	16					; 00000010H
	DD	$LN56@UpdateItem
	DD	-280					; fffffee8H
	DD	16					; 00000010H
	DD	$LN57@UpdateItem
$LN57@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN56@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN55@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN54@UpdateItem:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN53@UpdateItem:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN52@UpdateItem:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN51@UpdateItem:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN50@UpdateItem:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	0
$LN49@UpdateItem:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$2:
	lea	ecx, DWORD PTR _updateItems$69342[ebp]
	jmp	??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$3:
	lea	ecx, DWORD PTR _ui$69348[ebp]
	jmp	??1CUpdateItem@NTar@NArchive@@QAE@XZ
__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$4:
	lea	ecx, DWORD PTR _prop$69359[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$5:
	lea	ecx, DWORD PTR _prop$69370[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$6:
	lea	ecx, DWORD PTR _prop$69380[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z$7:
	lea	ecx, DWORD PTR _prop$69401[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-440]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UpdateItems@CHandler@NTar@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z ENDP ; NArchive::NTar::CHandler::UpdateItems
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IntToBool@@YG_NH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
?IntToBool@@YG_NH@Z PROC				; IntToBool, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 18
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	cmp	DWORD PTR _value$[ebp], 0
	setne	al
	pop	ebp
	ret	4
?IntToBool@@YG_NH@Z ENDP				; IntToBool
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@AString@@QBEDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@AString@@QBEDXZ PROC				; AString::Back, COMDAT
; _this$ = ecx
; Line 242
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	al, BYTE PTR [ecx+eax-1]
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@AString@@QBEDXZ ENDP				; AString::Back
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
_TEXT	ENDS
PUBLIC	??$MyCompare@H@@YGHHH@Z				; MyCompare<int>
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_u2$ = -8						; size = 4
_u1$ = -4						; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
___formal$ = 16						; size = 4
?CompareUpdateItems@NTar@NArchive@@YGHPBQAX0PAX@Z PROC	; NArchive::NTar::CompareUpdateItems
; File c:\workspace\7z1505-src\cpp\7zip\archive\tar\tarhandlerout.cpp
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 54
	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _u1$[ebp], ecx
; Line 55
	mov	edx, DWORD PTR _p2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _u2$[ebp], eax
; Line 56
	mov	ecx, DWORD PTR _u1$[ebp]
	movzx	edx, BYTE PTR [ecx+29]
	test	edx, edx
	jne	SHORT $LN3@CompareUpd
; Line 58
	mov	eax, DWORD PTR _u2$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	SHORT $LN2@CompareUpd
; Line 59
	or	eax, -1
	jmp	SHORT $LN4@CompareUpd
$LN2@CompareUpd:
; Line 60
	mov	edx, DWORD PTR _u2$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _u1$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$MyCompare@H@@YGHHH@Z			; MyCompare<int>
	jmp	SHORT $LN4@CompareUpd
$LN3@CompareUpd:
; Line 62
	mov	eax, DWORD PTR _u2$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	jne	SHORT $LN1@CompareUpd
; Line 63
	mov	eax, 1
	jmp	SHORT $LN4@CompareUpd
$LN1@CompareUpd:
; Line 64
	mov	edx, DWORD PTR _u2$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _u1$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$MyCompare@H@@YGHHH@Z			; MyCompare<int>
$LN4@CompareUpd:
; Line 65
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CompareUpdateItems@NTar@NArchive@@YGHPBQAX0PAX@Z ENDP	; NArchive::NTar::CompareUpdateItems
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CUpdateItem@NTar@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@XZ$1
__ehfuncinfo$??0CUpdateItem@NTar@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CUpdateItem@NTar@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CUpdateItem@NTar@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CUpdateItem@NTar@NArchive@@QAE@XZ PROC		; NArchive::NTar::CUpdateItem::CUpdateItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0CUpdateItem@NTar@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CUpdateItem@NTar@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CUpdateItem@NTar@NArchive@@QAE@XZ ENDP		; NArchive::NTar::CUpdateItem::CUpdateItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T69815 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69815[ebp], ecx
	mov	edx, DWORD PTR $T69815[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CUpdateItem@NTar@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CUpdateItem@NTar@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CUpdateItem@NTar@NArchive@@QAE@XZ$1
__ehfuncinfo$??1CUpdateItem@NTar@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CUpdateItem@NTar@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CUpdateItem@NTar@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CUpdateItem@NTar@NArchive@@QAE@XZ PROC		; NArchive::NTar::CUpdateItem::~CUpdateItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CUpdateItem@NTar@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CUpdateItem@NTar@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1CUpdateItem@NTar@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CUpdateItem@NTar@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CUpdateItem@NTar@NArchive@@QAE@XZ ENDP		; NArchive::NTar::CUpdateItem::~CUpdateItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ PROC	; CMyComPtr<IInStream>::operator IInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIInStream@@@@QBEPAUIInStream@@XZ ENDP	; CMyComPtr<IInStream>::operator IInStream *
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ PROC ; CObjectVector<NArchive::NTar::CUpdateItem>::CObjectVector<NArchive::NTar::CUpdateItem>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ENDP ; CObjectVector<NArchive::NTar::CUpdateItem>::CObjectVector<NArchive::NTar::CUpdateItem>
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
PUBLIC	??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z	; NArchive::NTar::CUpdateItem::CUpdateItem
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T69837 = -24						; size = 4
$T69836 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z PROC ; CObjectVector<NArchive::NTar::CUpdateItem>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T69837[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T69837[ebp], 0
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T69837[ebp]
	call	??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T69836[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T69836[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z$0:
	mov	eax, DWORD PTR $T69837[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEIABUCUpdateItem@NTar@NArchive@@@Z ENDP ; CObjectVector<NArchive::NTar::CUpdateItem>::Add
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GCUpdateItem@NTar@NArchive@@QAEPAXI@Z	; NArchive::NTar::CUpdateItem::`scalar deleting destructor'
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T69850 = -28						; size = 4
$T69849 = -24						; size = 4
_i$69455 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ PROC ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$69455[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$69455[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$69455[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$69455[ebp], eax
	mov	ecx, DWORD PTR _i$69455[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T69850[ebp], edx
	mov	eax, DWORD PTR $T69850[ebp]
	mov	DWORD PTR $T69849[ebp], eax
	cmp	DWORD PTR $T69849[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T69849[ebp]
	call	??_GCUpdateItem@NTar@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAE@XZ ENDP ; CObjectVector<NArchive::NTar::CUpdateItem>::~CObjectVector<NArchive::NTar::CUpdateItem>
PUBLIC	?Sort@?$CRecordVector@PAX@@QAEXP6GHPBQAX0PAX@Z1@Z ; CRecordVector<void *>::Sort
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Sort@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEXP6GHPBQAX0PAX@Z1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_compare$ = 8						; size = 4
_param$ = 12						; size = 4
?Sort@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEXP6GHPBQAX0PAX@Z1@Z PROC ; CObjectVector<NArchive::NTar::CUpdateItem>::Sort, COMDAT
; _this$ = ecx
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Sort@?$CRecordVector@PAX@@QAEXP6GHPBQAX0PAX@Z1@Z ; CRecordVector<void *>::Sort
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Sort@?$CObjectVector@UCUpdateItem@NTar@NArchive@@@@QAEXP6GHPBQAX0PAX@Z1@Z ENDP ; CObjectVector<NArchive::NTar::CUpdateItem>::Sort
_TEXT	ENDS
EXTRN	??0AString@@QAE@ABV0@@Z:PROC			; AString::AString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z$1
__ehfuncinfo$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z PROC	; NArchive::NTar::CUpdateItem::CUpdateItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [edx+20], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+28]
	mov	BYTE PTR [ecx+28], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+29]
	mov	BYTE PTR [ecx+29], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+30]
	mov	BYTE PTR [ecx+30], al
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CUpdateItem@NTar@NArchive@@QAE@ABU012@@Z ENDP	; NArchive::NTar::CUpdateItem::CUpdateItem
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCUpdateItem@NTar@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCUpdateItem@NTar@NArchive@@QAEPAXI@Z PROC		; NArchive::NTar::CUpdateItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CUpdateItem@NTar@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCUpdateItem@NTar@NArchive@@QAEPAXI@Z ENDP		; NArchive::NTar::CUpdateItem::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T69881 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T69881[ebp], ecx
	mov	edx, DWORD PTR $T69881[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
PUBLIC	?SortRefDown@?$CRecordVector@PAX@@SGXPAPAXIIP6GHPBQAX1PAX@Z2@Z ; CRecordVector<void *>::SortRefDown
PUBLIC	?Front@?$CRecordVector@PAX@@QAEAAPAXXZ		; CRecordVector<void *>::Front
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Sort@?$CRecordVector@PAX@@QAEXP6GHPBQAX0PAX@Z1@Z
_TEXT	SEGMENT
_temp$69498 = -20					; size = 4
_i$69491 = -16						; size = 4
_p$ = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_compare$ = 8						; size = 4
_param$ = 12						; size = 4
?Sort@?$CRecordVector@PAX@@QAEXP6GHPBQAX0PAX@Z1@Z PROC	; CRecordVector<void *>::Sort, COMDAT
; _this$ = ecx
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _size$[ebp], ecx
; Line 344
	cmp	DWORD PTR _size$[ebp], 1
	ja	SHORT $LN7@Sort
; Line 345
	jmp	$LN8@Sort
$LN7@Sort:
; Line 346
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Front@?$CRecordVector@PAX@@QAEAAPAXXZ	; CRecordVector<void *>::Front
	sub	eax, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 348
	mov	edx, DWORD PTR _size$[ebp]
	shr	edx, 1
	mov	DWORD PTR _i$69491[ebp], edx
$LN6@Sort:
; Line 350
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$69491[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	?SortRefDown@?$CRecordVector@PAX@@SGXPAPAXIIP6GHPBQAX1PAX@Z2@Z ; CRecordVector<void *>::SortRefDown
; Line 351
	mov	edx, DWORD PTR _i$69491[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$69491[ebp], edx
	jne	SHORT $LN6@Sort
$LN3@Sort:
; Line 355
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _temp$69498[ebp], edx
; Line 356
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _size$[ebp], eax
; Line 357
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _temp$69498[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 358
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _compare$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	?SortRefDown@?$CRecordVector@PAX@@SGXPAPAXIIP6GHPBQAX1PAX@Z2@Z ; CRecordVector<void *>::SortRefDown
; Line 360
	cmp	DWORD PTR _size$[ebp], 1
	ja	SHORT $LN3@Sort
$LN8@Sort:
; Line 361
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Sort@?$CRecordVector@PAX@@QAEXP6GHPBQAX0PAX@Z1@Z ENDP	; CRecordVector<void *>::Sort
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T69891 = -20						; size = 4
$T69890 = -16						; size = 4
_p$69503 = -12						; size = 4
_newCapacity$69502 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$69502[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$69502[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T69890[ebp], eax
	mov	eax, DWORD PTR $T69890[ebp]
	mov	DWORD PTR _p$69503[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$69503[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T69891[ebp], edx
	mov	eax, DWORD PTR $T69891[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$69503[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$69502[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Front@?$CRecordVector@PAX@@QAEAAPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Front@?$CRecordVector@PAX@@QAEAAPAXXZ PROC		; CRecordVector<void *>::Front, COMDAT
; _this$ = ecx
; Line 230
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?Front@?$CRecordVector@PAX@@QAEAAPAXXZ ENDP		; CRecordVector<void *>::Front
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SortRefDown@?$CRecordVector@PAX@@SGXPAPAXIIP6GHPBQAX1PAX@Z2@Z
_TEXT	SEGMENT
_s$69517 = -16						; size = 4
_temp$ = -8						; size = 4
_p$ = 8							; size = 4
_k$ = 12						; size = 4
_size$ = 16						; size = 4
_compare$ = 20						; size = 4
_param$ = 24						; size = 4
?SortRefDown@?$CRecordVector@PAX@@SGXPAPAXIIP6GHPBQAX1PAX@Z2@Z PROC ; CRecordVector<void *>::SortRefDown, COMDAT
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 325
	mov	eax, DWORD PTR _k$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _temp$[ebp], edx
$LN5@SortRefDow:
; Line 328
	mov	eax, DWORD PTR _k$[ebp]
	shl	eax, 1
	mov	DWORD PTR _s$69517[ebp], eax
; Line 329
	mov	ecx, DWORD PTR _s$69517[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jbe	SHORT $LN3@SortRefDow
; Line 330
	jmp	SHORT $LN4@SortRefDow
$LN3@SortRefDow:
; Line 331
	mov	edx, DWORD PTR _s$69517[ebp]
	cmp	edx, DWORD PTR _size$[ebp]
	jae	SHORT $LN2@SortRefDow
	mov	esi, esp
	mov	eax, DWORD PTR _param$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$69517[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _s$69517[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4+4]
	push	eax
	call	DWORD PTR _compare$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	SHORT $LN2@SortRefDow
; Line 332
	mov	ecx, DWORD PTR _s$69517[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$69517[ebp], ecx
$LN2@SortRefDow:
; Line 333
	mov	esi, esp
	mov	edx, DWORD PTR _param$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$69517[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	DWORD PTR _compare$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN1@SortRefDow
; Line 334
	jmp	SHORT $LN4@SortRefDow
$LN1@SortRefDow:
; Line 335
	mov	ecx, DWORD PTR _k$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _s$69517[ebp]
	mov	esi, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [esi+eax*4]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 336
	mov	ecx, DWORD PTR _s$69517[ebp]
	mov	DWORD PTR _k$[ebp], ecx
; Line 337
	jmp	$LN5@SortRefDow
$LN4@SortRefDow:
; Line 338
	mov	edx, DWORD PTR _k$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 339
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@SortRefDow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN10@SortRefDow:
	DD	1
	DD	$LN9@SortRefDow
$LN9@SortRefDow:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@SortRefDow
$LN8@SortRefDow:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?SortRefDown@?$CRecordVector@PAX@@SGXPAPAXIIP6GHPBQAX1PAX@Z2@Z ENDP ; CRecordVector<void *>::SortRefDown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyCompare@H@@YGHHH@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyCompare@H@@YGHHH@Z PROC				; MyCompare<int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN3@MyCompare
	mov	DWORD PTR tv67[ebp], -1
	jmp	SHORT $LN4@MyCompare
$LN3@MyCompare:
	mov	ecx, DWORD PTR _a$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR _b$[ebp]
	setne	dl
	mov	DWORD PTR tv67[ebp], edx
$LN4@MyCompare:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyCompare@H@@YGHHH@Z ENDP				; MyCompare<int>
_TEXT	ENDS
END

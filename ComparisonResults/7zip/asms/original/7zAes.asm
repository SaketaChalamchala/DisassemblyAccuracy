; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Crypto\7zAes.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??$?8E@@YG_NABV?$CBuffer@E@@0@Z			; operator==<unsigned char>
PUBLIC	?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z	; NCrypto::N7z::CKeyInfo::IsEqualTo
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$67662 = -8						; size = 4
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z PROC	; NCrypto::N7z::CKeyInfo::IsEqualTo
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN5@IsEqualTo
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN6@IsEqualTo
$LN5@IsEqualTo:
; Line 30
	xor	al, al
	jmp	SHORT $LN7@IsEqualTo
$LN6@IsEqualTo:
; Line 31
	mov	DWORD PTR _i$67662[ebp], 0
	jmp	SHORT $LN4@IsEqualTo
$LN3@IsEqualTo:
	mov	eax, DWORD PTR _i$67662[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67662[ebp], eax
$LN4@IsEqualTo:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$67662[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN2@IsEqualTo
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$67662[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	mov	edx, DWORD PTR _a$[ebp]
	add	edx, DWORD PTR _i$67662[ebp]
	movzx	eax, BYTE PTR [edx+8]
	cmp	ecx, eax
	je	SHORT $LN1@IsEqualTo
; Line 33
	xor	al, al
	jmp	SHORT $LN7@IsEqualTo
$LN1@IsEqualTo:
; Line 34
	jmp	SHORT $LN3@IsEqualTo
$LN2@IsEqualTo:
	mov	ecx, DWORD PTR _a$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	??$?8E@@YG_NABV?$CBuffer@E@@0@Z		; operator==<unsigned char>
$LN7@IsEqualTo:
; Line 35
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z ENDP	; NCrypto::N7z::CKeyInfo::IsEqualTo
_TEXT	ENDS
PUBLIC	??1?$CObjArray@E@@QAE@XZ			; CObjArray<unsigned char>::~CObjArray<unsigned char>
PUBLIC	??B?$CObjArray@E@@QAEPAEXZ			; CObjArray<unsigned char>::operator unsigned char *
PUBLIC	??0?$CObjArray@E@@QAE@I@Z			; CObjArray<unsigned char>::CObjArray<unsigned char>
PUBLIC	??B?$CBuffer@E@@QAEPAEXZ			; CBuffer<unsigned char>::operator unsigned char *
PUBLIC	?Size@?$CBuffer@E@@QBEIXZ			; CBuffer<unsigned char>::Size
PUBLIC	__$ArrayPad$
PUBLIC	?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ		; NCrypto::N7z::CKeyInfo::CalcKey
EXTRN	_Sha256_Final@8:PROC
EXTRN	_Sha256_Update@12:PROC
EXTRN	_Sha256_Init@4:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__allshl:PROC
xdata$x	SEGMENT
__unwindtable$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ$0
__ehfuncinfo$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv173 = -177						; size = 1
_i$67723 = -176						; size = 4
_numRounds$67718 = -172					; size = 8
_i$67714 = -164						; size = 4
_ctr$67713 = -160					; size = 4
_sha$67712 = -152					; size = 104
_buf$67711 = -40					; size = 4
_bufSize$67690 = -32					; size = 4
_i$67682 = -28						; size = 4
_pos$67678 = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ PROC		; NCrypto::N7z::CKeyInfo::CalcKey
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 168				; 000000a8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-180]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 63			; 0000003fH
	jne	$LN21@CalcKey
; Line 42
	mov	DWORD PTR _pos$67678[ebp], 0
	jmp	SHORT $LN20@CalcKey
$LN19@CalcKey:
	mov	ecx, DWORD PTR _pos$67678[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$67678[ebp], ecx
$LN20@CalcKey:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$67678[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jae	SHORT $LN18@CalcKey
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _pos$67678[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _pos$67678[ebp]
	mov	al, BYTE PTR [edx+8]
	mov	BYTE PTR [ecx+32], al
	jmp	SHORT $LN19@CalcKey
$LN18@CalcKey:
; Line 44
	mov	DWORD PTR _i$67682[ebp], 0
	jmp	SHORT $LN17@CalcKey
$LN16@CalcKey:
	mov	ecx, DWORD PTR _i$67682[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67682[ebp], ecx
$LN17@CalcKey:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	cmp	DWORD PTR _i$67682[ebp], eax
	jae	SHORT $LN15@CalcKey
	cmp	DWORD PTR _pos$67678[ebp], 32		; 00000020H
	jae	SHORT $LN15@CalcKey
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _pos$67678[ebp]
	mov	ecx, DWORD PTR _i$67682[ebp]
	mov	al, BYTE PTR [eax+ecx]
	mov	BYTE PTR [edx+32], al
	mov	ecx, DWORD PTR _pos$67678[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$67678[ebp], ecx
	jmp	SHORT $LN16@CalcKey
$LN15@CalcKey:
; Line 46
	jmp	SHORT $LN14@CalcKey
$LN13@CalcKey:
	mov	edx, DWORD PTR _pos$67678[ebp]
	add	edx, 1
	mov	DWORD PTR _pos$67678[ebp], edx
$LN14@CalcKey:
	cmp	DWORD PTR _pos$67678[ebp], 32		; 00000020H
	jae	SHORT $LN12@CalcKey
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _pos$67678[ebp]
	mov	BYTE PTR [eax+32], 0
	jmp	SHORT $LN13@CalcKey
$LN12@CalcKey:
; Line 49
	jmp	$LN22@CalcKey
$LN21@CalcKey:
; Line 51
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	lea	edx, DWORD PTR [esi+eax+8]
	mov	DWORD PTR _bufSize$67690[ebp], edx
; Line 52
	mov	eax, DWORD PTR _bufSize$67690[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$67711[ebp]
	call	??0?$CObjArray@E@@QAE@I@Z		; CObjArray<unsigned char>::CObjArray<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 53
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _buf$67711[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	push	eax
	lea	ecx, DWORD PTR _buf$67711[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 57
	lea	edx, DWORD PTR _sha$67712[ebp]
	push	edx
	call	_Sha256_Init@4
; Line 59
	lea	ecx, DWORD PTR _buf$67711[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	mov	esi, eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	add	esi, eax
	mov	DWORD PTR _ctr$67713[ebp], esi
; Line 61
	mov	DWORD PTR _i$67714[ebp], 0
	jmp	SHORT $LN10@CalcKey
$LN9@CalcKey:
	mov	ecx, DWORD PTR _i$67714[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67714[ebp], ecx
$LN10@CalcKey:
	cmp	DWORD PTR _i$67714[ebp], 8
	jae	SHORT $LN8@CalcKey
; Line 62
	mov	edx, DWORD PTR _ctr$67713[ebp]
	add	edx, DWORD PTR _i$67714[ebp]
	mov	BYTE PTR [edx], 0
	jmp	SHORT $LN9@CalcKey
$LN8@CalcKey:
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, 1
	xor	edx, edx
	mov	ecx, DWORD PTR [ecx]
	call	__allshl
	mov	DWORD PTR _numRounds$67718[ebp], eax
	mov	DWORD PTR _numRounds$67718[ebp+4], edx
$LN7@CalcKey:
; Line 68
	mov	edx, DWORD PTR _bufSize$67690[ebp]
	push	edx
	lea	ecx, DWORD PTR _buf$67711[ebp]
	call	??B?$CObjArray@E@@QAEPAEXZ		; CObjArray<unsigned char>::operator unsigned char *
	push	eax
	lea	eax, DWORD PTR _sha$67712[ebp]
	push	eax
	call	_Sha256_Update@12
; Line 69
	mov	DWORD PTR _i$67723[ebp], 0
	jmp	SHORT $LN4@CalcKey
$LN3@CalcKey:
	mov	ecx, DWORD PTR _i$67723[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67723[ebp], ecx
$LN4@CalcKey:
	cmp	DWORD PTR _i$67723[ebp], 8
	jae	SHORT $LN6@CalcKey
; Line 70
	mov	edx, DWORD PTR _ctr$67713[ebp]
	add	edx, DWORD PTR _i$67723[ebp]
	mov	al, BYTE PTR [edx]
	add	al, 1
	mov	BYTE PTR tv173[ebp], al
	mov	ecx, DWORD PTR _ctr$67713[ebp]
	add	ecx, DWORD PTR _i$67723[ebp]
	mov	dl, BYTE PTR tv173[ebp]
	mov	BYTE PTR [ecx], dl
	movzx	eax, BYTE PTR tv173[ebp]
	test	eax, eax
	je	SHORT $LN1@CalcKey
; Line 71
	jmp	SHORT $LN6@CalcKey
$LN1@CalcKey:
; Line 72
	jmp	SHORT $LN3@CalcKey
$LN6@CalcKey:
; Line 73
	mov	ecx, DWORD PTR _numRounds$67718[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR _numRounds$67718[ebp+4]
	sbb	edx, 0
	mov	DWORD PTR _numRounds$67718[ebp], ecx
	mov	DWORD PTR _numRounds$67718[ebp+4], edx
	mov	eax, DWORD PTR _numRounds$67718[ebp]
	or	eax, DWORD PTR _numRounds$67718[ebp+4]
	jne	$LN7@CalcKey
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR _sha$67712[ebp]
	push	edx
	call	_Sha256_Final@8
; Line 76
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buf$67711[ebp]
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
$LN22@CalcKey:
; Line 77
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@CalcKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 180				; 000000b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN29@CalcKey:
	DD	2
	DD	$LN28@CalcKey
$LN28@CalcKey:
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN25@CalcKey
	DD	-152					; ffffff68H
	DD	104					; 00000068H
	DD	$LN26@CalcKey
$LN26@CalcKey:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	0
$LN25@CalcKey:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ$0:
	lea	ecx, DWORD PTR _buf$67711[ebp]
	jmp	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
__ehhandler$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-180]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ ENDP		; NCrypto::N7z::CKeyInfo::CalcKey
PUBLIC	?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::MoveToFront
PUBLIC	??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::operator[]
PUBLIC	?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::Size
PUBLIC	?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::GetKey
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_j$67738 = -16						; size = 4
_cached$67736 = -12					; size = 4
_i$67732 = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z PROC ; NCrypto::N7z::CKeyInfoCache::GetKey
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	DWORD PTR _i$67732[ebp], 0
	jmp	SHORT $LN8@GetKey
$LN7@GetKey:
	mov	eax, DWORD PTR _i$67732[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67732[ebp], eax
$LN8@GetKey:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::Size
	cmp	DWORD PTR _i$67732[ebp], eax
	jae	SHORT $LN6@GetKey
; Line 83
	mov	ecx, DWORD PTR _i$67732[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::operator[]
	mov	DWORD PTR _cached$67736[ebp], eax
; Line 84
	mov	edx, DWORD PTR _cached$67736[ebp]
	push	edx
	mov	ecx, DWORD PTR _key$[ebp]
	call	?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z ; NCrypto::N7z::CKeyInfo::IsEqualTo
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@GetKey
; Line 86
	mov	DWORD PTR _j$67738[ebp], 0
	jmp	SHORT $LN4@GetKey
$LN3@GetKey:
	mov	ecx, DWORD PTR _j$67738[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$67738[ebp], ecx
$LN4@GetKey:
	cmp	DWORD PTR _j$67738[ebp], 32		; 00000020H
	jae	SHORT $LN2@GetKey
; Line 87
	mov	edx, DWORD PTR _key$[ebp]
	add	edx, DWORD PTR _j$67738[ebp]
	mov	eax, DWORD PTR _cached$67736[ebp]
	add	eax, DWORD PTR _j$67738[ebp]
	mov	cl, BYTE PTR [eax+32]
	mov	BYTE PTR [edx+32], cl
	jmp	SHORT $LN3@GetKey
$LN2@GetKey:
; Line 88
	cmp	DWORD PTR _i$67732[ebp], 0
	je	SHORT $LN1@GetKey
; Line 89
	mov	edx, DWORD PTR _i$67732[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::MoveToFront
$LN1@GetKey:
; Line 90
	mov	al, 1
	jmp	SHORT $LN9@GetKey
$LN5@GetKey:
; Line 92
	jmp	$LN7@GetKey
$LN6@GetKey:
; Line 93
	xor	al, al
$LN9@GetKey:
; Line 94
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z ENDP ; NCrypto::N7z::CKeyInfoCache::GetKey
_TEXT	ENDS
PUBLIC	?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::Add
PUBLIC	?FindAndAdd@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::FindAndAdd
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_cached$67751 = -12					; size = 4
_i$67747 = -8						; size = 4
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?FindAndAdd@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z PROC ; NCrypto::N7z::CKeyInfoCache::FindAndAdd
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	DWORD PTR _i$67747[ebp], 0
	jmp	SHORT $LN5@FindAndAdd
$LN4@FindAndAdd:
	mov	eax, DWORD PTR _i$67747[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67747[ebp], eax
$LN5@FindAndAdd:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::Size
	cmp	DWORD PTR _i$67747[ebp], eax
	jae	SHORT $LN3@FindAndAdd
; Line 100
	mov	ecx, DWORD PTR _i$67747[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::operator[]
	mov	DWORD PTR _cached$67751[ebp], eax
; Line 101
	mov	edx, DWORD PTR _cached$67751[ebp]
	push	edx
	mov	ecx, DWORD PTR _key$[ebp]
	call	?IsEqualTo@CKeyInfo@N7z@NCrypto@@QBE_NABV123@@Z ; NCrypto::N7z::CKeyInfo::IsEqualTo
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@FindAndAdd
; Line 103
	cmp	DWORD PTR _i$67747[ebp], 0
	je	SHORT $LN1@FindAndAdd
; Line 104
	mov	ecx, DWORD PTR _i$67747[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::MoveToFront
$LN1@FindAndAdd:
; Line 105
	jmp	SHORT $LN6@FindAndAdd
$LN2@FindAndAdd:
; Line 107
	jmp	SHORT $LN4@FindAndAdd
$LN3@FindAndAdd:
; Line 108
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::Add
$LN6@FindAndAdd:
; Line 109
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FindAndAdd@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ENDP ; NCrypto::N7z::CKeyInfoCache::FindAndAdd
_TEXT	ENDS
PUBLIC	?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::Insert
PUBLIC	?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::DeleteBack
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_key$ = 8						; size = 4
?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z PROC ; NCrypto::N7z::CKeyInfoCache::Add
; _this$ = ecx
; Line 112
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::Size
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx]
	jb	SHORT $LN1@Add
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::DeleteBack
$LN1@Add:
; Line 115
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z ; CObjectVector<NCrypto::N7z::CKeyInfo>::Insert
; Line 116
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ENDP ; NCrypto::N7z::CKeyInfoCache::Add
_TEXT	ENDS
PUBLIC	??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ		; NCrypto::N7z::CKeyInfoCache::~CKeyInfoCache
PUBLIC	??0CKeyInfo@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CKeyInfo::CKeyInfo
PUBLIC	??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z		; NCrypto::N7z::CKeyInfoCache::CKeyInfoCache
PUBLIC	??0CBase@N7z@NCrypto@@IAE@XZ			; NCrypto::N7z::CBase::CBase
xdata$x	SEGMENT
__unwindtable$??0CBase@N7z@NCrypto@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBase@N7z@NCrypto@@IAE@XZ$0
__ehfuncinfo$??0CBase@N7z@NCrypto@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBase@N7z@NCrypto@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_i$67799 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CBase@N7z@NCrypto@@IAE@XZ PROC			; NCrypto::N7z::CBase::CBase
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBase@N7z@NCrypto@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z	; NCrypto::N7z::CKeyInfoCache::CKeyInfoCache
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CKeyInfo@N7z@NCrypto@@QAE@XZ		; NCrypto::N7z::CKeyInfo::CKeyInfo
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+96], 0
; Line 131
	mov	DWORD PTR _i$67799[ebp], 0
	jmp	SHORT $LN3@CBase
$LN2@CBase:
	mov	ecx, DWORD PTR _i$67799[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67799[ebp], ecx
$LN3@CBase:
	cmp	DWORD PTR _i$67799[ebp], 16		; 00000010H
	jae	SHORT $LN4@CBase
; Line 132
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$67799[ebp]
	mov	BYTE PTR [edx+80], 0
	jmp	SHORT $LN2@CBase
$LN4@CBase:
; Line 133
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CBase@N7z@NCrypto@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ
__ehhandler$??0CBase@N7z@NCrypto@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBase@N7z@NCrypto@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBase@N7z@NCrypto@@IAE@XZ ENDP			; NCrypto::N7z::CBase::CBase
PUBLIC	??1?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::~CBuffer<unsigned char>
PUBLIC	?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ	; NCrypto::N7z::CKeyInfo::ClearProps
PUBLIC	??0?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::CBuffer<unsigned char>
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.h
xdata$x	SEGMENT
__unwindtable$??0CKeyInfo@N7z@NCrypto@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CKeyInfo@N7z@NCrypto@@QAE@XZ$0
__ehfuncinfo$??0CKeyInfo@N7z@NCrypto@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CKeyInfo@N7z@NCrypto@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CKeyInfo@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CKeyInfo@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CKeyInfo::CKeyInfo, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CKeyInfo@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ ; NCrypto::N7z::CKeyInfo::ClearProps
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CKeyInfo@N7z@NCrypto@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??0CKeyInfo@N7z@NCrypto@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CKeyInfo@N7z@NCrypto@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CKeyInfo@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CKeyInfo::CKeyInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ
_TEXT	SEGMENT
_i$67220 = -8						; size = 4
_this$ = -4						; size = 4
?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ PROC		; NCrypto::N7z::CKeyInfo::ClearProps, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 37
	mov	DWORD PTR _i$67220[ebp], 0
	jmp	SHORT $LN3@ClearProps
$LN2@ClearProps:
	mov	edx, DWORD PTR _i$67220[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67220[ebp], edx
$LN3@ClearProps:
	cmp	DWORD PTR _i$67220[ebp], 16		; 00000010H
	jae	SHORT $LN4@ClearProps
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$67220[ebp]
	mov	BYTE PTR [eax+8], 0
	jmp	SHORT $LN2@ClearProps
$LN4@ClearProps:
; Line 39
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ ENDP		; NCrypto::N7z::CKeyInfo::ClearProps
_TEXT	ENDS
PUBLIC	??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::CObjectVector<NCrypto::N7z::CKeyInfo>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z PROC		; NCrypto::N7z::CKeyInfoCache::CKeyInfoCache, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::CObjectVector<NCrypto::N7z::CKeyInfo>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z ENDP		; NCrypto::N7z::CKeyInfoCache::CKeyInfoCache
_TEXT	ENDS
PUBLIC	??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::~CObjectVector<NCrypto::N7z::CKeyInfo>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ PROC		; NCrypto::N7z::CKeyInfoCache::~CKeyInfoCache, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ ; CObjectVector<NCrypto::N7z::CKeyInfo>::~CObjectVector<NCrypto::N7z::CKeyInfo>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ ENDP		; NCrypto::N7z::CKeyInfoCache::~CKeyInfoCache
_TEXT	ENDS
PUBLIC	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
PUBLIC	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
PUBLIC	?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ		; NCrypto::N7z::CBase::PrepareKey
xdata$x	SEGMENT
__unwindtable$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ$0
__ehfuncinfo$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_finded$ = -29						; size = 1
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ PROC		; NCrypto::N7z::CBase::PrepareKey
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.cpp
; Line 136
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	push	OFFSET _g_GlobalKeyCacheCriticalSection
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 140
	mov	BYTE PTR _finded$[ebp], 0
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::GetKey
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@PrepareKey
; Line 143
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	ecx, OFFSET _g_GlobalKeyCache
	call	?GetKey@CKeyInfoCache@N7z@NCrypto@@QAE_NAAVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::GetKey
	mov	BYTE PTR _finded$[ebp], al
; Line 144
	movzx	eax, BYTE PTR _finded$[ebp]
	test	eax, eax
	jne	SHORT $LN2@PrepareKey
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?CalcKey@CKeyInfo@N7z@NCrypto@@QAEXXZ	; NCrypto::N7z::CKeyInfo::CalcKey
$LN2@PrepareKey:
; Line 146
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::Add
$LN3@PrepareKey:
; Line 148
	movzx	edx, BYTE PTR _finded$[ebp]
	test	edx, edx
	jne	SHORT $LN1@PrepareKey
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, OFFSET _g_GlobalKeyCache
	call	?FindAndAdd@CKeyInfoCache@N7z@NCrypto@@QAEXABVCKeyInfo@23@@Z ; NCrypto::N7z::CKeyInfoCache::FindAndAdd
$LN1@PrepareKey:
; Line 150
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@PrepareKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@PrepareKey:
	DD	1
	DD	$LN9@PrepareKey
$LN9@PrepareKey:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@PrepareKey
$LN7@PrepareKey:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
__ehhandler$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ ENDP		; NCrypto::N7z::CBase::PrepareKey
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_object$ = 8						; size = 4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z PROC ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 158
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _object$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCriticalSectionLock@NSynchronization@NWindows@@QAE@AAVCCriticalSection@12@@Z ENDP ; NWindows::NSynchronization::CCriticalSectionLock::CCriticalSectionLock
_TEXT	ENDS
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
_TEXT	ENDS
PUBLIC	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSectionLock@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::~CCriticalSectionLock
_TEXT	ENDS
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ PROC ; NWindows::NSynchronization::CCriticalSectionLock::Unlock, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Unlock@CCriticalSectionLock@NSynchronization@NWindows@@AAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSectionLock::Unlock
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
_TEXT	ENDS
PUBLIC	?ResetInitVector@CEncoder@N7z@NCrypto@@UAGJXZ	; NCrypto::N7z::CEncoder::ResetInitVector
EXTRN	?Generate@CRandomGenerator@@QAEXPAEI@Z:PROC	; CRandomGenerator::Generate
EXTRN	?g_RandomGenerator@@3VCRandomGenerator@@A:BYTE	; g_RandomGenerator
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67814 = -4						; size = 4
_this$ = 8						; size = 4
?ResetInitVector@CEncoder@N7z@NCrypto@@UAGJXZ PROC	; NCrypto::N7z::CEncoder::ResetInitVector
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.cpp
; Line 164
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 165
	mov	DWORD PTR _i$67814[ebp], 0
	jmp	SHORT $LN3@ResetInitV
$LN2@ResetInitV:
	mov	eax, DWORD PTR _i$67814[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67814[ebp], eax
$LN3@ResetInitV:
	cmp	DWORD PTR _i$67814[ebp], 16		; 00000010H
	jae	SHORT $LN1@ResetInitV
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$67814[ebp]
	mov	BYTE PTR [ecx-28], 0
	jmp	SHORT $LN2@ResetInitV
$LN1@ResetInitV:
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx-12], 8
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-12]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 28					; 0000001cH
	push	edx
	mov	ecx, OFFSET ?g_RandomGenerator@@3VCRandomGenerator@@A ; g_RandomGenerator
	call	?Generate@CRandomGenerator@@QAEXPAEI@Z	; CRandomGenerator::Generate
; Line 169
	xor	eax, eax
; Line 170
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ResetInitVector@CEncoder@N7z@NCrypto@@UAGJXZ ENDP	; NCrypto::N7z::CEncoder::ResetInitVector
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?WriteCoderProperties@CEncoder@N7z@NCrypto@@UAGJPAUISequentialOutStream@@@Z ; NCrypto::N7z::CEncoder::WriteCoderProperties
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv171 = -60						; size = 4
tv155 = -56						; size = 4
_propsSize$ = -52					; size = 4
_props$ = -44						; size = 34
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_outStream$ = 12					; size = 4
?WriteCoderProperties@CEncoder@N7z@NCrypto@@UAGJPAUISequentialOutStream@@@Z PROC ; NCrypto::N7z::CEncoder::WriteCoderProperties
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 175
	mov	DWORD PTR _propsSize$[ebp], 1
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-84]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 128				; 00000080H
	mov	edx, DWORD PTR _this$[ebp]
	or	ecx, DWORD PTR [edx-88]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-8]
	neg	edx
	sbb	edx, edx
	and	edx, 64					; 00000040H
	or	ecx, edx
	mov	BYTE PTR _props$[ebp], cl
; Line 181
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax-84], 0
	jne	SHORT $LN1@WriteCoder
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx-8], 0
	je	$LN2@WriteCoder
$LN1@WriteCoder:
; Line 185
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx-84], 0
	jne	SHORT $LN5@WriteCoder
	mov	DWORD PTR tv155[ebp], 0
	jmp	SHORT $LN6@WriteCoder
$LN5@WriteCoder:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-84]
	sub	ecx, 1
	mov	DWORD PTR tv155[ebp], ecx
$LN6@WriteCoder:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx-8], 0
	jne	SHORT $LN7@WriteCoder
	mov	DWORD PTR tv171[ebp], 0
	jmp	SHORT $LN8@WriteCoder
$LN7@WriteCoder:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-8]
	sub	ecx, 1
	mov	DWORD PTR tv171[ebp], ecx
$LN8@WriteCoder:
	mov	edx, DWORD PTR tv155[ebp]
	shl	edx, 4
	or	edx, DWORD PTR tv171[ebp]
	mov	BYTE PTR _props$[ebp+1], dl
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-84]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 80					; 00000050H
	push	edx
	lea	eax, DWORD PTR _props$[ebp+2]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-84]
	add	edx, 2
	mov	DWORD PTR _propsSize$[ebp], edx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 24					; 00000018H
	push	edx
	mov	eax, DWORD PTR _propsSize$[ebp]
	lea	ecx, DWORD PTR _props$[ebp+eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 189
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _propsSize$[ebp]
	add	eax, DWORD PTR [edx-8]
	mov	DWORD PTR _propsSize$[ebp], eax
$LN2@WriteCoder:
; Line 192
	mov	ecx, DWORD PTR _propsSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _props$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
; Line 193
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@WriteCoder
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN11@WriteCoder:
	DD	1
	DD	$LN10@WriteCoder
$LN10@WriteCoder:
	DD	-44					; ffffffd4H
	DD	34					; 00000022H
	DD	$LN9@WriteCoder
$LN9@WriteCoder:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
?WriteCoderProperties@CEncoder@N7z@NCrypto@@UAGJPAUISequentialOutStream@@@Z ENDP ; NCrypto::N7z::CEncoder::WriteCoderProperties
_TEXT	ENDS
PUBLIC	??1CBaseCoder@N7z@NCrypto@@QAE@XZ		; NCrypto::N7z::CBaseCoder::~CBaseCoder
PUBLIC	??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z ; CMyComPtr<ICompressFilter>::operator=
PUBLIC	??0CAesCbcEncoder@NCrypto@@QAE@I@Z		; NCrypto::CAesCbcEncoder::CAesCbcEncoder
PUBLIC	??_7CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@ ; NCrypto::N7z::CEncoder::`vftable'
PUBLIC	??_7CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@ ; NCrypto::N7z::CEncoder::`vftable'
PUBLIC	??_7CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CEncoder::`vftable'
PUBLIC	??_7CEncoder@N7z@NCrypto@@6BICompressFilter@@@	; NCrypto::N7z::CEncoder::`vftable'
PUBLIC	??0ICryptoResetInitVector@@QAE@XZ		; ICryptoResetInitVector::ICryptoResetInitVector
PUBLIC	??0ICompressWriteCoderProperties@@QAE@XZ	; ICompressWriteCoderProperties::ICompressWriteCoderProperties
PUBLIC	??0CBaseCoder@N7z@NCrypto@@QAE@XZ		; NCrypto::N7z::CBaseCoder::CBaseCoder
PUBLIC	??0CEncoder@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CEncoder::CEncoder
PUBLIC	??_R4CEncoder@N7z@NCrypto@@6BICompressFilter@@@	; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEncoder@N7z@NCrypto@@@8		; NCrypto::N7z::CEncoder `RTTI Type Descriptor'
PUBLIC	??_R3CEncoder@N7z@NCrypto@@8			; NCrypto::N7z::CEncoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEncoder@N7z@NCrypto@@8			; NCrypto::N7z::CEncoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEncoder@N7z@NCrypto@@8		; NCrypto::N7z::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CBaseCoder@N7z@NCrypto@@8		; NCrypto::N7z::CBaseCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseCoder@N7z@NCrypto@@@8		; NCrypto::N7z::CBaseCoder `RTTI Type Descriptor'
PUBLIC	??_R3CBaseCoder@N7z@NCrypto@@8			; NCrypto::N7z::CBaseCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseCoder@N7z@NCrypto@@8			; NCrypto::N7z::CBaseCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressFilter@@8		; ICompressFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressFilter@@@8			; ICompressFilter `RTTI Type Descriptor'
PUBLIC	??_R3ICompressFilter@@8				; ICompressFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressFilter@@8				; ICompressFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICryptoSetPassword@@8		; ICryptoSetPassword::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICryptoSetPassword@@@8			; ICryptoSetPassword `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoSetPassword@@8			; ICryptoSetPassword::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoSetPassword@@8			; ICryptoSetPassword::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoSetPassword@@8		; ICryptoSetPassword::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@CBase@N7z@NCrypto@@8		; NCrypto::N7z::CBase::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AVCBase@N7z@NCrypto@@@8			; NCrypto::N7z::CBase `RTTI Type Descriptor'
PUBLIC	??_R3CBase@N7z@NCrypto@@8			; NCrypto::N7z::CBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBase@N7z@NCrypto@@8			; NCrypto::N7z::CBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBase@N7z@NCrypto@@8		; NCrypto::N7z::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1HE@?0A@EA@ICompressWriteCoderProperties@@8	; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (116,-1,0,64)'
PUBLIC	??_R0?AUICompressWriteCoderProperties@@@8	; ICompressWriteCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressWriteCoderProperties@@8		; ICompressWriteCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressWriteCoderProperties@@8		; ICompressWriteCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressWriteCoderProperties@@8	; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1HE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (116,-1,0,66)'
PUBLIC	??_R1HI@?0A@EA@ICryptoResetInitVector@@8	; ICryptoResetInitVector::`RTTI Base Class Descriptor at (120,-1,0,64)'
PUBLIC	??_R0?AUICryptoResetInitVector@@@8		; ICryptoResetInitVector `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoResetInitVector@@8			; ICryptoResetInitVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoResetInitVector@@8			; ICryptoResetInitVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoResetInitVector@@8		; ICryptoResetInitVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1HI@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (120,-1,0,66)'
PUBLIC	?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CEncoder::QueryInterface
PUBLIC	?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ		; NCrypto::N7z::CEncoder::AddRef
PUBLIC	?Release@CEncoder@N7z@NCrypto@@UAGKXZ		; NCrypto::N7z::CEncoder::Release
PUBLIC	?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ		; NCrypto::N7z::CBaseCoder::Init
PUBLIC	?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z	; NCrypto::N7z::CBaseCoder::Filter
PUBLIC	??_R4CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CEncoder@N7z@NCrypto@@W3AGKXZ		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{4}'
PUBLIC	?Release@CEncoder@N7z@NCrypto@@W3AGKXZ		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{4}'
PUBLIC	?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z ; NCrypto::N7z::CBaseCoder::CryptoSetPassword
PUBLIC	??_R4CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@ ; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{116}'
PUBLIC	?AddRef@CEncoder@N7z@NCrypto@@WHE@AGKXZ		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{116}'
PUBLIC	?Release@CEncoder@N7z@NCrypto@@WHE@AGKXZ	; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{116}'
PUBLIC	??_R4CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@ ; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@N7z@NCrypto@@WHI@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{120}'
PUBLIC	?AddRef@CEncoder@N7z@NCrypto@@WHI@AGKXZ		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{120}'
PUBLIC	?Release@CEncoder@N7z@NCrypto@@WHI@AGKXZ	; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{120}'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@
rdata$r	SEGMENT
??_R4CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@ DD 00H ; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
	DD	078H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CEncoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R4CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@
rdata$r	SEGMENT
??_R4CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@ DD 00H ; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
	DD	074H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CEncoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R4CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@
rdata$r	SEGMENT
??_R4CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@ DD 00H ; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CEncoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1HI@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1HI@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (120,-1,0,66)'
	DD	00H
	DD	078H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoResetInitVector@@8 DD FLAT:??_R0?AUICryptoResetInitVector@@@8 ; ICryptoResetInitVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R2ICryptoResetInitVector@@8 DD FLAT:??_R1A@?0A@EA@ICryptoResetInitVector@@8 ; ICryptoResetInitVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R3ICryptoResetInitVector@@8 DD 00H			; ICryptoResetInitVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoResetInitVector@@@8
_DATA	SEGMENT
??_R0?AUICryptoResetInitVector@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoResetInitVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoResetInitVector@@', 00H
_DATA	ENDS
;	COMDAT ??_R1HI@?0A@EA@ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R1HI@?0A@EA@ICryptoResetInitVector@@8 DD FLAT:??_R0?AUICryptoResetInitVector@@@8 ; ICryptoResetInitVector::`RTTI Base Class Descriptor at (120,-1,0,64)'
	DD	01H
	DD	078H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_R1HE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1HE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (116,-1,0,66)'
	DD	00H
	DD	074H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressWriteCoderProperties@@8 DD FLAT:??_R0?AUICompressWriteCoderProperties@@@8 ; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressWriteCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressWriteCoderProperties@@8 ; ICompressWriteCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressWriteCoderProperties@@8 DD 00H		; ICompressWriteCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressWriteCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressWriteCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressWriteCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressWriteCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R1HE@?0A@EA@ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R1HE@?0A@EA@ICompressWriteCoderProperties@@8 DD FLAT:??_R0?AUICompressWriteCoderProperties@@@8 ; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (116,-1,0,64)'
	DD	01H
	DD	074H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBase@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBase@N7z@NCrypto@@8 DD FLAT:??_R0?AVCBase@N7z@NCrypto@@@8 ; NCrypto::N7z::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBase@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R2CBase@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R2CBase@N7z@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CBase@N7z@NCrypto@@8 ; NCrypto::N7z::CBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBase@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R3CBase@N7z@NCrypto@@8 DD 00H			; NCrypto::N7z::CBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBase@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBase@N7z@NCrypto@@@8
_DATA	SEGMENT
??_R0?AVCBase@N7z@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::N7z::CBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBase@N7z@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@CBase@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@CBase@N7z@NCrypto@@8 DD FLAT:??_R0?AVCBase@N7z@NCrypto@@@8 ; NCrypto::N7z::CBase::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBase@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R17?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoSetPassword@@8 DD FLAT:??_R0?AUICryptoSetPassword@@@8 ; ICryptoSetPassword::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R2ICryptoSetPassword@@8 DD FLAT:??_R1A@?0A@EA@ICryptoSetPassword@@8 ; ICryptoSetPassword::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R3ICryptoSetPassword@@8 DD 00H			; ICryptoSetPassword::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoSetPassword@@@8
_DATA	SEGMENT
??_R0?AUICryptoSetPassword@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoSetPassword `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoSetPassword@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICryptoSetPassword@@8 DD FLAT:??_R0?AUICryptoSetPassword@@@8 ; ICryptoSetPassword::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressFilter@@8
rdata$r	SEGMENT
??_R2ICompressFilter@@8 DD FLAT:??_R1A@?0A@EA@ICompressFilter@@8 ; ICompressFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressFilter@@8
rdata$r	SEGMENT
??_R3ICompressFilter@@8 DD 00H				; ICompressFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressFilter@@@8
_DATA	SEGMENT
??_R0?AUICompressFilter@@@8 DD FLAT:??_7type_info@@6B@	; ICompressFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressFilter@@8 DD FLAT:??_R0?AUICompressFilter@@@8 ; ICompressFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseCoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R2CBaseCoder@N7z@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CBaseCoder@N7z@NCrypto@@8 ; NCrypto::N7z::CBaseCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICryptoSetPassword@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1M@?0A@EA@CBase@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseCoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R3CBaseCoder@N7z@NCrypto@@8 DD 00H			; NCrypto::N7z::CBaseCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	07H
	DD	FLAT:??_R2CBaseCoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseCoder@N7z@NCrypto@@@8
_DATA	SEGMENT
??_R0?AVCBaseCoder@N7z@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::N7z::CBaseCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseCoder@N7z@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseCoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseCoder@N7z@NCrypto@@8 DD FLAT:??_R0?AVCBaseCoder@N7z@NCrypto@@@8 ; NCrypto::N7z::CBaseCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseCoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEncoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEncoder@N7z@NCrypto@@8 DD FLAT:??_R0?AVCEncoder@N7z@NCrypto@@@8 ; NCrypto::N7z::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEncoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R2CEncoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R2CEncoder@N7z@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CEncoder@N7z@NCrypto@@8 ; NCrypto::N7z::CEncoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseCoder@N7z@NCrypto@@8
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICryptoSetPassword@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1M@?0A@EA@CBase@N7z@NCrypto@@8
	DD	FLAT:??_R1HE@?0A@EA@ICompressWriteCoderProperties@@8
	DD	FLAT:??_R1HE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1HI@?0A@EA@ICryptoResetInitVector@@8
	DD	FLAT:??_R1HI@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CEncoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R3CEncoder@N7z@NCrypto@@8 DD 00H			; NCrypto::N7z::CEncoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0cH
	DD	FLAT:??_R2CEncoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEncoder@N7z@NCrypto@@@8
_DATA	SEGMENT
??_R0?AVCEncoder@N7z@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::N7z::CEncoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEncoder@N7z@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CEncoder@N7z@NCrypto@@6BICompressFilter@@@
rdata$r	SEGMENT
??_R4CEncoder@N7z@NCrypto@@6BICompressFilter@@@ DD 00H	; NCrypto::N7z::CEncoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CEncoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_7CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@
CONST	SEGMENT
??_7CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@ DD FLAT:??_R4CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@ ; NCrypto::N7z::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@N7z@NCrypto@@WHI@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@N7z@NCrypto@@WHI@AGKXZ
	DD	FLAT:?Release@CEncoder@N7z@NCrypto@@WHI@AGKXZ
	DD	FLAT:?ResetInitVector@CEncoder@N7z@NCrypto@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@
CONST	SEGMENT
??_7CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@ DD FLAT:??_R4CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@ ; NCrypto::N7z::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@N7z@NCrypto@@WHE@AGKXZ
	DD	FLAT:?Release@CEncoder@N7z@NCrypto@@WHE@AGKXZ
	DD	FLAT:?WriteCoderProperties@CEncoder@N7z@NCrypto@@UAGJPAUISequentialOutStream@@@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@
CONST	SEGMENT
??_7CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@ DD FLAT:??_R4CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@N7z@NCrypto@@W3AGKXZ
	DD	FLAT:?Release@CEncoder@N7z@NCrypto@@W3AGKXZ
	DD	FLAT:?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@N7z@NCrypto@@6BICompressFilter@@@
CONST	SEGMENT
??_7CEncoder@N7z@NCrypto@@6BICompressFilter@@@ DD FLAT:??_R4CEncoder@N7z@NCrypto@@6BICompressFilter@@@ ; NCrypto::N7z::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ
	DD	FLAT:?Release@CEncoder@N7z@NCrypto@@UAGKXZ
	DD	FLAT:?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	DD	FLAT:?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CEncoder@N7z@NCrypto@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEncoder@N7z@NCrypto@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CEncoder@N7z@NCrypto@@QAE@XZ$1
__ehfuncinfo$??0CEncoder@N7z@NCrypto@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CEncoder@N7z@NCrypto@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv161 = -28						; size = 4
$T68565 = -24						; size = 4
$T68564 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEncoder@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CEncoder::CEncoder
; _this$ = ecx
; Line 196
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CEncoder@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseCoder@N7z@NCrypto@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0ICompressWriteCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??0ICryptoResetInitVector@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@N7z@NCrypto@@6BICompressFilter@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@N7z@NCrypto@@6BICryptoSetPassword@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], OFFSET ??_7CEncoder@N7z@NCrypto@@6BICompressWriteCoderProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], OFFSET ??_7CEncoder@N7z@NCrypto@@6BICryptoResetInitVector@@@
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 19			; 00000013H
; Line 200
	push	332					; 0000014cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68565[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T68565[ebp], 0
	je	SHORT $LN3@CEncoder
	push	32					; 00000020H
	mov	ecx, DWORD PTR $T68565[ebp]
	call	??0CAesCbcEncoder@NCrypto@@QAE@I@Z	; NCrypto::CAesCbcEncoder::CAesCbcEncoder
	mov	DWORD PTR tv161[ebp], eax
	jmp	SHORT $LN4@CEncoder
$LN3@CEncoder:
	mov	DWORD PTR tv161[ebp], 0
$LN4@CEncoder:
	mov	edx, DWORD PTR tv161[ebp]
	mov	DWORD PTR $T68564[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T68564[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z ; CMyComPtr<ICompressFilter>::operator=
; Line 201
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CEncoder@N7z@NCrypto@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseCoder@N7z@NCrypto@@QAE@XZ
__unwindfunclet$??0CEncoder@N7z@NCrypto@@QAE@XZ$1:
	mov	eax, DWORD PTR $T68565[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CEncoder@N7z@NCrypto@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CEncoder@N7z@NCrypto@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CEncoder@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CEncoder::CEncoder
PUBLIC	_==@8
EXTRN	_IID_ICryptoResetInitVector:BYTE
EXTRN	_IID_ICompressWriteCoderProperties:BYTE
EXTRN	_IID_ICryptoSetPassword:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv138 = -16						; size = 4
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z PROC ; NCrypto::N7z::CEncoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN11@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN12@QueryInter
$LN11@QueryInter:
	mov	DWORD PTR tv75[ebp], 0
$LN12@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN7@QueryInter
$LN8@QueryInter:
	push	OFFSET _IID_ICryptoSetPassword
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv86[ebp], 0
$LN14@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN7@QueryInter
$LN6@QueryInter:
	push	OFFSET _IID_ICompressWriteCoderProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	mov	DWORD PTR tv128[ebp], 0
$LN16@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN7@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ICryptoResetInitVector
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 120				; 00000078H
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN18@QueryInter
$LN17@QueryInter:
	mov	DWORD PTR tv138[ebp], 0
$LN18@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN7@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN9@QueryInter
$LN7@QueryInter:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	xor	eax, eax
$LN9@QueryInter:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCrypto::N7z::CEncoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ PROC		; NCrypto::N7z::CEncoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.h
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ ENDP		; NCrypto::N7z::CEncoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z		; NCrypto::N7z::CEncoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CEncoder@N7z@NCrypto@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T68592 = -8						; size = 4
$T68591 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CEncoder@N7z@NCrypto@@UAGKXZ PROC		; NCrypto::N7z::CEncoder::Release, COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68592[ebp], edx
	mov	eax, DWORD PTR $T68592[ebp]
	mov	DWORD PTR $T68591[ebp], eax
	cmp	DWORD PTR $T68591[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T68591[ebp]
	call	??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CEncoder@N7z@NCrypto@@UAGKXZ ENDP		; NCrypto::N7z::CEncoder::Release
_TEXT	ENDS
PUBLIC	??1CEncoder@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CEncoder::~CEncoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z PROC		; NCrypto::N7z::CEncoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEncoder@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCEncoder@N7z@NCrypto@@QAEPAXI@Z ENDP		; NCrypto::N7z::CEncoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CEncoder@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CEncoder@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CEncoder::~CEncoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseCoder@N7z@NCrypto@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CEncoder@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CEncoder::~CEncoder
_TEXT	ENDS
PUBLIC	??1CBase@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CBase::~CBase
PUBLIC	??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ	; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CBaseCoder@N7z@NCrypto@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBaseCoder@N7z@NCrypto@@QAE@XZ$0
__ehfuncinfo$??1CBaseCoder@N7z@NCrypto@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CBaseCoder@N7z@NCrypto@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBaseCoder@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBaseCoder@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CBaseCoder::~CBaseCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBaseCoder@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ ; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1CBase@N7z@NCrypto@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBaseCoder@N7z@NCrypto@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1CBase@N7z@NCrypto@@QAE@XZ
__ehhandler$??1CBaseCoder@N7z@NCrypto@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBaseCoder@N7z@NCrypto@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBaseCoder@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CBaseCoder::~CBaseCoder
PUBLIC	??1CKeyInfo@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CKeyInfo::~CKeyInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CBase@N7z@NCrypto@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBase@N7z@NCrypto@@QAE@XZ$0
__ehfuncinfo$??1CBase@N7z@NCrypto@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CBase@N7z@NCrypto@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBase@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBase@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CBase::~CBase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBase@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CKeyInfo@N7z@NCrypto@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBase@N7z@NCrypto@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ
__ehhandler$??1CBase@N7z@NCrypto@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBase@N7z@NCrypto@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBase@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CBase::~CBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CKeyInfo@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CKeyInfo@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CKeyInfo::~CKeyInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CKeyInfo@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CKeyInfo::~CKeyInfo
_TEXT	ENDS
PUBLIC	??_7CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@ ; NCrypto::CAesCbcEncoder::`vftable'
PUBLIC	??_7CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@ ; NCrypto::CAesCbcEncoder::`vftable'
PUBLIC	??_7CAesCbcEncoder@NCrypto@@6BICompressFilter@@@ ; NCrypto::CAesCbcEncoder::`vftable'
PUBLIC	??_R4CAesCbcEncoder@NCrypto@@6BICompressFilter@@@ ; NCrypto::CAesCbcEncoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUCAesCbcEncoder@NCrypto@@@8		; NCrypto::CAesCbcEncoder `RTTI Type Descriptor'
PUBLIC	??_R3CAesCbcEncoder@NCrypto@@8			; NCrypto::CAesCbcEncoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAesCbcEncoder@NCrypto@@8			; NCrypto::CAesCbcEncoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAesCbcEncoder@NCrypto@@8		; NCrypto::CAesCbcEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CAesCbcCoder@NCrypto@@8		; NCrypto::CAesCbcCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCAesCbcCoder@NCrypto@@@8		; NCrypto::CAesCbcCoder `RTTI Type Descriptor'
PUBLIC	??_R3CAesCbcCoder@NCrypto@@8			; NCrypto::CAesCbcCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAesCbcCoder@NCrypto@@8			; NCrypto::CAesCbcCoder::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@ICryptoProperties@@8		; ICryptoProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICryptoProperties@@@8			; ICryptoProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoProperties@@8			; ICryptoProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoProperties@@8			; ICryptoProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoProperties@@8		; ICryptoProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderProperties@@@8		; ICompressSetCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::CAesCbcCoder::QueryInterface
PUBLIC	?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ		; NCrypto::CAesCbcCoder::AddRef
PUBLIC	?Release@CAesCbcCoder@NCrypto@@UAGKXZ		; NCrypto::CAesCbcCoder::Release
PUBLIC	??_R4CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@ ; NCrypto::CAesCbcEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::CAesCbcCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ		; [thunk]:NCrypto::CAesCbcCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CAesCbcCoder@NCrypto@@W3AGKXZ		; [thunk]:NCrypto::CAesCbcCoder::Release`adjustor{4}'
PUBLIC	??_R4CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@ ; NCrypto::CAesCbcEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::CAesCbcCoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ		; [thunk]:NCrypto::CAesCbcCoder::AddRef`adjustor{8}'
PUBLIC	?Release@CAesCbcCoder@NCrypto@@W7AGKXZ		; [thunk]:NCrypto::CAesCbcCoder::Release`adjustor{8}'
EXTRN	??0CAesCbcCoder@NCrypto@@QAE@_NI@Z:PROC		; NCrypto::CAesCbcCoder::CAesCbcCoder
EXTRN	?Init@CAesCbcCoder@NCrypto@@UAGJXZ:PROC		; NCrypto::CAesCbcCoder::Init
EXTRN	?Filter@CAesCbcCoder@NCrypto@@UAGIPAEI@Z:PROC	; NCrypto::CAesCbcCoder::Filter
EXTRN	?SetKey@CAesCbcCoder@NCrypto@@UAGJPBEI@Z:PROC	; NCrypto::CAesCbcCoder::SetKey
EXTRN	?SetInitVector@CAesCbcCoder@NCrypto@@UAGJPBEI@Z:PROC ; NCrypto::CAesCbcCoder::SetInitVector
EXTRN	?SetCoderProperties@CAesCbcCoder@NCrypto@@UAGJPBKPBUtagPROPVARIANT@@I@Z:PROC ; NCrypto::CAesCbcCoder::SetCoderProperties
;	COMDAT ??_R4CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@
; File c:\workspace\7z1505-src\cpp\7zip\crypto\myaes.h
rdata$r	SEGMENT
??_R4CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@ DD 00H ; NCrypto::CAesCbcEncoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AUCAesCbcEncoder@NCrypto@@@8
	DD	FLAT:??_R3CAesCbcEncoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R4CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@
rdata$r	SEGMENT
??_R4CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@ DD 00H ; NCrypto::CAesCbcEncoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AUCAesCbcEncoder@NCrypto@@@8
	DD	FLAT:??_R3CAesCbcEncoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderProperties@@8 ; ICompressSetCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderProperties@@8 DD 00H		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoProperties@@8 DD FLAT:??_R0?AUICryptoProperties@@@8 ; ICryptoProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoProperties@@8
rdata$r	SEGMENT
??_R2ICryptoProperties@@8 DD FLAT:??_R1A@?0A@EA@ICryptoProperties@@8 ; ICryptoProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoProperties@@8
rdata$r	SEGMENT
??_R3ICryptoProperties@@8 DD 00H			; ICryptoProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoProperties@@@8
_DATA	SEGMENT
??_R0?AUICryptoProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICryptoProperties@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICryptoProperties@@8 DD FLAT:??_R0?AUICryptoProperties@@@8 ; ICryptoProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2CAesCbcCoder@NCrypto@@8
rdata$r	SEGMENT
??_R2CAesCbcCoder@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CAesCbcCoder@NCrypto@@8 ; NCrypto::CAesCbcCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICryptoProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CAesCbcCoder@NCrypto@@8
rdata$r	SEGMENT
??_R3CAesCbcCoder@NCrypto@@8 DD 00H			; NCrypto::CAesCbcCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	08H
	DD	FLAT:??_R2CAesCbcCoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAesCbcCoder@NCrypto@@@8
_DATA	SEGMENT
??_R0?AVCAesCbcCoder@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::CAesCbcCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAesCbcCoder@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CAesCbcCoder@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAesCbcCoder@NCrypto@@8 DD FLAT:??_R0?AVCAesCbcCoder@NCrypto@@@8 ; NCrypto::CAesCbcCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAesCbcCoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAesCbcEncoder@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAesCbcEncoder@NCrypto@@8 DD FLAT:??_R0?AUCAesCbcEncoder@NCrypto@@@8 ; NCrypto::CAesCbcEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAesCbcEncoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R2CAesCbcEncoder@NCrypto@@8
rdata$r	SEGMENT
??_R2CAesCbcEncoder@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CAesCbcEncoder@NCrypto@@8 ; NCrypto::CAesCbcEncoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAesCbcCoder@NCrypto@@8
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICryptoProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CAesCbcEncoder@NCrypto@@8
rdata$r	SEGMENT
??_R3CAesCbcEncoder@NCrypto@@8 DD 00H			; NCrypto::CAesCbcEncoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2CAesCbcEncoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCAesCbcEncoder@NCrypto@@@8
_DATA	SEGMENT
??_R0?AUCAesCbcEncoder@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::CAesCbcEncoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCAesCbcEncoder@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CAesCbcEncoder@NCrypto@@6BICompressFilter@@@
rdata$r	SEGMENT
??_R4CAesCbcEncoder@NCrypto@@6BICompressFilter@@@ DD 00H ; NCrypto::CAesCbcEncoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUCAesCbcEncoder@NCrypto@@@8
	DD	FLAT:??_R3CAesCbcEncoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_7CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@ ; NCrypto::CAesCbcEncoder::`vftable'
	DD	FLAT:?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ
	DD	FLAT:?Release@CAesCbcCoder@NCrypto@@W7AGKXZ
	DD	FLAT:?SetCoderProperties@CAesCbcCoder@NCrypto@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@
CONST	SEGMENT
??_7CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@ DD FLAT:??_R4CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@ ; NCrypto::CAesCbcEncoder::`vftable'
	DD	FLAT:?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ
	DD	FLAT:?Release@CAesCbcCoder@NCrypto@@W3AGKXZ
	DD	FLAT:?SetKey@CAesCbcCoder@NCrypto@@UAGJPBEI@Z
	DD	FLAT:?SetInitVector@CAesCbcCoder@NCrypto@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CAesCbcEncoder@NCrypto@@6BICompressFilter@@@
CONST	SEGMENT
??_7CAesCbcEncoder@NCrypto@@6BICompressFilter@@@ DD FLAT:??_R4CAesCbcEncoder@NCrypto@@6BICompressFilter@@@ ; NCrypto::CAesCbcEncoder::`vftable'
	DD	FLAT:?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ
	DD	FLAT:?Release@CAesCbcCoder@NCrypto@@UAGKXZ
	DD	FLAT:?Init@CAesCbcCoder@NCrypto@@UAGJXZ
	DD	FLAT:?Filter@CAesCbcCoder@NCrypto@@UAGIPAEI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CAesCbcEncoder@NCrypto@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keySize$ = 8						; size = 4
??0CAesCbcEncoder@NCrypto@@QAE@I@Z PROC			; NCrypto::CAesCbcEncoder::CAesCbcEncoder, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _keySize$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CAesCbcCoder@NCrypto@@QAE@_NI@Z	; NCrypto::CAesCbcCoder::CAesCbcCoder
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CAesCbcEncoder@NCrypto@@6BICompressFilter@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_7CAesCbcEncoder@NCrypto@@6BICryptoProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], OFFSET ??_7CAesCbcEncoder@NCrypto@@6BICompressSetCoderProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAesCbcEncoder@NCrypto@@QAE@I@Z ENDP			; NCrypto::CAesCbcEncoder::CAesCbcEncoder
_TEXT	ENDS
EXTRN	_IID_ICompressSetCoderProperties:BYTE
EXTRN	_IID_ICryptoProperties:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z PROC ; NCrypto::CAesCbcCoder::QueryInterface, COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN10@QueryInter@2
$LN9@QueryInter@2:
	mov	DWORD PTR tv75[ebp], 0
$LN10@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN5@QueryInter@2
$LN6@QueryInter@2:
	push	OFFSET _IID_ICryptoProperties
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN11@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN12@QueryInter@2
$LN11@QueryInter@2:
	mov	DWORD PTR tv86[ebp], 0
$LN12@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN5@QueryInter@2
$LN4@QueryInter@2:
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN14@QueryInter@2
$LN13@QueryInter@2:
	mov	DWORD PTR tv128[ebp], 0
$LN14@QueryInter@2:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN7@QueryInter@2
$LN5@QueryInter@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
	xor	eax, eax
$LN7@QueryInter@2:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCrypto::CAesCbcCoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ PROC		; NCrypto::CAesCbcCoder::AddRef, COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ ENDP		; NCrypto::CAesCbcCoder::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CAesCbcCoder@NCrypto@@UAGKXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
$T68637 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CAesCbcCoder@NCrypto@@UAGKXZ PROC		; NCrypto::CAesCbcCoder::Release, COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+12], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68637[ebp], edx
	mov	eax, DWORD PTR $T68637[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	xor	eax, eax
$LN2@Release@2:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CAesCbcCoder@NCrypto@@UAGKXZ ENDP		; NCrypto::CAesCbcCoder::Release
_TEXT	ENDS
PUBLIC	??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ	; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>
PUBLIC	??_7CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CBaseCoder::`vftable'
PUBLIC	??_7CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@ ; NCrypto::N7z::CBaseCoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICryptoSetPassword@@QAE@XZ			; ICryptoSetPassword::ICryptoSetPassword
PUBLIC	??0ICompressFilter@@QAE@XZ			; ICompressFilter::ICompressFilter
PUBLIC	??_R4CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@ ; NCrypto::N7z::CBaseCoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CBaseCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@
rdata$r	SEGMENT
??_R4CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@ DD 00H ; NCrypto::N7z::CBaseCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCBaseCoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CBaseCoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R4CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@
rdata$r	SEGMENT
??_R4CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@ DD 00H ; NCrypto::N7z::CBaseCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseCoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CBaseCoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_7CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@
CONST	SEGMENT
??_7CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@ DD FLAT:??_R4CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CBaseCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@
CONST	SEGMENT
??_7CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@ DD FLAT:??_R4CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@ ; NCrypto::N7z::CBaseCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	DD	FLAT:?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseCoder@N7z@NCrypto@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseCoder@N7z@NCrypto@@QAE@XZ$0
__ehfuncinfo$??0CBaseCoder@N7z@NCrypto@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseCoder@N7z@NCrypto@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseCoder@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CBaseCoder@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CBaseCoder::CBaseCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseCoder@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressFilter@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICryptoSetPassword@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0CBase@N7z@NCrypto@@IAE@XZ		; NCrypto::N7z::CBase::CBase
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseCoder@N7z@NCrypto@@6BICompressFilter@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CBaseCoder@N7z@NCrypto@@6BICryptoSetPassword@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ ; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseCoder@N7z@NCrypto@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1CBase@N7z@NCrypto@@QAE@XZ
__ehhandler$??0CBaseCoder@N7z@NCrypto@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseCoder@N7z@NCrypto@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseCoder@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CBaseCoder::CBaseCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	??_7ICompressWriteCoderProperties@@6B@		; ICompressWriteCoderProperties::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressWriteCoderProperties@@6B@		; ICompressWriteCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressWriteCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressWriteCoderProperties@@6B@ DD 00H		; ICompressWriteCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressWriteCoderProperties@@@8
	DD	FLAT:??_R3ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressWriteCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressWriteCoderProperties@@6B@ DD FLAT:??_R4ICompressWriteCoderProperties@@6B@ ; ICompressWriteCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressWriteCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressWriteCoderProperties@@QAE@XZ PROC		; ICompressWriteCoderProperties::ICompressWriteCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressWriteCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressWriteCoderProperties@@QAE@XZ ENDP		; ICompressWriteCoderProperties::ICompressWriteCoderProperties
_TEXT	ENDS
PUBLIC	??_7ICryptoResetInitVector@@6B@			; ICryptoResetInitVector::`vftable'
PUBLIC	??_R4ICryptoResetInitVector@@6B@		; ICryptoResetInitVector::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICryptoResetInitVector@@6B@
rdata$r	SEGMENT
??_R4ICryptoResetInitVector@@6B@ DD 00H			; ICryptoResetInitVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoResetInitVector@@@8
	DD	FLAT:??_R3ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoResetInitVector@@6B@
CONST	SEGMENT
??_7ICryptoResetInitVector@@6B@ DD FLAT:??_R4ICryptoResetInitVector@@6B@ ; ICryptoResetInitVector::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoResetInitVector@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoResetInitVector@@QAE@XZ PROC			; ICryptoResetInitVector::ICryptoResetInitVector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoResetInitVector@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoResetInitVector@@QAE@XZ ENDP			; ICryptoResetInitVector::ICryptoResetInitVector
_TEXT	ENDS
PUBLIC	??_7ICompressFilter@@6B@			; ICompressFilter::`vftable'
PUBLIC	??_R4ICompressFilter@@6B@			; ICompressFilter::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressFilter@@6B@
rdata$r	SEGMENT
??_R4ICompressFilter@@6B@ DD 00H			; ICompressFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressFilter@@@8
	DD	FLAT:??_R3ICompressFilter@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressFilter@@6B@
CONST	SEGMENT
??_7ICompressFilter@@6B@ DD FLAT:??_R4ICompressFilter@@6B@ ; ICompressFilter::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressFilter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressFilter@@QAE@XZ PROC				; ICompressFilter::ICompressFilter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressFilter@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressFilter@@QAE@XZ ENDP				; ICompressFilter::ICompressFilter
_TEXT	ENDS
PUBLIC	??_7ICryptoSetPassword@@6B@			; ICryptoSetPassword::`vftable'
PUBLIC	??_R4ICryptoSetPassword@@6B@			; ICryptoSetPassword::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICryptoSetPassword@@6B@
rdata$r	SEGMENT
??_R4ICryptoSetPassword@@6B@ DD 00H			; ICryptoSetPassword::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoSetPassword@@@8
	DD	FLAT:??_R3ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoSetPassword@@6B@
CONST	SEGMENT
??_7ICryptoSetPassword@@6B@ DD FLAT:??_R4ICryptoSetPassword@@6B@ ; ICryptoSetPassword::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoSetPassword@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoSetPassword@@QAE@XZ PROC			; ICryptoSetPassword::ICryptoSetPassword, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoSetPassword@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoSetPassword@@QAE@XZ ENDP			; ICryptoSetPassword::ICryptoSetPassword
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0CAesCbcDecoder@NCrypto@@QAE@I@Z		; NCrypto::CAesCbcDecoder::CAesCbcDecoder
PUBLIC	??_7CDecoder@N7z@NCrypto@@6B@			; NCrypto::N7z::CDecoder::`vftable'
PUBLIC	??_7CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CDecoder::`vftable'
PUBLIC	??_7CDecoder@N7z@NCrypto@@6BICompressFilter@@@	; NCrypto::N7z::CDecoder::`vftable'
PUBLIC	??0ICompressSetDecoderProperties2@@QAE@XZ	; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2
PUBLIC	??0CDecoder@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CDecoder::CDecoder
PUBLIC	??_R4CDecoder@N7z@NCrypto@@6BICompressFilter@@@	; NCrypto::N7z::CDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecoder@N7z@NCrypto@@@8		; NCrypto::N7z::CDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CDecoder@N7z@NCrypto@@8			; NCrypto::N7z::CDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecoder@N7z@NCrypto@@8			; NCrypto::N7z::CDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecoder@N7z@NCrypto@@8		; NCrypto::N7z::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1HE@?0A@EA@ICompressSetDecoderProperties2@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (116,-1,0,64)'
PUBLIC	??_R0?AUICompressSetDecoderProperties2@@@8	; ICompressSetDecoderProperties2 `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetDecoderProperties2@@8		; ICompressSetDecoderProperties2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetDecoderProperties2@@8		; ICompressSetDecoderProperties2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8	; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CDecoder::QueryInterface
PUBLIC	?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ		; NCrypto::N7z::CDecoder::AddRef
PUBLIC	?Release@CDecoder@N7z@NCrypto@@UAGKXZ		; NCrypto::N7z::CDecoder::Release
PUBLIC	??_R4CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::N7z::CDecoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CDecoder@N7z@NCrypto@@W3AGKXZ		; [thunk]:NCrypto::N7z::CDecoder::AddRef`adjustor{4}'
PUBLIC	?Release@CDecoder@N7z@NCrypto@@W3AGKXZ		; [thunk]:NCrypto::N7z::CDecoder::Release`adjustor{4}'
PUBLIC	??_R4CDecoder@N7z@NCrypto@@6B@			; NCrypto::N7z::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCrypto::N7z::CDecoder::QueryInterface`adjustor{116}'
PUBLIC	?AddRef@CDecoder@N7z@NCrypto@@WHE@AGKXZ		; [thunk]:NCrypto::N7z::CDecoder::AddRef`adjustor{116}'
PUBLIC	?Release@CDecoder@N7z@NCrypto@@WHE@AGKXZ	; [thunk]:NCrypto::N7z::CDecoder::Release`adjustor{116}'
PUBLIC	?SetDecoderProperties2@CDecoder@N7z@NCrypto@@UAGJPBEI@Z ; NCrypto::N7z::CDecoder::SetDecoderProperties2
;	COMDAT ??_R4CDecoder@N7z@NCrypto@@6B@
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.cpp
rdata$r	SEGMENT
??_R4CDecoder@N7z@NCrypto@@6B@ DD 00H			; NCrypto::N7z::CDecoder::`RTTI Complete Object Locator'
	DD	074H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CDecoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R4CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@
rdata$r	SEGMENT
??_R4CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@ DD 00H ; NCrypto::N7z::CDecoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CDecoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8 DD FLAT:??_R0?AUICompressSetDecoderProperties2@@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R2ICompressSetDecoderProperties2@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R3ICompressSetDecoderProperties2@@8 DD 00H		; ICompressSetDecoderProperties2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetDecoderProperties2@@@8
_DATA	SEGMENT
??_R0?AUICompressSetDecoderProperties2@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetDecoderProperties2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetDecoderProperties2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1HE@?0A@EA@ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R1HE@?0A@EA@ICompressSetDecoderProperties2@@8 DD FLAT:??_R0?AUICompressSetDecoderProperties2@@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (116,-1,0,64)'
	DD	01H
	DD	074H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecoder@N7z@NCrypto@@8 DD FLAT:??_R0?AVCDecoder@N7z@NCrypto@@@8 ; NCrypto::N7z::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R2CDecoder@N7z@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CDecoder@N7z@NCrypto@@8 ; NCrypto::N7z::CDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseCoder@N7z@NCrypto@@8
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICryptoSetPassword@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1M@?0A@EA@CBase@N7z@NCrypto@@8
	DD	FLAT:??_R1HE@?0A@EA@ICompressSetDecoderProperties2@@8
	DD	FLAT:??_R1HE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CDecoder@N7z@NCrypto@@8
rdata$r	SEGMENT
??_R3CDecoder@N7z@NCrypto@@8 DD 00H			; NCrypto::N7z::CDecoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2CDecoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecoder@N7z@NCrypto@@@8
_DATA	SEGMENT
??_R0?AVCDecoder@N7z@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::N7z::CDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecoder@N7z@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDecoder@N7z@NCrypto@@6BICompressFilter@@@
rdata$r	SEGMENT
??_R4CDecoder@N7z@NCrypto@@6BICompressFilter@@@ DD 00H	; NCrypto::N7z::CDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@N7z@NCrypto@@@8
	DD	FLAT:??_R3CDecoder@N7z@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_7CDecoder@N7z@NCrypto@@6B@
CONST	SEGMENT
??_7CDecoder@N7z@NCrypto@@6B@ DD FLAT:??_R4CDecoder@N7z@NCrypto@@6B@ ; NCrypto::N7z::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@N7z@NCrypto@@WHE@AGKXZ
	DD	FLAT:?Release@CDecoder@N7z@NCrypto@@WHE@AGKXZ
	DD	FLAT:?SetDecoderProperties2@CDecoder@N7z@NCrypto@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@
CONST	SEGMENT
??_7CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@ DD FLAT:??_R4CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@ ; NCrypto::N7z::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@N7z@NCrypto@@W3AGKXZ
	DD	FLAT:?Release@CDecoder@N7z@NCrypto@@W3AGKXZ
	DD	FLAT:?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@N7z@NCrypto@@6BICompressFilter@@@
CONST	SEGMENT
??_7CDecoder@N7z@NCrypto@@6BICompressFilter@@@ DD FLAT:??_R4CDecoder@N7z@NCrypto@@6BICompressFilter@@@ ; NCrypto::N7z::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ
	DD	FLAT:?Release@CDecoder@N7z@NCrypto@@UAGKXZ
	DD	FLAT:?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	DD	FLAT:?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CDecoder@N7z@NCrypto@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDecoder@N7z@NCrypto@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDecoder@N7z@NCrypto@@QAE@XZ$1
__ehfuncinfo$??0CDecoder@N7z@NCrypto@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CDecoder@N7z@NCrypto@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv145 = -28						; size = 4
$T68663 = -24						; size = 4
$T68662 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDecoder@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CDecoder::CDecoder
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDecoder@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseCoder@N7z@NCrypto@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0ICompressSetDecoderProperties2@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@N7z@NCrypto@@6BICompressFilter@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CDecoder@N7z@NCrypto@@6BICryptoSetPassword@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], OFFSET ??_7CDecoder@N7z@NCrypto@@6B@
; Line 207
	push	332					; 0000014cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68663[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T68663[ebp], 0
	je	SHORT $LN3@CDecoder
	push	32					; 00000020H
	mov	ecx, DWORD PTR $T68663[ebp]
	call	??0CAesCbcDecoder@NCrypto@@QAE@I@Z	; NCrypto::CAesCbcDecoder::CAesCbcDecoder
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN4@CDecoder
$LN3@CDecoder:
	mov	DWORD PTR tv145[ebp], 0
$LN4@CDecoder:
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR $T68662[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T68662[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z ; CMyComPtr<ICompressFilter>::operator=
; Line 208
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDecoder@N7z@NCrypto@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseCoder@N7z@NCrypto@@QAE@XZ
__unwindfunclet$??0CDecoder@N7z@NCrypto@@QAE@XZ$1:
	mov	eax, DWORD PTR $T68663[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CDecoder@N7z@NCrypto@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDecoder@N7z@NCrypto@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDecoder@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CDecoder::CDecoder
EXTRN	_IID_ICompressSetDecoderProperties2:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z PROC ; NCrypto::N7z::CDecoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.h
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@3
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter@3
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN10@QueryInter@3
$LN9@QueryInter@3:
	mov	DWORD PTR tv75[ebp], 0
$LN10@QueryInter@3:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN5@QueryInter@3
$LN6@QueryInter@3:
	push	OFFSET _IID_ICryptoSetPassword
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@3
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN11@QueryInter@3
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN12@QueryInter@3
$LN11@QueryInter@3:
	mov	DWORD PTR tv86[ebp], 0
$LN12@QueryInter@3:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN5@QueryInter@3
$LN4@QueryInter@3:
	push	OFFSET _IID_ICompressSetDecoderProperties2
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@3
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter@3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN14@QueryInter@3
$LN13@QueryInter@3:
	mov	DWORD PTR tv128[ebp], 0
$LN14@QueryInter@3:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter@3
$LN2@QueryInter@3:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN7@QueryInter@3
$LN5@QueryInter@3:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
	xor	eax, eax
$LN7@QueryInter@3:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCrypto::N7z::CDecoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ PROC		; NCrypto::N7z::CDecoder::AddRef, COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ ENDP		; NCrypto::N7z::CDecoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z		; NCrypto::N7z::CDecoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CDecoder@N7z@NCrypto@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T68684 = -8						; size = 4
$T68683 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDecoder@N7z@NCrypto@@UAGKXZ PROC		; NCrypto::N7z::CDecoder::Release, COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN2@Release@3
$LN1@Release@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68684[ebp], edx
	mov	eax, DWORD PTR $T68684[ebp]
	mov	DWORD PTR $T68683[ebp], eax
	cmp	DWORD PTR $T68683[ebp], 0
	je	SHORT $LN4@Release@3
	push	1
	mov	ecx, DWORD PTR $T68683[ebp]
	call	??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@3
$LN4@Release@3:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@3:
	xor	eax, eax
$LN2@Release@3:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDecoder@N7z@NCrypto@@UAGKXZ ENDP		; NCrypto::N7z::CDecoder::Release
_TEXT	ENDS
PUBLIC	??1CDecoder@N7z@NCrypto@@QAE@XZ			; NCrypto::N7z::CDecoder::~CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z PROC		; NCrypto::N7z::CDecoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDecoder@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDecoder@N7z@NCrypto@@QAEPAXI@Z ENDP		; NCrypto::N7z::CDecoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CDecoder@N7z@NCrypto@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDecoder@N7z@NCrypto@@QAE@XZ PROC			; NCrypto::N7z::CDecoder::~CDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseCoder@N7z@NCrypto@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDecoder@N7z@NCrypto@@QAE@XZ ENDP			; NCrypto::N7z::CDecoder::~CDecoder
_TEXT	ENDS
PUBLIC	??_7CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@ ; NCrypto::CAesCbcDecoder::`vftable'
PUBLIC	??_7CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@ ; NCrypto::CAesCbcDecoder::`vftable'
PUBLIC	??_7CAesCbcDecoder@NCrypto@@6BICompressFilter@@@ ; NCrypto::CAesCbcDecoder::`vftable'
PUBLIC	??_R4CAesCbcDecoder@NCrypto@@6BICompressFilter@@@ ; NCrypto::CAesCbcDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUCAesCbcDecoder@NCrypto@@@8		; NCrypto::CAesCbcDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CAesCbcDecoder@NCrypto@@8			; NCrypto::CAesCbcDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAesCbcDecoder@NCrypto@@8			; NCrypto::CAesCbcDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAesCbcDecoder@NCrypto@@8		; NCrypto::CAesCbcDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@ ; NCrypto::CAesCbcDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R4CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@ ; NCrypto::CAesCbcDecoder::`RTTI Complete Object Locator'
;	COMDAT ??_R4CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@
; File c:\workspace\7z1505-src\cpp\7zip\crypto\myaes.h
rdata$r	SEGMENT
??_R4CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@ DD 00H ; NCrypto::CAesCbcDecoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AUCAesCbcDecoder@NCrypto@@@8
	DD	FLAT:??_R3CAesCbcDecoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R4CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@
rdata$r	SEGMENT
??_R4CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@ DD 00H ; NCrypto::CAesCbcDecoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AUCAesCbcDecoder@NCrypto@@@8
	DD	FLAT:??_R3CAesCbcDecoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAesCbcDecoder@NCrypto@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAesCbcDecoder@NCrypto@@8 DD FLAT:??_R0?AUCAesCbcDecoder@NCrypto@@@8 ; NCrypto::CAesCbcDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAesCbcDecoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R2CAesCbcDecoder@NCrypto@@8
rdata$r	SEGMENT
??_R2CAesCbcDecoder@NCrypto@@8 DD FLAT:??_R1A@?0A@EA@CAesCbcDecoder@NCrypto@@8 ; NCrypto::CAesCbcDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAesCbcCoder@NCrypto@@8
	DD	FLAT:??_R1A@?0A@EA@ICompressFilter@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICryptoProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CAesCbcDecoder@NCrypto@@8
rdata$r	SEGMENT
??_R3CAesCbcDecoder@NCrypto@@8 DD 00H			; NCrypto::CAesCbcDecoder::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2CAesCbcDecoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCAesCbcDecoder@NCrypto@@@8
_DATA	SEGMENT
??_R0?AUCAesCbcDecoder@NCrypto@@@8 DD FLAT:??_7type_info@@6B@ ; NCrypto::CAesCbcDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCAesCbcDecoder@NCrypto@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CAesCbcDecoder@NCrypto@@6BICompressFilter@@@
rdata$r	SEGMENT
??_R4CAesCbcDecoder@NCrypto@@6BICompressFilter@@@ DD 00H ; NCrypto::CAesCbcDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUCAesCbcDecoder@NCrypto@@@8
	DD	FLAT:??_R3CAesCbcDecoder@NCrypto@@8
rdata$r	ENDS
;	COMDAT ??_7CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@ ; NCrypto::CAesCbcDecoder::`vftable'
	DD	FLAT:?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ
	DD	FLAT:?Release@CAesCbcCoder@NCrypto@@W7AGKXZ
	DD	FLAT:?SetCoderProperties@CAesCbcCoder@NCrypto@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@
CONST	SEGMENT
??_7CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@ DD FLAT:??_R4CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@ ; NCrypto::CAesCbcDecoder::`vftable'
	DD	FLAT:?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ
	DD	FLAT:?Release@CAesCbcCoder@NCrypto@@W3AGKXZ
	DD	FLAT:?SetKey@CAesCbcCoder@NCrypto@@UAGJPBEI@Z
	DD	FLAT:?SetInitVector@CAesCbcCoder@NCrypto@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CAesCbcDecoder@NCrypto@@6BICompressFilter@@@
CONST	SEGMENT
??_7CAesCbcDecoder@NCrypto@@6BICompressFilter@@@ DD FLAT:??_R4CAesCbcDecoder@NCrypto@@6BICompressFilter@@@ ; NCrypto::CAesCbcDecoder::`vftable'
	DD	FLAT:?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ
	DD	FLAT:?Release@CAesCbcCoder@NCrypto@@UAGKXZ
	DD	FLAT:?Init@CAesCbcCoder@NCrypto@@UAGJXZ
	DD	FLAT:?Filter@CAesCbcCoder@NCrypto@@UAGIPAEI@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CAesCbcDecoder@NCrypto@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_keySize$ = 8						; size = 4
??0CAesCbcDecoder@NCrypto@@QAE@I@Z PROC			; NCrypto::CAesCbcDecoder::CAesCbcDecoder, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _keySize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CAesCbcCoder@NCrypto@@QAE@_NI@Z	; NCrypto::CAesCbcCoder::CAesCbcCoder
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CAesCbcDecoder@NCrypto@@6BICompressFilter@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_7CAesCbcDecoder@NCrypto@@6BICryptoProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], OFFSET ??_7CAesCbcDecoder@NCrypto@@6BICompressSetCoderProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAesCbcDecoder@NCrypto@@QAE@I@Z ENDP			; NCrypto::CAesCbcDecoder::CAesCbcDecoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetDecoderProperties2@@6B@		; ICompressSetDecoderProperties2::`vftable'
PUBLIC	??_R4ICompressSetDecoderProperties2@@6B@	; ICompressSetDecoderProperties2::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetDecoderProperties2@@6B@
rdata$r	SEGMENT
??_R4ICompressSetDecoderProperties2@@6B@ DD 00H		; ICompressSetDecoderProperties2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetDecoderProperties2@@@8
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetDecoderProperties2@@6B@
CONST	SEGMENT
??_7ICompressSetDecoderProperties2@@6B@ DD FLAT:??_R4ICompressSetDecoderProperties2@@6B@ ; ICompressSetDecoderProperties2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetDecoderProperties2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetDecoderProperties2@@QAE@XZ PROC		; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetDecoderProperties2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetDecoderProperties2@@QAE@XZ ENDP		; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
tv195 = -20						; size = 4
_ivSize$ = -16						; size = 4
_saltSize$ = -12					; size = 4
_b1$ = -6						; size = 1
_b0$ = -5						; size = 1
_i$ = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?SetDecoderProperties2@CDecoder@N7z@NCrypto@@UAGJPBEI@Z PROC ; NCrypto::N7z::CDecoder::SetDecoderProperties2
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.cpp
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 212
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 88					; 00000058H
	call	?ClearProps@CKeyInfo@N7z@NCrypto@@QAEXXZ ; NCrypto::N7z::CKeyInfo::ClearProps
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax-8], 0
; Line 216
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@SetDecoder
$LN12@SetDecoder:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN13@SetDecoder:
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jae	SHORT $LN11@SetDecoder
; Line 217
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx-24], 0
	jmp	SHORT $LN12@SetDecoder
$LN11@SetDecoder:
; Line 219
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN10@SetDecoder
; Line 220
	xor	eax, eax
	jmp	$LN14@SetDecoder
$LN10@SetDecoder:
; Line 222
	mov	eax, DWORD PTR _data$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _b0$[ebp], cl
; Line 224
	movzx	edx, BYTE PTR _b0$[ebp]
	and	edx, 63					; 0000003fH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax-88], edx
; Line 225
	movzx	ecx, BYTE PTR _b0$[ebp]
	and	ecx, 192				; 000000c0H
	jne	SHORT $LN9@SetDecoder
; Line 226
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 1
	neg	eax
	sbb	eax, eax
	and	eax, -2147024809			; 80070057H
	jmp	$LN14@SetDecoder
$LN9@SetDecoder:
; Line 228
	cmp	DWORD PTR _size$[ebp], 1
	ja	SHORT $LN8@SetDecoder
; Line 229
	mov	eax, -2147024809			; 80070057H
	jmp	$LN14@SetDecoder
$LN8@SetDecoder:
; Line 231
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR _b1$[ebp], al
; Line 233
	movzx	ecx, BYTE PTR _b0$[ebp]
	sar	ecx, 7
	and	ecx, 1
	movzx	edx, BYTE PTR _b1$[ebp]
	sar	edx, 4
	add	ecx, edx
	mov	DWORD PTR _saltSize$[ebp], ecx
; Line 234
	movzx	eax, BYTE PTR _b0$[ebp]
	sar	eax, 6
	and	eax, 1
	movzx	ecx, BYTE PTR _b1$[ebp]
	and	ecx, 15					; 0000000fH
	add	eax, ecx
	mov	DWORD PTR _ivSize$[ebp], eax
; Line 236
	mov	edx, DWORD PTR _ivSize$[ebp]
	mov	eax, DWORD PTR _saltSize$[ebp]
	lea	ecx, DWORD PTR [eax+edx+2]
	cmp	DWORD PTR _size$[ebp], ecx
	je	SHORT $LN7@SetDecoder
; Line 237
	mov	eax, -2147024809			; 80070057H
	jmp	$LN14@SetDecoder
$LN7@SetDecoder:
; Line 238
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _saltSize$[ebp]
	mov	DWORD PTR [edx-84], eax
; Line 239
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 2
	mov	DWORD PTR _data$[ebp], ecx
; Line 240
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@SetDecoder
$LN5@SetDecoder:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@SetDecoder:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _saltSize$[ebp]
	jae	SHORT $LN4@SetDecoder
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx-80], al
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx
	jmp	SHORT $LN5@SetDecoder
$LN4@SetDecoder:
; Line 242
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SetDecoder
$LN2@SetDecoder:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@SetDecoder:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ivSize$[ebp]
	jae	SHORT $LN1@SetDecoder
; Line 243
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx-24], al
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx
	jmp	SHORT $LN2@SetDecoder
$LN1@SetDecoder:
; Line 245
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx-88], 24			; 00000018H
	jbe	SHORT $LN16@SetDecoder
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax-88], 63			; 0000003fH
	je	SHORT $LN16@SetDecoder
	mov	DWORD PTR tv195[ebp], -2147467263	; 80004001H
	jmp	SHORT $LN17@SetDecoder
$LN16@SetDecoder:
	mov	DWORD PTR tv195[ebp], 0
$LN17@SetDecoder:
	mov	eax, DWORD PTR tv195[ebp]
$LN14@SetDecoder:
; Line 246
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetDecoderProperties2@CDecoder@N7z@NCrypto@@UAGJPBEI@Z ENDP ; NCrypto::N7z::CDecoder::SetDecoderProperties2
_TEXT	ENDS
PUBLIC	?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z		; CBuffer<unsigned char>::CopyFrom
xdata$x	SEGMENT
__catchsym$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$0
__unwindtable$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$2
__ehfuncinfo$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T68701 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z PROC ; NCrypto::N7z::CBaseCoder::CryptoSetPassword
; Line 250
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 251
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 253
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z	; CBuffer<unsigned char>::CopyFrom
; Line 254
	xor	eax, eax
	jmp	SHORT $LN2@CryptoSetP
__catch$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$0:
; Line 256
	mov	DWORD PTR $T68701[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@CryptoSetP
	ret	0
	mov	eax, __tryend$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$1
	ret	0
__tryend$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@CryptoSetP
$LN7@CryptoSetP:
	mov	eax, DWORD PTR $T68701[ebp]
$LN2@CryptoSetP:
; Line 257
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CryptoSetPassword@CBaseCoder@N7z@NCrypto@@UAGJPBEI@Z ENDP ; NCrypto::N7z::CBaseCoder::CryptoSetPassword
PUBLIC	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
PUBLIC	??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator->
PUBLIC	??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ	; CMyComPtr<ICryptoProperties>::operator!
PUBLIC	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ	; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
PUBLIC	??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z ; CMyComPtr<ICompressFilter>::QueryInterface<ICryptoProperties>
PUBLIC	??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator&
PUBLIC	??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ	; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>
xdata$x	SEGMENT
__catchsym$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$0
__tryblocktable$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$3
__unwindtable$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv170 = -112						; size = 4
tv151 = -108						; size = 4
tv169 = -104						; size = 4
tv168 = -100						; size = 4
tv135 = -96						; size = 4
tv167 = -92						; size = 4
tv166 = -88						; size = 4
tv87 = -84						; size = 4
tv165 = -80						; size = 4
tv164 = -73						; size = 1
tv163 = -72						; size = 4
tv162 = -68						; size = 4
$T68719 = -64						; size = 4
$T68718 = -60						; size = 4
$T68717 = -56						; size = 4
$T68716 = -52						; size = 4
$T68715 = -48						; size = 4
$T68714 = -44						; size = 4
___result__$67952 = -40					; size = 4
___result__$67949 = -36					; size = 4
___result__$67939 = -32					; size = 4
_cp$67938 = -24						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ PROC		; NCrypto::N7z::CBaseCoder::Init
; Line 260
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 96					; 00000060H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-112]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 261
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 263
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?PrepareKey@CBase@N7z@NCrypto@@IAEXXZ	; NCrypto::N7z::CBase::PrepareKey
; Line 264
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>
	mov	DWORD PTR tv162[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 265
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator&
	mov	DWORD PTR tv163[ebp], eax
	mov	eax, DWORD PTR tv163[ebp]
	push	eax
	push	OFFSET _IID_ICryptoProperties
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z ; CMyComPtr<ICompressFilter>::QueryInterface<ICryptoProperties>
	mov	DWORD PTR ___result__$67939[ebp], eax
	cmp	DWORD PTR ___result__$67939[ebp], 0
	je	SHORT $LN4@Init
	mov	ecx, DWORD PTR ___result__$67939[ebp]
	mov	DWORD PTR $T68714[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
	mov	eax, DWORD PTR $T68714[ebp]
	jmp	$LN6@Init
$LN4@Init:
; Line 266
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ ; CMyComPtr<ICryptoProperties>::operator!
	mov	BYTE PTR tv164[ebp], al
	movzx	edx, BYTE PTR tv164[ebp]
	test	edx, edx
	je	SHORT $LN3@Init
; Line 267
	mov	DWORD PTR $T68715[ebp], -2147467259	; 80004005H
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
	mov	eax, DWORD PTR $T68715[ebp]
	jmp	$LN6@Init
$LN3@Init:
; Line 268
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator->
	mov	DWORD PTR tv165[ebp], eax
	mov	eax, DWORD PTR tv165[ebp]
	mov	DWORD PTR tv87[ebp], eax
	mov	esi, esp
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	mov	edx, DWORD PTR tv87[ebp]
	push	edx
	mov	eax, DWORD PTR tv87[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	mov	DWORD PTR ___result__$67949[ebp], eax
	cmp	DWORD PTR ___result__$67949[ebp], 0
	je	SHORT $LN2@Init
	mov	ecx, DWORD PTR ___result__$67949[ebp]
	mov	DWORD PTR $T68716[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
	mov	eax, DWORD PTR $T68716[ebp]
	jmp	$LN6@Init
$LN2@Init:
; Line 269
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator->
	mov	DWORD PTR tv167[ebp], eax
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv135[ebp], edx
	mov	esi, esp
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 92					; 0000005cH
	push	eax
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv168[ebp], eax
	mov	edx, DWORD PTR tv168[ebp]
	mov	DWORD PTR ___result__$67952[ebp], edx
	cmp	DWORD PTR ___result__$67952[ebp], 0
	je	SHORT $LN1@Init
	mov	eax, DWORD PTR ___result__$67952[ebp]
	mov	DWORD PTR $T68717[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
	mov	eax, DWORD PTR $T68717[ebp]
	jmp	SHORT $LN6@Init
$LN1@Init:
; Line 270
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv169[ebp], eax
	mov	ecx, DWORD PTR tv169[ebp]
	mov	DWORD PTR tv151[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR tv151[ebp]
	push	edx
	mov	eax, DWORD PTR tv151[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv170[ebp], eax
	mov	eax, DWORD PTR tv170[ebp]
	mov	DWORD PTR $T68718[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _cp$67938[ebp]
	call	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
	mov	eax, DWORD PTR $T68718[ebp]
	jmp	SHORT $LN6@Init
__catch$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$0:
; Line 272
	mov	DWORD PTR $T68719[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN12@Init
	ret	0
	mov	eax, __tryend$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$1
	ret	0
__tryend$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN6@Init
$LN12@Init:
	mov	eax, DWORD PTR $T68719[ebp]
$LN6@Init:
; Line 273
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 112				; 00000070H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN17@Init:
	DD	1
	DD	$LN16@Init
$LN16@Init:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@Init
$LN14@Init:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ$2:
	lea	ecx, DWORD PTR _cp$67938[ebp]
	jmp	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
__ehhandler$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Init@CBaseCoder@N7z@NCrypto@@UAGJXZ ENDP		; NCrypto::N7z::CBaseCoder::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z PROC		; NCrypto::N7z::CBaseCoder::Filter
; Line 276
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	eax, DWORD PTR tv68[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 278
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Filter@CBaseCoder@N7z@NCrypto@@UAGIPAEI@Z ENDP		; NCrypto::N7z::CBaseCoder::Filter
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
$T68739 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::~CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68739[ebp], ecx
	mov	edx, DWORD PTR $T68739[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QAEPAEXZ PROC				; CBuffer<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QAEPAEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CBuffer@E@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CBuffer@E@@QBEIXZ PROC				; CBuffer<unsigned char>::Size, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CBuffer@E@@QBEIXZ ENDP				; CBuffer<unsigned char>::Size
_TEXT	ENDS
PUBLIC	?Alloc@?$CBuffer@E@@QAEXI@Z			; CBuffer<unsigned char>::Alloc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z PROC			; CBuffer<unsigned char>::CopyFrom, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Alloc@?$CBuffer@E@@QAEXI@Z		; CBuffer<unsigned char>::Alloc
; Line 69
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CopyFrom
; Line 70
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@CopyFrom:
; Line 71
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyFrom@?$CBuffer@E@@QAEXPBEI@Z ENDP			; CBuffer<unsigned char>::CopyFrom
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ PROC ; CObjectVector<NCrypto::N7z::CKeyInfo>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QBEIXZ ENDP ; CObjectVector<NCrypto::N7z::CKeyInfo>::Size
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ PROC	; CObjectVector<NCrypto::N7z::CKeyInfo>::CObjectVector<NCrypto::N7z::CKeyInfo>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ ENDP	; CObjectVector<NCrypto::N7z::CKeyInfo>::CObjectVector<NCrypto::N7z::CKeyInfo>
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z PROC ; CObjectVector<NCrypto::N7z::CKeyInfo>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEAAVCKeyInfo@N7z@NCrypto@@I@Z ENDP ; CObjectVector<NCrypto::N7z::CKeyInfo>::operator[]
_TEXT	ENDS
PUBLIC	?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z	; CRecordVector<void *>::MoveToFront
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z PROC ; CObjectVector<NCrypto::N7z::CKeyInfo>::MoveToFront, COMDAT
; _this$ = ecx
; Line 457
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z ; CRecordVector<void *>::MoveToFront
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MoveToFront@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXI@Z ENDP ; CObjectVector<NCrypto::N7z::CKeyInfo>::MoveToFront
_TEXT	ENDS
PUBLIC	?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z		; CRecordVector<void *>::Insert
PUBLIC	??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z		; NCrypto::N7z::CKeyInfo::CKeyInfo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z$0
__ehfuncinfo$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T68758 = -24						; size = 4
$T68757 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_item$ = 12						; size = 4
?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z PROC ; CObjectVector<NCrypto::N7z::CKeyInfo>::Insert, COMDAT
; _this$ = ecx
; Line 477
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	64					; 00000040H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68758[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T68758[ebp], 0
	je	SHORT $LN3@Insert
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T68758[ebp]
	call	??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@Insert
$LN3@Insert:
	mov	DWORD PTR tv73[ebp], 0
$LN4@Insert:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T68757[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T68757[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z	; CRecordVector<void *>::Insert
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z$0:
	mov	eax, DWORD PTR $T68758[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXIABVCKeyInfo@N7z@NCrypto@@@Z ENDP ; CObjectVector<NCrypto::N7z::CKeyInfo>::Insert
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z		; NCrypto::N7z::CKeyInfo::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T68771 = -28						; size = 4
$T68770 = -24						; size = 4
_i$67993 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ PROC	; CObjectVector<NCrypto::N7z::CKeyInfo>::~CObjectVector<NCrypto::N7z::CKeyInfo>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$67993[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$67993[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$67993[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$67993[ebp], eax
	mov	ecx, DWORD PTR _i$67993[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T68771[ebp], edx
	mov	eax, DWORD PTR $T68771[ebp]
	mov	DWORD PTR $T68770[ebp], eax
	cmp	DWORD PTR $T68770[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T68770[ebp]
	call	??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAE@XZ ENDP	; CObjectVector<NCrypto::N7z::CKeyInfo>::~CObjectVector<NCrypto::N7z::CKeyInfo>
PUBLIC	?DeleteBack@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::DeleteBack
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ
_TEXT	SEGMENT
tv74 = -16						; size = 4
$T68784 = -12						; size = 4
$T68783 = -8						; size = 4
_this$ = -4						; size = 4
?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ PROC ; CObjectVector<NCrypto::N7z::CKeyInfo>::DeleteBack, COMDAT
; _this$ = ecx
; Line 521
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 522
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T68784[ebp], eax
	mov	ecx, DWORD PTR $T68784[ebp]
	mov	DWORD PTR $T68783[ebp], ecx
	cmp	DWORD PTR $T68783[ebp], 0
	je	SHORT $LN3@DeleteBack
	push	1
	mov	ecx, DWORD PTR $T68783[ebp]
	call	??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@DeleteBack
$LN3@DeleteBack:
	mov	DWORD PTR tv74[ebp], 0
$LN4@DeleteBack:
; Line 523
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeleteBack@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::DeleteBack
; Line 524
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@?$CObjectVector@VCKeyInfo@N7z@NCrypto@@@@QAEXXZ ENDP ; CObjectVector<NCrypto::N7z::CKeyInfo>::DeleteBack
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ PROC		; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ ENDP		; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ PROC		; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ ENDP		; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ PROC ; CMyComPtr<ICompressFilter>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ENDP ; CMyComPtr<ICompressFilter>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z PROC ; CMyComPtr<ICompressFilter>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UICompressFilter@@@@QAEPAUICompressFilter@@PAU1@@Z ENDP ; CMyComPtr<ICompressFilter>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@E@@QAE@I@Z
_TEXT	SEGMENT
$T68797 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CObjArray@E@@QAE@I@Z PROC				; CObjArray<unsigned char>::CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CObjArray
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68797[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T68797[ebp]
	mov	DWORD PTR [edx], eax
$LN2@CObjArray:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CObjArray@E@@QAE@I@Z ENDP				; CObjArray<unsigned char>::CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@E@@QAE@XZ
_TEXT	SEGMENT
$T68800 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@E@@QAE@XZ PROC				; CObjArray<unsigned char>::~CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68800[ebp], ecx
	mov	edx, DWORD PTR $T68800[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@E@@QAE@XZ ENDP				; CObjArray<unsigned char>::~CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@E@@QAEPAEXZ PROC				; CObjArray<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@E@@QAEPAEXZ ENDP				; CObjArray<unsigned char>::operator unsigned char *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ PROC	; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ PROC	; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ PROC ; CMyComPtr<ICryptoProperties>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ ENDP ; CMyComPtr<ICryptoProperties>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ PROC ; CMyComPtr<ICryptoProperties>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ENDP ; CMyComPtr<ICryptoProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ PROC	; CMyComPtr<ICryptoProperties>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ ENDP	; CMyComPtr<ICryptoProperties>::operator!
_TEXT	ENDS
PUBLIC	??0?$CBuffer@E@@QAE@ABV0@@Z			; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z PROC		; NCrypto::N7z::CKeyInfo::CKeyInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$CBuffer@E@@QAE@ABV0@@Z		; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 32					; 00000020H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 32					; 00000020H
	mov	ecx, 8
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CKeyInfo@N7z@NCrypto@@QAE@ABV012@@Z ENDP		; NCrypto::N7z::CKeyInfo::CKeyInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z PROC		; NCrypto::N7z::CKeyInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CKeyInfo@N7z@NCrypto@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCKeyInfo@N7z@NCrypto@@QAEPAXI@Z ENDP		; NCrypto::N7z::CKeyInfo::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T68824 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68824[ebp], ecx
	mov	edx, DWORD PTR $T68824[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteBack@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DeleteBack@?$CRecordVector@PAX@@QAEXXZ PROC		; CRecordVector<void *>::DeleteBack, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteBack@?$CRecordVector@PAX@@QAEXXZ ENDP		; CRecordVector<void *>::DeleteBack
_TEXT	ENDS
PUBLIC	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z	; CRecordVector<void *>::MoveItems
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_item$ = 12						; size = 4
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z PROC		; CRecordVector<void *>::Insert, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 212
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ; CRecordVector<void *>::MoveItems
; Line 213
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 215
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Insert@?$CRecordVector@PAX@@QAEXIQAX@Z ENDP		; CRecordVector<void *>::Insert
_TEXT	ENDS
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z
_TEXT	SEGMENT
_temp$68058 = -8					; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z PROC		; CRecordVector<void *>::MoveToFront, COMDAT
; _this$ = ecx
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	cmp	DWORD PTR _index$[ebp], 0
	je	SHORT $LN2@MoveToFron
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _temp$68058[ebp], eax
; Line 222
	mov	ecx, DWORD PTR _index$[ebp]
	shl	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _temp$68058[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@MoveToFron:
; Line 225
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MoveToFront@?$CRecordVector@PAX@@QAEXI@Z ENDP		; CRecordVector<void *>::MoveToFront
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@ABV0@@Z
_TEXT	SEGMENT
$T68835 = -12						; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
??0?$CBuffer@E@@QAE@ABV0@@Z PROC			; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 28
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _size$[ebp], eax
; Line 29
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CBuffer
; Line 31
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68835[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T68835[ebp]
	mov	DWORD PTR [edx], eax
; Line 32
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@CBuffer:
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CBuffer@E@@QAE@ABV0@@Z ENDP			; CBuffer<unsigned char>::CBuffer<unsigned char>
_TEXT	ENDS
PUBLIC	?Free@?$CBuffer@E@@QAEXXZ			; CBuffer<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Alloc@?$CBuffer@E@@QAEXI@Z
_TEXT	SEGMENT
$T68838 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?Alloc@?$CBuffer@E@@QAEXI@Z PROC			; CBuffer<unsigned char>::Alloc, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN3@Alloc
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 48
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN3@Alloc
; Line 50
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68838[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T68838[ebp]
	mov	DWORD PTR [eax], ecx
; Line 51
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@Alloc:
; Line 54
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Alloc@?$CBuffer@E@@QAEXI@Z ENDP			; CBuffer<unsigned char>::Alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MoveItems@?$CRecordVector@PAX@@AAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_destIndex$ = 8						; size = 4
_srcIndex$ = 12						; size = 4
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z PROC		; CRecordVector<void *>::MoveItems, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 15
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _srcIndex$[ebp]
	shl	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _srcIndex$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _destIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 16
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveItems@?$CRecordVector@PAX@@AAEXII@Z ENDP		; CRecordVector<void *>::MoveItems
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T68844 = -20						; size = 4
$T68843 = -16						; size = 4
_p$68084 = -12						; size = 4
_newCapacity$68083 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$68083[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$68083[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T68843[ebp], eax
	mov	eax, DWORD PTR $T68843[ebp]
	mov	DWORD PTR _p$68084[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$68084[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T68844[ebp], edx
	mov	eax, DWORD PTR $T68844[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$68084[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$68083[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CBuffer@E@@QAEXXZ
_TEXT	SEGMENT
$T68847 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CBuffer@E@@QAEXXZ PROC				; CBuffer<unsigned char>::Free, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Free
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T68847[ebp], edx
	mov	eax, DWORD PTR $T68847[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN1@Free:
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 22
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CBuffer@E@@QAEXXZ ENDP				; CBuffer<unsigned char>::Free
_TEXT	ENDS
PUBLIC	??B?$CBuffer@E@@QBEPBEXZ			; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?8E@@YG_NABV?$CBuffer@E@@0@Z
_TEXT	SEGMENT
_size1$ = -4						; size = 4
_b1$ = 8						; size = 4
_b2$ = 12						; size = 4
??$?8E@@YG_NABV?$CBuffer@E@@0@Z PROC			; operator==<unsigned char>, COMDAT
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 100
	mov	ecx, DWORD PTR _b1$[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	DWORD PTR _size1$[ebp], eax
; Line 101
	mov	ecx, DWORD PTR _b2$[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	cmp	DWORD PTR _size1$[ebp], eax
	je	SHORT $LN2@operator@2
; Line 102
	xor	al, al
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
; Line 103
	cmp	DWORD PTR _size1$[ebp], 0
	jne	SHORT $LN1@operator@2
; Line 104
	mov	al, 1
	jmp	SHORT $LN3@operator@2
$LN1@operator@2:
; Line 105
	mov	eax, DWORD PTR _size1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _b2$[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	push	eax
	mov	ecx, DWORD PTR _b1$[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
$LN3@operator@2:
; Line 106
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?8E@@YG_NABV?$CBuffer@E@@0@Z ENDP			; operator==<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z PROC ; CMyComPtr<ICompressFilter>::QueryInterface<ICryptoProperties>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _pp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$QueryInterface@UICryptoProperties@@@?$CMyComPtr@UICompressFilter@@@@QBEJABU_GUID@@PAPAUICryptoProperties@@@Z ENDP ; CMyComPtr<ICompressFilter>::QueryInterface<ICryptoProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QBEPBEXZ PROC				; CBuffer<unsigned char>::operator unsigned char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QBEPBEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@N7z@NCrypto@@WHE@AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@N7z@NCrypto@@WHE@AGKXZ PROC		; [thunk]:NCrypto::N7z::CDecoder::Release`adjustor{116}', COMDAT
	sub	DWORD PTR [esp+4], 116			; 00000074H
	jmp	?Release@CDecoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CDecoder::Release
?Release@CDecoder@N7z@NCrypto@@WHE@AGKXZ ENDP		; [thunk]:NCrypto::N7z::CDecoder::Release`adjustor{116}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::N7z::CDecoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CDecoder::QueryInterface
?QueryInterface@CDecoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::N7z::CDecoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CAesCbcCoder@NCrypto@@W3AGKXZ
_TEXT	SEGMENT
?Release@CAesCbcCoder@NCrypto@@W3AGKXZ PROC		; [thunk]:NCrypto::CAesCbcCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CAesCbcCoder@NCrypto@@UAGKXZ	; NCrypto::CAesCbcCoder::Release
?Release@CAesCbcCoder@NCrypto@@W3AGKXZ ENDP		; [thunk]:NCrypto::CAesCbcCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@N7z@NCrypto@@WHI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@N7z@NCrypto@@WHI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{120}', COMDAT
	sub	DWORD PTR [esp+4], 120			; 00000078H
	jmp	?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CEncoder::QueryInterface
?QueryInterface@CEncoder@N7z@NCrypto@@WHI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{120}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@N7z@NCrypto@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@N7z@NCrypto@@W3AGKXZ PROC		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CEncoder::AddRef
?AddRef@CEncoder@N7z@NCrypto@@W3AGKXZ ENDP		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CAesCbcCoder@NCrypto@@W7AGKXZ
_TEXT	SEGMENT
?Release@CAesCbcCoder@NCrypto@@W7AGKXZ PROC		; [thunk]:NCrypto::CAesCbcCoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CAesCbcCoder@NCrypto@@UAGKXZ	; NCrypto::CAesCbcCoder::Release
?Release@CAesCbcCoder@NCrypto@@W7AGKXZ ENDP		; [thunk]:NCrypto::CAesCbcCoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@N7z@NCrypto@@WHE@AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@N7z@NCrypto@@WHE@AGKXZ PROC		; [thunk]:NCrypto::N7z::CDecoder::AddRef`adjustor{116}', COMDAT
	sub	DWORD PTR [esp+4], 116			; 00000074H
	jmp	?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CDecoder::AddRef
?AddRef@CDecoder@N7z@NCrypto@@WHE@AGKXZ ENDP		; [thunk]:NCrypto::N7z::CDecoder::AddRef`adjustor{116}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ PROC		; [thunk]:NCrypto::CAesCbcCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ	; NCrypto::CAesCbcCoder::AddRef
?AddRef@CAesCbcCoder@NCrypto@@W3AGKXZ ENDP		; [thunk]:NCrypto::CAesCbcCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CEncoder::QueryInterface
?QueryInterface@CEncoder@N7z@NCrypto@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@N7z@NCrypto@@W3AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@N7z@NCrypto@@W3AGKXZ PROC		; [thunk]:NCrypto::N7z::CDecoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CDecoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CDecoder::Release
?Release@CDecoder@N7z@NCrypto@@W3AGKXZ ENDP		; [thunk]:NCrypto::N7z::CDecoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ PROC		; [thunk]:NCrypto::CAesCbcCoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CAesCbcCoder@NCrypto@@UAGKXZ	; NCrypto::CAesCbcCoder::AddRef
?AddRef@CAesCbcCoder@NCrypto@@W7AGKXZ ENDP		; [thunk]:NCrypto::CAesCbcCoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@N7z@NCrypto@@WHE@AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@N7z@NCrypto@@WHE@AGKXZ PROC		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{116}', COMDAT
	sub	DWORD PTR [esp+4], 116			; 00000074H
	jmp	?Release@CEncoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CEncoder::Release
?Release@CEncoder@N7z@NCrypto@@WHE@AGKXZ ENDP		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{116}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::CAesCbcCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::CAesCbcCoder::QueryInterface
?QueryInterface@CAesCbcCoder@NCrypto@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::CAesCbcCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@N7z@NCrypto@@WHI@AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@N7z@NCrypto@@WHI@AGKXZ PROC		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{120}', COMDAT
	sub	DWORD PTR [esp+4], 120			; 00000078H
	jmp	?Release@CEncoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CEncoder::Release
?Release@CEncoder@N7z@NCrypto@@WHI@AGKXZ ENDP		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{120}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::N7z::CDecoder::QueryInterface`adjustor{116}', COMDAT
	sub	DWORD PTR [esp+4], 116			; 00000074H
	jmp	?QueryInterface@CDecoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CDecoder::QueryInterface
?QueryInterface@CDecoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::N7z::CDecoder::QueryInterface`adjustor{116}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::CAesCbcCoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CAesCbcCoder@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::CAesCbcCoder::QueryInterface
?QueryInterface@CAesCbcCoder@NCrypto@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::CAesCbcCoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@N7z@NCrypto@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@N7z@NCrypto@@W3AGKXZ PROC		; [thunk]:NCrypto::N7z::CDecoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CDecoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CDecoder::AddRef
?AddRef@CDecoder@N7z@NCrypto@@W3AGKXZ ENDP		; [thunk]:NCrypto::N7z::CDecoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@N7z@NCrypto@@WHE@AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@N7z@NCrypto@@WHE@AGKXZ PROC		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{116}', COMDAT
	sub	DWORD PTR [esp+4], 116			; 00000074H
	jmp	?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CEncoder::AddRef
?AddRef@CEncoder@N7z@NCrypto@@WHE@AGKXZ ENDP		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{116}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@N7z@NCrypto@@WHI@AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@N7z@NCrypto@@WHI@AGKXZ PROC		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{120}', COMDAT
	sub	DWORD PTR [esp+4], 120			; 00000078H
	jmp	?AddRef@CEncoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CEncoder::AddRef
?AddRef@CEncoder@N7z@NCrypto@@WHI@AGKXZ ENDP		; [thunk]:NCrypto::N7z::CEncoder::AddRef`adjustor{120}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@N7z@NCrypto@@W3AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@N7z@NCrypto@@W3AGKXZ PROC		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CEncoder@N7z@NCrypto@@UAGKXZ	; NCrypto::N7z::CEncoder::Release
?Release@CEncoder@N7z@NCrypto@@W3AGKXZ ENDP		; [thunk]:NCrypto::N7z::CEncoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{116}', COMDAT
	sub	DWORD PTR [esp+4], 116			; 00000074H
	jmp	?QueryInterface@CEncoder@N7z@NCrypto@@UAGJABU_GUID@@PAPAX@Z ; NCrypto::N7z::CEncoder::QueryInterface
?QueryInterface@CEncoder@N7z@NCrypto@@WHE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCrypto::N7z::CEncoder::QueryInterface`adjustor{116}'
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_GlobalKeyCache@N7z@NCrypto@@YAXXZ
text$yc	SEGMENT
??__Eg_GlobalKeyCache@N7z@NCrypto@@YAXXZ PROC		; NCrypto::N7z::`dynamic initializer for 'g_GlobalKeyCache'', COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\crypto\7zaes.cpp
; Line 118
	push	ebp
	mov	ebp, esp
	push	32					; 00000020H
	mov	ecx, OFFSET _g_GlobalKeyCache
	call	??0CKeyInfoCache@N7z@NCrypto@@QAE@I@Z	; NCrypto::N7z::CKeyInfoCache::CKeyInfoCache
	push	OFFSET ??__Fg_GlobalKeyCache@N7z@NCrypto@@YAXXZ ; NCrypto::N7z::`dynamic atexit destructor for 'g_GlobalKeyCache''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_GlobalKeyCache@N7z@NCrypto@@YAXXZ ENDP		; NCrypto::N7z::`dynamic initializer for 'g_GlobalKeyCache''
text$yc	ENDS
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ
text$yc	SEGMENT
??__Eg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ PROC ; NCrypto::N7z::`dynamic initializer for 'g_GlobalKeyCacheCriticalSection'', COMDAT
; Line 121
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_GlobalKeyCacheCriticalSection
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	push	OFFSET ??__Fg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ ; NCrypto::N7z::`dynamic atexit destructor for 'g_GlobalKeyCacheCriticalSection''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ ENDP ; NCrypto::N7z::`dynamic initializer for 'g_GlobalKeyCacheCriticalSection''
text$yc	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??__Fg_GlobalKeyCache@N7z@NCrypto@@YAXXZ
text$yd	SEGMENT
??__Fg_GlobalKeyCache@N7z@NCrypto@@YAXXZ PROC		; NCrypto::N7z::`dynamic atexit destructor for 'g_GlobalKeyCache'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_GlobalKeyCache
	call	??1CKeyInfoCache@N7z@NCrypto@@QAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_GlobalKeyCache@N7z@NCrypto@@YAXXZ ENDP		; NCrypto::N7z::`dynamic atexit destructor for 'g_GlobalKeyCache''
text$yd	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ
text$yd	SEGMENT
??__Fg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ PROC ; NCrypto::N7z::`dynamic atexit destructor for 'g_GlobalKeyCacheCriticalSection'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_GlobalKeyCacheCriticalSection
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ ENDP ; NCrypto::N7z::`dynamic atexit destructor for 'g_GlobalKeyCacheCriticalSection''
text$yd	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
_TEXT	ENDS
_BSS	SEGMENT
_g_GlobalKeyCacheCriticalSection DB 018H DUP (?)
_g_GlobalKeyCache DB 010H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_GlobalKeyCache$initializer$ DD FLAT:??__Eg_GlobalKeyCache@N7z@NCrypto@@YAXXZ
_g_GlobalKeyCacheCriticalSection$initializer$ DD FLAT:??__Eg_GlobalKeyCacheCriticalSection@N7z@NCrypto@@YAXXZ
CRT$XCU	ENDS
END

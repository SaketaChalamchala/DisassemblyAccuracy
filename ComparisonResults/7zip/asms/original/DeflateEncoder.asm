; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\DeflateEncoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_kLenStart32 DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	014H
	DB	018H
	DB	01cH
	DB	020H
	DB	028H
	DB	030H
	DB	038H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	080H
	DB	0a0H
	DB	0c0H
	DB	0e0H
	DB	0ffH
	DB	00H
	DB	00H
	ORG $+1
_kLenStart64 DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	014H
	DB	018H
	DB	01cH
	DB	020H
	DB	028H
	DB	030H
	DB	038H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	080H
	DB	0a0H
	DB	0c0H
	DB	0e0H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
_kLenDirectBits32 DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
_kLenDirectBits64 DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	010H
	DB	00H
	DB	00H
	ORG $+1
_kDistStart DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	06H
	DD	08H
	DD	0cH
	DD	010H
	DD	018H
	DD	020H
	DD	030H
	DD	040H
	DD	060H
	DD	080H
	DD	0c0H
	DD	0100H
	DD	0180H
	DD	0200H
	DD	0300H
	DD	0400H
	DD	0600H
	DD	0800H
	DD	0c00H
	DD	01000H
	DD	01800H
	DD	02000H
	DD	03000H
	DD	04000H
	DD	06000H
	DD	08000H
	DD	0c000H
_kDistDirectBits DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	08H
	DB	08H
	DB	09H
	DB	09H
	DB	0aH
	DB	0aH
	DB	0bH
	DB	0bH
	DB	0cH
	DB	0cH
	DB	0dH
	DB	0dH
	DB	0eH
	DB	0eH
_kLevelDirectBits DB 02H
	DB	03H
	DB	07H
	ORG $+1
_kCodeLengthAlphabetOrder DB 010H
	DB	011H
	DB	012H
	DB	00H
	DB	08H
	DB	07H
	DB	09H
	DB	06H
	DB	0aH
	DB	05H
	DB	0bH
	DB	04H
	DB	0cH
	DB	03H
	DB	0dH
	DB	02H
	DB	0eH
	DB	01H
	DB	0fH
CONST	ENDS
PUBLIC	?Normalize@CEncProps@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CEncProps::Normalize
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv95 = -16						; size = 4
tv76 = -12						; size = 4
_level$ = -8						; size = 4
_this$ = -4						; size = 4
?Normalize@CEncProps@NEncoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NEncoder::CEncProps::Normalize
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _level$[ebp], ecx
; Line 85
	cmp	DWORD PTR _level$[ebp], 0
	jge	SHORT $LN6@Normalize
	mov	DWORD PTR _level$[ebp], 5
$LN6@Normalize:
; Line 86
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _level$[ebp]
	mov	DWORD PTR [edx], eax
; Line 87
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jge	SHORT $LN5@Normalize
	xor	edx, edx
	cmp	DWORD PTR _level$[ebp], 5
	setge	dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN5@Normalize:
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jge	SHORT $LN4@Normalize
	cmp	DWORD PTR _level$[ebp], 7
	jge	SHORT $LN9@Normalize
	mov	DWORD PTR tv76[ebp], 32			; 00000020H
	jmp	SHORT $LN10@Normalize
$LN9@Normalize:
	xor	edx, edx
	cmp	DWORD PTR _level$[ebp], 9
	setge	dl
	sub	edx, 1
	and	edx, -64				; ffffffc0H
	add	edx, 128				; 00000080H
	mov	DWORD PTR tv76[ebp], edx
$LN10@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN4@Normalize:
; Line 89
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jge	SHORT $LN3@Normalize
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	setne	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN3@Normalize:
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN2@Normalize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sar	edx, 1
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
$LN2@Normalize:
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+20], -1
	jne	SHORT $LN7@Normalize
	cmp	DWORD PTR _level$[ebp], 7
	jge	SHORT $LN11@Normalize
	mov	DWORD PTR tv95[ebp], 1
	jmp	SHORT $LN12@Normalize
$LN11@Normalize:
	xor	edx, edx
	cmp	DWORD PTR _level$[ebp], 9
	setge	dl
	sub	edx, 1
	and	edx, -7					; fffffff9H
	add	edx, 10					; 0000000aH
	mov	DWORD PTR tv95[ebp], edx
$LN12@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv95[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN7@Normalize:
; Line 92
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@CEncProps@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NEncoder::CEncProps::Normalize
_TEXT	ENDS
PUBLIC	?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetProps
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fb$67174 = -40						; size = 4
_props$ = -32						; size = 24
_this$ = -4						; size = 4
_props2$ = 8						; size = 4
?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::SetProps
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _props2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _props$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _props$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _props$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _props$[ebp+12], edx
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _props$[ebp+16], ecx
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR _props$[ebp+20], edx
; Line 97
	lea	ecx, DWORD PTR _props$[ebp]
	call	?Normalize@CEncProps@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CEncProps::Normalize
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _props$[ebp+16]
	mov	DWORD PTR [eax+39660], ecx
; Line 101
	mov	edx, DWORD PTR _props$[ebp+8]
	mov	DWORD PTR _fb$67174[ebp], edx
; Line 102
	cmp	DWORD PTR _fb$67174[ebp], 3
	jae	SHORT $LN7@SetProps
; Line 103
	mov	DWORD PTR _fb$67174[ebp], 3
$LN7@SetProps:
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _fb$67174[ebp]
	cmp	ecx, DWORD PTR [eax+1232]
	jbe	SHORT $LN6@SetProps
; Line 105
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1232]
	mov	DWORD PTR _fb$67174[ebp], eax
$LN6@SetProps:
; Line 106
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _fb$67174[ebp]
	mov	DWORD PTR [ecx+1192], edx
; Line 108
	xor	eax, eax
	cmp	DWORD PTR _props$[ebp+4], 0
	sete	al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1196], al
; Line 109
	xor	edx, edx
	cmp	DWORD PTR _props$[ebp+12], 0
	setne	dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1197], dl
; Line 111
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _props$[ebp+20]
	mov	DWORD PTR [ecx+1216], edx
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1216], 0
	jne	SHORT $LN5@SetProps
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1216], 1
$LN5@SetProps:
; Line 114
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1216], 1
	jne	SHORT $LN4@SetProps
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1212], 1
	jmp	SHORT $LN8@SetProps
$LN4@SetProps:
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1216], 10		; 0000000aH
	ja	SHORT $LN2@SetProps
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1212], 2
; Line 118
	jmp	SHORT $LN8@SetProps
$LN2@SetProps:
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1216]
	sub	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1212], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1216], 10		; 0000000aH
$LN8@SetProps:
; Line 123
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@SetProps
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN12@SetProps:
	DD	1
	DD	$LN11@SetProps
$LN11@SetProps:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN10@SetProps
$LN10@SetProps:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::SetProps
_TEXT	ENDS
PUBLIC	??1CBitlEncoder@@QAE@XZ				; CBitlEncoder::~CBitlEncoder
PUBLIC	??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CEncProps::CEncProps
PUBLIC	??0CBitlEncoder@@QAE@XZ				; CBitlEncoder::CBitlEncoder
PUBLIC	??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z	; NCompress::NDeflate::NEncoder::CCoder::CCoder
EXTRN	_MatchFinder_Construct@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z$0
__ehfuncinfo$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv93 = -56						; size = 4
tv89 = -52						; size = 4
_props$67186 = -44					; size = 24
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_deflate64Mode$ = 8					; size = 1
??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z PROC	; NCompress::NDeflate::NEncoder::CCoder::CCoder
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	??0CBitlEncoder@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1184], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1200], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1204], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1244], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _deflate64Mode$[ebp]
	mov	BYTE PTR [ecx+1245], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4824], 0
; Line 134
	lea	ecx, DWORD PTR _props$67186[ebp]
	call	??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CEncProps::CEncProps
; Line 135
	lea	ecx, DWORD PTR _props$67186[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetProps
; Line 137
	movzx	edx, BYTE PTR _deflate64Mode$[ebp]
	neg	edx
	sbb	edx, edx
	add	edx, 258				; 00000102H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1232], edx
; Line 138
	movzx	ecx, BYTE PTR _deflate64Mode$[ebp]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1228], ecx
; Line 139
	movzx	eax, BYTE PTR _deflate64Mode$[ebp]
	test	eax, eax
	je	SHORT $LN3@CCoder
	mov	DWORD PTR tv89[ebp], OFFSET _kLenStart64
	jmp	SHORT $LN4@CCoder
$LN3@CCoder:
	mov	DWORD PTR tv89[ebp], OFFSET _kLenStart32
$LN4@CCoder:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR [ecx+1236], edx
; Line 140
	movzx	eax, BYTE PTR _deflate64Mode$[ebp]
	test	eax, eax
	je	SHORT $LN5@CCoder
	mov	DWORD PTR tv93[ebp], OFFSET _kLenDirectBits64
	jmp	SHORT $LN6@CCoder
$LN5@CCoder:
	mov	DWORD PTR tv93[ebp], OFFSET _kLenDirectBits32
$LN6@CCoder:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR [ecx+1240], edx
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_MatchFinder_Construct@4
; Line 142
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@CCoder
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@CCoder:
	DD	1
	DD	$LN10@CCoder
$LN10@CCoder:
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN8@CCoder
$LN8@CCoder:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	jmp	??1CBitlEncoder@@QAE@XZ
__ehhandler$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCoder@NEncoder@NDeflate@NCompress@@QAE@_N@Z ENDP	; NCompress::NDeflate::NEncoder::CCoder::CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ PROC	; NCompress::NDeflate::NEncoder::CEncProps::CEncProps, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.h
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 68
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], -1
; Line 69
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], -1
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ ENDP	; NCompress::NDeflate::NEncoder::CEncProps::CEncProps
_TEXT	ENDS
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBitlEncoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBitlEncoder@@QAE@XZ PROC				; CBitlEncoder::CBitlEncoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBitlEncoder@@QAE@XZ ENDP				; CBitlEncoder::CBitlEncoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBitlEncoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBitlEncoder@@QAE@XZ PROC				; CBitlEncoder::~CBitlEncoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBitlEncoder@@QAE@XZ ENDP				; CBitlEncoder::~CBitlEncoder
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	?Create@CBitlEncoder@@QAE_NI@Z			; CBitlEncoder::Create
PUBLIC	?Create@CCoder@NEncoder@NDeflate@NCompress@@QAEJXZ ; NCompress::NDeflate::NEncoder::CCoder::Create
EXTRN	_MatchFinder_Create@24:PROC
EXTRN	_g_Alloc:QWORD
EXTRN	_MidAlloc@4:PROC
EXTRN	_MyAlloc@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Create@CCoder@NEncoder@NDeflate@NCompress@@QAEJXZ PROC	; NCompress::NDeflate::NEncoder::CCoder::Create
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 145
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 147
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1184], 0
	jne	SHORT $LN14@Create
; Line 149
	push	262140					; 0003fffcH
	call	_MyAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1184], eax
; Line 150
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1184], 0
	jne	SHORT $LN14@Create
; Line 151
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Create
$LN14@Create:
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4824], 0
	jne	SHORT $LN12@Create
; Line 155
	push	339968					; 00053000H
	call	_MyAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4824], eax
; Line 156
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4824], 0
	jne	SHORT $LN12@Create
; Line 157
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Create
$LN12@Create:
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1221]
	test	ecx, ecx
	je	SHORT $LN10@Create
; Line 162
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1200], 0
	jne	SHORT $LN9@Create
; Line 164
	push	1310700					; 0013ffecH
	call	_MidAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1200], eax
; Line 165
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1200], 0
	jne	SHORT $LN9@Create
; Line 166
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Create
$LN9@Create:
; Line 169
	jmp	SHORT $LN7@Create
$LN10@Create:
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1204], 0
	jne	SHORT $LN7@Create
; Line 173
	push	1040					; 00000410H
	call	_MyAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1204], eax
; Line 174
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1204], 0
	jne	SHORT $LN5@Create
; Line 175
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN15@Create
$LN5@Create:
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1204]
	mov	DWORD PTR [eax+1188], edx
$LN7@Create:
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1244]
	test	ecx, ecx
	jne	$LN4@Create
; Line 182
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1197]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+29], al
; Line 183
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 3
; Line 187
	push	OFFSET _g_Alloc
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1232]
	sub	edx, DWORD PTR [ecx+1192]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1192]
	push	ecx
	push	69889					; 00011101H
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1245]
	neg	eax
	sbb	eax, eax
	and	eax, 32768				; 00008000H
	add	eax, 32768				; 00008000H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_MatchFinder_Create@24
	test	eax, eax
	jne	SHORT $LN3@Create
; Line 188
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN15@Create
$LN3@Create:
; Line 189
	push	1048576					; 00100000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?Create@CBitlEncoder@@QAE_NI@Z		; CBitlEncoder::Create
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@Create
; Line 190
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN15@Create
$LN4@Create:
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+39660], 0
	je	SHORT $LN1@Create
; Line 193
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+39660]
	mov	DWORD PTR [ecx+48], eax
$LN1@Create:
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1244], 1
; Line 195
	xor	eax, eax
$LN15@Create:
; Line 197
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@CCoder@NEncoder@NDeflate@NCompress@@QAEJXZ ENDP	; NCompress::NDeflate::NEncoder::CCoder::Create
_TEXT	ENDS
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CBitlEncoder@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@CBitlEncoder@@QAE_NI@Z PROC			; CBitlEncoder::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitlencoder.h
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@CBitlEncoder@@QAE_NI@Z ENDP			; CBitlEncoder::Create
_TEXT	ENDS
PUBLIC	?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NDeflate::NEncoder::CCoder::BaseSetEncoderProperties2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv75 = -56						; size = 4
_v$67240 = -52						; size = 4
_propID$67236 = -48					; size = 4
_prop$67235 = -44					; size = 4
_i$67231 = -40						; size = 4
_props$ = -32						; size = 24
_this$ = -4						; size = 4
_propIDs$ = 8						; size = 4
_coderProps$ = 12					; size = 4
_numProps$ = 16						; size = 4
?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::BaseSetEncoderProperties2
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 201
	lea	ecx, DWORD PTR _props$[ebp]
	call	??0CEncProps@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CEncProps::CEncProps
; Line 202
	mov	DWORD PTR _i$67231[ebp], 0
	jmp	SHORT $LN14@BaseSetEnc
$LN13@BaseSetEnc:
	mov	eax, DWORD PTR _i$67231[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67231[ebp], eax
$LN14@BaseSetEnc:
	mov	ecx, DWORD PTR _i$67231[ebp]
	cmp	ecx, DWORD PTR _numProps$[ebp]
	jae	$LN12@BaseSetEnc
; Line 204
	mov	edx, DWORD PTR _i$67231[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _coderProps$[ebp]
	mov	DWORD PTR _prop$67235[ebp], edx
; Line 205
	mov	eax, DWORD PTR _i$67231[ebp]
	mov	ecx, DWORD PTR _propIDs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _propID$67236[ebp], edx
; Line 206
	cmp	DWORD PTR _propID$67236[ebp], 16	; 00000010H
	jb	SHORT $LN11@BaseSetEnc
; Line 207
	jmp	SHORT $LN13@BaseSetEnc
$LN11@BaseSetEnc:
; Line 208
	mov	eax, DWORD PTR _prop$67235[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 19					; 00000013H
	je	SHORT $LN10@BaseSetEnc
; Line 209
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN15@BaseSetEnc
$LN10@BaseSetEnc:
; Line 210
	mov	edx, DWORD PTR _prop$67235[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _v$67240[ebp], eax
; Line 211
	mov	ecx, DWORD PTR _propID$67236[ebp]
	mov	DWORD PTR tv75[ebp], ecx
	mov	edx, DWORD PTR tv75[ebp]
	sub	edx, 8
	mov	DWORD PTR tv75[ebp], edx
	cmp	DWORD PTR tv75[ebp], 7
	ja	SHORT $LN1@BaseSetEnc
	mov	eax, DWORD PTR tv75[ebp]
	jmp	DWORD PTR $LN20@BaseSetEnc[eax*4]
$LN7@BaseSetEnc:
; Line 213
	mov	ecx, DWORD PTR _v$67240[ebp]
	mov	DWORD PTR _props$[ebp+20], ecx
	jmp	SHORT $LN8@BaseSetEnc
$LN6@BaseSetEnc:
; Line 214
	mov	edx, DWORD PTR _v$67240[ebp]
	mov	DWORD PTR _props$[ebp+8], edx
	jmp	SHORT $LN8@BaseSetEnc
$LN5@BaseSetEnc:
; Line 215
	mov	eax, DWORD PTR _v$67240[ebp]
	mov	DWORD PTR _props$[ebp+16], eax
	jmp	SHORT $LN8@BaseSetEnc
$LN4@BaseSetEnc:
; Line 216
	mov	ecx, DWORD PTR _v$67240[ebp]
	mov	DWORD PTR _props$[ebp+4], ecx
	jmp	SHORT $LN8@BaseSetEnc
$LN3@BaseSetEnc:
; Line 217
	mov	edx, DWORD PTR _v$67240[ebp]
	mov	DWORD PTR _props$[ebp], edx
	jmp	SHORT $LN8@BaseSetEnc
$LN2@BaseSetEnc:
; Line 218
	jmp	SHORT $LN8@BaseSetEnc
$LN1@BaseSetEnc:
; Line 219
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN15@BaseSetEnc
$LN8@BaseSetEnc:
; Line 221
	jmp	$LN13@BaseSetEnc
$LN12@BaseSetEnc:
; Line 222
	lea	eax, DWORD PTR _props$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetProps@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBUCEncProps@234@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetProps
; Line 223
	xor	eax, eax
$LN15@BaseSetEnc:
; Line 224
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@BaseSetEnc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN19@BaseSetEnc:
	DD	1
	DD	$LN18@BaseSetEnc
$LN18@BaseSetEnc:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN17@BaseSetEnc
$LN17@BaseSetEnc:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
	npad	2
$LN20@BaseSetEnc:
	DD	$LN6@BaseSetEnc
	DD	$LN1@BaseSetEnc
	DD	$LN5@BaseSetEnc
	DD	$LN7@BaseSetEnc
	DD	$LN4@BaseSetEnc
	DD	$LN2@BaseSetEnc
	DD	$LN1@BaseSetEnc
	DD	$LN3@BaseSetEnc
?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::BaseSetEncoderProperties2
_TEXT	ENDS
PUBLIC	?Free@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::Free
EXTRN	_MyFree@4:PROC
EXTRN	_MidFree@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ PROC	; NCompress::NDeflate::NEncoder::CCoder::Free
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1200]
	push	ecx
	call	_MidFree@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1200], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1204]
	push	ecx
	call	_MyFree@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1204], 0
; Line 230
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1184]
	push	ecx
	call	_MyFree@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1184], 0
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4824]
	push	ecx
	call	_MyFree@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4824], 0
; Line 232
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP	; NCompress::NDeflate::NEncoder::CCoder::Free
_TEXT	ENDS
PUBLIC	??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ	; NCompress::NDeflate::NEncoder::CCoder::~CCoder
EXTRN	_MatchFinder_Free@8:PROC
xdata$x	SEGMENT
__unwindtable$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ$0
__ehfuncinfo$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ PROC	; NCompress::NDeflate::NEncoder::CCoder::~CCoder
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::Free
; Line 237
	push	OFFSET _g_Alloc
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_MatchFinder_Free@8
; Line 238
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	??1CBitlEncoder@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	jmp	??1CBitlEncoder@@QAE@XZ
__ehhandler$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CCoder@NEncoder@NDeflate@NCompress@@QAE@XZ ENDP	; NCompress::NDeflate::NEncoder::CCoder::~CCoder
PUBLIC	__$ArrayPad$
PUBLIC	?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::GetMatches
EXTRN	_Hc3Zip_MatchFinder_GetMatches@8:PROC
EXTRN	_Bt3Zip_MatchFinder_GetMatches@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv91 = -2120						; size = 4
_pby2$67280 = -2116					; size = 4
_pby$67279 = -2112					; size = 4
_numAvail$67278 = -2108					; size = 4
_len$67276 = -2104					; size = 4
_i$67270 = -2100					; size = 4
_numPairs$ = -2096					; size = 4
_distanceTmp$ = -2088					; size = 2076
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NEncoder::CCoder::GetMatches
; _this$ = ecx
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 2120				; 00000848H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-2120]
	mov	ecx, 530				; 00000212H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1221]
	test	ecx, ecx
	je	SHORT $LN13@GetMatches
; Line 244
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1208]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1200]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1188], eax
; Line 245
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1284]
	test	eax, eax
	je	SHORT $LN13@GetMatches
; Line 247
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1188]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1208]
	lea	eax, DWORD PTR [eax+edx+1]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1208], eax
; Line 248
	jmp	$LN14@GetMatches
$LN13@GetMatches:
; Line 256
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1197]
	test	eax, eax
	je	SHORT $LN16@GetMatches
	lea	ecx, DWORD PTR _distanceTmp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Bt3Zip_MatchFinder_GetMatches@8
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN17@GetMatches
$LN16@GetMatches:
	lea	eax, DWORD PTR _distanceTmp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_Hc3Zip_MatchFinder_GetMatches@8
	mov	DWORD PTR tv91[ebp], eax
$LN17@GetMatches:
	mov	edx, DWORD PTR tv91[ebp]
	mov	DWORD PTR _numPairs$[ebp], edx
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1188]
	mov	dx, WORD PTR _numPairs$[ebp]
	mov	WORD PTR [ecx], dx
; Line 260
	cmp	DWORD PTR _numPairs$[ebp], 0
	jbe	$LN11@GetMatches
; Line 263
	mov	DWORD PTR _i$67270[ebp], 0
	jmp	SHORT $LN10@GetMatches
$LN9@GetMatches:
	mov	eax, DWORD PTR _i$67270[ebp]
	add	eax, 2
	mov	DWORD PTR _i$67270[ebp], eax
$LN10@GetMatches:
	mov	ecx, DWORD PTR _i$67270[ebp]
	cmp	ecx, DWORD PTR _numPairs$[ebp]
	jae	SHORT $LN8@GetMatches
; Line 265
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1188]
	mov	ecx, DWORD PTR _i$67270[ebp]
	mov	edx, DWORD PTR _i$67270[ebp]
	mov	dx, WORD PTR _distanceTmp$[ebp+edx*4]
	mov	WORD PTR [eax+ecx*2+2], dx
; Line 266
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1188]
	mov	edx, DWORD PTR _i$67270[ebp]
	mov	eax, DWORD PTR _i$67270[ebp]
	mov	ax, WORD PTR _distanceTmp$[ebp+eax*4+4]
	mov	WORD PTR [ecx+edx*2+4], ax
; Line 267
	jmp	SHORT $LN9@GetMatches
$LN8@GetMatches:
; Line 268
	mov	ecx, DWORD PTR _numPairs$[ebp]
	mov	edx, DWORD PTR _distanceTmp$[ebp+ecx*4-8]
	mov	DWORD PTR _len$67276[ebp], edx
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$67276[ebp]
	cmp	ecx, DWORD PTR [eax+1192]
	jne	$LN11@GetMatches
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1192]
	cmp	ecx, DWORD PTR [eax+1232]
	je	$LN11@GetMatches
; Line 271
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR _numAvail$67278[ebp], ecx
; Line 272
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	DWORD PTR _pby$67279[ebp], eax
; Line 273
	mov	ecx, DWORD PTR _numPairs$[ebp]
	mov	edx, DWORD PTR _distanceTmp$[ebp+ecx*4-4]
	add	edx, 1
	mov	eax, DWORD PTR _pby$67279[ebp]
	sub	eax, edx
	mov	DWORD PTR _pby2$67280[ebp], eax
; Line 274
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _numAvail$67278[ebp]
	cmp	edx, DWORD PTR [ecx+1232]
	jbe	SHORT $LN6@GetMatches
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1232]
	mov	DWORD PTR _numAvail$67278[ebp], ecx
$LN6@GetMatches:
; Line 276
	jmp	SHORT $LN5@GetMatches
$LN4@GetMatches:
	mov	edx, DWORD PTR _len$67276[ebp]
	add	edx, 1
	mov	DWORD PTR _len$67276[ebp], edx
$LN5@GetMatches:
	mov	eax, DWORD PTR _len$67276[ebp]
	cmp	eax, DWORD PTR _numAvail$67278[ebp]
	jae	SHORT $LN3@GetMatches
	mov	ecx, DWORD PTR _pby$67279[ebp]
	add	ecx, DWORD PTR _len$67276[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _pby2$67280[ebp]
	add	eax, DWORD PTR _len$67276[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	edx, ecx
	jne	SHORT $LN3@GetMatches
	jmp	SHORT $LN4@GetMatches
$LN3@GetMatches:
; Line 277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1188]
	mov	ecx, DWORD PTR _i$67270[ebp]
	mov	dx, WORD PTR _len$67276[ebp]
	mov	WORD PTR [eax+ecx*2-2], dx
$LN11@GetMatches:
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1221]
	test	ecx, ecx
	je	SHORT $LN2@GetMatches
; Line 281
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1208]
	mov	ecx, DWORD PTR _numPairs$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1208], edx
$LN2@GetMatches:
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+1284]
	test	edx, edx
	jne	SHORT $LN14@GetMatches
; Line 283
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1288]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1288], ecx
$LN14@GetMatches:
; Line 284
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@GetMatches
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2120				; 00000848H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@GetMatches:
	DD	1
	DD	$LN19@GetMatches
$LN19@GetMatches:
	DD	-2088					; fffff7d8H
	DD	2076					; 0000081cH
	DD	$LN18@GetMatches
$LN18@GetMatches:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NEncoder::CCoder::GetMatches
_TEXT	ENDS
PUBLIC	?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MovePos
EXTRN	_Hc3Zip_MatchFinder_Skip@8:PROC
EXTRN	_Bt3Zip_MatchFinder_Skip@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_num$ = 8						; size = 4
?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::MovePos
; _this$ = ecx
; Line 287
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1284]
	test	ecx, ecx
	jne	SHORT $LN4@MovePos
	cmp	DWORD PTR _num$[ebp], 0
	jbe	SHORT $LN4@MovePos
; Line 290
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1197]
	test	eax, eax
	je	SHORT $LN2@MovePos
; Line 291
	mov	ecx, DWORD PTR _num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Bt3Zip_MatchFinder_Skip@8
; Line 292
	jmp	SHORT $LN1@MovePos
$LN2@MovePos:
; Line 293
	mov	eax, DWORD PTR _num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_Hc3Zip_MatchFinder_Skip@8
$LN1@MovePos:
; Line 294
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1288]
	add	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1288], eax
$LN4@MovePos:
; Line 296
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::MovePos
_TEXT	ENDS
PUBLIC	?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z ; NCompress::NDeflate::NEncoder::CCoder::Backward
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_backCur$67307 = -20					; size = 2
_posPrev$67306 = -16					; size = 4
_backMem$ = -12						; size = 2
_posMem$ = -8						; size = 4
_this$ = -4						; size = 4
_backRes$ = 8						; size = 4
_cur$ = 12						; size = 4
?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::Backward
; _this$ = ecx
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 302
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	DWORD PTR [eax+1292], ecx
; Line 303
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+edx*8+4832]
	mov	DWORD PTR _posMem$[ebp], ecx
; Line 304
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+edx*8+4834]
	mov	WORD PTR _backMem$[ebp], cx
$LN3@Backward:
; Line 307
	mov	edx, DWORD PTR _posMem$[ebp]
	mov	DWORD PTR _posPrev$67306[ebp], edx
; Line 308
	mov	ax, WORD PTR _backMem$[ebp]
	mov	WORD PTR _backCur$67307[ebp], ax
; Line 309
	mov	ecx, DWORD PTR _posPrev$67306[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [edx+ecx*8+4834]
	mov	WORD PTR _backMem$[ebp], ax
; Line 310
	mov	ecx, DWORD PTR _posPrev$67306[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+ecx*8+4832]
	mov	DWORD PTR _posMem$[ebp], eax
; Line 311
	mov	ecx, DWORD PTR _posPrev$67306[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _backCur$67307[ebp]
	mov	WORD PTR [edx+ecx*8+4834], ax
; Line 312
	mov	ecx, DWORD PTR _posPrev$67306[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _cur$[ebp]
	mov	WORD PTR [edx+ecx*8+4832], ax
; Line 313
	mov	ecx, DWORD PTR _posPrev$67306[ebp]
	mov	DWORD PTR _cur$[ebp], ecx
; Line 315
	cmp	DWORD PTR _cur$[ebp], 0
	ja	SHORT $LN3@Backward
; Line 316
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+4834]
	mov	ecx, DWORD PTR _backRes$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 317
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+4832]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1296], eax
; Line 318
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1296]
; Line 319
	mov	esp, ebp
	pop	ebp
	ret	8
?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::Backward
_TEXT	ENDS
PUBLIC	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z	; NCompress::NDeflate::NEncoder::GetPosSlot
PUBLIC	?GetOptimal@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z ; NCompress::NDeflate::NEncoder::CCoder::GetOptimal
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_optimum$67356 = -80					; size = 4
_curAndLenPrice$67355 = -76				; size = 4
_lenTest$67351 = -72					; size = 4
_distance$67350 = -68					; size = 4
_optimum$67343 = -64					; size = 4
_curAnd1Price$67342 = -60				; size = 4
_curPrice$67341 = -56					; size = 4
_len$67339 = -52					; size = 4
_newLen$67336 = -48					; size = 4
_numDistancePairs$67335 = -44				; size = 4
_lenEnd$ = -40						; size = 4
_cur$ = -36						; size = 4
_distance$67325 = -32					; size = 4
_i$67321 = -28						; size = 4
_offs$ = -24						; size = 4
_lenMain$ = -20						; size = 4
_matchDistances$ = -16					; size = 4
_numDistancePairs$ = -12				; size = 4
_len$67314 = -8						; size = 4
_this$ = -4						; size = 4
_backRes$ = 8						; size = 4
?GetOptimal@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::GetOptimal
; _this$ = ecx
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1292]
	cmp	edx, DWORD PTR [ecx+1296]
	je	SHORT $LN23@GetOptimal
; Line 325
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1296]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+ecx*8+4832]
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+1296]
	mov	DWORD PTR _len$67314[ebp], eax
; Line 326
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1296]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, WORD PTR [ecx+eax*8+4834]
	mov	eax, DWORD PTR _backRes$[ebp]
	mov	DWORD PTR [eax], edx
; Line 327
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1296]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+edx*8+4832]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1296], ecx
; Line 328
	mov	eax, DWORD PTR _len$67314[ebp]
	jmp	$LN24@GetOptimal
$LN23@GetOptimal:
; Line 330
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1292], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1296], 0
; Line 332
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::GetMatches
; Line 334
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1188]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _numDistancePairs$[ebp], ecx
; Line 335
	cmp	DWORD PTR _numDistancePairs$[ebp], 0
	jne	SHORT $LN22@GetOptimal
; Line 336
	mov	eax, 1
	jmp	$LN24@GetOptimal
$LN22@GetOptimal:
; Line 338
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1188]
	add	eax, 2
	mov	DWORD PTR _matchDistances$[ebp], eax
; Line 339
	mov	ecx, DWORD PTR _numDistancePairs$[ebp]
	mov	edx, DWORD PTR _matchDistances$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2-4]
	mov	DWORD PTR _lenMain$[ebp], eax
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _lenMain$[ebp]
	cmp	edx, DWORD PTR [ecx+1192]
	jbe	SHORT $LN21@GetOptimal
; Line 343
	mov	eax, DWORD PTR _numDistancePairs$[ebp]
	mov	ecx, DWORD PTR _matchDistances$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	mov	eax, DWORD PTR _backRes$[ebp]
	mov	DWORD PTR [eax], edx
; Line 344
	mov	ecx, DWORD PTR _lenMain$[ebp]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MovePos
; Line 345
	mov	eax, DWORD PTR _lenMain$[ebp]
	jmp	$LN24@GetOptimal
$LN21@GetOptimal:
; Line 347
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+1288]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+1300]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4836], ecx
; Line 348
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4840], ax
; Line 350
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4844], 268435455		; 0fffffffH
; Line 351
	mov	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+4848], ax
; Line 354
	mov	DWORD PTR _offs$[ebp], 0
; Line 355
	mov	DWORD PTR _i$67321[ebp], 3
	jmp	SHORT $LN20@GetOptimal
$LN19@GetOptimal:
	mov	edx, DWORD PTR _i$67321[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67321[ebp], edx
$LN20@GetOptimal:
	mov	eax, DWORD PTR _i$67321[ebp]
	cmp	eax, DWORD PTR _lenMain$[ebp]
	ja	SHORT $LN18@GetOptimal
; Line 357
	mov	ecx, DWORD PTR _offs$[ebp]
	mov	edx, DWORD PTR _matchDistances$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _distance$67325[ebp], eax
; Line 358
	xor	ecx, ecx
	mov	edx, DWORD PTR _i$67321[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+edx*8+4832], cx
; Line 359
	mov	ecx, DWORD PTR _i$67321[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _distance$67325[ebp]
	mov	WORD PTR [edx+ecx*8+4834], ax
; Line 360
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$67321[ebp]
	movzx	esi, BYTE PTR [ecx+1553]
	mov	edx, DWORD PTR _distance$67325[ebp]
	push	edx
	call	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ; NCompress::NDeflate::NEncoder::GetPosSlot
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+1812]
	add	esi, edx
	mov	eax, DWORD PTR _i$67321[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*8+4828], esi
; Line 361
	mov	edx, DWORD PTR _offs$[ebp]
	mov	eax, DWORD PTR _matchDistances$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	cmp	DWORD PTR _i$67321[ebp], ecx
	jne	SHORT $LN17@GetOptimal
; Line 362
	mov	edx, DWORD PTR _offs$[ebp]
	add	edx, 2
	mov	DWORD PTR _offs$[ebp], edx
$LN17@GetOptimal:
; Line 363
	jmp	$LN19@GetOptimal
$LN18@GetOptimal:
; Line 365
	mov	DWORD PTR _cur$[ebp], 0
; Line 366
	mov	eax, DWORD PTR _lenMain$[ebp]
	mov	DWORD PTR _lenEnd$[ebp], eax
$LN16@GetOptimal:
; Line 369
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cur$[ebp], ecx
; Line 370
	mov	edx, DWORD PTR _cur$[ebp]
	cmp	edx, DWORD PTR _lenEnd$[ebp]
	je	SHORT $LN13@GetOptimal
	cmp	DWORD PTR _cur$[ebp], 4096		; 00001000H
	je	SHORT $LN13@GetOptimal
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1208], 653286		; 0009f7e6H
	jb	SHORT $LN14@GetOptimal
$LN13@GetOptimal:
; Line 371
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	mov	edx, DWORD PTR _backRes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z ; NCompress::NDeflate::NEncoder::CCoder::Backward
	jmp	$LN24@GetOptimal
$LN14@GetOptimal:
; Line 372
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::GetMatches
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1188]
	add	ecx, 2
	mov	DWORD PTR _matchDistances$[ebp], ecx
; Line 375
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1188]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _numDistancePairs$67335[ebp], ecx
; Line 376
	mov	DWORD PTR _newLen$67336[ebp], 0
; Line 377
	cmp	DWORD PTR _numDistancePairs$67335[ebp], 0
	je	$LN12@GetOptimal
; Line 379
	mov	edx, DWORD PTR _numDistancePairs$67335[ebp]
	mov	eax, DWORD PTR _matchDistances$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2-4]
	mov	DWORD PTR _newLen$67336[ebp], ecx
; Line 380
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _newLen$67336[ebp]
	cmp	eax, DWORD PTR [edx+1192]
	jbe	SHORT $LN12@GetOptimal
; Line 382
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	mov	edx, DWORD PTR _backRes$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Backward@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAII@Z ; NCompress::NDeflate::NEncoder::CCoder::Backward
	mov	DWORD PTR _len$67339[ebp], eax
; Line 383
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _numDistancePairs$67335[ebp]
	mov	esi, DWORD PTR _matchDistances$[ebp]
	mov	dx, WORD PTR [esi+edx*2-2]
	mov	WORD PTR [ecx+eax*8+4834], dx
; Line 384
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, DWORD PTR _newLen$67336[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1292], eax
; Line 385
	mov	edx, DWORD PTR _cur$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [ecx+1292]
	mov	WORD PTR [eax+edx*8+4832], cx
; Line 386
	mov	edx, DWORD PTR _newLen$67336[ebp]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MovePos
; Line 387
	mov	eax, DWORD PTR _len$67339[ebp]
	jmp	$LN24@GetOptimal
$LN12@GetOptimal:
; Line 390
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4828]
	mov	DWORD PTR _curPrice$67341[ebp], edx
; Line 391
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+1288]
	movzx	eax, BYTE PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+1300]
	add	edx, DWORD PTR _curPrice$67341[ebp]
	mov	DWORD PTR _curAnd1Price$67342[ebp], edx
; Line 392
	mov	eax, DWORD PTR _cur$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8+4836]
	mov	DWORD PTR _optimum$67343[ebp], edx
; Line 393
	mov	eax, DWORD PTR _optimum$67343[ebp]
	mov	ecx, DWORD PTR _curAnd1Price$67342[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN10@GetOptimal
; Line 395
	mov	edx, DWORD PTR _optimum$67343[ebp]
	mov	eax, DWORD PTR _curAnd1Price$67342[ebp]
	mov	DWORD PTR [edx], eax
; Line 396
	mov	ecx, DWORD PTR _optimum$67343[ebp]
	mov	dx, WORD PTR _cur$[ebp]
	mov	WORD PTR [ecx+4], dx
$LN10@GetOptimal:
; Line 398
	cmp	DWORD PTR _numDistancePairs$67335[ebp], 0
	jne	SHORT $LN8@GetOptimal
; Line 399
	jmp	$LN16@GetOptimal
$LN8@GetOptimal:
; Line 400
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, DWORD PTR _newLen$67336[ebp]
	cmp	DWORD PTR _lenEnd$[ebp], eax
	jae	SHORT $LN7@GetOptimal
; Line 401
	mov	ecx, DWORD PTR _lenEnd$[ebp]
	add	ecx, 1
	mov	DWORD PTR _lenEnd$[ebp], ecx
	mov	edx, DWORD PTR _lenEnd$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*8+4828], 268435455	; 0fffffffH
	jmp	SHORT $LN8@GetOptimal
$LN7@GetOptimal:
; Line 402
	mov	DWORD PTR _offs$[ebp], 0
; Line 403
	mov	ecx, DWORD PTR _offs$[ebp]
	mov	edx, DWORD PTR _matchDistances$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _distance$67350[ebp], eax
; Line 404
	mov	ecx, DWORD PTR _distance$67350[ebp]
	push	ecx
	call	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ; NCompress::NDeflate::NEncoder::GetPosSlot
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+eax+1812]
	add	eax, DWORD PTR _curPrice$67341[ebp]
	mov	DWORD PTR _curPrice$67341[ebp], eax
; Line 405
	mov	DWORD PTR _lenTest$67351[ebp], 3
	jmp	SHORT $LN6@GetOptimal
$LN5@GetOptimal:
	mov	ecx, DWORD PTR _lenTest$67351[ebp]
	add	ecx, 1
	mov	DWORD PTR _lenTest$67351[ebp], ecx
$LN6@GetOptimal:
; Line 407
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _lenTest$67351[ebp]
	movzx	eax, BYTE PTR [edx+1553]
	add	eax, DWORD PTR _curPrice$67341[ebp]
	mov	DWORD PTR _curAndLenPrice$67355[ebp], eax
; Line 408
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, DWORD PTR _lenTest$67351[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8+4828]
	mov	DWORD PTR _optimum$67356[ebp], eax
; Line 409
	mov	ecx, DWORD PTR _optimum$67356[ebp]
	mov	edx, DWORD PTR _curAndLenPrice$67355[ebp]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@GetOptimal
; Line 411
	mov	eax, DWORD PTR _optimum$67356[ebp]
	mov	ecx, DWORD PTR _curAndLenPrice$67355[ebp]
	mov	DWORD PTR [eax], ecx
; Line 412
	mov	edx, DWORD PTR _optimum$67356[ebp]
	mov	ax, WORD PTR _cur$[ebp]
	mov	WORD PTR [edx+4], ax
; Line 413
	mov	ecx, DWORD PTR _optimum$67356[ebp]
	mov	dx, WORD PTR _distance$67350[ebp]
	mov	WORD PTR [ecx+6], dx
$LN3@GetOptimal:
; Line 415
	mov	eax, DWORD PTR _offs$[ebp]
	mov	ecx, DWORD PTR _matchDistances$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	DWORD PTR _lenTest$67351[ebp], edx
	jne	SHORT $LN2@GetOptimal
; Line 417
	mov	eax, DWORD PTR _offs$[ebp]
	add	eax, 2
	mov	DWORD PTR _offs$[ebp], eax
; Line 418
	mov	ecx, DWORD PTR _offs$[ebp]
	cmp	ecx, DWORD PTR _numDistancePairs$67335[ebp]
	jne	SHORT $LN1@GetOptimal
; Line 419
	jmp	SHORT $LN4@GetOptimal
$LN1@GetOptimal:
; Line 420
	mov	edx, DWORD PTR _distance$67350[ebp]
	push	edx
	call	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ; NCompress::NDeflate::NEncoder::GetPosSlot
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+1812]
	mov	eax, DWORD PTR _curPrice$67341[ebp]
	sub	eax, edx
	mov	DWORD PTR _curPrice$67341[ebp], eax
; Line 421
	mov	ecx, DWORD PTR _offs$[ebp]
	mov	edx, DWORD PTR _matchDistances$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+2]
	mov	DWORD PTR _distance$67350[ebp], eax
; Line 422
	mov	ecx, DWORD PTR _distance$67350[ebp]
	push	ecx
	call	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ; NCompress::NDeflate::NEncoder::GetPosSlot
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+eax+1812]
	add	eax, DWORD PTR _curPrice$67341[ebp]
	mov	DWORD PTR _curPrice$67341[ebp], eax
$LN2@GetOptimal:
; Line 424
	jmp	$LN5@GetOptimal
$LN4@GetOptimal:
; Line 425
	jmp	$LN16@GetOptimal
$LN24@GetOptimal:
; Line 426
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetOptimal@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::GetOptimal
_TEXT	ENDS
_BSS	SEGMENT
_g_FastPos DB	0200H DUP (?)
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
;	COMDAT ?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 4
?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z PROC	; NCompress::NDeflate::NEncoder::GetPosSlot, COMDAT
; Line 76
	push	ebp
	mov	ebp, esp
; Line 77
	cmp	DWORD PTR _pos$[ebp], 512		; 00000200H
	jae	SHORT $LN1@GetPosSlot
; Line 78
	mov	eax, DWORD PTR _pos$[ebp]
	movzx	eax, BYTE PTR _g_FastPos[eax]
	jmp	SHORT $LN2@GetPosSlot
$LN1@GetPosSlot:
; Line 79
	mov	ecx, DWORD PTR _pos$[ebp]
	shr	ecx, 8
	movzx	eax, BYTE PTR _g_FastPos[ecx]
	add	eax, 16					; 00000010H
$LN2@GetPosSlot:
; Line 80
	pop	ebp
	ret	4
?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ENDP	; NCompress::NDeflate::NEncoder::GetPosSlot
_TEXT	ENDS
PUBLIC	?GetOptimalFast@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z ; NCompress::NDeflate::NEncoder::CCoder::GetOptimalFast
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_lenMain$ = -12						; size = 4
_numDistancePairs$ = -8					; size = 4
_this$ = -4						; size = 4
_backRes$ = 8						; size = 4
?GetOptimalFast@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::GetOptimalFast
; _this$ = ecx
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 430
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMatches@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::GetMatches
; Line 431
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1188]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _numDistancePairs$[ebp], edx
; Line 432
	cmp	DWORD PTR _numDistancePairs$[ebp], 0
	jne	SHORT $LN1@GetOptimal@2
; Line 433
	mov	eax, 1
	jmp	SHORT $LN2@GetOptimal@2
$LN1@GetOptimal@2:
; Line 434
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1188]
	mov	edx, DWORD PTR _numDistancePairs$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2-2]
	mov	DWORD PTR _lenMain$[ebp], eax
; Line 435
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1188]
	mov	eax, DWORD PTR _numDistancePairs$[ebp]
	movzx	ecx, WORD PTR [edx+eax*2]
	mov	edx, DWORD PTR _backRes$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 436
	mov	eax, DWORD PTR _lenMain$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MovePos
; Line 437
	mov	eax, DWORD PTR _lenMain$[ebp]
$LN2@GetOptimal@2:
; Line 438
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetOptimalFast@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::GetOptimalFast
_TEXT	ENDS
PUBLIC	?InitStructures@CTables@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CTables::InitStructures
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?InitStructures@CTables@NEncoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NEncoder::CTables::InitStructures
; _this$ = ecx
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 443
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@InitStruct
$LN8@InitStruct:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@InitStruct:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jae	SHORT $LN7@InitStruct
; Line 444
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], 8
	jmp	SHORT $LN8@InitStruct
$LN7@InitStruct:
; Line 445
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], 13			; 0000000dH
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 446
	jmp	SHORT $LN6@InitStruct
$LN5@InitStruct:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN6@InitStruct:
	cmp	DWORD PTR _i$[ebp], 288			; 00000120H
	jae	SHORT $LN4@InitStruct
; Line 447
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], 5
	jmp	SHORT $LN5@InitStruct
$LN4@InitStruct:
; Line 448
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@InitStruct
$LN2@InitStruct:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@InitStruct:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jae	SHORT $LN10@InitStruct
; Line 449
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+288], 5
	jmp	SHORT $LN2@InitStruct
$LN10@InitStruct:
; Line 450
	mov	esp, ebp
	pop	ebp
	ret	0
?InitStructures@CTables@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NEncoder::CTables::InitStructures
_TEXT	ENDS
PUBLIC	?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z ; NCompress::NDeflate::NEncoder::CCoder::LevelTableDummy
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -36						; size = 4
_curLen$67398 = -32					; size = 4
_n$67394 = -28						; size = 4
_minCount$ = -24					; size = 4
_maxCount$ = -20					; size = 4
_count$ = -16						; size = 4
_nextLen$ = -12						; size = 4
_prevLen$ = -8						; size = 4
_this$ = -4						; size = 4
_levels$ = 8						; size = 4
_numLevels$ = 12					; size = 4
_freqs$ = 16						; size = 4
?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::LevelTableDummy
; _this$ = ecx
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 454
	mov	DWORD PTR _prevLen$[ebp], 255		; 000000ffH
; Line 455
	mov	eax, DWORD PTR _levels$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _nextLen$[ebp], ecx
; Line 456
	mov	DWORD PTR _count$[ebp], 0
; Line 457
	mov	DWORD PTR _maxCount$[ebp], 7
; Line 458
	mov	DWORD PTR _minCount$[ebp], 4
; Line 460
	cmp	DWORD PTR _nextLen$[ebp], 0
	jne	SHORT $LN16@LevelTable
; Line 462
	mov	DWORD PTR _maxCount$[ebp], 138		; 0000008aH
; Line 463
	mov	DWORD PTR _minCount$[ebp], 3
$LN16@LevelTable:
; Line 466
	mov	DWORD PTR _n$67394[ebp], 0
	jmp	SHORT $LN15@LevelTable
$LN14@LevelTable:
	mov	edx, DWORD PTR _n$67394[ebp]
	add	edx, 1
	mov	DWORD PTR _n$67394[ebp], edx
$LN15@LevelTable:
	mov	eax, DWORD PTR _n$67394[ebp]
	cmp	eax, DWORD PTR _numLevels$[ebp]
	jae	$LN17@LevelTable
; Line 468
	mov	ecx, DWORD PTR _nextLen$[ebp]
	mov	DWORD PTR _curLen$67398[ebp], ecx
; Line 469
	mov	edx, DWORD PTR _numLevels$[ebp]
	sub	edx, 1
	cmp	DWORD PTR _n$67394[ebp], edx
	jae	SHORT $LN19@LevelTable
	mov	eax, DWORD PTR _levels$[ebp]
	add	eax, DWORD PTR _n$67394[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN20@LevelTable
$LN19@LevelTable:
	mov	DWORD PTR tv73[ebp], 255		; 000000ffH
$LN20@LevelTable:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _nextLen$[ebp], edx
; Line 470
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 471
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR _maxCount$[ebp]
	jae	SHORT $LN12@LevelTable
	mov	edx, DWORD PTR _curLen$67398[ebp]
	cmp	edx, DWORD PTR _nextLen$[ebp]
	jne	SHORT $LN12@LevelTable
; Line 472
	jmp	SHORT $LN14@LevelTable
$LN12@LevelTable:
; Line 474
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _minCount$[ebp]
	jae	SHORT $LN11@LevelTable
; Line 475
	mov	ecx, DWORD PTR _curLen$67398[ebp]
	mov	edx, DWORD PTR _freqs$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _curLen$67398[ebp]
	mov	edx, DWORD PTR _freqs$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
	jmp	SHORT $LN10@LevelTable
$LN11@LevelTable:
; Line 476
	cmp	DWORD PTR _curLen$67398[ebp], 0
	je	SHORT $LN9@LevelTable
; Line 478
	mov	eax, DWORD PTR _curLen$67398[ebp]
	cmp	eax, DWORD PTR _prevLen$[ebp]
	je	SHORT $LN8@LevelTable
; Line 480
	mov	ecx, DWORD PTR _curLen$67398[ebp]
	mov	edx, DWORD PTR _freqs$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _curLen$67398[ebp]
	mov	edx, DWORD PTR _freqs$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 481
	mov	eax, DWORD PTR _count$[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN8@LevelTable:
; Line 483
	mov	ecx, DWORD PTR _freqs$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	add	edx, 1
	mov	eax, DWORD PTR _freqs$[ebp]
	mov	DWORD PTR [eax+64], edx
	jmp	SHORT $LN10@LevelTable
$LN9@LevelTable:
; Line 485
	cmp	DWORD PTR _count$[ebp], 10		; 0000000aH
	ja	SHORT $LN6@LevelTable
; Line 486
	mov	ecx, DWORD PTR _freqs$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	add	edx, 1
	mov	eax, DWORD PTR _freqs$[ebp]
	mov	DWORD PTR [eax+68], edx
; Line 487
	jmp	SHORT $LN10@LevelTable
$LN6@LevelTable:
; Line 488
	mov	ecx, DWORD PTR _freqs$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	add	edx, 1
	mov	eax, DWORD PTR _freqs$[ebp]
	mov	DWORD PTR [eax+72], edx
$LN10@LevelTable:
; Line 490
	mov	DWORD PTR _count$[ebp], 0
; Line 491
	mov	ecx, DWORD PTR _curLen$67398[ebp]
	mov	DWORD PTR _prevLen$[ebp], ecx
; Line 493
	cmp	DWORD PTR _nextLen$[ebp], 0
	jne	SHORT $LN4@LevelTable
; Line 495
	mov	DWORD PTR _maxCount$[ebp], 138		; 0000008aH
; Line 496
	mov	DWORD PTR _minCount$[ebp], 3
	jmp	SHORT $LN3@LevelTable
$LN4@LevelTable:
; Line 498
	mov	edx, DWORD PTR _curLen$67398[ebp]
	cmp	edx, DWORD PTR _nextLen$[ebp]
	jne	SHORT $LN2@LevelTable
; Line 500
	mov	DWORD PTR _maxCount$[ebp], 6
; Line 501
	mov	DWORD PTR _minCount$[ebp], 3
; Line 503
	jmp	SHORT $LN3@LevelTable
$LN2@LevelTable:
; Line 505
	mov	DWORD PTR _maxCount$[ebp], 7
; Line 506
	mov	DWORD PTR _minCount$[ebp], 4
$LN3@LevelTable:
; Line 508
	jmp	$LN14@LevelTable
$LN17@LevelTable:
; Line 509
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::LevelTableDummy
_TEXT	ENDS
PUBLIC	?WriteBits@CBitlEncoder@@QAEXII@Z		; CBitlEncoder::WriteBits
PUBLIC	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_numBits$ = 12						; size = 4
?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
; Line 514
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
_TEXT	ENDS
PUBLIC	?WriteByte@COutBuffer@@QAEXE@Z			; COutBuffer::WriteByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteBits@CBitlEncoder@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_value$ = 8						; size = 4
_numBits$ = 12						; size = 4
?WriteBits@CBitlEncoder@@QAEXII@Z PROC			; CBitlEncoder::WriteBits, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitlencoder.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN3@WriteBits:
; Line 38
	cmp	DWORD PTR _numBits$[ebp], 0
	jbe	$LN4@WriteBits
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numBits$[ebp]
	cmp	ecx, DWORD PTR [eax+40]
	jae	SHORT $LN1@WriteBits
; Line 42
	mov	edx, 1
	mov	ecx, DWORD PTR _numBits$[ebp]
	shl	edx, cl
	sub	edx, 1
	and	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 8
	sub	ecx, DWORD PTR [eax+40]
	shl	edx, cl
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [ecx+44]
	or	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+44], al
; Line 43
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	sub	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 44
	jmp	SHORT $LN4@WriteBits
$LN1@WriteBits:
; Line 46
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _numBits$[ebp]
	sub	eax, DWORD PTR [edx+40]
	mov	DWORD PTR _numBits$[ebp], eax
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+44]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 8
	sub	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR _value$[ebp]
	shl	eax, cl
	or	edx, eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [ecx+40]
	shr	edx, cl
	mov	DWORD PTR _value$[ebp], edx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 8
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+44], 0
; Line 51
	jmp	$LN3@WriteBits
$LN4@WriteBits:
; Line 52
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBits@CBitlEncoder@@QAEXII@Z ENDP			; CBitlEncoder::WriteBits
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteByte@COutBuffer@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@COutBuffer@@QAEXE@Z PROC			; COutBuffer::WriteByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@WriteByte
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@WriteByte:
; Line 53
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@COutBuffer@@QAEXE@Z ENDP			; COutBuffer::WriteByte
_TEXT	ENDS
PUBLIC	?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z ; NCompress::NDeflate::NEncoder::CCoder::LevelTableCode
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv73 = -40						; size = 4
_i$67437 = -36						; size = 4
_curLen$67434 = -32					; size = 4
_n$67430 = -28						; size = 4
_minCount$ = -24					; size = 4
_maxCount$ = -20					; size = 4
_count$ = -16						; size = 4
_nextLen$ = -12						; size = 4
_prevLen$ = -8						; size = 4
_this$ = -4						; size = 4
_levels$ = 8						; size = 4
_numLevels$ = 12					; size = 4
_lens$ = 16						; size = 4
_codes$ = 20						; size = 4
?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::LevelTableCode
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 521
	mov	DWORD PTR _prevLen$[ebp], 255		; 000000ffH
; Line 522
	mov	eax, DWORD PTR _levels$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _nextLen$[ebp], ecx
; Line 523
	mov	DWORD PTR _count$[ebp], 0
; Line 524
	mov	DWORD PTR _maxCount$[ebp], 7
; Line 525
	mov	DWORD PTR _minCount$[ebp], 4
; Line 527
	cmp	DWORD PTR _nextLen$[ebp], 0
	jne	SHORT $LN19@LevelTable@2
; Line 529
	mov	DWORD PTR _maxCount$[ebp], 138		; 0000008aH
; Line 530
	mov	DWORD PTR _minCount$[ebp], 3
$LN19@LevelTable@2:
; Line 533
	mov	DWORD PTR _n$67430[ebp], 0
	jmp	SHORT $LN18@LevelTable@2
$LN17@LevelTable@2:
	mov	edx, DWORD PTR _n$67430[ebp]
	add	edx, 1
	mov	DWORD PTR _n$67430[ebp], edx
$LN18@LevelTable@2:
	mov	eax, DWORD PTR _n$67430[ebp]
	cmp	eax, DWORD PTR _numLevels$[ebp]
	jae	$LN20@LevelTable@2
; Line 535
	mov	ecx, DWORD PTR _nextLen$[ebp]
	mov	DWORD PTR _curLen$67434[ebp], ecx
; Line 536
	mov	edx, DWORD PTR _numLevels$[ebp]
	sub	edx, 1
	cmp	DWORD PTR _n$67430[ebp], edx
	jae	SHORT $LN22@LevelTable@2
	mov	eax, DWORD PTR _levels$[ebp]
	add	eax, DWORD PTR _n$67430[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN23@LevelTable@2
$LN22@LevelTable@2:
	mov	DWORD PTR tv73[ebp], 255		; 000000ffH
$LN23@LevelTable@2:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _nextLen$[ebp], edx
; Line 537
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 538
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR _maxCount$[ebp]
	jae	SHORT $LN15@LevelTable@2
	mov	edx, DWORD PTR _curLen$67434[ebp]
	cmp	edx, DWORD PTR _nextLen$[ebp]
	jne	SHORT $LN15@LevelTable@2
; Line 539
	jmp	SHORT $LN17@LevelTable@2
$LN15@LevelTable@2:
; Line 541
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _minCount$[ebp]
	jae	SHORT $LN14@LevelTable@2
; Line 542
	mov	DWORD PTR _i$67437[ebp], 0
	jmp	SHORT $LN13@LevelTable@2
$LN12@LevelTable@2:
	mov	ecx, DWORD PTR _i$67437[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67437[ebp], ecx
$LN13@LevelTable@2:
	mov	edx, DWORD PTR _i$67437[ebp]
	cmp	edx, DWORD PTR _count$[ebp]
	jae	SHORT $LN11@LevelTable@2
; Line 543
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _curLen$67434[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _curLen$67434[ebp]
	mov	eax, DWORD PTR _codes$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
	jmp	SHORT $LN12@LevelTable@2
$LN11@LevelTable@2:
	jmp	$LN10@LevelTable@2
$LN14@LevelTable@2:
; Line 544
	cmp	DWORD PTR _curLen$67434[ebp], 0
	je	SHORT $LN9@LevelTable@2
; Line 546
	mov	edx, DWORD PTR _curLen$67434[ebp]
	cmp	edx, DWORD PTR _prevLen$[ebp]
	je	SHORT $LN8@LevelTable@2
; Line 548
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _curLen$67434[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _curLen$67434[ebp]
	mov	eax, DWORD PTR _codes$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 549
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, 1
	mov	DWORD PTR _count$[ebp], edx
$LN8@LevelTable@2:
; Line 551
	mov	eax, DWORD PTR _lens$[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _codes$[ebp]
	mov	eax, DWORD PTR [edx+64]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 552
	push	2
	mov	ecx, DWORD PTR _count$[ebp]
	sub	ecx, 3
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
	jmp	SHORT $LN10@LevelTable@2
$LN9@LevelTable@2:
; Line 554
	cmp	DWORD PTR _count$[ebp], 10		; 0000000aH
	ja	SHORT $LN6@LevelTable@2
; Line 556
	mov	edx, DWORD PTR _lens$[ebp]
	movzx	eax, BYTE PTR [edx+17]
	push	eax
	mov	ecx, DWORD PTR _codes$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 557
	push	3
	mov	eax, DWORD PTR _count$[ebp]
	sub	eax, 3
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 559
	jmp	SHORT $LN10@LevelTable@2
$LN6@LevelTable@2:
; Line 561
	mov	ecx, DWORD PTR _lens$[ebp]
	movzx	edx, BYTE PTR [ecx+18]
	push	edx
	mov	eax, DWORD PTR _codes$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 562
	push	7
	mov	edx, DWORD PTR _count$[ebp]
	sub	edx, 11					; 0000000bH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
$LN10@LevelTable@2:
; Line 565
	mov	DWORD PTR _count$[ebp], 0
; Line 566
	mov	eax, DWORD PTR _curLen$67434[ebp]
	mov	DWORD PTR _prevLen$[ebp], eax
; Line 568
	cmp	DWORD PTR _nextLen$[ebp], 0
	jne	SHORT $LN4@LevelTable@2
; Line 570
	mov	DWORD PTR _maxCount$[ebp], 138		; 0000008aH
; Line 571
	mov	DWORD PTR _minCount$[ebp], 3
	jmp	SHORT $LN3@LevelTable@2
$LN4@LevelTable@2:
; Line 573
	mov	ecx, DWORD PTR _curLen$67434[ebp]
	cmp	ecx, DWORD PTR _nextLen$[ebp]
	jne	SHORT $LN2@LevelTable@2
; Line 575
	mov	DWORD PTR _maxCount$[ebp], 6
; Line 576
	mov	DWORD PTR _minCount$[ebp], 3
; Line 578
	jmp	SHORT $LN3@LevelTable@2
$LN2@LevelTable@2:
; Line 580
	mov	DWORD PTR _maxCount$[ebp], 7
; Line 581
	mov	DWORD PTR _minCount$[ebp], 4
$LN3@LevelTable@2:
; Line 583
	jmp	$LN17@LevelTable@2
$LN20@LevelTable@2:
; Line 584
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::LevelTableCode
_TEXT	ENDS
PUBLIC	?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MakeTables
EXTRN	_Huffman_Generate@20:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_maxHuffLen$ = 8					; size = 4
?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::MakeTables
; _this$ = ecx
; Line 587
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 588
	mov	eax, DWORD PTR _maxHuffLen$[ebp]
	push	eax
	push	288					; 00000120H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1844				; 00000734H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3444				; 00000d74H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2164				; 00000874H
	push	eax
	call	_Huffman_Generate@20
; Line 589
	mov	ecx, DWORD PTR _maxHuffLen$[ebp]
	push	ecx
	push	32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2132				; 00000854H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4596				; 000011f4H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3316				; 00000cf4H
	push	ecx
	call	_Huffman_Generate@20
; Line 590
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::MakeTables
_TEXT	ENDS
PUBLIC	?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$ = -8						; size = 4
_price$ = -4						; size = 4
_freqs$ = 8						; size = 4
_lens$ = 12						; size = 4
_num$ = 16						; size = 4
?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z PROC ; NCompress::NDeflate::NEncoder::Huffman_GetPrice
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 594
	mov	DWORD PTR _price$[ebp], 0
; Line 596
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Huffman_Ge
$LN2@Huffman_Ge:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Huffman_Ge:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN1@Huffman_Ge
; Line 597
	mov	edx, DWORD PTR _lens$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _freqs$[ebp]
	imul	eax, DWORD PTR [edx+ecx*4]
	add	eax, DWORD PTR _price$[ebp]
	mov	DWORD PTR _price$[ebp], eax
	jmp	SHORT $LN2@Huffman_Ge
$LN1@Huffman_Ge:
; Line 598
	mov	eax, DWORD PTR _price$[ebp]
; Line 599
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z ENDP ; NCompress::NDeflate::NEncoder::Huffman_GetPrice
_TEXT	ENDS
PUBLIC	?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice_Spec
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_freqs$ = 8						; size = 4
_lens$ = 12						; size = 4
_num$ = 16						; size = 4
_extraBits$ = 20					; size = 4
_extraBase$ = 24					; size = 4
?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z PROC ; NCompress::NDeflate::NEncoder::Huffman_GetPrice_Spec
; Line 602
	push	ebp
	mov	ebp, esp
	push	esi
; Line 604
	mov	eax, DWORD PTR _num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lens$[ebp]
	push	ecx
	mov	edx, DWORD PTR _freqs$[ebp]
	push	edx
	call	?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice
	mov	esi, eax
	mov	eax, DWORD PTR _num$[ebp]
	sub	eax, DWORD PTR _extraBase$[ebp]
	push	eax
	mov	ecx, DWORD PTR _extraBits$[ebp]
	push	ecx
	mov	edx, DWORD PTR _extraBase$[ebp]
	mov	eax, DWORD PTR _freqs$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	?Huffman_GetPrice@NEncoder@NDeflate@NCompress@@YGIPBIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice
	add	eax, esi
; Line 605
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	20					; 00000014H
?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z ENDP ; NCompress::NDeflate::NEncoder::Huffman_GetPrice_Spec
_TEXT	ENDS
PUBLIC	?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ ; NCompress::NDeflate::NEncoder::CCoder::GetLzBlockPrice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ PROC ; NCompress::NDeflate::NEncoder::CCoder::GetLzBlockPrice
; _this$ = ecx
; Line 608
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 611
	push	257					; 00000101H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1240]
	push	ecx
	push	288					; 00000120H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1844				; 00000734H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2164				; 00000874H
	push	eax
	call	?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice_Spec
	mov	esi, eax
	push	0
	push	OFFSET _kDistDirectBits
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2132				; 00000854H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 3316				; 00000cf4H
	push	edx
	call	?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice_Spec
	add	eax, esi
; Line 612
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ ENDP ; NCompress::NDeflate::NEncoder::CCoder::GetLzBlockPrice
_TEXT	ENDS
PUBLIC	?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCodeValue::SetAsLiteral
PUBLIC	?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::TryBlock
EXTRN	_memset:PROC
_BSS	SEGMENT
_g_LenSlots DB	0100H DUP (?)
; Function compile flags: /Odtp /RTCsu
_BSS	ENDS
_TEXT	SEGMENT
tv167 = -40						; size = 4
_b$67496 = -33						; size = 1
_newLen$67492 = -32					; size = 4
_codeValue$67490 = -28					; size = 4
_len$67487 = -24					; size = 4
_pos$67486 = -16					; size = 4
_blockSize$ = -8					; size = 4
_this$ = -4						; size = 4
?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NEncoder::CCoder::TryBlock
; _this$ = ecx
; Line 615
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 616
	push	1152					; 00000480H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 2164				; 00000874H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 617
	push	128					; 00000080H
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3316				; 00000cf4H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 619
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1280], 0
; Line 620
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4820]
	mov	DWORD PTR _blockSize$[ebp], ecx
; Line 621
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4820], 0
$LN10@TryBlock:
; Line 624
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1296]
	cmp	edx, DWORD PTR [ecx+1292]
	jne	SHORT $LN8@TryBlock
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1208], 653286		; 0009f7e6H
	jae	SHORT $LN6@TryBlock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4820]
	cmp	edx, DWORD PTR _blockSize$[ebp]
	jae	SHORT $LN6@TryBlock
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1284]
	test	ecx, ecx
	jne	SHORT $LN8@TryBlock
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	je	SHORT $LN6@TryBlock
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1280]
	cmp	ecx, DWORD PTR [eax+1224]
	jb	SHORT $LN8@TryBlock
$LN6@TryBlock:
; Line 628
	jmp	$LN9@TryBlock
$LN8@TryBlock:
; Line 632
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1196]
	test	eax, eax
	je	SHORT $LN4@TryBlock
; Line 633
	lea	ecx, DWORD PTR _pos$67486[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOptimalFast@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z ; NCompress::NDeflate::NEncoder::CCoder::GetOptimalFast
	mov	DWORD PTR _len$67487[ebp], eax
; Line 634
	jmp	SHORT $LN3@TryBlock
$LN4@TryBlock:
; Line 635
	lea	edx, DWORD PTR _pos$67486[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOptimal@CCoder@NEncoder@NDeflate@NCompress@@QAEIAAI@Z ; NCompress::NDeflate::NEncoder::CCoder::GetOptimal
	mov	DWORD PTR _len$67487[ebp], eax
$LN3@TryBlock:
; Line 636
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1280]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1184]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _codeValue$67490[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1280]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1280], eax
; Line 637
	cmp	DWORD PTR _len$67487[ebp], 3
	jb	SHORT $LN2@TryBlock
; Line 639
	mov	edx, DWORD PTR _len$67487[ebp]
	sub	edx, 3
	mov	DWORD PTR _newLen$67492[ebp], edx
; Line 640
	mov	eax, DWORD PTR _codeValue$67490[ebp]
	mov	cx, WORD PTR _newLen$67492[ebp]
	mov	WORD PTR [eax], cx
; Line 641
	mov	edx, DWORD PTR _newLen$67492[ebp]
	movzx	eax, BYTE PTR _g_LenSlots[edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+3192]
	add	edx, 1
	mov	eax, DWORD PTR _newLen$67492[ebp]
	movzx	ecx, BYTE PTR _g_LenSlots[eax]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+ecx*4+3192], edx
; Line 642
	mov	ecx, DWORD PTR _codeValue$67490[ebp]
	mov	dx, WORD PTR _pos$67486[ebp]
	mov	WORD PTR [ecx+2], dx
; Line 643
	mov	eax, DWORD PTR _pos$67486[ebp]
	push	eax
	call	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ; NCompress::NDeflate::NEncoder::GetPosSlot
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+3316]
	mov	DWORD PTR tv167[ebp], edx
	mov	eax, DWORD PTR tv167[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR [edx], ecx
; Line 645
	jmp	SHORT $LN1@TryBlock
$LN2@TryBlock:
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+1288]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _b$67496[ebp], al
; Line 648
	movzx	ecx, BYTE PTR _b$67496[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+2164]
	add	eax, 1
	movzx	ecx, BYTE PTR _b$67496[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+2164], eax
; Line 649
	mov	ecx, DWORD PTR _codeValue$67490[ebp]
	call	?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCodeValue::SetAsLiteral
; Line 650
	movzx	ax, BYTE PTR _b$67496[ebp]
	mov	ecx, DWORD PTR _codeValue$67490[ebp]
	mov	WORD PTR [ecx+2], ax
$LN1@TryBlock:
; Line 652
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1288]
	sub	eax, DWORD PTR _len$67487[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1288], eax
; Line 653
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4820]
	add	eax, DWORD PTR _len$67487[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4820], eax
; Line 654
	jmp	$LN10@TryBlock
$LN9@TryBlock:
; Line 655
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3188]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3188], eax
; Line 656
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1288]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4820]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1288], eax
; Line 657
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1284], 1
; Line 658
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@TryBlock
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@TryBlock:
	DD	1
	DD	$LN14@TryBlock
$LN14@TryBlock:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN13@TryBlock
$LN13@TryBlock:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NEncoder::CCoder::TryBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NEncoder::CCodeValue::SetAsLiteral, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 32768				; 00008000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?SetAsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NEncoder::CCodeValue::SetAsLiteral
_TEXT	ENDS
PUBLIC	?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetPrices
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv133 = -21						; size = 1
tv86 = -20						; size = 1
tv74 = -19						; size = 1
_price$67516 = -18					; size = 1
_price$67511 = -17					; size = 1
_slot$67510 = -16					; size = 4
_price$67506 = -9					; size = 1
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_levels$ = 8						; size = 4
?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::SetPrices
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 661
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 662
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1196]
	test	ecx, ecx
	je	SHORT $LN10@SetPrices
; Line 663
	jmp	$LN11@SetPrices
$LN10@SetPrices:
; Line 665
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@SetPrices
$LN8@SetPrices:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN9@SetPrices:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jae	SHORT $LN7@SetPrices
; Line 667
	mov	eax, DWORD PTR _levels$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _price$67506[ebp], cl
; Line 668
	movzx	edx, BYTE PTR _price$67506[ebp]
	test	edx, edx
	je	SHORT $LN13@SetPrices
	mov	al, BYTE PTR _price$67506[ebp]
	mov	BYTE PTR tv74[ebp], al
	jmp	SHORT $LN14@SetPrices
$LN13@SetPrices:
	mov	BYTE PTR tv74[ebp], 11			; 0000000bH
$LN14@SetPrices:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR tv74[ebp]
	mov	BYTE PTR [ecx+1300], dl
; Line 669
	jmp	SHORT $LN8@SetPrices
$LN7@SetPrices:
; Line 671
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@SetPrices
$LN5@SetPrices:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@SetPrices:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+1228]
	jae	SHORT $LN4@SetPrices
; Line 673
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR _g_LenSlots[eax]
	mov	DWORD PTR _slot$67510[ebp], ecx
; Line 674
	mov	edx, DWORD PTR _levels$[ebp]
	add	edx, DWORD PTR _slot$67510[ebp]
	mov	al, BYTE PTR [edx+257]
	mov	BYTE PTR _price$67511[ebp], al
; Line 675
	movzx	ecx, BYTE PTR _price$67511[ebp]
	test	ecx, ecx
	je	SHORT $LN15@SetPrices
	mov	dl, BYTE PTR _price$67511[ebp]
	mov	BYTE PTR tv86[ebp], dl
	jmp	SHORT $LN16@SetPrices
$LN15@SetPrices:
	mov	BYTE PTR tv86[ebp], 11			; 0000000bH
$LN16@SetPrices:
	movzx	eax, BYTE PTR tv86[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1240]
	mov	ecx, DWORD PTR _slot$67510[ebp]
	movzx	edx, BYTE PTR [edx+ecx]
	add	eax, edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx+1556], al
; Line 676
	jmp	SHORT $LN5@SetPrices
$LN4@SetPrices:
; Line 678
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SetPrices
$LN2@SetPrices:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@SetPrices:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jae	SHORT $LN11@SetPrices
; Line 680
	mov	eax, DWORD PTR _levels$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [eax+288]
	mov	BYTE PTR _price$67516[ebp], cl
; Line 681
	movzx	edx, BYTE PTR _price$67516[ebp]
	test	edx, edx
	je	SHORT $LN17@SetPrices
	mov	al, BYTE PTR _price$67516[ebp]
	mov	BYTE PTR tv133[ebp], al
	jmp	SHORT $LN18@SetPrices
$LN17@SetPrices:
	mov	BYTE PTR tv133[ebp], 6
$LN18@SetPrices:
	movzx	ecx, BYTE PTR tv133[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR _kDistDirectBits[edx]
	add	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx+1812], cl
; Line 682
	jmp	SHORT $LN2@SetPrices
$LN11@SetPrices:
; Line 683
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::SetPrices
_TEXT	ENDS
PUBLIC	?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_ReverseBits
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_x$67527 = -8						; size = 4
_i$67523 = -4						; size = 4
_codes$ = 8						; size = 4
_lens$ = 12						; size = 4
_num$ = 16						; size = 4
?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z PROC ; NCompress::NDeflate::NEncoder::Huffman_ReverseBits
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 687
	mov	DWORD PTR _i$67523[ebp], 0
	jmp	SHORT $LN3@Huffman_Re
$LN2@Huffman_Re:
	mov	eax, DWORD PTR _i$67523[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67523[ebp], eax
$LN3@Huffman_Re:
	mov	ecx, DWORD PTR _i$67523[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	$LN4@Huffman_Re
; Line 689
	mov	edx, DWORD PTR _i$67523[ebp]
	mov	eax, DWORD PTR _codes$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _x$67527[ebp], ecx
; Line 690
	mov	edx, DWORD PTR _x$67527[ebp]
	and	edx, 21845				; 00005555H
	shl	edx, 1
	mov	eax, DWORD PTR _x$67527[ebp]
	and	eax, 43690				; 0000aaaaH
	shr	eax, 1
	or	edx, eax
	mov	DWORD PTR _x$67527[ebp], edx
; Line 691
	mov	ecx, DWORD PTR _x$67527[ebp]
	and	ecx, 13107				; 00003333H
	shl	ecx, 2
	mov	edx, DWORD PTR _x$67527[ebp]
	and	edx, 52428				; 0000ccccH
	shr	edx, 2
	or	ecx, edx
	mov	DWORD PTR _x$67527[ebp], ecx
; Line 692
	mov	eax, DWORD PTR _x$67527[ebp]
	and	eax, 3855				; 00000f0fH
	shl	eax, 4
	mov	ecx, DWORD PTR _x$67527[ebp]
	and	ecx, 61680				; 0000f0f0H
	shr	ecx, 4
	or	eax, ecx
	mov	DWORD PTR _x$67527[ebp], eax
; Line 693
	mov	edx, DWORD PTR _x$67527[ebp]
	and	edx, 255				; 000000ffH
	shl	edx, 8
	mov	eax, DWORD PTR _x$67527[ebp]
	and	eax, 65280				; 0000ff00H
	shr	eax, 8
	or	edx, eax
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _i$67523[ebp]
	movzx	eax, BYTE PTR [ecx]
	mov	ecx, 16					; 00000010H
	sub	ecx, eax
	shr	edx, cl
	mov	ecx, DWORD PTR _i$67523[ebp]
	mov	eax, DWORD PTR _codes$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 694
	jmp	$LN2@Huffman_Re
$LN4@Huffman_Re:
; Line 695
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z ENDP ; NCompress::NDeflate::NEncoder::Huffman_ReverseBits
_TEXT	ENDS
PUBLIC	?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NEncoder::CCodeValue::IsLiteral
PUBLIC	?WriteBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::WriteBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_posSlot$67541 = -28					; size = 4
_dist$67540 = -24					; size = 4
_lenSlot$67539 = -20					; size = 4
_len$67538 = -16					; size = 4
_codeValue$67535 = -12					; size = 4
_i$67531 = -8						; size = 4
_this$ = -4						; size = 4
?WriteBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ PROC ; NCompress::NDeflate::NEncoder::CCoder::WriteBlock
; _this$ = ecx
; Line 698
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 699
	push	288					; 00000120H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1844				; 00000734H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3444				; 00000d74H
	push	ecx
	call	?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_ReverseBits
; Line 700
	push	32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2132				; 00000854H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4596				; 000011f4H
	push	eax
	call	?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_ReverseBits
; Line 702
	mov	DWORD PTR _i$67531[ebp], 0
	jmp	SHORT $LN5@WriteBlock
$LN4@WriteBlock:
	mov	ecx, DWORD PTR _i$67531[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67531[ebp], ecx
$LN5@WriteBlock:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$67531[ebp]
	cmp	eax, DWORD PTR [edx+1280]
	jae	$LN3@WriteBlock
; Line 704
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1184]
	mov	eax, DWORD PTR _i$67531[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR _codeValue$67535[ebp], ecx
; Line 705
	mov	ecx, DWORD PTR _codeValue$67535[ebp]
	call	?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NEncoder::CCodeValue::IsLiteral
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@WriteBlock
; Line 706
	mov	eax, DWORD PTR _codeValue$67535[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+ecx+1844]
	push	eax
	mov	ecx, DWORD PTR _codeValue$67535[ebp]
	movzx	edx, WORD PTR [ecx+2]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+3444]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
; Line 707
	jmp	$LN1@WriteBlock
$LN2@WriteBlock:
; Line 709
	mov	edx, DWORD PTR _codeValue$67535[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR _len$67538[ebp], eax
; Line 710
	mov	ecx, DWORD PTR _len$67538[ebp]
	movzx	edx, BYTE PTR _g_LenSlots[ecx]
	mov	DWORD PTR _lenSlot$67539[ebp], edx
; Line 711
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _lenSlot$67539[ebp]
	movzx	ecx, BYTE PTR [eax+2101]
	push	ecx
	mov	edx, DWORD PTR _lenSlot$67539[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+4472]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
; Line 712
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1240]
	mov	ecx, DWORD PTR _lenSlot$67539[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1236]
	mov	edx, DWORD PTR _lenSlot$67539[ebp]
	movzx	eax, BYTE PTR [ecx+edx]
	mov	ecx, DWORD PTR _len$67538[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
; Line 713
	mov	edx, DWORD PTR _codeValue$67535[ebp]
	movzx	eax, WORD PTR [edx+2]
	mov	DWORD PTR _dist$67540[ebp], eax
; Line 714
	mov	ecx, DWORD PTR _dist$67540[ebp]
	push	ecx
	call	?GetPosSlot@NEncoder@NDeflate@NCompress@@YGII@Z ; NCompress::NDeflate::NEncoder::GetPosSlot
	mov	DWORD PTR _posSlot$67541[ebp], eax
; Line 715
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _posSlot$67541[ebp]
	movzx	eax, BYTE PTR [edx+2132]
	push	eax
	mov	ecx, DWORD PTR _posSlot$67541[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+4596]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
; Line 716
	mov	ecx, DWORD PTR _posSlot$67541[ebp]
	movzx	edx, BYTE PTR _kDistDirectBits[ecx]
	push	edx
	mov	eax, DWORD PTR _posSlot$67541[ebp]
	mov	ecx, DWORD PTR _dist$67540[ebp]
	sub	ecx, DWORD PTR _kDistStart[eax*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
$LN1@WriteBlock:
; Line 718
	jmp	$LN4@WriteBlock
$LN3@WriteBlock:
; Line 719
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+2100]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4468]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteBits@CBitlEncoder@@QAEXII@Z	; CBitlEncoder::WriteBits
; Line 720
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?WriteBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ENDP ; NCompress::NDeflate::NEncoder::CCoder::WriteBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ PROC ; NCompress::NDeflate::NEncoder::CCodeValue::IsLiteral, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax]
	xor	eax, eax
	cmp	ecx, 32768				; 00008000H
	setge	al
	mov	esp, ebp
	pop	ebp
	ret	0
?IsLiteral@CCodeValue@NEncoder@NDeflate@NCompress@@QBE_NXZ ENDP ; NCompress::NDeflate::NEncoder::CCodeValue::IsLiteral
_TEXT	ENDS
PUBLIC	?WriteByte@CBitlEncoder@@QAEXE@Z		; CBitlEncoder::WriteByte
PUBLIC	?FlushByte@CBitlEncoder@@QAEXXZ			; CBitlEncoder::FlushByte
PUBLIC	?WriteStoreBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXII_N@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteStoreBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -24						; size = 4
tv65 = -20						; size = 4
_i$67566 = -16						; size = 4
_data$67565 = -12					; size = 4
_curBlockSize$67562 = -8				; size = 4
_this$ = -4						; size = 4
_blockSize$ = 8						; size = 4
_additionalOffset$ = 12					; size = 4
_finalBlock$ = 16					; size = 1
?WriteStoreBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXII_N@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::WriteStoreBlock
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 739
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN6@WriteStore:
; Line 742
	cmp	DWORD PTR _blockSize$[ebp], 65536	; 00010000H
	jae	SHORT $LN9@WriteStore
	mov	eax, DWORD PTR _blockSize$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN10@WriteStore
$LN9@WriteStore:
	mov	DWORD PTR tv65[ebp], 65535		; 0000ffffH
$LN10@WriteStore:
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR _curBlockSize$67562[ebp], ecx
; Line 743
	mov	edx, DWORD PTR _blockSize$[ebp]
	sub	edx, DWORD PTR _curBlockSize$67562[ebp]
	mov	DWORD PTR _blockSize$[ebp], edx
; Line 744
	movzx	eax, BYTE PTR _finalBlock$[ebp]
	test	eax, eax
	je	SHORT $LN11@WriteStore
	cmp	DWORD PTR _blockSize$[ebp], 0
	jne	SHORT $LN11@WriteStore
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN12@WriteStore
$LN11@WriteStore:
	mov	DWORD PTR tv72[ebp], 0
$LN12@WriteStore:
	push	1
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 745
	push	2
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 746
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?FlushByte@CBitlEncoder@@QAEXXZ		; CBitlEncoder::FlushByte
; Line 747
	push	16					; 00000010H
	movzx	edx, WORD PTR _curBlockSize$67562[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 748
	push	16					; 00000010H
	mov	eax, DWORD PTR _curBlockSize$67562[ebp]
	not	eax
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 749
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR _additionalOffset$[ebp]
	mov	DWORD PTR _data$67565[ebp], eax
; Line 750
	mov	DWORD PTR _i$67566[ebp], 0
	jmp	SHORT $LN3@WriteStore
$LN2@WriteStore:
	mov	ecx, DWORD PTR _i$67566[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67566[ebp], ecx
$LN3@WriteStore:
	mov	edx, DWORD PTR _i$67566[ebp]
	cmp	edx, DWORD PTR _curBlockSize$67562[ebp]
	jae	SHORT $LN1@WriteStore
; Line 751
	mov	eax, DWORD PTR _data$67565[ebp]
	add	eax, DWORD PTR _i$67566[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?WriteByte@CBitlEncoder@@QAEXE@Z	; CBitlEncoder::WriteByte
	jmp	SHORT $LN2@WriteStore
$LN1@WriteStore:
; Line 752
	mov	edx, DWORD PTR _additionalOffset$[ebp]
	sub	edx, DWORD PTR _curBlockSize$67562[ebp]
	mov	DWORD PTR _additionalOffset$[ebp], edx
; Line 754
	cmp	DWORD PTR _blockSize$[ebp], 0
	jne	$LN6@WriteStore
; Line 755
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?WriteStoreBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXII_N@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::WriteStoreBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?FlushByte@CBitlEncoder@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FlushByte@CBitlEncoder@@QAEXXZ PROC			; CBitlEncoder::FlushByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitlencoder.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 8
	jae	SHORT $LN1@FlushByte
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+44]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
$LN1@FlushByte:
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 8
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+44], 0
; Line 35
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FlushByte@CBitlEncoder@@QAEXXZ ENDP			; CBitlEncoder::FlushByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?WriteByte@CBitlEncoder@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@CBitlEncoder@@QAEXE@Z PROC			; CBitlEncoder::WriteByte, COMDAT
; _this$ = ecx
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@CBitlEncoder@@QAEXE@Z ENDP			; CBitlEncoder::WriteByte
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::TryDynBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv87 = -124						; size = 4
tv88 = -120						; size = 4
_level$67594 = -113					; size = 1
_i$67590 = -112						; size = 4
_levelFreqs$ = -104					; size = 76
_numHuffBits$67581 = -24				; size = 4
_p$67577 = -20						; size = 4
_posTemp$ = -16						; size = 4
_t$ = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_tableIndex$ = 8					; size = 4
_numPasses$ = 12					; size = 4
?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::TryDynBlock
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 758
	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 759
	mov	eax, DWORD PTR _tableIndex$[ebp]
	imul	eax, 332				; 0000014cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4824]
	mov	DWORD PTR _t$[ebp], eax
; Line 760
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR [edx+4820], ecx
; Line 761
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx+328]
	mov	DWORD PTR _posTemp$[ebp], eax
; Line 762
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetPrices
; Line 764
	mov	DWORD PTR _p$67577[ebp], 0
	jmp	SHORT $LN11@TryDynBloc
$LN10@TryDynBloc:
	mov	edx, DWORD PTR _p$67577[ebp]
	add	edx, 1
	mov	DWORD PTR _p$67577[ebp], edx
$LN11@TryDynBloc:
	mov	eax, DWORD PTR _p$67577[ebp]
	cmp	eax, DWORD PTR _numPasses$[ebp]
	jae	$LN9@TryDynBloc
; Line 766
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _posTemp$[ebp]
	mov	DWORD PTR [ecx+1208], edx
; Line 767
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::TryBlock
; Line 771
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1280], 18000		; 00004650H
	jbe	SHORT $LN16@TryDynBloc
	mov	DWORD PTR tv88[ebp], 12			; 0000000cH
	jmp	SHORT $LN17@TryDynBloc
$LN16@TryDynBloc:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1280], 7000		; 00001b58H
	jbe	SHORT $LN14@TryDynBloc
	mov	DWORD PTR tv87[ebp], 11			; 0000000bH
	jmp	SHORT $LN15@TryDynBloc
$LN14@TryDynBloc:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, 2000				; 000007d0H
	cmp	eax, DWORD PTR [edx+1280]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 9
	mov	DWORD PTR tv87[ebp], ecx
$LN15@TryDynBloc:
	mov	edx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv88[ebp], edx
$LN17@TryDynBloc:
	mov	eax, DWORD PTR tv88[ebp]
	mov	DWORD PTR _numHuffBits$67581[ebp], eax
; Line 772
	mov	ecx, DWORD PTR _numHuffBits$67581[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MakeTables
; Line 773
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1844				; 00000734H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetPrices
; Line 774
	jmp	$LN10@TryDynBloc
$LN9@TryDynBloc:
; Line 776
	mov	esi, DWORD PTR _this$[ebp]
	add	esi, 1844				; 00000734H
	mov	ecx, 80					; 00000050H
	mov	edi, DWORD PTR _t$[ebp]
	rep movsd
; Line 778
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1268], 286		; 0000011eH
$LN8@TryDynBloc:
; Line 779
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1268], 257		; 00000101H
	jbe	SHORT $LN7@TryDynBloc
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1268]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+1843]
	test	edx, edx
	jne	SHORT $LN7@TryDynBloc
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1268]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1268], ecx
	jmp	SHORT $LN8@TryDynBloc
$LN7@TryDynBloc:
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1272], 32		; 00000020H
$LN6@TryDynBloc:
; Line 783
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1272], 1
	jbe	SHORT $LN5@TryDynBloc
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1272]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+2131]
	test	edx, edx
	jne	SHORT $LN5@TryDynBloc
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1272]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1272], ecx
	jmp	SHORT $LN6@TryDynBloc
$LN5@TryDynBloc:
; Line 787
	push	76					; 0000004cH
	push	0
	lea	eax, DWORD PTR _levelFreqs$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 789
	lea	ecx, DWORD PTR _levelFreqs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1268]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1844				; 00000734H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z ; NCompress::NDeflate::NEncoder::CCoder::LevelTableDummy
; Line 790
	lea	edx, DWORD PTR _levelFreqs$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1272]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2132				; 00000854H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LevelTableDummy@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEIPAI@Z ; NCompress::NDeflate::NEncoder::CCoder::LevelTableDummy
; Line 792
	push	7
	push	19					; 00000013H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4800				; 000012c0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4724				; 00001274H
	push	ecx
	lea	edx, DWORD PTR _levelFreqs$[ebp]
	push	edx
	call	_Huffman_Generate@20
; Line 794
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1276], 4
; Line 795
	mov	DWORD PTR _i$67590[ebp], 0
	jmp	SHORT $LN4@TryDynBloc
$LN3@TryDynBloc:
	mov	ecx, DWORD PTR _i$67590[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67590[ebp], ecx
$LN4@TryDynBloc:
	cmp	DWORD PTR _i$67590[ebp], 19		; 00000013H
	jae	SHORT $LN2@TryDynBloc
; Line 797
	mov	edx, DWORD PTR _i$67590[ebp]
	movzx	eax, BYTE PTR _kCodeLengthAlphabetOrder[edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+eax+4800]
	mov	BYTE PTR _level$67594[ebp], dl
; Line 798
	movzx	eax, BYTE PTR _level$67594[ebp]
	test	eax, eax
	jle	SHORT $LN1@TryDynBloc
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$67590[ebp]
	cmp	edx, DWORD PTR [ecx+1276]
	jb	SHORT $LN1@TryDynBloc
; Line 799
	mov	eax, DWORD PTR _i$67590[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1276], eax
$LN1@TryDynBloc:
; Line 800
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$67590[ebp]
	mov	al, BYTE PTR _level$67594[ebp]
	mov	BYTE PTR [edx+1246], al
; Line 801
	jmp	SHORT $LN3@TryDynBloc
$LN2@TryDynBloc:
; Line 806
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ ; NCompress::NDeflate::NEncoder::CCoder::GetLzBlockPrice
	mov	esi, eax
	push	16					; 00000010H
	push	OFFSET _kLevelDirectBits
	push	19					; 00000013H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4800				; 000012c0H
	push	ecx
	lea	edx, DWORD PTR _levelFreqs$[ebp]
	push	edx
	call	?Huffman_GetPrice_Spec@NEncoder@NDeflate@NCompress@@YGIPBIPBEI1I@Z ; NCompress::NDeflate::NEncoder::Huffman_GetPrice_Spec
	add	esi, eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1276]
	imul	ecx, 3
	lea	eax, DWORD PTR [esi+ecx+17]
; Line 807
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@TryDynBloc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN20@TryDynBloc:
	DD	1
	DD	$LN19@TryDynBloc
$LN19@TryDynBloc:
	DD	-104					; ffffff98H
	DD	76					; 0000004cH
	DD	$LN18@TryDynBloc
$LN18@TryDynBloc:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	115					; 00000073H
	DB	0
?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::TryDynBlock
_TEXT	ENDS
PUBLIC	?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::CLevels::SetFixedLevels
PUBLIC	?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z ; NCompress::NDeflate::NEncoder::CCoder::TryFixedBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t$ = -8						; size = 4
_this$ = -4						; size = 4
_tableIndex$ = 8					; size = 4
?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::TryFixedBlock
; _this$ = ecx
; Line 810
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 811
	mov	eax, DWORD PTR _tableIndex$[ebp]
	imul	eax, 332				; 0000014cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4824]
	mov	DWORD PTR _t$[ebp], eax
; Line 812
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR [edx+4820], ecx
; Line 813
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+328]
	mov	DWORD PTR [edx+1208], ecx
; Line 814
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1844				; 00000734H
	call	?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::CLevels::SetFixedLevels
; Line 815
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 1844				; 00000734H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPrices@CCoder@NEncoder@NDeflate@NCompress@@QAEXABUCLevels@34@@Z ; NCompress::NDeflate::NEncoder::CCoder::SetPrices
; Line 816
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TryBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::TryBlock
; Line 817
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLzBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QBEIXZ ; NCompress::NDeflate::NEncoder::CCoder::GetLzBlockPrice
	add	eax, 3
; Line 818
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::TryFixedBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ PROC	; NCompress::NDeflate::CLevels::SetFixedLevels, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateconst.h
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@SetFixedLe
$LN14@SetFixedLe:
; Line 119
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 144			; 00000090H
	jae	SHORT $LN13@SetFixedLe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], 8
	jmp	SHORT $LN14@SetFixedLe
$LN13@SetFixedLe:
; Line 120
	jmp	SHORT $LN12@SetFixedLe
$LN11@SetFixedLe:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN12@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jae	SHORT $LN10@SetFixedLe
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 9
	jmp	SHORT $LN11@SetFixedLe
$LN10@SetFixedLe:
; Line 121
	jmp	SHORT $LN9@SetFixedLe
$LN8@SetFixedLe:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 280			; 00000118H
	jae	SHORT $LN7@SetFixedLe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], 7
	jmp	SHORT $LN8@SetFixedLe
$LN7@SetFixedLe:
; Line 122
	jmp	SHORT $LN6@SetFixedLe
$LN5@SetFixedLe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 288			; 00000120H
	jae	SHORT $LN4@SetFixedLe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], 8
	jmp	SHORT $LN5@SetFixedLe
$LN4@SetFixedLe:
; Line 124
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SetFixedLe
$LN2@SetFixedLe:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jae	SHORT $LN16@SetFixedLe
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax+288], 5
	jmp	SHORT $LN2@SetFixedLe
$LN16@SetFixedLe:
; Line 126
	mov	esp, ebp
	pop	ebp
	ret	0
?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ ENDP	; NCompress::NDeflate::CLevels::SetFixedLevels
_TEXT	ENDS
PUBLIC	?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::GetBlockPrice
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_t1$67622 = -48						; size = 4
_blockSize2$67620 = -44					; size = 4
_subPrice$67619 = -40					; size = 4
_t0$67617 = -36						; size = 4
_storePrice$ = -32					; size = 4
_fixedPrice$67612 = -28					; size = 4
_additionalOffsetEnd$ = -24				; size = 4
_posTemp$ = -20						; size = 4
_numValues$ = -16					; size = 4
_price$ = -12						; size = 4
_t$ = -8						; size = 4
_this$ = -4						; size = 4
_tableIndex$ = 8					; size = 4
_numDivPasses$ = 12					; size = 4
?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::GetBlockPrice
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
; Line 821
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 822
	mov	eax, DWORD PTR _tableIndex$[ebp]
	imul	eax, 332				; 0000014cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4824]
	mov	DWORD PTR _t$[ebp], eax
; Line 823
	mov	edx, DWORD PTR _t$[ebp]
	mov	BYTE PTR [edx+322], 0
; Line 824
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1212]
	push	ecx
	mov	edx, DWORD PTR _tableIndex$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::TryDynBlock
	mov	DWORD PTR _price$[ebp], eax
; Line 825
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4820]
	mov	DWORD PTR [eax+324], edx
; Line 826
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1280]
	mov	DWORD PTR _numValues$[ebp], ecx
; Line 827
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1208]
	mov	DWORD PTR _posTemp$[ebp], eax
; Line 828
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1288]
	mov	DWORD PTR _additionalOffsetEnd$[ebp], edx
; Line 830
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1220]
	test	ecx, ecx
	je	SHORT $LN6@GetBlockPr
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1280], 256		; 00000100H
	ja	SHORT $LN6@GetBlockPr
; Line 832
	mov	eax, DWORD PTR _tableIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z ; NCompress::NDeflate::NEncoder::CCoder::TryFixedBlock
	mov	DWORD PTR _fixedPrice$67612[ebp], eax
; Line 833
	mov	ecx, DWORD PTR _fixedPrice$67612[ebp]
	cmp	ecx, DWORD PTR _price$[ebp]
	sbb	edx, edx
	neg	edx
	mov	eax, DWORD PTR _t$[ebp]
	mov	BYTE PTR [eax+322], dl
; Line 834
	mov	ecx, DWORD PTR _t$[ebp]
	movzx	edx, BYTE PTR [ecx+322]
	test	edx, edx
	je	SHORT $LN6@GetBlockPr
; Line 835
	mov	eax, DWORD PTR _fixedPrice$67612[ebp]
	mov	DWORD PTR _price$[ebp], eax
$LN6@GetBlockPr:
; Line 838
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4820]
	push	edx
	call	?GetStorePrice@NEncoder@NDeflate@NCompress@@YGIII@Z ; NCompress::NDeflate::NEncoder::GetStorePrice
	mov	DWORD PTR _storePrice$[ebp], eax
; Line 839
	mov	eax, DWORD PTR _storePrice$[ebp]
	cmp	DWORD PTR _price$[ebp], eax
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _t$[ebp]
	mov	BYTE PTR [edx+321], cl
; Line 840
	mov	eax, DWORD PTR _t$[ebp]
	movzx	ecx, BYTE PTR [eax+321]
	test	ecx, ecx
	je	SHORT $LN4@GetBlockPr
; Line 841
	mov	edx, DWORD PTR _storePrice$[ebp]
	mov	DWORD PTR _price$[ebp], edx
$LN4@GetBlockPr:
; Line 843
	mov	eax, DWORD PTR _t$[ebp]
	mov	BYTE PTR [eax+320], 0
; Line 845
	cmp	DWORD PTR _numDivPasses$[ebp], 1
	jbe	$LN3@GetBlockPr
	cmp	DWORD PTR _numValues$[ebp], 128		; 00000080H
	jb	$LN3@GetBlockPr
; Line 847
	mov	ecx, DWORD PTR _tableIndex$[ebp]
	shl	ecx, 1
	imul	ecx, 332				; 0000014cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+4824]
	mov	DWORD PTR _t0$67617[ebp], ecx
; Line 848
	mov	esi, DWORD PTR _t$[ebp]
	mov	ecx, 80					; 00000050H
	mov	edi, DWORD PTR _t0$67617[ebp]
	rep movsd
; Line 849
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+324]
	shr	ecx, 1
	mov	edx, DWORD PTR _t0$67617[ebp]
	mov	DWORD PTR [edx+324], ecx
; Line 850
	mov	eax, DWORD PTR _t0$67617[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+328]
	mov	DWORD PTR [eax+328], edx
; Line 851
	mov	eax, DWORD PTR _numDivPasses$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _tableIndex$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::GetBlockPrice
	mov	DWORD PTR _subPrice$67619[ebp], eax
; Line 853
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _t0$67617[ebp]
	mov	ecx, DWORD PTR [edx+324]
	sub	ecx, DWORD PTR [eax+324]
	mov	DWORD PTR _blockSize2$67620[ebp], ecx
; Line 854
	mov	edx, DWORD PTR _t0$67617[ebp]
	cmp	DWORD PTR [edx+324], 64			; 00000040H
	jb	$LN3@GetBlockPr
	cmp	DWORD PTR _blockSize2$67620[ebp], 64	; 00000040H
	jb	$LN3@GetBlockPr
; Line 856
	mov	eax, DWORD PTR _tableIndex$[ebp]
	lea	ecx, DWORD PTR [eax+eax+1]
	imul	ecx, 332				; 0000014cH
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+4824]
	mov	DWORD PTR _t1$67622[ebp], ecx
; Line 857
	mov	esi, DWORD PTR _t$[ebp]
	mov	ecx, 80					; 00000050H
	mov	edi, DWORD PTR _t1$67622[ebp]
	rep movsd
; Line 858
	mov	eax, DWORD PTR _t1$67622[ebp]
	mov	ecx, DWORD PTR _blockSize2$67620[ebp]
	mov	DWORD PTR [eax+324], ecx
; Line 859
	mov	edx, DWORD PTR _t1$67622[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1208]
	mov	DWORD PTR [edx+328], ecx
; Line 860
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t0$67617[ebp]
	mov	ecx, DWORD PTR [edx+1288]
	sub	ecx, DWORD PTR [eax+324]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1288], ecx
; Line 861
	mov	eax, DWORD PTR _numDivPasses$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _tableIndex$[ebp]
	lea	edx, DWORD PTR [ecx+ecx+1]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::GetBlockPrice
	add	eax, DWORD PTR _subPrice$67619[ebp]
	mov	DWORD PTR _subPrice$67619[ebp], eax
; Line 862
	mov	eax, DWORD PTR _subPrice$67619[ebp]
	cmp	eax, DWORD PTR _price$[ebp]
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _t$[ebp]
	mov	BYTE PTR [edx+320], cl
; Line 863
	mov	eax, DWORD PTR _t$[ebp]
	movzx	ecx, BYTE PTR [eax+320]
	test	ecx, ecx
	je	SHORT $LN3@GetBlockPr
; Line 864
	mov	edx, DWORD PTR _subPrice$67619[ebp]
	mov	DWORD PTR _price$[ebp], edx
$LN3@GetBlockPr:
; Line 868
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _additionalOffsetEnd$[ebp]
	mov	DWORD PTR [eax+1288], ecx
; Line 869
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _posTemp$[ebp]
	mov	DWORD PTR [edx+1208], eax
; Line 870
	mov	eax, DWORD PTR _price$[ebp]
; Line 871
	pop	edi
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::GetBlockPrice
; Function compile flags: /Odtp /RTCsu
tv71 = -24						; size = 4
tv69 = -20						; size = 4
_curBlockSize$67552 = -16				; size = 4
_numBitsForAlign$67551 = -12				; size = 4
_nextBitPosition$67550 = -8				; size = 4
_price$ = -4						; size = 4
_blockSize$ = 8						; size = 4
_bitPosition$ = 12					; size = 4
?GetStorePrice@NEncoder@NDeflate@NCompress@@YGIII@Z PROC ; NCompress::NDeflate::NEncoder::GetStorePrice
; Line 723
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 724
	mov	DWORD PTR _price$[ebp], 0
$LN3@GetStorePr:
; Line 727
	mov	eax, DWORD PTR _bitPosition$[ebp]
	add	eax, 3
	and	eax, 7
	mov	DWORD PTR _nextBitPosition$67550[ebp], eax
; Line 728
	jbe	SHORT $LN6@GetStorePr
	mov	ecx, 8
	sub	ecx, DWORD PTR _nextBitPosition$67550[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN7@GetStorePr
$LN6@GetStorePr:
	mov	DWORD PTR tv69[ebp], 0
$LN7@GetStorePr:
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR _numBitsForAlign$67551[ebp], edx
; Line 729
	cmp	DWORD PTR _blockSize$[ebp], 65536	; 00010000H
	jae	SHORT $LN8@GetStorePr
	mov	eax, DWORD PTR _blockSize$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN9@GetStorePr
$LN8@GetStorePr:
	mov	DWORD PTR tv71[ebp], 65535		; 0000ffffH
$LN9@GetStorePr:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _curBlockSize$67552[ebp], ecx
; Line 730
	mov	edx, DWORD PTR _price$[ebp]
	mov	eax, DWORD PTR _numBitsForAlign$67551[ebp]
	lea	ecx, DWORD PTR [eax+edx+35]
	mov	edx, DWORD PTR _curBlockSize$67552[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	DWORD PTR _price$[ebp], eax
; Line 731
	mov	DWORD PTR _bitPosition$[ebp], 0
; Line 732
	mov	ecx, DWORD PTR _blockSize$[ebp]
	sub	ecx, DWORD PTR _curBlockSize$67552[ebp]
	mov	DWORD PTR _blockSize$[ebp], ecx
; Line 734
	jne	SHORT $LN3@GetStorePr
; Line 735
	mov	eax, DWORD PTR _price$[ebp]
; Line 736
	mov	esp, ebp
	pop	ebp
	ret	8
?GetStorePrice@NEncoder@NDeflate@NCompress@@YGIII@Z ENDP ; NCompress::NDeflate::NEncoder::GetStorePrice
_TEXT	ENDS
PUBLIC	?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z ; NCompress::NDeflate::NEncoder::CCoder::CodeBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67649 = -20						; size = 4
_kMaxStaticHuffLen$67637 = -16				; size = 4
_i$67636 = -12						; size = 4
_t$ = -8						; size = 4
_this$ = -4						; size = 4
_tableIndex$ = 8					; size = 4
_finalBlock$ = 12					; size = 1
?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::CodeBlock
; _this$ = ecx
; Line 874
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 875
	mov	eax, DWORD PTR _tableIndex$[ebp]
	imul	eax, 332				; 0000014cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4824]
	mov	DWORD PTR _t$[ebp], eax
; Line 876
	mov	edx, DWORD PTR _t$[ebp]
	movzx	eax, BYTE PTR [edx+320]
	test	eax, eax
	je	SHORT $LN17@CodeBlock
; Line 878
	push	0
	mov	ecx, DWORD PTR _tableIndex$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z ; NCompress::NDeflate::NEncoder::CCoder::CodeBlock
; Line 879
	movzx	edx, BYTE PTR _finalBlock$[ebp]
	push	edx
	mov	eax, DWORD PTR _tableIndex$[ebp]
	lea	ecx, DWORD PTR [eax+eax+1]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z ; NCompress::NDeflate::NEncoder::CCoder::CodeBlock
; Line 881
	jmp	$LN18@CodeBlock
$LN17@CodeBlock:
; Line 883
	mov	edx, DWORD PTR _t$[ebp]
	movzx	eax, BYTE PTR [edx+321]
	test	eax, eax
	je	SHORT $LN15@CodeBlock
; Line 884
	movzx	ecx, BYTE PTR _finalBlock$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1288]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+324]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteStoreBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXII_N@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteStoreBlock
; Line 885
	jmp	$LN14@CodeBlock
$LN15@CodeBlock:
; Line 887
	push	1
	movzx	eax, BYTE PTR _finalBlock$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 888
	mov	ecx, DWORD PTR _t$[ebp]
	movzx	edx, BYTE PTR [ecx+322]
	test	edx, edx
	je	$LN13@CodeBlock
; Line 890
	push	2
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 891
	mov	eax, DWORD PTR _tableIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TryFixedBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEII@Z ; NCompress::NDeflate::NEncoder::CCoder::TryFixedBlock
; Line 893
	mov	DWORD PTR _kMaxStaticHuffLen$67637[ebp], 9
; Line 894
	mov	DWORD PTR _i$67636[ebp], 0
	jmp	SHORT $LN12@CodeBlock
$LN11@CodeBlock:
	mov	ecx, DWORD PTR _i$67636[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67636[ebp], ecx
$LN12@CodeBlock:
	cmp	DWORD PTR _i$67636[ebp], 288		; 00000120H
	jae	SHORT $LN10@CodeBlock
; Line 895
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$67636[ebp]
	movzx	eax, BYTE PTR [edx+1844]
	mov	ecx, 9
	sub	ecx, eax
	mov	edx, 1
	shl	edx, cl
	mov	eax, DWORD PTR _i$67636[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+2164], edx
	jmp	SHORT $LN11@CodeBlock
$LN10@CodeBlock:
; Line 896
	mov	DWORD PTR _i$67636[ebp], 0
	jmp	SHORT $LN9@CodeBlock
$LN8@CodeBlock:
	mov	edx, DWORD PTR _i$67636[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67636[ebp], edx
$LN9@CodeBlock:
	cmp	DWORD PTR _i$67636[ebp], 32		; 00000020H
	jae	SHORT $LN7@CodeBlock
; Line 897
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$67636[ebp]
	movzx	ecx, BYTE PTR [eax+2132]
	mov	edx, 9
	sub	edx, ecx
	mov	eax, 1
	mov	ecx, edx
	shl	eax, cl
	mov	ecx, DWORD PTR _i$67636[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4+3316], eax
	jmp	SHORT $LN8@CodeBlock
$LN7@CodeBlock:
; Line 898
	push	9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MakeTables@CCoder@NEncoder@NDeflate@NCompress@@QAEXI@Z ; NCompress::NDeflate::NEncoder::CCoder::MakeTables
; Line 900
	jmp	$LN6@CodeBlock
$LN13@CodeBlock:
; Line 902
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1216], 1
	ja	SHORT $LN4@CodeBlock
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+1220]
	test	edx, edx
	je	SHORT $LN5@CodeBlock
$LN4@CodeBlock:
; Line 903
	push	1
	mov	eax, DWORD PTR _tableIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?TryDynBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::TryDynBlock
$LN5@CodeBlock:
; Line 904
	push	2
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 905
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1268]
	sub	edx, 257				; 00000101H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 906
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1272]
	sub	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 907
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1276]
	sub	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
; Line 909
	mov	DWORD PTR _i$67649[ebp], 0
	jmp	SHORT $LN3@CodeBlock
$LN2@CodeBlock:
	mov	ecx, DWORD PTR _i$67649[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67649[ebp], ecx
$LN3@CodeBlock:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$67649[ebp]
	cmp	eax, DWORD PTR [edx+1276]
	jae	SHORT $LN1@CodeBlock
; Line 910
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$67649[ebp]
	movzx	edx, BYTE PTR [ecx+1246]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@CCoder@NEncoder@NDeflate@NCompress@@QAEXII@Z ; NCompress::NDeflate::NEncoder::CCoder::WriteBits
	jmp	SHORT $LN2@CodeBlock
$LN1@CodeBlock:
; Line 912
	push	19					; 00000013H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4800				; 000012c0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4724				; 00001274H
	push	ecx
	call	?Huffman_ReverseBits@NEncoder@NDeflate@NCompress@@YGXPAIPBEI@Z ; NCompress::NDeflate::NEncoder::Huffman_ReverseBits
; Line 913
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4724				; 00001274H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4800				; 000012c0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1268]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1844				; 00000734H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z ; NCompress::NDeflate::NEncoder::CCoder::LevelTableCode
; Line 914
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4724				; 00001274H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4800				; 000012c0H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1272]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 2132				; 00000854H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LevelTableCode@CCoder@NEncoder@NDeflate@NCompress@@QAEXPBEI0PBI@Z ; NCompress::NDeflate::NEncoder::CCoder::LevelTableCode
$LN6@CodeBlock:
; Line 916
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CCoder::WriteBlock
$LN14@CodeBlock:
; Line 918
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [eax+1288]
	sub	edx, DWORD PTR [ecx+324]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1288], edx
$LN18@CodeBlock:
; Line 920
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::CodeBlock
_TEXT	ENDS
PUBLIC	?Read@NEncoder@NDeflate@NCompress@@YGHPAX0PAI@Z	; NCompress::NDeflate::NEncoder::Read
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv65 = -24						; size = 4
_res$ = -20						; size = 4
_curSize$ = -12						; size = 4
_kStepSize$ = -4					; size = 4
_object$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?Read@NEncoder@NDeflate@NCompress@@YGHPAX0PAI@Z PROC	; NCompress::NDeflate::NEncoder::Read
; Line 923
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 924
	mov	DWORD PTR _kStepSize$[ebp], -2147483648	; 80000000H
; Line 925
	mov	eax, DWORD PTR _size$[ebp]
	cmp	DWORD PTR [eax], -2147483648		; 80000000H
	jae	SHORT $LN3@Read
	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv65[ebp], edx
	jmp	SHORT $LN4@Read
$LN3@Read:
	mov	DWORD PTR tv65[ebp], -2147483648	; 80000000H
$LN4@Read:
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR _curSize$[ebp], eax
; Line 926
	mov	esi, esp
	lea	ecx, DWORD PTR _curSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _object$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _object$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 927
	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _curSize$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 928
	mov	eax, DWORD PTR _res$[ebp]
; Line 929
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN7@Read:
	DD	1
	DD	$LN6@Read
$LN6@Read:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@Read
$LN5@Read:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Read@NEncoder@NDeflate@NCompress@@YGHPAX0PAI@Z ENDP	; NCompress::NDeflate::NEncoder::Read
_TEXT	ENDS
PUBLIC	?Flush@CBitlEncoder@@QAEJXZ			; CBitlEncoder::Flush
PUBLIC	?GetProcessedSize@CBitlEncoder@@QBE_KXZ		; CBitlEncoder::GetProcessedSize
PUBLIC	?Init@CBitlEncoder@@QAEXXZ			; CBitlEncoder::Init
PUBLIC	?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z ; CBitlEncoder::SetStream
PUBLIC	?CodeReal@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCoder::CodeReal
EXTRN	_MatchFinder_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -56						; size = 4
tv69 = -52						; size = 4
___result__$67682 = -48					; size = 4
_packSize$67681 = -40					; size = 8
_t$ = -28						; size = 4
_nowPos$ = -20						; size = 8
___result__$67673 = -8					; size = 4
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
_progress$ = 24						; size = 4
?CodeReal@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::CodeReal
; _this$ = ecx
; Line 933
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 934
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1212], 1
	jne	SHORT $LN10@CodeReal
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1216], 1
	jne	SHORT $LN10@CodeReal
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN11@CodeReal
$LN10@CodeReal:
	mov	DWORD PTR tv69[ebp], 1
$LN11@CodeReal:
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv69[ebp]
	mov	BYTE PTR [edx+1220], al
; Line 935
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+1220]
	test	edx, edx
	jne	SHORT $LN12@CodeReal
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1212], 1
	jne	SHORT $LN12@CodeReal
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+1216], 1
	jne	SHORT $LN12@CodeReal
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN13@CodeReal
$LN12@CodeReal:
	mov	DWORD PTR tv79[ebp], 1
$LN13@CodeReal:
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv79[ebp]
	mov	BYTE PTR [edx+1221], al
; Line 937
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CCoder@NEncoder@NDeflate@NCompress@@QAEJXZ ; NCompress::NDeflate::NEncoder::CCoder::Create
	mov	DWORD PTR ___result__$67673[ebp], eax
	cmp	DWORD PTR ___result__$67673[ebp], 0
	je	SHORT $LN7@CodeReal
	mov	eax, DWORD PTR ___result__$67673[ebp]
	jmp	$LN8@CodeReal
$LN7@CodeReal:
; Line 939
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1216]
	shl	edx, 12					; 0000000cH
	add	edx, 7168				; 00001c00H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1224], edx
; Line 941
	mov	DWORD PTR _nowPos$[ebp], 0
	mov	DWORD PTR _nowPos$[ebp+4], 0
; Line 943
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _inStream$[ebp]
	mov	DWORD PTR [ecx+1180], edx
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1176], OFFSET ?Read@NEncoder@NDeflate@NCompress@@YGHPAX0PAI@Z ; NCompress::NDeflate::NEncoder::Read
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1176				; 00000498H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], ecx
; Line 947
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_MatchFinder_Init@4
; Line 948
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z ; CBitlEncoder::SetStream
; Line 949
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?Init@CBitlEncoder@@QAEXXZ		; CBitlEncoder::Init
; Line 951
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1296], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1292], 0
; Line 953
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4824]
	add	edx, 332				; 0000014cH
	mov	DWORD PTR _t$[ebp], edx
; Line 954
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax+328], 0
; Line 955
	mov	ecx, DWORD PTR _t$[ebp]
	call	?InitStructures@CTables@NEncoder@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::NEncoder::CTables::InitStructures
; Line 957
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1288], 0
$LN6@CodeReal:
; Line 960
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [edx+324], 60923		; 0000edfbH
; Line 961
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1284], 0
; Line 962
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1216]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetBlockPrice@CCoder@NEncoder@NDeflate@NCompress@@QAEIII@Z ; NCompress::NDeflate::NEncoder::CCoder::GetBlockPrice
; Line 963
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sete	al
	movzx	ecx, al
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeBlock@CCoder@NEncoder@NDeflate@NCompress@@QAEXI_N@Z ; NCompress::NDeflate::NEncoder::CCoder::CodeBlock
; Line 964
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4824]
	mov	ecx, DWORD PTR [eax+656]
	xor	edx, edx
	add	ecx, DWORD PTR _nowPos$[ebp]
	adc	edx, DWORD PTR _nowPos$[ebp+4]
	mov	DWORD PTR _nowPos$[ebp], ecx
	mov	DWORD PTR _nowPos$[ebp+4], edx
; Line 965
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN5@CodeReal
; Line 967
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?GetProcessedSize@CBitlEncoder@@QBE_KXZ	; CBitlEncoder::GetProcessedSize
	mov	DWORD PTR _packSize$67681[ebp], eax
	mov	DWORD PTR _packSize$67681[ebp+4], edx
; Line 968
	mov	esi, esp
	lea	eax, DWORD PTR _packSize$67681[ebp]
	push	eax
	lea	ecx, DWORD PTR _nowPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _progress$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _progress$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67682[ebp], eax
	cmp	DWORD PTR ___result__$67682[ebp], 0
	je	SHORT $LN5@CodeReal
	mov	eax, DWORD PTR ___result__$67682[ebp]
	jmp	SHORT $LN8@CodeReal
$LN5@CodeReal:
; Line 971
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	jne	$LN6@CodeReal
; Line 972
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+92], 0
	je	SHORT $LN1@CodeReal
; Line 973
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+92]
	jmp	SHORT $LN8@CodeReal
$LN1@CodeReal:
; Line 974
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1128				; 00000468H
	call	?Flush@CBitlEncoder@@QAEJXZ		; CBitlEncoder::Flush
$LN8@CodeReal:
; Line 975
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN17@CodeReal:
	DD	2
	DD	$LN16@CodeReal
$LN16@CodeReal:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN14@CodeReal
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN15@CodeReal
$LN15@CodeReal:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN14@CodeReal:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?CodeReal@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::CodeReal
_TEXT	ENDS
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_outStream$ = 8						; size = 4
?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z PROC ; CBitlEncoder::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitlencoder.h
; Line 15
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CBitlEncoder@@QAEXPAUISequentialOutStream@@@Z ENDP ; CBitlEncoder::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
_TEXT	ENDS
EXTRN	?GetProcessedSize@COutBuffer@@QBE_KXZ:PROC	; COutBuffer::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@CBitlEncoder@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CBitlEncoder@@QBE_KXZ PROC		; CBitlEncoder::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitlencoder.h
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 8
	sub	esi, DWORD PTR [ecx+40]
	add	esi, 7
	shr	esi, 3
	xor	ecx, ecx
	add	eax, esi
	adc	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CBitlEncoder@@QBE_KXZ ENDP		; CBitlEncoder::GetProcessedSize
_TEXT	ENDS
EXTRN	?Init@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@CBitlEncoder@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CBitlEncoder@@QAEXXZ PROC				; CBitlEncoder::Init, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@COutBuffer@@QAEXXZ		; COutBuffer::Init
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 8
; Line 22
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+44], 0
; Line 23
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CBitlEncoder@@QAEXXZ ENDP				; CBitlEncoder::Init
_TEXT	ENDS
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@CBitlEncoder@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@CBitlEncoder@@QAEJXZ PROC			; CBitlEncoder::Flush, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushByte@CBitlEncoder@@QAEXXZ		; CBitlEncoder::FlushByte
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
; Line 28
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@CBitlEncoder@@QAEJXZ ENDP			; CBitlEncoder::Flush
_TEXT	ENDS
PUBLIC	?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCoder::BaseCode
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCOutBufferException@@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateencoder.cpp
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__unwindtable$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3
__catchsym$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$3 DD 09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffe4H
	DD	FLAT:__catch$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1
__ehfuncinfo$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv78 = -44						; size = 4
$T68040 = -40						; size = 4
$T68039 = -36						; size = 4
_e$67694 = -28						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
_inSize$ = 16						; size = 4
_outSize$ = 20						; size = 4
_progress$ = 24						; size = 4
?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NEncoder::CCoder::BaseCode
; _this$ = ecx
; Line 979
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 980
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCoder::CodeReal
	mov	DWORD PTR tv78[ebp], eax
	mov	eax, DWORD PTR tv78[ebp]
	jmp	SHORT $LN2@BaseCode
__catch$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$0:
; Line 981
	mov	edx, DWORD PTR _e$67694[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T68039[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN8@BaseCode
	ret	0
	mov	eax, __tryend$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
	ret	0
__catch$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$1:
; Line 982
	mov	DWORD PTR $T68040[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@BaseCode
	ret	0
	mov	eax, __tryend$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2
	ret	0
__tryend$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z$2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@BaseCode
$LN10@BaseCode:
	mov	eax, DWORD PTR $T68040[ebp]
	jmp	SHORT $LN2@BaseCode
$LN9@BaseCode:
	jmp	SHORT $LN2@BaseCode
$LN8@BaseCode:
; Line 981
	mov	eax, DWORD PTR $T68039[ebp]
$LN2@BaseCode:
; Line 983
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@BaseCode
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN16@BaseCode:
	DD	1
	DD	$LN15@BaseCode
$LN15@BaseCode:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN13@BaseCode
$LN13@BaseCode:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NEncoder::CCoder::BaseCode
PUBLIC	?Code@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCOMCoder::Code
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
_inSize$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::Code
; Line 987
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCoder::BaseCode
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?Code@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder::Code
_TEXT	ENDS
PUBLIC	?SetCoderProperties@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NDeflate::NEncoder::CCOMCoder::SetCoderProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_propIDs$ = 12						; size = 4
_props$ = 16						; size = 4
_numProps$ = 20						; size = 4
?SetCoderProperties@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z PROC ; NCompress::NDeflate::NEncoder::CCOMCoder::SetCoderProperties
; Line 990
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	push	ecx
	mov	edx, DWORD PTR _propIDs$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NDeflate::NEncoder::CCoder::BaseSetEncoderProperties2
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?SetCoderProperties@CCOMCoder@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder::SetCoderProperties
_TEXT	ENDS
PUBLIC	?Code@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCOMCoder64::Code
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
_inSize$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NEncoder::CCOMCoder64::Code
; Line 994
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?BaseCode@CCoder@NEncoder@NDeflate@NCompress@@QAEJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NEncoder::CCoder::BaseCode
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?Code@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder64::Code
_TEXT	ENDS
PUBLIC	?SetCoderProperties@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NDeflate::NEncoder::CCOMCoder64::SetCoderProperties
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_propIDs$ = 12						; size = 4
_props$ = 16						; size = 4
_numProps$ = 20						; size = 4
?SetCoderProperties@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z PROC ; NCompress::NDeflate::NEncoder::CCOMCoder64::SetCoderProperties
; Line 997
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	push	ecx
	mov	edx, DWORD PTR _propIDs$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?BaseSetEncoderProperties2@CCoder@NEncoder@NDeflate@NCompress@@QAEJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NDeflate::NEncoder::CCoder::BaseSetEncoderProperties2
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?SetCoderProperties@CCOMCoder64@NEncoder@NDeflate@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ENDP ; NCompress::NDeflate::NEncoder::CCOMCoder64::SetCoderProperties
_TEXT	ENDS
PUBLIC	??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CFastPosInit::CFastPosInit
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eg_FastPosInit@NEncoder@NDeflate@NCompress@@YAXXZ
text$yc	SEGMENT
??__Eg_FastPosInit@NEncoder@NDeflate@NCompress@@YAXXZ PROC ; NCompress::NDeflate::NEncoder::`dynamic initializer for 'g_FastPosInit'', COMDAT
; Line 72
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _g_FastPosInit
	call	??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NEncoder::CFastPosInit::CFastPosInit
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Eg_FastPosInit@NEncoder@NDeflate@NCompress@@YAXXZ ENDP ; NCompress::NDeflate::NEncoder::`dynamic initializer for 'g_FastPosInit''
; Function compile flags: /Odtp /RTCsu
text$yc	ENDS
;	COMDAT ??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_j$67121 = -40						; size = 4
_k$67120 = -36						; size = 4
_slotFast$67116 = -29					; size = 1
_c$ = -28						; size = 4
_kFastSlots$ = -24					; size = 4
_k$67109 = -20						; size = 4
_j$67108 = -16						; size = 4
_c$67107 = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ PROC ; NCompress::NDeflate::NEncoder::CFastPosInit::CFastPosInit, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@CFastPosIn
$LN11@CFastPosIn:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@CFastPosIn:
	cmp	DWORD PTR _i$[ebp], 29			; 0000001dH
	jae	SHORT $LN10@CFastPosIn
; Line 55
	mov	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR _kLenStart32[ecx]
	mov	DWORD PTR _c$67107[ebp], edx
; Line 56
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR _kLenDirectBits32[eax]
	mov	edx, 1
	shl	edx, cl
	mov	DWORD PTR _j$67108[ebp], edx
; Line 57
	mov	DWORD PTR _k$67109[ebp], 0
	jmp	SHORT $LN9@CFastPosIn
$LN8@CFastPosIn:
	mov	eax, DWORD PTR _k$67109[ebp]
	add	eax, 1
	mov	DWORD PTR _k$67109[ebp], eax
	mov	ecx, DWORD PTR _c$67107[ebp]
	add	ecx, 1
	mov	DWORD PTR _c$67107[ebp], ecx
$LN9@CFastPosIn:
	mov	edx, DWORD PTR _k$67109[ebp]
	cmp	edx, DWORD PTR _j$67108[ebp]
	jae	SHORT $LN7@CFastPosIn
; Line 58
	mov	eax, DWORD PTR _c$67107[ebp]
	mov	cl, BYTE PTR _i$[ebp]
	mov	BYTE PTR _g_LenSlots[eax], cl
	jmp	SHORT $LN8@CFastPosIn
$LN7@CFastPosIn:
; Line 59
	jmp	SHORT $LN11@CFastPosIn
$LN10@CFastPosIn:
; Line 61
	mov	DWORD PTR _kFastSlots$[ebp], 18		; 00000012H
; Line 62
	mov	DWORD PTR _c$[ebp], 0
; Line 63
	mov	BYTE PTR _slotFast$67116[ebp], 0
	jmp	SHORT $LN6@CFastPosIn
$LN5@CFastPosIn:
	mov	dl, BYTE PTR _slotFast$67116[ebp]
	add	dl, 1
	mov	BYTE PTR _slotFast$67116[ebp], dl
$LN6@CFastPosIn:
	movzx	eax, BYTE PTR _slotFast$67116[ebp]
	cmp	eax, 18					; 00000012H
	jae	SHORT $LN13@CFastPosIn
; Line 65
	movzx	ecx, BYTE PTR _slotFast$67116[ebp]
	movzx	ecx, BYTE PTR _kDistDirectBits[ecx]
	mov	edx, 1
	shl	edx, cl
	mov	DWORD PTR _k$67120[ebp], edx
; Line 66
	mov	DWORD PTR _j$67121[ebp], 0
	jmp	SHORT $LN3@CFastPosIn
$LN2@CFastPosIn:
	mov	eax, DWORD PTR _j$67121[ebp]
	add	eax, 1
	mov	DWORD PTR _j$67121[ebp], eax
	mov	ecx, DWORD PTR _c$[ebp]
	add	ecx, 1
	mov	DWORD PTR _c$[ebp], ecx
$LN3@CFastPosIn:
	mov	edx, DWORD PTR _j$67121[ebp]
	cmp	edx, DWORD PTR _k$67120[ebp]
	jae	SHORT $LN1@CFastPosIn
; Line 67
	mov	eax, DWORD PTR _c$[ebp]
	mov	cl, BYTE PTR _slotFast$67116[ebp]
	mov	BYTE PTR _g_FastPos[eax], cl
	jmp	SHORT $LN2@CFastPosIn
$LN1@CFastPosIn:
; Line 68
	jmp	SHORT $LN5@CFastPosIn
$LN13@CFastPosIn:
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFastPosInit@NEncoder@NDeflate@NCompress@@QAE@XZ ENDP ; NCompress::NDeflate::NEncoder::CFastPosInit::CFastPosInit
_TEXT	ENDS
_BSS	SEGMENT
_g_FastPosInit DB 01H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_g_FastPosInit$initializer$ DD FLAT:??__Eg_FastPosInit@NEncoder@NDeflate@NCompress@@YAXXZ
CRT$XCU	ENDS
END

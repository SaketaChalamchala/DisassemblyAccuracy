; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Common\FilePathAutoRename.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
PUBLIC	?Ptr@UString@@QBEPB_WI@Z			; UString::Ptr
PUBLIC	?DeleteFrom@UString@@QAEXI@Z			; UString::DeleteFrom
PUBLIC	?ReverseFind_Dot@UString@@QBEHXZ		; UString::ReverseFind_Dot
PUBLIC	?AutoRenamePath@@YG_NAAVUString@@@Z		; AutoRenamePath
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	?ReverseFind_PathSepar@UString@@QBEHXZ:PROC	; UString::ReverseFind_PathSepar
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?AutoRenamePath@@YG_NAAVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$2
__ehfuncinfo$?AutoRenamePath@@YG_NAAVUString@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?AutoRenamePath@@YG_NAAVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\common\filepathautorename.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
$T67447 = -93						; size = 1
_mid$67413 = -92					; size = 4
_right$ = -88						; size = 4
_left$ = -84						; size = 4
_temp$ = -76						; size = 12
_extension$ = -56					; size = 12
_name$ = -36						; size = 12
_slashPos$ = -20					; size = 4
_dotPos$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
?AutoRenamePath@@YG_NAAVUString@@@Z PROC		; AutoRenamePath
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AutoRenamePath@@YG_NAAVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 84					; 00000054H
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 27
	mov	ecx, DWORD PTR _path$[ebp]
	call	?ReverseFind_Dot@UString@@QBEHXZ	; UString::ReverseFind_Dot
	mov	DWORD PTR _dotPos$[ebp], eax
; Line 28
	mov	ecx, DWORD PTR _path$[ebp]
	call	?ReverseFind_PathSepar@UString@@QBEHXZ	; UString::ReverseFind_PathSepar
	mov	DWORD PTR _slashPos$[ebp], eax
; Line 30
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 31
	lea	ecx, DWORD PTR _extension$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 32
	mov	ecx, DWORD PTR _slashPos$[ebp]
	add	ecx, 1
	cmp	DWORD PTR _dotPos$[ebp], ecx
	jle	SHORT $LN5@AutoRename
; Line 34
	mov	edx, DWORD PTR _dotPos$[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
; Line 35
	mov	eax, DWORD PTR _dotPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	lea	ecx, DWORD PTR _extension$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN5@AutoRename:
; Line 37
	push	95					; 0000005fH
	lea	ecx, DWORD PTR _name$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
; Line 39
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 41
	mov	DWORD PTR _left$[ebp], 1
	mov	DWORD PTR _right$[ebp], 1073741824	; 40000000H
$LN4@AutoRename:
; Line 42
	mov	ecx, DWORD PTR _left$[ebp]
	cmp	ecx, DWORD PTR _right$[ebp]
	je	SHORT $LN3@AutoRename
; Line 44
	mov	edx, DWORD PTR _left$[ebp]
	add	edx, DWORD PTR _right$[ebp]
	shr	edx, 1
	mov	DWORD PTR _mid$67413[ebp], edx
; Line 45
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mid$67413[ebp]
	push	ecx
	lea	edx, DWORD PTR _extension$[ebp]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z ; MakeAutoName
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@AutoRename
; Line 46
	mov	edx, DWORD PTR _mid$67413[ebp]
	add	edx, 1
	mov	DWORD PTR _left$[ebp], edx
; Line 47
	jmp	SHORT $LN1@AutoRename
$LN2@AutoRename:
; Line 48
	mov	eax, DWORD PTR _mid$67413[ebp]
	mov	DWORD PTR _right$[ebp], eax
$LN1@AutoRename:
; Line 49
	jmp	SHORT $LN4@AutoRename
$LN3@AutoRename:
; Line 50
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	edx, DWORD PTR _right$[ebp]
	push	edx
	lea	eax, DWORD PTR _extension$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z ; MakeAutoName
	movzx	edx, al
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	BYTE PTR $T67447[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _extension$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67447[ebp]
; Line 51
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@AutoRename
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN16@AutoRename:
	DD	3
	DD	$LN15@AutoRename
$LN15@AutoRename:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN11@AutoRename
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN12@AutoRename
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN13@AutoRename
$LN13@AutoRename:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN12@AutoRename:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN11@AutoRename:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$1:
	lea	ecx, DWORD PTR _extension$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?AutoRenamePath@@YG_NAAVUString@@@Z$2:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?AutoRenamePath@@YG_NAAVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AutoRenamePath@@YG_NAAVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AutoRenamePath@@YG_NAAVUString@@@Z ENDP		; AutoRenamePath
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67474 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67474[ebp], ecx
	mov	edx, DWORD PTR $T67474[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Ptr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Ptr@UString@@QBEPB_WI@Z PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	esp, ebp
	pop	ebp
	ret	4
?Ptr@UString@@QBEPB_WI@Z ENDP				; UString::Ptr
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
_TEXT	ENDS
EXTRN	?ReverseFind@UString@@QBEH_W@Z:PROC		; UString::ReverseFind
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReverseFind_Dot@UString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReverseFind_Dot@UString@@QBEHXZ PROC			; UString::ReverseFind_Dot, COMDAT
; _this$ = ecx
; Line 575
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	46					; 0000002eH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReverseFind@UString@@QBEH_W@Z		; UString::ReverseFind
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReverseFind_Dot@UString@@QBEHXZ ENDP			; UString::ReverseFind_Dot
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteFrom@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@UString@@QAEXI@Z PROC			; UString::DeleteFrom, COMDAT
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@DeleteFrom
; Line 607
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@DeleteFrom:
; Line 610
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@UString@@QAEXI@Z ENDP			; UString::DeleteFrom
_TEXT	ENDS
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	__$ArrayPad$
EXTRN	?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z:PROC ; NWindows::NFile::NFind::DoesFileOrDirExist
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	?AddAscii@UString@@QAEXPBD@Z:PROC		; UString::AddAscii
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?ConvertUInt32ToString@@YGXIPAD@Z:PROC		; ConvertUInt32ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_temp$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_extension$ = 12					; size = 4
_value$ = 16						; size = 4
_path$ = 20						; size = 4
?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z PROC		; MakeAutoName
; File c:\workspace\7z1505-src\cpp\7zip\common\filepathautorename.cpp
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 18
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 19
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _path$[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 20
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 21
	mov	ecx, DWORD PTR _extension$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _path$[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 22
	mov	ecx, DWORD PTR _path$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?DoesFileOrDirExist@NFind@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NFind::DoesFileOrDirExist
; Line 23
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@MakeAutoNa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN5@MakeAutoNa:
	DD	1
	DD	$LN4@MakeAutoNa
$LN4@MakeAutoNa:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@MakeAutoNa
$LN3@MakeAutoNa:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?MakeAutoName@@YG_NABVUString@@0IAAV1@@Z ENDP		; MakeAutoName
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
END

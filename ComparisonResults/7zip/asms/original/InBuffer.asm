; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Common\InBuffer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0CInBufferBase@@QAE@XZ			; CInBufferBase::CInBufferBase
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBufferBase@@QAE@XZ PROC				; CInBufferBase::CInBufferBase
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBufferBase@@QAE@XZ ENDP				; CInBufferBase::CInBufferBase
_TEXT	ENDS
PUBLIC	?Free@CInBuffer@@QAEXXZ				; CInBuffer::Free
PUBLIC	?Create@CInBuffer@@QAE_NI@Z			; CInBuffer::Create
EXTRN	_MidAlloc@4:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_kMinBlockSize$ = -8					; size = 4
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@CInBuffer@@QAE_NI@Z PROC			; CInBuffer::Create
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 22
	mov	DWORD PTR _kMinBlockSize$[ebp], 1
; Line 23
	cmp	DWORD PTR _bufSize$[ebp], 1
	jae	SHORT $LN2@Create
; Line 24
	mov	DWORD PTR _bufSize$[ebp], 1
$LN2@Create:
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@Create
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	cmp	edx, DWORD PTR _bufSize$[ebp]
	jne	SHORT $LN1@Create
; Line 26
	mov	al, 1
	jmp	SHORT $LN3@Create
$LN1@Create:
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufSize$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 29
	mov	edx, DWORD PTR _bufSize$[ebp]
	push	edx
	call	_MidAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 30
	mov	edx, DWORD PTR _this$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+8], 0
	setne	al
$LN3@Create:
; Line 31
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@CInBuffer@@QAE_NI@Z ENDP			; CInBuffer::Create
_TEXT	ENDS
EXTRN	_MidFree@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@CInBuffer@@QAEXXZ PROC				; CInBuffer::Free
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_MidFree@4
; Line 36
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 37
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CInBuffer@@QAEXXZ ENDP				; CInBuffer::Free
_TEXT	ENDS
PUBLIC	?Init@CInBufferBase@@QAEXXZ			; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CInBufferBase@@QAEXXZ PROC			; CInBufferBase::Init
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	DWORD PTR [eax+20], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax
; Line 44
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28], 0
; Line 48
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CInBufferBase@@QAEXXZ ENDP			; CInBufferBase::Init
_TEXT	ENDS
PUBLIC	__TI2?AUCInBufferException@@
PUBLIC	??0CInBufferException@@QAE@J@Z			; CInBufferException::CInBufferException
PUBLIC	?ReadBlock@CInBufferBase@@IAE_NXZ		; CInBufferBase::ReadBlock
PUBLIC	__CTA2?AUCInBufferException@@
PUBLIC	__CT??_R0?AUCInBufferException@@@84
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AUCSystemException@@@84
PUBLIC	??_R0?AUCSystemException@@@8			; CSystemException `RTTI Type Descriptor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCSystemException@@@8
_DATA	SEGMENT
??_R0?AUCSystemException@@@8 DD FLAT:??_7type_info@@6B@	; CSystemException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCSystemException@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AUCSystemException@@@84
xdata$x	SEGMENT
__CT??_R0?AUCSystemException@@@84 DD 00H
	DD	FLAT:??_R0?AUCSystemException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AUCInBufferException@@@8
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AUCInBufferException@@@84
xdata$x	SEGMENT
__CT??_R0?AUCInBufferException@@@84 DD 00H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA2?AUCInBufferException@@
xdata$x	SEGMENT
__CTA2?AUCInBufferException@@ DD 02H
	DD	FLAT:__CT??_R0?AUCInBufferException@@@84
	DD	FLAT:__CT??_R0?AUCSystemException@@@84
xdata$x	ENDS
;	COMDAT __TI2?AUCInBufferException@@
xdata$x	SEGMENT
__TI2?AUCInBufferException@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AUCInBufferException@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T66112 = -28						; size = 4
$T66111 = -24						; size = 4
_result$ = -20						; size = 4
_processed$ = -12					; size = 4
_this$ = -4						; size = 4
?ReadBlock@CInBufferBase@@IAE_NXZ PROC			; CInBufferBase::ReadBlock
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	SHORT $LN2@ReadBlock
; Line 58
	xor	al, al
	jmp	$LN4@ReadBlock
$LN2@ReadBlock:
; Line 59
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax+8]
	mov	eax, ecx
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+16]
	adc	edx, DWORD PTR [ecx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], edx
; Line 60
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx
; Line 61
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+4], ecx
; Line 64
	mov	esi, esp
	lea	edx, DWORD PTR _processed$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 68
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN1@ReadBlock
; Line 69
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T66112[ebp]
	call	??0CInBufferException@@QAE@J@Z		; CInBufferException::CInBufferException
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T66111[ebp], edx
	push	OFFSET __TI2?AUCInBufferException@@
	lea	eax, DWORD PTR $T66111[ebp]
	push	eax
	call	__CxxThrowException@8
$LN1@ReadBlock:
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _processed$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 72
	xor	ecx, ecx
	cmp	DWORD PTR _processed$[ebp], 0
	sete	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28], cl
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+28]
	neg	eax
	sbb	eax, eax
	add	eax, 1
$LN4@ReadBlock:
; Line 74
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ReadBlock
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@ReadBlock:
	DD	1
	DD	$LN6@ReadBlock
$LN6@ReadBlock:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@ReadBlock
$LN5@ReadBlock:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?ReadBlock@CInBufferBase@@IAE_NXZ ENDP			; CInBufferBase::ReadBlock
_TEXT	ENDS
PUBLIC	??0CSystemException@@QAE@J@Z			; CSystemException::CSystemException
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInBufferException@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_errorCode$ = 8						; size = 4
??0CInBufferException@@QAE@J@Z PROC			; CInBufferException::CInBufferException, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 12
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSystemException@@QAE@J@Z		; CSystemException::CSystemException
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CInBufferException@@QAE@J@Z ENDP			; CInBufferException::CInBufferException
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CSystemException@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_errorCode$ = 8						; size = 4
??0CSystemException@@QAE@J@Z PROC			; CSystemException::CSystemException, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myexception.h
; Line 11
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CSystemException@@QAE@J@Z ENDP			; CSystemException::CSystemException
_TEXT	ENDS
PUBLIC	?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 4
?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z PROC	; CInBufferBase::ReadByte_FromNewBlock
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBlock@CInBufferBase@@IAE_NXZ	; CInBufferBase::ReadBlock
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@ReadByte_F
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx
; Line 81
	mov	ecx, DWORD PTR _b$[ebp]
	mov	BYTE PTR [ecx], 255			; 000000ffH
; Line 82
	xor	al, al
	jmp	SHORT $LN2@ReadByte_F
$LN1@ReadByte_F:
; Line 84
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 85
	mov	al, 1
$LN2@ReadByte_F:
; Line 86
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadByte_FromNewBlock@CInBufferBase@@IAE_NAAE@Z ENDP	; CInBufferBase::ReadByte_FromNewBlock
_TEXT	ENDS
PUBLIC	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ	; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ PROC	; CInBufferBase::ReadByte_FromNewBlock
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBlock@CInBufferBase@@IAE_NXZ	; CInBufferBase::ReadBlock
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@ReadByte_F@2
; Line 92
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx
; Line 93
	or	al, 255					; 000000ffH
	jmp	SHORT $LN2@ReadByte_F@2
$LN1@ReadByte_F@2:
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv74[ebp], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
	mov	al, BYTE PTR tv74[ebp]
$LN2@ReadByte_F@2:
; Line 96
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ ENDP	; CInBufferBase::ReadByte_FromNewBlock
_TEXT	ENDS
PUBLIC	?ReadBytes@CInBufferBase@@QAEIPAEI@Z		; CInBufferBase::ReadBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$66069 = -16						; size = 4
_i$66065 = -12						; size = 4
_src$66064 = -8						; size = 4
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
_size$ = 12						; size = 4
?ReadBytes@CInBufferBase@@QAEIPAEI@Z PROC		; CInBufferBase::ReadBytes
; _this$ = ecx
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _size$[ebp]
	jb	SHORT $LN9@ReadBytes
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _src$66064[ebp], ecx
; Line 103
	mov	DWORD PTR _i$66065[ebp], 0
	jmp	SHORT $LN8@ReadBytes
$LN7@ReadBytes:
	mov	edx, DWORD PTR _i$66065[ebp]
	add	edx, 1
	mov	DWORD PTR _i$66065[ebp], edx
$LN8@ReadBytes:
	mov	eax, DWORD PTR _i$66065[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jae	SHORT $LN6@ReadBytes
; Line 104
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _i$66065[ebp]
	mov	edx, DWORD PTR _src$66064[ebp]
	add	edx, DWORD PTR _i$66065[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
	jmp	SHORT $LN7@ReadBytes
$LN6@ReadBytes:
; Line 105
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 106
	mov	eax, DWORD PTR _size$[ebp]
	jmp	SHORT $LN10@ReadBytes
$LN9@ReadBytes:
; Line 108
	mov	DWORD PTR _i$66069[ebp], 0
	jmp	SHORT $LN5@ReadBytes
$LN4@ReadBytes:
	mov	ecx, DWORD PTR _i$66069[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$66069[ebp], ecx
$LN5@ReadBytes:
	mov	edx, DWORD PTR _i$66069[ebp]
	cmp	edx, DWORD PTR _size$[ebp]
	jae	SHORT $LN3@ReadBytes
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN2@ReadBytes
; Line 111
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBlock@CInBufferBase@@IAE_NXZ	; CInBufferBase::ReadBlock
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@ReadBytes
; Line 112
	mov	eax, DWORD PTR _i$66069[ebp]
	jmp	SHORT $LN10@ReadBytes
$LN2@ReadBytes:
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _i$66069[ebp]
	mov	cl, BYTE PTR [edx]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 114
	jmp	SHORT $LN4@ReadBytes
$LN3@ReadBytes:
; Line 115
	mov	eax, DWORD PTR _size$[ebp]
$LN10@ReadBytes:
; Line 116
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReadBytes@CInBufferBase@@QAEIPAEI@Z ENDP		; CInBufferBase::ReadBytes
_TEXT	ENDS
PUBLIC	?Skip@CInBufferBase@@QAEII@Z			; CInBufferBase::Skip
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_rem$66083 = -12					; size = 4
_processed$ = -8					; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?Skip@CInBufferBase@@QAEII@Z PROC			; CInBufferBase::Skip
; _this$ = ecx
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	mov	DWORD PTR _processed$[ebp], 0
$LN4@Skip:
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx]
	mov	DWORD PTR _rem$66083[ebp], edx
; Line 124
	mov	eax, DWORD PTR _rem$66083[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jb	SHORT $LN2@Skip
; Line 126
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 127
	mov	eax, DWORD PTR _processed$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	jmp	SHORT $LN5@Skip
$LN2@Skip:
; Line 129
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, DWORD PTR _rem$66083[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 130
	mov	ecx, DWORD PTR _processed$[ebp]
	add	ecx, DWORD PTR _rem$66083[ebp]
	mov	DWORD PTR _processed$[ebp], ecx
; Line 131
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, DWORD PTR _rem$66083[ebp]
	mov	DWORD PTR _size$[ebp], edx
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBlock@CInBufferBase@@IAE_NXZ	; CInBufferBase::ReadBlock
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Skip
; Line 133
	mov	eax, DWORD PTR _processed$[ebp]
	jmp	SHORT $LN5@Skip
$LN1@Skip:
; Line 134
	jmp	SHORT $LN4@Skip
$LN5@Skip:
; Line 135
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Skip@CInBufferBase@@QAEII@Z ENDP			; CInBufferBase::Skip
_TEXT	ENDS
END

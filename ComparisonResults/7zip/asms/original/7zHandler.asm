; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\7z\7zHandler.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_kArcProps DB	02dH
	DB	016H
	DB	0dH
	DB	026H
$SG70958 DB	'LZMA2:', 00H
	ORG $+1
$SG70963 DB	'LZMA:', 00H
	ORG $+2
$SG71095 DB	'LZMA', 00H
	ORG $+3
$SG71108 DB	'lc', 00H
	ORG $+1
$SG71110 DB	'lp', 00H
	ORG $+1
$SG71112 DB	'pb', 00H
	ORG $+1
$SG71115 DB	'LZMA2', 00H
	ORG $+2
$SG71123 DB	'PPMD', 00H
	ORG $+3
$SG71127 DB	':mem', 00H
	ORG $+3
$SG71132 DB	'Delta', 00H
	ORG $+2
$SG71137 DB	'BCJ2', 00H
	ORG $+3
$SG71140 DB	'BCJ', 00H
$SG71143 DB	'7zAES', 00H
CONST	ENDS
PUBLIC	??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CBond2>::~CRecordVector<NArchive::N7z::CBond2>
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	??1CDbEx@N7z@NArchive@@QAE@XZ			; NArchive::N7z::CDbEx::~CDbEx
PUBLIC	??1?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
PUBLIC	??1COutHandler@N7z@NArchive@@QAE@XZ		; NArchive::N7z::COutHandler::~COutHandler
PUBLIC	??0?$CRecordVector@_K@@QAE@XZ			; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
PUBLIC	??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CBond2>::CRecordVector<NArchive::N7z::CBond2>
PUBLIC	??0CDbEx@N7z@NArchive@@QAE@XZ			; NArchive::N7z::CDbEx::CDbEx
PUBLIC	??0?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
PUBLIC	??_7CHandler@N7z@NArchive@@6BIOutArchive@@@	; NArchive::N7z::CHandler::`vftable'
PUBLIC	??_7CHandler@N7z@NArchive@@6BISetProperties@@@	; NArchive::N7z::CHandler::`vftable'
PUBLIC	??_7CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@ ; NArchive::N7z::CHandler::`vftable'
PUBLIC	??_7CHandler@N7z@NArchive@@6BIInArchive@@@	; NArchive::N7z::CHandler::`vftable'
PUBLIC	??0COutHandler@N7z@NArchive@@QAE@XZ		; NArchive::N7z::COutHandler::COutHandler
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0IOutArchive@@QAE@XZ				; IOutArchive::IOutArchive
PUBLIC	??0ISetProperties@@QAE@XZ			; ISetProperties::ISetProperties
PUBLIC	??0IArchiveGetRawProps@@QAE@XZ			; IArchiveGetRawProps::IArchiveGetRawProps
PUBLIC	??0IInArchive@@QAE@XZ				; IInArchive::IInArchive
PUBLIC	??0CHandler@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CHandler::CHandler
PUBLIC	??_R4CHandler@N7z@NArchive@@6BIInArchive@@@	; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCHandler@N7z@NArchive@@@8		; NArchive::N7z::CHandler `RTTI Type Descriptor'
PUBLIC	??_R3CHandler@N7z@NArchive@@8			; NArchive::N7z::CHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CHandler@N7z@NArchive@@8			; NArchive::N7z::CHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CHandler@N7z@NArchive@@8		; NArchive::N7z::CHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IInArchive@@8			; IInArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIInArchive@@@8				; IInArchive `RTTI Type Descriptor'
PUBLIC	??_R3IInArchive@@8				; IInArchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInArchive@@8				; IInArchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IArchiveGetRawProps@@8		; IArchiveGetRawProps::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUIArchiveGetRawProps@@@8			; IArchiveGetRawProps `RTTI Type Descriptor'
PUBLIC	??_R3IArchiveGetRawProps@@8			; IArchiveGetRawProps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IArchiveGetRawProps@@8			; IArchiveGetRawProps::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IArchiveGetRawProps@@8		; IArchiveGetRawProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@ISetProperties@@8			; ISetProperties::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUISetProperties@@@8			; ISetProperties `RTTI Type Descriptor'
PUBLIC	??_R3ISetProperties@@8				; ISetProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISetProperties@@8				; ISetProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISetProperties@@8			; ISetProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@IOutArchive@@8			; IOutArchive::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUIOutArchive@@@8				; IOutArchive `RTTI Type Descriptor'
PUBLIC	??_R3IOutArchive@@8				; IOutArchive::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IOutArchive@@8				; IOutArchive::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IOutArchive@@8			; IOutArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BI@?0A@EA@COutHandler@N7z@NArchive@@8	; NArchive::N7z::COutHandler::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AVCOutHandler@N7z@NArchive@@@8		; NArchive::N7z::COutHandler `RTTI Type Descriptor'
PUBLIC	??_R3COutHandler@N7z@NArchive@@8		; NArchive::N7z::COutHandler::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2COutHandler@N7z@NArchive@@8		; NArchive::N7z::COutHandler::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@COutHandler@N7z@NArchive@@8	; NArchive::N7z::COutHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CMultiMethodProps@NArchive@@8	; NArchive::CMultiMethodProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCMultiMethodProps@NArchive@@@8		; NArchive::CMultiMethodProps `RTTI Type Descriptor'
PUBLIC	??_R3CMultiMethodProps@NArchive@@8		; NArchive::CMultiMethodProps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMultiMethodProps@NArchive@@8		; NArchive::CMultiMethodProps::`RTTI Base Class Array'
PUBLIC	??_R1BI@?0A@EA@CMultiMethodProps@NArchive@@8	; NArchive::CMultiMethodProps::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::N7z::CHandler::QueryInterface
PUBLIC	?AddRef@CHandler@N7z@NArchive@@UAGKXZ		; NArchive::N7z::CHandler::AddRef
PUBLIC	?Release@CHandler@N7z@NArchive@@UAGKXZ		; NArchive::N7z::CHandler::Release
PUBLIC	?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z ; NArchive::N7z::CHandler::Open
PUBLIC	?Close@CHandler@N7z@NArchive@@UAGJXZ		; NArchive::N7z::CHandler::Close
PUBLIC	?GetNumberOfItems@CHandler@N7z@NArchive@@UAGJPAI@Z ; NArchive::N7z::CHandler::GetNumberOfItems
PUBLIC	?GetProperty@CHandler@N7z@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z ; NArchive::N7z::CHandler::GetProperty
PUBLIC	?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z ; NArchive::N7z::CHandler::GetArchiveProperty
PUBLIC	?GetNumberOfArchiveProperties@CHandler@N7z@NArchive@@UAGJPAI@Z ; NArchive::N7z::CHandler::GetNumberOfArchiveProperties
PUBLIC	?GetArchivePropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z ; NArchive::N7z::CHandler::GetArchivePropertyInfo
PUBLIC	??_R4CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@ ; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CHandler@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CHandler@N7z@NArchive@@W3AGKXZ		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{4}'
PUBLIC	?Release@CHandler@N7z@NArchive@@W3AGKXZ		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{4}'
PUBLIC	?GetParent@CHandler@N7z@NArchive@@UAGJIPAI0@Z	; NArchive::N7z::CHandler::GetParent
PUBLIC	?GetRawProp@CHandler@N7z@NArchive@@UAGJIKPAPBXPAI1@Z ; NArchive::N7z::CHandler::GetRawProp
PUBLIC	?GetNumRawProps@CHandler@N7z@NArchive@@UAGJPAI@Z ; NArchive::N7z::CHandler::GetNumRawProps
PUBLIC	?GetRawPropInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAK@Z ; NArchive::N7z::CHandler::GetRawPropInfo
PUBLIC	??_R4CHandler@N7z@NArchive@@6BISetProperties@@@	; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CHandler@N7z@NArchive@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CHandler@N7z@NArchive@@W7AGKXZ		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{8}'
PUBLIC	?Release@CHandler@N7z@NArchive@@W7AGKXZ		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{8}'
PUBLIC	??_R4CHandler@N7z@NArchive@@6BIOutArchive@@@	; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CHandler@N7z@NArchive@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CHandler@N7z@NArchive@@WM@AGKXZ		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{12}'
PUBLIC	?Release@CHandler@N7z@NArchive@@WM@AGKXZ	; [thunk]:NArchive::N7z::CHandler::Release`adjustor{12}'
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z:PROC ; NArchive::N7z::CHandler::Extract
EXTRN	?GetNumberOfProperties@CHandler@N7z@NArchive@@UAGJPAI@Z:PROC ; NArchive::N7z::CHandler::GetNumberOfProperties
EXTRN	?GetPropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z:PROC ; NArchive::N7z::CHandler::GetPropertyInfo
EXTRN	?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z:PROC ; NArchive::N7z::CHandler::SetProperties
EXTRN	?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z:PROC ; NArchive::N7z::CHandler::UpdateItems
EXTRN	?GetFileTimeType@CHandler@N7z@NArchive@@UAGJPAI@Z:PROC ; NArchive::N7z::CHandler::GetFileTimeType
;	COMDAT ??_R4CHandler@N7z@NArchive@@6BIOutArchive@@@
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
rdata$r	SEGMENT
??_R4CHandler@N7z@NArchive@@6BIOutArchive@@@ DD 00H	; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCHandler@N7z@NArchive@@@8
	DD	FLAT:??_R3CHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R4CHandler@N7z@NArchive@@6BISetProperties@@@
rdata$r	SEGMENT
??_R4CHandler@N7z@NArchive@@6BISetProperties@@@ DD 00H	; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@N7z@NArchive@@@8
	DD	FLAT:??_R3CHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R4CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@
rdata$r	SEGMENT
??_R4CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@ DD 00H ; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@N7z@NArchive@@@8
	DD	FLAT:??_R3CHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@CMultiMethodProps@NArchive@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@CMultiMethodProps@NArchive@@8 DD FLAT:??_R0?AVCMultiMethodProps@NArchive@@@8 ; NArchive::CMultiMethodProps::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMultiMethodProps@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2CMultiMethodProps@NArchive@@8
rdata$r	SEGMENT
??_R2CMultiMethodProps@NArchive@@8 DD FLAT:??_R1A@?0A@EA@CMultiMethodProps@NArchive@@8 ; NArchive::CMultiMethodProps::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMultiMethodProps@NArchive@@8
rdata$r	SEGMENT
??_R3CMultiMethodProps@NArchive@@8 DD 00H		; NArchive::CMultiMethodProps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMultiMethodProps@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMultiMethodProps@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCMultiMethodProps@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::CMultiMethodProps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMultiMethodProps@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CMultiMethodProps@NArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMultiMethodProps@NArchive@@8 DD FLAT:??_R0?AVCMultiMethodProps@NArchive@@@8 ; NArchive::CMultiMethodProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMultiMethodProps@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@COutHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@COutHandler@N7z@NArchive@@8 DD FLAT:??_R0?AVCOutHandler@N7z@NArchive@@@8 ; NArchive::N7z::COutHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COutHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2COutHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R2COutHandler@N7z@NArchive@@8 DD FLAT:??_R1A@?0A@EA@COutHandler@N7z@NArchive@@8 ; NArchive::N7z::COutHandler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CMultiMethodProps@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R3COutHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R3COutHandler@N7z@NArchive@@8 DD 00H			; NArchive::N7z::COutHandler::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2COutHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCOutHandler@N7z@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCOutHandler@N7z@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::N7z::COutHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCOutHandler@N7z@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BI@?0A@EA@COutHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@COutHandler@N7z@NArchive@@8 DD FLAT:??_R0?AVCOutHandler@N7z@NArchive@@@8 ; NArchive::N7z::COutHandler::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	01H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COutHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IOutArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IOutArchive@@8 DD FLAT:??_R0?AUIOutArchive@@@8 ; IOutArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2IOutArchive@@8
rdata$r	SEGMENT
??_R2IOutArchive@@8 DD FLAT:??_R1A@?0A@EA@IOutArchive@@8 ; IOutArchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IOutArchive@@8
rdata$r	SEGMENT
??_R3IOutArchive@@8 DD 00H				; IOutArchive::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIOutArchive@@@8
_DATA	SEGMENT
??_R0?AUIOutArchive@@@8 DD FLAT:??_7type_info@@6B@	; IOutArchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIOutArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@IOutArchive@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@IOutArchive@@8 DD FLAT:??_R0?AUIOutArchive@@@8 ; IOutArchive::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISetProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISetProperties@@8 DD FLAT:??_R0?AUISetProperties@@@8 ; ISetProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ISetProperties@@8
rdata$r	SEGMENT
??_R2ISetProperties@@8 DD FLAT:??_R1A@?0A@EA@ISetProperties@@8 ; ISetProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISetProperties@@8
rdata$r	SEGMENT
??_R3ISetProperties@@8 DD 00H				; ISetProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISetProperties@@@8
_DATA	SEGMENT
??_R0?AUISetProperties@@@8 DD FLAT:??_7type_info@@6B@	; ISetProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISetProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ISetProperties@@8
rdata$r	SEGMENT
??_R17?0A@EA@ISetProperties@@8 DD FLAT:??_R0?AUISetProperties@@@8 ; ISetProperties::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IArchiveGetRawProps@@8 DD FLAT:??_R0?AUIArchiveGetRawProps@@@8 ; IArchiveGetRawProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_R2IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R2IArchiveGetRawProps@@8 DD FLAT:??_R1A@?0A@EA@IArchiveGetRawProps@@8 ; IArchiveGetRawProps::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R3IArchiveGetRawProps@@8 DD 00H			; IArchiveGetRawProps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIArchiveGetRawProps@@@8
_DATA	SEGMENT
??_R0?AUIArchiveGetRawProps@@@8 DD FLAT:??_7type_info@@6B@ ; IArchiveGetRawProps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIArchiveGetRawProps@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@IArchiveGetRawProps@@8
rdata$r	SEGMENT
??_R13?0A@EA@IArchiveGetRawProps@@8 DD FLAT:??_R0?AUIArchiveGetRawProps@@@8 ; IArchiveGetRawProps::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IInArchive@@8
rdata$r	SEGMENT
??_R2IInArchive@@8 DD FLAT:??_R1A@?0A@EA@IInArchive@@8	; IInArchive::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IInArchive@@8
rdata$r	SEGMENT
??_R3IInArchive@@8 DD 00H				; IInArchive::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInArchive@@@8
_DATA	SEGMENT
??_R0?AUIInArchive@@@8 DD FLAT:??_7type_info@@6B@	; IInArchive `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IInArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInArchive@@8 DD FLAT:??_R0?AUIInArchive@@@8 ; IInArchive::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CHandler@N7z@NArchive@@8 DD FLAT:??_R0?AVCHandler@N7z@NArchive@@@8 ; NArchive::N7z::CHandler::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R2CHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R2CHandler@N7z@NArchive@@8 DD FLAT:??_R1A@?0A@EA@CHandler@N7z@NArchive@@8 ; NArchive::N7z::CHandler::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IInArchive@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IArchiveGetRawProps@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ISetProperties@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@IOutArchive@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1BI@?0A@EA@COutHandler@N7z@NArchive@@8
	DD	FLAT:??_R1BI@?0A@EA@CMultiMethodProps@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R3CHandler@N7z@NArchive@@8
rdata$r	SEGMENT
??_R3CHandler@N7z@NArchive@@8 DD 00H			; NArchive::N7z::CHandler::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0cH
	DD	FLAT:??_R2CHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCHandler@N7z@NArchive@@@8
_DATA	SEGMENT
??_R0?AVCHandler@N7z@NArchive@@@8 DD FLAT:??_7type_info@@6B@ ; NArchive::N7z::CHandler `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCHandler@N7z@NArchive@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CHandler@N7z@NArchive@@6BIInArchive@@@
rdata$r	SEGMENT
??_R4CHandler@N7z@NArchive@@6BIInArchive@@@ DD 00H	; NArchive::N7z::CHandler::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCHandler@N7z@NArchive@@@8
	DD	FLAT:??_R3CHandler@N7z@NArchive@@8
rdata$r	ENDS
;	COMDAT ??_7CHandler@N7z@NArchive@@6BIOutArchive@@@
CONST	SEGMENT
??_7CHandler@N7z@NArchive@@6BIOutArchive@@@ DD FLAT:??_R4CHandler@N7z@NArchive@@6BIOutArchive@@@ ; NArchive::N7z::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@N7z@NArchive@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@N7z@NArchive@@WM@AGKXZ
	DD	FLAT:?Release@CHandler@N7z@NArchive@@WM@AGKXZ
	DD	FLAT:?UpdateItems@CHandler@N7z@NArchive@@UAGJPAUISequentialOutStream@@IPAUIArchiveUpdateCallback@@@Z
	DD	FLAT:?GetFileTimeType@CHandler@N7z@NArchive@@UAGJPAI@Z
CONST	ENDS
;	COMDAT ??_7CHandler@N7z@NArchive@@6BISetProperties@@@
CONST	SEGMENT
??_7CHandler@N7z@NArchive@@6BISetProperties@@@ DD FLAT:??_R4CHandler@N7z@NArchive@@6BISetProperties@@@ ; NArchive::N7z::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@N7z@NArchive@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@N7z@NArchive@@W7AGKXZ
	DD	FLAT:?Release@CHandler@N7z@NArchive@@W7AGKXZ
	DD	FLAT:?SetProperties@CHandler@N7z@NArchive@@UAGJPBQB_WPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@
CONST	SEGMENT
??_7CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@ DD FLAT:??_R4CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@ ; NArchive::N7z::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@N7z@NArchive@@W3AGKXZ
	DD	FLAT:?Release@CHandler@N7z@NArchive@@W3AGKXZ
	DD	FLAT:?GetParent@CHandler@N7z@NArchive@@UAGJIPAI0@Z
	DD	FLAT:?GetRawProp@CHandler@N7z@NArchive@@UAGJIKPAPBXPAI1@Z
	DD	FLAT:?GetNumRawProps@CHandler@N7z@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetRawPropInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAK@Z
CONST	ENDS
;	COMDAT ??_7CHandler@N7z@NArchive@@6BIInArchive@@@
CONST	SEGMENT
??_7CHandler@N7z@NArchive@@6BIInArchive@@@ DD FLAT:??_R4CHandler@N7z@NArchive@@6BIInArchive@@@ ; NArchive::N7z::CHandler::`vftable'
	DD	FLAT:?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CHandler@N7z@NArchive@@UAGKXZ
	DD	FLAT:?Release@CHandler@N7z@NArchive@@UAGKXZ
	DD	FLAT:?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	FLAT:?Close@CHandler@N7z@NArchive@@UAGJXZ
	DD	FLAT:?GetNumberOfItems@CHandler@N7z@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetProperty@CHandler@N7z@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?Extract@CHandler@N7z@NArchive@@UAGJPBIIHPAUIArchiveExtractCallback@@@Z
	DD	FLAT:?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	FLAT:?GetNumberOfProperties@CHandler@N7z@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetPropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z
	DD	FLAT:?GetNumberOfArchiveProperties@CHandler@N7z@NArchive@@UAGJPAI@Z
	DD	FLAT:?GetArchivePropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$??0CHandler@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??0CHandler@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CHandler@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$4
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CHandler@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CHandler::CHandler
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CHandler@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IInArchive@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0IArchiveGetRawProps@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ISetProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0IOutArchive@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0COutHandler@N7z@NArchive@@QAE@XZ	; NArchive::N7z::COutHandler::COutHandler
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CHandler@N7z@NArchive@@6BIInArchive@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CHandler@N7z@NArchive@@6BIArchiveGetRawProps@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CHandler@N7z@NArchive@@6BISetProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CHandler@N7z@NArchive@@6BIOutArchive@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??0CDbEx@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	call	??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CBond2>::CRecordVector<NArchive::N7z::CBond2>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??0?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+456], 0
; Line 35
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+457], 0
; Line 44
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1COutHandler@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1CDbEx@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CHandler@N7z@NArchive@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	jmp	??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CBond2>::~CRecordVector<NArchive::N7z::CBond2>
__ehhandler$??0CHandler@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CHandler@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CHandler@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CHandler::CHandler
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T71993 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T71993[ebp], ecx
	mov	edx, DWORD PTR $T71993[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	??1CMultiMethodProps@NArchive@@QAE@XZ		; NArchive::CMultiMethodProps::~CMultiMethodProps
PUBLIC	??0CBoolPair@@QAE@XZ				; CBoolPair::CBoolPair
PUBLIC	??0CMultiMethodProps@NArchive@@QAE@XZ		; NArchive::CMultiMethodProps::CMultiMethodProps
EXTRN	?InitProps@COutHandler@N7z@NArchive@@QAEXXZ:PROC ; NArchive::N7z::COutHandler::InitProps
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.h
xdata$x	SEGMENT
__unwindtable$??0COutHandler@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COutHandler@N7z@NArchive@@QAE@XZ$0
__ehfuncinfo$??0COutHandler@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0COutHandler@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0COutHandler@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0COutHandler@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::COutHandler::COutHandler, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0COutHandler@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CMultiMethodProps@NArchive@@QAE@XZ	; NArchive::CMultiMethodProps::CMultiMethodProps
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 101				; 00000065H
	call	??0CBoolPair@@QAE@XZ			; CBoolPair::CBoolPair
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 103				; 00000067H
	call	??0CBoolPair@@QAE@XZ			; CBoolPair::CBoolPair
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 105				; 00000069H
	call	??0CBoolPair@@QAE@XZ			; CBoolPair::CBoolPair
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitProps@COutHandler@N7z@NArchive@@QAEXXZ ; NArchive::N7z::COutHandler::InitProps
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0COutHandler@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CMultiMethodProps@NArchive@@QAE@XZ
__ehhandler$??0COutHandler@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0COutHandler@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0COutHandler@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::COutHandler::COutHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBoolPair@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBoolPair@@QAE@XZ PROC				; CBoolPair::CBoolPair, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mytypes.h
; Line 15
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBoolPair@@QAE@XZ ENDP				; CBoolPair::CBoolPair
_TEXT	ENDS
PUBLIC	??1COneMethodInfo@@QAE@XZ			; COneMethodInfo::~COneMethodInfo
PUBLIC	??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ	; CObjectVector<COneMethodInfo>::~CObjectVector<COneMethodInfo>
PUBLIC	??0COneMethodInfo@@QAE@XZ			; COneMethodInfo::COneMethodInfo
PUBLIC	??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ	; CObjectVector<COneMethodInfo>::CObjectVector<COneMethodInfo>
EXTRN	?Init@CMultiMethodProps@NArchive@@QAEXXZ:PROC	; NArchive::CMultiMethodProps::Init
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\archive\common\handlerout.h
xdata$x	SEGMENT
__unwindtable$??0CMultiMethodProps@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$1
__ehfuncinfo$??0CMultiMethodProps@NArchive@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CMultiMethodProps@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CMultiMethodProps@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMultiMethodProps@NArchive@@QAE@XZ PROC		; NArchive::CMultiMethodProps::CMultiMethodProps, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMultiMethodProps@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ ; CObjectVector<COneMethodInfo>::CObjectVector<COneMethodInfo>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0COneMethodInfo@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@CMultiMethodProps@NArchive@@QAEXXZ ; NArchive::CMultiMethodProps::Init
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ ; CObjectVector<COneMethodInfo>::~CObjectVector<COneMethodInfo>
__unwindfunclet$??0CMultiMethodProps@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1COneMethodInfo@@QAE@XZ
__ehhandler$??0CMultiMethodProps@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMultiMethodProps@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMultiMethodProps@NArchive@@QAE@XZ ENDP		; NArchive::CMultiMethodProps::CMultiMethodProps
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??1CMethodProps@@QAE@XZ				; CMethodProps::~CMethodProps
PUBLIC	??0CMethodProps@@QAE@XZ				; CMethodProps::CMethodProps
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0COneMethodInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1
__ehfuncinfo$??0COneMethodInfo@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0COneMethodInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0COneMethodInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0COneMethodInfo@@QAE@XZ PROC				; COneMethodInfo::COneMethodInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0COneMethodInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CMethodProps@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CMethodProps@@QAE@XZ
__unwindfunclet$??0COneMethodInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0COneMethodInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0COneMethodInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0COneMethodInfo@@QAE@XZ ENDP				; COneMethodInfo::COneMethodInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T72030 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72030[ebp], ecx
	mov	edx, DWORD PTR $T72030[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1COneMethodInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1
__ehfuncinfo$??1COneMethodInfo@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1COneMethodInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1COneMethodInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1COneMethodInfo@@QAE@XZ PROC				; COneMethodInfo::~COneMethodInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1COneMethodInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CMethodProps@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CMethodProps@@QAE@XZ
__unwindfunclet$??1COneMethodInfo@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1COneMethodInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1COneMethodInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1COneMethodInfo@@QAE@XZ ENDP				; COneMethodInfo::~COneMethodInfo
PUBLIC	??0CProps@@QAE@XZ				; CProps::CProps
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMethodProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMethodProps@@QAE@XZ PROC				; CMethodProps::CMethodProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CProps@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMethodProps@@QAE@XZ ENDP				; CMethodProps::CMethodProps
_TEXT	ENDS
PUBLIC	??1CProps@@QAE@XZ				; CProps::~CProps
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CMethodProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMethodProps@@QAE@XZ PROC				; CMethodProps::~CMethodProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CProps@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CMethodProps@@QAE@XZ ENDP				; CMethodProps::~CMethodProps
_TEXT	ENDS
PUBLIC	??0?$CObjectVector@UCProp@@@@QAE@XZ		; CObjectVector<CProp>::CObjectVector<CProp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CProps@@QAE@XZ PROC					; CProps::CProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@UCProp@@@@QAE@XZ	; CObjectVector<CProp>::CObjectVector<CProp>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CProps@@QAE@XZ ENDP					; CProps::CProps
_TEXT	ENDS
PUBLIC	??1?$CObjectVector@UCProp@@@@QAE@XZ		; CObjectVector<CProp>::~CObjectVector<CProp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CProps@@QAE@XZ PROC					; CProps::~CProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CObjectVector@UCProp@@@@QAE@XZ	; CObjectVector<CProp>::~CObjectVector<CProp>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CProps@@QAE@XZ ENDP					; CProps::~CProps
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMultiMethodProps@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMultiMethodProps@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CMultiMethodProps@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMultiMethodProps@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CMultiMethodProps@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMultiMethodProps@NArchive@@QAE@XZ PROC		; NArchive::CMultiMethodProps::~CMultiMethodProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CMultiMethodProps@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1COneMethodInfo@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ ; CObjectVector<COneMethodInfo>::~CObjectVector<COneMethodInfo>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMultiMethodProps@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ ; CObjectVector<COneMethodInfo>::~CObjectVector<COneMethodInfo>
__ehhandler$??1CMultiMethodProps@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CMultiMethodProps@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CMultiMethodProps@NArchive@@QAE@XZ ENDP		; NArchive::CMultiMethodProps::~CMultiMethodProps
PUBLIC	_==@8
EXTRN	_IID_IOutArchive:BYTE
EXTRN	_IID_ISetProperties:BYTE
EXTRN	_IID_IArchiveGetRawProps:BYTE
EXTRN	_IID_IInArchive:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z PROC ; NArchive::N7z::CHandler::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.h
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN10@QueryInter:
	push	OFFSET _IID_IInArchive
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN8@QueryInter:
; Line 97
	push	OFFSET _IID_IArchiveGetRawProps
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN14@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter
$LN6@QueryInter:
; Line 99
	push	OFFSET _IID_ISetProperties
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN16@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter
$LN4@QueryInter:
; Line 102
	push	OFFSET _IID_IOutArchive
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN18@QueryInter
$LN17@QueryInter:
	mov	DWORD PTR tv144[ebp], 0
$LN18@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter
$LN2@QueryInter:
; Line 105
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter
$LN9@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
	xor	eax, eax
$LN11@QueryInter:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z ENDP ; NArchive::N7z::CHandler::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@N7z@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CHandler@N7z@NArchive@@UAGKXZ PROC		; NArchive::N7z::CHandler::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.h
; Line 106
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CHandler@N7z@NArchive@@UAGKXZ ENDP		; NArchive::N7z::CHandler::AddRef
_TEXT	ENDS
PUBLIC	??_GCHandler@N7z@NArchive@@QAEPAXI@Z		; NArchive::N7z::CHandler::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CHandler@N7z@NArchive@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T72081 = -8						; size = 4
$T72080 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CHandler@N7z@NArchive@@UAGKXZ PROC		; NArchive::N7z::CHandler::Release, COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T72081[ebp], edx
	mov	eax, DWORD PTR $T72081[ebp]
	mov	DWORD PTR $T72080[ebp], eax
	cmp	DWORD PTR $T72080[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T72080[ebp]
	call	??_GCHandler@N7z@NArchive@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CHandler@N7z@NArchive@@UAGKXZ ENDP		; NArchive::N7z::CHandler::Release
_TEXT	ENDS
PUBLIC	??1CHandler@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CHandler::~CHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCHandler@N7z@NArchive@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCHandler@N7z@NArchive@@QAEPAXI@Z PROC		; NArchive::N7z::CHandler::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CHandler@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCHandler@N7z@NArchive@@QAEPAXI@Z ENDP		; NArchive::N7z::CHandler::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@_K@@QAE@XZ			; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CHandler@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1CHandler@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CHandler@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CHandler@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CHandler@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CHandler::~CHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CHandler@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	call	??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CBond2>::~CRecordVector<NArchive::N7z::CBond2>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??1CDbEx@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1COutHandler@N7z@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1COutHandler@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1CDbEx@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CHandler@N7z@NArchive@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	jmp	??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CBond2>::~CRecordVector<NArchive::N7z::CBond2>
__ehhandler$??1CHandler@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CHandler@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CHandler@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CHandler::~CHandler
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutHandler@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutHandler@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::COutHandler::~COutHandler, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CMultiMethodProps@NArchive@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutHandler@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::COutHandler::~COutHandler
_TEXT	ENDS
PUBLIC	??1CDatabase@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CDatabase::~CDatabase
PUBLIC	??1CInArchiveInfo@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CInArchiveInfo::~CInArchiveInfo
PUBLIC	??1?$CObjArray@I@@QAE@XZ			; CObjArray<unsigned int>::~CObjArray<unsigned int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDbEx@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$2
__ehfuncinfo$??1CDbEx@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CDbEx@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDbEx@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDbEx@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CDbEx::~CDbEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDbEx@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??1CInArchiveInfo@N7z@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDatabase@N7z@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDatabase@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	jmp	??1CInArchiveInfo@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDbEx@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__ehhandler$??1CDbEx@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDbEx@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDbEx@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CDbEx::~CDbEx
PUBLIC	??1CFolders@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CFolders::~CFolders
PUBLIC	??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CFileItem>::~CRecordVector<NArchive::N7z::CFileItem>
PUBLIC	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ	; NArchive::N7z::CUInt64DefVector::~CUInt64DefVector
PUBLIC	??1?$CRecordVector@_N@@QAE@XZ			; CRecordVector<bool>::~CRecordVector<bool>
PUBLIC	??1?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::~CBuffer<unsigned char>
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDatabase@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CDatabase@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CDatabase@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$7
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDatabase@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatabase@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CDatabase::~CDatabase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatabase@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CFileItem>::~CRecordVector<NArchive::N7z::CFileItem>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFolders@N7z@NArchive@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFolders@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CFileItem>::~CRecordVector<NArchive::N7z::CFileItem>
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__unwindfunclet$??1CDatabase@N7z@NArchive@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??1CDatabase@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatabase@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatabase@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CDatabase::~CDatabase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInArchiveInfo@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInArchiveInfo@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CInArchiveInfo::~CInArchiveInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInArchiveInfo@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CInArchiveInfo::~CInArchiveInfo
_TEXT	ENDS
PUBLIC	??1CUInt32DefVector@N7z@NArchive@@QAE@XZ	; NArchive::N7z::CUInt32DefVector::~CUInt32DefVector
PUBLIC	??1?$CObjArray@_K@@QAE@XZ			; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
PUBLIC	??1?$CObjArray@E@@QAE@XZ			; CObjArray<unsigned char>::~CObjArray<unsigned char>
PUBLIC	??1CParsedMethods@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CParsedMethods::~CParsedMethods
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CFolders@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??1CFolders@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CFolders@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$8
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CFolders@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CFolders@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CFolders::~CFolders, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFolders@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1CParsedMethods@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??1CFolders@N7z@NArchive@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??1CFolders@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CFolders@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CFolders@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CFolders::~CFolders
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CUInt64DefVector@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CUInt64DefVector::~CUInt64DefVector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__ehhandler$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CUInt64DefVector@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CUInt64DefVector::~CUInt64DefVector
PUBLIC	??1?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ$0
__ehfuncinfo$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CUInt32DefVector@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CUInt32DefVector::~CUInt32DefVector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__ehhandler$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CUInt32DefVector@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CUInt32DefVector::~CUInt32DefVector
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CParsedMethods@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CParsedMethods@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CParsedMethods::~CParsedMethods, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CParsedMethods@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CParsedMethods::~CParsedMethods
_TEXT	ENDS
PUBLIC	??_7IInArchive@@6B@				; IInArchive::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4IInArchive@@6B@				; IInArchive::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4IInArchive@@6B@
rdata$r	SEGMENT
??_R4IInArchive@@6B@ DD 00H				; IInArchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIInArchive@@@8
	DD	FLAT:??_R3IInArchive@@8
rdata$r	ENDS
;	COMDAT ??_7IInArchive@@6B@
CONST	SEGMENT
??_7IInArchive@@6B@ DD FLAT:??_R4IInArchive@@6B@	; IInArchive::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IInArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IInArchive@@QAE@XZ PROC				; IInArchive::IInArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IInArchive@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IInArchive@@QAE@XZ ENDP				; IInArchive::IInArchive
_TEXT	ENDS
PUBLIC	??_7IArchiveGetRawProps@@6B@			; IArchiveGetRawProps::`vftable'
PUBLIC	??_R4IArchiveGetRawProps@@6B@			; IArchiveGetRawProps::`RTTI Complete Object Locator'
;	COMDAT ??_R4IArchiveGetRawProps@@6B@
rdata$r	SEGMENT
??_R4IArchiveGetRawProps@@6B@ DD 00H			; IArchiveGetRawProps::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIArchiveGetRawProps@@@8
	DD	FLAT:??_R3IArchiveGetRawProps@@8
rdata$r	ENDS
;	COMDAT ??_7IArchiveGetRawProps@@6B@
CONST	SEGMENT
??_7IArchiveGetRawProps@@6B@ DD FLAT:??_R4IArchiveGetRawProps@@6B@ ; IArchiveGetRawProps::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IArchiveGetRawProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IArchiveGetRawProps@@QAE@XZ PROC			; IArchiveGetRawProps::IArchiveGetRawProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IArchiveGetRawProps@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IArchiveGetRawProps@@QAE@XZ ENDP			; IArchiveGetRawProps::IArchiveGetRawProps
_TEXT	ENDS
PUBLIC	??_7ISetProperties@@6B@				; ISetProperties::`vftable'
PUBLIC	??_R4ISetProperties@@6B@			; ISetProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISetProperties@@6B@
rdata$r	SEGMENT
??_R4ISetProperties@@6B@ DD 00H				; ISetProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISetProperties@@@8
	DD	FLAT:??_R3ISetProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ISetProperties@@6B@
CONST	SEGMENT
??_7ISetProperties@@6B@ DD FLAT:??_R4ISetProperties@@6B@ ; ISetProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISetProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISetProperties@@QAE@XZ PROC				; ISetProperties::ISetProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISetProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISetProperties@@QAE@XZ ENDP				; ISetProperties::ISetProperties
_TEXT	ENDS
PUBLIC	??_7IOutArchive@@6B@				; IOutArchive::`vftable'
PUBLIC	??_R4IOutArchive@@6B@				; IOutArchive::`RTTI Complete Object Locator'
;	COMDAT ??_R4IOutArchive@@6B@
rdata$r	SEGMENT
??_R4IOutArchive@@6B@ DD 00H				; IOutArchive::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIOutArchive@@@8
	DD	FLAT:??_R3IOutArchive@@8
rdata$r	ENDS
;	COMDAT ??_7IOutArchive@@6B@
CONST	SEGMENT
??_7IOutArchive@@6B@ DD FLAT:??_R4IOutArchive@@6B@	; IOutArchive::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IOutArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOutArchive@@QAE@XZ PROC				; IOutArchive::IOutArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IOutArchive@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOutArchive@@QAE@XZ ENDP				; IOutArchive::IOutArchive
_TEXT	ENDS
PUBLIC	??0?$CObjArray@I@@QAE@XZ			; CObjArray<unsigned int>::CObjArray<unsigned int>
PUBLIC	??0CInArchiveInfo@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CInArchiveInfo::CInArchiveInfo
PUBLIC	??0CDatabase@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CDatabase::CDatabase
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDbEx@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$2
__ehfuncinfo$??0CDbEx@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CDbEx@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDbEx@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDbEx@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CDbEx::CDbEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDbEx@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDatabase@N7z@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	??0CInArchiveInfo@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CDatabase@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	jmp	??1CInArchiveInfo@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDbEx@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__ehhandler$??0CDbEx@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDbEx@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDbEx@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CDbEx::CDbEx
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0?$CBuffer@E@@QAE@XZ				; CBuffer<unsigned char>::CBuffer<unsigned char>
PUBLIC	??0?$CRecordVector@_N@@QAE@XZ			; CRecordVector<bool>::CRecordVector<bool>
PUBLIC	??0CUInt64DefVector@N7z@NArchive@@QAE@XZ	; NArchive::N7z::CUInt64DefVector::CUInt64DefVector
PUBLIC	??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CFileItem>::CRecordVector<NArchive::N7z::CFileItem>
PUBLIC	??0CFolders@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CFolders::CFolders
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CDatabase@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0CDatabase@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CDatabase@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$7
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDatabase@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDatabase@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CDatabase::CDatabase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDatabase@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFolders@N7z@NArchive@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CFileItem>::CRecordVector<NArchive::N7z::CFileItem>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??0?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::CRecordVector<bool>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CFolders@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ; CRecordVector<NArchive::N7z::CFileItem>::~CRecordVector<NArchive::N7z::CFileItem>
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	jmp	??1CUInt64DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__unwindfunclet$??0CDatabase@N7z@NArchive@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??0CDatabase@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDatabase@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDatabase@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CDatabase::CDatabase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInArchiveInfo@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInArchiveInfo@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CInArchiveInfo::CInArchiveInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInArchiveInfo@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CInArchiveInfo::CInArchiveInfo
_TEXT	ENDS
PUBLIC	??0CParsedMethods@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CParsedMethods::CParsedMethods
PUBLIC	??0?$CObjArray@E@@QAE@XZ			; CObjArray<unsigned char>::CObjArray<unsigned char>
PUBLIC	??0CUInt32DefVector@N7z@NArchive@@QAE@XZ	; NArchive::N7z::CUInt32DefVector::CUInt32DefVector
PUBLIC	??0?$CObjArray@_K@@QAE@XZ			; CObjArray<unsigned __int64>::CObjArray<unsigned __int64>
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CFolders@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??0CFolders@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CFolders@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$8
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CFolders@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFolders@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CFolders::CFolders, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CFolders@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::CObjArray<unsigned __int64>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0CUInt32DefVector@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::CObjArray<unsigned __int64>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::CObjArray<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::CObjArray<unsigned int>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::CBuffer<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0CParsedMethods@N7z@NArchive@@QAE@XZ	; NArchive::N7z::CParsedMethods::CParsedMethods
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1CUInt32DefVector@N7z@NArchive@@QAE@XZ
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	jmp	??1?$CObjArray@_K@@QAE@XZ		; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1?$CObjArray@E@@QAE@XZ		; CObjArray<unsigned char>::~CObjArray<unsigned char>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1?$CObjArray@I@@QAE@XZ		; CObjArray<unsigned int>::~CObjArray<unsigned int>
__unwindfunclet$??0CFolders@N7z@NArchive@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$CBuffer@E@@QAE@XZ			; CBuffer<unsigned char>::~CBuffer<unsigned char>
__ehhandler$??0CFolders@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CFolders@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CFolders@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CFolders::CFolders
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CParsedMethods@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CParsedMethods@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CParsedMethods::CParsedMethods, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CParsedMethods@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CParsedMethods::CParsedMethods
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CUInt64DefVector@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CUInt64DefVector::CUInt64DefVector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::CRecordVector<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CRecordVector@_K@@QAE@XZ		; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__ehhandler$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CUInt64DefVector@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CUInt64DefVector@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CUInt64DefVector::CUInt64DefVector
PUBLIC	??0?$CRecordVector@I@@QAE@XZ			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ$0
__ehfuncinfo$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CUInt32DefVector@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CUInt32DefVector@N7z@NArchive@@QAE@XZ PROC		; NArchive::N7z::CUInt32DefVector::CUInt32DefVector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::CRecordVector<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CRecordVector@I@@QAE@XZ		; CRecordVector<unsigned int>::CRecordVector<unsigned int>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@_N@@QAE@XZ		; CRecordVector<bool>::~CRecordVector<bool>
__ehhandler$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CUInt32DefVector@N7z@NArchive@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CUInt32DefVector@N7z@NArchive@@QAE@XZ ENDP		; NArchive::N7z::CUInt32DefVector::CUInt32DefVector
PUBLIC	?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::N7z::CFileItem>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numItems$ = 12						; size = 4
?GetNumberOfItems@CHandler@N7z@NArchive@@UAGJPAI@Z PROC	; NArchive::N7z::CHandler::GetNumberOfItems
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 47
	push	ebp
	mov	ebp, esp
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ ; CRecordVector<NArchive::N7z::CFileItem>::Size
	mov	ecx, DWORD PTR _numItems$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 49
	xor	eax, eax
; Line 50
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetNumberOfItems@CHandler@N7z@NArchive@@UAGJPAI@Z ENDP	; NArchive::N7z::CHandler::GetNumberOfItems
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumberOfArchiveProperties@CHandler@N7z@NArchive@@UAGJPAI@Z PROC ; NArchive::N7z::CHandler::GetNumberOfArchiveProperties
; Line 79
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 4
	xor	eax, eax
	pop	ebp
	ret	8
?GetNumberOfArchiveProperties@CHandler@N7z@NArchive@@UAGJPAI@Z ENDP ; NArchive::N7z::CHandler::GetNumberOfArchiveProperties
_TEXT	ENDS
EXTRN	?k7z_PROPID_To_VARTYPE@@3QBEB:BYTE		; k7z_PROPID_To_VARTYPE
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
_varType$ = 24						; size = 4
?GetArchivePropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z PROC ; NArchive::N7z::CHandler::GetArchivePropertyInfo
; Line 79
	push	ebp
	mov	ebp, esp
	cmp	DWORD PTR _index$[ebp], 4
	jb	SHORT $LN1@GetArchive
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@GetArchive
$LN1@GetArchive:
	mov	eax, DWORD PTR _index$[ebp]
	movzx	ecx, BYTE PTR _kArcProps[eax]
	mov	edx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	dx, BYTE PTR ?k7z_PROPID_To_VARTYPE@@3QBEB[ecx]
	mov	eax, DWORD PTR _varType$[ebp]
	mov	WORD PTR [eax], dx
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [ecx], 0
	xor	eax, eax
$LN2@GetArchive:
	pop	ebp
	ret	20					; 00000014H
?GetArchivePropertyInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAKPAG@Z ENDP ; NArchive::N7z::CHandler::GetArchivePropertyInfo
_TEXT	ENDS
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z ; NArchive::N7z::CHandler::AddMethodName
EXTRN	??YAString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator+=
EXTRN	?FindMethod@@YG_N_KAAVAString@@@Z:PROC		; FindMethod
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z$0
__ehfuncinfo$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_name$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_id$ = 12						; size = 8
?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z PROC ; NArchive::N7z::CHandler::AddMethodName
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	lea	ecx, DWORD PTR _name$[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 154
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	call	?FindMethod@@YG_N_KAAVAString@@@Z	; FindMethod
; Line 155
	lea	ecx, DWORD PTR _name$[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@AddMethodN
; Line 156
	mov	ecx, DWORD PTR _id$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?ConvertMethodIdToString@N7z@NArchive@@YGXAAVAString@@_K@Z ; NArchive::N7z::ConvertMethodIdToString
; Line 157
	jmp	SHORT $LN1@AddMethodN
$LN2@AddMethodN:
; Line 158
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@ABV0@@Z		; AString::operator+=
$LN1@AddMethodN:
; Line 159
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@AddMethodN
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN9@AddMethodN:
	DD	1
	DD	$LN8@AddMethodN
$LN8@AddMethodN:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@AddMethodN
$LN6@AddMethodN:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z$0:
	lea	ecx, DWORD PTR _name$[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z ENDP ; NArchive::N7z::CHandler::AddMethodName
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_len$ = -52						; size = 4
_s$ = -44						; size = 32
_kLen$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 8
?ConvertMethodIdToString@N7z@NArchive@@YGXAAVAString@@_K@Z PROC ; NArchive::N7z::ConvertMethodIdToString
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 100
	mov	DWORD PTR _kLen$[ebp], 32		; 00000020H
; Line 102
	mov	DWORD PTR _len$[ebp], 31		; 0000001fH
; Line 103
	mov	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR _s$[ebp+eax], 0
; Line 104
	mov	ecx, DWORD PTR _len$[ebp]
	lea	esi, DWORD PTR _s$[ebp+ecx]
	mov	edx, DWORD PTR _id$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	lea	edx, DWORD PTR _s$[ebp+ecx]
	push	edx
	call	?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z ; NArchive::N7z::ConvertMethodIdToString_Back
	sub	esi, eax
	push	esi
	mov	ecx, DWORD PTR _res$[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ConvertMet
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@ConvertMet:
	DD	1
	DD	$LN4@ConvertMet
$LN4@ConvertMet:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN3@ConvertMet
$LN3@ConvertMet:
	DB	115					; 00000073H
	DB	0
?ConvertMethodIdToString@N7z@NArchive@@YGXAAVAString@@_K@Z ENDP ; NArchive::N7z::ConvertMethodIdToString
_TEXT	ENDS
EXTRN	__aullshr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_len$ = -4						; size = 4
_s$ = 8							; size = 4
_id$ = 12						; size = 8
?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z PROC ; NArchive::N7z::ConvertMethodIdToString_Back
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 88
	mov	DWORD PTR _len$[ebp], 0
$LN3@ConvertMet@2:
; Line 91
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$[ebp], eax
	mov	ecx, DWORD PTR _id$[ebp]
	and	ecx, 15					; 0000000fH
	push	ecx
	call	?GetHex@N7z@NArchive@@YGDI@Z		; NArchive::N7z::GetHex
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [edx], al
	mov	eax, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	cl, 4
	call	__aullshr
	mov	DWORD PTR _id$[ebp], eax
	mov	DWORD PTR _id$[ebp+4], edx
; Line 92
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _len$[ebp], eax
	mov	ecx, DWORD PTR _id$[ebp]
	and	ecx, 15					; 0000000fH
	push	ecx
	call	?GetHex@N7z@NArchive@@YGDI@Z		; NArchive::N7z::GetHex
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [edx], al
	mov	eax, DWORD PTR _id$[ebp]
	mov	edx, DWORD PTR _id$[ebp+4]
	mov	cl, 4
	call	__aullshr
	mov	DWORD PTR _id$[ebp], eax
	mov	DWORD PTR _id$[ebp+4], edx
; Line 94
	mov	eax, DWORD PTR _id$[ebp]
	or	eax, DWORD PTR _id$[ebp+4]
	jne	SHORT $LN3@ConvertMet@2
; Line 95
	mov	eax, DWORD PTR _len$[ebp]
	neg	eax
; Line 96
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z ENDP ; NArchive::N7z::ConvertMethodIdToString_Back
; Function compile flags: /Odtp /RTCsu
tv68 = -4						; size = 4
_value$ = 8						; size = 4
?GetHex@N7z@NArchive@@YGDI@Z PROC			; NArchive::N7z::GetHex
; Line 82
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 83
	cmp	DWORD PTR _value$[ebp], 10		; 0000000aH
	jae	SHORT $LN3@GetHex
	mov	eax, DWORD PTR _value$[ebp]
	add	eax, 48					; 00000030H
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@GetHex
$LN3@GetHex:
	mov	ecx, DWORD PTR _value$[ebp]
	add	ecx, 55					; 00000037H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@GetHex:
	mov	al, BYTE PTR tv68[ebp]
; Line 84
	mov	esp, ebp
	pop	ebp
	ret	4
?GetHex@N7z@NArchive@@YGDI@Z ENDP			; NArchive::N7z::GetHex
_TEXT	ENDS
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ	; NArchive::N7z::CDatabase::IsSolid
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	??A?$CRecordVector@_K@@QBEAB_KI@Z		; CRecordVector<unsigned __int64>::operator[]
PUBLIC	?Size@?$CRecordVector@_K@@QBEIXZ		; CRecordVector<unsigned __int64>::Size
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
PUBLIC	__$ArrayPad$
EXTRN	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::CPropVariant::Detach
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	?ConvertUInt32ToString@@YGXIPAD@Z:PROC		; ConvertUInt32ToString
EXTRN	?Add_Space_if_NotEmpty@AString@@QAEXXZ:PROC	; AString::Add_Space_if_NotEmpty
xdata$x	SEGMENT
__catchsym$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0
__tryblocktable$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 00H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$4
__unwindtable$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv302 = -152						; size = 4
tv236 = -145						; size = 1
tv235 = -144						; size = 4
tv234 = -140						; size = 4
tv233 = -136						; size = 4
tv232 = -132						; size = 4
tv67 = -128						; size = 4
tv231 = -124						; size = 4
$T72288 = -120						; size = 4
$T72287 = -116						; size = 4
_v$70978 = -112						; size = 4
_v$70973 = -108						; size = 4
_temp$70956 = -100					; size = 16
_id$70955 = -80						; size = 8
_i$70951 = -72						; size = 4
_pm$70950 = -68						; size = 4
_s$70949 = -60						; size = 12
_prop$70943 = -40					; size = 16
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_propID$ = 12						; size = 4
_value$ = 16						; size = 4
?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z PROC ; NArchive::N7z::CHandler::GetArchiveProperty
; Line 164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 136				; 00000088H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 166
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 168
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR tv231[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 169
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 13					; 0000000dH
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 59			; 0000003bH
	ja	$LN26@GetArchive@2
	mov	edx, DWORD PTR tv67[ebp]
	movzx	eax, BYTE PTR $LN38@GetArchive@2[edx]
	jmp	DWORD PTR $LN45@GetArchive@2[eax*4]
$LN25@GetArchive@2:
; Line 174
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR tv232[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 175
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 212				; 000000d4H
	mov	DWORD PTR _pm$70950[ebp], ecx
; Line 176
	mov	DWORD PTR _i$70951[ebp], 0
	jmp	SHORT $LN24@GetArchive@2
$LN23@GetArchive@2:
	mov	edx, DWORD PTR _i$70951[ebp]
	add	edx, 1
	mov	DWORD PTR _i$70951[ebp], edx
$LN24@GetArchive@2:
	mov	ecx, DWORD PTR _pm$70950[ebp]
	add	ecx, 8
	call	?Size@?$CRecordVector@_K@@QBEIXZ	; CRecordVector<unsigned __int64>::Size
	mov	DWORD PTR tv233[ebp], eax
	mov	eax, DWORD PTR _i$70951[ebp]
	cmp	eax, DWORD PTR tv233[ebp]
	jae	$LN22@GetArchive@2
; Line 178
	mov	ecx, DWORD PTR _i$70951[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pm$70950[ebp]
	add	ecx, 8
	call	??A?$CRecordVector@_K@@QBEAB_KI@Z	; CRecordVector<unsigned __int64>::operator[]
	mov	DWORD PTR tv234[ebp], eax
	mov	edx, DWORD PTR tv234[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _id$70955[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _id$70955[ebp+4], ecx
; Line 179
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	?Add_Space_if_NotEmpty@AString@@QAEXXZ	; AString::Add_Space_if_NotEmpty
; Line 181
	cmp	DWORD PTR _id$70955[ebp], 33		; 00000021H
	jne	SHORT $LN21@GetArchive@2
	cmp	DWORD PTR _id$70955[ebp+4], 0
	jne	SHORT $LN21@GetArchive@2
; Line 183
	push	OFFSET $SG70958
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 184
	mov	edx, DWORD PTR _pm$70950[ebp]
	movzx	eax, BYTE PTR [edx]
	and	eax, 1
	jne	SHORT $LN20@GetArchive@2
; Line 185
	lea	ecx, DWORD PTR _temp$70956[ebp]
	push	ecx
	mov	edx, DWORD PTR _pm$70950[ebp]
	movzx	eax, BYTE PTR [edx]
	sar	eax, 1
	add	eax, 12					; 0000000cH
	push	eax
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 186
	jmp	SHORT $LN19@GetArchive@2
$LN20@GetArchive@2:
; Line 187
	mov	ecx, DWORD PTR _pm$70950[ebp]
	movzx	ecx, BYTE PTR [ecx]
	sar	ecx, 1
	add	ecx, 11					; 0000000bH
	mov	edx, 3
	shl	edx, cl
	push	edx
	lea	eax, DWORD PTR _temp$70956[ebp]
	push	eax
	call	?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z ; NArchive::N7z::GetStringForSizeValue
$LN19@GetArchive@2:
; Line 188
	lea	ecx, DWORD PTR _temp$70956[ebp]
	push	ecx
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
	jmp	SHORT $LN18@GetArchive@2
$LN21@GetArchive@2:
; Line 190
	cmp	DWORD PTR _id$70955[ebp], 196865	; 00030101H
	jne	SHORT $LN17@GetArchive@2
	cmp	DWORD PTR _id$70955[ebp+4], 0
	jne	SHORT $LN17@GetArchive@2
; Line 192
	push	OFFSET $SG70963
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 193
	mov	edx, DWORD PTR _pm$70950[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _temp$70956[ebp]
	push	ecx
	call	?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z ; NArchive::N7z::GetStringForSizeValue
; Line 194
	lea	edx, DWORD PTR _temp$70956[ebp]
	push	edx
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 196
	jmp	SHORT $LN18@GetArchive@2
$LN17@GetArchive@2:
; Line 197
	mov	eax, DWORD PTR _id$70955[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _id$70955[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$70949[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddMethodName@CHandler@N7z@NArchive@@AAEXAAVAString@@_K@Z ; NArchive::N7z::CHandler::AddMethodName
$LN18@GetArchive@2:
; Line 198
	jmp	$LN23@GetArchive@2
$LN22@GetArchive@2:
; Line 199
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	mov	DWORD PTR tv235[ebp], eax
	mov	eax, DWORD PTR tv235[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@PBD@Z ; NWindows::NCOM::CPropVariant::operator=
; Line 200
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _s$70949[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	jmp	$LN26@GetArchive@2
$LN15@GetArchive@2:
; Line 202
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ ; NArchive::N7z::CDatabase::IsSolid
	mov	BYTE PTR tv236[ebp], al
	movzx	ecx, BYTE PTR tv236[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_N@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN26@GetArchive@2
$LN14@GetArchive@2:
; Line 203
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+148]
	push	eax
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN26@GetArchive@2
$LN13@GetArchive@2:
; Line 204
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+436]
	push	edx
	mov	eax, DWORD PTR [ecx+432]
	push	eax
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN26@GetArchive@2
$LN12@GetArchive@2:
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+444]
	push	edx
	mov	eax, DWORD PTR [ecx+440]
	push	eax
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
	jmp	$LN26@GetArchive@2
$LN11@GetArchive@2:
; Line 206
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv302[ebp], ecx
	mov	edx, DWORD PTR tv302[ebp]
	mov	eax, DWORD PTR tv302[ebp]
	mov	ecx, DWORD PTR [edx+376]
	or	ecx, DWORD PTR [eax+380]
	je	SHORT $LN10@GetArchive@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+380]
	push	eax
	mov	ecx, DWORD PTR [edx+376]
	push	ecx
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN10@GetArchive@2:
	jmp	$LN26@GetArchive@2
$LN9@GetArchive@2:
; Line 217
	mov	DWORD PTR _v$70973[ebp], 0
; Line 218
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+452]
	test	eax, eax
	je	SHORT $LN8@GetArchive@2
	mov	ecx, DWORD PTR _v$70973[ebp]
	or	ecx, 2
	mov	DWORD PTR _v$70973[ebp], ecx
$LN8@GetArchive@2:
; Line 219
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+453]
	test	eax, eax
	je	SHORT $LN7@GetArchive@2
	mov	ecx, DWORD PTR _v$70973[ebp]
	or	ecx, 256				; 00000100H
	mov	DWORD PTR _v$70973[ebp], ecx
$LN7@GetArchive@2:
; Line 220
	cmp	DWORD PTR _v$70973[ebp], 0
	je	SHORT $LN6@GetArchive@2
; Line 221
	mov	edx, DWORD PTR _v$70973[ebp]
	push	edx
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
$LN6@GetArchive@2:
; Line 222
	jmp	SHORT $LN26@GetArchive@2
$LN5@GetArchive@2:
; Line 227
	mov	DWORD PTR _v$70978[ebp], 0
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+448]
	test	ecx, ecx
	jne	SHORT $LN4@GetArchive@2
	mov	edx, DWORD PTR _v$70978[ebp]
	or	edx, 1
	mov	DWORD PTR _v$70978[ebp], edx
$LN4@GetArchive@2:
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+450]
	test	ecx, ecx
	je	SHORT $LN3@GetArchive@2
	mov	edx, DWORD PTR _v$70978[ebp]
	or	edx, 2
	mov	DWORD PTR _v$70978[ebp], edx
$LN3@GetArchive@2:
; Line 230
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+451]
	test	ecx, ecx
	je	SHORT $LN2@GetArchive@2
	mov	edx, DWORD PTR _v$70978[ebp]
	or	edx, 32					; 00000020H
	mov	DWORD PTR _v$70978[ebp], edx
$LN2@GetArchive@2:
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+454]
	test	ecx, ecx
	je	SHORT $LN1@GetArchive@2
	mov	edx, DWORD PTR _v$70978[ebp]
	or	edx, 256				; 00000100H
	mov	DWORD PTR _v$70978[ebp], edx
$LN1@GetArchive@2:
; Line 233
	mov	eax, DWORD PTR _v$70978[ebp]
	push	eax
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@I@Z ; NWindows::NCOM::CPropVariant::operator=
$LN26@GetArchive@2:
; Line 237
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	?Detach@CPropVariant@NCOM@NWindows@@QAEJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::CPropVariant::Detach
; Line 238
	mov	DWORD PTR $T72287[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _prop$70943[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T72287[ebp]
	jmp	SHORT $LN29@GetArchive@2
__catch$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$0:
; Line 240
	mov	DWORD PTR $T72288[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN36@GetArchive@2
	ret	0
	mov	eax, __tryend$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$1
	ret	0
__tryend$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN29@GetArchive@2
$LN36@GetArchive@2:
	mov	eax, DWORD PTR $T72288[ebp]
$LN29@GetArchive@2:
; Line 242
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@GetArchive@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN44@GetArchive@2:
	DD	3
	DD	$LN43@GetArchive@2
$LN43@GetArchive@2:
	DD	-40					; ffffffd8H
	DD	16					; 00000010H
	DD	$LN39@GetArchive@2
	DD	-60					; ffffffc4H
	DD	12					; 0000000cH
	DD	$LN40@GetArchive@2
	DD	-100					; ffffff9cH
	DD	16					; 00000010H
	DD	$LN41@GetArchive@2
$LN41@GetArchive@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN40@GetArchive@2:
	DB	115					; 00000073H
	DB	0
$LN39@GetArchive@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN45@GetArchive@2:
	DD	$LN15@GetArchive@2
	DD	$LN25@GetArchive@2
	DD	$LN11@GetArchive@2
	DD	$LN14@GetArchive@2
	DD	$LN12@GetArchive@2
	DD	$LN13@GetArchive@2
	DD	$LN5@GetArchive@2
	DD	$LN9@GetArchive@2
	DD	$LN26@GetArchive@2
$LN38@GetArchive@2:
	DB	0
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	2
	DB	8
	DB	3
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	4
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	6
	DB	7
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$2:
	lea	ecx, DWORD PTR _prop$70943[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__unwindfunclet$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z$3:
	lea	ecx, DWORD PTR _s$70949[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-156]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetArchiveProperty@CHandler@N7z@NArchive@@UAGJKPAUtagPROPVARIANT@@@Z ENDP ; NArchive::N7z::CHandler::GetArchiveProperty
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
_TEXT	ENDS
PUBLIC	??B?$CObjArray@I@@QBEPBIXZ			; CObjArray<unsigned int>::operator unsigned int const *
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ
_TEXT	SEGMENT
_i$70316 = -8						; size = 4
_this$ = -4						; size = 4
?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ PROC		; NArchive::N7z::CDatabase::IsSolid, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 153
	mov	DWORD PTR _i$70316[ebp], 0
	jmp	SHORT $LN4@IsSolid
$LN3@IsSolid:
	mov	eax, DWORD PTR _i$70316[ebp]
	add	eax, 1
	mov	DWORD PTR _i$70316[ebp], eax
$LN4@IsSolid:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$70316[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jae	SHORT $LN2@IsSolid
; Line 154
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	ecx, DWORD PTR _i$70316[ebp]
	cmp	DWORD PTR [eax+ecx*4], 1
	jbe	SHORT $LN1@IsSolid
; Line 155
	mov	al, 1
	jmp	SHORT $LN5@IsSolid
$LN1@IsSolid:
; Line 156
	jmp	SHORT $LN3@IsSolid
$LN2@IsSolid:
	xor	al, al
$LN5@IsSolid:
; Line 157
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSolid@CDatabase@N7z@NArchive@@QBE_NXZ ENDP		; NArchive::N7z::CDatabase::IsSolid
_TEXT	ENDS
PUBLIC	?MyStringLen@@YGIPBD@Z				; MyStringLen
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pos$ = -12						; size = 4
_c$ = -5						; size = 1
_i$ = -4						; size = 4
_s$ = 8							; size = 4
_val$ = 12						; size = 4
?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z PROC	; NArchive::N7z::GetStringForSizeValue
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 110
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@GetStringF
$LN11@GetStringF:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@GetStringF:
	cmp	DWORD PTR _i$[ebp], 31			; 0000001fH
	ja	$LN10@GetStringF
; Line 111
	mov	edx, 1
	mov	ecx, DWORD PTR _i$[ebp]
	shl	edx, cl
	cmp	edx, DWORD PTR _val$[ebp]
	jne	SHORT $LN9@GetStringF
; Line 113
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jae	SHORT $LN8@GetStringF
; Line 115
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 48					; 00000030H
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx], al
; Line 116
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+1], 0
; Line 117
	mov	eax, 1
	jmp	$LN13@GetStringF
$LN8@GetStringF:
; Line 119
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jae	SHORT $LN7@GetStringF
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 49			; 00000031H
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 38					; 00000026H
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+1], cl
	jmp	SHORT $LN6@GetStringF
$LN7@GetStringF:
; Line 120
	cmp	DWORD PTR _i$[ebp], 30			; 0000001eH
	jae	SHORT $LN5@GetStringF
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 50			; 00000032H
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+1], cl
	jmp	SHORT $LN6@GetStringF
$LN5@GetStringF:
; Line 121
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 51			; 00000033H
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 18					; 00000012H
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+1], cl
$LN6@GetStringF:
; Line 122
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+2], 0
; Line 123
	mov	eax, 2
	jmp	SHORT $LN13@GetStringF
$LN9@GetStringF:
; Line 124
	jmp	$LN11@GetStringF
$LN10@GetStringF:
; Line 125
	mov	BYTE PTR _c$[ebp], 98			; 00000062H
; Line 126
	mov	ecx, DWORD PTR _val$[ebp]
	and	ecx, 1048575				; 000fffffH
	jne	SHORT $LN3@GetStringF
	mov	edx, DWORD PTR _val$[ebp]
	shr	edx, 20					; 00000014H
	mov	DWORD PTR _val$[ebp], edx
	mov	BYTE PTR _c$[ebp], 109			; 0000006dH
	jmp	SHORT $LN2@GetStringF
$LN3@GetStringF:
; Line 127
	mov	eax, DWORD PTR _val$[ebp]
	and	eax, 1023				; 000003ffH
	jne	SHORT $LN2@GetStringF
	mov	ecx, DWORD PTR _val$[ebp]
	shr	ecx, 10					; 0000000aH
	mov	DWORD PTR _val$[ebp], ecx
	mov	BYTE PTR _c$[ebp], 107			; 0000006bH
$LN2@GetStringF:
; Line 128
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 129
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?MyStringLen@@YGIPBD@Z			; MyStringLen
	mov	DWORD PTR _pos$[ebp], eax
; Line 130
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _pos$[ebp]
	mov	al, BYTE PTR _c$[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 131
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _pos$[ebp]
	mov	BYTE PTR [edx], 0
; Line 132
	mov	eax, DWORD PTR _pos$[ebp]
$LN13@GetStringF:
; Line 133
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z ENDP	; NArchive::N7z::GetStringForSizeValue
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStringLen@@YGIPBD@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_s$ = 8							; size = 4
?MyStringLen@@YGIPBD@Z PROC				; MyStringLen, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 28
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MyStringLe
$LN2@MyStringLe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@MyStringLe:
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN1@MyStringLe
	jmp	SHORT $LN2@MyStringLe
$LN1@MyStringLe:
; Line 29
	mov	eax, DWORD PTR _i$[ebp]
; Line 30
	mov	esp, ebp
	pop	ebp
	ret	4
?MyStringLen@@YGIPBD@Z ENDP				; MyStringLen
_TEXT	ENDS
PUBLIC	?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z ; NArchive::N7z::CInByte2::SkipDataNoCheck
PUBLIC	?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ		; NArchive::N7z::CInByte2::GetPtr
PUBLIC	?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z		; NArchive::N7z::CInByte2::Init
PUBLIC	??B?$CBuffer@E@@QBEPBEXZ			; CBuffer<unsigned char>::operator unsigned char const *
PUBLIC	?IsFolderEncrypted@CHandler@N7z@NArchive@@ABE_NI@Z ; NArchive::N7z::CHandler::IsFolderEncrypted
EXTRN	?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ:PROC	; NArchive::N7z::CInByte2::ReadByte
EXTRN	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ:PROC	; NArchive::N7z::CInByte2::ReadNum
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_j$71011 = -64						; size = 4
_id64$71010 = -60					; size = 8
_longID$71009 = -52					; size = 4
_idSize$71008 = -48					; size = 4
_mainByte$71007 = -41					; size = 1
_numCoders$ = -40					; size = 4
_inByte$ = -32						; size = 12
_size$ = -16						; size = 4
_p$ = -12						; size = 4
_startPos$ = -8						; size = 4
_this$ = -4						; size = 4
_folderIndex$ = 8					; size = 4
?IsFolderEncrypted@CHandler@N7z@NArchive@@ABE_NI@Z PROC	; NArchive::N7z::CHandler::IsFolderEncrypted
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 253
	cmp	DWORD PTR _folderIndex$[ebp], -1
	jne	SHORT $LN9@IsFolderEn
; Line 254
	xor	al, al
	jmp	$LN10@IsFolderEn
$LN9@IsFolderEn:
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	ecx, DWORD PTR _folderIndex$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _startPos$[ebp], edx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 257
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	ecx, DWORD PTR _folderIndex$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4+4]
	sub	edx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _size$[ebp], edx
; Line 259
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z	; NArchive::N7z::CInByte2::Init
; Line 261
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ	; NArchive::N7z::CInByte2::ReadNum
	mov	DWORD PTR _numCoders$[ebp], eax
; Line 262
	jmp	SHORT $LN8@IsFolderEn
$LN7@IsFolderEn:
	mov	edx, DWORD PTR _numCoders$[ebp]
	sub	edx, 1
	mov	DWORD PTR _numCoders$[ebp], edx
$LN8@IsFolderEn:
	cmp	DWORD PTR _numCoders$[ebp], 0
	je	$LN6@IsFolderEn
; Line 264
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ	; NArchive::N7z::CInByte2::ReadByte
	mov	BYTE PTR _mainByte$71007[ebp], al
; Line 265
	movzx	eax, BYTE PTR _mainByte$71007[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _idSize$71008[ebp], eax
; Line 266
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ	; NArchive::N7z::CInByte2::GetPtr
	mov	DWORD PTR _longID$71009[ebp], eax
; Line 267
	mov	DWORD PTR _id64$71010[ebp], 0
	mov	DWORD PTR _id64$71010[ebp+4], 0
; Line 268
	mov	DWORD PTR _j$71011[ebp], 0
	jmp	SHORT $LN5@IsFolderEn
$LN4@IsFolderEn:
	mov	ecx, DWORD PTR _j$71011[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$71011[ebp], ecx
$LN5@IsFolderEn:
	mov	edx, DWORD PTR _j$71011[ebp]
	cmp	edx, DWORD PTR _idSize$71008[ebp]
	jae	SHORT $LN3@IsFolderEn
; Line 269
	mov	eax, DWORD PTR _id64$71010[ebp]
	mov	edx, DWORD PTR _id64$71010[ebp+4]
	mov	cl, 8
	call	__allshl
	mov	ecx, eax
	mov	esi, edx
	mov	edx, DWORD PTR _longID$71009[ebp]
	add	edx, DWORD PTR _j$71011[ebp]
	movzx	eax, BYTE PTR [edx]
	cdq
	or	ecx, eax
	or	esi, edx
	mov	DWORD PTR _id64$71010[ebp], ecx
	mov	DWORD PTR _id64$71010[ebp+4], esi
	jmp	SHORT $LN4@IsFolderEn
$LN3@IsFolderEn:
; Line 270
	mov	eax, DWORD PTR _idSize$71008[ebp]
	xor	ecx, ecx
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z ; NArchive::N7z::CInByte2::SkipDataNoCheck
; Line 271
	cmp	DWORD PTR _id64$71010[ebp], 116459265	; 06f10701H
	jne	SHORT $LN2@IsFolderEn
	cmp	DWORD PTR _id64$71010[ebp+4], 0
	jne	SHORT $LN2@IsFolderEn
; Line 272
	mov	al, 1
	jmp	SHORT $LN10@IsFolderEn
$LN2@IsFolderEn:
; Line 273
	movzx	edx, BYTE PTR _mainByte$71007[ebp]
	and	edx, 32					; 00000020H
	je	SHORT $LN1@IsFolderEn
; Line 274
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ	; NArchive::N7z::CInByte2::ReadNum
	xor	ecx, ecx
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z ; NArchive::N7z::CInByte2::SkipDataNoCheck
$LN1@IsFolderEn:
; Line 275
	jmp	$LN7@IsFolderEn
$LN6@IsFolderEn:
; Line 276
	xor	al, al
$LN10@IsFolderEn:
; Line 277
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@IsFolderEn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN14@IsFolderEn:
	DD	1
	DD	$LN13@IsFolderEn
$LN13@IsFolderEn:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN12@IsFolderEn
$LN12@IsFolderEn:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
?IsFolderEncrypted@CHandler@N7z@NArchive@@ABE_NI@Z ENDP	; NArchive::N7z::CHandler::IsFolderEncrypted
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ PROC		; NArchive::N7z::CInByte2::GetPtr, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 297
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ ENDP		; NArchive::N7z::CInByte2::GetPtr
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
_size$ = 12						; size = 4
?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z PROC		; NArchive::N7z::CInByte2::Init, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 301
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 302
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 303
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z ENDP		; NArchive::N7z::CInByte2::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 8
?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z PROC	; NArchive::N7z::CInByte2::SkipDataNoCheck, COMDAT
; _this$ = ecx
; Line 306
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	esp, ebp
	pop	ebp
	ret	8
?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z ENDP	; NArchive::N7z::CInByte2::SkipDataNoCheck
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numProps$ = 12						; size = 4
?GetNumRawProps@CHandler@N7z@NArchive@@UAGJPAI@Z PROC	; NArchive::N7z::CHandler::GetNumRawProps
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR _numProps$[ebp]
	mov	DWORD PTR [eax], 0
; Line 282
	xor	eax, eax
; Line 283
	pop	ebp
	ret	8
?GetNumRawProps@CHandler@N7z@NArchive@@UAGJPAI@Z ENDP	; NArchive::N7z::CHandler::GetNumRawProps
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_name$ = 16						; size = 4
_propID$ = 20						; size = 4
?GetRawPropInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAK@Z PROC ; NArchive::N7z::CHandler::GetRawPropInfo
; Line 286
	push	ebp
	mov	ebp, esp
; Line 287
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR [eax], 0
; Line 288
	mov	ecx, DWORD PTR _propID$[ebp]
	mov	DWORD PTR [ecx], 62			; 0000003eH
; Line 289
	xor	eax, eax
; Line 290
	pop	ebp
	ret	16					; 00000010H
?GetRawPropInfo@CHandler@N7z@NArchive@@UAGJIPAPA_WPAK@Z ENDP ; NArchive::N7z::CHandler::GetRawPropInfo
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_parent$ = 16						; size = 4
_parentType$ = 20					; size = 4
?GetParent@CHandler@N7z@NArchive@@UAGJIPAI0@Z PROC	; NArchive::N7z::CHandler::GetParent
; Line 293
	push	ebp
	mov	ebp, esp
; Line 299
	mov	eax, DWORD PTR _parentType$[ebp]
	mov	DWORD PTR [eax], 0
; Line 300
	mov	ecx, DWORD PTR _parent$[ebp]
	mov	DWORD PTR [ecx], -1
; Line 301
	xor	eax, eax
; Line 302
	pop	ebp
	ret	16					; 00000010H
?GetParent@CHandler@N7z@NArchive@@UAGJIPAI0@Z ENDP	; NArchive::N7z::CHandler::GetParent
_TEXT	ENDS
PUBLIC	??B?$CBuffer@E@@QAEPAEXZ			; CBuffer<unsigned char>::operator unsigned char *
PUBLIC	??B?$CObjArray@I@@QAEPAIXZ			; CObjArray<unsigned int>::operator unsigned int *
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_size$71049 = -8					; size = 4
_offset$71048 = -4					; size = 4
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_propID$ = 16						; size = 4
_data$ = 20						; size = 4
_dataSize$ = 24						; size = 4
_propType$ = 28						; size = 4
?GetRawProp@CHandler@N7z@NArchive@@UAGJIKPAPBXPAI1@Z PROC ; NArchive::N7z::CHandler::GetRawProp
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 306
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], 0
; Line 307
	mov	ecx, DWORD PTR _dataSize$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 308
	mov	edx, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [edx], 0
; Line 311
	cmp	DWORD PTR _propID$[ebp], 3
	jne	$LN3@GetRawProp
; Line 313
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	test	eax, eax
	je	SHORT $LN2@GetRawProp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 348				; 0000015cH
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	test	eax, eax
	je	SHORT $LN2@GetRawProp
; Line 315
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _offset$71048[ebp], edx
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4+4]
	sub	edx, DWORD PTR _offset$71048[ebp]
	shl	edx, 1
	mov	DWORD PTR _size$71049[ebp], edx
; Line 317
	cmp	DWORD PTR _size$71049[ebp], -2147483648	; 80000000H
	jae	SHORT $LN2@GetRawProp
; Line 319
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 348				; 0000015cH
	call	??B?$CBuffer@E@@QAEPAEXZ		; CBuffer<unsigned char>::operator unsigned char *
	mov	ecx, DWORD PTR _offset$71048[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], edx
; Line 320
	mov	ecx, DWORD PTR _dataSize$[ebp]
	mov	edx, DWORD PTR _size$71049[ebp]
	mov	DWORD PTR [ecx], edx
; Line 321
	mov	eax, DWORD PTR _propType$[ebp]
	mov	DWORD PTR [eax], 81			; 00000051H
$LN2@GetRawProp:
; Line 324
	xor	eax, eax
	jmp	SHORT $LN4@GetRawProp
$LN3@GetRawProp:
; Line 343
	xor	eax, eax
$LN4@GetRawProp:
; Line 344
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?GetRawProp@CHandler@N7z@NArchive@@UAGJIKPAPBXPAI1@Z ENDP ; NArchive::N7z::CHandler::GetRawProp
_TEXT	ENDS
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	?MyStringCopy@@YGXPADPBD@Z			; MyStringCopy
PUBLIC	?MyStpCpy@@YGPADPADPBD@Z			; MyStpCpy
PUBLIC	__$ArrayPad$
PUBLIC	?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z ; NArchive::N7z::CHandler::SetMethodToProp
EXTRN	?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z:PROC ; NWindows::NCOM::PropVarEm_Set_Str
EXTRN	?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z:PROC ; NWindows::NCOM::PropVariant_Clear
xdata$x	SEGMENT
__unwindtable$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z$0
__ehfuncinfo$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_i$71164 = -492						; size = 4
_len$71162 = -488					; size = 4
_methodName$71158 = -480				; size = 12
_dest$71155 = -464					; size = 4
_totalLen$71150 = -460					; size = 4
_propsLen$71149 = -456					; size = 4
_nameLen$71148 = -452					; size = 4
_numCyclesPower$71146 = -448				; size = 4
_firstByte$71145 = -441					; size = 1
_dest$71126 = -440					; size = 4
_order$71125 = -434					; size = 1
_p$71117 = -433						; size = 1
_lp$71106 = -432					; size = 4
_pb$71105 = -428					; size = 4
_lc$71104 = -424					; size = 4
_d$71102 = -420						; size = 4
_dest$71101 = -416					; size = 4
_dicSize$71097 = -412					; size = 4
_id$71092 = -408					; size = 4
_s$71089 = -400						; size = 32
_name$71088 = -364					; size = 4
_props$71086 = -360					; size = 4
_propsSize$71085 = -356					; size = 4
_j$71080 = -352						; size = 4
_id64$71079 = -348					; size = 8
_longID$71078 = -340					; size = 4
_idSize$71077 = -336					; size = 4
_mainByte$71076 = -330					; size = 1
_needSpace$ = -329					; size = 1
_numCoders$ = -328					; size = 4
_inByte$ = -320						; size = 12
_size$ = -304						; size = 4
_p$ = -300						; size = 4
_startPos$ = -296					; size = 4
_pos$ = -292						; size = 4
_temp$ = -284						; size = 256
_kTempSize$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_folderIndex$ = 8					; size = 4
_prop$ = 12						; size = 4
?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z PROC ; NArchive::N7z::CHandler::SetMethodToProp
; _this$ = ecx
; Line 349
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 480				; 000001e0H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-492]
	mov	ecx, 120				; 00000078H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 350
	mov	eax, DWORD PTR _prop$[ebp]
	push	eax
	call	?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::PropVariant_Clear
; Line 351
	cmp	DWORD PTR _folderIndex$[ebp], -1
	jne	SHORT $LN50@SetMethodT
; Line 352
	xor	eax, eax
	jmp	$LN51@SetMethodT
$LN50@SetMethodT:
; Line 354
	mov	DWORD PTR _kTempSize$[ebp], 256		; 00000100H
; Line 356
	mov	DWORD PTR _pos$[ebp], 256		; 00000100H
; Line 357
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
	mov	edx, DWORD PTR _pos$[ebp]
	mov	BYTE PTR _temp$[ebp+edx], 0
; Line 359
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	ecx, DWORD PTR _folderIndex$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _startPos$[ebp], edx
; Line 360
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 204				; 000000ccH
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 361
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	ecx, DWORD PTR _folderIndex$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4+4]
	sub	edx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _size$[ebp], edx
; Line 363
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?Init@CInByte2@N7z@NArchive@@QAEXPBEI@Z	; NArchive::N7z::CInByte2::Init
; Line 366
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ	; NArchive::N7z::CInByte2::ReadNum
	mov	DWORD PTR _numCoders$[ebp], eax
; Line 367
	mov	BYTE PTR _needSpace$[ebp], 0
; Line 369
	jmp	SHORT $LN49@SetMethodT
$LN48@SetMethodT:
	mov	edx, DWORD PTR _numCoders$[ebp]
	sub	edx, 1
	mov	DWORD PTR _numCoders$[ebp], edx
	mov	BYTE PTR _needSpace$[ebp], 1
$LN49@SetMethodT:
	cmp	DWORD PTR _numCoders$[ebp], 0
	je	$LN47@SetMethodT
; Line 371
	cmp	DWORD PTR _pos$[ebp], 32		; 00000020H
	jae	SHORT $LN46@SetMethodT
; Line 372
	jmp	$LN47@SetMethodT
$LN46@SetMethodT:
; Line 373
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadByte@CInByte2@N7z@NArchive@@QAEEXZ	; NArchive::N7z::CInByte2::ReadByte
	mov	BYTE PTR _mainByte$71076[ebp], al
; Line 374
	movzx	eax, BYTE PTR _mainByte$71076[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _idSize$71077[ebp], eax
; Line 375
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ	; NArchive::N7z::CInByte2::GetPtr
	mov	DWORD PTR _longID$71078[ebp], eax
; Line 376
	mov	DWORD PTR _id64$71079[ebp], 0
	mov	DWORD PTR _id64$71079[ebp+4], 0
; Line 377
	mov	DWORD PTR _j$71080[ebp], 0
	jmp	SHORT $LN45@SetMethodT
$LN44@SetMethodT:
	mov	ecx, DWORD PTR _j$71080[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$71080[ebp], ecx
$LN45@SetMethodT:
	mov	edx, DWORD PTR _j$71080[ebp]
	cmp	edx, DWORD PTR _idSize$71077[ebp]
	jae	SHORT $LN43@SetMethodT
; Line 378
	mov	eax, DWORD PTR _id64$71079[ebp]
	mov	edx, DWORD PTR _id64$71079[ebp+4]
	mov	cl, 8
	call	__allshl
	mov	ecx, eax
	mov	esi, edx
	mov	edx, DWORD PTR _longID$71078[ebp]
	add	edx, DWORD PTR _j$71080[ebp]
	movzx	eax, BYTE PTR [edx]
	cdq
	or	ecx, eax
	or	esi, edx
	mov	DWORD PTR _id64$71079[ebp], ecx
	mov	DWORD PTR _id64$71079[ebp+4], esi
	jmp	SHORT $LN44@SetMethodT
$LN43@SetMethodT:
; Line 379
	mov	eax, DWORD PTR _idSize$71077[ebp]
	xor	ecx, ecx
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z ; NArchive::N7z::CInByte2::SkipDataNoCheck
; Line 381
	movzx	edx, BYTE PTR _mainByte$71076[ebp]
	and	edx, 16					; 00000010H
	je	SHORT $LN42@SetMethodT
; Line 383
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ	; NArchive::N7z::CInByte2::ReadNum
; Line 384
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ	; NArchive::N7z::CInByte2::ReadNum
$LN42@SetMethodT:
; Line 387
	mov	DWORD PTR _propsSize$71085[ebp], 0
; Line 388
	mov	DWORD PTR _props$71086[ebp], 0
; Line 389
	movzx	eax, BYTE PTR _mainByte$71076[ebp]
	and	eax, 32					; 00000020H
	je	SHORT $LN41@SetMethodT
; Line 391
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?ReadNum@CInByte2@N7z@NArchive@@QAEIXZ	; NArchive::N7z::CInByte2::ReadNum
	mov	DWORD PTR _propsSize$71085[ebp], eax
; Line 392
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?GetPtr@CInByte2@N7z@NArchive@@QBEPBEXZ	; NArchive::N7z::CInByte2::GetPtr
	mov	DWORD PTR _props$71086[ebp], eax
; Line 393
	mov	ecx, DWORD PTR _propsSize$71085[ebp]
	xor	edx, edx
	push	edx
	push	ecx
	lea	ecx, DWORD PTR _inByte$[ebp]
	call	?SkipDataNoCheck@CInByte2@N7z@NArchive@@QAEX_K@Z ; NArchive::N7z::CInByte2::SkipDataNoCheck
$LN41@SetMethodT:
; Line 396
	mov	DWORD PTR _name$71088[ebp], 0
; Line 398
	mov	BYTE PTR _s$71089[ebp], 0
; Line 400
	cmp	DWORD PTR _id64$71079[ebp+4], 0
	ja	$LN40@SetMethodT
	jb	SHORT $LN54@SetMethodT
	cmp	DWORD PTR _id64$71079[ebp], -1
	ja	$LN40@SetMethodT
$LN54@SetMethodT:
; Line 402
	mov	eax, DWORD PTR _id64$71079[ebp]
	mov	DWORD PTR _id$71092[ebp], eax
; Line 403
	cmp	DWORD PTR _id$71092[ebp], 196865	; 00030101H
	jne	$LN39@SetMethodT
; Line 405
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71095
; Line 406
	cmp	DWORD PTR _propsSize$71085[ebp], 5
	jne	$LN38@SetMethodT
; Line 408
	mov	ecx, DWORD PTR _props$71086[ebp]
	mov	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR _dicSize$71097[ebp], edx
; Line 409
	mov	eax, DWORD PTR _dicSize$71097[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$71089[ebp]
	push	ecx
	call	?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z ; NArchive::N7z::GetStringForSizeValue
	lea	edx, DWORD PTR _s$71089[ebp+eax]
	mov	DWORD PTR _dest$71101[ebp], edx
; Line 410
	mov	eax, DWORD PTR _props$71086[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _d$71102[ebp], ecx
; Line 411
	cmp	DWORD PTR _d$71102[ebp], 93		; 0000005dH
	je	$LN38@SetMethodT
; Line 413
	mov	eax, DWORD PTR _d$71102[ebp]
	xor	edx, edx
	mov	ecx, 9
	div	ecx
	mov	DWORD PTR _lc$71104[ebp], edx
; Line 414
	mov	eax, DWORD PTR _d$71102[ebp]
	xor	edx, edx
	mov	ecx, 9
	div	ecx
	mov	DWORD PTR _d$71102[ebp], eax
; Line 415
	mov	eax, DWORD PTR _d$71102[ebp]
	xor	edx, edx
	mov	ecx, 5
	div	ecx
	mov	DWORD PTR _pb$71105[ebp], eax
; Line 416
	mov	eax, DWORD PTR _d$71102[ebp]
	xor	edx, edx
	mov	ecx, 5
	div	ecx
	mov	DWORD PTR _lp$71106[ebp], edx
; Line 417
	cmp	DWORD PTR _lc$71104[ebp], 3
	je	SHORT $LN36@SetMethodT
	mov	edx, DWORD PTR _lc$71104[ebp]
	push	edx
	push	OFFSET $SG71108
	mov	eax, DWORD PTR _dest$71101[ebp]
	push	eax
	call	?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z	; NArchive::N7z::AddProp32
	mov	DWORD PTR _dest$71101[ebp], eax
$LN36@SetMethodT:
; Line 418
	cmp	DWORD PTR _lp$71106[ebp], 0
	je	SHORT $LN35@SetMethodT
	mov	ecx, DWORD PTR _lp$71106[ebp]
	push	ecx
	push	OFFSET $SG71110
	mov	edx, DWORD PTR _dest$71101[ebp]
	push	edx
	call	?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z	; NArchive::N7z::AddProp32
	mov	DWORD PTR _dest$71101[ebp], eax
$LN35@SetMethodT:
; Line 419
	cmp	DWORD PTR _pb$71105[ebp], 2
	je	SHORT $LN38@SetMethodT
	mov	eax, DWORD PTR _pb$71105[ebp]
	push	eax
	push	OFFSET $SG71112
	mov	ecx, DWORD PTR _dest$71101[ebp]
	push	ecx
	call	?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z	; NArchive::N7z::AddProp32
	mov	DWORD PTR _dest$71101[ebp], eax
$LN38@SetMethodT:
; Line 422
	jmp	$LN40@SetMethodT
$LN39@SetMethodT:
; Line 423
	cmp	DWORD PTR _id$71092[ebp], 33		; 00000021H
	jne	SHORT $LN32@SetMethodT
; Line 425
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71115
; Line 426
	cmp	DWORD PTR _propsSize$71085[ebp], 1
	jne	SHORT $LN31@SetMethodT
; Line 428
	mov	edx, DWORD PTR _props$71086[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _p$71117[ebp], al
; Line 429
	movzx	ecx, BYTE PTR _p$71117[ebp]
	and	ecx, 1
	jne	SHORT $LN30@SetMethodT
; Line 430
	lea	edx, DWORD PTR _s$71089[ebp]
	push	edx
	movzx	eax, BYTE PTR _p$71117[ebp]
	sar	eax, 1
	add	eax, 12					; 0000000cH
	push	eax
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 431
	jmp	SHORT $LN31@SetMethodT
$LN30@SetMethodT:
; Line 432
	movzx	ecx, BYTE PTR _p$71117[ebp]
	sar	ecx, 1
	add	ecx, 11					; 0000000bH
	mov	edx, 3
	shl	edx, cl
	push	edx
	lea	eax, DWORD PTR _s$71089[ebp]
	push	eax
	call	?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z ; NArchive::N7z::GetStringForSizeValue
$LN31@SetMethodT:
; Line 434
	jmp	$LN40@SetMethodT
$LN32@SetMethodT:
; Line 435
	cmp	DWORD PTR _id$71092[ebp], 197633	; 00030401H
	jne	$LN27@SetMethodT
; Line 437
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71123
; Line 438
	cmp	DWORD PTR _propsSize$71085[ebp], 5
	jne	$LN26@SetMethodT
; Line 440
	mov	ecx, DWORD PTR _props$71086[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _order$71125[ebp], dl
; Line 441
	lea	eax, DWORD PTR _s$71089[ebp]
	mov	DWORD PTR _dest$71126[ebp], eax
; Line 442
	mov	ecx, DWORD PTR _dest$71126[ebp]
	mov	BYTE PTR [ecx], 111			; 0000006fH
	mov	edx, DWORD PTR _dest$71126[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$71126[ebp], edx
; Line 443
	mov	eax, DWORD PTR _dest$71126[ebp]
	push	eax
	movzx	ecx, BYTE PTR _order$71125[ebp]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 444
	mov	edx, DWORD PTR _dest$71126[ebp]
	push	edx
	call	?MyStringLen@@YGIPBD@Z			; MyStringLen
	add	eax, DWORD PTR _dest$71126[ebp]
	mov	DWORD PTR _dest$71126[ebp], eax
; Line 445
	push	OFFSET $SG71127
	mov	eax, DWORD PTR _dest$71126[ebp]
	push	eax
	call	?MyStpCpy@@YGPADPADPBD@Z		; MyStpCpy
	mov	DWORD PTR _dest$71126[ebp], eax
; Line 446
	mov	ecx, DWORD PTR _props$71086[ebp]
	mov	edx, DWORD PTR [ecx+1]
	push	edx
	mov	eax, DWORD PTR _dest$71126[ebp]
	push	eax
	call	?GetStringForSizeValue@N7z@NArchive@@YGIPADI@Z ; NArchive::N7z::GetStringForSizeValue
$LN26@SetMethodT:
; Line 448
	jmp	$LN40@SetMethodT
$LN27@SetMethodT:
; Line 449
	cmp	DWORD PTR _id$71092[ebp], 3
	jne	SHORT $LN24@SetMethodT
; Line 451
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71132
; Line 452
	cmp	DWORD PTR _propsSize$71085[ebp], 1
	jne	SHORT $LN23@SetMethodT
; Line 453
	lea	ecx, DWORD PTR _s$71089[ebp]
	push	ecx
	mov	edx, DWORD PTR _props$71086[ebp]
	movzx	eax, BYTE PTR [edx]
	add	eax, 1
	push	eax
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
$LN23@SetMethodT:
; Line 454
	jmp	$LN40@SetMethodT
$LN24@SetMethodT:
; Line 455
	cmp	DWORD PTR _id$71092[ebp], 50528539	; 0303011bH
	jne	SHORT $LN21@SetMethodT
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71137
	jmp	SHORT $LN40@SetMethodT
$LN21@SetMethodT:
; Line 456
	cmp	DWORD PTR _id$71092[ebp], 50528515	; 03030103H
	jne	SHORT $LN19@SetMethodT
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71140
	jmp	SHORT $LN40@SetMethodT
$LN19@SetMethodT:
; Line 457
	cmp	DWORD PTR _id$71092[ebp], 116459265	; 06f10701H
	jne	SHORT $LN40@SetMethodT
; Line 459
	mov	DWORD PTR _name$71088[ebp], OFFSET $SG71143
; Line 460
	cmp	DWORD PTR _propsSize$71085[ebp], 1
	jb	SHORT $LN40@SetMethodT
; Line 462
	mov	ecx, DWORD PTR _props$71086[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _firstByte$71145[ebp], dl
; Line 463
	movzx	eax, BYTE PTR _firstByte$71145[ebp]
	and	eax, 63					; 0000003fH
	mov	DWORD PTR _numCyclesPower$71146[ebp], eax
; Line 464
	lea	ecx, DWORD PTR _s$71089[ebp]
	push	ecx
	mov	edx, DWORD PTR _numCyclesPower$71146[ebp]
	push	edx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
$LN40@SetMethodT:
; Line 469
	cmp	DWORD PTR _name$71088[ebp], 0
	je	$LN15@SetMethodT
; Line 471
	mov	eax, DWORD PTR _name$71088[ebp]
	push	eax
	call	?MyStringLen@@YGIPBD@Z			; MyStringLen
	mov	DWORD PTR _nameLen$71148[ebp], eax
; Line 472
	lea	ecx, DWORD PTR _s$71089[ebp]
	push	ecx
	call	?MyStringLen@@YGIPBD@Z			; MyStringLen
	mov	DWORD PTR _propsLen$71149[ebp], eax
; Line 473
	mov	edx, DWORD PTR _nameLen$71148[ebp]
	add	edx, DWORD PTR _propsLen$71149[ebp]
	mov	DWORD PTR _totalLen$71150[ebp], edx
; Line 474
	cmp	DWORD PTR _propsLen$71149[ebp], 0
	je	SHORT $LN14@SetMethodT
; Line 475
	mov	eax, DWORD PTR _totalLen$71150[ebp]
	add	eax, 1
	mov	DWORD PTR _totalLen$71150[ebp], eax
$LN14@SetMethodT:
; Line 476
	movzx	ecx, BYTE PTR _needSpace$[ebp]
	test	ecx, ecx
	je	SHORT $LN13@SetMethodT
; Line 477
	mov	edx, DWORD PTR _totalLen$71150[ebp]
	add	edx, 1
	mov	DWORD PTR _totalLen$71150[ebp], edx
$LN13@SetMethodT:
; Line 478
	mov	eax, DWORD PTR _totalLen$71150[ebp]
	add	eax, 5
	cmp	eax, DWORD PTR _pos$[ebp]
	jb	SHORT $LN12@SetMethodT
; Line 479
	jmp	$LN47@SetMethodT
$LN12@SetMethodT:
; Line 480
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, DWORD PTR _totalLen$71150[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 481
	mov	edx, DWORD PTR _name$71088[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	call	?MyStringCopy@@YGXPADPBD@Z		; MyStringCopy
; Line 482
	cmp	DWORD PTR _propsLen$71149[ebp], 0
	je	SHORT $LN11@SetMethodT
; Line 484
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR _temp$[ebp+edx]
	add	eax, DWORD PTR _nameLen$71148[ebp]
	mov	DWORD PTR _dest$71155[ebp], eax
; Line 485
	mov	ecx, DWORD PTR _dest$71155[ebp]
	mov	BYTE PTR [ecx], 58			; 0000003aH
	mov	edx, DWORD PTR _dest$71155[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$71155[ebp], edx
; Line 486
	lea	eax, DWORD PTR _s$71089[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$71155[ebp]
	push	ecx
	call	?MyStringCopy@@YGXPADPBD@Z		; MyStringCopy
$LN11@SetMethodT:
; Line 488
	movzx	edx, BYTE PTR _needSpace$[ebp]
	test	edx, edx
	je	SHORT $LN10@SetMethodT
; Line 489
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR _totalLen$71150[ebp]
	mov	BYTE PTR _temp$[ebp+eax-1], 32		; 00000020H
$LN10@SetMethodT:
; Line 491
	jmp	$LN9@SetMethodT
$LN15@SetMethodT:
; Line 493
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 494
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	push	ecx
	mov	edx, DWORD PTR _id64$71079[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id64$71079[ebp]
	push	eax
	call	?FindMethod@@YG_N_KAAVAString@@@Z	; FindMethod
; Line 495
	movzx	ecx, BYTE PTR _needSpace$[ebp]
	test	ecx, ecx
	je	SHORT $LN8@SetMethodT
; Line 496
	mov	edx, DWORD PTR _pos$[ebp]
	sub	edx, 1
	mov	DWORD PTR _pos$[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	mov	BYTE PTR _temp$[ebp+eax], 32		; 00000020H
$LN8@SetMethodT:
; Line 497
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@SetMethodT
; Line 498
	mov	edx, DWORD PTR _id64$71079[ebp+4]
	push	edx
	mov	eax, DWORD PTR _id64$71079[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	call	?ConvertMethodIdToString_Back@N7z@NArchive@@YGIPAD_K@Z ; NArchive::N7z::ConvertMethodIdToString_Back
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _pos$[ebp], ecx
; Line 499
	jmp	$LN6@SetMethodT
$LN7@SetMethodT:
; Line 501
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	DWORD PTR _len$71162[ebp], eax
; Line 502
	mov	edx, DWORD PTR _len$71162[ebp]
	add	edx, 5
	cmp	edx, DWORD PTR _pos$[ebp]
	jbe	SHORT $LN5@SetMethodT
; Line 503
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
	jmp	SHORT $LN47@SetMethodT
$LN5@SetMethodT:
; Line 504
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, DWORD PTR _len$71162[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 505
	mov	DWORD PTR _i$71164[ebp], 0
	jmp	SHORT $LN4@SetMethodT
$LN3@SetMethodT:
	mov	ecx, DWORD PTR _i$71164[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$71164[ebp], ecx
$LN4@SetMethodT:
	mov	edx, DWORD PTR _i$71164[ebp]
	cmp	edx, DWORD PTR _len$71162[ebp]
	jae	SHORT $LN6@SetMethodT
; Line 506
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, DWORD PTR _i$71164[ebp]
	mov	edx, DWORD PTR _i$71164[ebp]
	mov	al, BYTE PTR [eax+edx]
	mov	BYTE PTR _temp$[ebp+ecx], al
	jmp	SHORT $LN3@SetMethodT
$LN6@SetMethodT:
; Line 508
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN9@SetMethodT:
; Line 509
	jmp	$LN48@SetMethodT
$LN47@SetMethodT:
; Line 511
	cmp	DWORD PTR _numCoders$[ebp], 0
	je	SHORT $LN1@SetMethodT
	cmp	DWORD PTR _pos$[ebp], 4
	jb	SHORT $LN1@SetMethodT
; Line 513
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
	mov	edx, DWORD PTR _pos$[ebp]
	mov	BYTE PTR _temp$[ebp+edx], 32		; 00000020H
; Line 514
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	BYTE PTR _temp$[ebp+ecx], 46		; 0000002eH
; Line 515
	mov	edx, DWORD PTR _pos$[ebp]
	sub	edx, 1
	mov	DWORD PTR _pos$[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	mov	BYTE PTR _temp$[ebp+eax], 46		; 0000002eH
; Line 516
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
	mov	edx, DWORD PTR _pos$[ebp]
	mov	BYTE PTR _temp$[ebp+edx], 46		; 0000002eH
$LN1@SetMethodT:
; Line 519
	mov	eax, DWORD PTR _pos$[ebp]
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _prop$[ebp]
	push	edx
	call	?PropVarEm_Set_Str@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@PBD@Z ; NWindows::NCOM::PropVarEm_Set_Str
$LN51@SetMethodT:
; Line 521
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN61@SetMethodT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 492				; 000001ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN61@SetMethodT:
	DD	4
	DD	$LN60@SetMethodT
$LN60@SetMethodT:
	DD	-284					; fffffee4H
	DD	256					; 00000100H
	DD	$LN55@SetMethodT
	DD	-320					; fffffec0H
	DD	12					; 0000000cH
	DD	$LN56@SetMethodT
	DD	-400					; fffffe70H
	DD	32					; 00000020H
	DD	$LN57@SetMethodT
	DD	-480					; fffffe20H
	DD	12					; 0000000cH
	DD	$LN58@SetMethodT
$LN58@SetMethodT:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN57@SetMethodT:
	DB	115					; 00000073H
	DB	0
$LN56@SetMethodT:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN55@SetMethodT:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z$0:
	lea	ecx, DWORD PTR _methodName$71158[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-492]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z ENDP ; NArchive::N7z::CHandler::SetMethodToProp
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MyStringCopy@@YGXPADPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
?MyStringCopy@@YGXPADPBD@Z PROC				; MyStringCopy, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN2@MyStringCo:
; Line 34
	mov	eax, DWORD PTR _dest$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _dest$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$[ebp], edx
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, 1
	mov	DWORD PTR _src$[ebp], eax
	test	ecx, ecx
	je	SHORT $LN5@MyStringCo
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN6@MyStringCo
$LN5@MyStringCo:
	mov	DWORD PTR tv68[ebp], 0
$LN6@MyStringCo:
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@MyStringCo
	jmp	SHORT $LN2@MyStringCo
$LN3@MyStringCo:
; Line 35
	mov	esp, ebp
	pop	ebp
	ret	8
?MyStringCopy@@YGXPADPBD@Z ENDP				; MyStringCopy
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStpCpy@@YGPADPADPBD@Z
_TEXT	SEGMENT
_c$66137 = -1						; size = 1
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
?MyStpCpy@@YGPADPADPBD@Z PROC				; MyStpCpy, COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN3@MyStpCpy:
; Line 41
	mov	eax, DWORD PTR _src$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$66137[ebp], cl
; Line 42
	mov	edx, DWORD PTR _dest$[ebp]
	mov	al, BYTE PTR _c$66137[ebp]
	mov	BYTE PTR [edx], al
; Line 43
	movsx	ecx, BYTE PTR _c$66137[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@MyStpCpy
; Line 44
	mov	eax, DWORD PTR _dest$[ebp]
	jmp	SHORT $LN4@MyStpCpy
$LN1@MyStpCpy:
; Line 45
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 1
	mov	DWORD PTR _src$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, 1
	mov	DWORD PTR _dest$[ebp], eax
; Line 47
	jmp	SHORT $LN3@MyStpCpy
$LN4@MyStpCpy:
; Line 48
	mov	esp, ebp
	pop	ebp
	ret	8
?MyStpCpy@@YGPADPADPBD@Z ENDP				; MyStpCpy
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_s$ = 8							; size = 4
_name$ = 12						; size = 4
_v$ = 16						; size = 4
?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z PROC		; NArchive::N7z::AddProp32
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 144
	push	ebp
	mov	ebp, esp
; Line 145
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 58			; 0000003aH
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
; Line 146
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?MyStpCpy@@YGPADPADPBD@Z		; MyStpCpy
	mov	DWORD PTR _s$[ebp], eax
; Line 147
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 148
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?MyStringLen@@YGIPBD@Z			; MyStringLen
	add	eax, DWORD PTR _s$[ebp]
; Line 149
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?AddProp32@N7z@NArchive@@YGPADPADPBDI@Z ENDP		; NArchive::N7z::AddProp32
_TEXT	ENDS
PUBLIC	?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z	; NArchive::N7z::CDatabase::IsItemAnti
PUBLIC	?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z ; NWindows::NCOM::PropVarEm_Set_UInt32
PUBLIC	?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z ; NArchive::N7z::CUInt64DefVector::GetItem
PUBLIC	?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z ; NArchive::N7z::CDbEx::GetFolderFullPackSize
PUBLIC	?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_UInt64
PUBLIC	?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z ; NWindows::NCOM::PropVarEm_Set_Bool
PUBLIC	??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z ; CRecordVector<NArchive::N7z::CFileItem>::operator[]
EXTRN	?GetPath_Prop@CDatabase@N7z@NArchive@@QBEJIPAUtagPROPVARIANT@@@Z:PROC ; NArchive::N7z::CDatabase::GetPath_Prop
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv74 = -36						; size = 4
_folderIndex$71204 = -32				; size = 4
_v$71190 = -24						; size = 8
_folderIndex$71184 = -12				; size = 4
_index2$ = -8						; size = 4
_item$ = -4						; size = 4
_this$ = 8						; size = 4
_index$ = 12						; size = 4
_propID$ = 16						; size = 4
_value$ = 20						; size = 4
?GetProperty@CHandler@N7z@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z PROC ; NArchive::N7z::CHandler::GetProperty
; Line 526
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 527
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PropVariant_Clear@NCOM@NWindows@@YGJPAUtagPROPVARIANT@@@Z ; NWindows::NCOM::PropVariant_Clear
; Line 538
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z ; CRecordVector<NArchive::N7z::CFileItem>::operator[]
	mov	DWORD PTR _item$[ebp], eax
; Line 539
	mov	edx, DWORD PTR _index$[ebp]
	mov	DWORD PTR _index2$[ebp], edx
; Line 541
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	sub	ecx, 3
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 26			; 0000001aH
	ja	$LN22@GetPropert
	mov	edx, DWORD PTR tv74[ebp]
	movzx	eax, BYTE PTR $LN26@GetPropert[edx]
	jmp	DWORD PTR $LN30@GetPropert[eax*4]
$LN21@GetPropert:
; Line 543
	mov	ecx, DWORD PTR _item$[ebp]
	movzx	edx, BYTE PTR [ecx+17]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z ; NWindows::NCOM::PropVarEm_Set_Bool
	jmp	$LN22@GetPropert
$LN20@GetPropert:
; Line 546
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_UInt64
; Line 548
	jmp	$LN22@GetPropert
$LN19@GetPropert:
; Line 554
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	edx, DWORD PTR _index2$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _folderIndex$71184[ebp], eax
; Line 555
	cmp	DWORD PTR _folderIndex$71184[ebp], -1
	je	SHORT $LN18@GetPropert
; Line 557
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 424				; 000001a8H
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	ecx, DWORD PTR _folderIndex$71184[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	cmp	edx, DWORD PTR _index2$[ebp]
	jne	SHORT $LN17@GetPropert
; Line 558
	mov	eax, DWORD PTR _folderIndex$71184[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z ; NArchive::N7z::CDbEx::GetFolderFullPackSize
	push	edx
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_UInt64
$LN17@GetPropert:
; Line 564
	jmp	SHORT $LN16@GetPropert
$LN18@GetPropert:
; Line 565
	push	0
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_UInt64
$LN16@GetPropert:
; Line 567
	jmp	$LN22@GetPropert
$LN15@GetPropert:
; Line 570
	lea	eax, DWORD PTR _v$71190[ebp]
	push	eax
	mov	ecx, DWORD PTR _index2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 316				; 0000013cH
	call	?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z ; NArchive::N7z::CUInt64DefVector::GetItem
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN14@GetPropert
	mov	eax, DWORD PTR _v$71190[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _v$71190[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_UInt64
$LN14@GetPropert:
	jmp	$LN22@GetPropert
$LN13@GetPropert:
; Line 571
	mov	eax, DWORD PTR _index2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 244				; 000000f4H
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z ; NArchive::N7z::SetFileTimeProp_From_UInt64Def
	jmp	$LN22@GetPropert
$LN12@GetPropert:
; Line 572
	mov	eax, DWORD PTR _index2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z ; NArchive::N7z::SetFileTimeProp_From_UInt64Def
	jmp	$LN22@GetPropert
$LN11@GetPropert:
; Line 573
	mov	eax, DWORD PTR _index2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z ; NArchive::N7z::SetFileTimeProp_From_UInt64Def
	jmp	$LN22@GetPropert
$LN10@GetPropert:
; Line 574
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, BYTE PTR [eax+19]
	test	ecx, ecx
	je	SHORT $LN9@GetPropert
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z ; NWindows::NCOM::PropVarEm_Set_UInt32
$LN9@GetPropert:
	jmp	$LN22@GetPropert
$LN8@GetPropert:
; Line 575
	mov	edx, DWORD PTR _item$[ebp]
	movzx	eax, BYTE PTR [edx+18]
	test	eax, eax
	je	SHORT $LN7@GetPropert
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z ; NWindows::NCOM::PropVarEm_Set_UInt32
$LN7@GetPropert:
	jmp	$LN22@GetPropert
$LN6@GetPropert:
; Line 576
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	ecx, DWORD PTR _index2$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsFolderEncrypted@CHandler@N7z@NArchive@@ABE_NI@Z ; NArchive::N7z::CHandler::IsFolderEncrypted
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z ; NWindows::NCOM::PropVarEm_Set_Bool
	jmp	$LN22@GetPropert
$LN5@GetPropert:
; Line 577
	mov	edx, DWORD PTR _index2$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z ; NArchive::N7z::CDatabase::IsItemAnti
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z ; NWindows::NCOM::PropVarEm_Set_Bool
	jmp	SHORT $LN22@GetPropert
$LN4@GetPropert:
; Line 593
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?GetPath_Prop@CDatabase@N7z@NArchive@@QBEJIPAUtagPROPVARIANT@@@Z ; NArchive::N7z::CDatabase::GetPath_Prop
	jmp	SHORT $LN24@GetPropert
$LN3@GetPropert:
; Line 597
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	edx, DWORD PTR _index2$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMethodToProp@CHandler@N7z@NArchive@@ABEJIPAUtagPROPVARIANT@@@Z ; NArchive::N7z::CHandler::SetMethodToProp
	jmp	SHORT $LN24@GetPropert
$LN2@GetPropert:
; Line 600
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 428				; 000001acH
	call	??B?$CObjArray@I@@QAEPAIXZ		; CObjArray<unsigned int>::operator unsigned int *
	mov	ecx, DWORD PTR _index2$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _folderIndex$71204[ebp], edx
; Line 601
	cmp	DWORD PTR _folderIndex$71204[ebp], -1
	je	SHORT $LN22@GetPropert
; Line 602
	mov	eax, DWORD PTR _folderIndex$71204[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	call	?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z ; NWindows::NCOM::PropVarEm_Set_UInt32
$LN22@GetPropert:
; Line 631
	xor	eax, eax
$LN24@GetPropert:
; Line 633
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@GetPropert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN29@GetPropert:
	DD	1
	DD	$LN28@GetPropert
$LN28@GetPropert:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN27@GetPropert
$LN27@GetPropert:
	DB	118					; 00000076H
	DB	0
	npad	2
$LN30@GetPropert:
	DD	$LN4@GetPropert
	DD	$LN21@GetPropert
	DD	$LN20@GetPropert
	DD	$LN19@GetPropert
	DD	$LN10@GetPropert
	DD	$LN13@GetPropert
	DD	$LN12@GetPropert
	DD	$LN11@GetPropert
	DD	$LN6@GetPropert
	DD	$LN8@GetPropert
	DD	$LN5@GetPropert
	DD	$LN3@GetPropert
	DD	$LN2@GetPropert
	DD	$LN15@GetPropert
	DD	$LN22@GetPropert
$LN26@GetPropert:
	DB	0
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	8
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	9
	DB	14					; 0000000eH
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	14					; 0000000eH
	DB	12					; 0000000cH
	DB	14					; 0000000eH
	DB	13					; 0000000dH
?GetProperty@CHandler@N7z@NArchive@@UAGJIKPAUtagPROPVARIANT@@@Z ENDP ; NArchive::N7z::CHandler::GetProperty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_v$ = 12						; size = 4
?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z PROC ; NWindows::NCOM::PropVarEm_Set_UInt32, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 19
	push	ebp
	mov	ebp, esp
; Line 20
	mov	eax, 19					; 00000013H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 21
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 22
	pop	ebp
	ret	8
?PropVarEm_Set_UInt32@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@I@Z ENDP ; NWindows::NCOM::PropVarEm_Set_UInt32
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_v$ = 12						; size = 8
?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z PROC ; NWindows::NCOM::PropVarEm_Set_UInt64, COMDAT
; Line 25
	push	ebp
	mov	ebp, esp
; Line 26
	mov	eax, 21					; 00000015H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 27
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _v$[ebp+4]
	mov	DWORD PTR [edx+12], ecx
; Line 28
	pop	ebp
	ret	12					; 0000000cH
?PropVarEm_Set_UInt64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ENDP ; NWindows::NCOM::PropVarEm_Set_UInt64
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_b$ = 12						; size = 1
?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z PROC ; NWindows::NCOM::PropVarEm_Set_Bool, COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
; Line 39
	mov	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 40
	movzx	edx, BYTE PTR _b$[ebp]
	neg	edx
	sbb	edx, edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	WORD PTR [eax+8], dx
; Line 41
	pop	ebp
	ret	8
?PropVarEm_Set_Bool@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_N@Z ENDP ; NWindows::NCOM::PropVarEm_Set_Bool
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@_N@@QBEAB_NI@Z		; CRecordVector<bool>::operator[]
PUBLIC	?Size@?$CRecordVector@_N@@QBEIXZ		; CRecordVector<bool>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_value$ = 12						; size = 4
?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z PROC ; NArchive::N7z::CUInt64DefVector::GetItem, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zitem.h
; Line 134
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jae	SHORT $LN1@GetItem
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@_N@@QBEAB_NI@Z	; CRecordVector<bool>::operator[]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@GetItem
; Line 137
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$CRecordVector@_K@@QBEAB_KI@Z	; CRecordVector<unsigned __int64>::operator[]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], eax
; Line 138
	mov	al, 1
	jmp	SHORT $LN2@GetItem
$LN1@GetItem:
; Line 140
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0
; Line 141
	xor	al, al
$LN2@GetItem:
; Line 142
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z ENDP ; NArchive::N7z::CUInt64DefVector::GetItem
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z PROC	; NArchive::N7z::CDatabase::IsItemAnti, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	?Size@?$CRecordVector@_N@@QBEIXZ	; CRecordVector<bool>::Size
	cmp	DWORD PTR _index$[ebp], eax
	jae	SHORT $LN3@IsItemAnti
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??A?$CRecordVector@_N@@QBEAB_NI@Z	; CRecordVector<bool>::operator[]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@IsItemAnti
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@IsItemAnti
$LN3@IsItemAnti:
	mov	DWORD PTR tv74[ebp], 0
$LN4@IsItemAnti:
	mov	al, BYTE PTR tv74[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsItemAnti@CDatabase@N7z@NArchive@@QBE_NI@Z ENDP	; NArchive::N7z::CDatabase::IsItemAnti
_TEXT	ENDS
PUBLIC	??B?$CObjArray@_K@@QBEPB_KXZ			; CObjArray<unsigned __int64>::operator unsigned __int64 const *
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_folderIndex$ = 8					; size = 4
?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z PROC ; NArchive::N7z::CDbEx::GetFolderFullPackSize, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 268
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$CObjArray@_K@@QBEPB_KXZ		; CObjArray<unsigned __int64>::operator unsigned __int64 const *
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	ecx, DWORD PTR _folderIndex$[ebp]
	mov	edi, DWORD PTR [eax+ecx*4+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$CObjArray@_K@@QBEPB_KXZ		; CObjArray<unsigned __int64>::operator unsigned __int64 const *
	mov	ebx, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??B?$CObjArray@I@@QBEPBIXZ		; CObjArray<unsigned int>::operator unsigned int const *
	mov	edx, DWORD PTR _folderIndex$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR [esi+edi*8]
	sub	ecx, DWORD PTR [ebx+eax*8]
	mov	edx, DWORD PTR [esi+edi*8+4]
	sbb	edx, DWORD PTR [ebx+eax*8+4]
	mov	eax, ecx
; Line 269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFolderFullPackSize@CDbEx@N7z@NArchive@@QBE_KI@Z ENDP ; NArchive::N7z::CDbEx::GetFolderFullPackSize
_TEXT	ENDS
PUBLIC	?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_FileTime64
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_value$ = -12						; size = 8
_prop$ = 8						; size = 4
_v$ = 12						; size = 4
_index$ = 16						; size = 4
?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z PROC ; NArchive::N7z::SetFileTimeProp_From_UInt64Def
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 247
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _v$[ebp]
	call	?GetItem@CUInt64DefVector@N7z@NArchive@@QBE_NIAA_K@Z ; NArchive::N7z::CUInt64DefVector::GetItem
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@SetFileTim
; Line 248
	mov	eax, DWORD PTR _value$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prop$[ebp]
	push	edx
	call	?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ; NWindows::NCOM::PropVarEm_Set_FileTime64
$LN2@SetFileTim:
; Line 249
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFileTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@SetFileTim:
	DD	1
	DD	$LN5@SetFileTim
$LN5@SetFileTim:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN4@SetFileTim
$LN4@SetFileTim:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?SetFileTimeProp_From_UInt64Def@N7z@NArchive@@YGXPAUtagPROPVARIANT@@ABUCUInt64DefVector@12@H@Z ENDP ; NArchive::N7z::SetFileTimeProp_From_UInt64Def
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
_v$ = 12						; size = 8
?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z PROC ; NWindows::NCOM::PropVarEm_Set_FileTime64, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 31
	push	ebp
	mov	ebp, esp
; Line 32
	mov	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx], ax
; Line 33
	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 34
	mov	eax, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR _v$[ebp+4]
	mov	cl, 32					; 00000020H
	call	__aullshr
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 35
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?PropVarEm_Set_FileTime64@NCOM@NWindows@@YGXPAUtagPROPVARIANT@@_K@Z ENDP ; NWindows::NCOM::PropVarEm_Set_FileTime64
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
PUBLIC	??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *
PUBLIC	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ	; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
PUBLIC	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
PUBLIC	??1CInArchive@N7z@NArchive@@QAE@XZ		; NArchive::N7z::CInArchive::~CInArchive
PUBLIC	??0CInArchive@N7z@NArchive@@QAE@_N@Z		; NArchive::N7z::CInArchive::CInArchive
PUBLIC	??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>
PUBLIC	??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator&
PUBLIC	??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>
PUBLIC	??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z ; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>
PUBLIC	?Clear@?$CRecordVector@_K@@QAEXXZ		; CRecordVector<unsigned __int64>::Clear
PUBLIC	__$ArrayPad$
EXTRN	?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ:PROC	; NArchive::N7z::CHandler::FillPopIDs
EXTRN	?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z:PROC ; NArchive::N7z::CInArchive::ReadDatabase
EXTRN	?Open@CInArchive@N7z@NArchive@@QAEJPAUIInStream@@PB_K@Z:PROC ; NArchive::N7z::CInArchive::Open
EXTRN	_IID_ICryptoGetTextPassword:BYTE
xdata$x	SEGMENT
__catchsym$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2
__catchsym$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0
__ehfuncinfo$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 01H
	DD	04H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$7
	DD	00H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$8
__unwindtable$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$6
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv176 = -232						; size = 4
tv175 = -228						; size = 4
tv174 = -224						; size = 4
tv173 = -220						; size = 4
tv172 = -216						; size = 4
tv74 = -212						; size = 4
$T72389 = -208						; size = 4
$T72388 = -204						; size = 4
$T72387 = -200						; size = 4
$T72386 = -196						; size = 4
___result__$71302 = -192				; size = 4
_result$71301 = -188					; size = 4
___result__$71298 = -184				; size = 4
_archive$71297 = -176					; size = 128
_getTextPassword$71291 = -40				; size = 4
_openArchiveCallbackTemp$71253 = -28			; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_stream$ = 12						; size = 4
_maxCheckStartPosition$ = 16				; size = 4
_openArchiveCallback$ = 20				; size = 4
?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z PROC ; NArchive::N7z::CHandler::Open
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 638
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 639
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 640
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 642
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	?Clear@?$CRecordVector@_K@@QAEXXZ	; CRecordVector<unsigned __int64>::Clear
; Line 646
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 647
	mov	ecx, DWORD PTR _openArchiveCallback$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _openArchiveCallbackTemp$71253[ebp]
	call	??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z ; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 650
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	call	??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>
	mov	DWORD PTR tv74[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 651
	cmp	DWORD PTR _openArchiveCallback$[ebp], 0
	je	SHORT $LN3@Open
; Line 652
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	call	??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator&
	mov	DWORD PTR tv172[ebp], eax
	mov	edx, DWORD PTR tv172[ebp]
	push	edx
	push	OFFSET _IID_ICryptoGetTextPassword
	lea	ecx, DWORD PTR _openArchiveCallbackTemp$71253[ebp]
	call	??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>
$LN3@Open:
; Line 661
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+131]
	push	ecx
	lea	ecx, DWORD PTR _archive$71297[ebp]
	call	??0CInArchive@N7z@NArchive@@QAE@_N@Z	; NArchive::N7z::CInArchive::CInArchive
	mov	DWORD PTR tv173[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
; Line 662
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+448], 0
; Line 663
	mov	eax, DWORD PTR _maxCheckStartPosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _archive$71297[ebp]
	call	?Open@CInArchive@N7z@NArchive@@QAEJPAUIInStream@@PB_K@Z ; NArchive::N7z::CInArchive::Open
	mov	DWORD PTR tv174[ebp], eax
	mov	edx, DWORD PTR tv174[ebp]
	mov	DWORD PTR ___result__$71298[ebp], edx
	cmp	DWORD PTR ___result__$71298[ebp], 0
	je	SHORT $LN2@Open
	mov	eax, DWORD PTR ___result__$71298[ebp]
	mov	DWORD PTR $T72386[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _archive$71297[ebp]
	call	??1CInArchive@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	call	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openArchiveCallbackTemp$71253[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
	mov	eax, DWORD PTR $T72386[ebp]
	jmp	$LN6@Open
$LN2@Open:
; Line 664
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+448], 1
; Line 672
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	call	??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *
	mov	DWORD PTR tv175[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 460				; 000001ccH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 457				; 000001c9H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	push	ecx
	mov	edx, DWORD PTR tv175[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 144				; 00000090H
	push	eax
	lea	ecx, DWORD PTR _archive$71297[ebp]
	call	?ReadDatabase@CInArchive@N7z@NArchive@@QAEJAAUCDbEx@23@PAUICryptoGetTextPassword@@AA_N2AAVUString@@@Z ; NArchive::N7z::CInArchive::ReadDatabase
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR tv176[ebp]
	mov	DWORD PTR _result$71301[ebp], ecx
; Line 673
	mov	edx, DWORD PTR _result$71301[ebp]
	mov	DWORD PTR ___result__$71302[ebp], edx
	cmp	DWORD PTR ___result__$71302[ebp], 0
	je	SHORT $LN1@Open
	mov	eax, DWORD PTR ___result__$71302[ebp]
	mov	DWORD PTR $T72387[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _archive$71297[ebp]
	call	??1CInArchive@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	call	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openArchiveCallbackTemp$71253[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
	mov	eax, DWORD PTR $T72387[ebp]
	jmp	$LN6@Open
$LN1@Open:
; Line 675
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ; CMyComPtr<IInStream>::operator=
; Line 676
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	lea	ecx, DWORD PTR _archive$71297[ebp]
	call	??1CInArchive@N7z@NArchive@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	call	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _openArchiveCallbackTemp$71253[ebp]
	call	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
	jmp	SHORT $LN9@Open
__catch$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$0:
; Line 679
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 683
	mov	DWORD PTR $T72388[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN16@Open
	ret	0
; Line 684
	mov	eax, $LN9@Open
	ret	0
$LN9@Open:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN15@Open
$LN16@Open:
; Line 683
	mov	eax, DWORD PTR $T72388[ebp]
	jmp	SHORT $LN6@Open
$LN15@Open:
; Line 687
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FillPopIDs@CHandler@N7z@NArchive@@AAEXXZ ; NArchive::N7z::CHandler::FillPopIDs
; Line 689
	xor	eax, eax
	jmp	SHORT $LN6@Open
__catch$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$2:
; Line 690
	mov	DWORD PTR $T72389[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN18@Open
	ret	0
	mov	eax, __tryend$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$3
	ret	0
__tryend$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN6@Open
$LN18@Open:
	mov	eax, DWORD PTR $T72389[ebp]
$LN6@Open:
; Line 691
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@Open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN26@Open:
	DD	3
	DD	$LN25@Open
$LN25@Open:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN21@Open
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN22@Open
	DD	-176					; ffffff50H
	DD	128					; 00000080H
	DD	$LN23@Open
$LN23@Open:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	0
$LN22@Open:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN21@Open:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$4:
	lea	ecx, DWORD PTR _openArchiveCallbackTemp$71253[ebp]
	jmp	??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$5:
	lea	ecx, DWORD PTR _getTextPassword$71291[ebp]
	jmp	??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
__unwindfunclet$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z$6:
	lea	ecx, DWORD PTR _archive$71297[ebp]
	jmp	??1CInArchive@N7z@NArchive@@QAE@XZ
__ehhandler$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Open@CHandler@N7z@NArchive@@UAGJPAUIInStream@@PB_KPAUIArchiveOpenCallback@@@Z ENDP ; NArchive::N7z::CHandler::Open
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInArchive@N7z@NArchive@@QAE@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_useMixerMT$ = 8					; size = 1
??0CInArchive@N7z@NArchive@@QAE@_N@Z PROC		; NArchive::N7z::CInArchive::CInArchive, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::CMyComPtr<IInStream>
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _useMixerMT$[ebp]
	mov	BYTE PTR [ecx+120], dl
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CInArchive@N7z@NArchive@@QAE@_N@Z ENDP		; NArchive::N7z::CInArchive::CInArchive
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CInArchive@N7z@NArchive@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInArchive@N7z@NArchive@@QAE@XZ PROC			; NArchive::N7z::CInArchive::~CInArchive, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInArchive@N7z@NArchive@@QAE@XZ ENDP			; NArchive::N7z::CInArchive::~CInArchive
_TEXT	ENDS
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?Clear@CDbEx@N7z@NArchive@@QAEXXZ		; NArchive::N7z::CDbEx::Clear
PUBLIC	?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ	; CMyComPtr<IInStream>::Release
xdata$x	SEGMENT
__catchsym$?Close@CHandler@N7z@NArchive@@UAGJXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Close@CHandler@N7z@NArchive@@UAGJXZ$0
__unwindtable$?Close@CHandler@N7z@NArchive@@UAGJXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Close@CHandler@N7z@NArchive@@UAGJXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Close@CHandler@N7z@NArchive@@UAGJXZ$2
__ehfuncinfo$?Close@CHandler@N7z@NArchive@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Close@CHandler@N7z@NArchive@@UAGJXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Close@CHandler@N7z@NArchive@@UAGJXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T72422 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
?Close@CHandler@N7z@NArchive@@UAGJXZ PROC		; NArchive::N7z::CHandler::Close
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zhandler.cpp
; Line 694
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Close@CHandler@N7z@NArchive@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 695
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 696
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ ; CMyComPtr<IInStream>::Release
; Line 697
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	?Clear@CDbEx@N7z@NArchive@@QAEXXZ	; NArchive::N7z::CDbEx::Clear
; Line 699
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+456], 0
; Line 700
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+457], 0
; Line 701
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 460				; 000001ccH
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 703
	xor	eax, eax
	jmp	SHORT $LN2@Close
__catch$?Close@CHandler@N7z@NArchive@@UAGJXZ$0:
; Line 704
	mov	DWORD PTR $T72422[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@Close
	ret	0
	mov	eax, __tryend$?Close@CHandler@N7z@NArchive@@UAGJXZ$1
	ret	0
__tryend$?Close@CHandler@N7z@NArchive@@UAGJXZ$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@Close
$LN7@Close:
	mov	eax, DWORD PTR $T72422[ebp]
$LN2@Close:
; Line 705
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Close@CHandler@N7z@NArchive@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Close@CHandler@N7z@NArchive@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Close@CHandler@N7z@NArchive@@UAGJXZ ENDP		; NArchive::N7z::CHandler::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
PUBLIC	?Free@?$CObjArray@I@@QAEXXZ			; CObjArray<unsigned int>::Free
PUBLIC	?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ	; NArchive::N7z::CInArchiveInfo::Clear
PUBLIC	?Clear@CDatabase@N7z@NArchive@@QAEXXZ		; NArchive::N7z::CDatabase::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CDbEx@N7z@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CDbEx@N7z@NArchive@@QAEXXZ PROC			; NArchive::N7z::CDbEx::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+304], 0
; Line 230
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+305], 0
; Line 232
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+306], 0
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+307], 0
; Line 236
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+308], 0
; Line 237
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+310], 0
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+309], 0
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CDatabase@N7z@NArchive@@QAEXXZ	; NArchive::N7z::CDatabase::Clear
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 224				; 000000e0H
	call	?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ ; NArchive::N7z::CInArchiveInfo::Clear
; Line 249
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 284				; 0000011cH
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 252
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+288], 0
	mov	DWORD PTR [ecx+292], 0
; Line 253
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], 0
	mov	DWORD PTR [edx+300], 0
; Line 254
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CDbEx@N7z@NArchive@@QAEXXZ ENDP			; NArchive::N7z::CDbEx::Clear
_TEXT	ENDS
PUBLIC	?Clear@?$CRecordVector@_N@@QAEXXZ		; CRecordVector<bool>::Clear
PUBLIC	?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ	; NArchive::N7z::CUInt64DefVector::Clear
PUBLIC	?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::N7z::CFileItem>::Clear
PUBLIC	?Free@?$CBuffer@E@@QAEXXZ			; CBuffer<unsigned char>::Free
PUBLIC	?Clear@CFolders@N7z@NArchive@@QAEXXZ		; NArchive::N7z::CFolders::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CDatabase@N7z@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CDatabase@N7z@NArchive@@QAEXXZ PROC		; NArchive::N7z::CDatabase::Clear, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CFolders@N7z@NArchive@@QAEXXZ	; NArchive::N7z::CFolders::Clear
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 142
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ ; CRecordVector<NArchive::N7z::CFileItem>::Clear
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ ; NArchive::N7z::CUInt64DefVector::Clear
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ ; NArchive::N7z::CUInt64DefVector::Clear
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ ; NArchive::N7z::CUInt64DefVector::Clear
; Line 146
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 172				; 000000acH
	call	?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ ; NArchive::N7z::CUInt64DefVector::Clear
; Line 147
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	?Clear@?$CRecordVector@_N@@QAEXXZ	; CRecordVector<bool>::Clear
; Line 149
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CDatabase@N7z@NArchive@@QAEXXZ ENDP		; NArchive::N7z::CDatabase::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ PROC	; NArchive::N7z::CUInt64DefVector::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zitem.h
; Line 122
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@_N@@QAEXXZ	; CRecordVector<bool>::Clear
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@?$CRecordVector@_K@@QAEXXZ	; CRecordVector<unsigned __int64>::Clear
; Line 125
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CUInt64DefVector@N7z@NArchive@@QAEXXZ ENDP	; NArchive::N7z::CUInt64DefVector::Clear
_TEXT	ENDS
PUBLIC	?Free@?$CObjArray@E@@QAEXXZ			; CObjArray<unsigned char>::Free
PUBLIC	?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ	; NArchive::N7z::CUInt32DefVector::Clear
PUBLIC	?Free@?$CObjArray@_K@@QAEXXZ			; CObjArray<unsigned __int64>::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CFolders@N7z@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CFolders@N7z@NArchive@@QAEXXZ PROC		; NArchive::N7z::CFolders::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 91
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Free@?$CObjArray@_K@@QAEXXZ		; CObjArray<unsigned __int64>::Free
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 97
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ ; NArchive::N7z::CUInt32DefVector::Clear
; Line 98
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Free@?$CObjArray@_K@@QAEXXZ		; CObjArray<unsigned __int64>::Free
; Line 100
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 101
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?Free@?$CObjArray@E@@QAEXXZ		; CObjArray<unsigned char>::Free
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Free@?$CObjArray@I@@QAEXXZ		; CObjArray<unsigned int>::Free
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Free@?$CBuffer@E@@QAEXXZ		; CBuffer<unsigned char>::Free
; Line 105
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CFolders@N7z@NArchive@@QAEXXZ ENDP		; NArchive::N7z::CFolders::Clear
_TEXT	ENDS
PUBLIC	?Clear@?$CRecordVector@I@@QAEXXZ		; CRecordVector<unsigned int>::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ PROC	; NArchive::N7z::CUInt32DefVector::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zitem.h
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@_N@@QAEXXZ	; CRecordVector<bool>::Clear
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Clear@?$CRecordVector@I@@QAEXXZ	; CRecordVector<unsigned int>::Clear
; Line 105
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CUInt32DefVector@N7z@NArchive@@QAEXXZ ENDP	; NArchive::N7z::CUInt32DefVector::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ PROC		; NArchive::N7z::CInArchiveInfo::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\7z\7zin.h
; Line 183
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
; Line 185
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
; Line 186
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
	mov	DWORD PTR [edx+28], 0
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	DWORD PTR [eax+36], 0
; Line 188
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?Clear@?$CRecordVector@_K@@QAEXXZ	; CRecordVector<unsigned __int64>::Clear
; Line 189
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CInArchiveInfo@N7z@NArchive@@QAEXXZ ENDP		; NArchive::N7z::CInArchiveInfo::Clear
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@UCProp@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCProp@@@@QAE@XZ PROC		; CObjectVector<CProp>::CObjectVector<CProp>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCProp@@@@QAE@XZ ENDP		; CObjectVector<CProp>::CObjectVector<CProp>
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GCProp@@QAEPAXI@Z				; CProp::`scalar deleting destructor'
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCProp@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCProp@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCProp@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T72453 = -28						; size = 4
$T72452 = -24						; size = 4
_i$71337 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCProp@@@@QAE@XZ PROC		; CObjectVector<CProp>::~CObjectVector<CProp>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$71337[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$71337[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$71337[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$71337[ebp], eax
	mov	ecx, DWORD PTR _i$71337[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T72453[ebp], edx
	mov	eax, DWORD PTR $T72453[ebp]
	mov	DWORD PTR $T72452[ebp], eax
	cmp	DWORD PTR $T72452[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T72452[ebp]
	call	??_GCProp@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCProp@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCProp@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCProp@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCProp@@@@QAE@XZ ENDP		; CObjectVector<CProp>::~CObjectVector<CProp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ PROC	; CObjectVector<COneMethodInfo>::CObjectVector<COneMethodInfo>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ ENDP	; CObjectVector<COneMethodInfo>::CObjectVector<COneMethodInfo>
_TEXT	ENDS
PUBLIC	??_GCOneMethodInfo@@QAEPAXI@Z			; COneMethodInfo::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T72469 = -28						; size = 4
$T72468 = -24						; size = 4
_i$71362 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ PROC	; CObjectVector<COneMethodInfo>::~CObjectVector<COneMethodInfo>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$71362[ebp], eax
$LN2@CObjectVec@2:
	cmp	DWORD PTR _i$71362[ebp], 0
	je	SHORT $LN3@CObjectVec@2
; Line 489
	mov	eax, DWORD PTR _i$71362[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$71362[ebp], eax
	mov	ecx, DWORD PTR _i$71362[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T72469[ebp], edx
	mov	eax, DWORD PTR $T72469[ebp]
	mov	DWORD PTR $T72468[ebp], eax
	cmp	DWORD PTR $T72468[ebp], 0
	je	SHORT $LN5@CObjectVec@2
	push	1
	mov	ecx, DWORD PTR $T72468[ebp]
	call	??_GCOneMethodInfo@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@2
$LN5@CObjectVec@2:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@2:
	jmp	SHORT $LN2@CObjectVec@2
$LN3@CObjectVec@2:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VCOneMethodInfo@@@@QAE@XZ ENDP	; CObjectVector<COneMethodInfo>::~CObjectVector<COneMethodInfo>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ PROC	; CRecordVector<NArchive::N7z::CBond2>::CRecordVector<NArchive::N7z::CBond2>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ENDP	; CRecordVector<NArchive::N7z::CBond2>::CRecordVector<NArchive::N7z::CBond2>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
$T72483 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ PROC	; CRecordVector<NArchive::N7z::CBond2>::~CRecordVector<NArchive::N7z::CBond2>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72483[ebp], ecx
	mov	edx, DWORD PTR $T72483[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCBond2@N7z@NArchive@@@@QAE@XZ ENDP	; CRecordVector<NArchive::N7z::CBond2>::~CRecordVector<NArchive::N7z::CBond2>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CBuffer@E@@QAEXXZ
_TEXT	SEGMENT
$T72486 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CBuffer@E@@QAEXXZ PROC				; CBuffer<unsigned char>::Free, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Free
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T72486[ebp], edx
	mov	eax, DWORD PTR $T72486[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN1@Free:
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 22
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CBuffer@E@@QAEXXZ ENDP				; CBuffer<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CBuffer@E@@QAE@XZ
_TEXT	SEGMENT
$T72491 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CBuffer@E@@QAE@XZ PROC				; CBuffer<unsigned char>::~CBuffer<unsigned char>, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72491[ebp], ecx
	mov	edx, DWORD PTR $T72491[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBuffer@E@@QAE@XZ ENDP				; CBuffer<unsigned char>::~CBuffer<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QAEPAEXZ PROC				; CBuffer<unsigned char>::operator unsigned char *, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QAEPAEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QBEPBEXZ PROC				; CBuffer<unsigned char>::operator unsigned char const *, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QBEPBEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@_N@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@_N@@QAE@XZ PROC			; CRecordVector<bool>::CRecordVector<bool>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@_N@@QAE@XZ ENDP			; CRecordVector<bool>::CRecordVector<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@_N@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@_N@@QBEIXZ PROC			; CRecordVector<bool>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@_N@@QBEIXZ ENDP			; CRecordVector<bool>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@_N@@QAE@XZ
_TEXT	SEGMENT
$T72502 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@_N@@QAE@XZ PROC			; CRecordVector<bool>::~CRecordVector<bool>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72502[ebp], ecx
	mov	edx, DWORD PTR $T72502[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@_N@@QAE@XZ ENDP			; CRecordVector<bool>::~CRecordVector<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@_N@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@_N@@QAEXXZ PROC			; CRecordVector<bool>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@_N@@QAEXXZ ENDP			; CRecordVector<bool>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@_N@@QBEAB_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@_N@@QBEAB_NI@Z PROC			; CRecordVector<bool>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _index$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@_N@@QBEAB_NI@Z ENDP			; CRecordVector<bool>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::CRecordVector<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@I@@QAE@XZ
_TEXT	SEGMENT
$T72511 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@I@@QAE@XZ PROC			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72511[ebp], ecx
	mov	edx, DWORD PTR $T72511[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@I@@QAE@XZ ENDP			; CRecordVector<unsigned int>::~CRecordVector<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@I@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@I@@QAEXXZ PROC			; CRecordVector<unsigned int>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@I@@QAEXXZ ENDP			; CRecordVector<unsigned int>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@_K@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@_K@@QAE@XZ PROC			; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@_K@@QAE@XZ ENDP			; CRecordVector<unsigned __int64>::CRecordVector<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@_K@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@_K@@QBEIXZ PROC			; CRecordVector<unsigned __int64>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@_K@@QBEIXZ ENDP			; CRecordVector<unsigned __int64>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@_K@@QAE@XZ
_TEXT	SEGMENT
$T72520 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@_K@@QAE@XZ PROC			; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72520[ebp], ecx
	mov	edx, DWORD PTR $T72520[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@_K@@QAE@XZ ENDP			; CRecordVector<unsigned __int64>::~CRecordVector<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@_K@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@_K@@QAEXXZ PROC			; CRecordVector<unsigned __int64>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@_K@@QAEXXZ ENDP			; CRecordVector<unsigned __int64>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@_K@@QBEAB_KI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@_K@@QBEAB_KI@Z PROC			; CRecordVector<unsigned __int64>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@_K@@QBEAB_KI@Z ENDP			; CRecordVector<unsigned __int64>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CObjArray@_K@@QAEXXZ
_TEXT	SEGMENT
$T72527 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CObjArray@_K@@QAEXXZ PROC			; CObjArray<unsigned __int64>::Free, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72527[ebp], ecx
	mov	edx, DWORD PTR $T72527[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 138
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CObjArray@_K@@QAEXXZ ENDP			; CObjArray<unsigned __int64>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@_K@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjArray@_K@@QAE@XZ PROC				; CObjArray<unsigned __int64>::CObjArray<unsigned __int64>, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjArray@_K@@QAE@XZ ENDP				; CObjArray<unsigned __int64>::CObjArray<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@_K@@QAE@XZ
_TEXT	SEGMENT
$T72532 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@_K@@QAE@XZ PROC				; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72532[ebp], ecx
	mov	edx, DWORD PTR $T72532[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@_K@@QAE@XZ ENDP				; CObjArray<unsigned __int64>::~CObjArray<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@_K@@QBEPB_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@_K@@QBEPB_KXZ PROC			; CObjArray<unsigned __int64>::operator unsigned __int64 const *, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@_K@@QBEPB_KXZ ENDP			; CObjArray<unsigned __int64>::operator unsigned __int64 const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CObjArray@I@@QAEXXZ
_TEXT	SEGMENT
$T72537 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CObjArray@I@@QAEXXZ PROC			; CObjArray<unsigned int>::Free, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72537[ebp], ecx
	mov	edx, DWORD PTR $T72537[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 138
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CObjArray@I@@QAEXXZ ENDP			; CObjArray<unsigned int>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@I@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjArray@I@@QAE@XZ PROC				; CObjArray<unsigned int>::CObjArray<unsigned int>, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjArray@I@@QAE@XZ ENDP				; CObjArray<unsigned int>::CObjArray<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@I@@QAE@XZ
_TEXT	SEGMENT
$T72542 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@I@@QAE@XZ PROC				; CObjArray<unsigned int>::~CObjArray<unsigned int>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72542[ebp], ecx
	mov	edx, DWORD PTR $T72542[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@I@@QAE@XZ ENDP				; CObjArray<unsigned int>::~CObjArray<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@I@@QAEPAIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@I@@QAEPAIXZ PROC				; CObjArray<unsigned int>::operator unsigned int *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@I@@QAEPAIXZ ENDP				; CObjArray<unsigned int>::operator unsigned int *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@I@@QBEPBIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@I@@QBEPBIXZ PROC				; CObjArray<unsigned int>::operator unsigned int const *, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@I@@QBEPBIXZ ENDP				; CObjArray<unsigned int>::operator unsigned int const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Free@?$CObjArray@E@@QAEXXZ
_TEXT	SEGMENT
$T72549 = -8						; size = 4
_this$ = -4						; size = 4
?Free@?$CObjArray@E@@QAEXXZ PROC			; CObjArray<unsigned char>::Free, COMDAT
; _this$ = ecx
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72549[ebp], ecx
	mov	edx, DWORD PTR $T72549[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 138
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@?$CObjArray@E@@QAEXXZ ENDP			; CObjArray<unsigned char>::Free
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@E@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjArray@E@@QAE@XZ PROC				; CObjArray<unsigned char>::CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjArray@E@@QAE@XZ ENDP				; CObjArray<unsigned char>::CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@E@@QAE@XZ
_TEXT	SEGMENT
$T72554 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@E@@QAE@XZ PROC				; CObjArray<unsigned char>::~CObjArray<unsigned char>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72554[ebp], ecx
	mov	edx, DWORD PTR $T72554[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@E@@QAE@XZ ENDP				; CObjArray<unsigned char>::~CObjArray<unsigned char>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::N7z::CFileItem>::CRecordVector<NArchive::N7z::CFileItem>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::N7z::CFileItem>::CRecordVector<NArchive::N7z::CFileItem>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ PROC ; CRecordVector<NArchive::N7z::CFileItem>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QBEIXZ ENDP ; CRecordVector<NArchive::N7z::CFileItem>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ
_TEXT	SEGMENT
$T72561 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ PROC ; CRecordVector<NArchive::N7z::CFileItem>::~CRecordVector<NArchive::N7z::CFileItem>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72561[ebp], ecx
	mov	edx, DWORD PTR $T72561[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAE@XZ ENDP ; CRecordVector<NArchive::N7z::CFileItem>::~CRecordVector<NArchive::N7z::CFileItem>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ PROC ; CRecordVector<NArchive::N7z::CFileItem>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEXXZ ENDP ; CRecordVector<NArchive::N7z::CFileItem>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z PROC ; CRecordVector<NArchive::N7z::CFileItem>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@UCFileItem@N7z@NArchive@@@@QAEAAUCFileItem@N7z@NArchive@@I@Z ENDP ; CRecordVector<NArchive::N7z::CFileItem>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ PROC		; CMyComPtr<IInStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UIInStream@@@@QAEXXZ ENDP		; CMyComPtr<IInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z PROC ; CMyComPtr<IInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIInStream@@@@QAEPAUIInStream@@PAU1@@Z ENDP ; CMyComPtr<IInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z PROC ; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@PAUIArchiveOpenCallback@@@Z ENDP ; CMyComPtr<IArchiveOpenCallback>::CMyComPtr<IArchiveOpenCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ PROC	; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveOpenCallback@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveOpenCallback>::~CMyComPtr<IArchiveOpenCallback>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ PROC	; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoGetTextPassword>::CMyComPtr<ICryptoGetTextPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ PROC	; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICryptoGetTextPassword@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoGetTextPassword>::~CMyComPtr<ICryptoGetTextPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ PROC ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UICryptoGetTextPassword@@@@QBEPAUICryptoGetTextPassword@@XZ ENDP ; CMyComPtr<ICryptoGetTextPassword>::operator ICryptoGetTextPassword *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ PROC ; CMyComPtr<ICryptoGetTextPassword>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICryptoGetTextPassword@@@@QAEPAPAUICryptoGetTextPassword@@XZ ENDP ; CMyComPtr<ICryptoGetTextPassword>::operator&
_TEXT	ENDS
PUBLIC	??1CProp@@QAE@XZ				; CProp::~CProp
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCProp@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCProp@@QAEPAXI@Z PROC				; CProp::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CProp@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCProp@@QAEPAXI@Z ENDP				; CProp::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GCOneMethodInfo@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCOneMethodInfo@@QAEPAXI@Z PROC			; COneMethodInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COneMethodInfo@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCOneMethodInfo@@QAEPAXI@Z ENDP			; COneMethodInfo::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CProp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CProp@@QAE@XZ PROC					; CProp::~CProp, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CProp@@QAE@XZ ENDP					; CProp::~CProp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T72598 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T72598[ebp], ecx
	mov	edx, DWORD PTR $T72598[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z PROC ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _pp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$QueryInterface@UICryptoGetTextPassword@@@?$CMyComPtr@UIArchiveOpenCallback@@@@QBEJABU_GUID@@PAPAUICryptoGetTextPassword@@@Z ENDP ; CMyComPtr<IArchiveOpenCallback>::QueryInterface<ICryptoGetTextPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CHandler@N7z@NArchive@@W3AGKXZ
_TEXT	SEGMENT
?Release@CHandler@N7z@NArchive@@W3AGKXZ PROC		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CHandler@N7z@NArchive@@UAGKXZ	; NArchive::N7z::CHandler::Release
?Release@CHandler@N7z@NArchive@@W3AGKXZ ENDP		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CHandler@N7z@NArchive@@W7AGKXZ
_TEXT	SEGMENT
?Release@CHandler@N7z@NArchive@@W7AGKXZ PROC		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CHandler@N7z@NArchive@@UAGKXZ	; NArchive::N7z::CHandler::Release
?Release@CHandler@N7z@NArchive@@W7AGKXZ ENDP		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CHandler@N7z@NArchive@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CHandler@N7z@NArchive@@WM@AGKXZ PROC		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CHandler@N7z@NArchive@@UAGKXZ	; NArchive::N7z::CHandler::Release
?Release@CHandler@N7z@NArchive@@WM@AGKXZ ENDP		; [thunk]:NArchive::N7z::CHandler::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@N7z@NArchive@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CHandler@N7z@NArchive@@W3AGKXZ PROC		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CHandler@N7z@NArchive@@UAGKXZ	; NArchive::N7z::CHandler::AddRef
?AddRef@CHandler@N7z@NArchive@@W3AGKXZ ENDP		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@N7z@NArchive@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CHandler@N7z@NArchive@@W7AGKXZ PROC		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CHandler@N7z@NArchive@@UAGKXZ	; NArchive::N7z::CHandler::AddRef
?AddRef@CHandler@N7z@NArchive@@W7AGKXZ ENDP		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CHandler@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CHandler@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::N7z::CHandler::QueryInterface
?QueryInterface@CHandler@N7z@NArchive@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CHandler@N7z@NArchive@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CHandler@N7z@NArchive@@WM@AGKXZ PROC		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CHandler@N7z@NArchive@@UAGKXZ	; NArchive::N7z::CHandler::AddRef
?AddRef@CHandler@N7z@NArchive@@WM@AGKXZ ENDP		; [thunk]:NArchive::N7z::CHandler::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CHandler@N7z@NArchive@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CHandler@N7z@NArchive@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::N7z::CHandler::QueryInterface
?QueryInterface@CHandler@N7z@NArchive@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CHandler@N7z@NArchive@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CHandler@N7z@NArchive@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CHandler@N7z@NArchive@@UAGJABU_GUID@@PAPAX@Z ; NArchive::N7z::CHandler::QueryInterface
?QueryInterface@CHandler@N7z@NArchive@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NArchive::N7z::CHandler::QueryInterface`adjustor{12}'
_TEXT	ENDS
END

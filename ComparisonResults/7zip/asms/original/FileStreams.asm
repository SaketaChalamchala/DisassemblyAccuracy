; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Common\FileStreams.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::CInFile
PUBLIC	??_7CInFileStream@@6BIStreamGetProps2@@@	; CInFileStream::`vftable'
PUBLIC	??_7CInFileStream@@6BIStreamGetProps@@@		; CInFileStream::`vftable'
PUBLIC	??_7CInFileStream@@6BIStreamGetSize@@@		; CInFileStream::`vftable'
PUBLIC	??_7CInFileStream@@6BIInStream@@@		; CInFileStream::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0IStreamGetProps2@@QAE@XZ			; IStreamGetProps2::IStreamGetProps2
PUBLIC	??0IStreamGetProps@@QAE@XZ			; IStreamGetProps::IStreamGetProps
PUBLIC	??0IStreamGetSize@@QAE@XZ			; IStreamGetSize::IStreamGetSize
PUBLIC	??0IInStream@@QAE@XZ				; IInStream::IInStream
PUBLIC	??0CInFileStream@@QAE@XZ			; CInFileStream::CInFileStream
PUBLIC	??_R4CInFileStream@@6BIInStream@@@		; CInFileStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCInFileStream@@@8			; CInFileStream `RTTI Type Descriptor'
PUBLIC	??_R3CInFileStream@@8				; CInFileStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CInFileStream@@8				; CInFileStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CInFileStream@@8			; CInFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IInStream@@8			; IInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIInStream@@@8				; IInStream `RTTI Type Descriptor'
PUBLIC	??_R3IInStream@@8				; IInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IInStream@@8				; IInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@IStreamGetSize@@8			; IStreamGetSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUIStreamGetSize@@@8			; IStreamGetSize `RTTI Type Descriptor'
PUBLIC	??_R3IStreamGetSize@@8				; IStreamGetSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IStreamGetSize@@8				; IStreamGetSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IStreamGetSize@@8			; IStreamGetSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@IStreamGetProps@@8			; IStreamGetProps::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUIStreamGetProps@@@8			; IStreamGetProps `RTTI Type Descriptor'
PUBLIC	??_R3IStreamGetProps@@8				; IStreamGetProps::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IStreamGetProps@@8				; IStreamGetProps::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IStreamGetProps@@8		; IStreamGetProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@IStreamGetProps2@@8		; IStreamGetProps2::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUIStreamGetProps2@@@8			; IStreamGetProps2 `RTTI Type Descriptor'
PUBLIC	??_R3IStreamGetProps2@@8			; IStreamGetProps2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IStreamGetProps2@@8			; IStreamGetProps2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IStreamGetProps2@@8		; IStreamGetProps2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
PUBLIC	?AddRef@CInFileStream@@UAGKXZ			; CInFileStream::AddRef
PUBLIC	?Release@CInFileStream@@UAGKXZ			; CInFileStream::Release
PUBLIC	?Read@CInFileStream@@UAGJPAXIPAI@Z		; CInFileStream::Read
PUBLIC	?Seek@CInFileStream@@UAGJ_JIPA_K@Z		; CInFileStream::Seek
PUBLIC	??_R4CInFileStream@@6BIStreamGetSize@@@		; CInFileStream::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CInFileStream::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CInFileStream@@W3AGKXZ			; [thunk]:CInFileStream::AddRef`adjustor{4}'
PUBLIC	?Release@CInFileStream@@W3AGKXZ			; [thunk]:CInFileStream::Release`adjustor{4}'
PUBLIC	?GetSize@CInFileStream@@UAGJPA_K@Z		; CInFileStream::GetSize
PUBLIC	??_R4CInFileStream@@6BIStreamGetProps@@@	; CInFileStream::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:CInFileStream::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CInFileStream@@W7AGKXZ			; [thunk]:CInFileStream::AddRef`adjustor{8}'
PUBLIC	?Release@CInFileStream@@W7AGKXZ			; [thunk]:CInFileStream::Release`adjustor{8}'
PUBLIC	?GetProps@CInFileStream@@UAGJPA_KPAU_FILETIME@@11PAI@Z ; CInFileStream::GetProps
PUBLIC	??_R4CInFileStream@@6BIStreamGetProps2@@@	; CInFileStream::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CInFileStream::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CInFileStream@@WM@AGKXZ			; [thunk]:CInFileStream::AddRef`adjustor{12}'
PUBLIC	?Release@CInFileStream@@WM@AGKXZ		; [thunk]:CInFileStream::Release`adjustor{12}'
PUBLIC	?GetProps2@CInFileStream@@UAGJPAUCStreamFileProps@@@Z ; CInFileStream::GetProps2
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECInFileStream@@UAEPAXI@Z:PROC		; CInFileStream::`vector deleting destructor'
;	COMDAT ??_R4CInFileStream@@6BIStreamGetProps2@@@
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.cpp
rdata$r	SEGMENT
??_R4CInFileStream@@6BIStreamGetProps2@@@ DD 00H	; CInFileStream::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCInFileStream@@@8
	DD	FLAT:??_R3CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R4CInFileStream@@6BIStreamGetProps@@@
rdata$r	SEGMENT
??_R4CInFileStream@@6BIStreamGetProps@@@ DD 00H		; CInFileStream::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCInFileStream@@@8
	DD	FLAT:??_R3CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R4CInFileStream@@6BIStreamGetSize@@@
rdata$r	SEGMENT
??_R4CInFileStream@@6BIStreamGetSize@@@ DD 00H		; CInFileStream::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCInFileStream@@@8
	DD	FLAT:??_R3CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IStreamGetProps2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IStreamGetProps2@@8 DD FLAT:??_R0?AUIStreamGetProps2@@@8 ; IStreamGetProps2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_R2IStreamGetProps2@@8
rdata$r	SEGMENT
??_R2IStreamGetProps2@@8 DD FLAT:??_R1A@?0A@EA@IStreamGetProps2@@8 ; IStreamGetProps2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IStreamGetProps2@@8
rdata$r	SEGMENT
??_R3IStreamGetProps2@@8 DD 00H				; IStreamGetProps2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIStreamGetProps2@@@8
_DATA	SEGMENT
??_R0?AUIStreamGetProps2@@@8 DD FLAT:??_7type_info@@6B@	; IStreamGetProps2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIStreamGetProps2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@IStreamGetProps2@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@IStreamGetProps2@@8 DD FLAT:??_R0?AUIStreamGetProps2@@@8 ; IStreamGetProps2::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IStreamGetProps@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IStreamGetProps@@8 DD FLAT:??_R0?AUIStreamGetProps@@@8 ; IStreamGetProps::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_R2IStreamGetProps@@8
rdata$r	SEGMENT
??_R2IStreamGetProps@@8 DD FLAT:??_R1A@?0A@EA@IStreamGetProps@@8 ; IStreamGetProps::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IStreamGetProps@@8
rdata$r	SEGMENT
??_R3IStreamGetProps@@8 DD 00H				; IStreamGetProps::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIStreamGetProps@@@8
_DATA	SEGMENT
??_R0?AUIStreamGetProps@@@8 DD FLAT:??_7type_info@@6B@	; IStreamGetProps `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIStreamGetProps@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@IStreamGetProps@@8
rdata$r	SEGMENT
??_R17?0A@EA@IStreamGetProps@@8 DD FLAT:??_R0?AUIStreamGetProps@@@8 ; IStreamGetProps::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IStreamGetSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IStreamGetSize@@8 DD FLAT:??_R0?AUIStreamGetSize@@@8 ; IStreamGetSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_R2IStreamGetSize@@8
rdata$r	SEGMENT
??_R2IStreamGetSize@@8 DD FLAT:??_R1A@?0A@EA@IStreamGetSize@@8 ; IStreamGetSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IStreamGetSize@@8
rdata$r	SEGMENT
??_R3IStreamGetSize@@8 DD 00H				; IStreamGetSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIStreamGetSize@@@8
_DATA	SEGMENT
??_R0?AUIStreamGetSize@@@8 DD FLAT:??_7type_info@@6B@	; IStreamGetSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIStreamGetSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@IStreamGetSize@@8
rdata$r	SEGMENT
??_R13?0A@EA@IStreamGetSize@@8 DD FLAT:??_R0?AUIStreamGetSize@@@8 ; IStreamGetSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2IInStream@@8
rdata$r	SEGMENT
??_R2IInStream@@8 DD FLAT:??_R1A@?0A@EA@IInStream@@8	; IInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IInStream@@8
rdata$r	SEGMENT
??_R3IInStream@@8 DD 00H				; IInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIInStream@@@8
_DATA	SEGMENT
??_R0?AUIInStream@@@8 DD FLAT:??_7type_info@@6B@	; IInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IInStream@@8 DD FLAT:??_R0?AUIInStream@@@8 ; IInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CInFileStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CInFileStream@@8 DD FLAT:??_R0?AVCInFileStream@@@8 ; CInFileStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R2CInFileStream@@8
rdata$r	SEGMENT
??_R2CInFileStream@@8 DD FLAT:??_R1A@?0A@EA@CInFileStream@@8 ; CInFileStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IInStream@@8
	DD	FLAT:??_R1A@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@IStreamGetSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@IStreamGetProps@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@IStreamGetProps2@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CInFileStream@@8
rdata$r	SEGMENT
??_R3CInFileStream@@8 DD 00H				; CInFileStream::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0bH
	DD	FLAT:??_R2CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCInFileStream@@@8
_DATA	SEGMENT
??_R0?AVCInFileStream@@@8 DD FLAT:??_7type_info@@6B@	; CInFileStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCInFileStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CInFileStream@@6BIInStream@@@
rdata$r	SEGMENT
??_R4CInFileStream@@6BIInStream@@@ DD 00H		; CInFileStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCInFileStream@@@8
	DD	FLAT:??_R3CInFileStream@@8
rdata$r	ENDS
;	COMDAT ??_7CInFileStream@@6BIStreamGetProps2@@@
CONST	SEGMENT
??_7CInFileStream@@6BIStreamGetProps2@@@ DD FLAT:??_R4CInFileStream@@6BIStreamGetProps2@@@ ; CInFileStream::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@WM@AGKXZ
	DD	FLAT:?Release@CInFileStream@@WM@AGKXZ
	DD	FLAT:?GetProps2@CInFileStream@@UAGJPAUCStreamFileProps@@@Z
CONST	ENDS
;	COMDAT ??_7CInFileStream@@6BIStreamGetProps@@@
CONST	SEGMENT
??_7CInFileStream@@6BIStreamGetProps@@@ DD FLAT:??_R4CInFileStream@@6BIStreamGetProps@@@ ; CInFileStream::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@W7AGKXZ
	DD	FLAT:?Release@CInFileStream@@W7AGKXZ
	DD	FLAT:?GetProps@CInFileStream@@UAGJPA_KPAU_FILETIME@@11PAI@Z
CONST	ENDS
;	COMDAT ??_7CInFileStream@@6BIStreamGetSize@@@
CONST	SEGMENT
??_7CInFileStream@@6BIStreamGetSize@@@ DD FLAT:??_R4CInFileStream@@6BIStreamGetSize@@@ ; CInFileStream::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@W3AGKXZ
	DD	FLAT:?Release@CInFileStream@@W3AGKXZ
	DD	FLAT:?GetSize@CInFileStream@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CInFileStream@@6BIInStream@@@
CONST	SEGMENT
??_7CInFileStream@@6BIInStream@@@ DD FLAT:??_R4CInFileStream@@6BIInStream@@@ ; CInFileStream::`vftable'
	DD	FLAT:?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CInFileStream@@UAGKXZ
	DD	FLAT:?Release@CInFileStream@@UAGKXZ
	DD	FLAT:?Read@CInFileStream@@UAGJPAXIPAI@Z
	DD	FLAT:?Seek@CInFileStream@@UAGJ_JIPA_K@Z
	DD	FLAT:??_ECInFileStream@@UAEPAXI@Z
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInFileStream@@QAE@XZ PROC				; CInFileStream::CInFileStream
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0IStreamGetSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0IStreamGetProps@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0IStreamGetProps2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CInFileStream@@6BIInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CInFileStream@@6BIStreamGetSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CInFileStream@@6BIStreamGetProps@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CInFileStream@@6BIStreamGetProps2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0
	mov	DWORD PTR [ecx+44], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], 0
	mov	DWORD PTR [edx+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInFileStream@@QAE@XZ ENDP				; CInFileStream::CInFileStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IStreamGetProps2:BYTE
EXTRN	_IID_IStreamGetProps:BYTE
EXTRN	_IID_IStreamGetSize:BYTE
EXTRN	_IID_IInStream:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z PROC ; CInFileStream::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN10@QueryInter:
	push	OFFSET _IID_IInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN9@QueryInter
$LN8@QueryInter:
; Line 79
	push	OFFSET _IID_IStreamGetSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN14@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter
$LN6@QueryInter:
; Line 81
	push	OFFSET _IID_IStreamGetProps
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN16@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter
$LN4@QueryInter:
; Line 82
	push	OFFSET _IID_IStreamGetProps2
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN18@QueryInter
$LN17@QueryInter:
	mov	DWORD PTR tv144[ebp], 0
$LN18@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter
$LN2@QueryInter:
; Line 84
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter
$LN9@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], edx
	xor	eax, eax
$LN11@QueryInter:
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; CInFileStream::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CInFileStream@@UAGKXZ PROC			; CInFileStream::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CInFileStream@@UAGKXZ ENDP			; CInFileStream::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T68479 = -8						; size = 4
$T68478 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CInFileStream@@UAGKXZ PROC			; CInFileStream::Release, COMDAT
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+16], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68479[ebp], edx
	mov	eax, DWORD PTR $T68479[ebp]
	mov	DWORD PTR $T68478[ebp], eax
	cmp	DWORD PTR $T68478[ebp], 0
	je	SHORT $LN4@Release
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T68478[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T68478[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CInFileStream@@UAGKXZ ENDP			; CInFileStream::Release
_TEXT	ENDS
PUBLIC	??1CInFileStream@@UAE@XZ			; CInFileStream::~CInFileStream
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCInFileStream@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCInFileStream@@UAEPAXI@Z PROC			; CInFileStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CInFileStream@@UAE@XZ		; CInFileStream::~CInFileStream
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCInFileStream@@UAEPAXI@Z ENDP			; CInFileStream::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IInStream@@6B@				; IInStream::`vftable'
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??_R4IInStream@@6B@				; IInStream::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4IInStream@@6B@
rdata$r	SEGMENT
??_R4IInStream@@6B@ DD 00H				; IInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIInStream@@@8
	DD	FLAT:??_R3IInStream@@8
rdata$r	ENDS
;	COMDAT ??_7IInStream@@6B@
CONST	SEGMENT
??_7IInStream@@6B@ DD FLAT:??_R4IInStream@@6B@		; IInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IInStream@@QAE@XZ PROC				; IInStream::IInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialInStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IInStream@@QAE@XZ ENDP				; IInStream::IInStream
_TEXT	ENDS
PUBLIC	??_7IStreamGetSize@@6B@				; IStreamGetSize::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4IStreamGetSize@@6B@			; IStreamGetSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4IStreamGetSize@@6B@
rdata$r	SEGMENT
??_R4IStreamGetSize@@6B@ DD 00H				; IStreamGetSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIStreamGetSize@@@8
	DD	FLAT:??_R3IStreamGetSize@@8
rdata$r	ENDS
;	COMDAT ??_7IStreamGetSize@@6B@
CONST	SEGMENT
??_7IStreamGetSize@@6B@ DD FLAT:??_R4IStreamGetSize@@6B@ ; IStreamGetSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IStreamGetSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IStreamGetSize@@QAE@XZ PROC				; IStreamGetSize::IStreamGetSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IStreamGetSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IStreamGetSize@@QAE@XZ ENDP				; IStreamGetSize::IStreamGetSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??_7IStreamGetProps@@6B@			; IStreamGetProps::`vftable'
PUBLIC	??_R4IStreamGetProps@@6B@			; IStreamGetProps::`RTTI Complete Object Locator'
;	COMDAT ??_R4IStreamGetProps@@6B@
rdata$r	SEGMENT
??_R4IStreamGetProps@@6B@ DD 00H			; IStreamGetProps::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIStreamGetProps@@@8
	DD	FLAT:??_R3IStreamGetProps@@8
rdata$r	ENDS
;	COMDAT ??_7IStreamGetProps@@6B@
CONST	SEGMENT
??_7IStreamGetProps@@6B@ DD FLAT:??_R4IStreamGetProps@@6B@ ; IStreamGetProps::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IStreamGetProps@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IStreamGetProps@@QAE@XZ PROC				; IStreamGetProps::IStreamGetProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IStreamGetProps@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IStreamGetProps@@QAE@XZ ENDP				; IStreamGetProps::IStreamGetProps
_TEXT	ENDS
PUBLIC	??_7IStreamGetProps2@@6B@			; IStreamGetProps2::`vftable'
PUBLIC	??_R4IStreamGetProps2@@6B@			; IStreamGetProps2::`RTTI Complete Object Locator'
;	COMDAT ??_R4IStreamGetProps2@@6B@
rdata$r	SEGMENT
??_R4IStreamGetProps2@@6B@ DD 00H			; IStreamGetProps2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIStreamGetProps2@@@8
	DD	FLAT:??_R3IStreamGetProps2@@8
rdata$r	ENDS
;	COMDAT ??_7IStreamGetProps2@@6B@
CONST	SEGMENT
??_7IStreamGetProps2@@6B@ DD FLAT:??_R4IStreamGetProps2@@6B@ ; IStreamGetProps2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IStreamGetProps2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IStreamGetProps2@@QAE@XZ PROC			; IStreamGetProps2::IStreamGetProps2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IStreamGetProps2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IStreamGetProps2@@QAE@XZ ENDP			; IStreamGetProps2::IStreamGetProps2
_TEXT	ENDS
PUBLIC	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::CFileBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::CInFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::CFileBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 97
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::CFileBase
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
_TEXT	ENDS
PUBLIC	??1CInFile@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CInFile::~CInFile
EXTRN	_MidFree@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$??1CInFileStream@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CInFileStream@@UAE@XZ$0
__ehfuncinfo$??1CInFileStream@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CInFileStream@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CInFileStream@@UAE@XZ PROC				; CInFileStream::~CInFileStream
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CInFileStream@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CInFileStream@@6BIInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CInFileStream@@6BIStreamGetSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CInFileStream@@6BIStreamGetProps@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CInFileStream@@6BIStreamGetProps2@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_MidFree@4
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	je	SHORT $LN2@CInFileStr@2
; Line 54
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CInFileStr@2:
; Line 55
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CInFileStream@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CInFile@NIO@NFile@NWindows@@QAE@XZ
__ehhandler$??1CInFileStream@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CInFileStream@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CInFileStream@@UAE@XZ ENDP				; CInFileStream::~CInFileStream
PUBLIC	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ		; NWindows::NFile::NIO::CFileBase::~CFileBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInFile@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInFile@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CInFile::~CInFile, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFileBase@NIO@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NIO::CFileBase::~CFileBase
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInFile@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CInFile::~CInFile
_TEXT	ENDS
EXTRN	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ:PROC ; NWindows::NFile::NIO::CFileBase::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CFileBase@NIO@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NIO::CFileBase::~CFileBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileBase@NIO@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NIO::CFileBase::~CFileBase
_TEXT	ENDS
PUBLIC	_HRESULT_FROM_WIN32@4
PUBLIC	??$MyMin@_K@@YG_K_K0@Z				; MyMin<unsigned __int64>
PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
EXTRN	__imp__GetLastError@0:PROC
EXTRN	?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z:PROC ; NWindows::NFile::NIO::CInFile::ReadPart
EXTRN	?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z:PROC ; NWindows::NFile::NIO::CInFile::Read1
EXTRN	_MidAlloc@4:PROC
EXTRN	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z:PROC ; NWindows::NFile::NIO::CFileBase::Seek
EXTRN	_memcpy:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv514 = -180						; size = 4
tv513 = -176						; size = 4
tv440 = -172						; size = 4
tv425 = -168						; size = 4
tv414 = -164						; size = 8
tv396 = -156						; size = 8
tv361 = -148						; size = 4
tv346 = -144						; size = 8
tv130 = -136						; size = 4
tv326 = -132						; size = 4
tv325 = -128						; size = 4
tv314 = -124						; size = 4
tv313 = -120						; size = 4
_error$68066 = -116					; size = 4
_result$ = -109						; size = 1
_realProcessedSize$ = -104				; size = 4
_result$68059 = -93					; size = 1
_realNewPosition$68058 = -88				; size = 8
_result$68053 = -73					; size = 1
_readSize$68040 = -72					; size = 4
_result$68038 = -65					; size = 1
_realNewPosition$68037 = -60				; size = 8
_end$68030 = -48					; size = 8
_useBuf$68025 = -37					; size = 1
_rem$68017 = -36					; size = 4
_pos$68013 = -32					; size = 4
_alignedPos$68011 = -28					; size = 8
_mask2$68009 = -20					; size = 8
_mask$68008 = -12					; size = 4
_rem$68002 = -8						; size = 8
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CInFileStream@@UAGJPAXIPAI@Z PROC			; CInFileStream::Read
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.cpp
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 180				; 000000b4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-180]
	mov	ecx, 45					; 0000002dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN31@Read
; Line 63
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN31@Read:
; Line 64
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN30@Read
; Line 65
	xor	eax, eax
	jmp	$LN32@Read
$LN30@Read:
; Line 66
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+28]
	test	edx, edx
	je	$LN29@Read
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+29]
	test	ecx, ecx
	je	$LN25@Read
; Line 70
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv313[ebp], edx
	mov	DWORD PTR tv314[ebp], eax
	mov	ecx, DWORD PTR tv313[ebp]
	mov	edx, DWORD PTR tv314[ebp]
	mov	eax, DWORD PTR [ecx+44]
	cmp	eax, DWORD PTR [edx+36]
	jb	SHORT $LN27@Read
	ja	SHORT $LN36@Read
	mov	ecx, DWORD PTR tv313[ebp]
	mov	edx, DWORD PTR tv314[ebp]
	mov	eax, DWORD PTR [ecx+40]
	cmp	eax, DWORD PTR [edx+32]
	jb	SHORT $LN27@Read
$LN36@Read:
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv325[ebp], ecx
	mov	DWORD PTR tv326[ebp], edx
	mov	eax, DWORD PTR tv325[ebp]
	mov	ecx, DWORD PTR tv326[ebp]
	mov	edx, DWORD PTR [eax+40]
	cmp	edx, DWORD PTR [ecx+32]
	jne	SHORT $LN34@Read
	mov	eax, DWORD PTR tv325[ebp]
	mov	ecx, DWORD PTR tv326[ebp]
	mov	edx, DWORD PTR [eax+44]
	cmp	edx, DWORD PTR [ecx+36]
	jne	SHORT $LN34@Read
	mov	DWORD PTR tv130[ebp], 0
	jmp	SHORT $LN35@Read
$LN34@Read:
	mov	DWORD PTR tv130[ebp], -2147467259	; 80004005H
$LN35@Read:
	mov	eax, DWORD PTR tv130[ebp]
	jmp	$LN32@Read
$LN27@Read:
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	sub	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [eax+36]
	sbb	eax, DWORD PTR [ecx+44]
	mov	DWORD PTR _rem$68002[ebp], edx
	mov	DWORD PTR _rem$68002[ebp+4], eax
; Line 73
	mov	ecx, DWORD PTR _size$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv346[ebp], ecx
	mov	DWORD PTR tv346[ebp+4], edx
	mov	eax, DWORD PTR tv346[ebp+4]
	cmp	eax, DWORD PTR _rem$68002[ebp+4]
	jb	SHORT $LN25@Read
	ja	SHORT $LN37@Read
	mov	ecx, DWORD PTR tv346[ebp]
	cmp	ecx, DWORD PTR _rem$68002[ebp]
	jbe	SHORT $LN25@Read
$LN37@Read:
; Line 74
	mov	edx, DWORD PTR _rem$68002[ebp]
	mov	DWORD PTR _size$[ebp], edx
$LN25@Read:
; Line 78
	mov	DWORD PTR _mask$68008[ebp], 262143	; 0003ffffH
; Line 79
	mov	DWORD PTR _mask2$68009[ebp], -262144	; fffc0000H
	mov	DWORD PTR _mask2$68009[ebp+4], -1
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, -262144				; fffc0000H
	mov	edx, DWORD PTR [eax+44]
	mov	DWORD PTR _alignedPos$68011[ebp], ecx
	mov	DWORD PTR _alignedPos$68011[ebp+4], edx
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jbe	$LN23@Read
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv361[ebp], ecx
	mov	edx, DWORD PTR tv361[ebp]
	mov	eax, DWORD PTR [edx+56]
	cmp	eax, DWORD PTR _alignedPos$68011[ebp]
	jne	$LN23@Read
	mov	ecx, DWORD PTR tv361[ebp]
	mov	edx, DWORD PTR [ecx+60]
	cmp	edx, DWORD PTR _alignedPos$68011[ebp+4]
	jne	$LN23@Read
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 262143				; 0003ffffH
	mov	DWORD PTR _pos$68013[ebp], ecx
; Line 84
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$68013[ebp]
	cmp	eax, DWORD PTR [edx+68]
	jb	SHORT $LN22@Read
; Line 85
	xor	eax, eax
	jmp	$LN32@Read
$LN22@Read:
; Line 86
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	sub	eax, DWORD PTR _pos$68013[ebp]
	push	eax
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR _rem$68017[ebp], eax
; Line 87
	mov	ecx, DWORD PTR _rem$68017[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	add	eax, DWORD PTR _pos$68013[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 88
	mov	edx, DWORD PTR _rem$68017[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+40]
	adc	eax, DWORD PTR [ecx+44]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], edx
	mov	DWORD PTR [ecx+44], eax
; Line 89
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN21@Read
; Line 90
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _rem$68017[ebp]
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [ecx], eax
$LN21@Read:
; Line 91
	xor	eax, eax
	jmp	$LN32@Read
$LN23@Read:
; Line 94
	mov	BYTE PTR _useBuf$68025[ebp], 0
; Line 95
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	and	eax, 262143				; 0003ffffH
	mov	ecx, DWORD PTR [edx+44]
	and	ecx, 0
	mov	DWORD PTR tv396[ebp], eax
	mov	DWORD PTR tv396[ebp+4], ecx
	mov	edx, DWORD PTR tv396[ebp]
	or	edx, DWORD PTR tv396[ebp+4]
	jne	SHORT $LN19@Read
	mov	eax, DWORD PTR _data$[ebp]
	and	eax, 262143				; 0003ffffH
	je	SHORT $LN20@Read
$LN19@Read:
; Line 96
	mov	BYTE PTR _useBuf$68025[ebp], 1
; Line 97
	jmp	$LN18@Read
$LN20@Read:
; Line 99
	mov	ecx, DWORD PTR _size$[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+40]
	adc	edx, DWORD PTR [eax+44]
	mov	DWORD PTR _end$68030[ebp], ecx
	mov	DWORD PTR _end$68030[ebp+4], edx
; Line 100
	mov	ecx, DWORD PTR _end$68030[ebp]
	and	ecx, 262143				; 0003ffffH
	mov	edx, DWORD PTR _end$68030[ebp+4]
	and	edx, 0
	mov	DWORD PTR tv414[ebp], ecx
	mov	DWORD PTR tv414[ebp+4], edx
	mov	eax, DWORD PTR tv414[ebp]
	or	eax, DWORD PTR tv414[ebp+4]
	je	SHORT $LN18@Read
; Line 102
	mov	ecx, DWORD PTR _end$68030[ebp]
	and	ecx, -262144				; fffc0000H
	mov	edx, DWORD PTR _end$68030[ebp+4]
	mov	DWORD PTR _end$68030[ebp], ecx
	mov	DWORD PTR _end$68030[ebp+4], edx
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv425[ebp], eax
	mov	ecx, DWORD PTR tv425[ebp]
	mov	edx, DWORD PTR _end$68030[ebp+4]
	cmp	edx, DWORD PTR [ecx+44]
	ja	SHORT $LN16@Read
	jb	SHORT $LN38@Read
	mov	eax, DWORD PTR tv425[ebp]
	mov	ecx, DWORD PTR _end$68030[ebp]
	cmp	ecx, DWORD PTR [eax+40]
	ja	SHORT $LN16@Read
$LN38@Read:
; Line 104
	mov	BYTE PTR _useBuf$68025[ebp], 1
; Line 105
	jmp	SHORT $LN18@Read
$LN16@Read:
; Line 106
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _end$68030[ebp]
	sub	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _end$68030[ebp+4]
	sbb	ecx, DWORD PTR [edx+44]
	mov	DWORD PTR _size$[ebp], eax
$LN18@Read:
; Line 109
	movzx	edx, BYTE PTR _useBuf$68025[ebp]
	test	edx, edx
	jne	SHORT $LN14@Read
; Line 110
	jmp	$LN24@Read
$LN14@Read:
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv440[ebp], eax
	mov	ecx, DWORD PTR tv440[ebp]
	mov	edx, DWORD PTR _alignedPos$68011[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jne	SHORT $LN39@Read
	mov	eax, DWORD PTR tv440[ebp]
	mov	ecx, DWORD PTR _alignedPos$68011[ebp+4]
	cmp	ecx, DWORD PTR [eax+52]
	je	SHORT $LN13@Read
$LN39@Read:
; Line 114
	lea	edx, DWORD PTR _realNewPosition$68037[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _alignedPos$68011[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _alignedPos$68011[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	mov	BYTE PTR _result$68038[ebp], al
; Line 115
	movzx	edx, BYTE PTR _result$68038[ebp]
	test	edx, edx
	jne	SHORT $LN12@Read
; Line 116
	movzx	eax, BYTE PTR _result$68038[ebp]
	push	eax
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
	jmp	$LN32@Read
$LN12@Read:
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _realNewPosition$68037[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	eax, DWORD PTR _realNewPosition$68037[ebp+4]
	mov	DWORD PTR [ecx+52], eax
$LN13@Read:
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _alignedPos$68011[ebp]
	mov	DWORD PTR [ecx+56], edx
	mov	eax, DWORD PTR _alignedPos$68011[ebp+4]
	mov	DWORD PTR [ecx+60], eax
; Line 121
	mov	DWORD PTR _readSize$68040[ebp], 262144	; 00040000H
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+29]
	test	edx, edx
	je	SHORT $LN11@Read
; Line 123
	push	0
	push	262144					; 00040000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	sub	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [eax+36]
	sbb	eax, DWORD PTR [ecx+52]
	push	eax
	push	edx
	call	??$MyMin@_K@@YG_K_K0@Z			; MyMin<unsigned __int64>
	mov	DWORD PTR _readSize$68040[ebp], eax
$LN11@Read:
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+64], 0
	jne	SHORT $LN10@Read
; Line 127
	push	262144					; 00040000H
	call	_MidAlloc@4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], eax
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jne	SHORT $LN10@Read
; Line 129
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN32@Read
$LN10@Read:
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	mov	edx, DWORD PTR _readSize$68040[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Read1@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::Read1
	mov	BYTE PTR _result$68053[ebp], al
; Line 132
	movzx	edx, BYTE PTR _result$68053[ebp]
	test	edx, edx
	jne	SHORT $LN8@Read
; Line 133
	movzx	eax, BYTE PTR _result$68053[ebp]
	push	eax
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
	jmp	$LN32@Read
$LN8@Read:
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+68], 0
	jne	SHORT $LN7@Read
; Line 136
	xor	eax, eax
	jmp	$LN32@Read
$LN7@Read:
; Line 137
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+48]
	adc	ecx, DWORD PTR [edx+52]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], eax
	mov	DWORD PTR [edx+52], ecx
; Line 138
	jmp	$LN25@Read
$LN24@Read:
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv513[ebp], eax
	mov	DWORD PTR tv514[ebp], ecx
	mov	edx, DWORD PTR tv513[ebp]
	mov	eax, DWORD PTR tv514[ebp]
	mov	ecx, DWORD PTR [edx+40]
	cmp	ecx, DWORD PTR [eax+48]
	jne	SHORT $LN40@Read
	mov	edx, DWORD PTR tv513[ebp]
	mov	eax, DWORD PTR tv514[ebp]
	mov	ecx, DWORD PTR [edx+44]
	cmp	ecx, DWORD PTR [eax+52]
	je	SHORT $LN29@Read
$LN40@Read:
; Line 143
	lea	edx, DWORD PTR _realNewPosition$68058[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	mov	BYTE PTR _result$68059[ebp], al
; Line 144
	movzx	eax, BYTE PTR _result$68059[ebp]
	test	eax, eax
	jne	SHORT $LN5@Read
; Line 145
	movzx	ecx, BYTE PTR _result$68059[ebp]
	push	ecx
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
	jmp	$LN32@Read
$LN5@Read:
; Line 146
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _realNewPosition$68058[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _realNewPosition$68058[ebp+4]
	mov	DWORD PTR [edx+44], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _realNewPosition$68058[ebp]
	mov	DWORD PTR [edx+48], eax
	mov	ecx, DWORD PTR _realNewPosition$68058[ebp+4]
	mov	DWORD PTR [edx+52], ecx
$LN29@Read:
; Line 152
	lea	edx, DWORD PTR _realProcessedSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?ReadPart@CInFile@NIO@NFile@NWindows@@QAE_NPAXIAAI@Z ; NWindows::NFile::NIO::CInFile::ReadPart
	mov	BYTE PTR _result$[ebp], al
; Line 153
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN4@Read
; Line 154
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR _realProcessedSize$[ebp]
	mov	DWORD PTR [edx], eax
$LN4@Read:
; Line 157
	mov	ecx, DWORD PTR _realProcessedSize$[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+40]
	adc	edx, DWORD PTR [eax+44]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	DWORD PTR [eax+44], edx
; Line 158
	mov	ecx, DWORD PTR _realProcessedSize$[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+48]
	adc	edx, DWORD PTR [eax+52]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	DWORD PTR [eax+52], edx
; Line 161
	movzx	ecx, BYTE PTR _result$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@Read
; Line 162
	xor	eax, eax
	jmp	SHORT $LN32@Read
$LN3@Read:
; Line 165
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$68066[ebp], eax
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+76], 0
	je	SHORT $LN2@Read
; Line 168
	mov	esi, esp
	mov	eax, DWORD PTR _error$68066[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN32@Read
$LN2@Read:
; Line 169
	cmp	DWORD PTR _error$68066[ebp], 0
	jne	SHORT $LN1@Read
; Line 170
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN32@Read
$LN1@Read:
; Line 172
	mov	ecx, DWORD PTR _error$68066[ebp]
	push	ecx
	call	_HRESULT_FROM_WIN32@4
$LN32@Read:
; Line 191
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 180				; 000000b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN45@Read:
	DD	3
	DD	$LN44@Read
$LN44@Read:
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN41@Read
	DD	-88					; ffffffa8H
	DD	8
	DD	$LN42@Read
	DD	-104					; ffffff98H
	DD	4
	DD	$LN43@Read
$LN43@Read:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN42@Read:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN41@Read:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?Read@CInFileStream@@UAGJPAXIPAI@Z ENDP			; CInFileStream::Read
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT _HRESULT_FROM_WIN32@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32@4 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
_HRESULT_FROM_WIN32@4 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_lastError$ = -4					; size = 4
_result$ = 8						; size = 1
?ConvertBoolToHRESULT@@YGJ_N@Z PROC			; ConvertBoolToHRESULT
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 21
	movzx	eax, BYTE PTR _result$[ebp]
	test	eax, eax
	je	SHORT $LN2@ConvertBoo
; Line 22
	xor	eax, eax
	jmp	SHORT $LN3@ConvertBoo
$LN2@ConvertBoo:
; Line 23
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lastError$[ebp], eax
; Line 24
	cmp	DWORD PTR _lastError$[ebp], 0
	jne	SHORT $LN1@ConvertBoo
; Line 25
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN3@ConvertBoo
$LN1@ConvertBoo:
; Line 26
	mov	ecx, DWORD PTR _lastError$[ebp]
	push	ecx
	call	_HRESULT_FROM_WIN32@4
$LN3@ConvertBoo:
; Line 30
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ConvertBoolToHRESULT@@YGJ_N@Z ENDP			; ConvertBoolToHRESULT
_TEXT	ENDS
PUBLIC	?Read@CStdInFileStream@@UAGJPAXIPAI@Z		; CStdInFileStream::Read
EXTRN	__imp__ReadFile@20:PROC
EXTRN	__imp__GetStdHandle@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$ = -20						; size = 4
_sizeTemp$ = -16					; size = 4
_realProcessedSize$ = -8				; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CStdInFileStream@@UAGJPAXIPAI@Z PROC		; CStdInFileStream::Read
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 210
	mov	DWORD PTR _sizeTemp$[ebp], 1048576	; 00100000H
; Line 211
	mov	eax, DWORD PTR _sizeTemp$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jbe	SHORT $LN3@Read@2
; Line 212
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _sizeTemp$[ebp], ecx
$LN3@Read@2:
; Line 213
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR _realProcessedSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _sizeTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edi, esp
	push	-10					; fffffff6H
	call	DWORD PTR __imp__GetStdHandle@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__ReadFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 214
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN2@Read@2
; Line 215
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR _realProcessedSize$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@Read@2:
; Line 216
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN1@Read@2
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 109				; 0000006dH
	jne	SHORT $LN1@Read@2
; Line 217
	xor	eax, eax
	jmp	SHORT $LN4@Read@2
$LN1@Read@2:
; Line 218
	cmp	DWORD PTR _res$[ebp], 0
	setne	cl
	movzx	edx, cl
	push	edx
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
$LN4@Read@2:
; Line 237
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Read@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN8@Read@2:
	DD	1
	DD	$LN7@Read@2
$LN7@Read@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@Read@2
$LN6@Read@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Read@CStdInFileStream@@UAGJPAXIPAI@Z ENDP		; CStdInFileStream::Read
; Function compile flags: /Odtp /RTCsu
tv82 = -24						; size = 4
_result$ = -17						; size = 1
_realNewPosition$ = -12					; size = 8
_this$ = 8						; size = 4
_offset$ = 12						; size = 8
_seekOrigin$ = 20					; size = 4
_newPosition$ = 24					; size = 4
?Seek@CInFileStream@@UAGJ_JIPA_K@Z PROC			; CInFileStream::Seek
; Line 242
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 243
	cmp	DWORD PTR _seekOrigin$[ebp], 3
	jb	SHORT $LN12@Seek
; Line 244
	mov	eax, -2147287039			; 80030001H
	jmp	$LN13@Seek
$LN12@Seek:
; Line 249
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	$LN11@Seek
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+29]
	test	eax, eax
	jne	SHORT $LN10@Seek
	cmp	DWORD PTR _seekOrigin$[ebp], 2
	je	$LN11@Seek
$LN10@Seek:
; Line 251
	mov	ecx, DWORD PTR _seekOrigin$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	cmp	DWORD PTR tv82[ebp], 0
	je	SHORT $LN7@Seek
	cmp	DWORD PTR tv82[ebp], 1
	je	SHORT $LN6@Seek
	cmp	DWORD PTR tv82[ebp], 2
	je	SHORT $LN5@Seek
	jmp	SHORT $LN4@Seek
$LN7@Seek:
; Line 253
	jmp	SHORT $LN8@Seek
$LN6@Seek:
; Line 254
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _offset$[ebp+4]
	adc	ecx, DWORD PTR [edx+44]
	mov	DWORD PTR _offset$[ebp], eax
	mov	DWORD PTR _offset$[ebp+4], ecx
	jmp	SHORT $LN8@Seek
$LN5@Seek:
; Line 255
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _offset$[ebp+4]
	adc	ecx, DWORD PTR [edx+36]
	mov	DWORD PTR _offset$[ebp], eax
	mov	DWORD PTR _offset$[ebp+4], ecx
	jmp	SHORT $LN8@Seek
$LN4@Seek:
; Line 256
	mov	eax, -2147287039			; 80030001H
	jmp	$LN13@Seek
$LN8@Seek:
; Line 258
	cmp	DWORD PTR _offset$[ebp+4], 0
	jg	SHORT $LN3@Seek
	jl	SHORT $LN15@Seek
	cmp	DWORD PTR _offset$[ebp], 0
	jae	SHORT $LN3@Seek
$LN15@Seek:
; Line 259
	mov	eax, -2147024765			; 80070083H
	jmp	$LN13@Seek
$LN3@Seek:
; Line 260
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [edx+40], eax
	mov	ecx, DWORD PTR _offset$[ebp+4]
	mov	DWORD PTR [edx+44], ecx
; Line 261
	cmp	DWORD PTR _newPosition$[ebp], 0
	je	SHORT $LN2@Seek
; Line 262
	mov	edx, DWORD PTR _newPosition$[ebp]
	mov	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _offset$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
$LN2@Seek:
; Line 263
	xor	eax, eax
	jmp	SHORT $LN13@Seek
$LN11@Seek:
; Line 268
	lea	edx, DWORD PTR _realNewPosition$[ebp]
	push	edx
	mov	eax, DWORD PTR _seekOrigin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _offset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	mov	BYTE PTR _result$[ebp], al
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _realNewPosition$[ebp]
	mov	DWORD PTR [eax+40], ecx
	mov	edx, DWORD PTR _realNewPosition$[ebp+4]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _realNewPosition$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR _realNewPosition$[ebp+4]
	mov	DWORD PTR [eax+52], edx
; Line 274
	cmp	DWORD PTR _newPosition$[ebp], 0
	je	SHORT $LN1@Seek
; Line 275
	mov	eax, DWORD PTR _newPosition$[ebp]
	mov	ecx, DWORD PTR _realNewPosition$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _realNewPosition$[ebp+4]
	mov	DWORD PTR [eax+4], edx
$LN1@Seek:
; Line 276
	movzx	eax, BYTE PTR _result$[ebp]
	push	eax
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
$LN13@Seek:
; Line 288
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Seek
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	1
$LN18@Seek:
	DD	1
	DD	$LN17@Seek
$LN17@Seek:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN16@Seek
$LN16@Seek:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?Seek@CInFileStream@@UAGJ_JIPA_K@Z ENDP			; CInFileStream::Seek
_TEXT	ENDS
EXTRN	?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z:PROC ; NWindows::NFile::NIO::CFileBase::GetLength
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_size$ = 12						; size = 4
?GetSize@CInFileStream@@UAGJPA_K@Z PROC			; CInFileStream::GetSize
; Line 291
	push	ebp
	mov	ebp, esp
; Line 292
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ; NWindows::NFile::NIO::CFileBase::GetLength
	movzx	ecx, al
	push	ecx
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
; Line 293
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetSize@CInFileStream@@UAGJPA_K@Z ENDP			; CInFileStream::GetSize
_TEXT	ENDS
PUBLIC	?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::CFileBase::GetFileInformation
PUBLIC	__$ArrayPad$
EXTRN	__allshl:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_info$ = -60						; size = 52
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_size$ = 12						; size = 4
_cTime$ = 16						; size = 4
_aTime$ = 20						; size = 4
_mTime$ = 24						; size = 4
_attrib$ = 28						; size = 4
?GetProps@CInFileStream@@UAGJPA_KPAU_FILETIME@@11PAI@Z PROC ; CInFileStream::GetProps
; Line 298
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 300
	lea	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::CFileBase::GetFileInformation
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@GetProps
; Line 302
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN5@GetProps
	mov	eax, DWORD PTR _info$[ebp+32]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _info$[ebp+36]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
$LN5@GetProps:
; Line 303
	cmp	DWORD PTR _cTime$[ebp], 0
	je	SHORT $LN4@GetProps
	mov	edx, DWORD PTR _cTime$[ebp]
	mov	eax, DWORD PTR _info$[ebp+4]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _info$[ebp+8]
	mov	DWORD PTR [edx+4], ecx
$LN4@GetProps:
; Line 304
	cmp	DWORD PTR _aTime$[ebp], 0
	je	SHORT $LN3@GetProps
	mov	edx, DWORD PTR _aTime$[ebp]
	mov	eax, DWORD PTR _info$[ebp+12]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _info$[ebp+16]
	mov	DWORD PTR [edx+4], ecx
$LN3@GetProps:
; Line 305
	cmp	DWORD PTR _mTime$[ebp], 0
	je	SHORT $LN2@GetProps
	mov	edx, DWORD PTR _mTime$[ebp]
	mov	eax, DWORD PTR _info$[ebp+20]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _info$[ebp+24]
	mov	DWORD PTR [edx+4], ecx
$LN2@GetProps:
; Line 306
	cmp	DWORD PTR _attrib$[ebp], 0
	je	SHORT $LN1@GetProps
	mov	edx, DWORD PTR _attrib$[ebp]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@GetProps:
; Line 307
	xor	eax, eax
	jmp	SHORT $LN7@GetProps
$LN6@GetProps:
; Line 309
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@GetProps:
; Line 310
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GetProps
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN11@GetProps:
	DD	1
	DD	$LN10@GetProps
$LN10@GetProps:
	DD	-60					; ffffffc4H
	DD	52					; 00000034H
	DD	$LN9@GetProps
$LN9@GetProps:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?GetProps@CInFileStream@@UAGJPA_KPAU_FILETIME@@11PAI@Z ENDP ; CInFileStream::GetProps
_TEXT	ENDS
PUBLIC	?BOOLToBool@@YG_NH@Z				; BOOLToBool
EXTRN	__imp__GetFileInformationByHandle@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_info$ = 8						; size = 4
?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z PROC ; NWindows::NFile::NIO::CFileBase::GetFileInformation, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\fileio.h
; Line 111
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__GetFileInformationByHandle@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?BOOLToBool@@YG_NH@Z			; BOOLToBool
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ENDP ; NWindows::NFile::NIO::CFileBase::GetFileInformation
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?BOOLToBool@@YG_NH@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
?BOOLToBool@@YG_NH@Z PROC				; BOOLToBool, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\defs.h
; Line 10
	push	ebp
	mov	ebp, esp
	xor	eax, eax
	cmp	DWORD PTR _v$[ebp], 0
	setne	al
	pop	ebp
	ret	4
?BOOLToBool@@YG_NH@Z ENDP				; BOOLToBool
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv92 = -68						; size = 4
_info$ = -60						; size = 52
__$ArrayPad$ = -4					; size = 4
_this$ = 8						; size = 4
_props$ = 12						; size = 4
?GetProps2@CInFileStream@@UAGJPAUCStreamFileProps@@@Z PROC ; CInFileStream::GetProps2
; File c:\workspace\7z1505-src\cpp\7zip\common\filestreams.cpp
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 315
	lea	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?GetFileInformation@CFileBase@NIO@NFile@NWindows@@QBE_NPAU_BY_HANDLE_FILE_INFORMATION@@@Z ; NWindows::NFile::NIO::CFileBase::GetFileInformation
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@GetProps2
; Line 317
	mov	eax, DWORD PTR _info$[ebp+32]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _info$[ebp+36]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 318
	mov	edx, DWORD PTR _info$[ebp+28]
	xor	eax, eax
	mov	ecx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+12], eax
; Line 319
	mov	eax, DWORD PTR _info$[ebp+44]
	xor	edx, edx
	mov	cl, 32					; 00000020H
	call	__allshl
	mov	ecx, DWORD PTR _info$[ebp+48]
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	ecx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], edx
; Line 320
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+24], 0
	mov	DWORD PTR [edx+28], 0
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+60]
	test	ecx, ecx
	je	SHORT $LN4@GetProps2
	mov	edx, DWORD PTR _info$[ebp+40]
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN5@GetProps2
$LN4@GetProps2:
	mov	DWORD PTR tv92[ebp], 1
$LN5@GetProps2:
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 322
	mov	edx, DWORD PTR _props$[ebp]
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 323
	mov	ecx, DWORD PTR _props$[ebp]
	mov	edx, DWORD PTR _info$[ebp+4]
	mov	DWORD PTR [ecx+40], edx
	mov	eax, DWORD PTR _info$[ebp+8]
	mov	DWORD PTR [ecx+44], eax
; Line 324
	mov	ecx, DWORD PTR _props$[ebp]
	mov	edx, DWORD PTR _info$[ebp+12]
	mov	DWORD PTR [ecx+48], edx
	mov	eax, DWORD PTR _info$[ebp+16]
	mov	DWORD PTR [ecx+52], eax
; Line 325
	mov	ecx, DWORD PTR _props$[ebp]
	mov	edx, DWORD PTR _info$[ebp+20]
	mov	DWORD PTR [ecx+56], edx
	mov	eax, DWORD PTR _info$[ebp+24]
	mov	DWORD PTR [ecx+60], eax
; Line 326
	xor	eax, eax
	jmp	SHORT $LN2@GetProps2
$LN1@GetProps2:
; Line 328
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@GetProps2:
; Line 329
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetProps2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN8@GetProps2:
	DD	1
	DD	$LN7@GetProps2
$LN7@GetProps2:
	DD	-60					; ffffffc4H
	DD	52					; 00000034H
	DD	$LN6@GetProps2
$LN6@GetProps2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?GetProps2@CInFileStream@@UAGJPAUCStreamFileProps@@@Z ENDP ; CInFileStream::GetProps2
_TEXT	ENDS
PUBLIC	?Close@COutFileStream@@QAEJXZ			; COutFileStream::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@COutFileStream@@QAEJXZ PROC			; COutFileStream::Close
; _this$ = ecx
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Close@CFileBase@NIO@NFile@NWindows@@QAE_NXZ ; NWindows::NFile::NIO::CFileBase::Close
	movzx	eax, al
	push	eax
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
; Line 339
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@COutFileStream@@QAEJXZ ENDP			; COutFileStream::Close
_TEXT	ENDS
PUBLIC	?Write@COutFileStream@@UAGJPBXIPAI@Z		; COutFileStream::Write
EXTRN	?Write@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z:PROC ; NWindows::NFile::NIO::COutFile::Write
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$ = -13						; size = 1
_realProcessedSize$ = -8				; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Write@COutFileStream@@UAGJPBXIPAI@Z PROC		; COutFileStream::Write
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 346
	lea	eax, DWORD PTR _realProcessedSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Write@COutFile@NIO@NFile@NWindows@@QAE_NPBXIAAI@Z ; NWindows::NFile::NIO::COutFile::Write
	mov	BYTE PTR _result$[ebp], al
; Line 347
	mov	eax, DWORD PTR _realProcessedSize$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+24]
	adc	ecx, DWORD PTR [edx+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR [edx+28], ecx
; Line 348
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN1@Write
; Line 349
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	ecx, DWORD PTR _realProcessedSize$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@Write:
; Line 350
	movzx	edx, BYTE PTR _result$[ebp]
	push	edx
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
; Line 365
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Write
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN6@Write:
	DD	1
	DD	$LN5@Write
$LN5@Write:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@Write
$LN4@Write:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Write@COutFileStream@@UAGJPBXIPAI@Z ENDP		; COutFileStream::Write
_TEXT	ENDS
PUBLIC	?Seek@COutFileStream@@UAGJ_JIPA_K@Z		; COutFileStream::Seek
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_result$ = -17						; size = 1
_realNewPosition$ = -12					; size = 8
_this$ = 8						; size = 4
_offset$ = 12						; size = 8
_seekOrigin$ = 20					; size = 4
_newPosition$ = 24					; size = 4
?Seek@COutFileStream@@UAGJ_JIPA_K@Z PROC		; COutFileStream::Seek
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 369
	cmp	DWORD PTR _seekOrigin$[ebp], 3
	jb	SHORT $LN2@Seek@2
; Line 370
	mov	eax, -2147287039			; 80030001H
	jmp	SHORT $LN3@Seek@2
$LN2@Seek@2:
; Line 375
	lea	eax, DWORD PTR _realNewPosition$[ebp]
	push	eax
	mov	ecx, DWORD PTR _seekOrigin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _offset$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	mov	BYTE PTR _result$[ebp], al
; Line 376
	cmp	DWORD PTR _newPosition$[ebp], 0
	je	SHORT $LN1@Seek@2
; Line 377
	mov	ecx, DWORD PTR _newPosition$[ebp]
	mov	edx, DWORD PTR _realNewPosition$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _realNewPosition$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
$LN1@Seek@2:
; Line 378
	movzx	ecx, BYTE PTR _result$[ebp]
	push	ecx
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
$LN3@Seek@2:
; Line 390
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Seek@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN7@Seek@2:
	DD	1
	DD	$LN6@Seek@2
$LN6@Seek@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@Seek@2
$LN5@Seek@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?Seek@COutFileStream@@UAGJ_JIPA_K@Z ENDP		; COutFileStream::Seek
_TEXT	ENDS
PUBLIC	?SetSize@COutFileStream@@UAGJ_K@Z		; COutFileStream::SetSize
EXTRN	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z:PROC ; NWindows::NFile::NIO::CFileBase::Seek
EXTRN	?SetLength@COutFile@NIO@NFile@NWindows@@QAE_N_K@Z:PROC ; NWindows::NFile::NIO::COutFile::SetLength
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv93 = -40						; size = 4
_currentPos2$ = -32					; size = 8
_result$ = -17						; size = 1
_currentPos$ = -12					; size = 8
_this$ = 8						; size = 4
_newSize$ = 12						; size = 8
?SetSize@COutFileStream@@UAGJ_K@Z PROC			; COutFileStream::SetSize
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 397
	lea	eax, DWORD PTR _currentPos$[ebp]
	push	eax
	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_JKAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@SetSize
; Line 398
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN2@SetSize
$LN1@SetSize:
; Line 399
	mov	edx, DWORD PTR _newSize$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _newSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetLength@COutFile@NIO@NFile@NWindows@@QAE_N_K@Z ; NWindows::NFile::NIO::COutFile::SetLength
	mov	BYTE PTR _result$[ebp], al
; Line 401
	movzx	ecx, BYTE PTR _result$[ebp]
	test	ecx, ecx
	je	SHORT $LN4@SetSize
	lea	edx, DWORD PTR _currentPos2$[ebp]
	push	edx
	mov	eax, DWORD PTR _currentPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _currentPos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Seek@CFileBase@NIO@NFile@NWindows@@QBE_N_KAA_K@Z ; NWindows::NFile::NIO::CFileBase::Seek
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@SetSize
	mov	DWORD PTR tv93[ebp], 1
	jmp	SHORT $LN5@SetSize
$LN4@SetSize:
	mov	DWORD PTR tv93[ebp], 0
$LN5@SetSize:
	mov	al, BYTE PTR tv93[ebp]
	mov	BYTE PTR _result$[ebp], al
; Line 402
	movzx	eax, BYTE PTR _result$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 2147467259				; 7fffbffbH
	add	eax, -2147467259			; 80004005H
$LN2@SetSize:
; Line 409
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN9@SetSize:
	DD	2
	DD	$LN8@SetSize
$LN8@SetSize:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN6@SetSize
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN7@SetSize
$LN7@SetSize:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN6@SetSize:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?SetSize@COutFileStream@@UAGJ_K@Z ENDP			; COutFileStream::SetSize
_TEXT	ENDS
PUBLIC	?GetSize@COutFileStream@@QAEJPA_K@Z		; COutFileStream::GetSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 4
?GetSize@COutFileStream@@QAEJPA_K@Z PROC		; COutFileStream::GetSize
; _this$ = ecx
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 413
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetLength@CFileBase@NIO@NFile@NWindows@@QBE_NAA_K@Z ; NWindows::NFile::NIO::CFileBase::GetLength
	movzx	ecx, al
	push	ecx
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
; Line 414
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSize@COutFileStream@@QAEJPA_K@Z ENDP		; COutFileStream::GetSize
_TEXT	ENDS
PUBLIC	?Write@CStdOutFileStream@@UAGJPBXIPAI@Z		; CStdOutFileStream::Write
EXTRN	__imp__WriteFile@20:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_sizeTemp$68190 = -20					; size = 4
_res$ = -16						; size = 4
_realProcessedSize$ = -8				; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Write@CStdOutFileStream@@UAGJPBXIPAI@Z PROC		; CStdOutFileStream::Write
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 430
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN4@Write@2
; Line 431
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@Write@2:
; Line 436
	mov	DWORD PTR _res$[ebp], 1
; Line 437
	cmp	DWORD PTR _size$[ebp], 0
	jbe	$LN3@Write@2
; Line 441
	mov	DWORD PTR _sizeTemp$68190[ebp], 32768	; 00008000H
; Line 442
	mov	ecx, DWORD PTR _sizeTemp$68190[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jbe	SHORT $LN2@Write@2
; Line 443
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR _sizeTemp$68190[ebp], edx
$LN2@Write@2:
; Line 445
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _realProcessedSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sizeTemp$68190[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	edi, esp
	push	-11					; fffffff5H
	call	DWORD PTR __imp__GetStdHandle@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 446
	mov	eax, DWORD PTR _realProcessedSize$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
	adc	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], ecx
; Line 447
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, DWORD PTR _realProcessedSize$[ebp]
	mov	DWORD PTR _size$[ebp], eax
; Line 448
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _realProcessedSize$[ebp]
	mov	DWORD PTR _data$[ebp], ecx
; Line 449
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN3@Write@2
; Line 450
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _realProcessedSize$[ebp]
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@Write@2:
; Line 452
	cmp	DWORD PTR _res$[ebp], 0
	setne	dl
	movzx	eax, dl
	push	eax
	call	?ConvertBoolToHRESULT@@YGJ_N@Z		; ConvertBoolToHRESULT
; Line 473
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Write@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN9@Write@2:
	DD	1
	DD	$LN8@Write@2
$LN8@Write@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@Write@2
$LN7@Write@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Write@CStdOutFileStream@@UAGJPBXIPAI@Z ENDP		; CStdOutFileStream::Write
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@_K@@YG_K_K0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 8
_a$ = 8							; size = 8
_b$ = 16						; size = 8
??$MyMin@_K@@YG_K_K0@Z PROC				; MyMin<unsigned __int64>, COMDAT
; Line 7
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp+4]
	cmp	eax, DWORD PTR _b$[ebp+4]
	ja	SHORT $LN3@MyMin@2
	jb	SHORT $LN5@MyMin@2
	mov	ecx, DWORD PTR _a$[ebp]
	cmp	ecx, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin@2
$LN5@MyMin@2:
	mov	edx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], edx
	mov	eax, DWORD PTR _a$[ebp+4]
	mov	DWORD PTR tv65[ebp+4], eax
	jmp	SHORT $LN4@MyMin@2
$LN3@MyMin@2:
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR _b$[ebp+4]
	mov	DWORD PTR tv65[ebp+4], edx
$LN4@MyMin@2:
	mov	eax, DWORD PTR tv65[ebp]
	mov	edx, DWORD PTR tv65[ebp+4]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$MyMin@_K@@YG_K_K0@Z ENDP				; MyMin<unsigned __int64>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CInFileStream@@WM@AGKXZ PROC			; [thunk]:CInFileStream::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CInFileStream@@UAGKXZ		; CInFileStream::AddRef
?AddRef@CInFileStream@@WM@AGKXZ ENDP			; [thunk]:CInFileStream::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CInFileStream::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
?QueryInterface@CInFileStream@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CInFileStream::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CInFileStream::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
?QueryInterface@CInFileStream@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CInFileStream::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CInFileStream::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CInFileStream@@UAGJABU_GUID@@PAPAX@Z ; CInFileStream::QueryInterface
?QueryInterface@CInFileStream@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CInFileStream::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@W3AGKXZ
_TEXT	SEGMENT
?Release@CInFileStream@@W3AGKXZ PROC			; [thunk]:CInFileStream::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CInFileStream@@UAGKXZ		; CInFileStream::Release
?Release@CInFileStream@@W3AGKXZ ENDP			; [thunk]:CInFileStream::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@W7AGKXZ
_TEXT	SEGMENT
?Release@CInFileStream@@W7AGKXZ PROC			; [thunk]:CInFileStream::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CInFileStream@@UAGKXZ		; CInFileStream::Release
?Release@CInFileStream@@W7AGKXZ ENDP			; [thunk]:CInFileStream::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CInFileStream@@W3AGKXZ PROC			; [thunk]:CInFileStream::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CInFileStream@@UAGKXZ		; CInFileStream::AddRef
?AddRef@CInFileStream@@W3AGKXZ ENDP			; [thunk]:CInFileStream::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CInFileStream@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CInFileStream@@WM@AGKXZ PROC			; [thunk]:CInFileStream::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CInFileStream@@UAGKXZ		; CInFileStream::Release
?Release@CInFileStream@@WM@AGKXZ ENDP			; [thunk]:CInFileStream::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CInFileStream@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CInFileStream@@W7AGKXZ PROC			; [thunk]:CInFileStream::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CInFileStream@@UAGKXZ		; CInFileStream::AddRef
?AddRef@CInFileStream@@W7AGKXZ ENDP			; [thunk]:CInFileStream::AddRef`adjustor{8}'
_TEXT	ENDS
END

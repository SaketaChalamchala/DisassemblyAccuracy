; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\Bcj2Coder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0CBaseCoder@NBcj2@NCompress@@QAE@XZ		; NCompress::NBcj2::CBaseCoder::CBaseCoder
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\compress\bcj2coder.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_i$66756 = -8						; size = 4
_this$ = -4						; size = 4
??0CBaseCoder@NBcj2@NCompress@@QAE@XZ PROC		; NCompress::NBcj2::CBaseCoder::CBaseCoder
; _this$ = ecx
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 16
	mov	DWORD PTR _i$66756[ebp], 0
	jmp	SHORT $LN3@CBaseCoder
$LN2@CBaseCoder:
	mov	eax, DWORD PTR _i$66756[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66756[ebp], eax
$LN3@CBaseCoder:
	cmp	DWORD PTR _i$66756[ebp], 5
	jge	SHORT $LN4@CBaseCoder
; Line 18
	mov	ecx, DWORD PTR _i$66756[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], 0
; Line 19
	mov	eax, DWORD PTR _i$66756[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+20], 0
; Line 20
	mov	edx, DWORD PTR _i$66756[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+40], 262144	; 00040000H
; Line 21
	jmp	SHORT $LN2@CBaseCoder
$LN4@CBaseCoder:
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseCoder@NBcj2@NCompress@@QAE@XZ ENDP		; NCompress::NBcj2::CBaseCoder::CBaseCoder
_TEXT	ENDS
PUBLIC	??1CBaseCoder@NBcj2@NCompress@@QAE@XZ		; NCompress::NBcj2::CBaseCoder::~CBaseCoder
EXTRN	_MidFree@4:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$66763 = -8						; size = 4
_this$ = -4						; size = 4
??1CBaseCoder@NBcj2@NCompress@@QAE@XZ PROC		; NCompress::NBcj2::CBaseCoder::~CBaseCoder
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	DWORD PTR _i$66763[ebp], 0
	jmp	SHORT $LN3@CBaseCoder@2
$LN2@CBaseCoder@2:
	mov	eax, DWORD PTR _i$66763[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66763[ebp], eax
$LN3@CBaseCoder@2:
	cmp	DWORD PTR _i$66763[ebp], 5
	jge	SHORT $LN4@CBaseCoder@2
; Line 27
	mov	ecx, DWORD PTR _i$66763[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_MidFree@4
	jmp	SHORT $LN2@CBaseCoder@2
$LN4@CBaseCoder@2:
; Line 28
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBaseCoder@NBcj2@NCompress@@QAE@XZ ENDP		; NCompress::NBcj2::CBaseCoder::~CBaseCoder
_TEXT	ENDS
PUBLIC	?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z	; NCompress::NBcj2::CBaseCoder::Alloc
EXTRN	_MidAlloc@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_buf$66782 = -24					; size = 4
_kMinBufSize$66777 = -20				; size = 4
_newSize$66776 = -16					; size = 4
_i$66772 = -12						; size = 4
_num$ = -8						; size = 4
_this$ = -4						; size = 4
_allocForOrig$ = 8					; size = 1
?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z PROC	; NCompress::NBcj2::CBaseCoder::Alloc
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 32
	movzx	eax, BYTE PTR _allocForOrig$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	add	eax, 4
	mov	DWORD PTR _num$[ebp], eax
; Line 33
	mov	DWORD PTR _i$66772[ebp], 0
	jmp	SHORT $LN8@Alloc
$LN7@Alloc:
	mov	ecx, DWORD PTR _i$66772[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$66772[ebp], ecx
$LN8@Alloc:
	mov	edx, DWORD PTR _i$66772[ebp]
	cmp	edx, DWORD PTR _num$[ebp]
	jae	$LN6@Alloc
; Line 35
	mov	eax, DWORD PTR _i$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+40]
	mov	DWORD PTR _newSize$66776[ebp], edx
; Line 36
	mov	DWORD PTR _kMinBufSize$66777[ebp], 1
; Line 37
	cmp	DWORD PTR _newSize$66776[ebp], 1
	jae	SHORT $LN5@Alloc
; Line 38
	mov	DWORD PTR _newSize$66776[ebp], 1
$LN5@Alloc:
; Line 39
	mov	eax, DWORD PTR _i$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	je	SHORT $LN3@Alloc
	mov	edx, DWORD PTR _i$66772[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newSize$66776[ebp]
	cmp	ecx, DWORD PTR [eax+edx*4+20]
	je	SHORT $LN4@Alloc
$LN3@Alloc:
; Line 41
	mov	edx, DWORD PTR _i$66772[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4], 0
	je	SHORT $LN2@Alloc
; Line 43
	mov	ecx, DWORD PTR _i$66772[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	call	_MidFree@4
; Line 44
	mov	ecx, DWORD PTR _i$66772[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], 0
$LN2@Alloc:
; Line 46
	mov	eax, DWORD PTR _i$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+20], 0
; Line 47
	mov	edx, DWORD PTR _newSize$66776[ebp]
	push	edx
	call	_MidAlloc@4
	mov	DWORD PTR _buf$66782[ebp], eax
; Line 48
	mov	eax, DWORD PTR _i$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _buf$66782[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 49
	cmp	DWORD PTR _buf$66782[ebp], 0
	jne	SHORT $LN1@Alloc
; Line 50
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN9@Alloc
$LN1@Alloc:
; Line 51
	mov	eax, DWORD PTR _i$66772[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _newSize$66776[ebp]
	mov	DWORD PTR [ecx+eax*4+20], edx
$LN4@Alloc:
; Line 53
	jmp	$LN7@Alloc
$LN6@Alloc:
; Line 54
	xor	eax, eax
$LN9@Alloc:
; Line 55
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z ENDP	; NCompress::NBcj2::CBaseCoder::Alloc
_TEXT	ENDS
PUBLIC	??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ ; NCompress::NBcj2::CEncoder::`vftable'
PUBLIC	??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NBcj2::CEncoder::`vftable'
PUBLIC	??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@ ; NCompress::NBcj2::CEncoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressSetBufSize@@QAE@XZ			; ICompressSetBufSize::ICompressSetBufSize
PUBLIC	??0ICompressSetCoderProperties@@QAE@XZ		; ICompressSetCoderProperties::ICompressSetCoderProperties
PUBLIC	??0ICompressCoder2@@QAE@XZ			; ICompressCoder2::ICompressCoder2
PUBLIC	??0CEncoder@NBcj2@NCompress@@QAE@XZ		; NCompress::NBcj2::CEncoder::CEncoder
PUBLIC	??_R4CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@ ; NCompress::NBcj2::CEncoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEncoder@NBcj2@NCompress@@@8		; NCompress::NBcj2::CEncoder `RTTI Type Descriptor'
PUBLIC	??_R3CEncoder@NBcj2@NCompress@@8		; NCompress::NBcj2::CEncoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEncoder@NBcj2@NCompress@@8		; NCompress::NBcj2::CEncoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEncoder@NBcj2@NCompress@@8	; NCompress::NBcj2::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder2@@8		; ICompressCoder2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder2@@@8			; ICompressCoder2 `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder2@@8				; ICompressCoder2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder2@@8				; ICompressCoder2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderProperties@@@8		; ICompressSetCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@ICompressSetBufSize@@8		; ICompressSetBufSize::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressSetBufSize@@@8			; ICompressSetBufSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetBufSize@@8			; ICompressSetBufSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetBufSize@@8			; ICompressSetBufSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetBufSize@@8		; ICompressSetBufSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@CBaseCoder@NBcj2@NCompress@@8	; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AVCBaseCoder@NBcj2@NCompress@@@8		; NCompress::NBcj2::CBaseCoder `RTTI Type Descriptor'
PUBLIC	??_R3CBaseCoder@NBcj2@NCompress@@8		; NCompress::NBcj2::CBaseCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseCoder@NBcj2@NCompress@@8		; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseCoder@NBcj2@NCompress@@8	; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CEncoder::QueryInterface
PUBLIC	?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ	; NCompress::NBcj2::CEncoder::AddRef
PUBLIC	?Release@CEncoder@NBcj2@NCompress@@UAGKXZ	; NCompress::NBcj2::CEncoder::Release
PUBLIC	?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ; NCompress::NBcj2::CEncoder::Code
PUBLIC	??_R4CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NBcj2::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CEncoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CEncoder@NBcj2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBcj2::CEncoder::AddRef`adjustor{4}'
PUBLIC	?Release@CEncoder@NBcj2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBcj2::CEncoder::Release`adjustor{4}'
PUBLIC	?SetCoderProperties@CEncoder@NBcj2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ; NCompress::NBcj2::CEncoder::SetCoderProperties
PUBLIC	??_R4CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ ; NCompress::NBcj2::CEncoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CEncoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CEncoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CEncoder@NBcj2@NCompress@@W7AGKXZ	; [thunk]:NCompress::NBcj2::CEncoder::AddRef`adjustor{8}'
PUBLIC	?Release@CEncoder@NBcj2@NCompress@@W7AGKXZ	; [thunk]:NCompress::NBcj2::CEncoder::Release`adjustor{8}'
PUBLIC	?SetInBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z ; NCompress::NBcj2::CEncoder::SetInBufSize
PUBLIC	?SetOutBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z ; NCompress::NBcj2::CEncoder::SetOutBufSize
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
rdata$r	SEGMENT
??_R4CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ DD 00H ; NCompress::NBcj2::CEncoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@
rdata$r	SEGMENT
??_R4CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@ DD 00H ; NCompress::NBcj2::CEncoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseCoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseCoder@NBcj2@NCompress@@8 DD FLAT:??_R0?AVCBaseCoder@NBcj2@NCompress@@@8 ; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseCoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseCoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R2CBaseCoder@NBcj2@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CBaseCoder@NBcj2@NCompress@@8 ; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseCoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R3CBaseCoder@NBcj2@NCompress@@8 DD 00H		; NCompress::NBcj2::CBaseCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseCoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseCoder@NBcj2@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCBaseCoder@NBcj2@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NBcj2::CBaseCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseCoder@NBcj2@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@CBaseCoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@CBaseCoder@NBcj2@NCompress@@8 DD FLAT:??_R0?AVCBaseCoder@NBcj2@NCompress@@@8 ; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseCoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetBufSize@@8 DD FLAT:??_R0?AUICompressSetBufSize@@@8 ; ICompressSetBufSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R2ICompressSetBufSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetBufSize@@8 ; ICompressSetBufSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R3ICompressSetBufSize@@8 DD 00H			; ICompressSetBufSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetBufSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetBufSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetBufSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetBufSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetBufSize@@8 DD FLAT:??_R0?AUICompressSetBufSize@@@8 ; ICompressSetBufSize::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderProperties@@8 ; ICompressSetCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderProperties@@8 DD 00H		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder2@@8
rdata$r	SEGMENT
??_R2ICompressCoder2@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder2@@8 ; ICompressCoder2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder2@@8
rdata$r	SEGMENT
??_R3ICompressCoder2@@8 DD 00H				; ICompressCoder2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder2@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder2@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder2@@8 DD FLAT:??_R0?AUICompressCoder2@@@8 ; ICompressCoder2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEncoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEncoder@NBcj2@NCompress@@8 DD FLAT:??_R0?AVCEncoder@NBcj2@NCompress@@@8 ; NCompress::NBcj2::CEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEncoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CEncoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R2CEncoder@NBcj2@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CEncoder@NBcj2@NCompress@@8 ; NCompress::NBcj2::CEncoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder2@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetBufSize@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1BA@?0A@EA@CBaseCoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R3CEncoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R3CEncoder@NBcj2@NCompress@@8 DD 00H			; NCompress::NBcj2::CEncoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	09H
	DD	FLAT:??_R2CEncoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEncoder@NBcj2@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCEncoder@NBcj2@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NBcj2::CEncoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEncoder@NBcj2@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@
rdata$r	SEGMENT
??_R4CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@ DD 00H ; NCompress::NBcj2::CEncoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEncoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CEncoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
CONST	SEGMENT
??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ DD FLAT:??_R4CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ ; NCompress::NBcj2::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NBcj2@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CEncoder@NBcj2@NCompress@@W7AGKXZ
	DD	FLAT:?SetInBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z
	DD	FLAT:?SetOutBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@ ; NCompress::NBcj2::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NBcj2@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CEncoder@NBcj2@NCompress@@W3AGKXZ
	DD	FLAT:?SetCoderProperties@CEncoder@NBcj2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@
CONST	SEGMENT
??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@ DD FLAT:??_R4CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@ ; NCompress::NBcj2::CEncoder::`vftable'
	DD	FLAT:?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ
	DD	FLAT:?Release@CEncoder@NBcj2@NCompress@@UAGKXZ
	DD	FLAT:?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CEncoder@NBcj2@NCompress@@QAE@XZ PROC		; NCompress::NBcj2::CEncoder::CEncoder
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ICompressSetBufSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CBaseCoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CBaseCoder::CBaseCoder
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 67108864		; 04000000H
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CEncoder@NBcj2@NCompress@@QAE@XZ ENDP		; NCompress::NBcj2::CEncoder::CEncoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ICompressSetBufSize:BYTE
EXTRN	_IID_ICompressSetCoderProperties:BYTE
EXTRN	_IID_ICompressCoder2:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NBcj2::CEncoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\bcj2coder.h
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN7@QueryInter
$LN8@QueryInter:
	push	OFFSET _IID_ICompressCoder2
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN7@QueryInter
$LN6@QueryInter:
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN11@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN12@QueryInter
$LN11@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN12@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN7@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ICompressSetBufSize
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN14@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN7@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN9@QueryInter
$LN7@QueryInter:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
	xor	eax, eax
$LN9@QueryInter:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NBcj2::CEncoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ PROC		; NCompress::NBcj2::CEncoder::AddRef, COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ ENDP		; NCompress::NBcj2::CEncoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z		; NCompress::NBcj2::CEncoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CEncoder@NBcj2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T67531 = -8						; size = 4
$T67530 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CEncoder@NBcj2@NCompress@@UAGKXZ PROC		; NCompress::NBcj2::CEncoder::Release, COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+12], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67531[ebp], edx
	mov	eax, DWORD PTR $T67531[ebp]
	mov	DWORD PTR $T67530[ebp], eax
	cmp	DWORD PTR $T67530[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T67530[ebp]
	call	??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CEncoder@NBcj2@NCompress@@UAGKXZ ENDP		; NCompress::NBcj2::CEncoder::Release
_TEXT	ENDS
PUBLIC	??1CEncoder@NBcj2@NCompress@@QAE@XZ		; NCompress::NBcj2::CEncoder::~CEncoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z PROC		; NCompress::NBcj2::CEncoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CEncoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CEncoder::~CEncoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCEncoder@NBcj2@NCompress@@QAEPAXI@Z ENDP		; NCompress::NBcj2::CEncoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	??_7ICompressCoder2@@6B@			; ICompressCoder2::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder2@@6B@			; ICompressCoder2::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder2@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder2@@6B@ DD 00H			; ICompressCoder2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder2@@@8
	DD	FLAT:??_R3ICompressCoder2@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder2@@6B@
CONST	SEGMENT
??_7ICompressCoder2@@6B@ DD FLAT:??_R4ICompressCoder2@@6B@ ; ICompressCoder2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder2@@QAE@XZ PROC				; ICompressCoder2::ICompressCoder2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder2@@QAE@XZ ENDP				; ICompressCoder2::ICompressCoder2
_TEXT	ENDS
PUBLIC	??_7ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`vftable'
PUBLIC	??_R4ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderProperties@@6B@ DD 00H		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderProperties@@@8
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressSetCoderProperties@@6B@ DD FLAT:??_R4ICompressSetCoderProperties@@6B@ ; ICompressSetCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderProperties@@QAE@XZ PROC		; ICompressSetCoderProperties::ICompressSetCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderProperties@@QAE@XZ ENDP		; ICompressSetCoderProperties::ICompressSetCoderProperties
_TEXT	ENDS
PUBLIC	??_7ICompressSetBufSize@@6B@			; ICompressSetBufSize::`vftable'
PUBLIC	??_R4ICompressSetBufSize@@6B@			; ICompressSetBufSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetBufSize@@6B@
rdata$r	SEGMENT
??_R4ICompressSetBufSize@@6B@ DD 00H			; ICompressSetBufSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetBufSize@@@8
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetBufSize@@6B@
CONST	SEGMENT
??_7ICompressSetBufSize@@6B@ DD FLAT:??_R4ICompressSetBufSize@@6B@ ; ICompressSetBufSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetBufSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetBufSize@@QAE@XZ PROC			; ICompressSetBufSize::ICompressSetBufSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetBufSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetBufSize@@QAE@XZ ENDP			; ICompressSetBufSize::ICompressSetBufSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CEncoder@NBcj2@NCompress@@QAE@XZ PROC		; NCompress::NBcj2::CEncoder::~CEncoder
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bcj2coder.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CEncoder@NBcj2@NCompress@@6BICompressCoder2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CEncoder@NBcj2@NCompress@@6BICompressSetCoderProperties@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CEncoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CBaseCoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CBaseCoder::~CBaseCoder
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CEncoder@NBcj2@NCompress@@QAE@XZ ENDP		; NCompress::NBcj2::CEncoder::~CEncoder
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_size$ = 16						; size = 4
?SetInBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z PROC	; NCompress::NBcj2::CEncoder::SetInBufSize
; Line 64
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+64], ecx
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
?SetInBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z ENDP	; NCompress::NBcj2::CEncoder::SetInBufSize
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
_streamIndex$ = 12					; size = 4
_size$ = 16						; size = 4
?SetOutBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z PROC	; NCompress::NBcj2::CEncoder::SetOutBufSize
; Line 65
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _streamIndex$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+eax*4+48], edx
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
?SetOutBufSize@CEncoder@NBcj2@NCompress@@UAGJII@Z ENDP	; NCompress::NBcj2::CEncoder::SetOutBufSize
; Function compile flags: /Odtp /RTCsu
tv71 = -20						; size = 4
_propID$66827 = -16					; size = 4
_prop$66826 = -12					; size = 4
_i$66822 = -8						; size = 4
_relatLim$ = -4						; size = 4
_this$ = 8						; size = 4
_propIDs$ = 12						; size = 4
_props$ = 16						; size = 4
_numProps$ = 20						; size = 4
?SetCoderProperties@CEncoder@NBcj2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z PROC ; NCompress::NBcj2::CEncoder::SetCoderProperties
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 69
	mov	DWORD PTR _relatLim$[ebp], 67108864	; 04000000H
; Line 71
	mov	DWORD PTR _i$66822[ebp], 0
	jmp	SHORT $LN12@SetCoderPr
$LN11@SetCoderPr:
	mov	eax, DWORD PTR _i$66822[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66822[ebp], eax
$LN12@SetCoderPr:
	mov	ecx, DWORD PTR _i$66822[ebp]
	cmp	ecx, DWORD PTR _numProps$[ebp]
	jae	SHORT $LN10@SetCoderPr
; Line 73
	mov	edx, DWORD PTR _i$66822[ebp]
	shl	edx, 4
	add	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR _prop$66826[ebp], edx
; Line 74
	mov	eax, DWORD PTR _i$66822[ebp]
	mov	ecx, DWORD PTR _propIDs$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _propID$66827[ebp], edx
; Line 75
	cmp	DWORD PTR _propID$66827[ebp], 16	; 00000010H
	jb	SHORT $LN9@SetCoderPr
; Line 76
	jmp	SHORT $LN11@SetCoderPr
$LN9@SetCoderPr:
; Line 77
	mov	eax, DWORD PTR _propID$66827[ebp]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 1
	je	SHORT $LN6@SetCoderPr
	cmp	DWORD PTR tv71[ebp], 13			; 0000000dH
	je	SHORT $LN3@SetCoderPr
	cmp	DWORD PTR tv71[ebp], 15			; 0000000fH
	je	SHORT $LN2@SetCoderPr
	jmp	SHORT $LN1@SetCoderPr
$LN6@SetCoderPr:
; Line 93
	mov	ecx, DWORD PTR _prop$66826[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 19					; 00000013H
	je	SHORT $LN5@SetCoderPr
; Line 94
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN13@SetCoderPr
$LN5@SetCoderPr:
; Line 95
	mov	eax, DWORD PTR _prop$66826[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _relatLim$[ebp], ecx
; Line 96
	cmp	DWORD PTR _relatLim$[ebp], -2147483648	; 80000000H
	jbe	SHORT $LN4@SetCoderPr
; Line 97
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN13@SetCoderPr
$LN4@SetCoderPr:
; Line 98
	jmp	SHORT $LN7@SetCoderPr
$LN3@SetCoderPr:
; Line 102
	jmp	SHORT $LN11@SetCoderPr
$LN2@SetCoderPr:
; Line 104
	jmp	SHORT $LN11@SetCoderPr
$LN1@SetCoderPr:
; Line 106
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN13@SetCoderPr
$LN7@SetCoderPr:
; Line 108
	jmp	$LN11@SetCoderPr
$LN10@SetCoderPr:
; Line 110
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _relatLim$[ebp]
	mov	DWORD PTR [edx+72], eax
; Line 112
	xor	eax, eax
$LN13@SetCoderPr:
; Line 113
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetCoderProperties@CEncoder@NBcj2@NCompress@@UAGJPBKPBUtagPROPVARIANT@@I@Z ENDP ; NCompress::NBcj2::CEncoder::SetCoderProperties
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ ; CMyComPtr<ICompressGetSubStreamSize>::Release
PUBLIC	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
PUBLIC	??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ ; CMyComPtr<ICompressGetSubStreamSize>::operator->
PUBLIC	??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ ; CMyComPtr<ICompressGetSubStreamSize>::operator ICompressGetSubStreamSize *
PUBLIC	??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ ; CMyComPtr<ICompressGetSubStreamSize>::operator&
PUBLIC	??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::CMyComPtr<ICompressGetSubStreamSize>
PUBLIC	__$ArrayPad$
PUBLIC	?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ; NCompress::NBcj2::CEncoder::CodeReal
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
EXTRN	_Bcj2Enc_Encode@4:PROC
EXTRN	_Bcj2Enc_Init@4:PROC
EXTRN	_IID_ICompressGetSubStreamSize:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$0
__ehfuncinfo$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv668 = -904						; size = 8
tv576 = -896						; size = 8
tv573 = -888						; size = 8
tv183 = -880						; size = 4
tv171 = -876						; size = 4
$T67566 = -872						; size = 4
$T67565 = -868						; size = 4
$T67564 = -864						; size = 4
$T67563 = -860						; size = 4
$T67562 = -856						; size = 4
$T67561 = -852						; size = 4
$T67560 = -848						; size = 4
$T67559 = -844						; size = 4
___result__$66979 = -840				; size = 4
_i$66975 = -836						; size = 4
___result__$66972 = -832				; size = 4
_outSize2$66971 = -824					; size = 8
___result__$66966 = -812				; size = 4
_curSize$66965 = -804					; size = 4
___result__$66953 = -796				; size = 4
_curSize$66952 = -792					; size = 4
_rem$66933 = -788					; size = 4
_isAccurateEnd$66930 = -781				; size = 1
_newEndPos$66929 = -780					; size = 8
_result$66926 = -772					; size = 4
_subStreamSize$66925 = -764				; size = 8
_readWasFinished$ = -749				; size = 1
_subStreamStartPos$ = -748				; size = 8
_subStreamIndex$ = -740					; size = 8
_needSubSize$ = -729					; size = 1
_outSizeRc$ = -728					; size = 8
_currentInPos$ = -716					; size = 8
_totalStreamRead$ = -704				; size = 8
_prevProgress$ = -696					; size = 8
_numBytes_in_ReadBuf$ = -688				; size = 4
_i$66905 = -684						; size = 4
_enc$ = -676						; size = 624
_getSubStreamSize$ = -44				; size = 4
_inSize$66861 = -36					; size = 8
_fileSize_for_Conv$ = -28				; size = 4
___result__$66857 = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_inStreams$ = 8						; size = 4
_inSizes$ = 12						; size = 4
_numInStreams$ = 16					; size = 4
_outStreams$ = 20					; size = 4
___formal$ = 24						; size = 4
_numOutStreams$ = 28					; size = 4
_progress$ = 32						; size = 4
?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z PROC ; NCompress::NBcj2::CEncoder::CodeReal
; _this$ = ecx
; Line 119
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 892				; 0000037cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-904]
	mov	ecx, 223				; 000000dfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 120
	cmp	DWORD PTR _numInStreams$[ebp], 1
	jne	SHORT $LN37@CodeReal
	cmp	DWORD PTR _numOutStreams$[ebp], 4
	je	SHORT $LN38@CodeReal
$LN37@CodeReal:
; Line 121
	mov	eax, -2147024809			; 80070057H
	jmp	$LN39@CodeReal
$LN38@CodeReal:
; Line 123
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z ; NCompress::NBcj2::CBaseCoder::Alloc
	mov	DWORD PTR ___result__$66857[ebp], eax
	cmp	DWORD PTR ___result__$66857[ebp], 0
	je	SHORT $LN36@CodeReal
	mov	eax, DWORD PTR ___result__$66857[ebp]
	jmp	$LN39@CodeReal
$LN36@CodeReal:
; Line 125
	mov	DWORD PTR _fileSize_for_Conv$[ebp], 0
; Line 126
	cmp	DWORD PTR _inSizes$[ebp], 0
	je	SHORT $LN35@CodeReal
	mov	eax, DWORD PTR _inSizes$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN35@CodeReal
; Line 128
	mov	ecx, DWORD PTR _inSizes$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _inSize$66861[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _inSize$66861[ebp+4], ecx
; Line 129
	cmp	DWORD PTR _inSize$66861[ebp+4], 0
	ja	SHORT $LN35@CodeReal
	jb	SHORT $LN48@CodeReal
	cmp	DWORD PTR _inSize$66861[ebp], -2147483648 ; 80000000H
	ja	SHORT $LN35@CodeReal
$LN48@CodeReal:
; Line 130
	mov	edx, DWORD PTR _inSize$66861[ebp]
	mov	DWORD PTR _fileSize_for_Conv$[ebp], edx
$LN35@CodeReal:
; Line 133
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::CMyComPtr<ICompressGetSubStreamSize>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 134
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ ; CMyComPtr<ICompressGetSubStreamSize>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICompressGetSubStreamSize
	mov	eax, DWORD PTR _inStreams$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _inStreams$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _enc$[ebp+32], ecx
; Line 139
	mov	edx, DWORD PTR _enc$[ebp+32]
	mov	DWORD PTR _enc$[ebp+36], edx
; Line 142
	mov	DWORD PTR _i$66905[ebp], 0
	jmp	SHORT $LN33@CodeReal
$LN32@CodeReal:
	mov	eax, DWORD PTR _i$66905[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66905[ebp], eax
$LN33@CodeReal:
	cmp	DWORD PTR _i$66905[ebp], 4
	jge	SHORT $LN31@CodeReal
; Line 144
	mov	ecx, DWORD PTR _i$66905[ebp]
	mov	edx, DWORD PTR _i$66905[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+edx*4+16]
	mov	DWORD PTR _enc$[ebp+ecx*4], edx
; Line 145
	mov	eax, DWORD PTR _i$66905[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+16]
	mov	eax, DWORD PTR _i$66905[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+eax*4+36]
	mov	eax, DWORD PTR _i$66905[ebp]
	mov	DWORD PTR _enc$[ebp+eax*4+16], edx
; Line 146
	jmp	SHORT $LN32@CodeReal
$LN31@CodeReal:
; Line 149
	mov	DWORD PTR _numBytes_in_ReadBuf$[ebp], 0
; Line 150
	mov	DWORD PTR _prevProgress$[ebp], 0
	mov	DWORD PTR _prevProgress$[ebp+4], 0
; Line 151
	mov	DWORD PTR _totalStreamRead$[ebp], 0
	mov	DWORD PTR _totalStreamRead$[ebp+4], 0
; Line 152
	mov	DWORD PTR _currentInPos$[ebp], 0
	mov	DWORD PTR _currentInPos$[ebp+4], 0
; Line 153
	mov	DWORD PTR _outSizeRc$[ebp], 0
	mov	DWORD PTR _outSizeRc$[ebp+4], 0
; Line 155
	lea	ecx, DWORD PTR _enc$[ebp]
	push	ecx
	call	_Bcj2Enc_Init@4
; Line 157
	mov	DWORD PTR _enc$[ebp+76], 0
; Line 158
	mov	edx, DWORD PTR _fileSize_for_Conv$[ebp]
	mov	DWORD PTR _enc$[ebp+80], edx
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _enc$[ebp+84], ecx
; Line 162
	mov	DWORD PTR _enc$[ebp+44], 0
; Line 164
	mov	BYTE PTR _needSubSize$[ebp], 0
; Line 165
	mov	DWORD PTR _subStreamIndex$[ebp], 0
	mov	DWORD PTR _subStreamIndex$[ebp+4], 0
; Line 166
	mov	DWORD PTR _subStreamStartPos$[ebp], 0
	mov	DWORD PTR _subStreamStartPos$[ebp+4], 0
; Line 167
	mov	BYTE PTR _readWasFinished$[ebp], 0
$LN30@CodeReal:
; Line 171
	movzx	edx, BYTE PTR _needSubSize$[ebp]
	test	edx, edx
	je	$LN28@CodeReal
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ ; CMyComPtr<ICompressGetSubStreamSize>::operator ICompressGetSubStreamSize *
	test	eax, eax
	je	$LN28@CodeReal
; Line 173
	mov	DWORD PTR _enc$[ebp+76], 0
; Line 174
	mov	eax, DWORD PTR _fileSize_for_Conv$[ebp]
	mov	DWORD PTR _enc$[ebp+80], eax
; Line 175
	mov	DWORD PTR _enc$[ebp+44], 0
$LN27@CodeReal:
; Line 179
	mov	DWORD PTR _subStreamSize$66925[ebp], 0
	mov	DWORD PTR _subStreamSize$66925[ebp+4], 0
; Line 180
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ ; CMyComPtr<ICompressGetSubStreamSize>::operator->
	mov	DWORD PTR tv171[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _subStreamSize$66925[ebp]
	push	ecx
	mov	edx, DWORD PTR _subStreamIndex$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _subStreamIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv171[ebp]
	push	ecx
	mov	edx, DWORD PTR tv171[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$66926[ebp], eax
; Line 181
	mov	BYTE PTR _needSubSize$[ebp], 0
; Line 183
	cmp	DWORD PTR _result$66926[ebp], 0
	jne	$LN25@CodeReal
; Line 185
	mov	edx, DWORD PTR _subStreamStartPos$[ebp]
	add	edx, DWORD PTR _subStreamSize$66925[ebp]
	mov	eax, DWORD PTR _subStreamStartPos$[ebp+4]
	adc	eax, DWORD PTR _subStreamSize$66925[ebp+4]
	mov	DWORD PTR _newEndPos$66929[ebp], edx
	mov	DWORD PTR _newEndPos$66929[ebp+4], eax
; Line 188
	mov	ecx, DWORD PTR _newEndPos$66929[ebp+4]
	cmp	ecx, DWORD PTR _totalStreamRead$[ebp+4]
	jb	SHORT $LN42@CodeReal
	ja	SHORT $LN49@CodeReal
	mov	edx, DWORD PTR _newEndPos$66929[ebp]
	cmp	edx, DWORD PTR _totalStreamRead$[ebp]
	jb	SHORT $LN42@CodeReal
$LN49@CodeReal:
	mov	eax, DWORD PTR _newEndPos$66929[ebp+4]
	cmp	eax, DWORD PTR _totalStreamRead$[ebp+4]
	ja	SHORT $LN41@CodeReal
	jb	SHORT $LN50@CodeReal
	mov	ecx, DWORD PTR _newEndPos$66929[ebp]
	cmp	ecx, DWORD PTR _totalStreamRead$[ebp]
	ja	SHORT $LN41@CodeReal
$LN50@CodeReal:
	movzx	edx, BYTE PTR _readWasFinished$[ebp]
	test	edx, edx
	jne	SHORT $LN42@CodeReal
$LN41@CodeReal:
	mov	DWORD PTR tv183[ebp], 0
	jmp	SHORT $LN43@CodeReal
$LN42@CodeReal:
	mov	DWORD PTR tv183[ebp], 1
$LN43@CodeReal:
	mov	al, BYTE PTR tv183[ebp]
	mov	BYTE PTR _isAccurateEnd$66930[ebp], al
; Line 190
	mov	ecx, DWORD PTR _newEndPos$66929[ebp+4]
	cmp	ecx, DWORD PTR _currentInPos$[ebp+4]
	ja	SHORT $LN24@CodeReal
	jb	SHORT $LN51@CodeReal
	mov	edx, DWORD PTR _newEndPos$66929[ebp]
	cmp	edx, DWORD PTR _currentInPos$[ebp]
	ja	SHORT $LN24@CodeReal
$LN51@CodeReal:
	movzx	eax, BYTE PTR _isAccurateEnd$66930[ebp]
	test	eax, eax
	je	SHORT $LN24@CodeReal
; Line 192
	mov	ecx, DWORD PTR _newEndPos$66929[ebp]
	mov	DWORD PTR _subStreamStartPos$[ebp], ecx
	mov	edx, DWORD PTR _newEndPos$66929[ebp+4]
	mov	DWORD PTR _subStreamStartPos$[ebp+4], edx
; Line 193
	mov	eax, DWORD PTR _subStreamIndex$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _subStreamIndex$[ebp+4]
	adc	ecx, 0
	mov	DWORD PTR _subStreamIndex$[ebp], eax
	mov	DWORD PTR _subStreamIndex$[ebp+4], ecx
; Line 194
	jmp	$LN27@CodeReal
$LN24@CodeReal:
; Line 197
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	add	eax, DWORD PTR _numBytes_in_ReadBuf$[ebp]
	mov	DWORD PTR _enc$[ebp+36], eax
; Line 199
	movzx	ecx, BYTE PTR _isAccurateEnd$66930[ebp]
	test	ecx, ecx
	je	SHORT $LN23@CodeReal
; Line 202
	mov	edx, DWORD PTR _totalStreamRead$[ebp]
	sub	edx, DWORD PTR _newEndPos$66929[ebp]
	mov	eax, DWORD PTR _totalStreamRead$[ebp+4]
	sbb	eax, DWORD PTR _newEndPos$66929[ebp+4]
	mov	DWORD PTR _rem$66933[ebp], edx
; Line 206
	mov	ecx, DWORD PTR _enc$[ebp+36]
	sub	ecx, DWORD PTR _enc$[ebp+32]
	cmp	ecx, DWORD PTR _rem$66933[ebp]
	jae	SHORT $LN22@CodeReal
; Line 207
	mov	DWORD PTR $T67559[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67559[ebp]
	jmp	$LN39@CodeReal
$LN22@CodeReal:
; Line 209
	mov	edx, DWORD PTR _enc$[ebp+36]
	sub	edx, DWORD PTR _rem$66933[ebp]
	mov	DWORD PTR _enc$[ebp+36], edx
; Line 210
	mov	DWORD PTR _enc$[ebp+44], 1
$LN23@CodeReal:
; Line 213
	cmp	DWORD PTR _subStreamSize$66925[ebp+4], 0
	ja	SHORT $LN21@CodeReal
	jb	SHORT $LN52@CodeReal
	cmp	DWORD PTR _subStreamSize$66925[ebp], -2147483648 ; 80000000H
	ja	SHORT $LN21@CodeReal
$LN52@CodeReal:
; Line 215
	mov	eax, DWORD PTR _subStreamStartPos$[ebp]
	sub	eax, DWORD PTR _currentInPos$[ebp]
	mov	ecx, DWORD PTR _subStreamStartPos$[ebp+4]
	sbb	ecx, DWORD PTR _currentInPos$[ebp+4]
	add	eax, DWORD PTR _enc$[ebp+72]
	mov	DWORD PTR _enc$[ebp+76], eax
; Line 216
	mov	edx, DWORD PTR _subStreamSize$66925[ebp]
	mov	DWORD PTR _enc$[ebp+80], edx
$LN21@CodeReal:
; Line 218
	jmp	SHORT $LN28@CodeReal
$LN25@CodeReal:
; Line 221
	cmp	DWORD PTR _result$66926[ebp], 1
	jne	SHORT $LN20@CodeReal
; Line 222
	jmp	SHORT $LN28@CodeReal
$LN20@CodeReal:
; Line 223
	cmp	DWORD PTR _result$66926[ebp], -2147467263 ; 80004001H
	jne	SHORT $LN19@CodeReal
; Line 225
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ ; CMyComPtr<ICompressGetSubStreamSize>::Release
; Line 226
	jmp	SHORT $LN28@CodeReal
$LN19@CodeReal:
; Line 228
	mov	eax, DWORD PTR _result$66926[ebp]
	mov	DWORD PTR $T67560[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67560[ebp]
	jmp	$LN39@CodeReal
; Line 229
	jmp	$LN27@CodeReal
$LN28@CodeReal:
; Line 232
	movzx	ecx, BYTE PTR _readWasFinished$[ebp]
	test	ecx, ecx
	je	SHORT $LN18@CodeReal
	mov	edx, DWORD PTR _totalStreamRead$[ebp]
	sub	edx, DWORD PTR _currentInPos$[ebp]
	mov	eax, DWORD PTR _totalStreamRead$[ebp+4]
	sbb	eax, DWORD PTR _currentInPos$[ebp+4]
	mov	ecx, DWORD PTR _enc$[ebp+36]
	sub	ecx, DWORD PTR _enc$[ebp+32]
	add	ecx, DWORD PTR _enc$[ebp+92]
	xor	esi, esi
	mov	DWORD PTR tv573[ebp], edx
	mov	DWORD PTR tv573[ebp+4], eax
	mov	DWORD PTR tv576[ebp], ecx
	mov	DWORD PTR tv576[ebp+4], esi
	mov	edx, DWORD PTR tv573[ebp]
	cmp	edx, DWORD PTR tv576[ebp]
	jne	SHORT $LN18@CodeReal
	mov	eax, DWORD PTR tv573[ebp+4]
	cmp	eax, DWORD PTR tv576[ebp+4]
	jne	SHORT $LN18@CodeReal
; Line 233
	mov	DWORD PTR _enc$[ebp+44], 2
$LN18@CodeReal:
; Line 235
	lea	ecx, DWORD PTR _enc$[ebp]
	push	ecx
	call	_Bcj2Enc_Encode@4
; Line 237
	mov	edx, DWORD PTR _numBytes_in_ReadBuf$[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _totalStreamRead$[ebp]
	sub	ecx, edx
	mov	esi, DWORD PTR _totalStreamRead$[ebp+4]
	sbb	esi, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _enc$[ebp+32]
	sub	eax, DWORD PTR [edx+32]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, DWORD PTR _enc$[ebp+92]
	xor	edx, edx
	sub	ecx, eax
	sbb	esi, edx
	mov	DWORD PTR _currentInPos$[ebp], ecx
	mov	DWORD PTR _currentInPos$[ebp+4], esi
; Line 239
	cmp	DWORD PTR _enc$[ebp+104], 5
	jne	SHORT $LN17@CodeReal
; Line 240
	jmp	$LN29@CodeReal
$LN17@CodeReal:
; Line 242
	cmp	DWORD PTR _enc$[ebp+40], 4
	jae	$LN16@CodeReal
; Line 244
	mov	eax, DWORD PTR _enc$[ebp+40]
	mov	ecx, DWORD PTR _enc$[ebp+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _enc$[ebp+eax*4]
	sub	eax, DWORD PTR [edx+ecx*4+16]
	mov	DWORD PTR _curSize$66952[ebp], eax
; Line 246
	mov	ecx, DWORD PTR _curSize$66952[ebp]
	push	ecx
	mov	edx, DWORD PTR _enc$[ebp+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+16]
	push	ecx
	mov	edx, DWORD PTR _enc$[ebp+40]
	mov	eax, DWORD PTR _outStreams$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$66953[ebp], eax
	cmp	DWORD PTR ___result__$66953[ebp], 0
	je	SHORT $LN15@CodeReal
	mov	edx, DWORD PTR ___result__$66953[ebp]
	mov	DWORD PTR $T67561[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67561[ebp]
	jmp	$LN39@CodeReal
$LN15@CodeReal:
; Line 247
	cmp	DWORD PTR _enc$[ebp+40], 3
	jne	SHORT $LN14@CodeReal
; Line 248
	mov	eax, DWORD PTR _curSize$66952[ebp]
	xor	ecx, ecx
	add	eax, DWORD PTR _outSizeRc$[ebp]
	adc	ecx, DWORD PTR _outSizeRc$[ebp+4]
	mov	DWORD PTR _outSizeRc$[ebp], eax
	mov	DWORD PTR _outSizeRc$[ebp+4], ecx
$LN14@CodeReal:
; Line 250
	mov	edx, DWORD PTR _enc$[ebp+40]
	mov	eax, DWORD PTR _enc$[ebp+40]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+16]
	mov	DWORD PTR _enc$[ebp+edx*4], eax
; Line 251
	mov	ecx, DWORD PTR _enc$[ebp+40]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+16]
	mov	ecx, DWORD PTR _enc$[ebp+40]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+36]
	mov	ecx, DWORD PTR _enc$[ebp+40]
	mov	DWORD PTR _enc$[ebp+ecx*4+16], eax
	jmp	$LN13@CodeReal
$LN16@CodeReal:
; Line 253
	cmp	DWORD PTR _enc$[ebp+40], 4
	je	SHORT $LN12@CodeReal
; Line 254
	mov	DWORD PTR $T67562[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67562[ebp]
	jmp	$LN39@CodeReal
; Line 255
	jmp	$LN13@CodeReal
$LN12@CodeReal:
; Line 257
	mov	BYTE PTR _needSubSize$[ebp], 1
; Line 259
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _enc$[ebp+32]
	sub	eax, DWORD PTR [edx+32]
	cmp	DWORD PTR _numBytes_in_ReadBuf$[ebp], eax
	je	SHORT $LN10@CodeReal
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	add	edx, DWORD PTR _numBytes_in_ReadBuf$[ebp]
	mov	DWORD PTR _enc$[ebp+36], edx
; Line 262
	jmp	$LN30@CodeReal
$LN10@CodeReal:
; Line 265
	movzx	eax, BYTE PTR _readWasFinished$[ebp]
	test	eax, eax
	je	SHORT $LN9@CodeReal
; Line 266
	jmp	$LN30@CodeReal
$LN9@CodeReal:
; Line 268
	mov	DWORD PTR _numBytes_in_ReadBuf$[ebp], 0
; Line 269
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR _enc$[ebp+32], edx
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _enc$[ebp+36], ecx
; Line 272
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR _curSize$66965[ebp], eax
; Line 273
	mov	esi, esp
	lea	ecx, DWORD PTR _curSize$66965[ebp]
	push	ecx
	mov	edx, DWORD PTR _curSize$66965[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _inStreams$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _inStreams$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$66966[ebp], eax
	cmp	DWORD PTR ___result__$66966[ebp], 0
	je	SHORT $LN8@CodeReal
	mov	edx, DWORD PTR ___result__$66966[ebp]
	mov	DWORD PTR $T67563[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67563[ebp]
	jmp	$LN39@CodeReal
$LN8@CodeReal:
; Line 276
	cmp	DWORD PTR _curSize$66965[ebp], 0
	jne	SHORT $LN7@CodeReal
; Line 278
	mov	BYTE PTR _readWasFinished$[ebp], 1
; Line 279
	jmp	$LN30@CodeReal
$LN7@CodeReal:
; Line 282
	mov	eax, DWORD PTR _curSize$66965[ebp]
	mov	DWORD PTR _numBytes_in_ReadBuf$[ebp], eax
; Line 283
	mov	ecx, DWORD PTR _numBytes_in_ReadBuf$[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _totalStreamRead$[ebp]
	adc	edx, DWORD PTR _totalStreamRead$[ebp+4]
	mov	DWORD PTR _totalStreamRead$[ebp], ecx
	mov	DWORD PTR _totalStreamRead$[ebp+4], edx
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, DWORD PTR _numBytes_in_ReadBuf$[ebp]
	mov	DWORD PTR _enc$[ebp+36], ecx
$LN13@CodeReal:
; Line 287
	cmp	DWORD PTR _progress$[ebp], 0
	je	$LN6@CodeReal
	mov	edx, DWORD PTR _currentInPos$[ebp]
	sub	edx, DWORD PTR _prevProgress$[ebp]
	mov	eax, DWORD PTR _currentInPos$[ebp+4]
	sbb	eax, DWORD PTR _prevProgress$[ebp+4]
	mov	DWORD PTR tv668[ebp], edx
	mov	DWORD PTR tv668[ebp+4], eax
	cmp	DWORD PTR tv668[ebp+4], 0
	ja	SHORT $LN53@CodeReal
	cmp	DWORD PTR tv668[ebp], 1048576		; 00100000H
	jb	$LN6@CodeReal
$LN53@CodeReal:
; Line 289
	mov	ecx, DWORD PTR _currentInPos$[ebp]
	add	ecx, DWORD PTR _outSizeRc$[ebp]
	mov	edx, DWORD PTR _currentInPos$[ebp+4]
	adc	edx, DWORD PTR _outSizeRc$[ebp+4]
	mov	eax, ecx
	cdq
	mov	DWORD PTR _outSize2$66971[ebp], eax
	mov	DWORD PTR _outSize2$66971[ebp+4], edx
; Line 290
	mov	eax, DWORD PTR _currentInPos$[ebp]
	mov	DWORD PTR _prevProgress$[ebp], eax
	mov	ecx, DWORD PTR _currentInPos$[ebp+4]
	mov	DWORD PTR _prevProgress$[ebp+4], ecx
; Line 292
	mov	esi, esp
	lea	edx, DWORD PTR _outSize2$66971[ebp]
	push	edx
	lea	eax, DWORD PTR _currentInPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$66972[ebp], eax
	cmp	DWORD PTR ___result__$66972[ebp], 0
	je	SHORT $LN6@CodeReal
	mov	edx, DWORD PTR ___result__$66972[ebp]
	mov	DWORD PTR $T67564[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67564[ebp]
	jmp	$LN39@CodeReal
$LN6@CodeReal:
; Line 294
	jmp	$LN30@CodeReal
$LN29@CodeReal:
; Line 296
	mov	DWORD PTR _i$66975[ebp], 0
	jmp	SHORT $LN4@CodeReal
$LN3@CodeReal:
	mov	eax, DWORD PTR _i$66975[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66975[ebp], eax
$LN4@CodeReal:
	cmp	DWORD PTR _i$66975[ebp], 4
	jge	SHORT $LN2@CodeReal
; Line 298
	mov	ecx, DWORD PTR _i$66975[ebp]
	mov	edx, DWORD PTR _i$66975[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _enc$[ebp+ecx*4]
	sub	ecx, DWORD PTR [eax+edx*4+16]
	push	ecx
	mov	edx, DWORD PTR _i$66975[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+16]
	push	ecx
	mov	edx, DWORD PTR _i$66975[ebp]
	mov	eax, DWORD PTR _outStreams$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$66979[ebp], eax
	cmp	DWORD PTR ___result__$66979[ebp], 0
	je	SHORT $LN1@CodeReal
	mov	edx, DWORD PTR ___result__$66979[ebp]
	mov	DWORD PTR $T67565[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67565[ebp]
	jmp	SHORT $LN39@CodeReal
$LN1@CodeReal:
; Line 299
	jmp	$LN3@CodeReal
$LN2@CodeReal:
; Line 303
	mov	DWORD PTR $T67566[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	call	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
	mov	eax, DWORD PTR $T67566[ebp]
$LN39@CodeReal:
; Line 304
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN62@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 904				; 00000388H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	3
$LN62@CodeReal:
	DD	6
	DD	$LN61@CodeReal
$LN61@CodeReal:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN54@CodeReal
	DD	-676					; fffffd5cH
	DD	624					; 00000270H
	DD	$LN55@CodeReal
	DD	-716					; fffffd34H
	DD	8
	DD	$LN56@CodeReal
	DD	-764					; fffffd04H
	DD	8
	DD	$LN57@CodeReal
	DD	-804					; fffffcdcH
	DD	4
	DD	$LN58@CodeReal
	DD	-824					; fffffcc8H
	DD	8
	DD	$LN59@CodeReal
$LN59@CodeReal:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN58@CodeReal:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN57@CodeReal:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN56@CodeReal:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN55@CodeReal:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	0
$LN54@CodeReal:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$0:
	lea	ecx, DWORD PTR _getSubStreamSize$[ebp]
	jmp	??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
__ehhandler$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-904]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ENDP ; NCompress::NBcj2::CEncoder::CodeReal
xdata$x	SEGMENT
__catchsym$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$0
__unwindtable$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$2
__ehfuncinfo$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv74 = -24						; size = 4
$T67596 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_inStreams$ = 12					; size = 4
_inSizes$ = 16						; size = 4
_numInStreams$ = 20					; size = 4
_outStreams$ = 24					; size = 4
_outSizes$ = 28						; size = 4
_numOutStreams$ = 32					; size = 4
_progress$ = 36						; size = 4
?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z PROC ; NCompress::NBcj2::CEncoder::Code
; Line 309
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 311
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 312
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numOutStreams$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSizes$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStreams$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numInStreams$[ebp]
	push	ecx
	mov	edx, DWORD PTR _inSizes$[ebp]
	push	edx
	mov	eax, DWORD PTR _inStreams$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CEncoder@NBcj2@NCompress@@AAEJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ; NCompress::NBcj2::CEncoder::CodeReal
	mov	DWORD PTR tv74[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	jmp	SHORT $LN2@Code
__catch$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$0:
; Line 314
	mov	DWORD PTR $T67596[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN7@Code
	ret	0
	mov	eax, __tryend$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$1
	ret	0
__tryend$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z$1:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN2@Code
$LN7@Code:
	mov	eax, DWORD PTR $T67596[ebp]
$LN2@Code:
; Line 315
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Code@CEncoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ENDP ; NCompress::NBcj2::CEncoder::Code
PUBLIC	?SetInBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z ; NCompress::NBcj2::CDecoder::SetInBufSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_streamIndex$ = 12					; size = 4
_size$ = 16						; size = 4
?SetInBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z PROC	; NCompress::NBcj2::CDecoder::SetInBufSize
; Line 324
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _streamIndex$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+eax*4+48], edx
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
?SetInBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z ENDP	; NCompress::NBcj2::CDecoder::SetInBufSize
_TEXT	ENDS
PUBLIC	?SetOutBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z ; NCompress::NBcj2::CDecoder::SetOutBufSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_size$ = 16						; size = 4
?SetOutBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z PROC	; NCompress::NBcj2::CDecoder::SetOutBufSize
; Line 325
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+64], ecx
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
?SetOutBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z ENDP	; NCompress::NBcj2::CDecoder::SetOutBufSize
_TEXT	ENDS
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??_7CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ ; NCompress::NBcj2::CDecoder::`vftable'
PUBLIC	??_7CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NBcj2::CDecoder::`vftable'
PUBLIC	??_7CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@ ; NCompress::NBcj2::CDecoder::`vftable'
PUBLIC	??_7CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@ ; NCompress::NBcj2::CDecoder::`vftable'
PUBLIC	??_7CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@ ; NCompress::NBcj2::CDecoder::`vftable'
PUBLIC	??_7CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@ ; NCompress::NBcj2::CDecoder::`vftable'
PUBLIC	??0ICompressSetOutStreamSize@@QAE@XZ		; ICompressSetOutStreamSize::ICompressSetOutStreamSize
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??0ICompressSetInStream2@@QAE@XZ		; ICompressSetInStream2::ICompressSetInStream2
PUBLIC	??0ICompressSetFinishMode@@QAE@XZ		; ICompressSetFinishMode::ICompressSetFinishMode
PUBLIC	??0CDecoder@NBcj2@NCompress@@QAE@XZ		; NCompress::NBcj2::CDecoder::CDecoder
PUBLIC	??_R4CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@ ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecoder@NBcj2@NCompress@@@8		; NCompress::NBcj2::CDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CDecoder@NBcj2@NCompress@@8		; NCompress::NBcj2::CDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecoder@NBcj2@NCompress@@8		; NCompress::NBcj2::CDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecoder@NBcj2@NCompress@@8	; NCompress::NBcj2::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@ICompressSetFinishMode@@8		; ICompressSetFinishMode::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetFinishMode@@@8		; ICompressSetFinishMode `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetFinishMode@@8			; ICompressSetFinishMode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetFinishMode@@8			; ICompressSetFinishMode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetFinishMode@@8		; ICompressSetFinishMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@ICompressSetInStream2@@8		; ICompressSetInStream2::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressSetInStream2@@@8		; ICompressSetInStream2 `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetInStream2@@8			; ICompressSetInStream2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetInStream2@@8			; ICompressSetInStream2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetInStream2@@8		; ICompressSetInStream2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUICompressSetOutStreamSize@@@8		; ICompressSetOutStreamSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@ICompressSetBufSize@@8		; ICompressSetBufSize::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R1BE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	??_R1BI@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R1BM@?0A@EA@CBaseCoder@NBcj2@NCompress@@8	; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Descriptor at (28,-1,0,64)'
PUBLIC	?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CDecoder::QueryInterface
PUBLIC	?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ	; NCompress::NBcj2::CDecoder::AddRef
PUBLIC	?Release@CDecoder@NBcj2@NCompress@@UAGKXZ	; NCompress::NBcj2::CDecoder::Release
PUBLIC	?Code@CDecoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ; NCompress::NBcj2::CDecoder::Code
PUBLIC	??_R4CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@ ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CDecoder@NBcj2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{4}'
PUBLIC	?Release@CDecoder@NBcj2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{4}'
PUBLIC	?SetFinishMode@CDecoder@NBcj2@NCompress@@UAGJI@Z ; NCompress::NBcj2::CDecoder::SetFinishMode
PUBLIC	??_R4CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@ ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CDecoder@NBcj2@NCompress@@W7AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{8}'
PUBLIC	?Release@CDecoder@NBcj2@NCompress@@W7AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{8}'
PUBLIC	?SetInStream2@CDecoder@NBcj2@NCompress@@UAGJIPAUISequentialInStream@@@Z ; NCompress::NBcj2::CDecoder::SetInStream2
PUBLIC	?ReleaseInStream2@CDecoder@NBcj2@NCompress@@UAGJI@Z ; NCompress::NBcj2::CDecoder::ReleaseInStream2
PUBLIC	??_R4CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@ ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@NBcj2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CDecoder@NBcj2@NCompress@@WM@AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{12}'
PUBLIC	?Release@CDecoder@NBcj2@NCompress@@WM@AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{12}'
PUBLIC	?Read@CDecoder@NBcj2@NCompress@@UAGJPAXIPAI@Z	; NCompress::NBcj2::CDecoder::Read
PUBLIC	??_R4CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@NBcj2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@CDecoder@NBcj2@NCompress@@WBA@AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{16}'
PUBLIC	?Release@CDecoder@NBcj2@NCompress@@WBA@AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{16}'
PUBLIC	?SetOutStreamSize@CDecoder@NBcj2@NCompress@@UAGJPB_K@Z ; NCompress::NBcj2::CDecoder::SetOutStreamSize
PUBLIC	??_R4CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@NBcj2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{20}'
PUBLIC	?AddRef@CDecoder@NBcj2@NCompress@@WBE@AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{20}'
PUBLIC	?Release@CDecoder@NBcj2@NCompress@@WBE@AGKXZ	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{20}'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
;	COMDAT ??_R4CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
rdata$r	SEGMENT
??_R4CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ DD 00H ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@ DD 00H ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@
rdata$r	SEGMENT
??_R4CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@
rdata$r	SEGMENT
??_R4CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@ DD 00H ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@
rdata$r	SEGMENT
??_R4CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@ DD 00H ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1BM@?0A@EA@CBaseCoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R1BM@?0A@EA@CBaseCoder@NBcj2@NCompress@@8 DD FLAT:??_R0?AVCBaseCoder@NBcj2@NCompress@@@8 ; NCompress::NBcj2::CBaseCoder::`RTTI Base Class Descriptor at (28,-1,0,64)'
	DD	00H
	DD	01cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseCoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1BI@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EA@ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@ICompressSetBufSize@@8 DD FLAT:??_R0?AUICompressSetBufSize@@@8 ; ICompressSetBufSize::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R2ICompressSetOutStreamSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R3ICompressSetOutStreamSize@@8 DD 00H		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetOutStreamSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetOutStreamSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetOutStreamSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetOutStreamSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetInStream2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetInStream2@@8 DD FLAT:??_R0?AUICompressSetInStream2@@@8 ; ICompressSetInStream2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream2@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetInStream2@@8
rdata$r	SEGMENT
??_R2ICompressSetInStream2@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetInStream2@@8 ; ICompressSetInStream2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetInStream2@@8
rdata$r	SEGMENT
??_R3ICompressSetInStream2@@8 DD 00H			; ICompressSetInStream2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetInStream2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetInStream2@@@8
_DATA	SEGMENT
??_R0?AUICompressSetInStream2@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetInStream2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetInStream2@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetInStream2@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetInStream2@@8 DD FLAT:??_R0?AUICompressSetInStream2@@@8 ; ICompressSetInStream2::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetFinishMode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetFinishMode@@8 DD FLAT:??_R0?AUICompressSetFinishMode@@@8 ; ICompressSetFinishMode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetFinishMode@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetFinishMode@@8
rdata$r	SEGMENT
??_R2ICompressSetFinishMode@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetFinishMode@@8 ; ICompressSetFinishMode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetFinishMode@@8
rdata$r	SEGMENT
??_R3ICompressSetFinishMode@@8 DD 00H			; ICompressSetFinishMode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetFinishMode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetFinishMode@@@8
_DATA	SEGMENT
??_R0?AUICompressSetFinishMode@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetFinishMode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetFinishMode@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetFinishMode@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetFinishMode@@8 DD FLAT:??_R0?AUICompressSetFinishMode@@@8 ; ICompressSetFinishMode::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetFinishMode@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecoder@NBcj2@NCompress@@8 DD FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8 ; NCompress::NBcj2::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R2CDecoder@NBcj2@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CDecoder@NBcj2@NCompress@@8 ; NCompress::NBcj2::CDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder2@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetFinishMode@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetInStream2@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@ICompressSetBufSize@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BI@?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1BM@?0A@EA@CBaseCoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	SEGMENT
??_R3CDecoder@NBcj2@NCompress@@8 DD 00H			; NCompress::NBcj2::CDecoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0fH
	DD	FLAT:??_R2CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecoder@NBcj2@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCDecoder@NBcj2@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NBcj2::CDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecoder@NBcj2@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@
rdata$r	SEGMENT
??_R4CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@ DD 00H ; NCompress::NBcj2::CDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBcj2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBcj2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
CONST	SEGMENT
??_7CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ DD FLAT:??_R4CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@ ; NCompress::NBcj2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBcj2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBcj2@NCompress@@WBE@AGKXZ
	DD	FLAT:?Release@CDecoder@NBcj2@NCompress@@WBE@AGKXZ
	DD	FLAT:?SetInBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z
	DD	FLAT:?SetOutBufSize@CDecoder@NBcj2@NCompress@@UAGJII@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NBcj2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBcj2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBcj2@NCompress@@WBA@AGKXZ
	DD	FLAT:?Release@CDecoder@NBcj2@NCompress@@WBA@AGKXZ
	DD	FLAT:?SetOutStreamSize@CDecoder@NBcj2@NCompress@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@ ; NCompress::NBcj2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBcj2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBcj2@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CDecoder@NBcj2@NCompress@@WM@AGKXZ
	DD	FLAT:?Read@CDecoder@NBcj2@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@
CONST	SEGMENT
??_7CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@ DD FLAT:??_R4CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@ ; NCompress::NBcj2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBcj2@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CDecoder@NBcj2@NCompress@@W7AGKXZ
	DD	FLAT:?SetInStream2@CDecoder@NBcj2@NCompress@@UAGJIPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream2@CDecoder@NBcj2@NCompress@@UAGJI@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@
CONST	SEGMENT
??_7CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@ DD FLAT:??_R4CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@ ; NCompress::NBcj2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBcj2@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CDecoder@NBcj2@NCompress@@W3AGKXZ
	DD	FLAT:?SetFinishMode@CDecoder@NBcj2@NCompress@@UAGJI@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@
CONST	SEGMENT
??_7CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@ DD FLAT:??_R4CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@ ; NCompress::NBcj2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ
	DD	FLAT:?Release@CDecoder@NBcj2@NCompress@@UAGKXZ
	DD	FLAT:?Code@CDecoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CDecoder@NBcj2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDecoder@NBcj2@NCompress@@QAE@XZ$0
__ehfuncinfo$??0CDecoder@NBcj2@NCompress@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CDecoder@NBcj2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDecoder@NBcj2@NCompress@@QAE@XZ PROC		; NCompress::NBcj2::CDecoder::CDecoder
; _this$ = ecx
; Line 328
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDecoder@NBcj2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetFinishMode@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ICompressSetInStream2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0ICompressSetOutStreamSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0ICompressSetBufSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0CBaseCoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CBaseCoder::CBaseCoder
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NBcj2@NCompress@@6BICompressCoder2@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CDecoder@NBcj2@NCompress@@6BICompressSetFinishMode@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CDecoder@NBcj2@NCompress@@6BICompressSetInStream2@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CDecoder@NBcj2@NCompress@@6BISequentialInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CDecoder@NBcj2@NCompress@@6BICompressSetOutStreamSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CDecoder@NBcj2@NCompress@@6BICompressSetBufSize@@@
	push	OFFSET ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	push	OFFSET ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+168], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+169], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+176], 0
	mov	DWORD PTR [eax+180], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDecoder@NBcj2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1CBaseCoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CBaseCoder::~CBaseCoder
__ehhandler$??0CDecoder@NBcj2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDecoder@NBcj2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDecoder@NBcj2@NCompress@@QAE@XZ ENDP		; NCompress::NBcj2::CDecoder::CDecoder
EXTRN	_IID_ICompressSetOutStreamSize:BYTE
EXTRN	_IID_ISequentialInStream:BYTE
EXTRN	_IID_ICompressSetInStream2:BYTE
EXTRN	_IID_ICompressSetFinishMode:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv164 = -20						; size = 4
tv154 = -16						; size = 4
tv144 = -12						; size = 4
tv134 = -8						; size = 4
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NBcj2::CDecoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\bcj2coder.h
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN14@QueryInter@2
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN13@QueryInter@2
$LN14@QueryInter@2:
	push	OFFSET _IID_ICompressCoder2
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN12@QueryInter@2
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN13@QueryInter@2
$LN12@QueryInter@2:
	push	OFFSET _IID_ICompressSetFinishMode
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN18@QueryInter@2
$LN17@QueryInter@2:
	mov	DWORD PTR tv92[ebp], 0
$LN18@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN13@QueryInter@2
$LN10@QueryInter@2:
	push	OFFSET _IID_ICompressSetInStream2
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN19@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN20@QueryInter@2
$LN19@QueryInter@2:
	mov	DWORD PTR tv134[ebp], 0
$LN20@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN13@QueryInter@2
$LN8@QueryInter@2:
	push	OFFSET _IID_ISequentialInStream
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN21@QueryInter@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN22@QueryInter@2
$LN21@QueryInter@2:
	mov	DWORD PTR tv144[ebp], 0
$LN22@QueryInter@2:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN13@QueryInter@2
$LN6@QueryInter@2:
	push	OFFSET _IID_ICompressSetOutStreamSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN23@QueryInter@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv154[ebp], edx
	jmp	SHORT $LN24@QueryInter@2
$LN23@QueryInter@2:
	mov	DWORD PTR tv154[ebp], 0
$LN24@QueryInter@2:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN13@QueryInter@2
$LN4@QueryInter@2:
	push	OFFSET _IID_ICompressSetBufSize
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN25@QueryInter@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN26@QueryInter@2
$LN25@QueryInter@2:
	mov	DWORD PTR tv164[ebp], 0
$LN26@QueryInter@2:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN13@QueryInter@2
$LN2@QueryInter@2:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN15@QueryInter@2
$LN13@QueryInter@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx
	xor	eax, eax
$LN15@QueryInter@2:
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NBcj2::CDecoder::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ PROC		; NCompress::NBcj2::CDecoder::AddRef, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ ENDP		; NCompress::NBcj2::CDecoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z		; NCompress::NBcj2::CDecoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CDecoder@NBcj2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T67633 = -8						; size = 4
$T67632 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDecoder@NBcj2@NCompress@@UAGKXZ PROC		; NCompress::NBcj2::CDecoder::Release, COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+24], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	jmp	SHORT $LN2@Release@2
$LN1@Release@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67633[ebp], edx
	mov	eax, DWORD PTR $T67633[ebp]
	mov	DWORD PTR $T67632[ebp], eax
	cmp	DWORD PTR $T67632[ebp], 0
	je	SHORT $LN4@Release@2
	push	1
	mov	ecx, DWORD PTR $T67632[ebp]
	call	??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release@2
$LN4@Release@2:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release@2:
	xor	eax, eax
$LN2@Release@2:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDecoder@NBcj2@NCompress@@UAGKXZ ENDP		; NCompress::NBcj2::CDecoder::Release
_TEXT	ENDS
PUBLIC	??1CDecoder@NBcj2@NCompress@@QAE@XZ		; NCompress::NBcj2::CDecoder::~CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z PROC		; NCompress::NBcj2::CDecoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDecoder@NBcj2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDecoder@NBcj2@NCompress@@QAEPAXI@Z ENDP		; NCompress::NBcj2::CDecoder::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDecoder@NBcj2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDecoder@NBcj2@NCompress@@QAE@XZ$0
__ehfuncinfo$??1CDecoder@NBcj2@NCompress@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CDecoder@NBcj2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDecoder@NBcj2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDecoder@NBcj2@NCompress@@QAE@XZ PROC		; NCompress::NBcj2::CDecoder::~CDecoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDecoder@NBcj2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	push	4
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1CBaseCoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CBaseCoder::~CBaseCoder
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDecoder@NBcj2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	??1CBaseCoder@NBcj2@NCompress@@QAE@XZ	; NCompress::NBcj2::CBaseCoder::~CBaseCoder
__ehhandler$??1CDecoder@NBcj2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDecoder@NBcj2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDecoder@NBcj2@NCompress@@QAE@XZ ENDP		; NCompress::NBcj2::CDecoder::~CDecoder
PUBLIC	??_7ICompressSetFinishMode@@6B@			; ICompressSetFinishMode::`vftable'
PUBLIC	??_R4ICompressSetFinishMode@@6B@		; ICompressSetFinishMode::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetFinishMode@@6B@
rdata$r	SEGMENT
??_R4ICompressSetFinishMode@@6B@ DD 00H			; ICompressSetFinishMode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetFinishMode@@@8
	DD	FLAT:??_R3ICompressSetFinishMode@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetFinishMode@@6B@
CONST	SEGMENT
??_7ICompressSetFinishMode@@6B@ DD FLAT:??_R4ICompressSetFinishMode@@6B@ ; ICompressSetFinishMode::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetFinishMode@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetFinishMode@@QAE@XZ PROC			; ICompressSetFinishMode::ICompressSetFinishMode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetFinishMode@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetFinishMode@@QAE@XZ ENDP			; ICompressSetFinishMode::ICompressSetFinishMode
_TEXT	ENDS
PUBLIC	??_7ICompressSetInStream2@@6B@			; ICompressSetInStream2::`vftable'
PUBLIC	??_R4ICompressSetInStream2@@6B@			; ICompressSetInStream2::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetInStream2@@6B@
rdata$r	SEGMENT
??_R4ICompressSetInStream2@@6B@ DD 00H			; ICompressSetInStream2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetInStream2@@@8
	DD	FLAT:??_R3ICompressSetInStream2@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetInStream2@@6B@
CONST	SEGMENT
??_7ICompressSetInStream2@@6B@ DD FLAT:??_R4ICompressSetInStream2@@6B@ ; ICompressSetInStream2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetInStream2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetInStream2@@QAE@XZ PROC			; ICompressSetInStream2::ICompressSetInStream2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetInStream2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetInStream2@@QAE@XZ ENDP			; ICompressSetInStream2::ICompressSetInStream2
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
_TEXT	ENDS
PUBLIC	??_7ICompressSetOutStreamSize@@6B@		; ICompressSetOutStreamSize::`vftable'
PUBLIC	??_R4ICompressSetOutStreamSize@@6B@		; ICompressSetOutStreamSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetOutStreamSize@@6B@
rdata$r	SEGMENT
??_R4ICompressSetOutStreamSize@@6B@ DD 00H		; ICompressSetOutStreamSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetOutStreamSize@@@8
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetOutStreamSize@@6B@
CONST	SEGMENT
??_7ICompressSetOutStreamSize@@6B@ DD FLAT:??_R4ICompressSetOutStreamSize@@6B@ ; ICompressSetOutStreamSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetOutStreamSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetOutStreamSize@@QAE@XZ PROC		; ICompressSetOutStreamSize::ICompressSetOutStreamSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetOutStreamSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetOutStreamSize@@QAE@XZ ENDP		; ICompressSetOutStreamSize::ICompressSetOutStreamSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_finishMode$ = 12					; size = 4
?SetFinishMode@CDecoder@NBcj2@NCompress@@UAGJI@Z PROC	; NCompress::NBcj2::CDecoder::SetFinishMode
; File c:\workspace\7z1505-src\cpp\7zip\compress\bcj2coder.cpp
; Line 331
	push	ebp
	mov	ebp, esp
; Line 332
	xor	eax, eax
	cmp	DWORD PTR _finishMode$[ebp], 0
	setne	al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+164], al
; Line 333
	xor	eax, eax
; Line 334
	pop	ebp
	ret	8
?SetFinishMode@CDecoder@NBcj2@NCompress@@UAGJI@Z ENDP	; NCompress::NBcj2::CDecoder::SetFinishMode
_TEXT	ENDS
PUBLIC	?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ	; NCompress::NBcj2::CDecoder::InitCommon
EXTRN	_Bcj2Dec_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67035 = -12						; size = 4
_i$67031 = -8						; size = 4
_this$ = -4						; size = 4
?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ PROC	; NCompress::NBcj2::CDecoder::InitCommon
; _this$ = ecx
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 339
	mov	DWORD PTR _i$67031[ebp], 0
	jmp	SHORT $LN6@InitCommon
$LN5@InitCommon:
	mov	eax, DWORD PTR _i$67031[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67031[ebp], eax
$LN6@InitCommon:
	cmp	DWORD PTR _i$67031[ebp], 4
	jge	SHORT $LN4@InitCommon
; Line 340
	mov	ecx, DWORD PTR _i$67031[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$67031[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+28]
	mov	DWORD PTR [edx+ecx*4+192], eax
	mov	ecx, DWORD PTR _i$67031[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$67031[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [esi+eax*4+192]
	mov	DWORD PTR [edx+ecx*4+208], eax
	jmp	SHORT $LN5@InitCommon
$LN4@InitCommon:
; Line 344
	mov	DWORD PTR _i$67035[ebp], 0
	jmp	SHORT $LN3@InitCommon
$LN2@InitCommon:
	mov	ecx, DWORD PTR _i$67035[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67035[ebp], ecx
$LN3@InitCommon:
	cmp	DWORD PTR _i$67035[ebp], 4
	jge	SHORT $LN1@InitCommon
; Line 346
	mov	edx, DWORD PTR _i$67035[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+88], 0
; Line 347
	mov	ecx, DWORD PTR _i$67035[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*8+104], 0
	mov	DWORD PTR [edx+ecx*8+108], 0
; Line 348
	mov	eax, DWORD PTR _i$67035[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+136], 0
; Line 349
	jmp	SHORT $LN2@InitCommon
$LN1@InitCommon:
; Line 352
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 192				; 000000c0H
	push	edx
	call	_Bcj2Dec_Init@4
; Line 353
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ ENDP	; NCompress::NBcj2::CDecoder::InitCommon
_TEXT	ENDS
EXTRN	_Bcj2Dec_Decode@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv725 = -160						; size = 8
tv724 = -152						; size = 4
tv645 = -148						; size = 8
tv619 = -140						; size = 8
tv270 = -132						; size = 4
_rem$67126 = -128					; size = 4
_i$67122 = -124						; size = 4
___result__$67112 = -120				; size = 4
_curSize$ = -116					; size = 4
___result__$67108 = -112				; size = 4
_inSize2$67107 = -104					; size = 8
_outSize2$67105 = -88					; size = 8
_outSize$67100 = -76					; size = 8
_rem$67098 = -68					; size = 4
___result__$67096 = -64					; size = 4
_curSize$67094 = -60					; size = 4
_extraSize$67088 = -56					; size = 4
_res2$67078 = -52					; size = 4
_curSize$67076 = -44					; size = 4
_i$67067 = -36						; size = 4
_buf$67066 = -32					; size = 4
_totalRead$67065 = -28					; size = 4
_res$ = -24						; size = 4
_prevProgress$ = -20					; size = 8
_outSizeProcessed$ = -12				; size = 8
___result__$67053 = -4					; size = 4
_this$ = 8						; size = 4
_inStreams$ = 12					; size = 4
_inSizes$ = 16						; size = 4
_numInStreams$ = 20					; size = 4
_outStreams$ = 24					; size = 4
_outSizes$ = 28						; size = 4
_numOutStreams$ = 32					; size = 4
_progress$ = 36						; size = 4
?Code@CDecoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z PROC ; NCompress::NBcj2::CDecoder::Code
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 160				; 000000a0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-160]
	mov	ecx, 40					; 00000028H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 359
	cmp	DWORD PTR _numInStreams$[ebp], 4
	jne	SHORT $LN41@Code@2
	cmp	DWORD PTR _numOutStreams$[ebp], 1
	je	SHORT $LN42@Code@2
$LN41@Code@2:
; Line 360
	mov	eax, -2147024809			; 80070057H
	jmp	$LN43@Code@2
$LN42@Code@2:
; Line 362
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z ; NCompress::NBcj2::CBaseCoder::Alloc
	mov	DWORD PTR ___result__$67053[ebp], eax
	cmp	DWORD PTR ___result__$67053[ebp], 0
	je	SHORT $LN40@Code@2
	mov	eax, DWORD PTR ___result__$67053[ebp]
	jmp	$LN43@Code@2
$LN40@Code@2:
; Line 364
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ ; NCompress::NBcj2::CDecoder::InitCommon
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+224], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	DWORD PTR [eax+228], edx
; Line 368
	mov	DWORD PTR _outSizeProcessed$[ebp], 0
	mov	DWORD PTR _outSizeProcessed$[ebp+4], 0
; Line 369
	mov	DWORD PTR _prevProgress$[ebp], 0
	mov	DWORD PTR _prevProgress$[ebp+4], 0
; Line 371
	mov	DWORD PTR _res$[ebp], 0
$LN39@Code@2:
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 192				; 000000c0H
	push	eax
	call	_Bcj2Dec_Decode@4
	test	eax, eax
	je	SHORT $LN37@Code@2
; Line 376
	mov	eax, 1
	jmp	$LN43@Code@2
$LN37@Code@2:
; Line 378
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+232], 4
	jae	$LN36@Code@2
; Line 380
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+232]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+88]
	mov	DWORD PTR _totalRead$67065[ebp], edx
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+28]
	mov	DWORD PTR _buf$67066[ebp], eax
; Line 383
	mov	DWORD PTR _i$67067[ebp], 0
	jmp	SHORT $LN35@Code@2
$LN34@Code@2:
	mov	ecx, DWORD PTR _i$67067[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67067[ebp], ecx
$LN35@Code@2:
	mov	edx, DWORD PTR _i$67067[ebp]
	cmp	edx, DWORD PTR _totalRead$67065[ebp]
	jae	SHORT $LN33@Code@2
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+192]
	mov	ecx, DWORD PTR _buf$67066[ebp]
	add	ecx, DWORD PTR _i$67067[ebp]
	mov	edx, DWORD PTR _i$67067[ebp]
	mov	al, BYTE PTR [eax+edx]
	mov	BYTE PTR [ecx], al
	jmp	SHORT $LN34@Code@2
$LN33@Code@2:
; Line 386
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buf$67066[ebp]
	mov	DWORD PTR [eax+edx*4+192], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+232]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _buf$67066[ebp]
	mov	DWORD PTR [ecx+eax*4+208], edx
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+136], 0
	je	SHORT $LN31@Code@2
; Line 391
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+136]
	mov	DWORD PTR _res$[ebp], eax
; Line 392
	jmp	$LN38@Code@2
$LN31@Code@2:
; Line 397
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+48]
	sub	ecx, DWORD PTR _totalRead$67065[ebp]
	mov	DWORD PTR _curSize$67076[ebp], ecx
; Line 408
	mov	esi, esp
	lea	edx, DWORD PTR _curSize$67076[ebp]
	push	edx
	mov	eax, DWORD PTR _curSize$67076[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+28]
	add	ecx, DWORD PTR _totalRead$67065[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+232]
	mov	ecx, DWORD PTR _inStreams$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	eax, DWORD PTR _inStreams$[ebp]
	mov	ecx, DWORD PTR [eax+ecx*4]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res2$67078[ebp], eax
; Line 409
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res2$67078[ebp]
	mov	DWORD PTR [eax+edx*4+136], ecx
; Line 410
	cmp	DWORD PTR _curSize$67076[ebp], 0
	jne	SHORT $LN28@Code@2
; Line 411
	jmp	SHORT $LN29@Code@2
$LN28@Code@2:
; Line 412
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+232]
	mov	ecx, DWORD PTR _curSize$67076[ebp]
	xor	edx, edx
	mov	esi, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [esi+eax*8+104]
	adc	edx, DWORD PTR [esi+eax*8+108]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi+eax*8+104], ecx
	mov	DWORD PTR [esi+eax*8+108], edx
; Line 413
	mov	ecx, DWORD PTR _totalRead$67065[ebp]
	add	ecx, DWORD PTR _curSize$67076[ebp]
	mov	DWORD PTR _totalRead$67065[ebp], ecx
; Line 414
	cmp	DWORD PTR _res2$67078[ebp], 0
	je	SHORT $LN30@Code@2
; Line 415
	jmp	SHORT $LN29@Code@2
$LN30@Code@2:
; Line 417
	cmp	DWORD PTR _totalRead$67065[ebp], 4
	jae	SHORT $LN29@Code@2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+232], 1
	je	$LN31@Code@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+232], 2
	je	$LN31@Code@2
$LN29@Code@2:
; Line 419
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+edx*4+136], 0
	je	SHORT $LN25@Code@2
; Line 420
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+136]
	mov	DWORD PTR _res$[ebp], ecx
$LN25@Code@2:
; Line 422
	cmp	DWORD PTR _totalRead$67065[ebp], 0
	jne	SHORT $LN24@Code@2
; Line 423
	jmp	$LN38@Code@2
$LN24@Code@2:
; Line 427
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+232], 1
	je	SHORT $LN22@Code@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+232], 2
	jne	SHORT $LN23@Code@2
$LN22@Code@2:
; Line 429
	mov	ecx, DWORD PTR _totalRead$67065[ebp]
	and	ecx, 3
	mov	DWORD PTR _extraSize$67088[ebp], ecx
; Line 430
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+232]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _extraSize$67088[ebp]
	mov	DWORD PTR [ecx+eax*4+88], edx
; Line 431
	cmp	DWORD PTR _totalRead$67065[ebp], 4
	jae	SHORT $LN21@Code@2
; Line 433
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+136], 0
	je	SHORT $LN45@Code@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+136]
	mov	DWORD PTR tv270[ebp], eax
	jmp	SHORT $LN46@Code@2
$LN45@Code@2:
	mov	DWORD PTR tv270[ebp], 1
$LN46@Code@2:
	mov	ecx, DWORD PTR tv270[ebp]
	mov	DWORD PTR _res$[ebp], ecx
; Line 434
	jmp	$LN38@Code@2
$LN21@Code@2:
; Line 436
	mov	edx, DWORD PTR _totalRead$67065[ebp]
	sub	edx, DWORD PTR _extraSize$67088[ebp]
	mov	DWORD PTR _totalRead$67065[ebp], edx
$LN23@Code@2:
; Line 439
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+28]
	add	eax, DWORD PTR _totalRead$67065[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+232]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx*4+208], eax
; Line 441
	jmp	$LN20@Code@2
$LN36@Code@2:
; Line 443
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+224]
	sub	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _curSize$67094[ebp], ecx
; Line 444
	je	SHORT $LN19@Code@2
; Line 446
	mov	edx, DWORD PTR _curSize$67094[ebp]
	xor	eax, eax
	add	edx, DWORD PTR _outSizeProcessed$[ebp]
	adc	eax, DWORD PTR _outSizeProcessed$[ebp+4]
	mov	DWORD PTR _outSizeProcessed$[ebp], edx
	mov	DWORD PTR _outSizeProcessed$[ebp+4], eax
; Line 447
	mov	ecx, DWORD PTR _curSize$67094[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR _outStreams$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$67096[ebp], eax
	cmp	DWORD PTR ___result__$67096[ebp], 0
	je	SHORT $LN19@Code@2
	mov	eax, DWORD PTR ___result__$67096[ebp]
	jmp	$LN43@Code@2
$LN19@Code@2:
; Line 449
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+224], edx
; Line 451
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _rem$67098[ebp], ecx
; Line 452
	cmp	DWORD PTR _outSizes$[ebp], 0
	je	SHORT $LN17@Code@2
	mov	edx, DWORD PTR _outSizes$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN17@Code@2
; Line 454
	mov	eax, DWORD PTR _outSizes$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _outSizeProcessed$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	sbb	eax, DWORD PTR _outSizeProcessed$[ebp+4]
	mov	DWORD PTR _outSize$67100[ebp], edx
	mov	DWORD PTR _outSize$67100[ebp+4], eax
; Line 455
	mov	ecx, DWORD PTR _rem$67098[ebp]
	xor	edx, edx
	mov	DWORD PTR tv619[ebp], ecx
	mov	DWORD PTR tv619[ebp+4], edx
	mov	eax, DWORD PTR tv619[ebp+4]
	cmp	eax, DWORD PTR _outSize$67100[ebp+4]
	jb	SHORT $LN17@Code@2
	ja	SHORT $LN48@Code@2
	mov	ecx, DWORD PTR tv619[ebp]
	cmp	ecx, DWORD PTR _outSize$67100[ebp]
	jbe	SHORT $LN17@Code@2
$LN48@Code@2:
; Line 456
	mov	edx, DWORD PTR _outSize$67100[ebp]
	mov	DWORD PTR _rem$67098[ebp], edx
$LN17@Code@2:
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	add	ecx, DWORD PTR _rem$67098[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+228], ecx
; Line 459
	cmp	DWORD PTR _rem$67098[ebp], 0
	jne	SHORT $LN20@Code@2
; Line 460
	jmp	$LN38@Code@2
$LN20@Code@2:
; Line 464
	cmp	DWORD PTR _progress$[ebp], 0
	je	$LN14@Code@2
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+224]
	sub	eax, DWORD PTR [ecx+44]
	cdq
	add	eax, DWORD PTR _outSizeProcessed$[ebp]
	adc	edx, DWORD PTR _outSizeProcessed$[ebp+4]
	mov	DWORD PTR _outSize2$67105[ebp], eax
	mov	DWORD PTR _outSize2$67105[ebp+4], edx
; Line 467
	mov	edx, DWORD PTR _outSize2$67105[ebp]
	sub	edx, DWORD PTR _prevProgress$[ebp]
	mov	eax, DWORD PTR _outSize2$67105[ebp+4]
	sbb	eax, DWORD PTR _prevProgress$[ebp+4]
	mov	DWORD PTR tv645[ebp], edx
	mov	DWORD PTR tv645[ebp+4], eax
	cmp	DWORD PTR tv645[ebp+4], 0
	ja	SHORT $LN49@Code@2
	cmp	DWORD PTR tv645[ebp], 4194304		; 00400000H
	jb	SHORT $LN14@Code@2
$LN49@Code@2:
; Line 469
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _outSize2$67105[ebp]
	add	esi, DWORD PTR [ecx+128]
	mov	edi, DWORD PTR _outSize2$67105[ebp+4]
	adc	edi, DWORD PTR [ecx+132]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+220]
	sub	ecx, DWORD PTR [eax+204]
	mov	eax, ecx
	cdq
	sub	esi, eax
	sbb	edi, edx
	mov	DWORD PTR _inSize2$67107[ebp], esi
	mov	DWORD PTR _inSize2$67107[ebp+4], edi
; Line 470
	mov	esi, esp
	lea	edx, DWORD PTR _outSize2$67105[ebp]
	push	edx
	lea	eax, DWORD PTR _inSize2$67107[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67108[ebp], eax
	cmp	DWORD PTR ___result__$67108[ebp], 0
	je	SHORT $LN12@Code@2
	mov	eax, DWORD PTR ___result__$67108[ebp]
	jmp	$LN43@Code@2
$LN12@Code@2:
; Line 471
	mov	edx, DWORD PTR _outSize2$67105[ebp]
	mov	DWORD PTR _prevProgress$[ebp], edx
	mov	eax, DWORD PTR _outSize2$67105[ebp+4]
	mov	DWORD PTR _prevProgress$[ebp+4], eax
$LN14@Code@2:
; Line 474
	jmp	$LN39@Code@2
$LN38@Code@2:
; Line 476
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+224]
	sub	eax, DWORD PTR [edx+44]
	mov	DWORD PTR _curSize$[ebp], eax
; Line 477
	je	SHORT $LN11@Code@2
; Line 479
	mov	ecx, DWORD PTR _curSize$[ebp]
	xor	edx, edx
	add	ecx, DWORD PTR _outSizeProcessed$[ebp]
	adc	edx, DWORD PTR _outSizeProcessed$[ebp+4]
	mov	DWORD PTR _outSizeProcessed$[ebp], ecx
	mov	DWORD PTR _outSizeProcessed$[ebp+4], edx
; Line 480
	mov	eax, DWORD PTR _curSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR _outStreams$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$67112[ebp], eax
	cmp	DWORD PTR ___result__$67112[ebp], 0
	je	SHORT $LN11@Code@2
	mov	eax, DWORD PTR ___result__$67112[ebp]
	jmp	$LN43@Code@2
$LN11@Code@2:
; Line 483
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN9@Code@2
; Line 484
	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN43@Code@2
$LN9@Code@2:
; Line 486
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+168]
	test	eax, eax
	je	$LN8@Code@2
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+248], 0
	je	SHORT $LN7@Code@2
; Line 489
	mov	eax, 1
	jmp	$LN43@Code@2
$LN7@Code@2:
; Line 494
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+232], 0
	je	SHORT $LN6@Code@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+232], 8
	je	SHORT $LN6@Code@2
; Line 495
	mov	eax, 1
	jmp	$LN43@Code@2
$LN6@Code@2:
; Line 497
	cmp	DWORD PTR _inSizes$[ebp], 0
	je	$LN8@Code@2
; Line 499
	mov	DWORD PTR _i$67122[ebp], 0
	jmp	SHORT $LN4@Code@2
$LN3@Code@2:
	mov	ecx, DWORD PTR _i$67122[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67122[ebp], ecx
$LN4@Code@2:
	cmp	DWORD PTR _i$67122[ebp], 4
	jge	$LN8@Code@2
; Line 501
	mov	edx, DWORD PTR _i$67122[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$67122[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+edx*4+208]
	sub	edx, DWORD PTR [esi+ecx*4+192]
	mov	eax, DWORD PTR _i$67122[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+eax*4+88]
	mov	DWORD PTR _rem$67126[ebp], edx
; Line 506
	mov	edx, DWORD PTR _i$67122[ebp]
	mov	eax, DWORD PTR _inSizes$[ebp]
	cmp	DWORD PTR [eax+edx*4], 0
	je	SHORT $LN1@Code@2
	mov	ecx, DWORD PTR _i$67122[ebp]
	mov	edx, DWORD PTR _inSizes$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _rem$67126[ebp]
	xor	edx, edx
	mov	esi, DWORD PTR _i$67122[ebp]
	mov	edi, DWORD PTR _this$[ebp]
	mov	ebx, DWORD PTR [edi+esi*8+104]
	sub	ebx, ecx
	mov	ecx, DWORD PTR [edi+esi*8+108]
	sbb	ecx, edx
	mov	DWORD PTR tv724[ebp], eax
	mov	DWORD PTR tv725[ebp], ebx
	mov	DWORD PTR tv725[ebp+4], ecx
	mov	edx, DWORD PTR tv724[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR tv725[ebp]
	jne	SHORT $LN50@Code@2
	mov	ecx, DWORD PTR tv724[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR tv725[ebp+4]
	je	SHORT $LN1@Code@2
$LN50@Code@2:
; Line 507
	mov	eax, 1
	jmp	SHORT $LN43@Code@2
$LN1@Code@2:
; Line 508
	jmp	$LN3@Code@2
$LN8@Code@2:
; Line 512
	xor	eax, eax
$LN43@Code@2:
; Line 513
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN55@Code@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 160				; 000000a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN55@Code@2:
	DD	3
	DD	$LN54@Code@2
$LN54@Code@2:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN51@Code@2
	DD	-88					; ffffffa8H
	DD	8
	DD	$LN52@Code@2
	DD	-104					; ffffff98H
	DD	8
	DD	$LN53@Code@2
$LN53@Code@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN52@Code@2:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN51@Code@2:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Code@CDecoder@NBcj2@NCompress@@UAGJPBQAUISequentialInStream@@PBQB_KIPBQAUISequentialOutStream@@1IPAUICompressProgressInfo@@@Z ENDP ; NCompress::NBcj2::CDecoder::Code
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_streamIndex$ = 12					; size = 4
_inStream$ = 16						; size = 4
?SetInStream2@CDecoder@NBcj2@NCompress@@UAGJIPAUISequentialInStream@@@Z PROC ; NCompress::NBcj2::CDecoder::SetInStream2
; Line 516
	push	ebp
	mov	ebp, esp
; Line 517
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _streamIndex$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx*4+144]
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 518
	xor	eax, eax
; Line 519
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?SetInStream2@CDecoder@NBcj2@NCompress@@UAGJIPAUISequentialInStream@@@Z ENDP ; NCompress::NBcj2::CDecoder::SetInStream2
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_streamIndex$ = 12					; size = 4
?ReleaseInStream2@CDecoder@NBcj2@NCompress@@UAGJI@Z PROC ; NCompress::NBcj2::CDecoder::ReleaseInStream2
; Line 522
	push	ebp
	mov	ebp, esp
; Line 523
	mov	eax, DWORD PTR _streamIndex$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [ecx+eax*4+144]
	call	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Line 524
	xor	eax, eax
; Line 525
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?ReleaseInStream2@CDecoder@NBcj2@NCompress@@UAGJI@Z ENDP ; NCompress::NBcj2::CDecoder::ReleaseInStream2
; Function compile flags: /Odtp /RTCsu
_res$ = -4						; size = 4
_this$ = 8						; size = 4
_outSize$ = 12						; size = 4
?SetOutStreamSize@CDecoder@NBcj2@NCompress@@UAGJPB_K@Z PROC ; NCompress::NBcj2::CDecoder::SetOutStreamSize
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 529
	xor	eax, eax
	cmp	DWORD PTR _outSize$[ebp], 0
	setne	al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+153], al
; Line 530
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], 0
	mov	DWORD PTR [edx+164], 0
; Line 531
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+153]
	test	ecx, ecx
	je	SHORT $LN1@SetOutStre
; Line 532
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+160], ecx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+164], eax
$LN1@SetOutStre:
; Line 534
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+168], 0
	mov	DWORD PTR [ecx+172], 0
; Line 536
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Alloc@CBaseCoder@NBcj2@NCompress@@IAEJ_N@Z ; NCompress::NBcj2::CBaseCoder::Alloc
	mov	DWORD PTR _res$[ebp], eax
; Line 538
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?InitCommon@CDecoder@NBcj2@NCompress@@AAEXXZ ; NCompress::NBcj2::CDecoder::InitCommon
; Line 539
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+208], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+212], 0
; Line 541
	mov	eax, DWORD PTR _res$[ebp]
; Line 542
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetOutStreamSize@CDecoder@NBcj2@NCompress@@UAGJPB_K@Z ENDP ; NCompress::NBcj2::CDecoder::SetOutStreamSize
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv519 = -80						; size = 4
tv518 = -76						; size = 4
tv319 = -72						; size = 4
tv224 = -68						; size = 4
tv403 = -64						; size = 8
_extraSize$67201 = -56					; size = 4
_res2$67192 = -52					; size = 4
_curSize$67190 = -44					; size = 4
_i$67181 = -36						; size = 4
_buf$67180 = -32					; size = 4
_totalRead$67179 = -28					; size = 4
_curSize$67171 = -24					; size = 4
_sres$67168 = -20					; size = 4
_res$ = -16						; size = 4
_rem$67158 = -12					; size = 8
_totalProcessed$ = -4					; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CDecoder@NBcj2@NCompress@@UAGJPAXIPAI@Z PROC	; NCompress::NBcj2::CDecoder::Read
; Line 546
	push	ebp
	mov	ebp, esp
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 547
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN29@Read
; Line 548
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN29@Read:
; Line 550
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN28@Read
; Line 551
	xor	eax, eax
	jmp	$LN30@Read
$LN28@Read:
; Line 553
	mov	DWORD PTR _totalProcessed$[ebp], 0
; Line 555
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+157]
	test	edx, edx
	je	SHORT $LN27@Read
; Line 557
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+164]
	sub	edx, DWORD PTR [ecx+172]
	mov	eax, DWORD PTR [eax+168]
	sbb	eax, DWORD PTR [ecx+176]
	mov	DWORD PTR _rem$67158[ebp], edx
	mov	DWORD PTR _rem$67158[ebp+4], eax
; Line 558
	mov	ecx, DWORD PTR _size$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv403[ebp], ecx
	mov	DWORD PTR tv403[ebp+4], edx
	mov	eax, DWORD PTR tv403[ebp+4]
	cmp	eax, DWORD PTR _rem$67158[ebp+4]
	jb	SHORT $LN27@Read
	ja	SHORT $LN35@Read
	mov	ecx, DWORD PTR tv403[ebp]
	cmp	ecx, DWORD PTR _rem$67158[ebp]
	jbe	SHORT $LN27@Read
$LN35@Read:
; Line 559
	mov	edx, DWORD PTR _rem$67158[ebp]
	mov	DWORD PTR _size$[ebp], edx
$LN27@Read:
; Line 561
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+212], ecx
; Line 562
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+216], edx
; Line 564
	mov	DWORD PTR _res$[ebp], 0
$LN25@Read:
; Line 568
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	push	ecx
	call	_Bcj2Dec_Decode@4
	mov	DWORD PTR _sres$67168[ebp], eax
; Line 569
	cmp	DWORD PTR _sres$67168[ebp], 0
	je	SHORT $LN23@Read
; Line 570
	mov	eax, 1
	jmp	$LN30@Read
$LN23@Read:
; Line 573
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+212]
	sub	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _curSize$67171[ebp], eax
; Line 574
	je	SHORT $LN22@Read
; Line 576
	mov	ecx, DWORD PTR _totalProcessed$[ebp]
	add	ecx, DWORD PTR _curSize$67171[ebp]
	mov	DWORD PTR _totalProcessed$[ebp], ecx
; Line 577
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN21@Read
; Line 578
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR _totalProcessed$[ebp]
	mov	DWORD PTR [edx], eax
$LN21@Read:
; Line 579
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, DWORD PTR _curSize$67171[ebp]
	mov	DWORD PTR _data$[ebp], ecx
; Line 580
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, DWORD PTR _curSize$67171[ebp]
	mov	DWORD PTR _size$[ebp], edx
; Line 581
	mov	eax, DWORD PTR _curSize$67171[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+172]
	adc	ecx, DWORD PTR [edx+176]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], eax
	mov	DWORD PTR [edx+176], ecx
$LN22@Read:
; Line 585
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+220], 4
	jb	SHORT $LN20@Read
; Line 586
	jmp	$LN24@Read
$LN20@Read:
; Line 589
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+76]
	mov	DWORD PTR _totalRead$67179[ebp], ecx
; Line 591
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+16]
	mov	DWORD PTR _buf$67180[ebp], edx
; Line 592
	mov	DWORD PTR _i$67181[ebp], 0
	jmp	SHORT $LN19@Read
$LN18@Read:
	mov	eax, DWORD PTR _i$67181[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67181[ebp], eax
$LN19@Read:
	mov	ecx, DWORD PTR _i$67181[ebp]
	cmp	ecx, DWORD PTR _totalRead$67179[ebp]
	jae	SHORT $LN17@Read
; Line 593
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+180]
	mov	eax, DWORD PTR _buf$67180[ebp]
	add	eax, DWORD PTR _i$67181[ebp]
	mov	ecx, DWORD PTR _i$67181[ebp]
	mov	dl, BYTE PTR [edx+ecx]
	mov	BYTE PTR [eax], dl
	jmp	SHORT $LN18@Read
$LN17@Read:
; Line 595
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _buf$67180[ebp]
	mov	DWORD PTR [edx+ecx*4+180], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buf$67180[ebp]
	mov	DWORD PTR [eax+edx*4+196], ecx
; Line 598
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+124], 0
	je	SHORT $LN15@Read
; Line 599
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+124]
	jmp	$LN30@Read
$LN15@Read:
; Line 603
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+36]
	sub	edx, DWORD PTR _totalRead$67179[ebp]
	mov	DWORD PTR _curSize$67190[ebp], edx
; Line 604
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx*4+140]
	call	??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator->
	mov	DWORD PTR tv224[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _curSize$67190[ebp]
	push	eax
	mov	ecx, DWORD PTR _curSize$67190[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+16]
	add	edx, DWORD PTR _totalRead$67179[ebp]
	push	edx
	mov	eax, DWORD PTR tv224[ebp]
	push	eax
	mov	ecx, DWORD PTR tv224[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res2$67192[ebp], eax
; Line 605
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res2$67192[ebp]
	mov	DWORD PTR [eax+edx*4+124], ecx
; Line 606
	cmp	DWORD PTR _curSize$67190[ebp], 0
	jne	SHORT $LN12@Read
; Line 607
	jmp	SHORT $LN13@Read
$LN12@Read:
; Line 608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _curSize$67190[ebp]
	xor	edx, edx
	mov	esi, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [esi+eax*8+92]
	adc	edx, DWORD PTR [esi+eax*8+96]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+220]
	mov	esi, DWORD PTR _this$[ebp]
	mov	DWORD PTR [esi+eax*8+92], ecx
	mov	DWORD PTR [esi+eax*8+96], edx
; Line 609
	mov	ecx, DWORD PTR _totalRead$67179[ebp]
	add	ecx, DWORD PTR _curSize$67190[ebp]
	mov	DWORD PTR _totalRead$67179[ebp], ecx
; Line 610
	cmp	DWORD PTR _res2$67192[ebp], 0
	je	SHORT $LN14@Read
; Line 611
	jmp	SHORT $LN13@Read
$LN14@Read:
; Line 613
	cmp	DWORD PTR _totalRead$67179[ebp], 4
	jae	SHORT $LN13@Read
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+220], 1
	je	$LN15@Read
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+220], 2
	je	$LN15@Read
$LN13@Read:
; Line 615
	cmp	DWORD PTR _totalRead$67179[ebp], 0
	jne	SHORT $LN9@Read
; Line 617
	cmp	DWORD PTR _totalProcessed$[ebp], 0
	jne	SHORT $LN8@Read
; Line 618
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+220]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+124]
	mov	DWORD PTR _res$[ebp], ecx
$LN8@Read:
; Line 619
	jmp	$LN24@Read
$LN9@Read:
; Line 622
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+220], 1
	je	SHORT $LN6@Read
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+220], 2
	jne	SHORT $LN7@Read
$LN6@Read:
; Line 624
	mov	ecx, DWORD PTR _totalRead$67179[ebp]
	and	ecx, 3
	mov	DWORD PTR _extraSize$67201[ebp], ecx
; Line 625
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _extraSize$67201[ebp]
	mov	DWORD PTR [ecx+eax*4+76], edx
; Line 626
	cmp	DWORD PTR _totalRead$67179[ebp], 4
	jae	SHORT $LN5@Read
; Line 628
	cmp	DWORD PTR _totalProcessed$[ebp], 0
	je	SHORT $LN4@Read
; Line 629
	xor	eax, eax
	jmp	$LN30@Read
$LN4@Read:
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+ecx*4+124], 0
	je	SHORT $LN32@Read
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+124]
	mov	DWORD PTR tv319[ebp], eax
	jmp	SHORT $LN33@Read
$LN32@Read:
	mov	DWORD PTR tv319[ebp], 1
$LN33@Read:
	mov	eax, DWORD PTR tv319[ebp]
	jmp	$LN30@Read
$LN5@Read:
; Line 632
	mov	ecx, DWORD PTR _totalRead$67179[ebp]
	sub	ecx, DWORD PTR _extraSize$67201[ebp]
	mov	DWORD PTR _totalRead$67179[ebp], ecx
$LN7@Read:
; Line 635
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+220]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+16]
	add	edx, DWORD PTR _totalRead$67179[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+220]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+ecx*4+196], edx
; Line 637
	jmp	$LN25@Read
$LN24@Read:
; Line 639
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+156]
	test	edx, edx
	je	SHORT $LN3@Read
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+157]
	test	ecx, ecx
	je	SHORT $LN3@Read
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv518[ebp], edx
	mov	DWORD PTR tv519[ebp], eax
	mov	ecx, DWORD PTR tv518[ebp]
	mov	edx, DWORD PTR tv519[ebp]
	mov	eax, DWORD PTR [ecx+164]
	cmp	eax, DWORD PTR [edx+172]
	jne	SHORT $LN3@Read
	mov	ecx, DWORD PTR tv518[ebp]
	mov	edx, DWORD PTR tv519[ebp]
	mov	eax, DWORD PTR [ecx+168]
	cmp	eax, DWORD PTR [edx+176]
	jne	SHORT $LN3@Read
; Line 641
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+236], 0
	je	SHORT $LN2@Read
; Line 642
	mov	eax, 1
	jmp	SHORT $LN30@Read
$LN2@Read:
; Line 645
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+220], 0
	je	SHORT $LN3@Read
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+220], 8
	je	SHORT $LN3@Read
; Line 646
	mov	eax, 1
	jmp	SHORT $LN30@Read
$LN3@Read:
; Line 655
	mov	eax, DWORD PTR _res$[ebp]
$LN30@Read:
; Line 656
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN38@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN38@Read:
	DD	1
	DD	$LN37@Read
$LN37@Read:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN36@Read
$LN36@Read:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Read@CDecoder@NBcj2@NCompress@@UAGJPAXIPAI@Z ENDP	; NCompress::NBcj2::CDecoder::Read
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialInStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ PROC ; CMyComPtr<ICompressGetSubStreamSize>::CMyComPtr<ICompressGetSubStreamSize>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ENDP ; CMyComPtr<ICompressGetSubStreamSize>::CMyComPtr<ICompressGetSubStreamSize>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ PROC ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressGetSubStreamSize@@@@QAE@XZ ENDP ; CMyComPtr<ICompressGetSubStreamSize>::~CMyComPtr<ICompressGetSubStreamSize>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ PROC ; CMyComPtr<ICompressGetSubStreamSize>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEXXZ ENDP ; CMyComPtr<ICompressGetSubStreamSize>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ PROC ; CMyComPtr<ICompressGetSubStreamSize>::operator ICompressGetSubStreamSize *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ ENDP ; CMyComPtr<ICompressGetSubStreamSize>::operator ICompressGetSubStreamSize *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ PROC ; CMyComPtr<ICompressGetSubStreamSize>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICompressGetSubStreamSize@@@@QAEPAPAUICompressGetSubStreamSize@@XZ ENDP ; CMyComPtr<ICompressGetSubStreamSize>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ PROC ; CMyComPtr<ICompressGetSubStreamSize>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressGetSubStreamSize@@@@QBEPAUICompressGetSubStreamSize@@XZ ENDP ; CMyComPtr<ICompressGetSubStreamSize>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NBcj2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@NBcj2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CDecoder::QueryInterface
?QueryInterface@CDecoder@NBcj2@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CEncoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CEncoder::QueryInterface
?QueryInterface@CEncoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CEncoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NBcj2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@NBcj2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CDecoder::QueryInterface
?QueryInterface@CDecoder@NBcj2@NCompress@@WBE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NBcj2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@NBcj2@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::Release
?Release@CDecoder@NBcj2@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NBcj2@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@NBcj2@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::Release
?Release@CDecoder@NBcj2@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NBcj2@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@NBcj2@NCompress@@WM@AGKXZ PROC	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::Release
?Release@CDecoder@NBcj2@NCompress@@WM@AGKXZ ENDP	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBcj2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@NBcj2@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::AddRef
?AddRef@CDecoder@NBcj2@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@NBcj2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@NBcj2@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::NBcj2::CEncoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CEncoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CEncoder::Release
?Release@CEncoder@NBcj2@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CEncoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NBcj2@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@NBcj2@NCompress@@WBA@AGKXZ PROC	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::Release
?Release@CDecoder@NBcj2@NCompress@@WBA@AGKXZ ENDP	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBcj2@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@NBcj2@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::AddRef
?AddRef@CDecoder@NBcj2@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CEncoder@NBcj2@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CEncoder@NBcj2@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::NBcj2::CEncoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CEncoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CEncoder::Release
?Release@CEncoder@NBcj2@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CEncoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CDecoder::QueryInterface
?QueryInterface@CDecoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NBcj2@NCompress@@WBE@AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@NBcj2@NCompress@@WBE@AGKXZ PROC	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?Release@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::Release
?Release@CDecoder@NBcj2@NCompress@@WBE@AGKXZ ENDP	; [thunk]:NCompress::NBcj2::CDecoder::Release`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBcj2@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@NBcj2@NCompress@@WM@AGKXZ PROC		; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::AddRef
?AddRef@CDecoder@NBcj2@NCompress@@WM@AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NBcj2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@NBcj2@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::NBcj2::CEncoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CEncoder::AddRef
?AddRef@CEncoder@NBcj2@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CEncoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CDecoder::QueryInterface
?QueryInterface@CDecoder@NBcj2@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBcj2@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@NBcj2@NCompress@@WBA@AGKXZ PROC	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::AddRef
?AddRef@CDecoder@NBcj2@NCompress@@WBA@AGKXZ ENDP	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CEncoder@NBcj2@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CEncoder@NBcj2@NCompress@@W7AGKXZ PROC		; [thunk]:NCompress::NBcj2::CEncoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CEncoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CEncoder::AddRef
?AddRef@CEncoder@NBcj2@NCompress@@W7AGKXZ ENDP		; [thunk]:NCompress::NBcj2::CEncoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NBcj2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@NBcj2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CDecoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CDecoder::QueryInterface
?QueryInterface@CDecoder@NBcj2@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CDecoder::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBcj2@NCompress@@WBE@AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@NBcj2@NCompress@@WBE@AGKXZ PROC	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?AddRef@CDecoder@NBcj2@NCompress@@UAGKXZ ; NCompress::NBcj2::CDecoder::AddRef
?AddRef@CDecoder@NBcj2@NCompress@@WBE@AGKXZ ENDP	; [thunk]:NCompress::NBcj2::CDecoder::AddRef`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CEncoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CEncoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBcj2::CEncoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CEncoder@NBcj2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBcj2::CEncoder::QueryInterface
?QueryInterface@CEncoder@NBcj2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBcj2::CEncoder::QueryInterface`adjustor{4}'
_TEXT	ENDS
END

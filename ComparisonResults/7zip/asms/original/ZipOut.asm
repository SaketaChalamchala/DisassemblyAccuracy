; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Archive\Zip\ZipOut.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::operator->
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
PUBLIC	??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z ; CMyComPtr<IOutStream>::operator=
PUBLIC	?Create@COutArchive@NZip@NArchive@@QAEJPAUIOutStream@@@Z ; NArchive::NZip::COutArchive::Create
EXTRN	?Init@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Init
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv85 = -8						; size = 4
_this$ = -4						; size = 4
_outStream$ = 8						; size = 4
?Create@COutArchive@NZip@NArchive@@QAEJPAUIOutStream@@@Z PROC ; NArchive::NZip::COutArchive::Create
; _this$ = ecx
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	DWORD PTR [eax+60], 0
; Line 15
	push	65536					; 00010000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Create
; Line 16
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN2@Create
$LN1@Create:
; Line 17
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z ; CMyComPtr<IOutStream>::operator=
; Line 18
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Line 19
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@COutBuffer@@QAEXXZ		; COutBuffer::Init
; Line 21
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::operator->
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	push	ecx
	push	1
	push	0
	push	0
	mov	edx, DWORD PTR tv85[ebp]
	push	edx
	mov	eax, DWORD PTR tv85[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Create:
; Line 22
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@COutArchive@NZip@NArchive@@QAEJPAUIOutStream@@@Z ENDP ; NArchive::NZip::COutArchive::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
_TEXT	ENDS
PUBLIC	?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z	; NArchive::NZip::COutArchive::MoveCurPos
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_distanceToMove$ = 8					; size = 8
?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z PROC	; NArchive::NZip::COutArchive::MoveCurPos
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	add	ecx, DWORD PTR _distanceToMove$[ebp]
	mov	edx, DWORD PTR [eax+60]
	adc	edx, DWORD PTR _distanceToMove$[ebp+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	DWORD PTR [eax+60], edx
; Line 27
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z ENDP	; NArchive::NZip::COutArchive::MoveCurPos
_TEXT	ENDS
PUBLIC	__TI1?AUCSystemException@@
PUBLIC	??0CSystemException@@QAE@J@Z			; CSystemException::CSystemException
PUBLIC	?SeekToRelatPos@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::SeekToRelatPos
PUBLIC	__CTA1?AUCSystemException@@
PUBLIC	__CT??_R0?AUCSystemException@@@84
PUBLIC	??_R0?AUCSystemException@@@8			; CSystemException `RTTI Type Descriptor'
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0?AUCSystemException@@@8
_DATA	SEGMENT
??_R0?AUCSystemException@@@8 DD FLAT:??_7type_info@@6B@	; CSystemException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCSystemException@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AUCSystemException@@@84
xdata$x	SEGMENT
__CT??_R0?AUCSystemException@@@84 DD 00H
	DD	FLAT:??_R0?AUCSystemException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1?AUCSystemException@@
xdata$x	SEGMENT
__CTA1?AUCSystemException@@ DD 01H
	DD	FLAT:__CT??_R0?AUCSystemException@@@84
xdata$x	ENDS
;	COMDAT __TI1?AUCSystemException@@
xdata$x	SEGMENT
__TI1?AUCSystemException@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AUCSystemException@@
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv67 = -20						; size = 4
$T68927 = -16						; size = 4
$T68926 = -12						; size = 4
_res$ = -8						; size = 4
_this$ = -4						; size = 4
_offset$ = 8						; size = 8
?SeekToRelatPos@COutArchive@NZip@NArchive@@AAEX_K@Z PROC ; NArchive::NZip::COutArchive::SeekToRelatPos
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::operator->
	mov	DWORD PTR tv67[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	add	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR [eax+52]
	adc	edx, DWORD PTR _offset$[ebp+4]
	push	edx
	push	ecx
	mov	eax, DWORD PTR tv67[ebp]
	push	eax
	mov	ecx, DWORD PTR tv67[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax
; Line 32
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN3@SeekToRela
; Line 33
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T68927[ebp]
	call	??0CSystemException@@QAE@J@Z		; CSystemException::CSystemException
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T68926[ebp], edx
	push	OFFSET __TI1?AUCSystemException@@
	lea	eax, DWORD PTR $T68926[ebp]
	push	eax
	call	__CxxThrowException@8
$LN3@SeekToRela:
; Line 34
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SeekToRelatPos@COutArchive@NZip@NArchive@@AAEX_K@Z ENDP ; NArchive::NZip::COutArchive::SeekToRelatPos
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CSystemException@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_errorCode$ = 8						; size = 4
??0CSystemException@@QAE@J@Z PROC			; CSystemException::CSystemException, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myexception.h
; Line 11
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CSystemException@@QAE@J@Z ENDP			; CSystemException::CSystemException
_TEXT	ENDS
PUBLIC	?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z ; NArchive::NZip::COutArchive::PrepareWriteCompressedDataZip64
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileNameLen$ = 8					; size = 4
_isZip64$ = 12						; size = 1
_aesEncryption$ = 16					; size = 1
?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z PROC ; NArchive::NZip::COutArchive::PrepareWriteCompressedDataZip64
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _isZip64$[ebp]
	mov	BYTE PTR [eax+72], cl
; Line 39
	movzx	edx, BYTE PTR _isZip64$[ebp]
	neg	edx
	sbb	edx, edx
	and	edx, 20					; 00000014H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], edx
; Line 40
	movzx	ecx, BYTE PTR _aesEncryption$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@PrepareWri
; Line 41
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	add	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], eax
$LN1@PrepareWri:
; Line 42
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	ecx, DWORD PTR _fileNameLen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+30]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], edx
; Line 43
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z ENDP ; NArchive::NZip::COutArchive::PrepareWriteCompressedDataZip64
_TEXT	ENDS
PUBLIC	?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z ; NArchive::NZip::COutArchive::PrepareWriteCompressedData
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -5						; size = 1
_this$ = -4						; size = 4
_fileNameLen$ = 8					; size = 4
_unPackSize$ = 12					; size = 8
_aesEncryption$ = 20					; size = 1
?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z PROC ; NArchive::NZip::COutArchive::PrepareWriteCompressedData
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	cmp	DWORD PTR _unPackSize$[ebp+4], 0
	ja	SHORT $LN5@PrepareWri@2
	cmp	DWORD PTR _unPackSize$[ebp], -134217728	; f8000000H
	jb	SHORT $LN3@PrepareWri@2
$LN5@PrepareWri@2:
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@PrepareWri@2
$LN3@PrepareWri@2:
	mov	BYTE PTR tv67[ebp], 0
$LN4@PrepareWri@2:
	movzx	eax, BYTE PTR _aesEncryption$[ebp]
	push	eax
	movzx	ecx, BYTE PTR tv67[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileNameLen$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z ; NArchive::NZip::COutArchive::PrepareWriteCompressedDataZip64
; Line 51
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?PrepareWriteCompressedData@COutArchive@NZip@NArchive@@QAEXI_K_N@Z ENDP ; NArchive::NZip::COutArchive::PrepareWriteCompressedData
_TEXT	ENDS
PUBLIC	?PrepareWriteCompressedData2@COutArchive@NZip@NArchive@@QAEXI_K0_N@Z ; NArchive::NZip::COutArchive::PrepareWriteCompressedData2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv66 = -12						; size = 4
_isZip64$ = -5						; size = 1
_this$ = -4						; size = 4
_fileNameLen$ = 8					; size = 4
_unPackSize$ = 12					; size = 8
_packSize$ = 20						; size = 8
_aesEncryption$ = 28					; size = 1
?PrepareWriteCompressedData2@COutArchive@NZip@NArchive@@QAEXI_K0_N@Z PROC ; NArchive::NZip::COutArchive::PrepareWriteCompressedData2
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	cmp	DWORD PTR _unPackSize$[ebp+4], 0
	ja	SHORT $LN3@PrepareWri@3
	jb	SHORT $LN5@PrepareWri@3
	cmp	DWORD PTR _unPackSize$[ebp], -1
	jae	SHORT $LN3@PrepareWri@3
$LN5@PrepareWri@3:
	cmp	DWORD PTR _packSize$[ebp+4], 0
	ja	SHORT $LN3@PrepareWri@3
	jb	SHORT $LN6@PrepareWri@3
	cmp	DWORD PTR _packSize$[ebp], -1
	jae	SHORT $LN3@PrepareWri@3
$LN6@PrepareWri@3:
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN4@PrepareWri@3
$LN3@PrepareWri@3:
	mov	DWORD PTR tv66[ebp], 1
$LN4@PrepareWri@3:
	mov	al, BYTE PTR tv66[ebp]
	mov	BYTE PTR _isZip64$[ebp], al
; Line 60
	movzx	ecx, BYTE PTR _aesEncryption$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _isZip64$[ebp]
	push	edx
	mov	eax, DWORD PTR _fileNameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrepareWriteCompressedDataZip64@COutArchive@NZip@NArchive@@AAEXI_N0@Z ; NArchive::NZip::COutArchive::PrepareWriteCompressedDataZip64
; Line 61
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?PrepareWriteCompressedData2@COutArchive@NZip@NArchive@@QAEXI_K0_N@Z ENDP ; NArchive::NZip::COutArchive::PrepareWriteCompressedData2
_TEXT	ENDS
PUBLIC	?WriteBytes@COutBuffer@@QAEXPBXI@Z		; COutBuffer::WriteBytes
PUBLIC	?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ; NArchive::NZip::COutArchive::WriteBytes
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buffer$ = 8						; size = 4
_size$ = 12						; size = 4
?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z PROC	; NArchive::NZip::COutArchive::WriteBytes
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?WriteBytes@COutBuffer@@QAEXPBXI@Z	; COutBuffer::WriteBytes
; Line 66
	mov	edx, DWORD PTR _size$[ebp]
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [ecx+56]
	adc	eax, DWORD PTR [ecx+60]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], edx
	mov	DWORD PTR [ecx+60], eax
; Line 67
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ENDP	; NArchive::NZip::COutArchive::WriteBytes
_TEXT	ENDS
PUBLIC	?WriteByte@COutBuffer@@QAEXE@Z			; COutBuffer::WriteByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteBytes@COutBuffer@@QAEXPBXI@Z
_TEXT	SEGMENT
_i$66165 = -8						; size = 4
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?WriteBytes@COutBuffer@@QAEXPBXI@Z PROC			; COutBuffer::WriteBytes, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	mov	DWORD PTR _i$66165[ebp], 0
	jmp	SHORT $LN3@WriteBytes
$LN2@WriteBytes:
	mov	eax, DWORD PTR _i$66165[ebp]
	add	eax, 1
	mov	DWORD PTR _i$66165[ebp], eax
$LN3@WriteBytes:
	mov	ecx, DWORD PTR _i$66165[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN4@WriteBytes
; Line 57
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$66165[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
	jmp	SHORT $LN2@WriteBytes
$LN4@WriteBytes:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteBytes@COutBuffer@@QAEXPBXI@Z ENDP			; COutBuffer::WriteBytes
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteByte@COutBuffer@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@COutBuffer@@QAEXE@Z PROC			; COutBuffer::WriteByte, COMDAT
; _this$ = ecx
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@WriteByte
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@WriteByte:
; Line 53
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@COutBuffer@@QAEXE@Z ENDP			; COutBuffer::WriteByte
_TEXT	ENDS
PUBLIC	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z	; NArchive::NZip::COutArchive::Write8
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?Write8@COutArchive@NZip@NArchive@@AAEXE@Z PROC		; NArchive::NZip::COutArchive::Write8
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+60]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], edx
	mov	DWORD PTR [ecx+60], eax
; Line 73
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ENDP		; NArchive::NZip::COutArchive::Write8
_TEXT	ENDS
PUBLIC	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z	; NArchive::NZip::COutArchive::Write16
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$68398 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 2
?Write16@COutArchive@NZip@NArchive@@AAEXG@Z PROC	; NArchive::NZip::COutArchive::Write16
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	DWORD PTR _i$68398[ebp], 0
	jmp	SHORT $LN3@Write16
$LN2@Write16:
	mov	eax, DWORD PTR _i$68398[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68398[ebp], eax
$LN3@Write16:
	cmp	DWORD PTR _i$68398[ebp], 2
	jge	SHORT $LN4@Write16
; Line 79
	movzx	ecx, BYTE PTR _val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 80
	mov	dx, WORD PTR _val$[ebp]
	shr	dx, 8
	mov	WORD PTR _val$[ebp], dx
; Line 81
	jmp	SHORT $LN2@Write16
$LN4@Write16:
; Line 82
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ENDP	; NArchive::NZip::COutArchive::Write16
_TEXT	ENDS
PUBLIC	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z	; NArchive::NZip::COutArchive::Write32
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$68407 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 4
?Write32@COutArchive@NZip@NArchive@@AAEXI@Z PROC	; NArchive::NZip::COutArchive::Write32
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	mov	DWORD PTR _i$68407[ebp], 0
	jmp	SHORT $LN3@Write32
$LN2@Write32:
	mov	eax, DWORD PTR _i$68407[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68407[ebp], eax
$LN3@Write32:
	cmp	DWORD PTR _i$68407[ebp], 4
	jge	SHORT $LN4@Write32
; Line 88
	movzx	ecx, BYTE PTR _val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 89
	mov	edx, DWORD PTR _val$[ebp]
	shr	edx, 8
	mov	DWORD PTR _val$[ebp], edx
; Line 90
	jmp	SHORT $LN2@Write32
$LN4@Write32:
; Line 91
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ENDP	; NArchive::NZip::COutArchive::Write32
_TEXT	ENDS
PUBLIC	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z	; NArchive::NZip::COutArchive::Write64
EXTRN	__aullshr:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$68416 = -8						; size = 4
_this$ = -4						; size = 4
_val$ = 8						; size = 8
?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z PROC	; NArchive::NZip::COutArchive::Write64
; _this$ = ecx
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	DWORD PTR _i$68416[ebp], 0
	jmp	SHORT $LN3@Write64
$LN2@Write64:
	mov	eax, DWORD PTR _i$68416[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68416[ebp], eax
$LN3@Write64:
	cmp	DWORD PTR _i$68416[ebp], 8
	jge	SHORT $LN4@Write64
; Line 97
	movzx	ecx, BYTE PTR _val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 98
	mov	eax, DWORD PTR _val$[ebp]
	mov	edx, DWORD PTR _val$[ebp+4]
	mov	cl, 8
	call	__aullshr
	mov	DWORD PTR _val$[ebp], eax
	mov	DWORD PTR _val$[ebp+4], edx
; Line 99
	jmp	SHORT $LN2@Write64
$LN4@Write64:
; Line 100
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ENDP	; NArchive::NZip::COutArchive::Write64
_TEXT	ENDS
PUBLIC	??B?$CBuffer@E@@QBEPBEXZ			; CBuffer<unsigned char>::operator unsigned char const *
PUBLIC	?Size@?$CBuffer@E@@QBEIXZ			; CBuffer<unsigned char>::Size
PUBLIC	??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z ; CObjectVector<NArchive::NZip::CExtraSubBlock>::operator[]
PUBLIC	?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CExtraSubBlock>::Size
PUBLIC	?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z ; NArchive::NZip::COutArchive::WriteExtra
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_subBlock$68430 = -12					; size = 4
_i$68426 = -8						; size = 4
_this$ = -4						; size = 4
_extra$ = 8						; size = 4
?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z PROC ; NArchive::NZip::COutArchive::WriteExtra
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	ecx, DWORD PTR _extra$[ebp]
	call	?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CExtraSubBlock>::Size
	test	eax, eax
	je	SHORT $LN5@WriteExtra
; Line 106
	mov	DWORD PTR _i$68426[ebp], 0
	jmp	SHORT $LN3@WriteExtra
$LN2@WriteExtra:
	mov	eax, DWORD PTR _i$68426[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68426[ebp], eax
$LN3@WriteExtra:
	mov	ecx, DWORD PTR _extra$[ebp]
	call	?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CExtraSubBlock>::Size
	cmp	DWORD PTR _i$68426[ebp], eax
	jae	SHORT $LN5@WriteExtra
; Line 108
	mov	ecx, DWORD PTR _i$68426[ebp]
	push	ecx
	mov	ecx, DWORD PTR _extra$[ebp]
	call	??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z ; CObjectVector<NArchive::NZip::CExtraSubBlock>::operator[]
	mov	DWORD PTR _subBlock$68430[ebp], eax
; Line 109
	mov	edx, DWORD PTR _subBlock$68430[ebp]
	movzx	eax, WORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 110
	mov	ecx, DWORD PTR _subBlock$68430[ebp]
	add	ecx, 4
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 111
	mov	ecx, DWORD PTR _subBlock$68430[ebp]
	add	ecx, 4
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _subBlock$68430[ebp]
	add	ecx, 4
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ; NArchive::NZip::COutArchive::WriteBytes
; Line 112
	jmp	SHORT $LN2@WriteExtra
$LN5@WriteExtra:
; Line 114
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z ENDP ; NArchive::NZip::COutArchive::WriteExtra
_TEXT	ENDS
PUBLIC	?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z ; NArchive::NZip::COutArchive::WriteCommonItemInfo
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ver$68438 = -5						; size = 1
_this$ = -4						; size = 4
_item$ = 8						; size = 4
_isZip64$ = 12						; size = 1
?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z PROC ; NArchive::NZip::COutArchive::WriteCommonItemInfo
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 119
	mov	eax, DWORD PTR _item$[ebp]
	mov	cl, BYTE PTR [eax+4]
	mov	BYTE PTR _ver$68438[ebp], cl
; Line 120
	movzx	edx, BYTE PTR _isZip64$[ebp]
	test	edx, edx
	je	SHORT $LN1@WriteCommo
	movzx	eax, BYTE PTR _ver$68438[ebp]
	cmp	eax, 45					; 0000002dH
	jge	SHORT $LN1@WriteCommo
; Line 121
	mov	BYTE PTR _ver$68438[ebp], 45		; 0000002dH
$LN1@WriteCommo:
; Line 122
	movzx	ecx, BYTE PTR _ver$68438[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 124
	mov	edx, DWORD PTR _item$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 125
	mov	ecx, DWORD PTR _item$[ebp]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 126
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 127
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 128
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 129
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z ENDP ; NArchive::NZip::COutArchive::WriteCommonItemInfo
_TEXT	ENDS
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ	; NArchive::NZip::CExtraBlock::GetSize
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ	; NArchive::NZip::COutArchive::SeekToCurPos
PUBLIC	?WriteLocalHeader@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z ; NArchive::NZip::COutArchive::WriteLocalHeader
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv91 = -40						; size = 4
tv84 = -36						; size = 4
tv72 = -32						; size = 4
tv188 = -28						; size = 4
tv182 = -24						; size = 4
$T68961 = -20						; size = 4
$T68960 = -16						; size = 4
_localExtraSize$68450 = -12				; size = 2
_isZip64$ = -5						; size = 1
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?WriteLocalHeader@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z PROC ; NArchive::NZip::COutArchive::WriteLocalHeader
; _this$ = ecx
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ ; NArchive::NZip::COutArchive::SeekToCurPos
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+72]
	test	ecx, ecx
	jne	SHORT $LN5@WriteLocal
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR tv182[ebp], edx
	mov	eax, DWORD PTR tv182[ebp]
	cmp	DWORD PTR [eax+20], 0
	ja	SHORT $LN5@WriteLocal
	jb	SHORT $LN11@WriteLocal
	mov	ecx, DWORD PTR tv182[ebp]
	cmp	DWORD PTR [ecx+16], -1
	jae	SHORT $LN5@WriteLocal
$LN11@WriteLocal:
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR tv188[ebp], edx
	mov	eax, DWORD PTR tv188[ebp]
	cmp	DWORD PTR [eax+12], 0
	ja	SHORT $LN5@WriteLocal
	jb	SHORT $LN12@WriteLocal
	mov	ecx, DWORD PTR tv188[ebp]
	cmp	DWORD PTR [ecx+8], -1
	jae	SHORT $LN5@WriteLocal
$LN12@WriteLocal:
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN6@WriteLocal
$LN5@WriteLocal:
	mov	DWORD PTR tv72[ebp], 1
$LN6@WriteLocal:
	mov	dl, BYTE PTR tv72[ebp]
	mov	BYTE PTR _isZip64$[ebp], dl
; Line 141
	push	67324752				; 04034b50H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 142
	movzx	eax, BYTE PTR _isZip64$[ebp]
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z ; NArchive::NZip::COutArchive::WriteCommonItemInfo
; Line 144
	movzx	edx, BYTE PTR _isZip64$[ebp]
	test	edx, edx
	je	SHORT $LN7@WriteLocal
	mov	DWORD PTR tv84[ebp], -1
	jmp	SHORT $LN8@WriteLocal
$LN7@WriteLocal:
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR tv84[ebp], ecx
$LN8@WriteLocal:
	mov	edx, DWORD PTR tv84[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 145
	movzx	eax, BYTE PTR _isZip64$[ebp]
	test	eax, eax
	je	SHORT $LN9@WriteLocal
	mov	DWORD PTR tv91[ebp], -1
	jmp	SHORT $LN10@WriteLocal
$LN9@WriteLocal:
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv91[ebp], edx
$LN10@WriteLocal:
	mov	eax, DWORD PTR tv91[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 147
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 32					; 00000020H
	call	?Len@AString@@QBEIXZ			; AString::Len
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 149
	movzx	esi, BYTE PTR _isZip64$[ebp]
	neg	esi
	sbb	esi, esi
	and	esi, 20					; 00000014H
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ ; NArchive::NZip::CExtraBlock::GetSize
	add	esi, eax
	mov	WORD PTR _localExtraSize$68450[ebp], si
; Line 150
	movzx	ecx, WORD PTR _localExtraSize$68450[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+68]
	je	SHORT $LN2@WriteLocal
; Line 151
	push	-2147467259				; 80004005H
	lea	ecx, DWORD PTR $T68961[ebp]
	call	??0CSystemException@@QAE@J@Z		; CSystemException::CSystemException
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T68960[ebp], eax
	push	OFFSET __TI1?AUCSystemException@@
	lea	ecx, DWORD PTR $T68960[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@WriteLocal:
; Line 153
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+68]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 154
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 32					; 00000020H
	call	?Len@AString@@QBEIXZ			; AString::Len
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 32					; 00000020H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ; NArchive::NZip::COutArchive::WriteBytes
; Line 156
	movzx	ecx, BYTE PTR _isZip64$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@WriteLocal
; Line 158
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 159
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 160
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 161
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
$LN1@WriteLocal:
; Line 164
	mov	edx, DWORD PTR _item$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z ; NArchive::NZip::COutArchive::WriteExtra
; Line 169
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
; Line 170
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MoveCurPos@COutArchive@NZip@NArchive@@QAEX_K@Z ; NArchive::NZip::COutArchive::MoveCurPos
$LN4@WriteLocal:
; Line 171
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteLocalHeader@COutArchive@NZip@NArchive@@QAEXABVCLocalItem@23@@Z ENDP ; NArchive::NZip::COutArchive::WriteLocalHeader
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ
_TEXT	SEGMENT
_i$68067 = -12						; size = 4
_res$ = -8						; size = 4
_this$ = -4						; size = 4
?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ PROC		; NArchive::NZip::CExtraBlock::GetSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipitem.h
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	DWORD PTR _res$[ebp], 0
; Line 123
	mov	DWORD PTR _i$68067[ebp], 0
	jmp	SHORT $LN3@GetSize
$LN2@GetSize:
	mov	eax, DWORD PTR _i$68067[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68067[ebp], eax
$LN3@GetSize:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CExtraSubBlock>::Size
	cmp	DWORD PTR _i$68067[ebp], eax
	jae	SHORT $LN1@GetSize
; Line 124
	mov	ecx, DWORD PTR _i$68067[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z ; CObjectVector<NArchive::NZip::CExtraSubBlock>::operator[]
	add	eax, 4
	mov	ecx, eax
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	edx, DWORD PTR _res$[ebp]
	lea	eax, DWORD PTR [edx+eax+4]
	mov	DWORD PTR _res$[ebp], eax
	jmp	SHORT $LN2@GetSize
$LN1@GetSize:
; Line 125
	mov	eax, DWORD PTR _res$[ebp]
; Line 126
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ ENDP		; NArchive::NZip::CExtraBlock::GetSize
_TEXT	ENDS
PUBLIC	?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z ; NArchive::NZip::COutArchive::WriteNtfsTime
PUBLIC	?WriteCentralHeader@COutArchive@NZip@NArchive@@AAEXABVCItemOut@23@@Z ; NArchive::NZip::COutArchive::WriteCentralHeader
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv253 = -64						; size = 4
tv201 = -60						; size = 4
tv173 = -56						; size = 4
tv162 = -52						; size = 4
tv94 = -48						; size = 4
tv86 = -44						; size = 4
tv372 = -40						; size = 4
tv78 = -36						; size = 4
tv366 = -32						; size = 4
tv70 = -28						; size = 4
tv360 = -24						; size = 4
_centralExtraSize$ = -20				; size = 2
_kNtfsExtraSize$ = -16					; size = 2
_zip64ExtraSize$ = -12					; size = 2
_isZip64$ = -8						; size = 1
_isPosition64$ = -7					; size = 1
_isPack64$ = -6						; size = 1
_isUnPack64$ = -5					; size = 1
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?WriteCentralHeader@COutArchive@NZip@NArchive@@AAEXABVCItemOut@23@@Z PROC ; NArchive::NZip::COutArchive::WriteCentralHeader
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 175
	mov	eax, DWORD PTR _item$[ebp]
	mov	DWORD PTR tv360[ebp], eax
	mov	ecx, DWORD PTR tv360[ebp]
	cmp	DWORD PTR [ecx+12], 0
	ja	SHORT $LN25@WriteCentr
	mov	edx, DWORD PTR tv360[ebp]
	cmp	DWORD PTR [edx+8], -1
	jb	SHORT $LN9@WriteCentr
$LN25@WriteCentr:
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN10@WriteCentr
$LN9@WriteCentr:
	mov	DWORD PTR tv70[ebp], 0
$LN10@WriteCentr:
	mov	al, BYTE PTR tv70[ebp]
	mov	BYTE PTR _isUnPack64$[ebp], al
; Line 176
	mov	ecx, DWORD PTR _item$[ebp]
	mov	DWORD PTR tv366[ebp], ecx
	mov	edx, DWORD PTR tv366[ebp]
	cmp	DWORD PTR [edx+20], 0
	ja	SHORT $LN26@WriteCentr
	mov	eax, DWORD PTR tv366[ebp]
	cmp	DWORD PTR [eax+16], -1
	jb	SHORT $LN11@WriteCentr
$LN26@WriteCentr:
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN12@WriteCentr
$LN11@WriteCentr:
	mov	DWORD PTR tv78[ebp], 0
$LN12@WriteCentr:
	mov	cl, BYTE PTR tv78[ebp]
	mov	BYTE PTR _isPack64$[ebp], cl
; Line 177
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR tv372[ebp], edx
	mov	eax, DWORD PTR tv372[ebp]
	cmp	DWORD PTR [eax+68], 0
	ja	SHORT $LN27@WriteCentr
	mov	ecx, DWORD PTR tv372[ebp]
	cmp	DWORD PTR [ecx+64], -1
	jb	SHORT $LN13@WriteCentr
$LN27@WriteCentr:
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN14@WriteCentr
$LN13@WriteCentr:
	mov	DWORD PTR tv86[ebp], 0
$LN14@WriteCentr:
	mov	dl, BYTE PTR tv86[ebp]
	mov	BYTE PTR _isPosition64$[ebp], dl
; Line 178
	movzx	eax, BYTE PTR _isPack64$[ebp]
	test	eax, eax
	jne	SHORT $LN15@WriteCentr
	movzx	ecx, BYTE PTR _isUnPack64$[ebp]
	test	ecx, ecx
	jne	SHORT $LN15@WriteCentr
	movzx	edx, BYTE PTR _isPosition64$[ebp]
	test	edx, edx
	jne	SHORT $LN15@WriteCentr
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $LN16@WriteCentr
$LN15@WriteCentr:
	mov	DWORD PTR tv94[ebp], 1
$LN16@WriteCentr:
	mov	al, BYTE PTR tv94[ebp]
	mov	BYTE PTR _isZip64$[ebp], al
; Line 180
	push	33639248				; 02014b50H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 181
	mov	ecx, DWORD PTR _item$[ebp]
	movzx	edx, BYTE PTR [ecx+56]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 182
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, BYTE PTR [eax+57]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write8@COutArchive@NZip@NArchive@@AAEXE@Z ; NArchive::NZip::COutArchive::Write8
; Line 184
	movzx	edx, BYTE PTR _isZip64$[ebp]
	push	edx
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCommonItemInfo@COutArchive@NZip@NArchive@@AAEXABVCLocalItem@23@_N@Z ; NArchive::NZip::COutArchive::WriteCommonItemInfo
; Line 186
	movzx	ecx, BYTE PTR _isPack64$[ebp]
	test	ecx, ecx
	je	SHORT $LN17@WriteCentr
	mov	DWORD PTR tv162[ebp], -1
	jmp	SHORT $LN18@WriteCentr
$LN17@WriteCentr:
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR tv162[ebp], eax
$LN18@WriteCentr:
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 187
	movzx	edx, BYTE PTR _isUnPack64$[ebp]
	test	edx, edx
	je	SHORT $LN19@WriteCentr
	mov	DWORD PTR tv173[ebp], -1
	jmp	SHORT $LN20@WriteCentr
$LN19@WriteCentr:
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR tv173[ebp], ecx
$LN20@WriteCentr:
	mov	edx, DWORD PTR tv173[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 189
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 32					; 00000020H
	call	?Len@AString@@QBEIXZ			; AString::Len
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 191
	movzx	eax, BYTE PTR _isUnPack64$[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 8
	movzx	ecx, BYTE PTR _isPack64$[ebp]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 8
	add	eax, ecx
	movzx	edx, BYTE PTR _isPosition64$[ebp]
	neg	edx
	sbb	edx, edx
	and	edx, 8
	add	eax, edx
	mov	WORD PTR _zip64ExtraSize$[ebp], ax
; Line 192
	mov	eax, 32					; 00000020H
	mov	WORD PTR _kNtfsExtraSize$[ebp], ax
; Line 196
	movzx	ecx, BYTE PTR _isZip64$[ebp]
	test	ecx, ecx
	je	SHORT $LN21@WriteCentr
	movzx	edx, WORD PTR _zip64ExtraSize$[ebp]
	add	edx, 4
	mov	DWORD PTR tv201[ebp], edx
	jmp	SHORT $LN22@WriteCentr
$LN21@WriteCentr:
	mov	DWORD PTR tv201[ebp], 0
$LN22@WriteCentr:
	mov	eax, DWORD PTR _item$[ebp]
	movzx	esi, BYTE PTR [eax+120]
	neg	esi
	sbb	esi, esi
	and	esi, 36					; 00000024H
	add	esi, DWORD PTR tv201[ebp]
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetSize@CExtraBlock@NZip@NArchive@@QBEIXZ ; NArchive::NZip::CExtraBlock::GetSize
	add	esi, eax
	mov	WORD PTR _centralExtraSize$[ebp], si
; Line 198
	movzx	ecx, WORD PTR _centralExtraSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 199
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 84					; 00000054H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 200
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 201
	mov	edx, DWORD PTR _item$[ebp]
	movzx	eax, WORD PTR [edx+58]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 202
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 203
	movzx	eax, BYTE PTR _isPosition64$[ebp]
	test	eax, eax
	je	SHORT $LN23@WriteCentr
	mov	DWORD PTR tv253[ebp], -1
	jmp	SHORT $LN24@WriteCentr
$LN23@WriteCentr:
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR tv253[ebp], edx
$LN24@WriteCentr:
	mov	eax, DWORD PTR tv253[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 204
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 32					; 00000020H
	call	?Len@AString@@QBEIXZ			; AString::Len
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 32					; 00000020H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ; NArchive::NZip::COutArchive::WriteBytes
; Line 206
	movzx	ecx, BYTE PTR _isZip64$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@WriteCentr
; Line 208
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 209
	movzx	edx, WORD PTR _zip64ExtraSize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 210
	movzx	eax, BYTE PTR _isUnPack64$[ebp]
	test	eax, eax
	je	SHORT $LN5@WriteCentr
; Line 211
	mov	ecx, DWORD PTR _item$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
$LN5@WriteCentr:
; Line 212
	movzx	ecx, BYTE PTR _isPack64$[ebp]
	test	ecx, ecx
	je	SHORT $LN4@WriteCentr
; Line 213
	mov	edx, DWORD PTR _item$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
$LN4@WriteCentr:
; Line 214
	movzx	edx, BYTE PTR _isPosition64$[ebp]
	test	edx, edx
	je	SHORT $LN6@WriteCentr
; Line 215
	mov	eax, DWORD PTR _item$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR [eax+64]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
$LN6@WriteCentr:
; Line 218
	mov	eax, DWORD PTR _item$[ebp]
	movzx	ecx, BYTE PTR [eax+120]
	test	ecx, ecx
	je	SHORT $LN2@WriteCentr
; Line 220
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 221
	push	32					; 00000020H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 222
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 223
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 224
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 225
	mov	edx, DWORD PTR _item$[ebp]
	add	edx, 96					; 00000060H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z ; NArchive::NZip::COutArchive::WriteNtfsTime
; Line 226
	mov	eax, DWORD PTR _item$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z ; NArchive::NZip::COutArchive::WriteNtfsTime
; Line 227
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 112				; 00000070H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z ; NArchive::NZip::COutArchive::WriteNtfsTime
$LN2@WriteCentr:
; Line 230
	mov	edx, DWORD PTR _item$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteExtra@COutArchive@NZip@NArchive@@AAEXABUCExtraBlock@23@@Z ; NArchive::NZip::COutArchive::WriteExtra
; Line 231
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 84					; 00000054H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	test	eax, eax
	jbe	SHORT $LN7@WriteCentr
; Line 232
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 84					; 00000054H
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	push	eax
	mov	ecx, DWORD PTR _item$[ebp]
	add	ecx, 84					; 00000054H
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ; NArchive::NZip::COutArchive::WriteBytes
$LN7@WriteCentr:
; Line 233
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteCentralHeader@COutArchive@NZip@NArchive@@AAEXABVCItemOut@23@@Z ENDP ; NArchive::NZip::COutArchive::WriteCentralHeader
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ft$ = 8						; size = 4
?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z PROC ; NArchive::NZip::COutArchive::WriteNtfsTime, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _ft$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 53
	mov	edx, DWORD PTR _ft$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 54
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteNtfsTime@COutArchive@NZip@NArchive@@AAEXABU_FILETIME@@@Z ENDP ; NArchive::NZip::COutArchive::WriteNtfsTime
_TEXT	ENDS
PUBLIC	??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z ; CObjectVector<NArchive::NZip::CItemOut>::operator[]
PUBLIC	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
PUBLIC	?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ	; NArchive::NZip::COutArchive::GetCurPos
PUBLIC	?WriteCentralDir@COutArchive@NZip@NArchive@@QAEXABV?$CObjectVector@VCItemOut@NZip@NArchive@@@@PBV?$CBuffer@E@@@Z ; NArchive::NZip::COutArchive::WriteCentralDir
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv203 = -72						; size = 4
tv198 = -68						; size = 4
tv192 = -64						; size = 4
tv185 = -60						; size = 4
tv177 = -56						; size = 4
tv128 = -52						; size = 4
tv83 = -48						; size = 4
tv80 = -44						; size = 4
_commentSize$ = -40					; size = 4
_isZip64$ = -36						; size = 1
_items64$ = -35						; size = 1
_cdSize64$ = -34					; size = 1
_cdOffset64$ = -33					; size = 1
_cdSize$ = -32						; size = 8
_cd64EndOffset$ = -24					; size = 8
_i$68495 = -16						; size = 4
_cdOffset$ = -12					; size = 8
_this$ = -4						; size = 4
_items$ = 8						; size = 4
_comment$ = 12						; size = 4
?WriteCentralDir@COutArchive@NZip@NArchive@@QAEXABV?$CObjectVector@VCItemOut@NZip@NArchive@@@@PBV?$CBuffer@E@@@Z PROC ; NArchive::NZip::COutArchive::WriteCentralDir
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 236
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 237
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ ; NArchive::NZip::COutArchive::SeekToCurPos
; Line 239
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ ; NArchive::NZip::COutArchive::GetCurPos
	mov	DWORD PTR _cdOffset$[ebp], eax
	mov	DWORD PTR _cdOffset$[ebp+4], edx
; Line 240
	mov	DWORD PTR _i$68495[ebp], 0
	jmp	SHORT $LN5@WriteCentr@2
$LN4@WriteCentr@2:
	mov	eax, DWORD PTR _i$68495[ebp]
	add	eax, 1
	mov	DWORD PTR _i$68495[ebp], eax
$LN5@WriteCentr@2:
	mov	ecx, DWORD PTR _items$[ebp]
	call	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
	cmp	DWORD PTR _i$68495[ebp], eax
	jae	SHORT $LN3@WriteCentr@2
; Line 241
	mov	ecx, DWORD PTR _i$68495[ebp]
	push	ecx
	mov	ecx, DWORD PTR _items$[ebp]
	call	??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z ; CObjectVector<NArchive::NZip::CItemOut>::operator[]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteCentralHeader@COutArchive@NZip@NArchive@@AAEXABVCItemOut@23@@Z ; NArchive::NZip::COutArchive::WriteCentralHeader
	jmp	SHORT $LN4@WriteCentr@2
$LN3@WriteCentr@2:
; Line 242
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ ; NArchive::NZip::COutArchive::GetCurPos
	mov	DWORD PTR _cd64EndOffset$[ebp], eax
	mov	DWORD PTR _cd64EndOffset$[ebp+4], edx
; Line 243
	mov	edx, DWORD PTR _cd64EndOffset$[ebp]
	sub	edx, DWORD PTR _cdOffset$[ebp]
	mov	eax, DWORD PTR _cd64EndOffset$[ebp+4]
	sbb	eax, DWORD PTR _cdOffset$[ebp+4]
	mov	DWORD PTR _cdSize$[ebp], edx
	mov	DWORD PTR _cdSize$[ebp+4], eax
; Line 244
	cmp	DWORD PTR _cdOffset$[ebp+4], 0
	ja	SHORT $LN24@WriteCentr@2
	cmp	DWORD PTR _cdOffset$[ebp], -1
	jb	SHORT $LN8@WriteCentr@2
$LN24@WriteCentr@2:
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN9@WriteCentr@2
$LN8@WriteCentr@2:
	mov	DWORD PTR tv80[ebp], 0
$LN9@WriteCentr@2:
	mov	cl, BYTE PTR tv80[ebp]
	mov	BYTE PTR _cdOffset64$[ebp], cl
; Line 245
	cmp	DWORD PTR _cdSize$[ebp+4], 0
	ja	SHORT $LN25@WriteCentr@2
	cmp	DWORD PTR _cdSize$[ebp], -1
	jb	SHORT $LN10@WriteCentr@2
$LN25@WriteCentr@2:
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN11@WriteCentr@2
$LN10@WriteCentr@2:
	mov	DWORD PTR tv83[ebp], 0
$LN11@WriteCentr@2:
	mov	dl, BYTE PTR tv83[ebp]
	mov	BYTE PTR _cdSize64$[ebp], dl
; Line 246
	mov	ecx, DWORD PTR _items$[ebp]
	call	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
	cmp	eax, 65535				; 0000ffffH
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR _items64$[ebp], al
; Line 247
	movzx	ecx, BYTE PTR _cdOffset64$[ebp]
	test	ecx, ecx
	jne	SHORT $LN12@WriteCentr@2
	movzx	edx, BYTE PTR _cdSize64$[ebp]
	test	edx, edx
	jne	SHORT $LN12@WriteCentr@2
	movzx	eax, BYTE PTR _items64$[ebp]
	test	eax, eax
	jne	SHORT $LN12@WriteCentr@2
	mov	DWORD PTR tv128[ebp], 0
	jmp	SHORT $LN13@WriteCentr@2
$LN12@WriteCentr@2:
	mov	DWORD PTR tv128[ebp], 1
$LN13@WriteCentr@2:
	mov	cl, BYTE PTR tv128[ebp]
	mov	BYTE PTR _isZip64$[ebp], cl
; Line 251
	movzx	edx, BYTE PTR _isZip64$[ebp]
	test	edx, edx
	je	$LN2@WriteCentr@2
; Line 253
	push	101075792				; 06064b50H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 254
	push	0
	push	44					; 0000002cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 255
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 256
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 257
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 258
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 259
	mov	ecx, DWORD PTR _items$[ebp]
	call	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
	xor	ecx, ecx
	push	ecx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 260
	mov	ecx, DWORD PTR _items$[ebp]
	call	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
	xor	edx, edx
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 261
	mov	eax, DWORD PTR _cdSize$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _cdSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 262
	mov	edx, DWORD PTR _cdOffset$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _cdOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 264
	push	117853008				; 07064b50H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 265
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 266
	mov	ecx, DWORD PTR _cd64EndOffset$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _cd64EndOffset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write64@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::Write64
; Line 267
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
$LN2@WriteCentr@2:
; Line 270
	push	101010256				; 06054b50H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 271
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 272
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 273
	movzx	eax, BYTE PTR _items64$[ebp]
	test	eax, eax
	je	SHORT $LN14@WriteCentr@2
	mov	DWORD PTR tv177[ebp], 65535		; 0000ffffH
	jmp	SHORT $LN15@WriteCentr@2
$LN14@WriteCentr@2:
	mov	ecx, DWORD PTR _items$[ebp]
	call	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
	mov	DWORD PTR tv177[ebp], eax
$LN15@WriteCentr@2:
	movzx	ecx, WORD PTR tv177[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 274
	movzx	edx, BYTE PTR _items64$[ebp]
	test	edx, edx
	je	SHORT $LN16@WriteCentr@2
	mov	DWORD PTR tv185[ebp], 65535		; 0000ffffH
	jmp	SHORT $LN17@WriteCentr@2
$LN16@WriteCentr@2:
	mov	ecx, DWORD PTR _items$[ebp]
	call	?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ; CObjectVector<NArchive::NZip::CItemOut>::Size
	mov	DWORD PTR tv185[ebp], eax
$LN17@WriteCentr@2:
	movzx	eax, WORD PTR tv185[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 276
	movzx	ecx, BYTE PTR _cdSize64$[ebp]
	test	ecx, ecx
	je	SHORT $LN18@WriteCentr@2
	mov	DWORD PTR tv192[ebp], -1
	jmp	SHORT $LN19@WriteCentr@2
$LN18@WriteCentr@2:
	mov	edx, DWORD PTR _cdSize$[ebp]
	mov	DWORD PTR tv192[ebp], edx
$LN19@WriteCentr@2:
	mov	eax, DWORD PTR tv192[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 277
	movzx	ecx, BYTE PTR _cdOffset64$[ebp]
	test	ecx, ecx
	je	SHORT $LN20@WriteCentr@2
	mov	DWORD PTR tv198[ebp], -1
	jmp	SHORT $LN21@WriteCentr@2
$LN20@WriteCentr@2:
	mov	edx, DWORD PTR _cdOffset$[ebp]
	mov	DWORD PTR tv198[ebp], edx
$LN21@WriteCentr@2:
	mov	eax, DWORD PTR tv198[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write32@COutArchive@NZip@NArchive@@AAEXI@Z ; NArchive::NZip::COutArchive::Write32
; Line 279
	cmp	DWORD PTR _comment$[ebp], 0
	je	SHORT $LN22@WriteCentr@2
	mov	ecx, DWORD PTR _comment$[ebp]
	call	?Size@?$CBuffer@E@@QBEIXZ		; CBuffer<unsigned char>::Size
	mov	DWORD PTR tv203[ebp], eax
	jmp	SHORT $LN23@WriteCentr@2
$LN22@WriteCentr@2:
	mov	DWORD PTR tv203[ebp], 0
$LN23@WriteCentr@2:
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR _commentSize$[ebp], ecx
; Line 280
	movzx	edx, WORD PTR _commentSize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write16@COutArchive@NZip@NArchive@@AAEXG@Z ; NArchive::NZip::COutArchive::Write16
; Line 281
	cmp	DWORD PTR _commentSize$[ebp], 0
	jbe	SHORT $LN1@WriteCentr@2
; Line 282
	mov	eax, DWORD PTR _commentSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	call	??B?$CBuffer@E@@QBEPBEXZ		; CBuffer<unsigned char>::operator unsigned char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBytes@COutArchive@NZip@NArchive@@AAEXPBXI@Z ; NArchive::NZip::COutArchive::WriteBytes
$LN1@WriteCentr@2:
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
; Line 284
	pop	edi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteCentralDir@COutArchive@NZip@NArchive@@QAEXABV?$CObjectVector@VCItemOut@NZip@NArchive@@@@PBV?$CBuffer@E@@@Z ENDP ; NArchive::NZip::COutArchive::WriteCentralDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ PROC	; NArchive::NZip::COutArchive::GetCurPos, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.h
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+56]
	mov	edx, DWORD PTR [ecx+60]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurPos@COutArchive@NZip@NArchive@@QBE_KXZ ENDP	; NArchive::NZip::COutArchive::GetCurPos
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UIOutStream@@@@QAE@XZ		; CMyComPtr<IOutStream>::~CMyComPtr<IOutStream>
PUBLIC	?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::Detach
PUBLIC	??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::operator IOutStream *
PUBLIC	??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z ; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>
PUBLIC	??0COffsetOutStream@@QAE@XZ			; COffsetOutStream::COffsetOutStream
PUBLIC	?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z ; NArchive::NZip::COutArchive::CreateStreamForCompressing
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?Init@COffsetOutStream@@QAEJPAUIOutStream@@_K@Z:PROC ; COffsetOutStream::Init
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z$1
__ehfuncinfo$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv71 = -44						; size = 4
$T69015 = -40						; size = 4
$T69014 = -36						; size = 4
_tempStream$ = -28					; size = 4
_streamSpec$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_outStream$ = 8						; size = 4
?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z PROC ; NArchive::NZip::COutArchive::CreateStreamForCompressing
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 287
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 288
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T69015[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T69015[ebp], 0
	je	SHORT $LN3@CreateStre
	mov	ecx, DWORD PTR $T69015[ebp]
	call	??0COffsetOutStream@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@CreateStre
$LN3@CreateStre:
	mov	DWORD PTR tv71[ebp], 0
$LN4@CreateStre:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T69014[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T69014[ebp]
	mov	DWORD PTR _streamSpec$[ebp], ecx
; Line 289
	mov	edx, DWORD PTR _streamSpec$[ebp]
	push	edx
	lea	ecx, DWORD PTR _tempStream$[ebp]
	call	??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z ; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 290
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	add	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR [eax+52]
	adc	eax, DWORD PTR [ecx+60]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	xor	esi, esi
	add	edx, ecx
	adc	eax, esi
	push	eax
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::operator IOutStream *
	push	eax
	mov	ecx, DWORD PTR _streamSpec$[ebp]
	call	?Init@COffsetOutStream@@QAEJPAUIOutStream@@_K@Z ; COffsetOutStream::Init
; Line 291
	lea	ecx, DWORD PTR _tempStream$[ebp]
	call	?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::Detach
	mov	edx, DWORD PTR _outStream$[ebp]
	mov	DWORD PTR [edx], eax
; Line 292
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tempStream$[ebp]
	call	??1?$CMyComPtr@UIOutStream@@@@QAE@XZ	; CMyComPtr<IOutStream>::~CMyComPtr<IOutStream>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CreateStre
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@CreateStre:
	DD	1
	DD	$LN9@CreateStre
$LN9@CreateStre:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN7@CreateStre
$LN7@CreateStre:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z$0:
	mov	eax, DWORD PTR $T69015[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z$1:
	lea	ecx, DWORD PTR _tempStream$[ebp]
	jmp	??1?$CMyComPtr@UIOutStream@@@@QAE@XZ	; CMyComPtr<IOutStream>::~CMyComPtr<IOutStream>
__ehhandler$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateStreamForCompressing@COutArchive@NZip@NArchive@@QAEXPAPAUIOutStream@@@Z ENDP ; NArchive::NZip::COutArchive::CreateStreamForCompressing
PUBLIC	??0?$CMyComPtr@UIOutStream@@@@QAE@XZ		; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>
PUBLIC	??_7COffsetOutStream@@6B@			; COffsetOutStream::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0IOutStream@@QAE@XZ				; IOutStream::IOutStream
PUBLIC	??_R4COffsetOutStream@@6B@			; COffsetOutStream::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCOffsetOutStream@@@8			; COffsetOutStream `RTTI Type Descriptor'
PUBLIC	??_R3COffsetOutStream@@8			; COffsetOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2COffsetOutStream@@8			; COffsetOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@COffsetOutStream@@8		; COffsetOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IOutStream@@8			; IOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIOutStream@@@8				; IOutStream `RTTI Type Descriptor'
PUBLIC	??_R3IOutStream@@8				; IOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IOutStream@@8				; IOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUISequentialOutStream@@@8		; ISequentialOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@COffsetOutStream@@UAGJABU_GUID@@PAPAX@Z ; COffsetOutStream::QueryInterface
PUBLIC	?AddRef@COffsetOutStream@@UAGKXZ		; COffsetOutStream::AddRef
PUBLIC	?Release@COffsetOutStream@@UAGKXZ		; COffsetOutStream::Release
EXTRN	?Write@COffsetOutStream@@UAGJPBXIPAI@Z:PROC	; COffsetOutStream::Write
EXTRN	?Seek@COffsetOutStream@@UAGJ_JIPA_K@Z:PROC	; COffsetOutStream::Seek
EXTRN	?SetSize@COffsetOutStream@@UAGJ_K@Z:PROC	; COffsetOutStream::SetSize
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialOutStream@@8
rdata$r	SEGMENT
??_R2ISequentialOutStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8 ; ISequentialOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialOutStream@@8
rdata$r	SEGMENT
??_R3ISequentialOutStream@@8 DD 00H			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialOutStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R2IOutStream@@8
rdata$r	SEGMENT
??_R2IOutStream@@8 DD FLAT:??_R1A@?0A@EA@IOutStream@@8	; IOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IOutStream@@8
rdata$r	SEGMENT
??_R3IOutStream@@8 DD 00H				; IOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIOutStream@@@8
_DATA	SEGMENT
??_R0?AUIOutStream@@@8 DD FLAT:??_7type_info@@6B@	; IOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IOutStream@@8 DD FLAT:??_R0?AUIOutStream@@@8 ; IOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@COffsetOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@COffsetOutStream@@8 DD FLAT:??_R0?AVCOffsetOutStream@@@8 ; COffsetOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COffsetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R2COffsetOutStream@@8
rdata$r	SEGMENT
??_R2COffsetOutStream@@8 DD FLAT:??_R1A@?0A@EA@COffsetOutStream@@8 ; COffsetOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3COffsetOutStream@@8
rdata$r	SEGMENT
??_R3COffsetOutStream@@8 DD 00H				; COffsetOutStream::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2COffsetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCOffsetOutStream@@@8
_DATA	SEGMENT
??_R0?AVCOffsetOutStream@@@8 DD FLAT:??_7type_info@@6B@	; COffsetOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCOffsetOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R4COffsetOutStream@@6B@
rdata$r	SEGMENT
??_R4COffsetOutStream@@6B@ DD 00H			; COffsetOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCOffsetOutStream@@@8
	DD	FLAT:??_R3COffsetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7COffsetOutStream@@6B@
CONST	SEGMENT
??_7COffsetOutStream@@6B@ DD FLAT:??_R4COffsetOutStream@@6B@ ; COffsetOutStream::`vftable'
	DD	FLAT:?QueryInterface@COffsetOutStream@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@COffsetOutStream@@UAGKXZ
	DD	FLAT:?Release@COffsetOutStream@@UAGKXZ
	DD	FLAT:?Write@COffsetOutStream@@UAGJPBXIPAI@Z
	DD	FLAT:?Seek@COffsetOutStream@@UAGJ_JIPA_K@Z
	DD	FLAT:?SetSize@COffsetOutStream@@UAGJ_K@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0COffsetOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COffsetOutStream@@QAE@XZ PROC			; COffsetOutStream::COffsetOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7COffsetOutStream@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$CMyComPtr@UIOutStream@@@@QAE@XZ	; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COffsetOutStream@@QAE@XZ ENDP			; COffsetOutStream::COffsetOutStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@COffsetOutStream@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@COffsetOutStream@@UAGJABU_GUID@@PAPAX@Z PROC ; COffsetOutStream::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\offsetstream.h
; Line 19
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN1@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN3@QueryInter
$LN1@QueryInter:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
	xor	eax, eax
$LN3@QueryInter:
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@COffsetOutStream@@UAGJABU_GUID@@PAPAX@Z ENDP ; COffsetOutStream::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@COffsetOutStream@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@COffsetOutStream@@UAGKXZ PROC			; COffsetOutStream::AddRef, COMDAT
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@COffsetOutStream@@UAGKXZ ENDP			; COffsetOutStream::AddRef
_TEXT	ENDS
PUBLIC	??_GCOffsetOutStream@@QAEPAXI@Z			; COffsetOutStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@COffsetOutStream@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T69044 = -8						; size = 4
$T69043 = -4						; size = 4
_this$ = 8						; size = 4
?Release@COffsetOutStream@@UAGKXZ PROC			; COffsetOutStream::Release, COMDAT
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+4], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T69044[ebp], edx
	mov	eax, DWORD PTR $T69044[ebp]
	mov	DWORD PTR $T69043[ebp], eax
	cmp	DWORD PTR $T69043[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T69043[ebp]
	call	??_GCOffsetOutStream@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@COffsetOutStream@@UAGKXZ ENDP			; COffsetOutStream::Release
_TEXT	ENDS
PUBLIC	??1COffsetOutStream@@QAE@XZ			; COffsetOutStream::~COffsetOutStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCOffsetOutStream@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCOffsetOutStream@@QAEPAXI@Z PROC			; COffsetOutStream::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COffsetOutStream@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCOffsetOutStream@@QAEPAXI@Z ENDP			; COffsetOutStream::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1COffsetOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COffsetOutStream@@QAE@XZ PROC			; COffsetOutStream::~COffsetOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$CMyComPtr@UIOutStream@@@@QAE@XZ	; CMyComPtr<IOutStream>::~CMyComPtr<IOutStream>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COffsetOutStream@@QAE@XZ ENDP			; COffsetOutStream::~COffsetOutStream
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	??_7IOutStream@@6B@				; IOutStream::`vftable'
PUBLIC	??0ISequentialOutStream@@QAE@XZ			; ISequentialOutStream::ISequentialOutStream
PUBLIC	??_R4IOutStream@@6B@				; IOutStream::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4IOutStream@@6B@
rdata$r	SEGMENT
??_R4IOutStream@@6B@ DD 00H				; IOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIOutStream@@@8
	DD	FLAT:??_R3IOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7IOutStream@@6B@
CONST	SEGMENT
??_7IOutStream@@6B@ DD FLAT:??_R4IOutStream@@6B@	; IOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOutStream@@QAE@XZ PROC				; IOutStream::IOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ISequentialOutStream@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOutStream@@QAE@XZ ENDP				; IOutStream::IOutStream
_TEXT	ENDS
PUBLIC	??_7ISequentialOutStream@@6B@			; ISequentialOutStream::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ISequentialOutStream@@6B@			; ISequentialOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialOutStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialOutStream@@6B@ DD 00H			; ISequentialOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialOutStream@@@8
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialOutStream@@6B@
CONST	SEGMENT
??_7ISequentialOutStream@@6B@ DD FLAT:??_R4ISequentialOutStream@@6B@ ; ISequentialOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialOutStream@@QAE@XZ PROC			; ISequentialOutStream::ISequentialOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialOutStream@@QAE@XZ ENDP			; ISequentialOutStream::ISequentialOutStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ PROC	; NArchive::NZip::COutArchive::SeekToCurPos
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\archive\zip\zipout.cpp
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	edx, DWORD PTR [eax+56]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SeekToRelatPos@COutArchive@NZip@NArchive@@AAEX_K@Z ; NArchive::NZip::COutArchive::SeekToRelatPos
; Line 304
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SeekToCurPos@COutArchive@NZip@NArchive@@QAEXXZ ENDP	; NArchive::NZip::COutArchive::SeekToCurPos
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
PUBLIC	?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::Detach
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z ; NArchive::NZip::COutArchive::CreateStreamForCopying
xdata$x	SEGMENT
__unwindtable$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z$0
__ehfuncinfo$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_tempStream$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_outStream$ = 8						; size = 4
?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z PROC ; NArchive::NZip::COutArchive::CreateStreamForCopying
; _this$ = ecx
; Line 307
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	ecx, DWORD PTR _this$[ebp]
	call	??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ; CMyComPtr<IOutStream>::operator IOutStream *
	push	eax
	lea	ecx, DWORD PTR _tempStream$[ebp]
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 309
	lea	ecx, DWORD PTR _tempStream$[ebp]
	call	?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::Detach
	mov	ecx, DWORD PTR _outStream$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 310
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _tempStream$[ebp]
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@CreateStre@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@CreateStre@2:
	DD	1
	DD	$LN6@CreateStre@2
$LN6@CreateStre@2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@CreateStre@2
$LN4@CreateStre@2:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z$0:
	lea	ecx, DWORD PTR _tempStream$[ebp]
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__ehhandler$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateStreamForCopying@COutArchive@NZip@NArchive@@QAEXPAPAUISequentialOutStream@@@Z ENDP ; NArchive::NZip::COutArchive::CreateStreamForCopying
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CMyComPtr@UIOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIOutStream@@@@QAE@XZ PROC		; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIOutStream@@@@QAE@XZ ENDP		; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z PROC ; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UIOutStream@@@@QAE@PAUIOutStream@@@Z ENDP ; CMyComPtr<IOutStream>::CMyComPtr<IOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIOutStream@@@@QAE@XZ PROC		; CMyComPtr<IOutStream>::~CMyComPtr<IOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIOutStream@@@@QAE@XZ ENDP		; CMyComPtr<IOutStream>::~CMyComPtr<IOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ PROC	; CMyComPtr<IOutStream>::operator IOutStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ENDP	; CMyComPtr<IOutStream>::operator IOutStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ PROC	; CMyComPtr<IOutStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIOutStream@@@@QBEPAUIOutStream@@XZ ENDP	; CMyComPtr<IOutStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z PROC ; CMyComPtr<IOutStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@PAU1@@Z ENDP ; CMyComPtr<IOutStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ PROC ; CMyComPtr<IOutStream>::Detach, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx
; Line 47
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 48
	mov	eax, DWORD PTR _pt$[ebp]
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CMyComPtr@UIOutStream@@@@QAEPAUIOutStream@@XZ ENDP ; CMyComPtr<IOutStream>::Detach
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CBuffer@E@@QBEPBEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CBuffer@E@@QBEPBEXZ PROC				; CBuffer<unsigned char>::operator unsigned char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CBuffer@E@@QBEPBEXZ ENDP				; CBuffer<unsigned char>::operator unsigned char const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CBuffer@E@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CBuffer@E@@QBEIXZ PROC				; CBuffer<unsigned char>::Size, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CBuffer@E@@QBEIXZ ENDP				; CBuffer<unsigned char>::Size
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ PROC ; CObjectVector<NArchive::NZip::CExtraSubBlock>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEIXZ ENDP ; CObjectVector<NArchive::NZip::CExtraSubBlock>::Size
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z PROC ; CObjectVector<NArchive::NZip::CExtraSubBlock>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCExtraSubBlock@NZip@NArchive@@@@QBEABUCExtraSubBlock@NZip@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NZip::CExtraSubBlock>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ PROC ; CObjectVector<NArchive::NZip::CItemOut>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEIXZ ENDP ; CObjectVector<NArchive::NZip::CItemOut>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z PROC ; CObjectVector<NArchive::NZip::CItemOut>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCItemOut@NZip@NArchive@@@@QBEABVCItemOut@NZip@NArchive@@I@Z ENDP ; CObjectVector<NArchive::NZip::CItemOut>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z PROC ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@PAUISequentialOutStream@@@Z ENDP ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_pt$ = -8						; size = 4
_this$ = -4						; size = 4
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::Detach, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pt$[ebp], ecx
; Line 47
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 48
	mov	eax, DWORD PTR _pt$[ebp]
; Line 49
	mov	esp, ebp
	pop	ebp
	ret	0
?Detach@?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::Detach
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Common\FilterCoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?SetInBufSize@CFilterCoder@@UAGJII@Z		; CFilterCoder::SetInBufSize
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_size$ = 16						; size = 4
?SetInBufSize@CFilterCoder@@UAGJII@Z PROC		; CFilterCoder::SetInBufSize
; Line 24
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+44], ecx
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
?SetInBufSize@CFilterCoder@@UAGJII@Z ENDP		; CFilterCoder::SetInBufSize
_TEXT	ENDS
PUBLIC	?SetOutBufSize@CFilterCoder@@UAGJII@Z		; CFilterCoder::SetOutBufSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
_size$ = 16						; size = 4
?SetOutBufSize@CFilterCoder@@UAGJII@Z PROC		; CFilterCoder::SetOutBufSize
; Line 25
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+48], ecx
	xor	eax, eax
	pop	ebp
	ret	12					; 0000000cH
?SetOutBufSize@CFilterCoder@@UAGJII@Z ENDP		; CFilterCoder::SetOutBufSize
_TEXT	ENDS
PUBLIC	?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z	; CAlignedMidBuffer::AllocAlignedMask
PUBLIC	??$MyMin@I@@YGIII@Z				; MyMin<unsigned int>
PUBLIC	?Alloc@CFilterCoder@@AAEJXZ			; CFilterCoder::Alloc
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_kMinSize$ = -12					; size = 4
_size$ = -8						; size = 4
_this$ = -4						; size = 4
?Alloc@CFilterCoder@@AAEJXZ PROC			; CFilterCoder::Alloc
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR _size$[ebp], eax
; Line 33
	mov	DWORD PTR _kMinSize$[ebp], 4096		; 00001000H
; Line 34
	mov	ecx, DWORD PTR _size$[ebp]
	and	ecx, -4096				; fffff000H
	mov	DWORD PTR _size$[ebp], ecx
; Line 35
	cmp	DWORD PTR _size$[ebp], 4096		; 00001000H
	jae	SHORT $LN4@Alloc
; Line 36
	mov	DWORD PTR _size$[ebp], 4096		; 00001000H
$LN4@Alloc:
; Line 37
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+68], 0
	je	SHORT $LN2@Alloc
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	cmp	ecx, DWORD PTR _size$[ebp]
	je	SHORT $LN3@Alloc
$LN2@Alloc:
; Line 39
	push	15					; 0000000fH
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z ; CAlignedMidBuffer::AllocAlignedMask
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jne	SHORT $LN1@Alloc
; Line 41
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN5@Alloc
$LN1@Alloc:
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+72], edx
$LN3@Alloc:
; Line 44
	xor	eax, eax
$LN5@Alloc:
; Line 45
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Alloc@CFilterCoder@@AAEJXZ ENDP			; CFilterCoder::Alloc
_TEXT	ENDS
EXTRN	_MidAlloc@4:PROC
EXTRN	_MidFree@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 4
_alignMask$ = 12					; size = 4
?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z PROC	; CAlignedMidBuffer::AllocAlignedMask, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_MidFree@4
; Line 46
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 47
	mov	eax, DWORD PTR _size$[ebp]
	add	eax, DWORD PTR _alignMask$[ebp]
	push	eax
	call	_MidAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 49
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@AllocAlign
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _alignMask$[ebp]
	mov	edx, DWORD PTR _alignMask$[ebp]
	not	edx
	and	ecx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@AllocAlign:
; Line 54
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AllocAlignedMask@CAlignedMidBuffer@@QAEXII@Z ENDP	; CAlignedMidBuffer::AllocAlignedMask
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
PUBLIC	?Init_and_Alloc@CFilterCoder@@AAEJXZ		; CFilterCoder::Init_and_Alloc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -12						; size = 4
___result__$67127 = -8					; size = 4
_this$ = -4						; size = 4
?Init_and_Alloc@CFilterCoder@@AAEJXZ PROC		; CFilterCoder::Init_and_Alloc
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67127[ebp], eax
	cmp	DWORD PTR ___result__$67127[ebp], 0
	je	SHORT $LN1@Init_and_A
	mov	eax, DWORD PTR ___result__$67127[ebp]
	jmp	SHORT $LN2@Init_and_A
$LN1@Init_and_A:
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Alloc@CFilterCoder@@AAEJXZ		; CFilterCoder::Alloc
$LN2@Init_and_A:
; Line 51
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init_and_Alloc@CFilterCoder@@AAEJXZ ENDP		; CFilterCoder::Init_and_Alloc
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::~CMyComPtr<ICompressSetDecoderProperties2>
PUBLIC	??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ; CMyComPtr<ICryptoResetInitVector>::~CMyComPtr<ICryptoResetInitVector>
PUBLIC	??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressWriteCoderProperties>::~CMyComPtr<ICompressWriteCoderProperties>
PUBLIC	??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressSetCoderProperties>::~CMyComPtr<ICompressSetCoderProperties>
PUBLIC	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ	; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
PUBLIC	??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ	; CMyComPtr<ICryptoSetPassword>::~CMyComPtr<ICryptoSetPassword>
PUBLIC	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??1CAlignedMidBuffer@@QAE@XZ			; CAlignedMidBuffer::~CAlignedMidBuffer
PUBLIC	??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ	; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>
PUBLIC	??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::CMyComPtr<ICompressSetDecoderProperties2>
PUBLIC	??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ; CMyComPtr<ICryptoResetInitVector>::CMyComPtr<ICryptoResetInitVector>
PUBLIC	??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressWriteCoderProperties>::CMyComPtr<ICompressWriteCoderProperties>
PUBLIC	??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressSetCoderProperties>::CMyComPtr<ICompressSetCoderProperties>
PUBLIC	??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ	; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>
PUBLIC	??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ	; CMyComPtr<ICryptoSetPassword>::CMyComPtr<ICryptoSetPassword>
PUBLIC	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@ ; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICryptoResetInitVector@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressWriteCoderProperties@@@ ; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressSetCoderProperties@@@ ; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICryptoProperties@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICryptoSetPassword@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressSetBufSize@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BIOutStreamFinish@@@		; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BISequentialOutStream@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressSetOutStream@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BISequentialInStream@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressSetInStream@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressInitEncoder@@@	; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressSetOutStreamSize@@@ ; CFilterCoder::`vftable'
PUBLIC	??_7CFilterCoder@@6BICompressCoder@@@		; CFilterCoder::`vftable'
PUBLIC	??0CAlignedMidBuffer@@QAE@XZ			; CAlignedMidBuffer::CAlignedMidBuffer
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressSetDecoderProperties2@@QAE@XZ	; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2
PUBLIC	??0ICryptoResetInitVector@@QAE@XZ		; ICryptoResetInitVector::ICryptoResetInitVector
PUBLIC	??0ICompressWriteCoderProperties@@QAE@XZ	; ICompressWriteCoderProperties::ICompressWriteCoderProperties
PUBLIC	??0ICompressSetCoderProperties@@QAE@XZ		; ICompressSetCoderProperties::ICompressSetCoderProperties
PUBLIC	??0ICryptoProperties@@QAE@XZ			; ICryptoProperties::ICryptoProperties
PUBLIC	??0ICryptoSetPassword@@QAE@XZ			; ICryptoSetPassword::ICryptoSetPassword
PUBLIC	??0ICompressSetBufSize@@QAE@XZ			; ICompressSetBufSize::ICompressSetBufSize
PUBLIC	??0IOutStreamFinish@@QAE@XZ			; IOutStreamFinish::IOutStreamFinish
PUBLIC	??0ISequentialOutStream@@QAE@XZ			; ISequentialOutStream::ISequentialOutStream
PUBLIC	??0ICompressSetOutStream@@QAE@XZ		; ICompressSetOutStream::ICompressSetOutStream
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??0ICompressSetInStream@@QAE@XZ			; ICompressSetInStream::ICompressSetInStream
PUBLIC	??0ICompressInitEncoder@@QAE@XZ			; ICompressInitEncoder::ICompressInitEncoder
PUBLIC	??0ICompressSetOutStreamSize@@QAE@XZ		; ICompressSetOutStreamSize::ICompressSetOutStreamSize
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CFilterCoder@@QAE@_N@Z			; CFilterCoder::CFilterCoder
PUBLIC	??_R4CFilterCoder@@6BICompressCoder@@@		; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFilterCoder@@@8			; CFilterCoder `RTTI Type Descriptor'
PUBLIC	??_R3CFilterCoder@@8				; CFilterCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFilterCoder@@8				; CFilterCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFilterCoder@@8			; CFilterCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetOutStreamSize@@@8		; ICompressSetOutStreamSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@ICompressInitEncoder@@8		; ICompressInitEncoder::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressInitEncoder@@@8		; ICompressInitEncoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressInitEncoder@@8			; ICompressInitEncoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressInitEncoder@@8			; ICompressInitEncoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressInitEncoder@@8		; ICompressInitEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUICompressSetInStream@@@8		; ICompressSetInStream `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@ICompressSetOutStream@@8		; ICompressSetOutStream::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R0?AUICompressSetOutStream@@@8		; ICompressSetOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetOutStream@@8			; ICompressSetOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetOutStream@@8			; ICompressSetOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetOutStream@@8		; ICompressSetOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	??_R1BI@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AUISequentialOutStream@@@8		; ISequentialOutStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialOutStream@@8			; ISequentialOutStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialOutStream@@8		; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BI@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (24,-1,0,66)'
PUBLIC	??_R1BM@?0A@EA@IOutStreamFinish@@8		; IOutStreamFinish::`RTTI Base Class Descriptor at (28,-1,0,64)'
PUBLIC	??_R0?AUIOutStreamFinish@@@8			; IOutStreamFinish `RTTI Type Descriptor'
PUBLIC	??_R3IOutStreamFinish@@8			; IOutStreamFinish::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IOutStreamFinish@@8			; IOutStreamFinish::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IOutStreamFinish@@8		; IOutStreamFinish::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BM@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (28,-1,0,66)'
PUBLIC	??_R1CA@?0A@EA@ICompressSetBufSize@@8		; ICompressSetBufSize::`RTTI Base Class Descriptor at (32,-1,0,64)'
PUBLIC	??_R0?AUICompressSetBufSize@@@8			; ICompressSetBufSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetBufSize@@8			; ICompressSetBufSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetBufSize@@8			; ICompressSetBufSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetBufSize@@8		; ICompressSetBufSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (32,-1,0,66)'
PUBLIC	??_R1CE@?0A@EA@ICryptoSetPassword@@8		; ICryptoSetPassword::`RTTI Base Class Descriptor at (36,-1,0,64)'
PUBLIC	??_R0?AUICryptoSetPassword@@@8			; ICryptoSetPassword `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoSetPassword@@8			; ICryptoSetPassword::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoSetPassword@@8			; ICryptoSetPassword::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoSetPassword@@8		; ICryptoSetPassword::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (36,-1,0,66)'
PUBLIC	??_R1CI@?0A@EA@ICryptoProperties@@8		; ICryptoProperties::`RTTI Base Class Descriptor at (40,-1,0,64)'
PUBLIC	??_R0?AUICryptoProperties@@@8			; ICryptoProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoProperties@@8			; ICryptoProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoProperties@@8			; ICryptoProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoProperties@@8		; ICryptoProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CI@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (40,-1,0,66)'
PUBLIC	??_R1CM@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (44,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderProperties@@@8		; ICompressSetCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderProperties@@8		; ICompressSetCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderProperties@@8	; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1CM@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (44,-1,0,66)'
PUBLIC	??_R1DA@?0A@EA@ICompressWriteCoderProperties@@8	; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (48,-1,0,64)'
PUBLIC	??_R0?AUICompressWriteCoderProperties@@@8	; ICompressWriteCoderProperties `RTTI Type Descriptor'
PUBLIC	??_R3ICompressWriteCoderProperties@@8		; ICompressWriteCoderProperties::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressWriteCoderProperties@@8		; ICompressWriteCoderProperties::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressWriteCoderProperties@@8	; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1DA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (48,-1,0,66)'
PUBLIC	??_R1DE@?0A@EA@ICryptoResetInitVector@@8	; ICryptoResetInitVector::`RTTI Base Class Descriptor at (52,-1,0,64)'
PUBLIC	??_R0?AUICryptoResetInitVector@@@8		; ICryptoResetInitVector `RTTI Type Descriptor'
PUBLIC	??_R3ICryptoResetInitVector@@8			; ICryptoResetInitVector::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICryptoResetInitVector@@8			; ICryptoResetInitVector::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICryptoResetInitVector@@8		; ICryptoResetInitVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1DE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (52,-1,0,66)'
PUBLIC	??_R1DI@?0A@EA@ICompressSetDecoderProperties2@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (56,-1,0,64)'
PUBLIC	??_R0?AUICompressSetDecoderProperties2@@@8	; ICompressSetDecoderProperties2 `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetDecoderProperties2@@8		; ICompressSetDecoderProperties2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetDecoderProperties2@@8		; ICompressSetDecoderProperties2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8	; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1DI@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (56,-1,0,66)'
PUBLIC	??_R1DM@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (60,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EA@CAlignedMidBuffer@@8		; CAlignedMidBuffer::`RTTI Base Class Descriptor at (64,-1,0,64)'
PUBLIC	??_R0?AUCAlignedMidBuffer@@@8			; CAlignedMidBuffer `RTTI Type Descriptor'
PUBLIC	??_R3CAlignedMidBuffer@@8			; CAlignedMidBuffer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAlignedMidBuffer@@8			; CAlignedMidBuffer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAlignedMidBuffer@@8		; CAlignedMidBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
PUBLIC	?AddRef@CFilterCoder@@UAGKXZ			; CFilterCoder::AddRef
PUBLIC	?Release@CFilterCoder@@UAGKXZ			; CFilterCoder::Release
PUBLIC	?Code@CFilterCoder@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; CFilterCoder::Code
PUBLIC	??_R4CFilterCoder@@6BICompressSetOutStreamSize@@@ ; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CFilterCoder@@W3AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CFilterCoder@@W3AGKXZ			; [thunk]:CFilterCoder::Release`adjustor{4}'
PUBLIC	?SetOutStreamSize@CFilterCoder@@UAGJPB_K@Z	; CFilterCoder::SetOutStreamSize
PUBLIC	??_R4CFilterCoder@@6BICompressInitEncoder@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CFilterCoder@@W7AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{8}'
PUBLIC	?Release@CFilterCoder@@W7AGKXZ			; [thunk]:CFilterCoder::Release`adjustor{8}'
PUBLIC	?InitEncoder@CFilterCoder@@UAGJXZ		; CFilterCoder::InitEncoder
PUBLIC	??_R4CFilterCoder@@6BICompressSetInStream@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CFilterCoder@@WM@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{12}'
PUBLIC	?Release@CFilterCoder@@WM@AGKXZ			; [thunk]:CFilterCoder::Release`adjustor{12}'
PUBLIC	?SetInStream@CFilterCoder@@UAGJPAUISequentialInStream@@@Z ; CFilterCoder::SetInStream
PUBLIC	?ReleaseInStream@CFilterCoder@@UAGJXZ		; CFilterCoder::ReleaseInStream
PUBLIC	??_R4CFilterCoder@@6BISequentialInStream@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@CFilterCoder@@WBA@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{16}'
PUBLIC	?Release@CFilterCoder@@WBA@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{16}'
PUBLIC	?Read@CFilterCoder@@UAGJPAXIPAI@Z		; CFilterCoder::Read
PUBLIC	??_R4CFilterCoder@@6BICompressSetOutStream@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WBE@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{20}'
PUBLIC	?AddRef@CFilterCoder@@WBE@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{20}'
PUBLIC	?Release@CFilterCoder@@WBE@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{20}'
PUBLIC	?SetOutStream@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z ; CFilterCoder::SetOutStream
PUBLIC	?ReleaseOutStream@CFilterCoder@@UAGJXZ		; CFilterCoder::ReleaseOutStream
PUBLIC	??_R4CFilterCoder@@6BISequentialOutStream@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WBI@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{24}'
PUBLIC	?AddRef@CFilterCoder@@WBI@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{24}'
PUBLIC	?Release@CFilterCoder@@WBI@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{24}'
PUBLIC	?Write@CFilterCoder@@UAGJPBXIPAI@Z		; CFilterCoder::Write
PUBLIC	??_R4CFilterCoder@@6BIOutStreamFinish@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WBM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{28}'
PUBLIC	?AddRef@CFilterCoder@@WBM@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{28}'
PUBLIC	?Release@CFilterCoder@@WBM@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{28}'
PUBLIC	?OutStreamFinish@CFilterCoder@@UAGJXZ		; CFilterCoder::OutStreamFinish
PUBLIC	??_R4CFilterCoder@@6BICompressSetBufSize@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WCA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{32}'
PUBLIC	?AddRef@CFilterCoder@@WCA@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{32}'
PUBLIC	?Release@CFilterCoder@@WCA@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{32}'
PUBLIC	??_R4CFilterCoder@@6BICryptoSetPassword@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WCE@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{36}'
PUBLIC	?AddRef@CFilterCoder@@WCE@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{36}'
PUBLIC	?Release@CFilterCoder@@WCE@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{36}'
PUBLIC	?CryptoSetPassword@CFilterCoder@@UAGJPBEI@Z	; CFilterCoder::CryptoSetPassword
PUBLIC	??_R4CFilterCoder@@6BICryptoProperties@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WCI@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{40}'
PUBLIC	?AddRef@CFilterCoder@@WCI@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{40}'
PUBLIC	?Release@CFilterCoder@@WCI@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{40}'
PUBLIC	?SetKey@CFilterCoder@@UAGJPBEI@Z		; CFilterCoder::SetKey
PUBLIC	?SetInitVector@CFilterCoder@@UAGJPBEI@Z		; CFilterCoder::SetInitVector
PUBLIC	??_R4CFilterCoder@@6BICompressSetCoderProperties@@@ ; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WCM@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{44}'
PUBLIC	?AddRef@CFilterCoder@@WCM@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{44}'
PUBLIC	?Release@CFilterCoder@@WCM@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{44}'
PUBLIC	?SetCoderProperties@CFilterCoder@@UAGJPBKPBUtagPROPVARIANT@@I@Z ; CFilterCoder::SetCoderProperties
PUBLIC	??_R4CFilterCoder@@6BICompressWriteCoderProperties@@@ ; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WDA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{48}'
PUBLIC	?AddRef@CFilterCoder@@WDA@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{48}'
PUBLIC	?Release@CFilterCoder@@WDA@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{48}'
PUBLIC	?WriteCoderProperties@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z ; CFilterCoder::WriteCoderProperties
PUBLIC	??_R4CFilterCoder@@6BICryptoResetInitVector@@@	; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WDE@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{52}'
PUBLIC	?AddRef@CFilterCoder@@WDE@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{52}'
PUBLIC	?Release@CFilterCoder@@WDE@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{52}'
PUBLIC	?ResetInitVector@CFilterCoder@@UAGJXZ		; CFilterCoder::ResetInitVector
PUBLIC	??_R4CFilterCoder@@6BICompressSetDecoderProperties2@@@ ; CFilterCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CFilterCoder@@WDI@AGJABU_GUID@@PAPAX@Z ; [thunk]:CFilterCoder::QueryInterface`adjustor{56}'
PUBLIC	?AddRef@CFilterCoder@@WDI@AGKXZ			; [thunk]:CFilterCoder::AddRef`adjustor{56}'
PUBLIC	?Release@CFilterCoder@@WDI@AGKXZ		; [thunk]:CFilterCoder::Release`adjustor{56}'
PUBLIC	?SetDecoderProperties2@CFilterCoder@@UAGJPBEI@Z	; CFilterCoder::SetDecoderProperties2
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4CFilterCoder@@6BICompressSetDecoderProperties2@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressSetDecoderProperties2@@@ DD 00H ; CFilterCoder::`RTTI Complete Object Locator'
	DD	038H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICryptoResetInitVector@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICryptoResetInitVector@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	034H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressWriteCoderProperties@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressWriteCoderProperties@@@ DD 00H ; CFilterCoder::`RTTI Complete Object Locator'
	DD	030H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressSetCoderProperties@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressSetCoderProperties@@@ DD 00H ; CFilterCoder::`RTTI Complete Object Locator'
	DD	02cH
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICryptoProperties@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICryptoProperties@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICryptoSetPassword@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICryptoSetPassword@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	024H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressSetBufSize@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressSetBufSize@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	020H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BIOutStreamFinish@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BIOutStreamFinish@@@ DD 00H		; CFilterCoder::`RTTI Complete Object Locator'
	DD	01cH
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BISequentialOutStream@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BISequentialOutStream@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressSetOutStream@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressSetOutStream@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BISequentialInStream@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BISequentialInStream@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressSetInStream@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressInitEncoder@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressInitEncoder@@@ DD 00H	; CFilterCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressSetOutStreamSize@@@ DD 00H ; CFilterCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAlignedMidBuffer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAlignedMidBuffer@@8 DD FLAT:??_R0?AUCAlignedMidBuffer@@@8 ; CAlignedMidBuffer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAlignedMidBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R2CAlignedMidBuffer@@8
rdata$r	SEGMENT
??_R2CAlignedMidBuffer@@8 DD FLAT:??_R1A@?0A@EA@CAlignedMidBuffer@@8 ; CAlignedMidBuffer::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CAlignedMidBuffer@@8
rdata$r	SEGMENT
??_R3CAlignedMidBuffer@@8 DD 00H			; CAlignedMidBuffer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CAlignedMidBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCAlignedMidBuffer@@@8
_DATA	SEGMENT
??_R0?AUCAlignedMidBuffer@@@8 DD FLAT:??_7type_info@@6B@ ; CAlignedMidBuffer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCAlignedMidBuffer@@', 00H
_DATA	ENDS
;	COMDAT ??_R1EA@?0A@EA@CAlignedMidBuffer@@8
rdata$r	SEGMENT
??_R1EA@?0A@EA@CAlignedMidBuffer@@8 DD FLAT:??_R0?AUCAlignedMidBuffer@@@8 ; CAlignedMidBuffer::`RTTI Base Class Descriptor at (64,-1,0,64)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAlignedMidBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1DM@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1DM@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (60,-1,0,64)'
	DD	00H
	DD	03cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1DI@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1DI@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (56,-1,0,66)'
	DD	00H
	DD	038H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8 DD FLAT:??_R0?AUICompressSetDecoderProperties2@@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R2ICompressSetDecoderProperties2@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetDecoderProperties2@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R3ICompressSetDecoderProperties2@@8 DD 00H		; ICompressSetDecoderProperties2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetDecoderProperties2@@@8
_DATA	SEGMENT
??_R0?AUICompressSetDecoderProperties2@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetDecoderProperties2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetDecoderProperties2@@', 00H
_DATA	ENDS
;	COMDAT ??_R1DI@?0A@EA@ICompressSetDecoderProperties2@@8
rdata$r	SEGMENT
??_R1DI@?0A@EA@ICompressSetDecoderProperties2@@8 DD FLAT:??_R0?AUICompressSetDecoderProperties2@@@8 ; ICompressSetDecoderProperties2::`RTTI Base Class Descriptor at (56,-1,0,64)'
	DD	01H
	DD	038H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_R1DE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1DE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (52,-1,0,66)'
	DD	00H
	DD	034H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoResetInitVector@@8 DD FLAT:??_R0?AUICryptoResetInitVector@@@8 ; ICryptoResetInitVector::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R2ICryptoResetInitVector@@8 DD FLAT:??_R1A@?0A@EA@ICryptoResetInitVector@@8 ; ICryptoResetInitVector::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R3ICryptoResetInitVector@@8 DD 00H			; ICryptoResetInitVector::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoResetInitVector@@@8
_DATA	SEGMENT
??_R0?AUICryptoResetInitVector@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoResetInitVector `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoResetInitVector@@', 00H
_DATA	ENDS
;	COMDAT ??_R1DE@?0A@EA@ICryptoResetInitVector@@8
rdata$r	SEGMENT
??_R1DE@?0A@EA@ICryptoResetInitVector@@8 DD FLAT:??_R0?AUICryptoResetInitVector@@@8 ; ICryptoResetInitVector::`RTTI Base Class Descriptor at (52,-1,0,64)'
	DD	01H
	DD	034H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_R1DA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1DA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (48,-1,0,66)'
	DD	00H
	DD	030H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressWriteCoderProperties@@8 DD FLAT:??_R0?AUICompressWriteCoderProperties@@@8 ; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressWriteCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressWriteCoderProperties@@8 ; ICompressWriteCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressWriteCoderProperties@@8 DD 00H		; ICompressWriteCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressWriteCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressWriteCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressWriteCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressWriteCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R1DA@?0A@EA@ICompressWriteCoderProperties@@8
rdata$r	SEGMENT
??_R1DA@?0A@EA@ICompressWriteCoderProperties@@8 DD FLAT:??_R0?AUICompressWriteCoderProperties@@@8 ; ICompressWriteCoderProperties::`RTTI Base Class Descriptor at (48,-1,0,64)'
	DD	01H
	DD	030H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1CM@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1CM@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (44,-1,0,66)'
	DD	00H
	DD	02cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderProperties@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderProperties@@8 ; ICompressSetCoderProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderProperties@@8 DD 00H		; ICompressSetCoderProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderProperties@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CM@?0A@EA@ICompressSetCoderProperties@@8
rdata$r	SEGMENT
??_R1CM@?0A@EA@ICompressSetCoderProperties@@8 DD FLAT:??_R0?AUICompressSetCoderProperties@@@8 ; ICompressSetCoderProperties::`RTTI Base Class Descriptor at (44,-1,0,64)'
	DD	01H
	DD	02cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1CI@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1CI@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (40,-1,0,66)'
	DD	00H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoProperties@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoProperties@@8 DD FLAT:??_R0?AUICryptoProperties@@@8 ; ICryptoProperties::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoProperties@@8
rdata$r	SEGMENT
??_R2ICryptoProperties@@8 DD FLAT:??_R1A@?0A@EA@ICryptoProperties@@8 ; ICryptoProperties::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoProperties@@8
rdata$r	SEGMENT
??_R3ICryptoProperties@@8 DD 00H			; ICryptoProperties::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoProperties@@@8
_DATA	SEGMENT
??_R0?AUICryptoProperties@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoProperties `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoProperties@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CI@?0A@EA@ICryptoProperties@@8
rdata$r	SEGMENT
??_R1CI@?0A@EA@ICryptoProperties@@8 DD FLAT:??_R0?AUICryptoProperties@@@8 ; ICryptoProperties::`RTTI Base Class Descriptor at (40,-1,0,64)'
	DD	01H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_R1CE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1CE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (36,-1,0,66)'
	DD	00H
	DD	024H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICryptoSetPassword@@8 DD FLAT:??_R0?AUICryptoSetPassword@@@8 ; ICryptoSetPassword::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_R2ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R2ICryptoSetPassword@@8 DD FLAT:??_R1A@?0A@EA@ICryptoSetPassword@@8 ; ICryptoSetPassword::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R3ICryptoSetPassword@@8 DD 00H			; ICryptoSetPassword::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICryptoSetPassword@@@8
_DATA	SEGMENT
??_R0?AUICryptoSetPassword@@@8 DD FLAT:??_7type_info@@6B@ ; ICryptoSetPassword `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICryptoSetPassword@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CE@?0A@EA@ICryptoSetPassword@@8
rdata$r	SEGMENT
??_R1CE@?0A@EA@ICryptoSetPassword@@8 DD FLAT:??_R0?AUICryptoSetPassword@@@8 ; ICryptoSetPassword::`RTTI Base Class Descriptor at (36,-1,0,64)'
	DD	01H
	DD	024H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_R1CA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1CA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (32,-1,0,66)'
	DD	00H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetBufSize@@8 DD FLAT:??_R0?AUICompressSetBufSize@@@8 ; ICompressSetBufSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R2ICompressSetBufSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetBufSize@@8 ; ICompressSetBufSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R3ICompressSetBufSize@@8 DD 00H			; ICompressSetBufSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetBufSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetBufSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetBufSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetBufSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R1CA@?0A@EA@ICompressSetBufSize@@8
rdata$r	SEGMENT
??_R1CA@?0A@EA@ICompressSetBufSize@@8 DD FLAT:??_R0?AUICompressSetBufSize@@@8 ; ICompressSetBufSize::`RTTI Base Class Descriptor at (32,-1,0,64)'
	DD	01H
	DD	020H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_R1BM@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BM@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (28,-1,0,66)'
	DD	00H
	DD	01cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IOutStreamFinish@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IOutStreamFinish@@8 DD FLAT:??_R0?AUIOutStreamFinish@@@8 ; IOutStreamFinish::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutStreamFinish@@8
rdata$r	ENDS
;	COMDAT ??_R2IOutStreamFinish@@8
rdata$r	SEGMENT
??_R2IOutStreamFinish@@8 DD FLAT:??_R1A@?0A@EA@IOutStreamFinish@@8 ; IOutStreamFinish::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IOutStreamFinish@@8
rdata$r	SEGMENT
??_R3IOutStreamFinish@@8 DD 00H				; IOutStreamFinish::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IOutStreamFinish@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIOutStreamFinish@@@8
_DATA	SEGMENT
??_R0?AUIOutStreamFinish@@@8 DD FLAT:??_7type_info@@6B@	; IOutStreamFinish `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIOutStreamFinish@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BM@?0A@EA@IOutStreamFinish@@8
rdata$r	SEGMENT
??_R1BM@?0A@EA@IOutStreamFinish@@8 DD FLAT:??_R0?AUIOutStreamFinish@@@8 ; IOutStreamFinish::`RTTI Base Class Descriptor at (28,-1,0,64)'
	DD	01H
	DD	01cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOutStreamFinish@@8
rdata$r	ENDS
;	COMDAT ??_R1BI@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BI@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (24,-1,0,66)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialOutStream@@8
rdata$r	SEGMENT
??_R2ISequentialOutStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialOutStream@@8 ; ISequentialOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialOutStream@@8
rdata$r	SEGMENT
??_R3ISequentialOutStream@@8 DD 00H			; ISequentialOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialOutStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BI@?0A@EA@ISequentialOutStream@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@ISequentialOutStream@@8 DD FLAT:??_R0?AUISequentialOutStream@@@8 ; ISequentialOutStream::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	01H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetOutStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetOutStream@@8 DD FLAT:??_R0?AUICompressSetOutStream@@@8 ; ICompressSetOutStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetOutStream@@8
rdata$r	SEGMENT
??_R2ICompressSetOutStream@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetOutStream@@8 ; ICompressSetOutStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetOutStream@@8
rdata$r	SEGMENT
??_R3ICompressSetOutStream@@8 DD 00H			; ICompressSetOutStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetOutStream@@@8
_DATA	SEGMENT
??_R0?AUICompressSetOutStream@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetOutStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetOutStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BE@?0A@EA@ICompressSetOutStream@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@ICompressSetOutStream@@8 DD FLAT:??_R0?AUICompressSetOutStream@@@8 ; ICompressSetOutStream::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetInStream@@8
rdata$r	SEGMENT
??_R2ICompressSetInStream@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetInStream@@8 ; ICompressSetInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetInStream@@8
rdata$r	SEGMENT
??_R3ICompressSetInStream@@8 DD 00H			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetInStream@@@8
_DATA	SEGMENT
??_R0?AUICompressSetInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressInitEncoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressInitEncoder@@8 DD FLAT:??_R0?AUICompressInitEncoder@@@8 ; ICompressInitEncoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressInitEncoder@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressInitEncoder@@8
rdata$r	SEGMENT
??_R2ICompressInitEncoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressInitEncoder@@8 ; ICompressInitEncoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressInitEncoder@@8
rdata$r	SEGMENT
??_R3ICompressInitEncoder@@8 DD 00H			; ICompressInitEncoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressInitEncoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressInitEncoder@@@8
_DATA	SEGMENT
??_R0?AUICompressInitEncoder@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressInitEncoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressInitEncoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressInitEncoder@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressInitEncoder@@8 DD FLAT:??_R0?AUICompressInitEncoder@@@8 ; ICompressInitEncoder::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressInitEncoder@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R2ICompressSetOutStreamSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R3ICompressSetOutStreamSize@@8 DD 00H		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetOutStreamSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetOutStreamSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetOutStreamSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetOutStreamSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFilterCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFilterCoder@@8 DD FLAT:??_R0?AVCFilterCoder@@@8 ; CFilterCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	020H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R2CFilterCoder@@8
rdata$r	SEGMENT
??_R2CFilterCoder@@8 DD FLAT:??_R1A@?0A@EA@CFilterCoder@@8 ; CFilterCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressInitEncoder@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@ICompressSetOutStream@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BI@?0A@EA@ISequentialOutStream@@8
	DD	FLAT:??_R1BI@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BM@?0A@EA@IOutStreamFinish@@8
	DD	FLAT:??_R1BM@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1CA@?0A@EA@ICompressSetBufSize@@8
	DD	FLAT:??_R1CA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1CE@?0A@EA@ICryptoSetPassword@@8
	DD	FLAT:??_R1CE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1CI@?0A@EA@ICryptoProperties@@8
	DD	FLAT:??_R1CI@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1CM@?0A@EA@ICompressSetCoderProperties@@8
	DD	FLAT:??_R1CM@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1DA@?0A@EA@ICompressWriteCoderProperties@@8
	DD	FLAT:??_R1DA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1DE@?0A@EA@ICryptoResetInitVector@@8
	DD	FLAT:??_R1DE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1DI@?0A@EA@ICompressSetDecoderProperties2@@8
	DD	FLAT:??_R1DI@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1DM@?0A@EA@CMyUnknownImp@@8
	DD	FLAT:??_R1EA@?0A@EA@CAlignedMidBuffer@@8
rdata$r	ENDS
;	COMDAT ??_R3CFilterCoder@@8
rdata$r	SEGMENT
??_R3CFilterCoder@@8 DD 00H				; CFilterCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	021H
	DD	FLAT:??_R2CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFilterCoder@@@8
_DATA	SEGMENT
??_R0?AVCFilterCoder@@@8 DD FLAT:??_7type_info@@6B@	; CFilterCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFilterCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CFilterCoder@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CFilterCoder@@6BICompressCoder@@@ DD 00H		; CFilterCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFilterCoder@@@8
	DD	FLAT:??_R3CFilterCoder@@8
rdata$r	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@ DD FLAT:??_R4CFilterCoder@@6BICompressSetDecoderProperties2@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WDI@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WDI@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WDI@AGKXZ
	DD	FLAT:?SetDecoderProperties2@CFilterCoder@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICryptoResetInitVector@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICryptoResetInitVector@@@ DD FLAT:??_R4CFilterCoder@@6BICryptoResetInitVector@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WDE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WDE@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WDE@AGKXZ
	DD	FLAT:?ResetInitVector@CFilterCoder@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressWriteCoderProperties@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressWriteCoderProperties@@@ DD FLAT:??_R4CFilterCoder@@6BICompressWriteCoderProperties@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WDA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WDA@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WDA@AGKXZ
	DD	FLAT:?WriteCoderProperties@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressSetCoderProperties@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressSetCoderProperties@@@ DD FLAT:??_R4CFilterCoder@@6BICompressSetCoderProperties@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WCM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WCM@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WCM@AGKXZ
	DD	FLAT:?SetCoderProperties@CFilterCoder@@UAGJPBKPBUtagPROPVARIANT@@I@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICryptoProperties@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICryptoProperties@@@ DD FLAT:??_R4CFilterCoder@@6BICryptoProperties@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WCI@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WCI@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WCI@AGKXZ
	DD	FLAT:?SetKey@CFilterCoder@@UAGJPBEI@Z
	DD	FLAT:?SetInitVector@CFilterCoder@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICryptoSetPassword@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICryptoSetPassword@@@ DD FLAT:??_R4CFilterCoder@@6BICryptoSetPassword@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WCE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WCE@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WCE@AGKXZ
	DD	FLAT:?CryptoSetPassword@CFilterCoder@@UAGJPBEI@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressSetBufSize@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressSetBufSize@@@ DD FLAT:??_R4CFilterCoder@@6BICompressSetBufSize@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WCA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WCA@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WCA@AGKXZ
	DD	FLAT:?SetInBufSize@CFilterCoder@@UAGJII@Z
	DD	FLAT:?SetOutBufSize@CFilterCoder@@UAGJII@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BIOutStreamFinish@@@
CONST	SEGMENT
??_7CFilterCoder@@6BIOutStreamFinish@@@ DD FLAT:??_R4CFilterCoder@@6BIOutStreamFinish@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WBM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WBM@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WBM@AGKXZ
	DD	FLAT:?OutStreamFinish@CFilterCoder@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BISequentialOutStream@@@
CONST	SEGMENT
??_7CFilterCoder@@6BISequentialOutStream@@@ DD FLAT:??_R4CFilterCoder@@6BISequentialOutStream@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WBI@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WBI@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WBI@AGKXZ
	DD	FLAT:?Write@CFilterCoder@@UAGJPBXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressSetOutStream@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressSetOutStream@@@ DD FLAT:??_R4CFilterCoder@@6BICompressSetOutStream@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WBE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WBE@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WBE@AGKXZ
	DD	FLAT:?SetOutStream@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z
	DD	FLAT:?ReleaseOutStream@CFilterCoder@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CFilterCoder@@6BISequentialInStream@@@ DD FLAT:??_R4CFilterCoder@@6BISequentialInStream@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WBA@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WBA@AGKXZ
	DD	FLAT:?Read@CFilterCoder@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressSetInStream@@@ DD FLAT:??_R4CFilterCoder@@6BICompressSetInStream@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@WM@AGKXZ
	DD	FLAT:?Release@CFilterCoder@@WM@AGKXZ
	DD	FLAT:?SetInStream@CFilterCoder@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CFilterCoder@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressInitEncoder@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressInitEncoder@@@ DD FLAT:??_R4CFilterCoder@@6BICompressInitEncoder@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@W7AGKXZ
	DD	FLAT:?Release@CFilterCoder@@W7AGKXZ
	DD	FLAT:?InitEncoder@CFilterCoder@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CFilterCoder@@6BICompressSetOutStreamSize@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@W3AGKXZ
	DD	FLAT:?Release@CFilterCoder@@W3AGKXZ
	DD	FLAT:?SetOutStreamSize@CFilterCoder@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CFilterCoder@@6BICompressCoder@@@
CONST	SEGMENT
??_7CFilterCoder@@6BICompressCoder@@@ DD FLAT:??_R4CFilterCoder@@6BICompressCoder@@@ ; CFilterCoder::`vftable'
	DD	FLAT:?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CFilterCoder@@UAGKXZ
	DD	FLAT:?Release@CFilterCoder@@UAGKXZ
	DD	FLAT:?Code@CFilterCoder@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$??0CFilterCoder@@QAE@_N@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??0CFilterCoder@@QAE@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CFilterCoder@@QAE@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$8
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_encodeMode$ = 8					; size = 1
??0CFilterCoder@@QAE@_N@Z PROC				; CFilterCoder::CFilterCoder
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CFilterCoder@@QAE@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetOutStreamSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ICompressInitEncoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0ICompressSetInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0ICompressSetOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0ISequentialOutStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0IOutStreamFinish@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0ICompressSetBufSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0ICryptoSetPassword@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0ICryptoProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0ICompressSetCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0ICompressWriteCoderProperties@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0ICryptoResetInitVector@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0ICompressSetDecoderProperties2@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0CAlignedMidBuffer@@QAE@XZ		; CAlignedMidBuffer::CAlignedMidBuffer
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CFilterCoder@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CFilterCoder@@6BICompressSetOutStreamSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CFilterCoder@@6BICompressInitEncoder@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CFilterCoder@@6BICompressSetInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CFilterCoder@@6BISequentialInStream@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CFilterCoder@@6BICompressSetOutStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], OFFSET ??_7CFilterCoder@@6BISequentialOutStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], OFFSET ??_7CFilterCoder@@6BIOutStreamFinish@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], OFFSET ??_7CFilterCoder@@6BICompressSetBufSize@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], OFFSET ??_7CFilterCoder@@6BICryptoSetPassword@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], OFFSET ??_7CFilterCoder@@6BICryptoProperties@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], OFFSET ??_7CFilterCoder@@6BICompressSetCoderProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], OFFSET ??_7CFilterCoder@@6BICompressWriteCoderProperties@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], OFFSET ??_7CFilterCoder@@6BICryptoResetInitVector@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], OFFSET ??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+76], 1048576		; 00100000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 1048576		; 00100000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _encodeMode$[ebp]
	mov	BYTE PTR [eax+84], cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+85], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	DWORD PTR [eax+92], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 0
	mov	DWORD PTR [ecx+100], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ ; CMyComPtr<ICryptoSetPassword>::CMyComPtr<ICryptoSetPassword>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressSetCoderProperties>::CMyComPtr<ICompressSetCoderProperties>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressWriteCoderProperties>::CMyComPtr<ICompressWriteCoderProperties>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ; CMyComPtr<ICryptoResetInitVector>::CMyComPtr<ICryptoResetInitVector>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::CMyComPtr<ICompressSetDecoderProperties2>
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ ; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CAlignedMidBuffer@@QAE@XZ		; CAlignedMidBuffer::~CAlignedMidBuffer
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ ; CMyComPtr<ICryptoSetPassword>::~CMyComPtr<ICryptoSetPassword>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	jmp	??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressSetCoderProperties>::~CMyComPtr<ICompressSetCoderProperties>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressWriteCoderProperties>::~CMyComPtr<ICompressWriteCoderProperties>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	jmp	??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ; CMyComPtr<ICryptoResetInitVector>::~CMyComPtr<ICryptoResetInitVector>
__unwindfunclet$??0CFilterCoder@@QAE@_N@Z$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::~CMyComPtr<ICompressSetDecoderProperties2>
__ehhandler$??0CFilterCoder@@QAE@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CFilterCoder@@QAE@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CFilterCoder@@QAE@_N@Z ENDP				; CFilterCoder::CFilterCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CAlignedMidBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAlignedMidBuffer@@QAE@XZ PROC			; CAlignedMidBuffer::CAlignedMidBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.h
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAlignedMidBuffer@@QAE@XZ ENDP			; CAlignedMidBuffer::CAlignedMidBuffer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CAlignedMidBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAlignedMidBuffer@@QAE@XZ PROC			; CAlignedMidBuffer::~CAlignedMidBuffer, COMDAT
; _this$ = ecx
; Line 41
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_MidFree@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAlignedMidBuffer@@QAE@XZ ENDP			; CAlignedMidBuffer::~CAlignedMidBuffer
_TEXT	ENDS
PUBLIC	??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::operator&
PUBLIC	??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ ; CMyComPtr<ICompressSetDecoderProperties2>::operator!
PUBLIC	??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ ; CMyComPtr<ICryptoResetInitVector>::operator&
PUBLIC	??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ ; CMyComPtr<ICryptoResetInitVector>::operator!
PUBLIC	??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ ; CMyComPtr<ICompressWriteCoderProperties>::operator&
PUBLIC	??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ ; CMyComPtr<ICompressWriteCoderProperties>::operator!
PUBLIC	??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ ; CMyComPtr<ICompressSetCoderProperties>::operator&
PUBLIC	??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ ; CMyComPtr<ICompressSetCoderProperties>::operator!
PUBLIC	??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator&
PUBLIC	??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ	; CMyComPtr<ICryptoProperties>::operator!
PUBLIC	??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ ; CMyComPtr<ICryptoSetPassword>::operator&
PUBLIC	??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ	; CMyComPtr<ICryptoSetPassword>::operator!
PUBLIC	_==@8
EXTRN	_IID_ICompressSetDecoderProperties2:BYTE
EXTRN	_IID_ICryptoResetInitVector:BYTE
EXTRN	_IID_ICompressWriteCoderProperties:BYTE
EXTRN	_IID_ICompressSetCoderProperties:BYTE
EXTRN	_IID_ICryptoProperties:BYTE
EXTRN	_IID_ICryptoSetPassword:BYTE
EXTRN	_IID_ICompressSetBufSize:BYTE
EXTRN	_IID_IOutStreamFinish:BYTE
EXTRN	_IID_ISequentialOutStream:BYTE
EXTRN	_IID_ICompressSetOutStream:BYTE
EXTRN	_IID_ISequentialInStream:BYTE
EXTRN	_IID_ICompressSetInStream:BYTE
EXTRN	_IID_ICompressInitEncoder:BYTE
EXTRN	_IID_ICompressSetOutStreamSize:BYTE
EXTRN	_IID_ICompressCoder:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv392 = -104						; size = 4
tv378 = -100						; size = 4
tv359 = -96						; size = 4
tv345 = -92						; size = 4
tv326 = -88						; size = 4
tv312 = -84						; size = 4
tv293 = -80						; size = 4
tv279 = -76						; size = 4
tv260 = -72						; size = 4
tv246 = -68						; size = 4
tv227 = -64						; size = 4
tv213 = -60						; size = 4
tv194 = -56						; size = 4
tv184 = -52						; size = 4
tv174 = -48						; size = 4
tv164 = -44						; size = 4
tv154 = -40						; size = 4
tv144 = -36						; size = 4
tv134 = -32						; size = 4
tv92 = -28						; size = 4
___result__$67058 = -24					; size = 4
___result__$67050 = -20					; size = 4
___result__$67042 = -16					; size = 4
___result__$67034 = -12					; size = 4
___result__$67026 = -8					; size = 4
___result__$67018 = -4					; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z PROC ; CFilterCoder::QueryInterface, COMDAT
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN44@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN43@QueryInter
$LN44@QueryInter:
	push	OFFSET _IID_ICompressCoder
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN42@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN43@QueryInter
$LN42@QueryInter:
; Line 158
	push	OFFSET _IID_ICompressSetOutStreamSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN40@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN47@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN48@QueryInter
$LN47@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN48@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN43@QueryInter
$LN40@QueryInter:
; Line 159
	push	OFFSET _IID_ICompressInitEncoder
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN38@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN49@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN50@QueryInter
$LN49@QueryInter:
	mov	DWORD PTR tv134[ebp], 0
$LN50@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN38@QueryInter:
; Line 161
	push	OFFSET _IID_ICompressSetInStream
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN36@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN51@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN52@QueryInter
$LN51@QueryInter:
	mov	DWORD PTR tv144[ebp], 0
$LN52@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN43@QueryInter
$LN36@QueryInter:
; Line 162
	push	OFFSET _IID_ISequentialInStream
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN34@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN53@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv154[ebp], edx
	jmp	SHORT $LN54@QueryInter
$LN53@QueryInter:
	mov	DWORD PTR tv154[ebp], 0
$LN54@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN43@QueryInter
$LN34@QueryInter:
; Line 164
	push	OFFSET _IID_ICompressSetOutStream
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN32@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN55@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR tv164[ebp], eax
	jmp	SHORT $LN56@QueryInter
$LN55@QueryInter:
	mov	DWORD PTR tv164[ebp], 0
$LN56@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv164[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN32@QueryInter:
; Line 165
	push	OFFSET _IID_ISequentialOutStream
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN30@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN57@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR tv174[ebp], ecx
	jmp	SHORT $LN58@QueryInter
$LN57@QueryInter:
	mov	DWORD PTR tv174[ebp], 0
$LN58@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv174[ebp]
	mov	DWORD PTR [edx], eax
	jmp	$LN43@QueryInter
$LN30@QueryInter:
; Line 166
	push	OFFSET _IID_IOutStreamFinish
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN28@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN59@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR tv184[ebp], edx
	jmp	SHORT $LN60@QueryInter
$LN59@QueryInter:
	mov	DWORD PTR tv184[ebp], 0
$LN60@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv184[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN43@QueryInter
$LN28@QueryInter:
; Line 168
	push	OFFSET _IID_ICompressSetBufSize
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN26@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN61@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv194[ebp], eax
	jmp	SHORT $LN62@QueryInter
$LN61@QueryInter:
	mov	DWORD PTR tv194[ebp], 0
$LN62@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv194[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN26@QueryInter:
; Line 171
	push	OFFSET _IID_ICryptoSetPassword
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	$LN24@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ ; CMyComPtr<ICryptoSetPassword>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN23@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv213[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ ; CMyComPtr<ICryptoSetPassword>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICryptoSetPassword
	mov	edx, DWORD PTR tv213[ebp]
	push	edx
	mov	eax, DWORD PTR tv213[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67018[ebp], eax
	cmp	DWORD PTR ___result__$67018[ebp], 0
	je	SHORT $LN23@QueryInter
	mov	eax, DWORD PTR ___result__$67018[ebp]
	jmp	$LN45@QueryInter
$LN23@QueryInter:
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN63@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 36					; 00000024H
	mov	DWORD PTR tv227[ebp], eax
	jmp	SHORT $LN64@QueryInter
$LN63@QueryInter:
	mov	DWORD PTR tv227[ebp], 0
$LN64@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv227[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN24@QueryInter:
; Line 172
	push	OFFSET _IID_ICryptoProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	$LN20@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ ; CMyComPtr<ICryptoProperties>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN19@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv246[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICryptoProperties
	mov	edx, DWORD PTR tv246[ebp]
	push	edx
	mov	eax, DWORD PTR tv246[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67026[ebp], eax
	cmp	DWORD PTR ___result__$67026[ebp], 0
	je	SHORT $LN19@QueryInter
	mov	eax, DWORD PTR ___result__$67026[ebp]
	jmp	$LN45@QueryInter
$LN19@QueryInter:
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN65@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR tv260[ebp], eax
	jmp	SHORT $LN66@QueryInter
$LN65@QueryInter:
	mov	DWORD PTR tv260[ebp], 0
$LN66@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv260[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN20@QueryInter:
; Line 176
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	$LN16@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ ; CMyComPtr<ICompressSetCoderProperties>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv279[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ ; CMyComPtr<ICompressSetCoderProperties>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICompressSetCoderProperties
	mov	edx, DWORD PTR tv279[ebp]
	push	edx
	mov	eax, DWORD PTR tv279[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67034[ebp], eax
	cmp	DWORD PTR ___result__$67034[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	eax, DWORD PTR ___result__$67034[ebp]
	jmp	$LN45@QueryInter
$LN15@QueryInter:
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN67@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR tv293[ebp], eax
	jmp	SHORT $LN68@QueryInter
$LN67@QueryInter:
	mov	DWORD PTR tv293[ebp], 0
$LN68@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv293[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN16@QueryInter:
; Line 177
	push	OFFSET _IID_ICompressWriteCoderProperties
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	$LN12@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ ; CMyComPtr<ICompressWriteCoderProperties>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv312[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ ; CMyComPtr<ICompressWriteCoderProperties>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICompressWriteCoderProperties
	mov	edx, DWORD PTR tv312[ebp]
	push	edx
	mov	eax, DWORD PTR tv312[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67042[ebp], eax
	cmp	DWORD PTR ___result__$67042[ebp], 0
	je	SHORT $LN11@QueryInter
	mov	eax, DWORD PTR ___result__$67042[ebp]
	jmp	$LN45@QueryInter
$LN11@QueryInter:
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN69@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	mov	DWORD PTR tv326[ebp], eax
	jmp	SHORT $LN70@QueryInter
$LN69@QueryInter:
	mov	DWORD PTR tv326[ebp], 0
$LN70@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv326[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN12@QueryInter:
; Line 179
	push	OFFSET _IID_ICryptoResetInitVector
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	$LN8@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ ; CMyComPtr<ICryptoResetInitVector>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv345[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ ; CMyComPtr<ICryptoResetInitVector>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICryptoResetInitVector
	mov	edx, DWORD PTR tv345[ebp]
	push	edx
	mov	eax, DWORD PTR tv345[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67050[ebp], eax
	cmp	DWORD PTR ___result__$67050[ebp], 0
	je	SHORT $LN7@QueryInter
	mov	eax, DWORD PTR ___result__$67050[ebp]
	jmp	$LN45@QueryInter
$LN7@QueryInter:
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN71@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	mov	DWORD PTR tv359[ebp], eax
	jmp	SHORT $LN72@QueryInter
$LN71@QueryInter:
	mov	DWORD PTR tv359[ebp], 0
$LN72@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv359[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN43@QueryInter
$LN8@QueryInter:
; Line 182
	push	OFFSET _IID_ICompressSetDecoderProperties2
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	$LN4@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ ; CMyComPtr<ICompressSetDecoderProperties2>::operator!
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv378[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::operator&
	mov	esi, esp
	push	eax
	push	OFFSET _IID_ICompressSetDecoderProperties2
	mov	edx, DWORD PTR tv378[ebp]
	push	edx
	mov	eax, DWORD PTR tv378[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67058[ebp], eax
	cmp	DWORD PTR ___result__$67058[ebp], 0
	je	SHORT $LN3@QueryInter
	mov	eax, DWORD PTR ___result__$67058[ebp]
	jmp	SHORT $LN45@QueryInter
$LN3@QueryInter:
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN73@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	DWORD PTR tv392[ebp], eax
	jmp	SHORT $LN74@QueryInter
$LN73@QueryInter:
	mov	DWORD PTR tv392[ebp], 0
$LN74@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv392[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN43@QueryInter
$LN4@QueryInter:
; Line 183
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN45@QueryInter
$LN43@QueryInter:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
	xor	eax, eax
$LN45@QueryInter:
	pop	edi
	pop	esi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ENDP ; CFilterCoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CFilterCoder@@UAGKXZ PROC			; CFilterCoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.h
; Line 184
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+60], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CFilterCoder@@UAGKXZ ENDP			; CFilterCoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCFilterCoder@@QAEPAXI@Z			; CFilterCoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CFilterCoder@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T68112 = -8						; size = 4
$T68111 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CFilterCoder@@UAGKXZ PROC			; CFilterCoder::Release, COMDAT
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+60], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+60]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68112[ebp], edx
	mov	eax, DWORD PTR $T68112[ebp]
	mov	DWORD PTR $T68111[ebp], eax
	cmp	DWORD PTR $T68111[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T68111[ebp]
	call	??_GCFilterCoder@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CFilterCoder@@UAGKXZ ENDP			; CFilterCoder::Release
_TEXT	ENDS
PUBLIC	??1CFilterCoder@@QAE@XZ				; CFilterCoder::~CFilterCoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCFilterCoder@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFilterCoder@@QAEPAXI@Z PROC			; CFilterCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFilterCoder@@QAE@XZ			; CFilterCoder::~CFilterCoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCFilterCoder@@QAEPAXI@Z ENDP			; CFilterCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetOutStreamSize@@6B@		; ICompressSetOutStreamSize::`vftable'
PUBLIC	??_R4ICompressSetOutStreamSize@@6B@		; ICompressSetOutStreamSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetOutStreamSize@@6B@
rdata$r	SEGMENT
??_R4ICompressSetOutStreamSize@@6B@ DD 00H		; ICompressSetOutStreamSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetOutStreamSize@@@8
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetOutStreamSize@@6B@
CONST	SEGMENT
??_7ICompressSetOutStreamSize@@6B@ DD FLAT:??_R4ICompressSetOutStreamSize@@6B@ ; ICompressSetOutStreamSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetOutStreamSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetOutStreamSize@@QAE@XZ PROC		; ICompressSetOutStreamSize::ICompressSetOutStreamSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetOutStreamSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetOutStreamSize@@QAE@XZ ENDP		; ICompressSetOutStreamSize::ICompressSetOutStreamSize
_TEXT	ENDS
PUBLIC	??_7ICompressInitEncoder@@6B@			; ICompressInitEncoder::`vftable'
PUBLIC	??_R4ICompressInitEncoder@@6B@			; ICompressInitEncoder::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressInitEncoder@@6B@
rdata$r	SEGMENT
??_R4ICompressInitEncoder@@6B@ DD 00H			; ICompressInitEncoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressInitEncoder@@@8
	DD	FLAT:??_R3ICompressInitEncoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressInitEncoder@@6B@
CONST	SEGMENT
??_7ICompressInitEncoder@@6B@ DD FLAT:??_R4ICompressInitEncoder@@6B@ ; ICompressInitEncoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressInitEncoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressInitEncoder@@QAE@XZ PROC			; ICompressInitEncoder::ICompressInitEncoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressInitEncoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressInitEncoder@@QAE@XZ ENDP			; ICompressInitEncoder::ICompressInitEncoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetInStream@@6B@			; ICompressSetInStream::`vftable'
PUBLIC	??_R4ICompressSetInStream@@6B@			; ICompressSetInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetInStream@@6B@
rdata$r	SEGMENT
??_R4ICompressSetInStream@@6B@ DD 00H			; ICompressSetInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetInStream@@@8
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetInStream@@6B@
CONST	SEGMENT
??_7ICompressSetInStream@@6B@ DD FLAT:??_R4ICompressSetInStream@@6B@ ; ICompressSetInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetInStream@@QAE@XZ PROC			; ICompressSetInStream::ICompressSetInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetInStream@@QAE@XZ ENDP			; ICompressSetInStream::ICompressSetInStream
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
_TEXT	ENDS
PUBLIC	??_7ICompressSetOutStream@@6B@			; ICompressSetOutStream::`vftable'
PUBLIC	??_R4ICompressSetOutStream@@6B@			; ICompressSetOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetOutStream@@6B@
rdata$r	SEGMENT
??_R4ICompressSetOutStream@@6B@ DD 00H			; ICompressSetOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetOutStream@@@8
	DD	FLAT:??_R3ICompressSetOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetOutStream@@6B@
CONST	SEGMENT
??_7ICompressSetOutStream@@6B@ DD FLAT:??_R4ICompressSetOutStream@@6B@ ; ICompressSetOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetOutStream@@QAE@XZ PROC			; ICompressSetOutStream::ICompressSetOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetOutStream@@QAE@XZ ENDP			; ICompressSetOutStream::ICompressSetOutStream
_TEXT	ENDS
PUBLIC	??_7ISequentialOutStream@@6B@			; ISequentialOutStream::`vftable'
PUBLIC	??_R4ISequentialOutStream@@6B@			; ISequentialOutStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialOutStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialOutStream@@6B@ DD 00H			; ISequentialOutStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialOutStream@@@8
	DD	FLAT:??_R3ISequentialOutStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialOutStream@@6B@
CONST	SEGMENT
??_7ISequentialOutStream@@6B@ DD FLAT:??_R4ISequentialOutStream@@6B@ ; ISequentialOutStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialOutStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialOutStream@@QAE@XZ PROC			; ISequentialOutStream::ISequentialOutStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialOutStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialOutStream@@QAE@XZ ENDP			; ISequentialOutStream::ISequentialOutStream
_TEXT	ENDS
PUBLIC	??_7IOutStreamFinish@@6B@			; IOutStreamFinish::`vftable'
PUBLIC	??_R4IOutStreamFinish@@6B@			; IOutStreamFinish::`RTTI Complete Object Locator'
;	COMDAT ??_R4IOutStreamFinish@@6B@
rdata$r	SEGMENT
??_R4IOutStreamFinish@@6B@ DD 00H			; IOutStreamFinish::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIOutStreamFinish@@@8
	DD	FLAT:??_R3IOutStreamFinish@@8
rdata$r	ENDS
;	COMDAT ??_7IOutStreamFinish@@6B@
CONST	SEGMENT
??_7IOutStreamFinish@@6B@ DD FLAT:??_R4IOutStreamFinish@@6B@ ; IOutStreamFinish::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IOutStreamFinish@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOutStreamFinish@@QAE@XZ PROC			; IOutStreamFinish::IOutStreamFinish, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IOutStreamFinish@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOutStreamFinish@@QAE@XZ ENDP			; IOutStreamFinish::IOutStreamFinish
_TEXT	ENDS
PUBLIC	??_7ICompressSetBufSize@@6B@			; ICompressSetBufSize::`vftable'
PUBLIC	??_R4ICompressSetBufSize@@6B@			; ICompressSetBufSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetBufSize@@6B@
rdata$r	SEGMENT
??_R4ICompressSetBufSize@@6B@ DD 00H			; ICompressSetBufSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetBufSize@@@8
	DD	FLAT:??_R3ICompressSetBufSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetBufSize@@6B@
CONST	SEGMENT
??_7ICompressSetBufSize@@6B@ DD FLAT:??_R4ICompressSetBufSize@@6B@ ; ICompressSetBufSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetBufSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetBufSize@@QAE@XZ PROC			; ICompressSetBufSize::ICompressSetBufSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetBufSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetBufSize@@QAE@XZ ENDP			; ICompressSetBufSize::ICompressSetBufSize
_TEXT	ENDS
PUBLIC	??_7ICryptoSetPassword@@6B@			; ICryptoSetPassword::`vftable'
PUBLIC	??_R4ICryptoSetPassword@@6B@			; ICryptoSetPassword::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICryptoSetPassword@@6B@
rdata$r	SEGMENT
??_R4ICryptoSetPassword@@6B@ DD 00H			; ICryptoSetPassword::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoSetPassword@@@8
	DD	FLAT:??_R3ICryptoSetPassword@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoSetPassword@@6B@
CONST	SEGMENT
??_7ICryptoSetPassword@@6B@ DD FLAT:??_R4ICryptoSetPassword@@6B@ ; ICryptoSetPassword::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoSetPassword@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoSetPassword@@QAE@XZ PROC			; ICryptoSetPassword::ICryptoSetPassword, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoSetPassword@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoSetPassword@@QAE@XZ ENDP			; ICryptoSetPassword::ICryptoSetPassword
_TEXT	ENDS
PUBLIC	??_7ICryptoProperties@@6B@			; ICryptoProperties::`vftable'
PUBLIC	??_R4ICryptoProperties@@6B@			; ICryptoProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICryptoProperties@@6B@
rdata$r	SEGMENT
??_R4ICryptoProperties@@6B@ DD 00H			; ICryptoProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoProperties@@@8
	DD	FLAT:??_R3ICryptoProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoProperties@@6B@
CONST	SEGMENT
??_7ICryptoProperties@@6B@ DD FLAT:??_R4ICryptoProperties@@6B@ ; ICryptoProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoProperties@@QAE@XZ PROC			; ICryptoProperties::ICryptoProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoProperties@@QAE@XZ ENDP			; ICryptoProperties::ICryptoProperties
_TEXT	ENDS
PUBLIC	??_7ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`vftable'
PUBLIC	??_R4ICompressSetCoderProperties@@6B@		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderProperties@@6B@ DD 00H		; ICompressSetCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderProperties@@@8
	DD	FLAT:??_R3ICompressSetCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressSetCoderProperties@@6B@ DD FLAT:??_R4ICompressSetCoderProperties@@6B@ ; ICompressSetCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderProperties@@QAE@XZ PROC		; ICompressSetCoderProperties::ICompressSetCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderProperties@@QAE@XZ ENDP		; ICompressSetCoderProperties::ICompressSetCoderProperties
_TEXT	ENDS
PUBLIC	??_7ICompressWriteCoderProperties@@6B@		; ICompressWriteCoderProperties::`vftable'
PUBLIC	??_R4ICompressWriteCoderProperties@@6B@		; ICompressWriteCoderProperties::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressWriteCoderProperties@@6B@
rdata$r	SEGMENT
??_R4ICompressWriteCoderProperties@@6B@ DD 00H		; ICompressWriteCoderProperties::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressWriteCoderProperties@@@8
	DD	FLAT:??_R3ICompressWriteCoderProperties@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressWriteCoderProperties@@6B@
CONST	SEGMENT
??_7ICompressWriteCoderProperties@@6B@ DD FLAT:??_R4ICompressWriteCoderProperties@@6B@ ; ICompressWriteCoderProperties::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressWriteCoderProperties@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressWriteCoderProperties@@QAE@XZ PROC		; ICompressWriteCoderProperties::ICompressWriteCoderProperties, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressWriteCoderProperties@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressWriteCoderProperties@@QAE@XZ ENDP		; ICompressWriteCoderProperties::ICompressWriteCoderProperties
_TEXT	ENDS
PUBLIC	??_7ICryptoResetInitVector@@6B@			; ICryptoResetInitVector::`vftable'
PUBLIC	??_R4ICryptoResetInitVector@@6B@		; ICryptoResetInitVector::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICryptoResetInitVector@@6B@
rdata$r	SEGMENT
??_R4ICryptoResetInitVector@@6B@ DD 00H			; ICryptoResetInitVector::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICryptoResetInitVector@@@8
	DD	FLAT:??_R3ICryptoResetInitVector@@8
rdata$r	ENDS
;	COMDAT ??_7ICryptoResetInitVector@@6B@
CONST	SEGMENT
??_7ICryptoResetInitVector@@6B@ DD FLAT:??_R4ICryptoResetInitVector@@6B@ ; ICryptoResetInitVector::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICryptoResetInitVector@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICryptoResetInitVector@@QAE@XZ PROC			; ICryptoResetInitVector::ICryptoResetInitVector, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICryptoResetInitVector@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICryptoResetInitVector@@QAE@XZ ENDP			; ICryptoResetInitVector::ICryptoResetInitVector
_TEXT	ENDS
PUBLIC	??_7ICompressSetDecoderProperties2@@6B@		; ICompressSetDecoderProperties2::`vftable'
PUBLIC	??_R4ICompressSetDecoderProperties2@@6B@	; ICompressSetDecoderProperties2::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetDecoderProperties2@@6B@
rdata$r	SEGMENT
??_R4ICompressSetDecoderProperties2@@6B@ DD 00H		; ICompressSetDecoderProperties2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetDecoderProperties2@@@8
	DD	FLAT:??_R3ICompressSetDecoderProperties2@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetDecoderProperties2@@6B@
CONST	SEGMENT
??_7ICompressSetDecoderProperties2@@6B@ DD FLAT:??_R4ICompressSetDecoderProperties2@@6B@ ; ICompressSetDecoderProperties2::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetDecoderProperties2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetDecoderProperties2@@QAE@XZ PROC		; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetDecoderProperties2@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetDecoderProperties2@@QAE@XZ ENDP		; ICompressSetDecoderProperties2::ICompressSetDecoderProperties2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ	; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>
xdata$x	SEGMENT
__ehfuncinfo$??1CFilterCoder@@QAE@XZ DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$??1CFilterCoder@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CFilterCoder@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1CFilterCoder@@QAE@XZ$8
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CFilterCoder@@QAE@XZ PROC				; CFilterCoder::~CFilterCoder
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFilterCoder@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CFilterCoder@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CFilterCoder@@6BICompressSetOutStreamSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CFilterCoder@@6BICompressInitEncoder@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CFilterCoder@@6BICompressSetInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CFilterCoder@@6BISequentialInStream@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CFilterCoder@@6BICompressSetOutStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], OFFSET ??_7CFilterCoder@@6BISequentialOutStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], OFFSET ??_7CFilterCoder@@6BIOutStreamFinish@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], OFFSET ??_7CFilterCoder@@6BICompressSetBufSize@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], OFFSET ??_7CFilterCoder@@6BICryptoSetPassword@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], OFFSET ??_7CFilterCoder@@6BICryptoProperties@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], OFFSET ??_7CFilterCoder@@6BICompressSetCoderProperties@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], OFFSET ??_7CFilterCoder@@6BICompressWriteCoderProperties@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], OFFSET ??_7CFilterCoder@@6BICryptoResetInitVector@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], OFFSET ??_7CFilterCoder@@6BICompressSetDecoderProperties2@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 8
; Line 65
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ ; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	call	??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::~CMyComPtr<ICompressSetDecoderProperties2>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ; CMyComPtr<ICryptoResetInitVector>::~CMyComPtr<ICryptoResetInitVector>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressWriteCoderProperties>::~CMyComPtr<ICompressWriteCoderProperties>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressSetCoderProperties>::~CMyComPtr<ICompressSetCoderProperties>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ ; CMyComPtr<ICryptoSetPassword>::~CMyComPtr<ICryptoSetPassword>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1CAlignedMidBuffer@@QAE@XZ		; CAlignedMidBuffer::~CAlignedMidBuffer
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CFilterCoder@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CAlignedMidBuffer@@QAE@XZ		; CAlignedMidBuffer::~CAlignedMidBuffer
__unwindfunclet$??1CFilterCoder@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	jmp	??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ ; CMyComPtr<ICryptoSetPassword>::~CMyComPtr<ICryptoSetPassword>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	jmp	??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressSetCoderProperties>::~CMyComPtr<ICompressSetCoderProperties>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	jmp	??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ; CMyComPtr<ICompressWriteCoderProperties>::~CMyComPtr<ICompressWriteCoderProperties>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	jmp	??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ; CMyComPtr<ICryptoResetInitVector>::~CMyComPtr<ICryptoResetInitVector>
__unwindfunclet$??1CFilterCoder@@QAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 144				; 00000090H
	jmp	??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::~CMyComPtr<ICompressSetDecoderProperties2>
__ehhandler$??1CFilterCoder@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CFilterCoder@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CFilterCoder@@QAE@XZ ENDP				; CFilterCoder::~CFilterCoder
EXTRN	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z:PROC ; WriteStream
EXTRN	?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z:PROC ; ReadStream
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv287 = -96						; size = 8
tv170 = -88						; size = 4
tv156 = -84						; size = 4
tv93 = -80						; size = 4
tv222 = -76						; size = 4
_i$67216 = -72						; size = 4
___result__$67214 = -68					; size = 4
___result__$67209 = -64					; size = 4
_remSize$67206 = -60					; size = 8
_size$67204 = -52					; size = 4
___result__$67188 = -48					; size = 4
_processedSize$67187 = -40				; size = 4
_endPos$67185 = -32					; size = 4
_pos$ = -28						; size = 4
_inputFinished$ = -21					; size = 1
_nowPos64$ = -16					; size = 8
___result__$67176 = -4					; size = 4
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
___formal$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CFilterCoder@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; CFilterCoder::Code
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init_and_Alloc@CFilterCoder@@AAEJXZ	; CFilterCoder::Init_and_Alloc
	mov	DWORD PTR ___result__$67176[ebp], eax
	cmp	DWORD PTR ___result__$67176[ebp], 0
	je	SHORT $LN23@Code
	mov	eax, DWORD PTR ___result__$67176[ebp]
	jmp	$LN24@Code
$LN23@Code:
; Line 72
	mov	DWORD PTR _nowPos64$[ebp], 0
	mov	DWORD PTR _nowPos64$[ebp+4], 0
; Line 73
	mov	BYTE PTR _inputFinished$[ebp], 0
; Line 74
	mov	DWORD PTR _pos$[ebp], 0
$LN22@Code:
; Line 76
	cmp	DWORD PTR _outSize$[ebp], 0
	je	SHORT $LN20@Code
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	DWORD PTR tv222[ebp], eax
	mov	ecx, DWORD PTR tv222[ebp]
	mov	edx, DWORD PTR _nowPos64$[ebp+4]
	cmp	edx, DWORD PTR [ecx+4]
	ja	$LN21@Code
	jb	SHORT $LN20@Code
	mov	eax, DWORD PTR tv222[ebp]
	mov	ecx, DWORD PTR _nowPos64$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	$LN21@Code
$LN20@Code:
; Line 78
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _endPos$67185[ebp], edx
; Line 80
	movzx	eax, BYTE PTR _inputFinished$[ebp]
	test	eax, eax
	jne	SHORT $LN19@Code
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	sub	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _processedSize$67187[ebp], edx
; Line 83
	lea	eax, DWORD PTR _processedSize$67187[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	add	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	call	?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z ; ReadStream
	mov	DWORD PTR ___result__$67188[ebp], eax
	cmp	DWORD PTR ___result__$67188[ebp], 0
	je	SHORT $LN18@Code
	mov	eax, DWORD PTR ___result__$67188[ebp]
	jmp	$LN24@Code
$LN18@Code:
; Line 84
	mov	ecx, DWORD PTR _pos$[ebp]
	add	ecx, DWORD PTR _processedSize$67187[ebp]
	mov	DWORD PTR _endPos$67185[ebp], ecx
; Line 85
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _endPos$67185[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+72]
	setne	cl
	mov	BYTE PTR _inputFinished$[ebp], cl
$LN19@Code:
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv93[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _endPos$67185[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR tv93[ebp]
	push	edx
	mov	eax, DWORD PTR tv93[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
; Line 90
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _endPos$67185[ebp]
	jbe	$LN17@Code
; Line 93
	movzx	ecx, BYTE PTR _inputFinished$[ebp]
	test	ecx, ecx
	je	SHORT $LN15@Code
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR [edx+72]
	jbe	SHORT $LN16@Code
$LN15@Code:
; Line 94
	mov	eax, -2147467259			; 80004005H
	jmp	$LN24@Code
$LN16@Code:
; Line 95
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+84]
	test	edx, edx
	jne	SHORT $LN13@Code
; Line 96
	mov	eax, 1
	jmp	$LN24@Code
$LN13@Code:
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _endPos$67185[ebp]
	mov	BYTE PTR [ecx+edx], 0
; Line 100
	mov	eax, DWORD PTR _endPos$67185[ebp]
	add	eax, 1
	mov	DWORD PTR _endPos$67185[ebp], eax
	mov	ecx, DWORD PTR _endPos$67185[ebp]
	cmp	ecx, DWORD PTR _pos$[ebp]
	jne	SHORT $LN13@Code
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv156[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR tv156[ebp]
	push	edx
	mov	eax, DWORD PTR tv156[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _pos$[ebp], eax
	je	SHORT $LN17@Code
; Line 103
	mov	eax, -2147467259			; 80004005H
	jmp	$LN24@Code
$LN17@Code:
; Line 106
	cmp	DWORD PTR _endPos$67185[ebp], 0
	jne	SHORT $LN9@Code
; Line 107
	xor	eax, eax
	jmp	$LN24@Code
$LN9@Code:
; Line 109
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN26@Code
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN27@Code
$LN26@Code:
	mov	ecx, DWORD PTR _endPos$67185[ebp]
	mov	DWORD PTR tv170[ebp], ecx
$LN27@Code:
	mov	edx, DWORD PTR tv170[ebp]
	mov	DWORD PTR _size$67204[ebp], edx
; Line 110
	cmp	DWORD PTR _outSize$[ebp], 0
	je	SHORT $LN8@Code
; Line 112
	mov	eax, DWORD PTR _outSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _nowPos64$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sbb	edx, DWORD PTR _nowPos64$[ebp+4]
	mov	DWORD PTR _remSize$67206[ebp], ecx
	mov	DWORD PTR _remSize$67206[ebp+4], edx
; Line 113
	mov	eax, DWORD PTR _size$67204[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], ecx
	mov	edx, DWORD PTR tv287[ebp+4]
	cmp	edx, DWORD PTR _remSize$67206[ebp+4]
	jb	SHORT $LN8@Code
	ja	SHORT $LN29@Code
	mov	eax, DWORD PTR tv287[ebp]
	cmp	eax, DWORD PTR _remSize$67206[ebp]
	jbe	SHORT $LN8@Code
$LN29@Code:
; Line 114
	mov	ecx, DWORD PTR _remSize$67206[ebp]
	mov	DWORD PTR _size$67204[ebp], ecx
$LN8@Code:
; Line 117
	mov	edx, DWORD PTR _size$67204[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	call	?WriteStream@@YGJPAUISequentialOutStream@@PBXI@Z ; WriteStream
	mov	DWORD PTR ___result__$67209[ebp], eax
	cmp	DWORD PTR ___result__$67209[ebp], 0
	je	SHORT $LN6@Code
	mov	eax, DWORD PTR ___result__$67209[ebp]
	jmp	$LN24@Code
$LN6@Code:
; Line 118
	mov	eax, DWORD PTR _size$67204[ebp]
	xor	ecx, ecx
	add	eax, DWORD PTR _nowPos64$[ebp]
	adc	ecx, DWORD PTR _nowPos64$[ebp+4]
	mov	DWORD PTR _nowPos64$[ebp], eax
	mov	DWORD PTR _nowPos64$[ebp+4], ecx
; Line 120
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN5@Code
; Line 121
	xor	eax, eax
	jmp	SHORT $LN24@Code
$LN5@Code:
; Line 123
	cmp	DWORD PTR _progress$[ebp], 0
	je	SHORT $LN4@Code
; Line 124
	mov	esi, esp
	lea	edx, DWORD PTR _nowPos64$[ebp]
	push	edx
	lea	eax, DWORD PTR _nowPos64$[ebp]
	push	eax
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$67214[ebp], eax
	cmp	DWORD PTR ___result__$67214[ebp], 0
	je	SHORT $LN4@Code
	mov	eax, DWORD PTR ___result__$67214[ebp]
	jmp	SHORT $LN24@Code
$LN4@Code:
; Line 126
	mov	DWORD PTR _i$67216[ebp], 0
$LN2@Code:
; Line 127
	mov	edx, DWORD PTR _pos$[ebp]
	cmp	edx, DWORD PTR _endPos$67185[ebp]
	jae	SHORT $LN1@Code
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	edx, DWORD PTR _i$67216[ebp]
	mov	esi, DWORD PTR _pos$[ebp]
	mov	cl, BYTE PTR [ecx+esi]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _i$67216[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67216[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN2@Code
$LN1@Code:
; Line 129
	mov	ecx, DWORD PTR _i$67216[ebp]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 130
	jmp	$LN22@Code
$LN21@Code:
; Line 132
	xor	eax, eax
$LN24@Code:
; Line 133
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@Code
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN33@Code:
	DD	2
	DD	$LN32@Code
$LN32@Code:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN30@Code
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN31@Code
$LN31@Code:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN30@Code:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
?Code@CFilterCoder@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; CFilterCoder::Code
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ; CMyComPtr<ISequentialOutStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_outStream$ = 12					; size = 4
?SetOutStream@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z PROC ; CFilterCoder::SetOutStream
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ; CMyComPtr<ISequentialOutStream>::operator=
; Line 142
	xor	eax, eax
; Line 143
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetOutStream@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z ENDP ; CFilterCoder::SetOutStream
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReleaseOutStream@CFilterCoder@@UAGJXZ PROC		; CFilterCoder::ReleaseOutStream
; Line 146
	push	ebp
	mov	ebp, esp
; Line 147
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ; CMyComPtr<ISequentialOutStream>::Release
; Line 148
	xor	eax, eax
; Line 149
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?ReleaseOutStream@CFilterCoder@@UAGJXZ ENDP		; CFilterCoder::ReleaseOutStream
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator->
PUBLIC	?Flush2@CFilterCoder@@AAEJXZ			; CFilterCoder::Flush2
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv129 = -60						; size = 4
tv81 = -56						; size = 4
tv186 = -52						; size = 8
_i$67251 = -44						; size = 4
_num$67250 = -40					; size = 4
___result__$67247 = -36					; size = 4
_res$67243 = -32					; size = 4
_processed$67242 = -24					; size = 4
_rem$67238 = -16					; size = 8
_num$67236 = -8						; size = 4
_this$ = -4						; size = 4
?Flush2@CFilterCoder@@AAEJXZ PROC			; CFilterCoder::Flush2
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN11@Flush2:
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	$LN10@Flush2
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR _num$67236[ebp], edx
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+85]
	test	ecx, ecx
	je	SHORT $LN9@Flush2
; Line 158
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+88]
	sub	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [edx+92]
	sbb	edx, DWORD PTR [eax+100]
	mov	DWORD PTR _rem$67238[ebp], ecx
	mov	DWORD PTR _rem$67238[ebp+4], edx
; Line 159
	mov	eax, DWORD PTR _num$67236[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv186[ebp], eax
	mov	DWORD PTR tv186[ebp+4], ecx
	mov	edx, DWORD PTR tv186[ebp+4]
	cmp	edx, DWORD PTR _rem$67238[ebp+4]
	jb	SHORT $LN8@Flush2
	ja	SHORT $LN16@Flush2
	mov	eax, DWORD PTR tv186[ebp]
	cmp	eax, DWORD PTR _rem$67238[ebp]
	jbe	SHORT $LN8@Flush2
$LN16@Flush2:
; Line 160
	mov	ecx, DWORD PTR _rem$67238[ebp]
	mov	DWORD PTR _num$67236[ebp], ecx
$LN8@Flush2:
; Line 161
	cmp	DWORD PTR _num$67236[ebp], 0
	jne	SHORT $LN9@Flush2
; Line 162
	mov	eax, 536870928				; 20000010H
	jmp	$LN12@Flush2
$LN9@Flush2:
; Line 165
	mov	DWORD PTR _processed$67242[ebp], 0
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 108				; 0000006cH
	call	??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ; CMyComPtr<ISequentialOutStream>::operator->
	mov	DWORD PTR tv81[ebp], eax
	mov	esi, esp
	lea	edx, DWORD PTR _processed$67242[ebp]
	push	edx
	mov	eax, DWORD PTR _num$67236[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+116]
	push	edx
	mov	ecx, DWORD PTR tv81[ebp]
	push	ecx
	mov	edx, DWORD PTR tv81[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$67243[ebp], eax
; Line 167
	cmp	DWORD PTR _processed$67242[ebp], 0
	jne	SHORT $LN6@Flush2
; Line 168
	cmp	DWORD PTR _res$67243[ebp], 0
	je	SHORT $LN14@Flush2
	mov	edx, DWORD PTR _res$67243[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN15@Flush2
$LN14@Flush2:
	mov	DWORD PTR tv129[ebp], -2147467259	; 80004005H
$LN15@Flush2:
	mov	eax, DWORD PTR tv129[ebp]
	jmp	$LN12@Flush2
$LN6@Flush2:
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	add	ecx, DWORD PTR _processed$67242[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], ecx
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	sub	ecx, DWORD PTR _processed$67242[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], ecx
; Line 172
	mov	eax, DWORD PTR _processed$67242[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+96]
	adc	ecx, DWORD PTR [edx+100]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], eax
	mov	DWORD PTR [edx+100], ecx
; Line 173
	mov	eax, DWORD PTR _res$67243[ebp]
	mov	DWORD PTR ___result__$67247[ebp], eax
	cmp	DWORD PTR ___result__$67247[ebp], 0
	je	SHORT $LN5@Flush2
	mov	eax, DWORD PTR ___result__$67247[ebp]
	jmp	SHORT $LN12@Flush2
$LN5@Flush2:
; Line 174
	jmp	$LN11@Flush2
$LN10@Flush2:
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN4@Flush2
; Line 178
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	sub	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR _num$67250[ebp], ecx
; Line 179
	mov	DWORD PTR _i$67251[ebp], 0
	jmp	SHORT $LN3@Flush2
$LN2@Flush2:
	mov	edx, DWORD PTR _i$67251[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67251[ebp], edx
$LN3@Flush2:
	mov	eax, DWORD PTR _i$67251[ebp]
	cmp	eax, DWORD PTR _num$67250[ebp]
	jae	SHORT $LN1@Flush2
; Line 180
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	add	edx, DWORD PTR _i$67251[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
	mov	esi, DWORD PTR _i$67251[ebp]
	mov	cl, BYTE PTR [edx+ecx]
	mov	BYTE PTR [eax+esi], cl
	jmp	SHORT $LN2@Flush2
$LN1@Flush2:
; Line 181
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _num$67250[ebp]
	mov	DWORD PTR [edx+112], eax
; Line 182
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], 0
$LN4@Flush2:
; Line 185
	xor	eax, eax
$LN12@Flush2:
; Line 186
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@Flush2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN19@Flush2:
	DD	1
	DD	$LN18@Flush2
$LN18@Flush2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN17@Flush2
$LN17@Flush2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?Flush2@CFilterCoder@@AAEJXZ ENDP			; CFilterCoder::Flush2
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv148 = -12						; size = 4
_num$67269 = -8						; size = 4
___result__$67266 = -4					; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Write@CFilterCoder@@UAGJPBXIPAI@Z PROC			; CFilterCoder::Write
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 190
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN8@Write
; Line 191
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN8@Write:
; Line 193
	cmp	DWORD PTR _size$[ebp], 0
	je	$LN7@Write
; Line 195
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 24					; 00000018H
	call	?Flush2@CFilterCoder@@AAEJXZ		; CFilterCoder::Flush2
	mov	DWORD PTR ___result__$67266[ebp], eax
	cmp	DWORD PTR ___result__$67266[ebp], 0
	je	SHORT $LN6@Write
	mov	eax, DWORD PTR ___result__$67266[ebp]
	jmp	$LN10@Write
$LN6@Write:
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+88]
	cmp	eax, DWORD PTR [edx+48]
	je	SHORT $LN5@Write
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+48]
	sub	eax, DWORD PTR [edx+88]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??$MyMin@I@@YGIII@Z			; MyMin<unsigned int>
	mov	DWORD PTR _num$67269[ebp], eax
; Line 204
	mov	edx, DWORD PTR _num$67269[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+88]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 205
	mov	ecx, DWORD PTR _size$[ebp]
	sub	ecx, DWORD PTR _num$67269[ebp]
	mov	DWORD PTR _size$[ebp], ecx
; Line 206
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _num$67269[ebp]
	mov	DWORD PTR _data$[ebp], edx
; Line 207
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN4@Write
; Line 208
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _num$67269[ebp]
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [edx], ecx
$LN4@Write:
; Line 209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	add	ecx, DWORD PTR _num$67269[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], ecx
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+88]
	cmp	edx, DWORD PTR [ecx+48]
	je	SHORT $LN5@Write
; Line 211
	jmp	$LN8@Write
$LN5@Write:
; Line 215
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv148[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR tv148[ebp]
	push	ecx
	mov	edx, DWORD PTR tv148[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], eax
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	jne	SHORT $LN2@Write
; Line 218
	jmp	SHORT $LN7@Write
$LN2@Write:
; Line 219
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+96]
	cmp	eax, DWORD PTR [edx+88]
	jbe	SHORT $LN1@Write
; Line 222
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 0
; Line 223
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN10@Write
$LN1@Write:
; Line 225
	jmp	$LN8@Write
$LN7@Write:
; Line 227
	xor	eax, eax
$LN10@Write:
; Line 228
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Write@CFilterCoder@@UAGJPBXIPAI@Z ENDP			; CFilterCoder::Write
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ	; CMyComPtr<IOutStreamFinish>::~CMyComPtr<IOutStreamFinish>
PUBLIC	??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ ; CMyComPtr<IOutStreamFinish>::operator->
PUBLIC	??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ ; CMyComPtr<IOutStreamFinish>::operator IOutStreamFinish *
PUBLIC	??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z ; CMyComPtr<ISequentialOutStream>::QueryInterface<IOutStreamFinish>
PUBLIC	??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ ; CMyComPtr<IOutStreamFinish>::operator&
PUBLIC	??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ	; CMyComPtr<IOutStreamFinish>::CMyComPtr<IOutStreamFinish>
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv212 = -36						; size = 4
tv177 = -32						; size = 4
tv78 = -28						; size = 4
$T68188 = -24						; size = 4
$T68187 = -20						; size = 4
_finish$ = -12						; size = 4
___result__$67283 = -4					; size = 4
_this$ = 8						; size = 4
?OutStreamFinish@CFilterCoder@@UAGJXZ PROC		; CFilterCoder::OutStreamFinish
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
$LN14@OutStreamF:
; Line 234
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 28					; 0000001cH
	call	?Flush2@CFilterCoder@@AAEJXZ		; CFilterCoder::Flush2
	mov	DWORD PTR ___result__$67283[ebp], eax
	cmp	DWORD PTR ___result__$67283[ebp], 0
	je	SHORT $LN12@OutStreamF
	mov	eax, DWORD PTR ___result__$67283[ebp]
	jmp	$LN15@OutStreamF
$LN12@OutStreamF:
; Line 235
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jne	SHORT $LN11@OutStreamF
; Line 236
	jmp	$LN13@OutStreamF
$LN11@OutStreamF:
; Line 237
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv78[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	mov	eax, DWORD PTR tv78[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], eax
; Line 238
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+92], 0
	jne	SHORT $LN10@OutStreamF
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR [eax+92], edx
	jmp	$LN9@OutStreamF
$LN10@OutStreamF:
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+92]
	cmp	edx, DWORD PTR [ecx+84]
	jbe	$LN9@OutStreamF
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+92]
	cmp	edx, DWORD PTR [ecx+44]
	jbe	SHORT $LN7@OutStreamF
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 246
	mov	eax, -2147467259			; 80004005H
	jmp	$LN15@OutStreamF
$LN7@OutStreamF:
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+56]
	test	edx, edx
	jne	SHORT $LN6@OutStreamF
; Line 250
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
; Line 251
	mov	eax, 1
	jmp	$LN15@OutStreamF
$LN6@OutStreamF:
; Line 253
	jmp	SHORT $LN5@OutStreamF
$LN4@OutStreamF:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], edx
$LN5@OutStreamF:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+84]
	cmp	eax, DWORD PTR [edx+92]
	jae	SHORT $LN3@OutStreamF
; Line 254
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	BYTE PTR [edx+ecx], 0
	jmp	SHORT $LN4@OutStreamF
$LN3@OutStreamF:
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 120				; 00000078H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv177[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR tv177[ebp]
	push	eax
	mov	ecx, DWORD PTR tv177[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+92], eax
; Line 256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+92]
	cmp	ecx, DWORD PTR [eax+84]
	je	SHORT $LN9@OutStreamF
; Line 257
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN15@OutStreamF
$LN9@OutStreamF:
; Line 259
	jmp	$LN14@OutStreamF
$LN13@OutStreamF:
; Line 261
	lea	ecx, DWORD PTR _finish$[ebp]
	call	??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ ; CMyComPtr<IOutStreamFinish>::CMyComPtr<IOutStreamFinish>
; Line 262
	lea	ecx, DWORD PTR _finish$[ebp]
	call	??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ ; CMyComPtr<IOutStreamFinish>::operator&
	push	eax
	push	OFFSET _IID_IOutStreamFinish
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z ; CMyComPtr<ISequentialOutStream>::QueryInterface<IOutStreamFinish>
; Line 263
	lea	ecx, DWORD PTR _finish$[ebp]
	call	??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ ; CMyComPtr<IOutStreamFinish>::operator IOutStreamFinish *
	test	eax, eax
	je	SHORT $LN1@OutStreamF
; Line 264
	lea	ecx, DWORD PTR _finish$[ebp]
	call	??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ ; CMyComPtr<IOutStreamFinish>::operator->
	mov	DWORD PTR tv212[ebp], eax
	mov	edx, DWORD PTR tv212[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv212[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T68187[ebp], eax
	lea	ecx, DWORD PTR _finish$[ebp]
	call	??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ ; CMyComPtr<IOutStreamFinish>::~CMyComPtr<IOutStreamFinish>
	mov	eax, DWORD PTR $T68187[ebp]
	jmp	SHORT $LN15@OutStreamF
$LN1@OutStreamF:
; Line 265
	mov	DWORD PTR $T68188[ebp], 0
	lea	ecx, DWORD PTR _finish$[ebp]
	call	??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ ; CMyComPtr<IOutStreamFinish>::~CMyComPtr<IOutStreamFinish>
	mov	eax, DWORD PTR $T68188[ebp]
$LN15@OutStreamF:
; Line 266
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@OutStreamF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN19@OutStreamF:
	DD	1
	DD	$LN18@OutStreamF
$LN18@OutStreamF:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN17@OutStreamF
$LN17@OutStreamF:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
?OutStreamFinish@CFilterCoder@@UAGJXZ ENDP		; CFilterCoder::OutStreamFinish
_TEXT	ENDS
PUBLIC	?InitSpecVars@CFilterCoder@@AAEXXZ		; CFilterCoder::InitSpecVars
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?InitEncoder@CFilterCoder@@UAGJXZ PROC			; CFilterCoder::InitEncoder
; Line 271
	push	ebp
	mov	ebp, esp
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 8
	call	?InitSpecVars@CFilterCoder@@AAEXXZ	; CFilterCoder::InitSpecVars
; Line 273
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 8
	call	?Init_and_Alloc@CFilterCoder@@AAEJXZ	; CFilterCoder::Init_and_Alloc
; Line 274
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?InitEncoder@CFilterCoder@@UAGJXZ ENDP			; CFilterCoder::InitEncoder
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?InitSpecVars@CFilterCoder@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InitSpecVars@CFilterCoder@@AAEXXZ PROC			; CFilterCoder::InitSpecVars, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.h
; Line 106
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 108
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], 0
; Line 109
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], 0
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+85], 0
; Line 112
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], 0
	mov	DWORD PTR [ecx+92], 0
; Line 113
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 0
	mov	DWORD PTR [edx+100], 0
; Line 114
	mov	esp, ebp
	pop	ebp
	ret	0
?InitSpecVars@CFilterCoder@@AAEXXZ ENDP			; CFilterCoder::InitSpecVars
_TEXT	ENDS
PUBLIC	?Init_NoSubFilterInit@CFilterCoder@@QAEJXZ	; CFilterCoder::Init_NoSubFilterInit
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init_NoSubFilterInit@CFilterCoder@@QAEJXZ PROC		; CFilterCoder::Init_NoSubFilterInit
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\filtercoder.cpp
; Line 277
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 278
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitSpecVars@CFilterCoder@@AAEXXZ	; CFilterCoder::InitSpecVars
; Line 279
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Alloc@CFilterCoder@@AAEJXZ		; CFilterCoder::Alloc
; Line 280
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init_NoSubFilterInit@CFilterCoder@@QAEJXZ ENDP		; CFilterCoder::Init_NoSubFilterInit
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
_outSize$ = 12						; size = 4
?SetOutStreamSize@CFilterCoder@@UAGJPB_K@Z PROC		; CFilterCoder::SetOutStreamSize
; Line 283
	push	ebp
	mov	ebp, esp
; Line 284
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?InitSpecVars@CFilterCoder@@AAEXXZ	; CFilterCoder::InitSpecVars
; Line 285
	cmp	DWORD PTR _outSize$[ebp], 0
	je	SHORT $LN1@SetOutStre
; Line 287
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _outSize$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+84], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+88], ecx
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+81], 1
$LN1@SetOutStre:
; Line 290
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?Init_and_Alloc@CFilterCoder@@AAEJXZ	; CFilterCoder::Init_and_Alloc
; Line 291
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetOutStreamSize@CFilterCoder@@UAGJPB_K@Z ENDP		; CFilterCoder::SetOutStreamSize
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
?SetInStream@CFilterCoder@@UAGJPAUISequentialInStream@@@Z PROC ; CFilterCoder::SetInStream
; Line 296
	push	ebp
	mov	ebp, esp
; Line 297
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 298
	xor	eax, eax
; Line 299
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetInStream@CFilterCoder@@UAGJPAUISequentialInStream@@@Z ENDP ; CFilterCoder::SetInStream
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReleaseInStream@CFilterCoder@@UAGJXZ PROC		; CFilterCoder::ReleaseInStream
; Line 302
	push	ebp
	mov	ebp, esp
; Line 303
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Line 304
	xor	eax, eax
; Line 305
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?ReleaseInStream@CFilterCoder@@UAGJXZ ENDP		; CFilterCoder::ReleaseInStream
_TEXT	ENDS
PUBLIC	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv275 = -56						; size = 4
tv264 = -52						; size = 4
tv213 = -48						; size = 4
tv325 = -44						; size = 8
___result__$67390 = -36					; size = 4
_res$67388 = -32					; size = 4
_readSize$67387 = -24					; size = 4
_i$67383 = -16						; size = 4
_num$67382 = -12					; size = 4
_rem$67377 = -8						; size = 8
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CFilterCoder@@UAGJPAXIPAI@Z PROC			; CFilterCoder::Read
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 310
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN21@Read
; Line 311
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN21@Read:
; Line 313
	cmp	DWORD PTR _size$[ebp], 0
	je	$LN20@Read
; Line 315
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	$LN19@Read
; Line 317
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _size$[ebp]
	cmp	eax, DWORD PTR [edx+104]
	jbe	SHORT $LN18@Read
; Line 318
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR _size$[ebp], edx
$LN18@Read:
; Line 319
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+69]
	test	ecx, ecx
	je	SHORT $LN17@Read
; Line 321
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+72]
	sub	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR [edx+76]
	sbb	edx, DWORD PTR [eax+84]
	mov	DWORD PTR _rem$67377[ebp], ecx
	mov	DWORD PTR _rem$67377[ebp+4], edx
; Line 322
	mov	eax, DWORD PTR _size$[ebp]
	xor	ecx, ecx
	mov	DWORD PTR tv325[ebp], eax
	mov	DWORD PTR tv325[ebp+4], ecx
	mov	edx, DWORD PTR tv325[ebp+4]
	cmp	edx, DWORD PTR _rem$67377[ebp+4]
	jb	SHORT $LN17@Read
	ja	SHORT $LN26@Read
	mov	eax, DWORD PTR tv325[ebp]
	cmp	eax, DWORD PTR _rem$67377[ebp]
	jbe	SHORT $LN17@Read
$LN26@Read:
; Line 323
	mov	ecx, DWORD PTR _rem$67377[ebp]
	mov	DWORD PTR _size$[ebp], ecx
$LN17@Read:
; Line 325
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+100]
	push	ecx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 326
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	add	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], edx
; Line 327
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	sub	edx, DWORD PTR _size$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], edx
; Line 328
	mov	ecx, DWORD PTR _size$[ebp]
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [eax+80]
	adc	edx, DWORD PTR [eax+84]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], ecx
	mov	DWORD PTR [eax+84], edx
; Line 329
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN15@Read
; Line 330
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx], edx
$LN15@Read:
; Line 331
	jmp	$LN20@Read
$LN19@Read:
; Line 334
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN14@Read
; Line 336
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+96]
	sub	eax, DWORD PTR [edx+100]
	mov	DWORD PTR _num$67382[ebp], eax
; Line 337
	mov	DWORD PTR _i$67383[ebp], 0
	jmp	SHORT $LN13@Read
$LN12@Read:
	mov	ecx, DWORD PTR _i$67383[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67383[ebp], ecx
$LN13@Read:
	mov	edx, DWORD PTR _i$67383[ebp]
	cmp	edx, DWORD PTR _num$67382[ebp]
	jae	SHORT $LN11@Read
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	add	ecx, DWORD PTR _i$67383[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+52]
	mov	esi, DWORD PTR _i$67383[ebp]
	mov	al, BYTE PTR [ecx+eax]
	mov	BYTE PTR [edx+esi], al
	jmp	SHORT $LN12@Read
$LN11@Read:
; Line 339
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _num$67382[ebp]
	mov	DWORD PTR [ecx+96], edx
; Line 340
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
$LN14@Read:
; Line 344
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+56]
	sub	eax, DWORD PTR [edx+96]
	mov	DWORD PTR _readSize$67387[ebp], eax
; Line 345
	lea	ecx, DWORD PTR _readSize$67387[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+96]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
	push	eax
	call	?ReadStream@@YGJPAUISequentialInStream@@PAXPAI@Z ; ReadStream
	mov	DWORD PTR _res$67388[ebp], eax
; Line 346
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	add	eax, DWORD PTR _readSize$67387[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], eax
; Line 347
	mov	edx, DWORD PTR _res$67388[ebp]
	mov	DWORD PTR ___result__$67390[ebp], edx
	cmp	DWORD PTR ___result__$67390[ebp], 0
	je	SHORT $LN10@Read
	mov	eax, DWORD PTR ___result__$67390[ebp]
	jmp	$LN23@Read
$LN10@Read:
; Line 350
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv213[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	mov	ecx, DWORD PTR tv213[ebp]
	push	ecx
	mov	edx, DWORD PTR tv213[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+104], eax
; Line 352
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jne	SHORT $LN9@Read
; Line 354
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+96], 0
	jne	SHORT $LN8@Read
; Line 355
	jmp	$LN20@Read
$LN8@Read:
; Line 357
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR [edx+104], ecx
; Line 358
	jmp	$LN21@Read
$LN9@Read:
; Line 361
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	cmp	ecx, DWORD PTR [eax+96]
	jbe	$LN7@Read
; Line 364
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	cmp	ecx, DWORD PTR [eax+56]
	jbe	SHORT $LN6@Read
; Line 365
	mov	eax, -2147467259			; 80004005H
	jmp	$LN23@Read
$LN6@Read:
; Line 366
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+68]
	test	eax, eax
	jne	SHORT $LN4@Read
; Line 367
	mov	eax, 1
	jmp	$LN23@Read
$LN4@Read:
; Line 370
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	BYTE PTR [edx+ecx], 0
; Line 371
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	add	eax, 1
	mov	DWORD PTR tv264[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv264[ebp]
	mov	DWORD PTR [ecx+96], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv264[ebp]
	cmp	ecx, DWORD PTR [eax+104]
	jne	SHORT $LN4@Read
; Line 373
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	call	??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ; CMyComPtr<ICompressFilter>::operator->
	mov	DWORD PTR tv275[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR tv275[ebp]
	push	eax
	mov	ecx, DWORD PTR tv275[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+104], eax
; Line 374
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	cmp	ecx, DWORD PTR [eax+96]
	je	SHORT $LN7@Read
; Line 375
	mov	eax, -2147467259			; 80004005H
	jmp	SHORT $LN23@Read
$LN7@Read:
; Line 377
	jmp	$LN21@Read
$LN20@Read:
; Line 379
	xor	eax, eax
$LN23@Read:
; Line 380
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN29@Read:
	DD	1
	DD	$LN28@Read
$LN28@Read:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN27@Read
$LN27@Read:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?Read@CFilterCoder@@UAGJPAXIPAI@Z ENDP			; CFilterCoder::Read
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ ; CMyComPtr<ICryptoSetPassword>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?CryptoSetPassword@CFilterCoder@@UAGJPBEI@Z PROC	; CFilterCoder::CryptoSetPassword
; Line 386
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ ; CMyComPtr<ICryptoSetPassword>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CryptoSetPassword@CFilterCoder@@UAGJPBEI@Z ENDP	; CFilterCoder::CryptoSetPassword
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?SetKey@CFilterCoder@@UAGJPBEI@Z PROC			; CFilterCoder::SetKey
; Line 389
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetKey@CFilterCoder@@UAGJPBEI@Z ENDP			; CFilterCoder::SetKey
; Function compile flags: /Odtp /RTCsu
tv69 = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?SetInitVector@CFilterCoder@@UAGJPBEI@Z PROC		; CFilterCoder::SetInitVector
; Line 392
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ; CMyComPtr<ICryptoProperties>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetInitVector@CFilterCoder@@UAGJPBEI@Z ENDP		; CFilterCoder::SetInitVector
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ ; CMyComPtr<ICompressSetCoderProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -4						; size = 4
_this$ = 8						; size = 4
_propIDs$ = 12						; size = 4
_properties$ = 16					; size = 4
_numProperties$ = 20					; size = 4
?SetCoderProperties@CFilterCoder@@UAGJPBKPBUtagPROPVARIANT@@I@Z PROC ; CFilterCoder::SetCoderProperties
; Line 401
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ ; CMyComPtr<ICompressSetCoderProperties>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _numProperties$[ebp]
	push	eax
	mov	ecx, DWORD PTR _properties$[ebp]
	push	ecx
	mov	edx, DWORD PTR _propIDs$[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	push	eax
	mov	ecx, DWORD PTR tv69[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetCoderProperties@CFilterCoder@@UAGJPBKPBUtagPROPVARIANT@@I@Z ENDP ; CFilterCoder::SetCoderProperties
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ ; CMyComPtr<ICompressWriteCoderProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -4						; size = 4
_this$ = 8						; size = 4
_outStream$ = 12					; size = 4
?WriteCoderProperties@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z PROC ; CFilterCoder::WriteCoderProperties
; Line 404
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ ; CMyComPtr<ICompressWriteCoderProperties>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv69[ebp]
	push	ecx
	mov	edx, DWORD PTR tv69[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?WriteCoderProperties@CFilterCoder@@UAGJPAUISequentialOutStream@@@Z ENDP ; CFilterCoder::WriteCoderProperties
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ ; CMyComPtr<ICryptoResetInitVector>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -4						; size = 4
_this$ = 8						; size = 4
?ResetInitVector@CFilterCoder@@UAGJXZ PROC		; CFilterCoder::ResetInitVector
; Line 412
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ ; CMyComPtr<ICryptoResetInitVector>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ResetInitVector@CFilterCoder@@UAGJXZ ENDP		; CFilterCoder::ResetInitVector
_TEXT	ENDS
PUBLIC	??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv69 = -4						; size = 4
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?SetDecoderProperties2@CFilterCoder@@UAGJPBEI@Z PROC	; CFilterCoder::SetDecoderProperties2
; Line 418
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ ; CMyComPtr<ICompressSetDecoderProperties2>::operator->
	mov	DWORD PTR tv69[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	eax, DWORD PTR tv69[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetDecoderProperties2@CFilterCoder@@UAGJPBEI@Z ENDP	; CFilterCoder::SetDecoderProperties2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialInStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ PROC ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UISequentialInStream@@@@QBEPAUISequentialInStream@@XZ ENDP ; CMyComPtr<ISequentialInStream>::operator ISequentialInStream *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialOutStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialOutStream>::~CMyComPtr<ISequentialOutStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialOutStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialOutStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialOutStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ PROC ; CMyComPtr<ISequentialOutStream>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UISequentialOutStream@@@@QBEPAUISequentialOutStream@@XZ ENDP ; CMyComPtr<ISequentialOutStream>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialOutStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator@2
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator@2:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator@2
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator@2:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialOutStream@@@@QAEPAUISequentialOutStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialOutStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ PROC	; CMyComPtr<ICryptoSetPassword>::CMyComPtr<ICryptoSetPassword>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoSetPassword>::CMyComPtr<ICryptoSetPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ PROC	; CMyComPtr<ICryptoSetPassword>::~CMyComPtr<ICryptoSetPassword>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICryptoSetPassword@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoSetPassword>::~CMyComPtr<ICryptoSetPassword>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ PROC ; CMyComPtr<ICryptoSetPassword>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICryptoSetPassword@@@@QAEPAPAUICryptoSetPassword@@XZ ENDP ; CMyComPtr<ICryptoSetPassword>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ PROC ; CMyComPtr<ICryptoSetPassword>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICryptoSetPassword@@@@QBEPAUICryptoSetPassword@@XZ ENDP ; CMyComPtr<ICryptoSetPassword>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ PROC	; CMyComPtr<ICryptoSetPassword>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICryptoSetPassword@@@@QBE_NXZ ENDP	; CMyComPtr<ICryptoSetPassword>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ PROC	; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoProperties>::CMyComPtr<ICryptoProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ PROC	; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICryptoProperties@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoProperties>::~CMyComPtr<ICryptoProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ PROC ; CMyComPtr<ICryptoProperties>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICryptoProperties@@@@QAEPAPAUICryptoProperties@@XZ ENDP ; CMyComPtr<ICryptoProperties>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ PROC ; CMyComPtr<ICryptoProperties>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICryptoProperties@@@@QBEPAUICryptoProperties@@XZ ENDP ; CMyComPtr<ICryptoProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ PROC	; CMyComPtr<ICryptoProperties>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICryptoProperties@@@@QBE_NXZ ENDP	; CMyComPtr<ICryptoProperties>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ PROC ; CMyComPtr<ICompressSetCoderProperties>::CMyComPtr<ICompressSetCoderProperties>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ENDP ; CMyComPtr<ICompressSetCoderProperties>::CMyComPtr<ICompressSetCoderProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ PROC ; CMyComPtr<ICompressSetCoderProperties>::~CMyComPtr<ICompressSetCoderProperties>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@5:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressSetCoderProperties@@@@QAE@XZ ENDP ; CMyComPtr<ICompressSetCoderProperties>::~CMyComPtr<ICompressSetCoderProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ PROC ; CMyComPtr<ICompressSetCoderProperties>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICompressSetCoderProperties@@@@QAEPAPAUICompressSetCoderProperties@@XZ ENDP ; CMyComPtr<ICompressSetCoderProperties>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ PROC ; CMyComPtr<ICompressSetCoderProperties>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressSetCoderProperties@@@@QBEPAUICompressSetCoderProperties@@XZ ENDP ; CMyComPtr<ICompressSetCoderProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ PROC ; CMyComPtr<ICompressSetCoderProperties>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICompressSetCoderProperties@@@@QBE_NXZ ENDP ; CMyComPtr<ICompressSetCoderProperties>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ PROC ; CMyComPtr<ICompressWriteCoderProperties>::CMyComPtr<ICompressWriteCoderProperties>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ENDP ; CMyComPtr<ICompressWriteCoderProperties>::CMyComPtr<ICompressWriteCoderProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ PROC ; CMyComPtr<ICompressWriteCoderProperties>::~CMyComPtr<ICompressWriteCoderProperties>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@6
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@6:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressWriteCoderProperties@@@@QAE@XZ ENDP ; CMyComPtr<ICompressWriteCoderProperties>::~CMyComPtr<ICompressWriteCoderProperties>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ PROC ; CMyComPtr<ICompressWriteCoderProperties>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICompressWriteCoderProperties@@@@QAEPAPAUICompressWriteCoderProperties@@XZ ENDP ; CMyComPtr<ICompressWriteCoderProperties>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ PROC ; CMyComPtr<ICompressWriteCoderProperties>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressWriteCoderProperties@@@@QBEPAUICompressWriteCoderProperties@@XZ ENDP ; CMyComPtr<ICompressWriteCoderProperties>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ PROC ; CMyComPtr<ICompressWriteCoderProperties>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICompressWriteCoderProperties@@@@QBE_NXZ ENDP ; CMyComPtr<ICompressWriteCoderProperties>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ PROC	; CMyComPtr<ICryptoResetInitVector>::CMyComPtr<ICryptoResetInitVector>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoResetInitVector>::CMyComPtr<ICryptoResetInitVector>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ PROC	; CMyComPtr<ICryptoResetInitVector>::~CMyComPtr<ICryptoResetInitVector>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@7
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@7:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICryptoResetInitVector@@@@QAE@XZ ENDP	; CMyComPtr<ICryptoResetInitVector>::~CMyComPtr<ICryptoResetInitVector>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ PROC ; CMyComPtr<ICryptoResetInitVector>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICryptoResetInitVector@@@@QAEPAPAUICryptoResetInitVector@@XZ ENDP ; CMyComPtr<ICryptoResetInitVector>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ PROC ; CMyComPtr<ICryptoResetInitVector>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICryptoResetInitVector@@@@QBEPAUICryptoResetInitVector@@XZ ENDP ; CMyComPtr<ICryptoResetInitVector>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ PROC	; CMyComPtr<ICryptoResetInitVector>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICryptoResetInitVector@@@@QBE_NXZ ENDP	; CMyComPtr<ICryptoResetInitVector>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ PROC ; CMyComPtr<ICompressSetDecoderProperties2>::CMyComPtr<ICompressSetDecoderProperties2>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ENDP ; CMyComPtr<ICompressSetDecoderProperties2>::CMyComPtr<ICompressSetDecoderProperties2>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ PROC ; CMyComPtr<ICompressSetDecoderProperties2>::~CMyComPtr<ICompressSetDecoderProperties2>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@8:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAE@XZ ENDP ; CMyComPtr<ICompressSetDecoderProperties2>::~CMyComPtr<ICompressSetDecoderProperties2>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ PROC ; CMyComPtr<ICompressSetDecoderProperties2>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UICompressSetDecoderProperties2@@@@QAEPAPAUICompressSetDecoderProperties2@@XZ ENDP ; CMyComPtr<ICompressSetDecoderProperties2>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ PROC ; CMyComPtr<ICompressSetDecoderProperties2>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBEPAUICompressSetDecoderProperties2@@XZ ENDP ; CMyComPtr<ICompressSetDecoderProperties2>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ PROC ; CMyComPtr<ICompressSetDecoderProperties2>::operator!, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
??7?$CMyComPtr@UICompressSetDecoderProperties2@@@@QBE_NXZ ENDP ; CMyComPtr<ICompressSetDecoderProperties2>::operator!
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ PROC		; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UICompressFilter@@@@QAE@XZ ENDP		; CMyComPtr<ICompressFilter>::CMyComPtr<ICompressFilter>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ PROC		; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@9
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@9:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UICompressFilter@@@@QAE@XZ ENDP		; CMyComPtr<ICompressFilter>::~CMyComPtr<ICompressFilter>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ PROC ; CMyComPtr<ICompressFilter>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UICompressFilter@@@@QBEPAUICompressFilter@@XZ ENDP ; CMyComPtr<ICompressFilter>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ PROC		; CMyComPtr<IOutStreamFinish>::CMyComPtr<IOutStreamFinish>, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ ENDP		; CMyComPtr<IOutStreamFinish>::CMyComPtr<IOutStreamFinish>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ PROC		; CMyComPtr<IOutStreamFinish>::~CMyComPtr<IOutStreamFinish>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@10
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@10:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIOutStreamFinish@@@@QAE@XZ ENDP		; CMyComPtr<IOutStreamFinish>::~CMyComPtr<IOutStreamFinish>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ PROC ; CMyComPtr<IOutStreamFinish>::operator IOutStreamFinish *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ ENDP ; CMyComPtr<IOutStreamFinish>::operator IOutStreamFinish *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ PROC ; CMyComPtr<IOutStreamFinish>::operator&, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??I?$CMyComPtr@UIOutStreamFinish@@@@QAEPAPAUIOutStreamFinish@@XZ ENDP ; CMyComPtr<IOutStreamFinish>::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ PROC ; CMyComPtr<IOutStreamFinish>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIOutStreamFinish@@@@QBEPAUIOutStreamFinish@@XZ ENDP ; CMyComPtr<IOutStreamFinish>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$MyMin@I@@YGIII@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$MyMin@I@@YGIII@Z PROC				; MyMin<unsigned int>, COMDAT
; File c:\workspace\7z1505-src\cpp\common\defs.h
; Line 7
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jae	SHORT $LN3@MyMin
	mov	ecx, DWORD PTR _a$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@MyMin
$LN3@MyMin:
	mov	edx, DWORD PTR _b$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@MyMin:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$MyMin@I@@YGIII@Z ENDP				; MyMin<unsigned int>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iid$ = 8						; size = 4
_pp$ = 12						; size = 4
??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z PROC ; CMyComPtr<ISequentialOutStream>::QueryInterface<IOutStreamFinish>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _pp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$QueryInterface@UIOutStreamFinish@@@?$CMyComPtr@UISequentialOutStream@@@@QBEJABU_GUID@@PAPAUIOutStreamFinish@@@Z ENDP ; CMyComPtr<ISequentialOutStream>::QueryInterface<IOutStreamFinish>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WDA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WDA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{48}', COMDAT
	sub	DWORD PTR [esp+4], 48			; 00000030H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WDA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{48}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WCA@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WCA@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{32}', COMDAT
	sub	DWORD PTR [esp+4], 32			; 00000020H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WCA@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{32}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WBI@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WBI@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{24}', COMDAT
	sub	DWORD PTR [esp+4], 24			; 00000018H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WBI@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{24}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WDI@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WDI@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{56}', COMDAT
	sub	DWORD PTR [esp+4], 56			; 00000038H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WDI@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{56}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WBE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WBE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WBE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@W3AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@W3AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@W3AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WDE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WDE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{52}', COMDAT
	sub	DWORD PTR [esp+4], 52			; 00000034H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WDE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{52}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WCE@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WCE@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{36}', COMDAT
	sub	DWORD PTR [esp+4], 36			; 00000024H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WCE@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{36}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WBM@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WBM@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WBM@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{28}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WBI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WBI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{24}', COMDAT
	sub	DWORD PTR [esp+4], 24			; 00000018H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WBI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{24}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@W7AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@W7AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@W7AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WDI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WDI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{56}', COMDAT
	sub	DWORD PTR [esp+4], 56			; 00000038H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WDI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{56}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WCI@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WCI@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{40}', COMDAT
	sub	DWORD PTR [esp+4], 40			; 00000028H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WCI@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{40}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WCA@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WCA@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{32}', COMDAT
	sub	DWORD PTR [esp+4], 32			; 00000020H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WCA@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{32}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WBM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WBM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WBM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{28}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WM@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WM@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@W3AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@W3AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WCM@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WCM@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{44}', COMDAT
	sub	DWORD PTR [esp+4], 44			; 0000002cH
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WCM@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{44}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WCE@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WCE@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{36}', COMDAT
	sub	DWORD PTR [esp+4], 36			; 00000024H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WCE@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{36}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WCA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WCA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{32}', COMDAT
	sub	DWORD PTR [esp+4], 32			; 00000020H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WCA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{32}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WBA@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WBA@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@W7AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@W7AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WDA@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WDA@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{48}', COMDAT
	sub	DWORD PTR [esp+4], 48			; 00000030H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WDA@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{48}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WCI@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WCI@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{40}', COMDAT
	sub	DWORD PTR [esp+4], 40			; 00000028H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WCI@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{40}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WCE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WCE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{36}', COMDAT
	sub	DWORD PTR [esp+4], 36			; 00000024H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WCE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{36}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WBE@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WBE@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WBE@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WM@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WM@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WDE@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WDE@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{52}', COMDAT
	sub	DWORD PTR [esp+4], 52			; 00000034H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WDE@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{52}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WCM@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WCM@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{44}', COMDAT
	sub	DWORD PTR [esp+4], 44			; 0000002cH
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WCM@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{44}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WCI@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WCI@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{40}', COMDAT
	sub	DWORD PTR [esp+4], 40			; 00000028H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WCI@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{40}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WBI@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WBI@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{24}', COMDAT
	sub	DWORD PTR [esp+4], 24			; 00000018H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WBI@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{24}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WBA@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WBA@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WDI@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WDI@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{56}', COMDAT
	sub	DWORD PTR [esp+4], 56			; 00000038H
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WDI@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{56}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WDA@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WDA@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{48}', COMDAT
	sub	DWORD PTR [esp+4], 48			; 00000030H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WDA@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{48}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WCM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WCM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{44}', COMDAT
	sub	DWORD PTR [esp+4], 44			; 0000002cH
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WCM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{44}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CFilterCoder@@WBM@AGKXZ
_TEXT	SEGMENT
?Release@CFilterCoder@@WBM@AGKXZ PROC			; [thunk]:CFilterCoder::Release`adjustor{28}', COMDAT
	sub	DWORD PTR [esp+4], 28			; 0000001cH
	jmp	?Release@CFilterCoder@@UAGKXZ		; CFilterCoder::Release
?Release@CFilterCoder@@WBM@AGKXZ ENDP			; [thunk]:CFilterCoder::Release`adjustor{28}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WBE@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WBE@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{20}', COMDAT
	sub	DWORD PTR [esp+4], 20			; 00000014H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WBE@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{20}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CFilterCoder@@WDE@AGKXZ
_TEXT	SEGMENT
?AddRef@CFilterCoder@@WDE@AGKXZ PROC			; [thunk]:CFilterCoder::AddRef`adjustor{52}', COMDAT
	sub	DWORD PTR [esp+4], 52			; 00000034H
	jmp	?AddRef@CFilterCoder@@UAGKXZ		; CFilterCoder::AddRef
?AddRef@CFilterCoder@@WDE@AGKXZ ENDP			; [thunk]:CFilterCoder::AddRef`adjustor{52}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CFilterCoder@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CFilterCoder@@WBA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CFilterCoder::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@CFilterCoder@@UAGJABU_GUID@@PAPAX@Z ; CFilterCoder::QueryInterface
?QueryInterface@CFilterCoder@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CFilterCoder::QueryInterface`adjustor{16}'
_TEXT	ENDS
END

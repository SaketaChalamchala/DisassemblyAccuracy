; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\C\Lzma2Dec.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	_Lzma2Dec_AllocateProbs@12
EXTRN	_LzmaDec_AllocateProbs@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\c\lzma2dec.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
___result__$2418 = -24					; size = 4
_props$ = -16						; size = 5
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_prop$ = 12						; size = 1
_alloc$ = 16						; size = 4
_Lzma2Dec_AllocateProbs@12 PROC
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 80
	lea	eax, DWORD PTR _props$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _prop$[ebp]
	push	ecx
	call	_Lzma2Dec_GetOldProps@8
	mov	DWORD PTR ___result__$2418[ebp], eax
	cmp	DWORD PTR ___result__$2418[ebp], 0
	je	SHORT $LN1@Lzma2Dec_A
	mov	eax, DWORD PTR ___result__$2418[ebp]
	jmp	SHORT $LN2@Lzma2Dec_A
$LN1@Lzma2Dec_A:
; Line 81
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	push	5
	lea	eax, DWORD PTR _props$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_AllocateProbs@16
$LN2@Lzma2Dec_A:
; Line 82
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Lzma2Dec_A
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN6@Lzma2Dec_A:
	DD	1
	DD	$LN5@Lzma2Dec_A
$LN5@Lzma2Dec_A:
	DD	-16					; fffffff0H
	DD	5
	DD	$LN4@Lzma2Dec_A
$LN4@Lzma2Dec_A:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_Lzma2Dec_AllocateProbs@12 ENDP
; Function compile flags: /Odtp /RTCsu
tv75 = -8						; size = 4
_dicSize$ = -4						; size = 4
_prop$ = 8						; size = 1
_props$ = 12						; size = 4
_Lzma2Dec_GetOldProps@8 PROC
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 66
	movzx	eax, BYTE PTR _prop$[ebp]
	cmp	eax, 40					; 00000028H
	jle	SHORT $LN1@Lzma2Dec_G
; Line 67
	mov	eax, 4
	jmp	SHORT $LN2@Lzma2Dec_G
$LN1@Lzma2Dec_G:
; Line 68
	movzx	ecx, BYTE PTR _prop$[ebp]
	cmp	ecx, 40					; 00000028H
	jne	SHORT $LN4@Lzma2Dec_G
	mov	DWORD PTR tv75[ebp], -1
	jmp	SHORT $LN5@Lzma2Dec_G
$LN4@Lzma2Dec_G:
	movzx	esi, BYTE PTR _prop$[ebp]
	and	esi, 1
	or	esi, 2
	movzx	eax, BYTE PTR _prop$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, 11					; 0000000bH
	mov	ecx, eax
	shl	esi, cl
	mov	DWORD PTR tv75[ebp], esi
$LN5@Lzma2Dec_G:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _dicSize$[ebp], edx
; Line 69
	mov	eax, DWORD PTR _props$[ebp]
	mov	BYTE PTR [eax], 4
; Line 70
	mov	ecx, DWORD PTR _props$[ebp]
	mov	dl, BYTE PTR _dicSize$[ebp]
	mov	BYTE PTR [ecx+1], dl
; Line 71
	mov	eax, DWORD PTR _dicSize$[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _props$[ebp]
	mov	BYTE PTR [ecx+2], al
; Line 72
	mov	edx, DWORD PTR _dicSize$[ebp]
	shr	edx, 16					; 00000010H
	mov	eax, DWORD PTR _props$[ebp]
	mov	BYTE PTR [eax+3], dl
; Line 73
	mov	ecx, DWORD PTR _dicSize$[ebp]
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _props$[ebp]
	mov	BYTE PTR [edx+4], cl
; Line 74
	xor	eax, eax
$LN2@Lzma2Dec_G:
; Line 75
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
_Lzma2Dec_GetOldProps@8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_Lzma2Dec_Allocate@12
EXTRN	_LzmaDec_Allocate@16:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$2428 = -24					; size = 4
_props$ = -16						; size = 5
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_prop$ = 12						; size = 1
_alloc$ = 16						; size = 4
_Lzma2Dec_Allocate@12 PROC
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 87
	lea	eax, DWORD PTR _props$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _prop$[ebp]
	push	ecx
	call	_Lzma2Dec_GetOldProps@8
	mov	DWORD PTR ___result__$2428[ebp], eax
	cmp	DWORD PTR ___result__$2428[ebp], 0
	je	SHORT $LN1@Lzma2Dec_A@2
	mov	eax, DWORD PTR ___result__$2428[ebp]
	jmp	SHORT $LN2@Lzma2Dec_A@2
$LN1@Lzma2Dec_A@2:
; Line 88
	mov	edx, DWORD PTR _alloc$[ebp]
	push	edx
	push	5
	lea	eax, DWORD PTR _props$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_Allocate@16
$LN2@Lzma2Dec_A@2:
; Line 89
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Lzma2Dec_A@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN6@Lzma2Dec_A@2:
	DD	1
	DD	$LN5@Lzma2Dec_A@2
$LN5@Lzma2Dec_A@2:
	DD	-16					; fffffff0H
	DD	5
	DD	$LN4@Lzma2Dec_A@2
$LN4@Lzma2Dec_A@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_Lzma2Dec_Allocate@12 ENDP
_TEXT	ENDS
PUBLIC	_Lzma2Dec_Init@4
EXTRN	_LzmaDec_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
_Lzma2Dec_Init@4 PROC
; Line 92
	push	ebp
	mov	ebp, esp
; Line 93
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 94
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+128], 1
; Line 95
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+132], 1
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+136], 1
; Line 97
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_Init@4
; Line 98
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
_Lzma2Dec_Init@4 ENDP
_TEXT	ENDS
PUBLIC	_Lzma2Dec_DecodeToDic@24
EXTRN	_LzmaDec_DecodeToDic@24:PROC
EXTRN	_LzmaDec_InitDicAndState@12:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -57						; size = 1
___result__$2531 = -56					; size = 4
_initState$2523 = -52					; size = 4
_initDic$2522 = -48					; size = 4
_mode$2521 = -44					; size = 4
_res$2519 = -40						; size = 4
_outSizeProcessed$2518 = -36				; size = 4
_initDic$2510 = -32					; size = 4
_curFinishMode$2504 = -28				; size = 4
_srcSizeCur$2503 = -20					; size = 4
_destSizeCur$2502 = -12					; size = 4
_dicPos$2496 = -8					; size = 4
_inSize$ = -4						; size = 4
_p$ = 8							; size = 4
_dicLimit$ = 12						; size = 4
_src$ = 16						; size = 4
_srcLen$ = 20						; size = 4
_finishMode$ = 24					; size = 4
_status$ = 28						; size = 4
_Lzma2Dec_DecodeToDic@24 PROC
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 175
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _inSize$[ebp], ecx
; Line 176
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], 0
; Line 177
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN28@Lzma2Dec_D:
; Line 179
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+120], 8
	je	$LN27@Lzma2Dec_D
; Line 181
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR _dicPos$2496[ebp], eax
; Line 183
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+120], 9
	jne	SHORT $LN26@Lzma2Dec_D
; Line 184
	mov	eax, 1
	jmp	$LN29@Lzma2Dec_D
$LN26@Lzma2Dec_D:
; Line 186
	mov	edx, DWORD PTR _dicPos$2496[ebp]
	cmp	edx, DWORD PTR _dicLimit$[ebp]
	jne	SHORT $LN25@Lzma2Dec_D
	cmp	DWORD PTR _finishMode$[ebp], 0
	jne	SHORT $LN25@Lzma2Dec_D
; Line 188
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 2
; Line 189
	xor	eax, eax
	jmp	$LN29@Lzma2Dec_D
$LN25@Lzma2Dec_D:
; Line 192
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+120], 6
	je	SHORT $LN24@Lzma2Dec_D
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+120], 7
	je	SHORT $LN24@Lzma2Dec_D
; Line 194
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _inSize$[ebp]
	jne	SHORT $LN23@Lzma2Dec_D
; Line 196
	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 3
; Line 197
	xor	eax, eax
	jmp	$LN29@Lzma2Dec_D
$LN23@Lzma2Dec_D:
; Line 199
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 200
	mov	eax, DWORD PTR _src$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv80[ebp], cl
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, 1
	mov	DWORD PTR _src$[ebp], edx
	movzx	eax, BYTE PTR tv80[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_Lzma2Dec_UpdateState@8
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+120], eax
; Line 202
	mov	eax, DWORD PTR _dicPos$2496[ebp]
	cmp	eax, DWORD PTR _dicLimit$[ebp]
	jne	SHORT $LN22@Lzma2Dec_D
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+120], 8
	je	SHORT $LN22@Lzma2Dec_D
; Line 204
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+120], 9
; Line 205
	mov	eax, 1
	jmp	$LN29@Lzma2Dec_D
$LN22@Lzma2Dec_D:
; Line 207
	jmp	$LN28@Lzma2Dec_D
$LN24@Lzma2Dec_D:
; Line 211
	mov	eax, DWORD PTR _dicLimit$[ebp]
	sub	eax, DWORD PTR _dicPos$2496[ebp]
	mov	DWORD PTR _destSizeCur$2502[ebp], eax
; Line 212
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	edx, DWORD PTR _inSize$[ebp]
	sub	edx, DWORD PTR [ecx]
	mov	DWORD PTR _srcSizeCur$2503[ebp], edx
; Line 213
	mov	DWORD PTR _curFinishMode$2504[ebp], 0
; Line 215
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	cmp	ecx, DWORD PTR _destSizeCur$2502[ebp]
	ja	SHORT $LN21@Lzma2Dec_D
; Line 217
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+116]
	mov	DWORD PTR _destSizeCur$2502[ebp], eax
; Line 218
	mov	DWORD PTR _curFinishMode$2504[ebp], 1
$LN21@Lzma2Dec_D:
; Line 221
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+124]
	and	edx, 128				; 00000080H
	jne	$LN20@Lzma2Dec_D
; Line 223
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _inSize$[ebp]
	jne	SHORT $LN19@Lzma2Dec_D
; Line 225
	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 3
; Line 226
	xor	eax, eax
	jmp	$LN29@Lzma2Dec_D
$LN19@Lzma2Dec_D:
; Line 229
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+120], 6
	jne	SHORT $LN18@Lzma2Dec_D
; Line 231
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+124]
	sub	edx, 1
	neg	edx
	sbb	edx, edx
	add	edx, 1
	mov	DWORD PTR _initDic$2510[ebp], edx
; Line 232
	je	SHORT $LN17@Lzma2Dec_D
; Line 233
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+132], 1
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+136], 1
	jmp	SHORT $LN16@Lzma2Dec_D
$LN17@Lzma2Dec_D:
; Line 234
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+128], 0
	je	SHORT $LN16@Lzma2Dec_D
; Line 236
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+120], 9
; Line 237
	mov	eax, 1
	jmp	$LN29@Lzma2Dec_D
$LN16@Lzma2Dec_D:
; Line 239
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+128], 0
; Line 240
	push	0
	mov	edx, DWORD PTR _initDic$2510[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_InitDicAndState@12
$LN18@Lzma2Dec_D:
; Line 243
	mov	ecx, DWORD PTR _srcSizeCur$2503[ebp]
	cmp	ecx, DWORD PTR _destSizeCur$2502[ebp]
	jbe	SHORT $LN14@Lzma2Dec_D
; Line 244
	mov	edx, DWORD PTR _destSizeCur$2502[ebp]
	mov	DWORD PTR _srcSizeCur$2503[ebp], edx
$LN14@Lzma2Dec_D:
; Line 246
	cmp	DWORD PTR _srcSizeCur$2503[ebp], 0
	jne	SHORT $LN13@Lzma2Dec_D
; Line 248
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+120], 9
; Line 249
	mov	eax, 1
	jmp	$LN29@Lzma2Dec_D
$LN13@Lzma2Dec_D:
; Line 252
	mov	ecx, DWORD PTR _srcSizeCur$2503[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_UpdateWithUncompressed@12
; Line 254
	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, DWORD PTR _srcSizeCur$2503[ebp]
	mov	DWORD PTR _src$[ebp], ecx
; Line 255
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _srcSizeCur$2503[ebp]
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 256
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+116]
	sub	eax, DWORD PTR _srcSizeCur$2503[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+116], eax
; Line 257
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+116]
	neg	eax
	sbb	eax, eax
	and	eax, 7
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+120], eax
; Line 259
	jmp	$LN12@Lzma2Dec_D
$LN20@Lzma2Dec_D:
; Line 264
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+120], 6
	jne	$LN11@Lzma2Dec_D
; Line 266
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+124]
	sar	ecx, 5
	and	ecx, 3
	mov	DWORD PTR _mode$2521[ebp], ecx
; Line 267
	xor	edx, edx
	cmp	DWORD PTR _mode$2521[ebp], 3
	sete	dl
	mov	DWORD PTR _initDic$2522[ebp], edx
; Line 268
	xor	eax, eax
	cmp	DWORD PTR _mode$2521[ebp], 0
	setne	al
	mov	DWORD PTR _initState$2523[ebp], eax
; Line 269
	cmp	DWORD PTR _initDic$2522[ebp], 0
	jne	SHORT $LN8@Lzma2Dec_D
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	jne	SHORT $LN9@Lzma2Dec_D
$LN8@Lzma2Dec_D:
	cmp	DWORD PTR _initState$2523[ebp], 0
	jne	SHORT $LN10@Lzma2Dec_D
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+132], 0
	je	SHORT $LN10@Lzma2Dec_D
$LN9@Lzma2Dec_D:
; Line 271
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+120], 9
; Line 272
	mov	eax, 1
	jmp	$LN29@Lzma2Dec_D
$LN10@Lzma2Dec_D:
; Line 275
	mov	ecx, DWORD PTR _initState$2523[ebp]
	push	ecx
	mov	edx, DWORD PTR _initDic$2522[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LzmaDec_InitDicAndState@12
; Line 276
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+128], 0
; Line 277
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+132], 0
; Line 278
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+120], 7
$LN11@Lzma2Dec_D:
; Line 281
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _srcSizeCur$2503[ebp]
	cmp	edx, DWORD PTR [ecx+112]
	jbe	SHORT $LN7@Lzma2Dec_D
; Line 282
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR _srcSizeCur$2503[ebp], ecx
$LN7@Lzma2Dec_D:
; Line 284
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR _curFinishMode$2504[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcSizeCur$2503[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _dicPos$2496[ebp]
	add	eax, DWORD PTR _destSizeCur$2502[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_DecodeToDic@24
	mov	DWORD PTR _res$2519[ebp], eax
; Line 286
	mov	edx, DWORD PTR _src$[ebp]
	add	edx, DWORD PTR _srcSizeCur$2503[ebp]
	mov	DWORD PTR _src$[ebp], edx
; Line 287
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _srcSizeCur$2503[ebp]
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 288
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	sub	ecx, DWORD PTR _srcSizeCur$2503[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 290
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _dicPos$2496[ebp]
	mov	DWORD PTR _outSizeProcessed$2518[ebp], ecx
; Line 291
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+116]
	sub	eax, DWORD PTR _outSizeProcessed$2518[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+116], eax
; Line 293
	mov	edx, DWORD PTR _res$2519[ebp]
	mov	DWORD PTR ___result__$2531[ebp], edx
	cmp	DWORD PTR ___result__$2531[ebp], 0
	je	SHORT $LN6@Lzma2Dec_D
	mov	eax, DWORD PTR ___result__$2531[ebp]
	jmp	SHORT $LN29@Lzma2Dec_D
$LN6@Lzma2Dec_D:
; Line 294
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 3
	jne	SHORT $LN5@Lzma2Dec_D
; Line 295
	mov	eax, DWORD PTR _res$2519[ebp]
	jmp	SHORT $LN29@Lzma2Dec_D
$LN5@Lzma2Dec_D:
; Line 297
	cmp	DWORD PTR _srcSizeCur$2503[ebp], 0
	jne	SHORT $LN4@Lzma2Dec_D
	cmp	DWORD PTR _outSizeProcessed$2518[ebp], 0
	jne	SHORT $LN4@Lzma2Dec_D
; Line 301
	mov	ecx, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [ecx], 4
	jne	SHORT $LN2@Lzma2Dec_D
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+116], 0
	jne	SHORT $LN2@Lzma2Dec_D
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN3@Lzma2Dec_D
$LN2@Lzma2Dec_D:
; Line 303
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+120], 9
; Line 304
	mov	eax, 1
	jmp	SHORT $LN29@Lzma2Dec_D
$LN3@Lzma2Dec_D:
; Line 306
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+120], 0
$LN4@Lzma2Dec_D:
; Line 309
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN12@Lzma2Dec_D
; Line 310
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx], 2
$LN12@Lzma2Dec_D:
; Line 313
	jmp	$LN28@Lzma2Dec_D
$LN27@Lzma2Dec_D:
; Line 315
	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx], 1
; Line 316
	xor	eax, eax
$LN29@Lzma2Dec_D:
; Line 317
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN34@Lzma2Dec_D
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN34@Lzma2Dec_D:
	DD	1
	DD	$LN33@Lzma2Dec_D
$LN33@Lzma2Dec_D:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN32@Lzma2Dec_D
$LN32@Lzma2Dec_D:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	0
_Lzma2Dec_DecodeToDic@24 ENDP
; Function compile flags: /Odtp /RTCsu
tv153 = -16						; size = 4
tv65 = -12						; size = 4
_lp$2459 = -8						; size = 4
_lc$2458 = -4						; size = 4
_p$ = 8							; size = 4
_b$ = 12						; size = 1
_Lzma2Dec_UpdateState@8 PROC
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 102
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 5
	ja	$LN13@Lzma2Dec_U
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN19@Lzma2Dec_U[edx*4]
$LN12@Lzma2Dec_U:
; Line 105
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+124], cl
; Line 108
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+124]
	test	eax, eax
	jne	SHORT $LN11@Lzma2Dec_U
; Line 109
	mov	eax, 8
	jmp	$LN15@Lzma2Dec_U
$LN11@Lzma2Dec_U:
; Line 110
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+124]
	and	edx, 128				; 00000080H
	jne	SHORT $LN10@Lzma2Dec_U
; Line 112
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+124]
	and	ecx, 127				; 0000007fH
	cmp	ecx, 2
	jle	SHORT $LN9@Lzma2Dec_U
; Line 113
	mov	eax, 9
	jmp	$LN15@Lzma2Dec_U
$LN9@Lzma2Dec_U:
; Line 114
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+116], 0
; Line 116
	jmp	SHORT $LN8@Lzma2Dec_U
$LN10@Lzma2Dec_U:
; Line 117
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+124]
	and	ecx, 31					; 0000001fH
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+116], ecx
$LN8@Lzma2Dec_U:
; Line 118
	mov	eax, 1
	jmp	$LN15@Lzma2Dec_U
$LN7@Lzma2Dec_U:
; Line 121
	movzx	eax, BYTE PTR _b$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _p$[ebp]
	or	eax, DWORD PTR [ecx+116]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+116], eax
; Line 122
	mov	eax, 2
	jmp	$LN15@Lzma2Dec_U
$LN6@Lzma2Dec_U:
; Line 125
	movzx	eax, BYTE PTR _b$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	or	eax, DWORD PTR [ecx+116]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+116], eax
; Line 126
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	add	ecx, 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+116], ecx
; Line 128
	mov	eax, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [eax+124]
	and	eax, 128				; 00000080H
	neg	eax
	sbb	eax, eax
	and	eax, -3					; fffffffdH
	add	eax, 6
	jmp	$LN15@Lzma2Dec_U
$LN5@Lzma2Dec_U:
; Line 131
	movzx	ecx, BYTE PTR _b$[ebp]
	shl	ecx, 8
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 132
	mov	eax, 4
	jmp	$LN15@Lzma2Dec_U
$LN4@Lzma2Dec_U:
; Line 135
	movzx	eax, BYTE PTR _b$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	or	eax, DWORD PTR [ecx+112]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+112], eax
; Line 136
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+112], ecx
; Line 139
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+124]
	sar	ecx, 5
	and	ecx, 3
	cmp	ecx, 2
	jl	SHORT $LN17@Lzma2Dec_U
	mov	DWORD PTR tv153[ebp], 5
	jmp	SHORT $LN18@Lzma2Dec_U
$LN17@Lzma2Dec_U:
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+136]
	neg	eax
	sbb	eax, eax
	and	eax, 3
	add	eax, 6
	mov	DWORD PTR tv153[ebp], eax
$LN18@Lzma2Dec_U:
	mov	eax, DWORD PTR tv153[ebp]
	jmp	$LN15@Lzma2Dec_U
$LN3@Lzma2Dec_U:
; Line 144
	movzx	ecx, BYTE PTR _b$[ebp]
	cmp	ecx, 225				; 000000e1H
	jl	SHORT $LN2@Lzma2Dec_U
; Line 145
	mov	eax, 9
	jmp	SHORT $LN15@Lzma2Dec_U
$LN2@Lzma2Dec_U:
; Line 146
	movzx	eax, BYTE PTR _b$[ebp]
	cdq
	mov	ecx, 9
	idiv	ecx
	mov	DWORD PTR _lc$2458[ebp], edx
; Line 147
	movzx	eax, BYTE PTR _b$[ebp]
	cdq
	mov	ecx, 9
	idiv	ecx
	mov	BYTE PTR _b$[ebp], al
; Line 148
	movzx	eax, BYTE PTR _b$[ebp]
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 149
	movzx	eax, BYTE PTR _b$[ebp]
	cdq
	mov	ecx, 5
	idiv	ecx
	mov	DWORD PTR _lp$2459[ebp], edx
; Line 150
	mov	edx, DWORD PTR _lc$2458[ebp]
	add	edx, DWORD PTR _lp$2459[ebp]
	cmp	edx, 4
	jbe	SHORT $LN1@Lzma2Dec_U
; Line 151
	mov	eax, 9
	jmp	SHORT $LN15@Lzma2Dec_U
$LN1@Lzma2Dec_U:
; Line 152
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _lc$2458[ebp]
	mov	DWORD PTR [eax], ecx
; Line 153
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _lp$2459[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 154
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+136], 0
; Line 155
	mov	eax, 6
	jmp	SHORT $LN15@Lzma2Dec_U
$LN13@Lzma2Dec_U:
; Line 158
	mov	eax, 9
$LN15@Lzma2Dec_U:
; Line 159
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN19@Lzma2Dec_U:
	DD	$LN12@Lzma2Dec_U
	DD	$LN7@Lzma2Dec_U
	DD	$LN6@Lzma2Dec_U
	DD	$LN5@Lzma2Dec_U
	DD	$LN4@Lzma2Dec_U
	DD	$LN3@Lzma2Dec_U
_Lzma2Dec_UpdateState@8 ENDP
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
_src$ = 12						; size = 4
_size$ = 16						; size = 4
_LzmaDec_UpdateWithUncompressed@12 PROC
; Line 162
	push	ebp
	mov	ebp, esp
; Line 163
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR [ecx+36]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 164
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	add	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 165
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+48], 0
	jne	SHORT $LN1@LzmaDec_Up
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+44]
	cmp	edx, DWORD PTR _size$[ebp]
	ja	SHORT $LN1@LzmaDec_Up
; Line 166
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+48], edx
$LN1@LzmaDec_Up:
; Line 167
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+44], ecx
; Line 168
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
_LzmaDec_UpdateWithUncompressed@12 ENDP
_TEXT	ENDS
PUBLIC	_Lzma2Dec_DecodeToBuf@28
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_res$2562 = -36						; size = 4
_curFinishMode$2561 = -32				; size = 4
_dicPos$2560 = -28					; size = 4
_outSizeCur$2559 = -24					; size = 4
_srcSizeCur$2558 = -16					; size = 4
_inSize$ = -8						; size = 4
_outSize$ = -4						; size = 4
_p$ = 8							; size = 4
_dest$ = 12						; size = 4
_destLen$ = 16						; size = 4
_src$ = 20						; size = 4
_srcLen$ = 24						; size = 4
_finishMode$ = 28					; size = 4
_status$ = 32						; size = 4
_Lzma2Dec_DecodeToBuf@28 PROC
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 321
	mov	eax, DWORD PTR _destLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _outSize$[ebp], ecx
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _inSize$[ebp], eax
; Line 322
	mov	ecx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], 0
$LN8@Lzma2Dec_D@2:
; Line 325
	mov	eax, DWORD PTR _inSize$[ebp]
	mov	DWORD PTR _srcSizeCur$2558[ebp], eax
; Line 328
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	cmp	eax, DWORD PTR [edx+40]
	jne	SHORT $LN6@Lzma2Dec_D@2
; Line 329
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+36], 0
$LN6@Lzma2Dec_D@2:
; Line 330
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR _dicPos$2560[ebp], eax
; Line 331
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	sub	edx, DWORD PTR _dicPos$2560[ebp]
	cmp	DWORD PTR _outSize$[ebp], edx
	jbe	SHORT $LN5@Lzma2Dec_D@2
; Line 333
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _outSizeCur$2559[ebp], ecx
; Line 334
	mov	DWORD PTR _curFinishMode$2561[ebp], 0
; Line 336
	jmp	SHORT $LN4@Lzma2Dec_D@2
$LN5@Lzma2Dec_D@2:
; Line 338
	mov	edx, DWORD PTR _dicPos$2560[ebp]
	add	edx, DWORD PTR _outSize$[ebp]
	mov	DWORD PTR _outSizeCur$2559[ebp], edx
; Line 339
	mov	eax, DWORD PTR _finishMode$[ebp]
	mov	DWORD PTR _curFinishMode$2561[ebp], eax
$LN4@Lzma2Dec_D@2:
; Line 342
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curFinishMode$2561[ebp]
	push	edx
	lea	eax, DWORD PTR _srcSizeCur$2558[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSizeCur$2559[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_Lzma2Dec_DecodeToDic@24
	mov	DWORD PTR _res$2562[ebp], eax
; Line 343
	mov	ecx, DWORD PTR _src$[ebp]
	add	ecx, DWORD PTR _srcSizeCur$2558[ebp]
	mov	DWORD PTR _src$[ebp], ecx
; Line 344
	mov	edx, DWORD PTR _inSize$[ebp]
	sub	edx, DWORD PTR _srcSizeCur$2558[ebp]
	mov	DWORD PTR _inSize$[ebp], edx
; Line 345
	mov	eax, DWORD PTR _srcLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _srcSizeCur$2558[ebp]
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 346
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, DWORD PTR _dicPos$2560[ebp]
	mov	DWORD PTR _outSizeCur$2559[ebp], ecx
; Line 347
	mov	edx, DWORD PTR _outSizeCur$2559[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR _dicPos$2560[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 348
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _outSizeCur$2559[ebp]
	mov	DWORD PTR _dest$[ebp], eax
; Line 349
	mov	ecx, DWORD PTR _outSize$[ebp]
	sub	ecx, DWORD PTR _outSizeCur$2559[ebp]
	mov	DWORD PTR _outSize$[ebp], ecx
; Line 350
	mov	edx, DWORD PTR _destLen$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _outSizeCur$2559[ebp]
	mov	ecx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 351
	cmp	DWORD PTR _res$2562[ebp], 0
	je	SHORT $LN3@Lzma2Dec_D@2
; Line 352
	mov	eax, DWORD PTR _res$2562[ebp]
	jmp	SHORT $LN9@Lzma2Dec_D@2
$LN3@Lzma2Dec_D@2:
; Line 353
	cmp	DWORD PTR _outSizeCur$2559[ebp], 0
	je	SHORT $LN1@Lzma2Dec_D@2
	cmp	DWORD PTR _outSize$[ebp], 0
	jne	SHORT $LN2@Lzma2Dec_D@2
$LN1@Lzma2Dec_D@2:
; Line 354
	xor	eax, eax
	jmp	SHORT $LN9@Lzma2Dec_D@2
$LN2@Lzma2Dec_D@2:
; Line 355
	jmp	$LN8@Lzma2Dec_D@2
$LN9@Lzma2Dec_D@2:
; Line 356
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Lzma2Dec_D@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN13@Lzma2Dec_D@2:
	DD	1
	DD	$LN12@Lzma2Dec_D@2
$LN12@Lzma2Dec_D@2:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN11@Lzma2Dec_D@2
$LN11@Lzma2Dec_D@2:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	0
_Lzma2Dec_DecodeToBuf@28 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_Lzma2Decode@32
EXTRN	_LzmaDec_FreeProbs@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$2590 = -168					; size = 4
_inSize$ = -164						; size = 4
_outSize$ = -160					; size = 4
_res$ = -156						; size = 4
_p$ = -148						; size = 140
__$ArrayPad$ = -4					; size = 4
_dest$ = 8						; size = 4
_destLen$ = 12						; size = 4
_src$ = 16						; size = 4
_srcLen$ = 20						; size = 4
_prop$ = 24						; size = 1
_finishMode$ = 28					; size = 4
_status$ = 32						; size = 4
_alloc$ = 36						; size = 4
_Lzma2Decode@32 PROC
; Line 360
	push	ebp
	mov	ebp, esp
	sub	esp, 168				; 000000a8H
	push	edi
	lea	edi, DWORD PTR [ebp-168]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 363
	mov	eax, DWORD PTR _destLen$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _outSize$[ebp], ecx
	mov	edx, DWORD PTR _srcLen$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _inSize$[ebp], eax
; Line 364
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [edx], 0
; Line 365
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 366
	mov	DWORD PTR _p$[ebp+20], 0
	mov	DWORD PTR _p$[ebp+16], 0
; Line 367
	mov	ecx, DWORD PTR _alloc$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _prop$[ebp]
	push	edx
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_Lzma2Dec_AllocateProbs@12
	mov	DWORD PTR ___result__$2590[ebp], eax
	cmp	DWORD PTR ___result__$2590[ebp], 0
	je	SHORT $LN2@Lzma2Decod
	mov	eax, DWORD PTR ___result__$2590[ebp]
	jmp	$LN3@Lzma2Decod
$LN2@Lzma2Decod:
; Line 368
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	DWORD PTR _p$[ebp+20], ecx
; Line 369
	mov	edx, DWORD PTR _outSize$[ebp]
	mov	DWORD PTR _p$[ebp+40], edx
; Line 370
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_Lzma2Dec_Init@4
; Line 371
	mov	ecx, DWORD PTR _srcLen$[ebp]
	mov	edx, DWORD PTR _inSize$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 372
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _finishMode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _srcLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_Lzma2Dec_DecodeToDic@24
	mov	DWORD PTR _res$[ebp], eax
; Line 373
	mov	eax, DWORD PTR _destLen$[ebp]
	mov	ecx, DWORD PTR _p$[ebp+36]
	mov	DWORD PTR [eax], ecx
; Line 374
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN1@Lzma2Decod
	mov	edx, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [edx], 3
	jne	SHORT $LN1@Lzma2Decod
; Line 375
	mov	DWORD PTR _res$[ebp], 6
$LN1@Lzma2Decod:
; Line 376
	mov	eax, DWORD PTR _alloc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_LzmaDec_FreeProbs@8
; Line 377
	mov	eax, DWORD PTR _res$[ebp]
$LN3@Lzma2Decod:
; Line 378
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Lzma2Decod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 168				; 000000a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN7@Lzma2Decod:
	DD	1
	DD	$LN6@Lzma2Decod
$LN6@Lzma2Decod:
	DD	-148					; ffffff6cH
	DD	140					; 0000008cH
	DD	$LN5@Lzma2Decod
$LN5@Lzma2Decod:
	DB	112					; 00000070H
	DB	0
_Lzma2Decode@32 ENDP
_TEXT	ENDS
END

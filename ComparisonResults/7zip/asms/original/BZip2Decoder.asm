; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\BZip2Decoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_kRandNums DW	026bH
	DW	02d0H
	DW	07fH
	DW	01e1H
	DW	03a3H
	DW	0330H
	DW	032dH
	DW	0e9H
	DW	0236H
	DW	0f7H
	DW	03d9H
	DW	02d4H
	DW	0cdH
	DW	01c6H
	DW	035fH
	DW	01ebH
	DW	02e5H
	DW	0f2H
	DW	03b5H
	DW	0d6H
	DW	02ddH
	DW	035bH
	DW	014fH
	DW	02c4H
	DW	026dH
	DW	023eH
	DW	049H
	DW	028eH
	DW	02daH
	DW	01d8H
	DW	01a3H
	DW	01b4H
	DW	0116H
	DW	01f0H
	DW	0363H
	DW	0d2H
	DW	018fH
	DW	02a8H
	DW	01e0H
	DW	033H
	DW	036eH
	DW	01d1H
	DW	032bH
	DW	0a9H
	DW	0365H
	DW	02a3H
	DW	0263H
	DW	02b9H
	DW	0363H
	DW	0231H
	DW	035eH
	DW	02afH
	DW	01fbH
	DW	011bH
	DW	01e2H
	DW	081H
	DW	0327H
	DW	024fH
	DW	02ddH
	DW	026fH
	DW	096H
	DW	0eeH
	DW	03bH
	DW	017bH
	DW	02acH
	DW	036dH
	DW	0271H
	DW	0a9H
	DW	0283H
	DW	069H
	DW	0aaH
	DW	025fH
	DW	0208H
	DW	03a4H
	DW	02d7H
	DW	01dcH
	DW	02b5H
	DW	01a9H
	DW	0aeH
	DW	0287H
	DW	049H
	DW	07aH
	DW	014fH
	DW	0212H
	DW	01baH
	DW	0355H
	DW	02b7H
	DW	0f9H
	DW	01bdH
	DW	0203H
	DW	038dH
	DW	0221H
	DW	02bfH
	DW	0397H
	DW	036aH
	DW	01daH
	DW	0372H
	DW	01f4H
	DW	0252H
	DW	0264H
	DW	0281H
	DW	0321H
	DW	0dcH
	DW	0a2H
	DW	0333H
	DW	03d8H
	DW	024dH
	DW	0201H
	DW	01efH
	DW	031fH
	DW	0a1H
	DW	025cH
	DW	03beH
	DW	0215H
	DW	0ddH
	DW	0190H
	DW	0182H
	DW	0363H
	DW	0258H
	DW	030eH
	DW	017eH
	DW	0254H
	DW	019eH
	DW	0abH
	DW	0204H
	DW	0177H
	DW	02aaH
	DW	01e5H
	DW	038fH
	DW	0114H
	DW	062H
	DW	0229H
	DW	0a3H
	DW	0162H
	DW	029aH
	DW	03a5H
	DW	01a8H
	DW	0155H
	DW	0215H
	DW	0366H
	DW	0e3H
	DW	02daH
	DW	01dbH
	DW	0baH
	DW	0107H
	DW	0287H
	DW	0219H
	DW	02aeH
	DW	0258H
	DW	0e0H
	DW	01d5H
	DW	044H
	DW	0302H
	DW	0397H
	DW	0beH
	DW	0175H
	DW	0126H
	DW	0336H
	DW	0328H
	DW	0ceH
	DW	0b8H
	DW	03afH
	DW	031bH
	DW	0180H
	DW	017fH
	DW	01cdH
	DW	0194H
	DW	02f6H
	DW	0347H
	DW	0377H
	DW	02cbH
	DW	043H
	DW	026aH
	DW	0114H
	DW	0ccH
	DW	0396H
	DW	0369H
	DW	0309H
	DW	025cH
	DW	0230H
	DW	03b7H
	DW	0a0H
	DW	0242H
	DW	02d2H
	DW	04fH
	DW	0324H
	DW	060H
	DW	0199H
	DW	02c9H
	DW	03acH
	DW	028cH
	DW	03a6H
	DW	03caH
	DW	01bfH
	DW	013eH
	DW	0161H
	DW	035bH
	DW	02a0H
	DW	070H
	DW	0311H
	DW	0285H
	DW	035fH
	DW	0323H
	DW	015eH
	DW	08bH
	DW	05dH
	DW	0162H
	DW	063H
	DW	0334H
	DW	038cH
	DW	0261H
	DW	0304H
	DW	09aH
	DW	0112H
	DW	0244H
	DW	0b8H
	DW	04fH
	DW	0272H
	DW	0276H
	DW	02e6H
	DW	028dH
	DW	011aH
	DW	02faH
	DW	026fH
	DW	02a8H
	DW	051H
	DW	039fH
	DW	0272H
	DW	0315H
	DW	07dH
	DW	019bH
	DW	0209H
	DW	03aaH
	DW	012cH
	DW	0335H
	DW	04eH
	DW	0157H
	DW	0afH
	DW	080H
	DW	0faH
	DW	0aaH
	DW	0306H
	DW	03ccH
	DW	0113H
	DW	03e7H
	DW	027fH
	DW	01efH
	DW	04eH
	DW	0160H
	DW	07eH
	DW	0359H
	DW	03bcH
	DW	0166H
	DW	026bH
	DW	0244H
	DW	07cH
	DW	02e1H
	DW	0252H
	DW	02bdH
	DW	0264H
	DW	029dH
	DW	070H
	DW	086H
	DW	02b6H
	DW	016bH
	DW	03e0H
	DW	0329H
	DW	02e7H
	DW	0a8H
	DW	03ceH
	DW	03b0H
	DW	0177H
	DW	02ecH
	DW	034H
	DW	0258H
	DW	02ebH
	DW	0282H
	DW	0b6H
	DW	035eH
	DW	051H
	DW	0158H
	DW	0325H
	DW	03dcH
	DW	02e3H
	DW	01ffH
	DW	028fH
	DW	032eH
	DW	014eH
	DW	0f9H
	DW	0203H
	DW	0381H
	DW	03bbH
	DW	0298H
	DW	03d5H
	DW	0289H
	DW	071H
	DW	03ceH
	DW	01cbH
	DW	037dH
	DW	0e4H
	DW	01b1H
	DW	0345H
	DW	0229H
	DW	010cH
	DW	039eH
	DW	0f0H
	DW	066H
	DW	028eH
	DW	01cbH
	DW	033H
	DW	02aeH
	DW	02f2H
	DW	0326H
	DW	02f8H
	DW	01edH
	DW	0193H
	DW	019fH
	DW	018aH
	DW	02afH
	DW	02bcH
	DW	03b2H
	DW	029eH
	DW	0290H
	DW	0262H
	DW	02e2H
	DW	0188H
	DW	02f8H
	DW	031fH
	DW	0377H
	DW	028dH
	DW	03d2H
	DW	0141H
	DW	0240H
	DW	0269H
	DW	0272H
	DW	01f6H
	DW	037eH
	DW	02a7H
	DW	0f3H
	DW	01b8H
	DW	02a8H
	DW	036fH
	DW	0c2H
	DW	023cH
	DW	0280H
	DW	02d4H
	DW	039eH
	DW	038H
	DW	0ccH
	DW	02bcH
	DW	02c3H
	DW	097H
	DW	01c9H
	DW	01c1H
	DW	031dH
	DW	0c3H
	DW	0317H
	DW	022eH
	DW	03b1H
	DW	02a7H
	DW	0129H
	DW	03bH
	DW	057H
	DW	0338H
	DW	02c9H
	DW	0297H
	DW	019cH
	DW	02b5H
	DW	0156H
	DW	025eH
	DW	086H
	DW	06cH
	DW	023bH
	DW	016cH
	DW	0277H
	DW	0d4H
	DW	0aeH
	DW	0283H
	DW	0130H
	DW	0149H
	DW	0157H
	DW	061H
	DW	01aeH
	DW	02efH
	DW	01f1H
	DW	013aH
	DW	03d7H
	DW	0176H
	DW	0336H
	DW	03a0H
	DW	08cH
	DW	0ceH
	DW	049H
	DW	0107H
	DW	03d4H
	DW	02e0H
	DW	036cH
	DW	01deH
	DW	01aeH
	DW	0131H
	DW	0aaH
	DW	0202H
	DW	016cH
	DW	02b4H
	DW	033dH
	DW	052H
	DW	0357H
	DW	03b9H
	DW	02a4H
	DW	0f6H
	DW	0171H
	DW	03caH
	DW	0126H
	DW	02eeH
	DW	0327H
	DW	033bH
	DW	096H
	DW	0316H
	DW	0120H
	DW	039bH
	DW	0324H
	DW	017aH
	DW	0d7H
	DW	033cH
	DW	0250H
	DW	0119H
	DW	0235H
	DW	022bH
	DW	02c6H
	DW	052H
	DW	0380H
	DW	033fH
	DW	0223H
	DW	0105H
	DW	020cH
	DW	01ceH
	DW	0125H
	DW	01d1H
	DW	01f6H
	DW	038H
	DW	0295H
	DW	0335H
	DW	03d0H
	DW	03dfH
	DW	0292H
	DW	0365H
	DW	0389H
	DW	02f6H
	DW	02e9H
	DW	0c1H
	DW	0300H
	DW	0226H
	DW	0260H
	DW	03a5H
	DW	017aH
	DW	011eH
	DW	0d7H
	DW	03d3H
	DW	0318H
	DW	03c1H
	DW	03dH
	DW	02b0H
	DW	0319H
	DW	0284H
	DW	03daH
	DW	0193H
	DW	06aH
	DW	016eH
	DW	0389H
	DW	0284H
	DW	0174H
	DW	0237H
	DW	01d2H
	DW	01b2H
	DW	0285H
	DW	0d2H
	DW	0185H
	DW	0226H
	DW	0397H
	DW	087H
	DW	030cH
	DW	0305H
	DW	027bH
	DW	0185H
	DW	02c3H
	DW	064H
	DW	0272H
	DW	03beH
	DW	0a5H
	DW	01f8H
	DW	0398H
	DW	0b0H
	DW	0c1H
	DW	02c9H
	DW	0359H
	DW	0109H
	DW	0cbH
	DW	032H
	DW	029cH
	DW	06cH
	DW	0285H
	DW	03deH
	DW	0272H
	DW	0c5H
	DW	01feH
	DW	0165H
	DW	0166H
	DW	0352H
	DW	035aH
	DW	016cH
	DW	03a8H
	DW	027eH
CONST	ENDS
PUBLIC	?Alloc@CState@NBZip2@NCompress@@QAE_NXZ		; NCompress::NBZip2::CState::Alloc
EXTRN	_BigAlloc@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Alloc@CState@NBZip2@NCompress@@QAE_NXZ PROC		; NCompress::NBZip2::CState::Alloc
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@Alloc
; Line 78
	push	3601024					; 0036f280H
	call	_BigAlloc@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@Alloc:
; Line 79
	mov	edx, DWORD PTR _this$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx], 0
	setne	al
; Line 80
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Alloc@CState@NBZip2@NCompress@@QAE_NXZ ENDP		; NCompress::NBZip2::CState::Alloc
_TEXT	ENDS
PUBLIC	?Free@CState@NBZip2@NCompress@@QAEXXZ		; NCompress::NBZip2::CState::Free
EXTRN	_BigFree@4:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Free@CState@NBZip2@NCompress@@QAEXXZ PROC		; NCompress::NBZip2::CState::Free
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_BigFree@4
; Line 85
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 86
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CState@NBZip2@NCompress@@QAEXXZ ENDP		; NCompress::NBZip2::CState::Free
_TEXT	ENDS
PUBLIC	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z	; NCompress::NBZip2::CBase::ReadBits
PUBLIC	?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ	; NCompress::NBZip2::CDecoder::ReadByte
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ PROC	; NCompress::NBZip2::CDecoder::ReadByte
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ; NCompress::NBZip2::CBase::ReadBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ ENDP	; NCompress::NBZip2::CDecoder::ReadByte
_TEXT	ENDS
PUBLIC	?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z ; NBitm::CDecoder<CInBuffer>::ReadBits
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z PROC		; NCompress::NBZip2::CBase::ReadBits
; _this$ = ecx
; Line 90
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z ; NBitm::CDecoder<CInBuffer>::ReadBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ENDP		; NCompress::NBZip2::CBase::ReadBits
_TEXT	ENDS
PUBLIC	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ		; NCompress::NBZip2::CBase::ReadBit
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ PROC		; NCompress::NBZip2::CBase::ReadBit
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z ; NBitm::CDecoder<CInBuffer>::ReadBits
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ ENDP		; NCompress::NBZip2::CBase::ReadBit
_TEXT	ENDS
PUBLIC	?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead
PUBLIC	?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z	; NCompress::CMtf8Decoder::GetAndMove
PUBLIC	?GetHead@CMtf8Decoder@NCompress@@QBEEXZ		; NCompress::CMtf8Decoder::GetHead
PUBLIC	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z ; NCompress::NHuffman::CDecoder<20,258>::DecodeSymbol<NBitm::CDecoder<CInBuffer> >
PUBLIC	?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead_Fast
PUBLIC	?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<20,258>::SetCodeLengths
PUBLIC	?Add@CMtf8Decoder@NCompress@@QAEXIE@Z		; NCompress::CMtf8Decoder::Add
PUBLIC	?StartInit@CMtf8Decoder@NCompress@@QAEXXZ	; NCompress::CMtf8Decoder::StartInit
PUBLIC	__$ArrayPad$
PUBLIC	?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z ; NCompress::NBZip2::CBase::ReadBlock
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv133 = -672						; size = 4
_b$67696 = -668						; size = 4
_b$67689 = -664						; size = 4
_nextSym$67680 = -660					; size = 4
_runCounter$67672 = -656				; size = 4
_runPower$67671 = -652					; size = 4
_huffmanDecoder$67670 = -648				; size = 4
_groupSize$67669 = -644					; size = 4
_groupIndex$67668 = -640				; size = 4
_blockSize$ = -636					; size = 4
_i$67663 = -632						; size = 4
_i$67646 = -628						; size = 4
_len$67644 = -624					; size = 4
_lens$67643 = -616					; size = 258
_t$ = -352						; size = 4
_tmp$67635 = -345					; size = 1
_j$67629 = -344						; size = 4
_i$67625 = -340						; size = 4
_t$67620 = -336						; size = 4
_mtfPos$67619 = -328					; size = 6
_numSelectors$ = -316					; size = 4
_numTables$ = -312					; size = 4
_alphaSize$ = -308					; size = 4
_i$67597 = -304						; size = 4
_inUse16$67596 = -296					; size = 16
_numInUse$ = -276					; size = 4
_mtf$ = -268						; size = 256
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_charCounters$ = 8					; size = 4
_blockSizeMax$ = 12					; size = 4
_props$ = 16						; size = 4
?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z PROC ; NCompress::NBZip2::CBase::ReadBlock
; _this$ = ecx
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 672				; 000002a0H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-672]
	mov	ecx, 168				; 000000a8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28336]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+28340]
	adc	edx, 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28336], ecx
	mov	DWORD PTR [eax+28340], edx
; Line 97
	mov	ecx, DWORD PTR _props$[ebp]
	movzx	edx, BYTE PTR [ecx+8]
	test	edx, edx
	je	SHORT $LN62@ReadBlock
; Line 98
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ	; NCompress::NBZip2::CBase::ReadBit
	test	eax, eax
	setne	al
	mov	ecx, DWORD PTR _props$[ebp]
	mov	BYTE PTR [ecx+8], al
$LN62@ReadBlock:
; Line 99
	push	24					; 00000018H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ; NCompress::NBZip2::CBase::ReadBits
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 102
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _blockSizeMax$[ebp]
	jb	SHORT $LN61@ReadBlock
; Line 103
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN61@ReadBlock:
; Line 106
	lea	ecx, DWORD PTR _mtf$[ebp]
	call	?StartInit@CMtf8Decoder@NCompress@@QAEXXZ ; NCompress::CMtf8Decoder::StartInit
; Line 108
	mov	DWORD PTR _numInUse$[ebp], 0
; Line 112
	mov	DWORD PTR _i$67597[ebp], 0
	jmp	SHORT $LN60@ReadBlock
$LN59@ReadBlock:
	mov	edx, DWORD PTR _i$67597[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67597[ebp], edx
$LN60@ReadBlock:
	cmp	DWORD PTR _i$67597[ebp], 16		; 00000010H
	jae	SHORT $LN58@ReadBlock
; Line 113
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ	; NCompress::NBZip2::CBase::ReadBit
	mov	ecx, DWORD PTR _i$67597[ebp]
	mov	BYTE PTR _inUse16$67596[ebp+ecx], al
	jmp	SHORT $LN59@ReadBlock
$LN58@ReadBlock:
; Line 114
	mov	DWORD PTR _i$67597[ebp], 0
	jmp	SHORT $LN57@ReadBlock
$LN56@ReadBlock:
	mov	edx, DWORD PTR _i$67597[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67597[ebp], edx
$LN57@ReadBlock:
	cmp	DWORD PTR _i$67597[ebp], 256		; 00000100H
	jae	SHORT $LN55@ReadBlock
; Line 115
	mov	eax, DWORD PTR _i$67597[ebp]
	shr	eax, 4
	movzx	ecx, BYTE PTR _inUse16$67596[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN54@ReadBlock
; Line 117
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ	; NCompress::NBZip2::CBase::ReadBit
	test	eax, eax
	je	SHORT $LN54@ReadBlock
; Line 118
	mov	edx, DWORD PTR _numInUse$[ebp]
	mov	DWORD PTR tv133[ebp], edx
	mov	eax, DWORD PTR _numInUse$[ebp]
	add	eax, 1
	mov	DWORD PTR _numInUse$[ebp], eax
	movzx	ecx, BYTE PTR _i$67597[ebp]
	push	ecx
	mov	edx, DWORD PTR tv133[ebp]
	push	edx
	lea	ecx, DWORD PTR _mtf$[ebp]
	call	?Add@CMtf8Decoder@NCompress@@QAEXIE@Z	; NCompress::CMtf8Decoder::Add
$LN54@ReadBlock:
; Line 119
	jmp	SHORT $LN56@ReadBlock
$LN55@ReadBlock:
; Line 120
	cmp	DWORD PTR _numInUse$[ebp], 0
	jne	SHORT $LN52@ReadBlock
; Line 121
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN52@ReadBlock:
; Line 124
	mov	eax, DWORD PTR _numInUse$[ebp]
	add	eax, 2
	mov	DWORD PTR _alphaSize$[ebp], eax
; Line 126
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ; NCompress::NBZip2::CBase::ReadBits
	mov	DWORD PTR _numTables$[ebp], eax
; Line 127
	cmp	DWORD PTR _numTables$[ebp], 2
	jb	SHORT $LN50@ReadBlock
	cmp	DWORD PTR _numTables$[ebp], 6
	jbe	SHORT $LN51@ReadBlock
$LN50@ReadBlock:
; Line 128
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN51@ReadBlock:
; Line 130
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ; NCompress::NBZip2::CBase::ReadBits
	mov	DWORD PTR _numSelectors$[ebp], eax
; Line 131
	cmp	DWORD PTR _numSelectors$[ebp], 1
	jb	SHORT $LN48@ReadBlock
	cmp	DWORD PTR _numSelectors$[ebp], 18002	; 00004652H
	jbe	SHORT $LN49@ReadBlock
$LN48@ReadBlock:
; Line 132
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN49@ReadBlock:
; Line 136
	mov	DWORD PTR _t$67620[ebp], 0
$LN47@ReadBlock:
; Line 138
	mov	ecx, DWORD PTR _t$67620[ebp]
	mov	dl, BYTE PTR _t$67620[ebp]
	mov	BYTE PTR _mtfPos$67619[ebp+ecx], dl
; Line 139
	mov	eax, DWORD PTR _t$67620[ebp]
	add	eax, 1
	mov	DWORD PTR _t$67620[ebp], eax
	mov	ecx, DWORD PTR _t$67620[ebp]
	cmp	ecx, DWORD PTR _numTables$[ebp]
	jb	SHORT $LN47@ReadBlock
; Line 140
	mov	DWORD PTR _i$67625[ebp], 0
$LN44@ReadBlock:
; Line 143
	mov	DWORD PTR _j$67629[ebp], 0
$LN41@ReadBlock:
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ	; NCompress::NBZip2::CBase::ReadBit
	test	eax, eax
	je	SHORT $LN40@ReadBlock
; Line 145
	mov	edx, DWORD PTR _j$67629[ebp]
	add	edx, 1
	mov	DWORD PTR _j$67629[ebp], edx
	mov	eax, DWORD PTR _j$67629[ebp]
	cmp	eax, DWORD PTR _numTables$[ebp]
	jb	SHORT $LN39@ReadBlock
; Line 146
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN39@ReadBlock:
; Line 147
	jmp	SHORT $LN41@ReadBlock
$LN40@ReadBlock:
	mov	ecx, DWORD PTR _j$67629[ebp]
	mov	dl, BYTE PTR _mtfPos$67619[ebp+ecx]
	mov	BYTE PTR _tmp$67635[ebp], dl
; Line 148
	jmp	SHORT $LN38@ReadBlock
$LN37@ReadBlock:
	mov	eax, DWORD PTR _j$67629[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$67629[ebp], eax
$LN38@ReadBlock:
	cmp	DWORD PTR _j$67629[ebp], 0
	jbe	SHORT $LN36@ReadBlock
; Line 149
	mov	ecx, DWORD PTR _j$67629[ebp]
	mov	edx, DWORD PTR _j$67629[ebp]
	mov	al, BYTE PTR _mtfPos$67619[ebp+edx-1]
	mov	BYTE PTR _mtfPos$67619[ebp+ecx], al
	jmp	SHORT $LN37@ReadBlock
$LN36@ReadBlock:
; Line 150
	mov	cl, BYTE PTR _tmp$67635[ebp]
	mov	BYTE PTR _mtfPos$67619[ebp], cl
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$67625[ebp]
	mov	al, BYTE PTR _mtfPos$67619[ebp]
	mov	BYTE PTR [edx+56], al
; Line 152
	mov	ecx, DWORD PTR _i$67625[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67625[ebp], ecx
	mov	edx, DWORD PTR _i$67625[ebp]
	cmp	edx, DWORD PTR _numSelectors$[ebp]
	jb	$LN44@ReadBlock
; Line 155
	mov	DWORD PTR _t$[ebp], 0
$LN35@ReadBlock:
; Line 159
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ; NCompress::NBZip2::CBase::ReadBits
	mov	DWORD PTR _len$67644[ebp], eax
; Line 161
	mov	DWORD PTR _i$67646[ebp], 0
	jmp	SHORT $LN32@ReadBlock
$LN31@ReadBlock:
	mov	eax, DWORD PTR _i$67646[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67646[ebp], eax
$LN32@ReadBlock:
	mov	ecx, DWORD PTR _i$67646[ebp]
	cmp	ecx, DWORD PTR _alphaSize$[ebp]
	jae	SHORT $LN30@ReadBlock
$LN29@ReadBlock:
; Line 165
	cmp	DWORD PTR _len$67644[ebp], 1
	jb	SHORT $LN26@ReadBlock
	cmp	DWORD PTR _len$67644[ebp], 20		; 00000014H
	jbe	SHORT $LN27@ReadBlock
$LN26@ReadBlock:
; Line 166
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN27@ReadBlock:
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ	; NCompress::NBZip2::CBase::ReadBit
	test	eax, eax
	jne	SHORT $LN25@ReadBlock
; Line 168
	jmp	SHORT $LN28@ReadBlock
$LN25@ReadBlock:
; Line 169
	mov	edx, DWORD PTR _len$67644[ebp]
	add	edx, 1
	mov	DWORD PTR _len$67644[ebp], edx
; Line 170
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBit@CBase@NBZip2@NCompress@@QAEIXZ	; NCompress::NBZip2::CBase::ReadBit
	shl	eax, 1
	mov	ecx, DWORD PTR _len$67644[ebp]
	sub	ecx, eax
	mov	DWORD PTR _len$67644[ebp], ecx
; Line 171
	jmp	SHORT $LN29@ReadBlock
$LN28@ReadBlock:
; Line 172
	mov	edx, DWORD PTR _i$67646[ebp]
	mov	al, BYTE PTR _len$67644[ebp]
	mov	BYTE PTR _lens$67643[ebp+edx], al
; Line 173
	jmp	$LN31@ReadBlock
$LN30@ReadBlock:
; Line 174
	jmp	SHORT $LN24@ReadBlock
$LN23@ReadBlock:
	mov	ecx, DWORD PTR _i$67646[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67646[ebp], ecx
$LN24@ReadBlock:
	cmp	DWORD PTR _i$67646[ebp], 258		; 00000102H
	jae	SHORT $LN22@ReadBlock
; Line 175
	mov	edx, DWORD PTR _i$67646[ebp]
	mov	BYTE PTR _lens$67643[ebp+edx], 0
	jmp	SHORT $LN23@ReadBlock
$LN22@ReadBlock:
; Line 176
	lea	eax, DWORD PTR _lens$67643[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	imul	ecx, 1712				; 000006b0H
	mov	edx, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [edx+ecx+18060]
	call	?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<20,258>::SetCodeLengths
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN34@ReadBlock
; Line 177
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN34@ReadBlock:
; Line 179
	mov	ecx, DWORD PTR _t$[ebp]
	add	ecx, 1
	mov	DWORD PTR _t$[ebp], ecx
	mov	edx, DWORD PTR _t$[ebp]
	cmp	edx, DWORD PTR _numTables$[ebp]
	jb	$LN35@ReadBlock
; Line 182
	mov	DWORD PTR _i$67663[ebp], 0
	jmp	SHORT $LN20@ReadBlock
$LN19@ReadBlock:
	mov	eax, DWORD PTR _i$67663[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67663[ebp], eax
$LN20@ReadBlock:
	cmp	DWORD PTR _i$67663[ebp], 256		; 00000100H
	jae	SHORT $LN18@ReadBlock
; Line 183
	mov	ecx, DWORD PTR _i$67663[ebp]
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	DWORD PTR [edx+ecx*4], 0
	jmp	SHORT $LN19@ReadBlock
$LN18@ReadBlock:
; Line 186
	mov	DWORD PTR _blockSize$[ebp], 0
; Line 188
	mov	DWORD PTR _groupIndex$67668[ebp], 0
; Line 189
	mov	DWORD PTR _groupSize$67669[ebp], 0
; Line 190
	mov	DWORD PTR _huffmanDecoder$67670[ebp], 0
; Line 191
	mov	DWORD PTR _runPower$67671[ebp], 0
; Line 192
	mov	DWORD PTR _runCounter$67672[ebp], 0
$LN17@ReadBlock:
; Line 196
	cmp	DWORD PTR _groupSize$67669[ebp], 0
	jne	SHORT $LN15@ReadBlock
; Line 198
	mov	eax, DWORD PTR _groupIndex$67668[ebp]
	cmp	eax, DWORD PTR _numSelectors$[ebp]
	jb	SHORT $LN14@ReadBlock
; Line 199
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN14@ReadBlock:
; Line 200
	mov	DWORD PTR _groupSize$67669[ebp], 50	; 00000032H
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _groupIndex$67668[ebp]
	movzx	edx, BYTE PTR [ecx+56]
	imul	edx, 1712				; 000006b0H
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+18060]
	mov	DWORD PTR _huffmanDecoder$67670[ebp], ecx
	mov	edx, DWORD PTR _groupIndex$67668[ebp]
	add	edx, 1
	mov	DWORD PTR _groupIndex$67668[ebp], edx
$LN15@ReadBlock:
; Line 203
	mov	eax, DWORD PTR _groupSize$67669[ebp]
	sub	eax, 1
	mov	DWORD PTR _groupSize$67669[ebp], eax
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead_Fast
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@ReadBlock
; Line 206
	jmp	$LN16@ReadBlock
$LN13@ReadBlock:
; Line 208
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	mov	ecx, DWORD PTR _huffmanDecoder$67670[ebp]
	call	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z ; NCompress::NHuffman::CDecoder<20,258>::DecodeSymbol<NBitm::CDecoder<CInBuffer> >
	mov	DWORD PTR _nextSym$67680[ebp], eax
; Line 210
	cmp	DWORD PTR _nextSym$67680[ebp], 2
	jae	SHORT $LN12@ReadBlock
; Line 212
	mov	eax, DWORD PTR _nextSym$67680[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _runPower$67671[ebp]
	shl	eax, cl
	add	eax, DWORD PTR _runCounter$67672[ebp]
	mov	DWORD PTR _runCounter$67672[ebp], eax
	mov	ecx, DWORD PTR _runPower$67671[ebp]
	add	ecx, 1
	mov	DWORD PTR _runPower$67671[ebp], ecx
; Line 213
	mov	edx, DWORD PTR _blockSizeMax$[ebp]
	sub	edx, DWORD PTR _blockSize$[ebp]
	cmp	edx, DWORD PTR _runCounter$67672[ebp]
	jae	SHORT $LN11@ReadBlock
; Line 214
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN11@ReadBlock:
; Line 215
	jmp	$LN17@ReadBlock
$LN12@ReadBlock:
; Line 217
	cmp	DWORD PTR _runCounter$67672[ebp], 0
	je	SHORT $LN10@ReadBlock
; Line 219
	lea	ecx, DWORD PTR _mtf$[ebp]
	call	?GetHead@CMtf8Decoder@NCompress@@QBEEXZ	; NCompress::CMtf8Decoder::GetHead
	movzx	eax, al
	mov	DWORD PTR _b$67689[ebp], eax
; Line 220
	mov	ecx, DWORD PTR _b$67689[ebp]
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, DWORD PTR _runCounter$67672[ebp]
	mov	ecx, DWORD PTR _b$67689[ebp]
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
$LN9@ReadBlock:
; Line 222
	mov	eax, DWORD PTR _blockSize$[ebp]
	mov	ecx, DWORD PTR _charCounters$[ebp]
	mov	edx, DWORD PTR _b$67689[ebp]
	mov	DWORD PTR [ecx+eax*4+1024], edx
	mov	eax, DWORD PTR _blockSize$[ebp]
	add	eax, 1
	mov	DWORD PTR _blockSize$[ebp], eax
; Line 223
	mov	ecx, DWORD PTR _runCounter$67672[ebp]
	sub	ecx, 1
	mov	DWORD PTR _runCounter$67672[ebp], ecx
	jne	SHORT $LN9@ReadBlock
; Line 224
	mov	DWORD PTR _runPower$67671[ebp], 0
$LN10@ReadBlock:
; Line 226
	mov	edx, DWORD PTR _nextSym$67680[ebp]
	cmp	edx, DWORD PTR _numInUse$[ebp]
	ja	SHORT $LN6@ReadBlock
; Line 228
	mov	eax, DWORD PTR _nextSym$67680[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _mtf$[ebp]
	call	?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z ; NCompress::CMtf8Decoder::GetAndMove
	movzx	ecx, al
	mov	DWORD PTR _b$67696[ebp], ecx
; Line 229
	mov	edx, DWORD PTR _blockSize$[ebp]
	cmp	edx, DWORD PTR _blockSizeMax$[ebp]
	jb	SHORT $LN5@ReadBlock
; Line 230
	mov	eax, 1
	jmp	$LN63@ReadBlock
$LN5@ReadBlock:
; Line 231
	mov	eax, DWORD PTR _b$67696[ebp]
	mov	ecx, DWORD PTR _charCounters$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	add	edx, 1
	mov	eax, DWORD PTR _b$67696[ebp]
	mov	ecx, DWORD PTR _charCounters$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 232
	mov	edx, DWORD PTR _blockSize$[ebp]
	mov	eax, DWORD PTR _charCounters$[ebp]
	mov	ecx, DWORD PTR _b$67696[ebp]
	mov	DWORD PTR [eax+edx*4+1024], ecx
	mov	edx, DWORD PTR _blockSize$[ebp]
	add	edx, 1
	mov	DWORD PTR _blockSize$[ebp], edx
	jmp	SHORT $LN4@ReadBlock
$LN6@ReadBlock:
; Line 234
	mov	eax, DWORD PTR _numInUse$[ebp]
	add	eax, 1
	cmp	DWORD PTR _nextSym$67680[ebp], eax
	jne	SHORT $LN3@ReadBlock
; Line 235
	jmp	SHORT $LN16@ReadBlock
; Line 236
	jmp	SHORT $LN4@ReadBlock
$LN3@ReadBlock:
; Line 237
	mov	eax, 1
	jmp	SHORT $LN63@ReadBlock
$LN4@ReadBlock:
; Line 238
	jmp	$LN17@ReadBlock
$LN16@ReadBlock:
; Line 240
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ReadBlock
; Line 241
	mov	eax, 1
	jmp	SHORT $LN63@ReadBlock
$LN1@ReadBlock:
; Line 243
	mov	edx, DWORD PTR _props$[ebp]
	mov	eax, DWORD PTR _blockSize$[ebp]
	mov	DWORD PTR [edx], eax
; Line 244
	mov	ecx, DWORD PTR _props$[ebp]
	mov	edx, DWORD PTR _props$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx]
	sbb	eax, eax
	add	eax, 1
$LN63@ReadBlock:
; Line 245
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN71@ReadBlock
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 672				; 000002a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN71@ReadBlock:
	DD	4
	DD	$LN70@ReadBlock
$LN70@ReadBlock:
	DD	-268					; fffffef4H
	DD	256					; 00000100H
	DD	$LN66@ReadBlock
	DD	-296					; fffffed8H
	DD	16					; 00000010H
	DD	$LN67@ReadBlock
	DD	-328					; fffffeb8H
	DD	6
	DD	$LN68@ReadBlock
	DD	-616					; fffffd98H
	DD	258					; 00000102H
	DD	$LN69@ReadBlock
$LN69@ReadBlock:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN68@ReadBlock:
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN67@ReadBlock:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	85					; 00000055H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	49					; 00000031H
	DB	54					; 00000036H
	DB	0
$LN66@ReadBlock:
	DB	109					; 0000006dH
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	0
?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z ENDP ; NCompress::NBZip2::CBase::ReadBlock
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StartInit@CMtf8Decoder@NCompress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartInit@CMtf8Decoder@NCompress@@QAEXXZ PROC		; NCompress::CMtf8Decoder::StartInit, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\mtf8.h
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	256					; 00000100H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartInit@CMtf8Decoder@NCompress@@QAEXXZ ENDP		; NCompress::CMtf8Decoder::StartInit
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Add@CMtf8Decoder@NCompress@@QAEXIE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
_val$ = 12						; size = 1
?Add@CMtf8Decoder@NCompress@@QAEXIE@Z PROC		; NCompress::CMtf8Decoder::Add, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pos$[ebp]
	shr	eax, 2
	movzx	edx, BYTE PTR _val$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	and	ecx, 3
	shl	ecx, 3
	shl	edx, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _pos$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	esp, ebp
	pop	ebp
	ret	8
?Add@CMtf8Decoder@NCompress@@QAEXIE@Z ENDP		; NCompress::CMtf8Decoder::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetHead@CMtf8Decoder@NCompress@@QBEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHead@CMtf8Decoder@NCompress@@QBEEXZ PROC		; NCompress::CMtf8Decoder::GetHead, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHead@CMtf8Decoder@NCompress@@QBEEXZ ENDP		; NCompress::CMtf8Decoder::GetHead
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z
_TEXT	SEGMENT
_mask$ = -36						; size = 4
_next$ = -32						; size = 4
_n1$67556 = -28						; size = 4
_n0$67555 = -24						; size = 4
_next$67551 = -20					; size = 4
_i$ = -16						; size = 4
_prev$ = -12						; size = 4
_lim$ = -8						; size = 4
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z PROC	; NCompress::CMtf8Decoder::GetAndMove, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	mov	eax, DWORD PTR _pos$[ebp]
	shr	eax, 2
	mov	DWORD PTR _lim$[ebp], eax
; Line 87
	mov	ecx, DWORD PTR _pos$[ebp]
	and	ecx, 3
	shl	ecx, 3
	mov	DWORD PTR _pos$[ebp], ecx
; Line 88
	mov	edx, DWORD PTR _lim$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	mov	ecx, DWORD PTR _pos$[ebp]
	shr	edx, cl
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _prev$[ebp], edx
; Line 90
	mov	DWORD PTR _i$[ebp], 0
; Line 91
	mov	eax, DWORD PTR _lim$[ebp]
	and	eax, 1
	je	SHORT $LN4@GetAndMove
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _next$67551[ebp], edx
; Line 94
	mov	eax, DWORD PTR _next$67551[ebp]
	shl	eax, 8
	or	eax, DWORD PTR _prev$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 95
	mov	edx, DWORD PTR _next$67551[ebp]
	shr	edx, 24					; 00000018H
	mov	DWORD PTR _prev$[ebp], edx
; Line 96
	mov	DWORD PTR _i$[ebp], 1
; Line 97
	mov	eax, DWORD PTR _lim$[ebp]
	sub	eax, 1
	mov	DWORD PTR _lim$[ebp], eax
$LN4@GetAndMove:
; Line 99
	jmp	SHORT $LN3@GetAndMove
$LN2@GetAndMove:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 2
	mov	DWORD PTR _i$[ebp], ecx
$LN3@GetAndMove:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _lim$[ebp]
	jae	SHORT $LN1@GetAndMove
; Line 101
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _n0$67555[ebp], edx
; Line 102
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _n1$67556[ebp], edx
; Line 103
	mov	eax, DWORD PTR _n0$67555[ebp]
	shl	eax, 8
	or	eax, DWORD PTR _prev$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 104
	mov	eax, DWORD PTR _n1$67556[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _n0$67555[ebp]
	shr	ecx, 24					; 00000018H
	or	eax, ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+edx*4+4], eax
; Line 105
	mov	edx, DWORD PTR _n1$67556[ebp]
	shr	edx, 24					; 00000018H
	mov	DWORD PTR _prev$[ebp], edx
; Line 106
	jmp	SHORT $LN2@GetAndMove
$LN1@GetAndMove:
; Line 107
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _next$[ebp], edx
; Line 108
	mov	eax, 256				; 00000100H
	mov	ecx, DWORD PTR _pos$[ebp]
	shl	eax, cl
	sub	eax, 1
	mov	DWORD PTR _mask$[ebp], eax
; Line 109
	mov	ecx, DWORD PTR _mask$[ebp]
	not	ecx
	and	ecx, DWORD PTR _next$[ebp]
	mov	edx, DWORD PTR _next$[ebp]
	shl	edx, 8
	or	edx, DWORD PTR _prev$[ebp]
	and	edx, DWORD PTR _mask$[ebp]
	or	ecx, edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
; Line 111
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAndMove@CMtf8Decoder@NCompress@@QAEEI@Z ENDP	; NCompress::CMtf8Decoder::GetAndMove
_TEXT	ENDS
PUBLIC	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
PUBLIC	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CManualResetEvent::~CManualResetEvent
PUBLIC	??1CBase@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CBase::~CBase
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
PUBLIC	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
PUBLIC	??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CManualResetEvent::CManualResetEvent
PUBLIC	??0CBZip2CombinedCrc@@QAE@XZ			; CBZip2CombinedCrc::CBZip2CombinedCrc
PUBLIC	??0CBase@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CBase::CBase
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
PUBLIC	??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ ; NCompress::NBZip2::CDecoder::`vftable'
PUBLIC	??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@ ; NCompress::NBZip2::CDecoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ICompressSetCoderMt@@QAE@XZ			; ICompressSetCoderMt::ICompressSetCoderMt
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CDecoder@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CDecoder::CDecoder
PUBLIC	??_R4CDecoder@NBZip2@NCompress@@6BICompressCoder@@@ ; NCompress::NBZip2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDecoder@NBZip2@NCompress@@@8		; NCompress::NBZip2::CDecoder `RTTI Type Descriptor'
PUBLIC	??_R3CDecoder@NBZip2@NCompress@@8		; NCompress::NBZip2::CDecoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDecoder@NBZip2@NCompress@@8		; NCompress::NBZip2::CDecoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDecoder@NBZip2@NCompress@@8	; NCompress::NBZip2::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressSetCoderMt@@8		; ICompressSetCoderMt::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressSetCoderMt@@@8			; ICompressSetCoderMt `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetCoderMt@@8			; ICompressSetCoderMt::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetCoderMt@@8			; ICompressSetCoderMt::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetCoderMt@@8		; ICompressSetCoderMt::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBZip2::CDecoder::QueryInterface
PUBLIC	?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ	; NCompress::NBZip2::CDecoder::AddRef
PUBLIC	?Release@CDecoder@NBZip2@NCompress@@UAGKXZ	; NCompress::NBZip2::CDecoder::Release
PUBLIC	?Code@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::Code
PUBLIC	?SetInStream@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z ; NCompress::NBZip2::CDecoder::SetInStream
PUBLIC	?ReleaseInStream@CDecoder@NBZip2@NCompress@@UAGJXZ ; NCompress::NBZip2::CDecoder::ReleaseInStream
PUBLIC	??_R4CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ ; NCompress::NBZip2::CDecoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDecoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NBZip2::CDecoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CDecoder@NBZip2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBZip2::CDecoder::AddRef`adjustor{4}'
PUBLIC	?Release@CDecoder@NBZip2@NCompress@@W3AGKXZ	; [thunk]:NCompress::NBZip2::CDecoder::Release`adjustor{4}'
PUBLIC	?SetNumberOfThreads@CDecoder@NBZip2@NCompress@@UAGJI@Z ; NCompress::NBZip2::CDecoder::SetNumberOfThreads
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
rdata$r	SEGMENT
??_R4CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ DD 00H ; NCompress::NBZip2::CDecoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBZip2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R17?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetCoderMt@@8 DD FLAT:??_R0?AUICompressSetCoderMt@@@8 ; ICompressSetCoderMt::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R2ICompressSetCoderMt@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetCoderMt@@8 ; ICompressSetCoderMt::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R3ICompressSetCoderMt@@8 DD 00H			; ICompressSetCoderMt::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetCoderMt@@@8
_DATA	SEGMENT
??_R0?AUICompressSetCoderMt@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetCoderMt `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetCoderMt@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressSetCoderMt@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressSetCoderMt@@8 DD FLAT:??_R0?AUICompressSetCoderMt@@@8 ; ICompressSetCoderMt::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDecoder@NBZip2@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDecoder@NBZip2@NCompress@@8 DD FLAT:??_R0?AVCDecoder@NBZip2@NCompress@@@8 ; NCompress::NBZip2::CDecoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDecoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CDecoder@NBZip2@NCompress@@8
rdata$r	SEGMENT
??_R2CDecoder@NBZip2@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CDecoder@NBZip2@NCompress@@8 ; NCompress::NBZip2::CDecoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressSetCoderMt@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CDecoder@NBZip2@NCompress@@8
rdata$r	SEGMENT
??_R3CDecoder@NBZip2@NCompress@@8 DD 00H		; NCompress::NBZip2::CDecoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	06H
	DD	FLAT:??_R2CDecoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDecoder@NBZip2@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCDecoder@NBZip2@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NBZip2::CDecoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDecoder@NBZip2@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDecoder@NBZip2@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CDecoder@NBZip2@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NBZip2::CDecoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDecoder@NBZip2@NCompress@@@8
	DD	FLAT:??_R3CDecoder@NBZip2@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
CONST	SEGMENT
??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ DD FLAT:??_R4CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@ ; NCompress::NBZip2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBZip2@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CDecoder@NBZip2@NCompress@@W3AGKXZ
	DD	FLAT:?SetNumberOfThreads@CDecoder@NBZip2@NCompress@@UAGJI@Z
CONST	ENDS
;	COMDAT ??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CDecoder@NBZip2@NCompress@@6BICompressCoder@@@ ; NCompress::NBZip2::CDecoder::`vftable'
	DD	FLAT:?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ
	DD	FLAT:?Release@CDecoder@NBZip2@NCompress@@UAGKXZ
	DD	FLAT:?Code@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:?SetInStream@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CDecoder@NBZip2@NCompress@@UAGJXZ
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CDecoder@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$3
__ehfuncinfo$??0CDecoder@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CDecoder@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDecoder@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CDecoder::CDecoder
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDecoder@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressSetCoderMt@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	??0CBase@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CBase::CBase
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28668				; 00006ffcH
	call	??0CBZip2CombinedCrc@@QAE@XZ		; CBZip2CombinedCrc::CBZip2CombinedCrc
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	call	??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28688				; 00007010H
	call	??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	call	??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
; Line 417
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28676], 0
; Line 418
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28680], 0
; Line 419
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28712], 1
; Line 421
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28664], 1
; Line 422
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	jmp	??1CBase@NBZip2@NCompress@@QAE@XZ
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??0CDecoder@NBZip2@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28688				; 00007010H
	jmp	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
__ehhandler$??0CDecoder@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDecoder@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDecoder@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CDecoder::CDecoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
EXTRN	_CriticalSection_Init@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_CriticalSection_Init@4
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::CCriticalSection
_TEXT	ENDS
EXTRN	__imp__DeleteCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__DeleteCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBZip2CombinedCrc@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBZip2CombinedCrc@@QAE@XZ PROC			; CBZip2CombinedCrc::CBZip2CombinedCrc, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBZip2CombinedCrc@@QAE@XZ ENDP			; CBZip2CombinedCrc::CBZip2CombinedCrc
_TEXT	ENDS
PUBLIC	??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ	; NBitm::CDecoder<CInBuffer>::CDecoder<CInBuffer>
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBase@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBase@NBZip2@NCompress@@QAE@XZ PROC			; NCompress::NBZip2::CBase::CBase, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.h
; Line 84
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28336], 0
	mov	DWORD PTR [eax+28340], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBase@NBZip2@NCompress@@QAE@XZ ENDP			; NCompress::NBZip2::CBase::CBase
_TEXT	ENDS
PUBLIC	??0CInBuffer@@QAE@XZ				; CInBuffer::CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ PROC		; NBitm::CDecoder<CInBuffer>::CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CInBuffer@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ ENDP		; NBitm::CDecoder<CInBuffer>::CDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	??0CInBufferBase@@QAE@XZ:PROC			; CInBufferBase::CInBufferBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBuffer@@QAE@XZ PROC				; CInBuffer::CInBuffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBuffer@@QAE@XZ ENDP				; CInBuffer::CInBuffer
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ICompressSetCoderMt:BYTE
EXTRN	_IID_ICompressCoder:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv92 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NBZip2::CDecoder::QueryInterface, COMDAT
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter
$LN6@QueryInter:
	push	OFFSET _IID_ICompressCoder
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@QueryInter
$LN4@QueryInter:
; Line 178
	push	OFFSET _IID_ICompressSetCoderMt
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN9@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv92[ebp], edx
	jmp	SHORT $LN10@QueryInter
$LN9@QueryInter:
	mov	DWORD PTR tv92[ebp], 0
$LN10@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN5@QueryInter
$LN2@QueryInter:
; Line 181
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN7@QueryInter
$LN5@QueryInter:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	xor	eax, eax
$LN7@QueryInter:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NBZip2::CDecoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ PROC		; NCompress::NBZip2::CDecoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.h
; Line 182
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ ENDP		; NCompress::NBZip2::CDecoder::AddRef
_TEXT	ENDS
PUBLIC	??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z	; NCompress::NBZip2::CDecoder::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CDecoder@NBZip2@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv81 = -16						; size = 4
tv70 = -12						; size = 4
$T68503 = -8						; size = 4
$T68502 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDecoder@NBZip2@NCompress@@UAGKXZ PROC		; NCompress::NBZip2::CDecoder::Release, COMDAT
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+8], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T68503[ebp], edx
	mov	eax, DWORD PTR $T68503[ebp]
	mov	DWORD PTR $T68502[ebp], eax
	cmp	DWORD PTR $T68502[ebp], 0
	je	SHORT $LN4@Release
	push	1
	mov	ecx, DWORD PTR $T68502[ebp]
	call	??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDecoder@NBZip2@NCompress@@UAGKXZ ENDP		; NCompress::NBZip2::CDecoder::Release
_TEXT	ENDS
PUBLIC	??1CDecoder@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CDecoder::~CDecoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z PROC		; NCompress::NBZip2::CDecoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDecoder@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CDecoder::~CDecoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDecoder@NBZip2@NCompress@@QAEPAXI@Z ENDP		; NCompress::NBZip2::CDecoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ	; NBitm::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CBase@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBase@NBZip2@NCompress@@QAE@XZ$0
__ehfuncinfo$??1CBase@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CBase@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBase@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBase@NBZip2@NCompress@@QAE@XZ PROC			; NCompress::NBZip2::CBase::~CBase, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBase@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBase@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__ehhandler$??1CBase@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBase@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBase@NBZip2@NCompress@@QAE@XZ ENDP			; NCompress::NBZip2::CBase::~CBase
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ PROC		; NBitm::CDecoder<CInBuffer>::~CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDecoder@VCInBuffer@@@NBitm@@QAE@XZ ENDP		; NBitm::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??_7ICompressSetCoderMt@@6B@			; ICompressSetCoderMt::`vftable'
PUBLIC	??_R4ICompressSetCoderMt@@6B@			; ICompressSetCoderMt::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetCoderMt@@6B@
rdata$r	SEGMENT
??_R4ICompressSetCoderMt@@6B@ DD 00H			; ICompressSetCoderMt::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetCoderMt@@@8
	DD	FLAT:??_R3ICompressSetCoderMt@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetCoderMt@@6B@
CONST	SEGMENT
??_7ICompressSetCoderMt@@6B@ DD FLAT:??_R4ICompressSetCoderMt@@6B@ ; ICompressSetCoderMt::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetCoderMt@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetCoderMt@@QAE@XZ PROC			; ICompressSetCoderMt::ICompressSetCoderMt, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetCoderMt@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetCoderMt@@QAE@XZ ENDP			; ICompressSetCoderMt::ICompressSetCoderMt
_TEXT	ENDS
PUBLIC	??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ	; NWindows::NSynchronization::CBaseEvent::CBaseEvent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CManualResetEvent::CManualResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::CBaseEvent
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CManualResetEvent::CManualResetEvent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ PROC	; NWindows::NSynchronization::CBaseEvent::CBaseEvent, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ ENDP	; NWindows::NSynchronization::CBaseEvent::CBaseEvent
_TEXT	ENDS
PUBLIC	??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ	; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CManualResetEvent::~CManualResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CManualResetEvent::~CManualResetEvent
_TEXT	ENDS
PUBLIC	?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ PROC	; NWindows::NSynchronization::CBaseEvent::~CBaseEvent, COMDAT
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ ENDP	; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
_TEXT	ENDS
EXTRN	_HandlePtr_Close@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CBaseEvent::Close, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_HandlePtr_Close@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CBaseEvent::Close
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	?Free@CDecoder@NBZip2@NCompress@@QAEXXZ		; NCompress::NBZip2::CDecoder::Free
xdata$x	SEGMENT
__ehfuncinfo$??1CDecoder@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1CDecoder@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CDecoder@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$4
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDecoder@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CDecoder::~CDecoder
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 427
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDecoder@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CDecoder@NBZip2@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CDecoder@NBZip2@NCompress@@6BICompressSetCoderMt@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 428
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CDecoder@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CDecoder::Free
; Line 429
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	call	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28688				; 00007010H
	call	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	call	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	??1CBase@NBZip2@NCompress@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	jmp	??1CBase@NBZip2@NCompress@@QAE@XZ
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28688				; 00007010H
	jmp	??1CCriticalSection@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CCriticalSection::~CCriticalSection
__unwindfunclet$??1CDecoder@NBZip2@NCompress@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	jmp	??1CManualResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??1CDecoder@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDecoder@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDecoder@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CDecoder::~CDecoder
PUBLIC	?Create@CState@NBZip2@NCompress@@QAEJXZ		; NCompress::NBZip2::CState::Create
PUBLIC	??0CState@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CState::CState
PUBLIC	??1CState@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CState::~CState
PUBLIC	?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
PUBLIC	?Create@CDecoder@NBZip2@NCompress@@QAEJXZ	; NCompress::NBZip2::CDecoder::Create
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
xdata$x	SEGMENT
__catchsym$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$0
__tryblocktable$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$3
__unwindtable$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ
	DD	01H
	DD	FLAT:__tryblocktable$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv141 = -64						; size = 4
tv160 = -60						; size = 4
$T68558 = -56						; size = 4
$T68555 = -52						; size = 4
$T68554 = -48						; size = 4
$T68553 = -44						; size = 4
_res$67823 = -40					; size = 4
_ti$67821 = -36						; size = 4
_t$67817 = -32						; size = 4
___result_$67801 = -28					; size = 4
___result_$67799 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?Create@CDecoder@NBZip2@NCompress@@QAEJXZ PROC		; NCompress::NBZip2::CDecoder::Create
; _this$ = ecx
; Line 434
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 435
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	call	?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67799[ebp], eax
	cmp	DWORD PTR ___result_$67799[ebp], 0
	je	SHORT $LN10@Create
	mov	eax, DWORD PTR ___result_$67799[ebp]
	jmp	$LN11@Create
$LN10@Create:
; Line 436
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	call	?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67801[ebp], eax
	cmp	DWORD PTR ___result_$67801[ebp], 0
	je	SHORT $LN9@Create
	mov	eax, DWORD PTR ___result_$67801[ebp]
	jmp	$LN11@Create
$LN9@Create:
; Line 437
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28676], 0
	je	SHORT $LN8@Create
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+28680]
	cmp	eax, DWORD PTR [edx+28712]
	jne	SHORT $LN8@Create
; Line 438
	xor	eax, eax
	jmp	$LN11@Create
$LN8@Create:
; Line 439
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CDecoder@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CDecoder::Free
; Line 440
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, 1
	cmp	edx, DWORD PTR [ecx+28712]
	sbb	eax, eax
	neg	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28716], al
; Line 441
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28712]
	mov	DWORD PTR [edx+28680], ecx
; Line 443
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 444
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28712]
	mov	DWORD PTR $T68553[ebp], eax
	xor	ecx, ecx
	mov	eax, DWORD PTR $T68553[ebp]
	mov	edx, 284				; 0000011cH
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	DWORD PTR $T68555[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T68555[ebp], 0
	je	SHORT $LN13@Create
	mov	edx, DWORD PTR $T68555[ebp]
	mov	eax, DWORD PTR $T68553[ebp]
	mov	DWORD PTR [edx], eax
	push	OFFSET ??1CState@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CState::~CState
	push	OFFSET ??0CState@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CState::CState
	mov	ecx, DWORD PTR $T68553[ebp]
	push	ecx
	push	284					; 0000011cH
	mov	edx, DWORD PTR $T68555[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T68555[ebp]
	add	eax, 4
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN14@Create
$LN13@Create:
	mov	DWORD PTR tv141[ebp], 0
$LN14@Create:
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR $T68554[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T68554[ebp]
	mov	DWORD PTR [edx+28676], eax
; Line 445
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28676], 0
	jne	SHORT $LN6@Create
; Line 446
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN11@Create
$LN6@Create:
; Line 447
	jmp	SHORT $LN15@Create
__catch$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$0:
; Line 448
	mov	DWORD PTR $T68558[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN19@Create
	ret	0
	mov	eax, $LN15@Create
	ret	0
$LN15@Create:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@Create
$LN19@Create:
	mov	eax, DWORD PTR $T68558[ebp]
	jmp	SHORT $LN11@Create
$LN18@Create:
; Line 449
	mov	DWORD PTR _t$67817[ebp], 0
	jmp	SHORT $LN5@Create
$LN4@Create:
	mov	edx, DWORD PTR _t$67817[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67817[ebp], edx
$LN5@Create:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67817[ebp]
	cmp	ecx, DWORD PTR [eax+28712]
	jae	SHORT $LN3@Create
; Line 451
	mov	edx, DWORD PTR _t$67817[ebp]
	imul	edx, 284				; 0000011cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+28676]
	mov	DWORD PTR _ti$67821[ebp], edx
; Line 452
	mov	ecx, DWORD PTR _ti$67821[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28716]
	test	ecx, ecx
	je	SHORT $LN2@Create
; Line 455
	mov	ecx, DWORD PTR _ti$67821[ebp]
	call	?Create@CState@NBZip2@NCompress@@QAEJXZ	; NCompress::NBZip2::CState::Create
	mov	DWORD PTR _res$67823[ebp], eax
; Line 456
	cmp	DWORD PTR _res$67823[ebp], 0
	je	SHORT $LN2@Create
; Line 458
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _t$67817[ebp]
	mov	DWORD PTR [edx+28712], eax
; Line 459
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CDecoder@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CDecoder::Free
; Line 460
	mov	eax, DWORD PTR _res$67823[ebp]
	jmp	SHORT $LN11@Create
$LN2@Create:
; Line 463
	jmp	SHORT $LN4@Create
$LN3@Create:
; Line 464
	xor	eax, eax
$LN11@Create:
; Line 465
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ$2:
	mov	eax, DWORD PTR $T68555[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Create@CDecoder@NBZip2@NCompress@@QAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Create@CDecoder@NBZip2@NCompress@@QAEJXZ ENDP		; NCompress::NBZip2::CDecoder::Create
PUBLIC	?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ; NWindows::NSynchronization::CBaseEvent::IsCreated
EXTRN	_ManualResetEvent_CreateNotSignaled@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ; NWindows::NSynchronization::CBaseEvent::IsCreated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@CreateIfNo
; Line 60
	xor	eax, eax
	jmp	SHORT $LN2@CreateIfNo
$LN1@CreateIfNo:
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_ManualResetEvent_CreateNotSignaled@4
$LN2@CreateIfNo:
; Line 62
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateIfNotCreated@CManualResetEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CManualResetEvent::CreateIfNotCreated
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ PROC ; NWindows::NSynchronization::CBaseEvent::IsCreated, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ENDP ; NWindows::NSynchronization::CBaseEvent::IsCreated
_TEXT	ENDS
PUBLIC	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CAutoResetEvent::~CAutoResetEvent
PUBLIC	??1CThread@NWindows@@QAE@XZ			; NWindows::CThread::~CThread
PUBLIC	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CAutoResetEvent::CAutoResetEvent
PUBLIC	??0CThread@NWindows@@QAE@XZ			; NWindows::CThread::CThread
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.h
xdata$x	SEGMENT
__unwindtable$??0CState@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$2
__ehfuncinfo$??0CState@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CState@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CState@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CState@NBZip2@NCompress@@QAE@XZ PROC			; NCompress::NBZip2::CState::CState, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CState@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CThread@NWindows@@QAE@XZ		; NWindows::CThread::CThread
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CThread@NWindows@@QAE@XZ		; NWindows::CThread::~CThread
__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??0CState@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??0CState@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CState@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CState@NBZip2@NCompress@@QAE@XZ ENDP			; NCompress::NBZip2::CState::CState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CThread@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CThread@NWindows@@QAE@XZ PROC			; NWindows::CThread::CThread, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\thread.h
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CThread@NWindows@@QAE@XZ ENDP			; NWindows::CThread::CThread
_TEXT	ENDS
PUBLIC	?Close@CThread@NWindows@@QAEIXZ			; NWindows::CThread::Close
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CThread@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CThread@NWindows@@QAE@XZ PROC			; NWindows::CThread::~CThread, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CThread@NWindows@@QAEIXZ		; NWindows::CThread::Close
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CThread@NWindows@@QAE@XZ ENDP			; NWindows::CThread::~CThread
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Close@CThread@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CThread@NWindows@@QAEIXZ PROC			; NWindows::CThread::Close, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_HandlePtr_Close@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CThread@NWindows@@QAEIXZ ENDP			; NWindows::CThread::Close
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.h
xdata$x	SEGMENT
__unwindtable$??1CState@NBZip2@NCompress@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$3
__ehfuncinfo$??1CState@NBZip2@NCompress@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CState@NBZip2@NCompress@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CState@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CState@NBZip2@NCompress@@QAE@XZ PROC			; NCompress::NBZip2::CState::~CState, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CState@NBZip2@NCompress@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CState@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CState::Free
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CThread@NWindows@@QAE@XZ		; NWindows::CThread::~CThread
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CThread@NWindows@@QAE@XZ		; NWindows::CThread::~CThread
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__unwindfunclet$??1CState@NBZip2@NCompress@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
__ehhandler$??1CState@NBZip2@NCompress@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CState@NBZip2@NCompress@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CState@NBZip2@NCompress@@QAE@XZ ENDP			; NCompress::NBZip2::CState::~CState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CAutoResetEvent::CAutoResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::CBaseEvent
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CAutoResetEvent::CAutoResetEvent
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ PROC ; NWindows::NSynchronization::CAutoResetEvent::~CAutoResetEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseEvent@NSynchronization@NWindows@@QAE@XZ ; NWindows::NSynchronization::CBaseEvent::~CBaseEvent
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoResetEvent@NSynchronization@NWindows@@QAE@XZ ENDP ; NWindows::NSynchronization::CAutoResetEvent::~CAutoResetEvent
_TEXT	ENDS
PUBLIC	??_ECState@NBZip2@NCompress@@QAEPAXI@Z		; NCompress::NBZip2::CState::`vector deleting destructor'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_ECState@NBZip2@NCompress@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_ECState@NBZip2@NCompress@@QAEPAXI@Z PROC		; NCompress::NBZip2::CState::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1CState@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CState::~CState
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	284					; 0000011cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR ___flags$[ebp]
	and	ecx, 1
	je	SHORT $LN2@vector
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CState@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CState::~CState
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_ECState@NBZip2@NCompress@@QAEPAXI@Z ENDP		; NCompress::NBZip2::CState::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?Wait@CThread@NWindows@@QAEIXZ			; NWindows::CThread::Wait
PUBLIC	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv90 = -24						; size = 4
$T68615 = -20						; size = 4
$T68614 = -16						; size = 4
_s$67842 = -12						; size = 4
_t$67838 = -8						; size = 4
_this$ = -4						; size = 4
?Free@CDecoder@NBZip2@NCompress@@QAEXXZ PROC		; NCompress::NBZip2::CDecoder::Free
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 468
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28676], 0
	jne	SHORT $LN5@Free
; Line 470
	jmp	$LN6@Free
$LN5@Free:
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28724], 1
; Line 472
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 473
	mov	DWORD PTR _t$67838[ebp], 0
	jmp	SHORT $LN4@Free
$LN3@Free:
	mov	edx, DWORD PTR _t$67838[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67838[ebp], edx
$LN4@Free:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67838[ebp]
	cmp	ecx, DWORD PTR [eax+28712]
	jae	SHORT $LN2@Free
; Line 475
	mov	edx, DWORD PTR _t$67838[ebp]
	imul	edx, 284				; 0000011cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+28676]
	mov	DWORD PTR _s$67842[ebp], edx
; Line 476
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+28716]
	test	edx, edx
	je	SHORT $LN1@Free
; Line 477
	mov	ecx, DWORD PTR _s$67842[ebp]
	add	ecx, 8
	call	?Wait@CThread@NWindows@@QAEIXZ		; NWindows::CThread::Wait
$LN1@Free:
; Line 478
	mov	ecx, DWORD PTR _s$67842[ebp]
	call	?Free@CState@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CState::Free
; Line 479
	jmp	SHORT $LN3@Free
$LN2@Free:
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28676]
	mov	DWORD PTR $T68615[ebp], ecx
	mov	edx, DWORD PTR $T68615[ebp]
	mov	DWORD PTR $T68614[ebp], edx
	cmp	DWORD PTR $T68614[ebp], 0
	je	SHORT $LN8@Free
	push	3
	mov	ecx, DWORD PTR $T68614[ebp]
	call	??_ECState@NBZip2@NCompress@@QAEPAXI@Z
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN9@Free
$LN8@Free:
	mov	DWORD PTR tv90[ebp], 0
$LN9@Free:
; Line 481
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28676], 0
$LN6@Free:
; Line 482
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Free@CDecoder@NBZip2@NCompress@@QAEXXZ ENDP		; NCompress::NBZip2::CDecoder::Free
_TEXT	ENDS
EXTRN	_Event_Set@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC	; NWindows::NSynchronization::CBaseEvent::Set, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_Event_Set@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP	; NWindows::NSynchronization::CBaseEvent::Set
_TEXT	ENDS
EXTRN	_Handle_WaitObject@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Wait@CThread@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Wait@CThread@NWindows@@QAEIXZ PROC			; NWindows::CThread::Wait, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\thread.h
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_Handle_WaitObject@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Wait@CThread@NWindows@@QAEIXZ ENDP			; NWindows::CThread::Wait
_TEXT	ENDS
PUBLIC	?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z		; NCompress::NBZip2::IsEndSig
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -4						; size = 4
_p$ = 8							; size = 4
?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z PROC		; NCompress::NBZip2::IsEndSig
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 487
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 494
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 23					; 00000017H
	jne	SHORT $LN3@IsEndSig
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	cmp	eax, 114				; 00000072H
	jne	SHORT $LN3@IsEndSig
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	cmp	edx, 69					; 00000045H
	jne	SHORT $LN3@IsEndSig
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 56					; 00000038H
	jne	SHORT $LN3@IsEndSig
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	cmp	eax, 80					; 00000050H
	jne	SHORT $LN3@IsEndSig
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+5]
	cmp	edx, 144				; 00000090H
	jne	SHORT $LN3@IsEndSig
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN4@IsEndSig
$LN3@IsEndSig:
	mov	DWORD PTR tv81[ebp], 0
$LN4@IsEndSig:
	mov	al, BYTE PTR tv81[ebp]
; Line 495
	mov	esp, ebp
	pop	ebp
	ret	4
?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z ENDP		; NCompress::NBZip2::IsEndSig
_TEXT	ENDS
PUBLIC	?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z		; NCompress::NBZip2::IsBlockSig
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -4						; size = 4
_p$ = 8							; size = 4
?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z PROC		; NCompress::NBZip2::IsBlockSig
; Line 498
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 505
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 49					; 00000031H
	jne	SHORT $LN3@IsBlockSig
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	cmp	eax, 65					; 00000041H
	jne	SHORT $LN3@IsBlockSig
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+2]
	cmp	edx, 89					; 00000059H
	jne	SHORT $LN3@IsBlockSig
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 38					; 00000026H
	jne	SHORT $LN3@IsBlockSig
	mov	edx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [edx+4]
	cmp	eax, 83					; 00000053H
	jne	SHORT $LN3@IsBlockSig
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	edx, BYTE PTR [ecx+5]
	cmp	edx, 89					; 00000059H
	jne	SHORT $LN3@IsBlockSig
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN4@IsBlockSig
$LN3@IsBlockSig:
	mov	DWORD PTR tv81[ebp], 0
$LN4@IsBlockSig:
	mov	al, BYTE PTR tv81[ebp]
; Line 506
	mov	esp, ebp
	pop	ebp
	ret	4
?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z ENDP		; NCompress::NBZip2::IsBlockSig
_TEXT	ENDS
PUBLIC	?GetDigest@CBZip2CombinedCrc@@QBEIXZ		; CBZip2CombinedCrc::GetDigest
PUBLIC	?Update@CBZip2CombinedCrc@@QAEXI@Z		; CBZip2CombinedCrc::Update
PUBLIC	__$ArrayPad$
PUBLIC	?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z ; NCompress::NBZip2::CDecoder::ReadSignature
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$ = -36						; size = 4
_i$ = -32						; size = 4
_s$ = -24						; size = 10
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_crc$ = 8						; size = 4
?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z PROC ; NCompress::NBZip2::CDecoder::ReadSignature
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 510
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28745], 0
; Line 511
	mov	ecx, DWORD PTR _crc$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 515
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@ReadSignat
$LN9@ReadSignat:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN10@ReadSignat:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jae	SHORT $LN8@ReadSignat
; Line 516
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ ; NCompress::NBZip2::CDecoder::ReadByte
	mov	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _s$[ebp+ecx], al
	jmp	SHORT $LN9@ReadSignat
$LN8@ReadSignat:
; Line 518
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@ReadSignat
; Line 519
	mov	eax, 1
	jmp	$LN11@ReadSignat
$LN7@ReadSignat:
; Line 521
	mov	DWORD PTR _v$[ebp], 0
; Line 522
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@ReadSignat
$LN5@ReadSignat:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@ReadSignat:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN4@ReadSignat
; Line 524
	mov	ecx, DWORD PTR _v$[ebp]
	shl	ecx, 8
	mov	DWORD PTR _v$[ebp], ecx
; Line 525
	mov	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR _s$[ebp+edx+6]
	or	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR _v$[ebp], eax
; Line 526
	jmp	SHORT $LN5@ReadSignat
$LN4@ReadSignat:
; Line 528
	mov	ecx, DWORD PTR _crc$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 530
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?IsBlockSig@NBZip2@NCompress@@YG_NPBE@Z	; NCompress::NBZip2::IsBlockSig
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@ReadSignat
; Line 532
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28744], 1
; Line 533
	mov	eax, DWORD PTR _crc$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28668				; 00006ffcH
	call	?Update@CBZip2CombinedCrc@@QAEXI@Z	; CBZip2CombinedCrc::Update
; Line 534
	xor	eax, eax
	jmp	SHORT $LN11@ReadSignat
$LN3@ReadSignat:
; Line 537
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?IsEndSig@NBZip2@NCompress@@YG_NPBE@Z	; NCompress::NBZip2::IsEndSig
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@ReadSignat
; Line 538
	mov	eax, 1
	jmp	SHORT $LN11@ReadSignat
$LN2@ReadSignat:
; Line 540
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28744], 1
; Line 541
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28745], 1
; Line 542
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28668				; 00006ffcH
	call	?GetDigest@CBZip2CombinedCrc@@QBEIXZ	; CBZip2CombinedCrc::GetDigest
	mov	ecx, DWORD PTR _crc$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN1@ReadSignat
; Line 544
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28746], 1
; Line 545
	mov	eax, 1
	jmp	SHORT $LN11@ReadSignat
$LN1@ReadSignat:
; Line 547
	xor	eax, eax
$LN11@ReadSignat:
; Line 548
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@ReadSignat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@ReadSignat:
	DD	1
	DD	$LN14@ReadSignat
$LN14@ReadSignat:
	DD	-24					; ffffffe8H
	DD	10					; 0000000aH
	DD	$LN13@ReadSignat
$LN13@ReadSignat:
	DB	115					; 00000073H
	DB	0
?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z ENDP ; NCompress::NBZip2::CDecoder::ReadSignature
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Update@CBZip2CombinedCrc@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
?Update@CBZip2CombinedCrc@@QAEXI@Z PROC			; CBZip2CombinedCrc::Update, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 31					; 0000001fH
	or	ecx, eax
	xor	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CBZip2CombinedCrc@@QAEXI@Z ENDP			; CBZip2CombinedCrc::Update
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetDigest@CBZip2CombinedCrc@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDigest@CBZip2CombinedCrc@@QBEIXZ PROC		; CBZip2CombinedCrc::GetDigest, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDigest@CBZip2CombinedCrc@@QBEIXZ ENDP		; CBZip2CombinedCrc::GetDigest
_TEXT	ENDS
PUBLIC	??0CBlockProps@NBZip2@NCompress@@QAE@XZ		; NCompress::NBZip2::CBlockProps::CBlockProps
PUBLIC	?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z ; NCompress::NBZip2::CDecoder::SetRatioProgress
PUBLIC	?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ ; NBitm::CDecoder<CInBuffer>::GetProcessedSize
PUBLIC	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
PUBLIC	?Init@CBZip2CombinedCrc@@QAEXXZ			; CBZip2CombinedCrc::Init
PUBLIC	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
PUBLIC	?DecodeFile@CDecoder@NBZip2@NCompress@@AAEJPAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::DecodeFile
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result__$67932 = -108				; size = 4
_props$67931 = -100					; size = 12
___result__$67927 = -84					; size = 4
_crc$67926 = -76					; size = 4
___result__$67924 = -68					; size = 4
_state$67920 = -64					; size = 4
___result__$67917 = -60					; size = 4
___result__$67915 = -56					; size = 4
_t$67908 = -52						; size = 4
_dicSize$ = -48						; size = 4
_i$ = -44						; size = 4
_s$ = -36						; size = 4
___result__$67892 = -28					; size = 4
___result__$67890 = -24					; size = 4
___result__$67888 = -20					; size = 4
_s$67884 = -16						; size = 4
_t$67880 = -12						; size = 4
___result__$67878 = -8					; size = 4
_this$ = -4						; size = 4
_progress$ = 8						; size = 4
?DecodeFile@CDecoder@NBZip2@NCompress@@AAEJPAUICompressProgressInfo@@@Z PROC ; NCompress::NBZip2::CDecoder::DecodeFile
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 551
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _progress$[ebp]
	mov	DWORD PTR [eax+28672], ecx
; Line 554
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CDecoder@NBZip2@NCompress@@QAEJXZ ; NCompress::NBZip2::CDecoder::Create
	mov	DWORD PTR ___result__$67878[ebp], eax
	cmp	DWORD PTR ___result__$67878[ebp], 0
	je	SHORT $LN32@DecodeFile
	mov	eax, DWORD PTR ___result__$67878[ebp]
	jmp	$LN33@DecodeFile
$LN32@DecodeFile:
; Line 555
	mov	DWORD PTR _t$67880[ebp], 0
	jmp	SHORT $LN31@DecodeFile
$LN30@DecodeFile:
	mov	edx, DWORD PTR _t$67880[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67880[ebp], edx
$LN31@DecodeFile:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67880[ebp]
	cmp	ecx, DWORD PTR [eax+28712]
	jae	$LN29@DecodeFile
; Line 557
	mov	edx, DWORD PTR _t$67880[ebp]
	imul	edx, 284				; 0000011cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+28676]
	mov	DWORD PTR _s$67884[ebp], edx
; Line 558
	mov	ecx, DWORD PTR _s$67884[ebp]
	call	?Alloc@CState@NBZip2@NCompress@@QAE_NXZ	; NCompress::NBZip2::CState::Alloc
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN28@DecodeFile
; Line 559
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN33@DecodeFile
$LN28@DecodeFile:
; Line 560
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+28716]
	test	eax, eax
	je	SHORT $LN27@DecodeFile
; Line 562
	mov	ecx, DWORD PTR _s$67884[ebp]
	add	ecx, 16					; 00000010H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
	mov	DWORD PTR ___result__$67888[ebp], eax
	cmp	DWORD PTR ___result__$67888[ebp], 0
	je	SHORT $LN26@DecodeFile
	mov	eax, DWORD PTR ___result__$67888[ebp]
	jmp	$LN33@DecodeFile
$LN26@DecodeFile:
; Line 563
	mov	ecx, DWORD PTR _s$67884[ebp]
	add	ecx, 20					; 00000014H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
	mov	DWORD PTR ___result__$67890[ebp], eax
	cmp	DWORD PTR ___result__$67890[ebp], 0
	je	SHORT $LN25@DecodeFile
	mov	eax, DWORD PTR ___result__$67890[ebp]
	jmp	$LN33@DecodeFile
$LN25@DecodeFile:
; Line 564
	mov	ecx, DWORD PTR _s$67884[ebp]
	add	ecx, 24					; 00000018H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
	mov	DWORD PTR ___result__$67892[ebp], eax
	cmp	DWORD PTR ___result__$67892[ebp], 0
	je	SHORT $LN27@DecodeFile
	mov	eax, DWORD PTR ___result__$67892[ebp]
	jmp	$LN33@DecodeFile
$LN27@DecodeFile:
; Line 566
	jmp	$LN30@DecodeFile
$LN29@DecodeFile:
; Line 572
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28744], 0
; Line 581
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN23@DecodeFile
$LN22@DecodeFile:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN23@DecodeFile:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN21@DecodeFile
; Line 582
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte@CDecoder@NBZip2@NCompress@@AAEEXZ ; NCompress::NBZip2::CDecoder::ReadByte
	mov	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _s$[ebp+ecx], al
	jmp	SHORT $LN22@DecodeFile
$LN21@DecodeFile:
; Line 583
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN20@DecodeFile
; Line 584
	mov	eax, 1
	jmp	$LN33@DecodeFile
$LN20@DecodeFile:
; Line 590
	movzx	eax, BYTE PTR _s$[ebp]
	cmp	eax, 66					; 00000042H
	jne	SHORT $LN18@DecodeFile
	movzx	ecx, BYTE PTR _s$[ebp+1]
	cmp	ecx, 90					; 0000005aH
	jne	SHORT $LN18@DecodeFile
	movzx	edx, BYTE PTR _s$[ebp+2]
	cmp	edx, 104				; 00000068H
	jne	SHORT $LN18@DecodeFile
	movzx	eax, BYTE PTR _s$[ebp+3]
	cmp	eax, 48					; 00000030H
	jle	SHORT $LN18@DecodeFile
	movzx	ecx, BYTE PTR _s$[ebp+3]
	cmp	ecx, 57					; 00000039H
	jbe	SHORT $LN19@DecodeFile
$LN18@DecodeFile:
; Line 591
	mov	eax, 1
	jmp	$LN33@DecodeFile
$LN19@DecodeFile:
; Line 593
	movzx	edx, BYTE PTR _s$[ebp+3]
	sub	edx, 48					; 00000030H
	imul	edx, 100000				; 000186a0H
	mov	DWORD PTR _dicSize$[ebp], edx
; Line 595
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28668				; 00006ffcH
	call	?Init@CBZip2CombinedCrc@@QAEXXZ		; CBZip2CombinedCrc::Init
; Line 597
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28716]
	test	ecx, ecx
	je	$LN17@DecodeFile
; Line 599
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28720], 0
; Line 600
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28726], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28725], 0
; Line 601
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28724], 0
; Line 602
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28676]
	add	ecx, 24					; 00000018H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 604
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _dicSize$[ebp]
	mov	DWORD PTR [ecx+28740], edx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28736], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28732], 0
; Line 606
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 608
	mov	DWORD PTR _t$67908[ebp], 0
	jmp	SHORT $LN16@DecodeFile
$LN15@DecodeFile:
	mov	edx, DWORD PTR _t$67908[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67908[ebp], edx
$LN16@DecodeFile:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67908[ebp]
	cmp	ecx, DWORD PTR [eax+28712]
	jae	SHORT $LN14@DecodeFile
; Line 609
	mov	edx, DWORD PTR _t$67908[ebp]
	imul	edx, 284				; 0000011cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28676]
	lea	ecx, DWORD PTR [ecx+edx+16]
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
	jmp	SHORT $LN15@DecodeFile
$LN14@DecodeFile:
; Line 610
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28684				; 0000700cH
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
; Line 611
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 612
	mov	DWORD PTR _t$67908[ebp], 0
	jmp	SHORT $LN13@DecodeFile
$LN12@DecodeFile:
	mov	edx, DWORD PTR _t$67908[ebp]
	add	edx, 1
	mov	DWORD PTR _t$67908[ebp], edx
$LN13@DecodeFile:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$67908[ebp]
	cmp	ecx, DWORD PTR [eax+28712]
	jae	SHORT $LN11@DecodeFile
; Line 613
	mov	edx, DWORD PTR _t$67908[ebp]
	imul	edx, 284				; 0000011cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28676]
	lea	ecx, DWORD PTR [ecx+edx+20]
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
	jmp	SHORT $LN12@DecodeFile
$LN11@DecodeFile:
; Line 614
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28728				; 00007038H
	call	?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Reset
; Line 615
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28736]
	mov	DWORD PTR ___result__$67915[ebp], eax
	cmp	DWORD PTR ___result__$67915[ebp], 0
	je	SHORT $LN10@DecodeFile
	mov	eax, DWORD PTR ___result__$67915[ebp]
	jmp	$LN33@DecodeFile
$LN10@DecodeFile:
; Line 616
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28732]
	mov	DWORD PTR ___result__$67917[ebp], edx
	cmp	DWORD PTR ___result__$67917[ebp], 0
	je	SHORT $LN9@DecodeFile
	mov	eax, DWORD PTR ___result__$67917[ebp]
	jmp	$LN33@DecodeFile
$LN9@DecodeFile:
; Line 618
	jmp	$LN8@DecodeFile
$LN17@DecodeFile:
; Line 621
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28676]
	mov	DWORD PTR _state$67920[ebp], ecx
$LN7@DecodeFile:
; Line 624
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ ; NBitm::CDecoder<CInBuffer>::GetProcessedSize
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z ; NCompress::NBZip2::CDecoder::SetRatioProgress
	mov	DWORD PTR ___result__$67924[ebp], eax
	cmp	DWORD PTR ___result__$67924[ebp], 0
	je	SHORT $LN5@DecodeFile
	mov	eax, DWORD PTR ___result__$67924[ebp]
	jmp	$LN33@DecodeFile
$LN5@DecodeFile:
; Line 626
	lea	edx, DWORD PTR _crc$67926[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z ; NCompress::NBZip2::CDecoder::ReadSignature
	mov	DWORD PTR ___result__$67927[ebp], eax
	cmp	DWORD PTR ___result__$67927[ebp], 0
	je	SHORT $LN4@DecodeFile
	mov	eax, DWORD PTR ___result__$67927[ebp]
	jmp	$LN33@DecodeFile
$LN4@DecodeFile:
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+28745]
	test	ecx, ecx
	je	SHORT $LN3@DecodeFile
; Line 628
	xor	eax, eax
	jmp	$LN33@DecodeFile
$LN3@DecodeFile:
; Line 630
	lea	ecx, DWORD PTR _props$67931[ebp]
	call	??0CBlockProps@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CBlockProps::CBlockProps
; Line 631
	mov	BYTE PTR _props$67931[ebp+8], 1
; Line 632
	lea	edx, DWORD PTR _props$67931[ebp]
	push	edx
	mov	eax, DWORD PTR _dicSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$67920[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z ; NCompress::NBZip2::CBase::ReadBlock
	mov	DWORD PTR ___result__$67932[ebp], eax
	cmp	DWORD PTR ___result__$67932[ebp], 0
	je	SHORT $LN2@DecodeFile
	mov	eax, DWORD PTR ___result__$67932[ebp]
	jmp	SHORT $LN33@DecodeFile
$LN2@DecodeFile:
; Line 633
	mov	eax, DWORD PTR _props$67931[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$67920[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z ; NCompress::NBZip2::DecodeBlock1
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _state$67920[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1024				; 00000400H
	push	edx
	lea	eax, DWORD PTR _props$67931[ebp]
	push	eax
	call	?DecodeBlock@NBZip2@NCompress@@YGIABUCBlockProps@12@PAIAAVCOutBuffer@@@Z ; NCompress::NBZip2::DecodeBlock
	cmp	eax, DWORD PTR _crc$67926[ebp]
	je	SHORT $LN1@DecodeFile
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28746], 1
; Line 637
	mov	eax, 1
	jmp	SHORT $LN33@DecodeFile
$LN1@DecodeFile:
; Line 639
	jmp	$LN7@DecodeFile
$LN8@DecodeFile:
; Line 641
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ ; NBitm::CDecoder<CInBuffer>::GetProcessedSize
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z ; NCompress::NBZip2::CDecoder::SetRatioProgress
$LN33@DecodeFile:
; Line 642
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@DecodeFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN39@DecodeFile:
	DD	3
	DD	$LN38@DecodeFile
$LN38@DecodeFile:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN35@DecodeFile
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN36@DecodeFile
	DD	-100					; ffffff9cH
	DD	12					; 0000000cH
	DD	$LN37@DecodeFile
$LN37@DecodeFile:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN36@DecodeFile:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN35@DecodeFile:
	DB	115					; 00000073H
	DB	0
?DecodeFile@CDecoder@NBZip2@NCompress@@AAEJPAUICompressProgressInfo@@@Z ENDP ; NCompress::NBZip2::CDecoder::DecodeFile
_TEXT	ENDS
EXTRN	_Event_Reset@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CBaseEvent::Reset, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_Event_Reset@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CBaseEvent::Reset
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ PROC	; NWindows::NSynchronization::CBaseEvent::Lock, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_Handle_WaitObject@4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ENDP	; NWindows::NSynchronization::CBaseEvent::Lock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Init@CBZip2CombinedCrc@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@CBZip2CombinedCrc@@QAEXXZ PROC			; CBZip2CombinedCrc::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@CBZip2CombinedCrc@@QAEXXZ ENDP			; CBZip2CombinedCrc::Init
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBlockProps@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBlockProps@NBZip2@NCompress@@QAE@XZ PROC		; NCompress::NBZip2::CBlockProps::CBlockProps, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.h
; Line 69
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBlockProps@NBZip2@NCompress@@QAE@XZ ENDP		; NCompress::NBZip2::CBlockProps::CBlockProps
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_i$ = -16						; size = 4
_tt$ = -12						; size = 4
_i$67715 = -8						; size = 4
_sum$67714 = -4						; size = 4
_charCounters$ = 8					; size = 4
_blockSize$ = 12					; size = 4
?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z PROC		; NCompress::NBZip2::DecodeBlock1
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 250
	mov	DWORD PTR _sum$67714[ebp], 0
; Line 251
	mov	DWORD PTR _i$67715[ebp], 0
	jmp	SHORT $LN6@DecodeBloc
$LN5@DecodeBloc:
	mov	eax, DWORD PTR _i$67715[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67715[ebp], eax
$LN6@DecodeBloc:
	cmp	DWORD PTR _i$67715[ebp], 256		; 00000100H
	jae	SHORT $LN4@DecodeBloc
; Line 253
	mov	ecx, DWORD PTR _i$67715[ebp]
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	eax, DWORD PTR _sum$67714[ebp]
	add	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _sum$67714[ebp], eax
; Line 254
	mov	ecx, DWORD PTR _i$67715[ebp]
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	eax, DWORD PTR _sum$67714[ebp]
	sub	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _i$67715[ebp]
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 255
	jmp	SHORT $LN5@DecodeBloc
$LN4@DecodeBloc:
; Line 258
	mov	eax, DWORD PTR _charCounters$[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _tt$[ebp], eax
; Line 260
	mov	DWORD PTR _i$[ebp], 0
$LN3@DecodeBloc:
; Line 262
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _tt$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _charCounters$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 8
	mov	ecx, DWORD PTR _tt$[ebp]
	or	eax, DWORD PTR [ecx+edx*4]
	mov	edx, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _tt$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	and	edx, 255				; 000000ffH
	mov	ecx, DWORD PTR _charCounters$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _tt$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _tt$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _tt$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _charCounters$[ebp]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 263
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _blockSize$[ebp]
	jb	SHORT $LN3@DecodeBloc
; Line 264
	mov	esp, ebp
	pop	ebp
	ret	8
?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z ENDP		; NCompress::NBZip2::DecodeBlock1
; Function compile flags: /Odtp /RTCsu
_props$ = 8						; size = 4
_tt$ = 12						; size = 4
_m_OutStream$ = 16					; size = 4
?DecodeBlock@NBZip2@NCompress@@YGIABUCBlockProps@12@PAIAAVCOutBuffer@@@Z PROC ; NCompress::NBZip2::DecodeBlock
; Line 407
	push	ebp
	mov	ebp, esp
; Line 408
	mov	eax, DWORD PTR _props$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@DecodeBloc@2
; Line 409
	mov	edx, DWORD PTR _m_OutStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _props$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _tt$[ebp]
	push	ecx
	call	?DecodeBlock2Rand@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z ; NCompress::NBZip2::DecodeBlock2Rand
	jmp	SHORT $LN3@DecodeBloc@2
; Line 410
	jmp	SHORT $LN3@DecodeBloc@2
$LN2@DecodeBloc@2:
; Line 411
	mov	edx, DWORD PTR _m_OutStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _props$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _tt$[ebp]
	push	ecx
	call	?DecodeBlock2@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z ; NCompress::NBZip2::DecodeBlock2
$LN3@DecodeBloc@2:
; Line 412
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?DecodeBlock@NBZip2@NCompress@@YGIABUCBlockProps@12@PAIAAVCOutBuffer@@@Z ENDP ; NCompress::NBZip2::DecodeBlock
_TEXT	ENDS
PUBLIC	?GetDigest@CBZip2Crc@@QBEIXZ			; CBZip2Crc::GetDigest
PUBLIC	?WriteByte@COutBuffer@@QAEXE@Z			; COutBuffer::WriteByte
PUBLIC	?UpdateByte@CBZip2Crc@@QAEXI@Z			; CBZip2Crc::UpdateByte
PUBLIC	??0CBZip2Crc@@QAE@XZ				; CBZip2Crc::CBZip2Crc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_b$67738 = -28						; size = 4
_numReps$ = -24						; size = 4
_prevByte$ = -20					; size = 4
_tPos$ = -16						; size = 4
_crc$ = -8						; size = 4
_tt$ = 8						; size = 4
_blockSize$ = 12					; size = 4
_OrigPtr$ = 16						; size = 4
_m_OutStream$ = 20					; size = 4
?DecodeBlock2@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z PROC ; NCompress::NBZip2::DecodeBlock2
; Line 267
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 268
	lea	ecx, DWORD PTR _crc$[ebp]
	call	??0CBZip2Crc@@QAE@XZ			; CBZip2Crc::CBZip2Crc
; Line 271
	mov	eax, DWORD PTR _OrigPtr$[ebp]
	mov	ecx, DWORD PTR _tt$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	shr	edx, 8
	mov	eax, DWORD PTR _tt$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _tPos$[ebp], ecx
; Line 272
	mov	edx, DWORD PTR _tPos$[ebp]
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _prevByte$[ebp], edx
; Line 274
	mov	DWORD PTR _numReps$[ebp], 0
$LN8@DecodeBloc@3:
; Line 278
	mov	eax, DWORD PTR _tPos$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _b$67738[ebp], eax
; Line 279
	mov	ecx, DWORD PTR _tPos$[ebp]
	shr	ecx, 8
	mov	edx, DWORD PTR _tt$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _tPos$[ebp], eax
; Line 281
	cmp	DWORD PTR _numReps$[ebp], 4
	jne	SHORT $LN5@DecodeBloc@3
; Line 283
	jmp	SHORT $LN4@DecodeBloc@3
$LN3@DecodeBloc@3:
	mov	ecx, DWORD PTR _b$67738[ebp]
	sub	ecx, 1
	mov	DWORD PTR _b$67738[ebp], ecx
$LN4@DecodeBloc@3:
	cmp	DWORD PTR _b$67738[ebp], 0
	jbe	SHORT $LN2@DecodeBloc@3
; Line 285
	mov	edx, DWORD PTR _prevByte$[ebp]
	push	edx
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?UpdateByte@CBZip2Crc@@QAEXI@Z		; CBZip2Crc::UpdateByte
; Line 286
	movzx	eax, BYTE PTR _prevByte$[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_OutStream$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
; Line 287
	jmp	SHORT $LN3@DecodeBloc@3
$LN2@DecodeBloc@3:
; Line 288
	mov	DWORD PTR _numReps$[ebp], 0
; Line 289
	jmp	SHORT $LN7@DecodeBloc@3
$LN5@DecodeBloc@3:
; Line 291
	mov	ecx, DWORD PTR _b$67738[ebp]
	cmp	ecx, DWORD PTR _prevByte$[ebp]
	je	SHORT $LN1@DecodeBloc@3
; Line 292
	mov	DWORD PTR _numReps$[ebp], 0
$LN1@DecodeBloc@3:
; Line 293
	mov	edx, DWORD PTR _numReps$[ebp]
	add	edx, 1
	mov	DWORD PTR _numReps$[ebp], edx
; Line 294
	mov	eax, DWORD PTR _b$67738[ebp]
	mov	DWORD PTR _prevByte$[ebp], eax
; Line 295
	mov	ecx, DWORD PTR _b$67738[ebp]
	push	ecx
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?UpdateByte@CBZip2Crc@@QAEXI@Z		; CBZip2Crc::UpdateByte
; Line 296
	movzx	edx, BYTE PTR _b$67738[ebp]
	push	edx
	mov	ecx, DWORD PTR _m_OutStream$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
$LN7@DecodeBloc@3:
; Line 353
	mov	eax, DWORD PTR _blockSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _blockSize$[ebp], eax
	jne	$LN8@DecodeBloc@3
; Line 354
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?GetDigest@CBZip2Crc@@QBEIXZ		; CBZip2Crc::GetDigest
; Line 355
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@DecodeBloc@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN13@DecodeBloc@3:
	DD	1
	DD	$LN12@DecodeBloc@3
$LN12@DecodeBloc@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN11@DecodeBloc@3
$LN11@DecodeBloc@3:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DecodeBlock2@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z ENDP ; NCompress::NBZip2::DecodeBlock2
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteByte@COutBuffer@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?WriteByte@COutBuffer@@QAEXE@Z PROC			; COutBuffer::WriteByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN2@WriteByte
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@WriteByte:
; Line 53
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteByte@COutBuffer@@QAEXE@Z ENDP			; COutBuffer::WriteByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBZip2Crc@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBZip2Crc@@QAE@XZ PROC				; CBZip2Crc::CBZip2Crc, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2crc.h
; Line 14
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBZip2Crc@@QAE@XZ ENDP				; CBZip2Crc::CBZip2Crc
_TEXT	ENDS
EXTRN	?Table@CBZip2Crc@@0PAIA:BYTE			; CBZip2Crc::Table
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?UpdateByte@CBZip2Crc@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 4
?UpdateByte@CBZip2Crc@@QAEXI@Z PROC			; CBZip2Crc::UpdateByte, COMDAT
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 24					; 00000018H
	xor	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 8
	xor	eax, DWORD PTR ?Table@CBZip2Crc@@0PAIA[ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?UpdateByte@CBZip2Crc@@QAEXI@Z ENDP			; CBZip2Crc::UpdateByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetDigest@CBZip2Crc@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDigest@CBZip2Crc@@QBEIXZ PROC			; CBZip2Crc::GetDigest, COMDAT
; _this$ = ecx
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	xor	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDigest@CBZip2Crc@@QBEIXZ ENDP			; CBZip2Crc::GetDigest
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_b$67763 = -36						; size = 4
_prevByte$ = -32					; size = 4
_tPos$ = -28						; size = 4
_numReps$ = -24						; size = 4
_randToGo$ = -20					; size = 4
_randIndex$ = -16					; size = 4
_crc$ = -8						; size = 4
_tt$ = 8						; size = 4
_blockSize$ = 12					; size = 4
_OrigPtr$ = 16						; size = 4
_m_OutStream$ = 20					; size = 4
?DecodeBlock2Rand@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z PROC ; NCompress::NBZip2::DecodeBlock2Rand
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 359
	lea	ecx, DWORD PTR _crc$[ebp]
	call	??0CBZip2Crc@@QAE@XZ			; CBZip2Crc::CBZip2Crc
; Line 361
	mov	DWORD PTR _randIndex$[ebp], 1
; Line 362
	movzx	eax, WORD PTR _kRandNums
	sub	eax, 2
	mov	DWORD PTR _randToGo$[ebp], eax
; Line 364
	mov	DWORD PTR _numReps$[ebp], 0
; Line 367
	mov	ecx, DWORD PTR _OrigPtr$[ebp]
	mov	edx, DWORD PTR _tt$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	shr	eax, 8
	mov	ecx, DWORD PTR _tt$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _tPos$[ebp], edx
; Line 368
	mov	eax, DWORD PTR _tPos$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _prevByte$[ebp], eax
$LN9@DecodeBloc@4:
; Line 372
	mov	ecx, DWORD PTR _tPos$[ebp]
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _b$67763[ebp], ecx
; Line 373
	mov	edx, DWORD PTR _tPos$[ebp]
	shr	edx, 8
	mov	eax, DWORD PTR _tt$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _tPos$[ebp], ecx
; Line 376
	cmp	DWORD PTR _randToGo$[ebp], 0
	jne	SHORT $LN6@DecodeBloc@4
; Line 378
	mov	edx, DWORD PTR _b$67763[ebp]
	xor	edx, 1
	mov	DWORD PTR _b$67763[ebp], edx
; Line 379
	mov	eax, DWORD PTR _randIndex$[ebp]
	movzx	ecx, WORD PTR _kRandNums[eax*2]
	mov	DWORD PTR _randToGo$[ebp], ecx
	mov	edx, DWORD PTR _randIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _randIndex$[ebp], edx
; Line 380
	mov	eax, DWORD PTR _randIndex$[ebp]
	and	eax, 511				; 000001ffH
	mov	DWORD PTR _randIndex$[ebp], eax
$LN6@DecodeBloc@4:
; Line 382
	mov	ecx, DWORD PTR _randToGo$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _randToGo$[ebp], ecx
; Line 385
	cmp	DWORD PTR _numReps$[ebp], 4
	jne	SHORT $LN5@DecodeBloc@4
; Line 387
	jmp	SHORT $LN4@DecodeBloc@4
$LN3@DecodeBloc@4:
	mov	edx, DWORD PTR _b$67763[ebp]
	sub	edx, 1
	mov	DWORD PTR _b$67763[ebp], edx
$LN4@DecodeBloc@4:
	cmp	DWORD PTR _b$67763[ebp], 0
	jbe	SHORT $LN2@DecodeBloc@4
; Line 389
	mov	eax, DWORD PTR _prevByte$[ebp]
	push	eax
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?UpdateByte@CBZip2Crc@@QAEXI@Z		; CBZip2Crc::UpdateByte
; Line 390
	movzx	ecx, BYTE PTR _prevByte$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _m_OutStream$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
; Line 391
	jmp	SHORT $LN3@DecodeBloc@4
$LN2@DecodeBloc@4:
; Line 392
	mov	DWORD PTR _numReps$[ebp], 0
; Line 393
	jmp	SHORT $LN8@DecodeBloc@4
$LN5@DecodeBloc@4:
; Line 395
	mov	edx, DWORD PTR _b$67763[ebp]
	cmp	edx, DWORD PTR _prevByte$[ebp]
	je	SHORT $LN1@DecodeBloc@4
; Line 396
	mov	DWORD PTR _numReps$[ebp], 0
$LN1@DecodeBloc@4:
; Line 397
	mov	eax, DWORD PTR _numReps$[ebp]
	add	eax, 1
	mov	DWORD PTR _numReps$[ebp], eax
; Line 398
	mov	ecx, DWORD PTR _b$67763[ebp]
	mov	DWORD PTR _prevByte$[ebp], ecx
; Line 399
	mov	edx, DWORD PTR _b$67763[ebp]
	push	edx
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?UpdateByte@CBZip2Crc@@QAEXI@Z		; CBZip2Crc::UpdateByte
; Line 400
	movzx	eax, BYTE PTR _b$67763[ebp]
	push	eax
	mov	ecx, DWORD PTR _m_OutStream$[ebp]
	call	?WriteByte@COutBuffer@@QAEXE@Z		; COutBuffer::WriteByte
$LN8@DecodeBloc@4:
; Line 402
	mov	ecx, DWORD PTR _blockSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _blockSize$[ebp], ecx
	jne	$LN9@DecodeBloc@4
; Line 403
	lea	ecx, DWORD PTR _crc$[ebp]
	call	?GetDigest@CBZip2Crc@@QBEIXZ		; CBZip2Crc::GetDigest
; Line 404
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@DecodeBloc@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN14@DecodeBloc@4:
	DD	1
	DD	$LN13@DecodeBloc@4
$LN13@DecodeBloc@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN12@DecodeBloc@4
$LN12@DecodeBloc@4:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?DecodeBlock2Rand@NBZip2@NCompress@@YGIPBIIIAAVCOutBuffer@@@Z ENDP ; NCompress::NBZip2::DecodeBlock2Rand
_TEXT	ENDS
PUBLIC	?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ	; NCompress::NBZip2::CDecoder::Flush
PUBLIC	??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CDecoder::CDecoderFlusher::~CDecoderFlusher
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
PUBLIC	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::AlignToByte
PUBLIC	?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ	; NBitm::CDecoder<CInBuffer>::Init
PUBLIC	??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z ; NCompress::NBZip2::CDecoder::CDecoderFlusher::CDecoderFlusher
PUBLIC	?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z ; NBitm::CDecoder<CInBuffer>::SetStream
PUBLIC	?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z	; NBitm::CDecoder<CInBuffer>::Create
PUBLIC	?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::CodeReal
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
EXTRN	?Init@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Init
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
;	COMDAT ??_R0?AUCOutBufferException@@@8
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUCInBufferException@@@8
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__tryblocktable$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z DD 00H
	DD	01H
	DD	02H
	DD	03H
	DD	FLAT:__catchsym$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$5
__unwindtable$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$4
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$5 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffd0H
	DD	FLAT:__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$0
	DD	09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffc4H
	DD	FLAT:__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$2
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv167 = -108						; size = 4
tv166 = -104						; size = 4
tv165 = -100						; size = 8
tv164 = -92						; size = 4
tv163 = -85						; size = 1
$T68674 = -84						; size = 4
$T68673 = -80						; size = 4
$T68672 = -76						; size = 4
$T68671 = -72						; size = 4
$T68670 = -68						; size = 4
_e$67957 = -60						; size = 4
_e$67954 = -48						; size = 4
___result__$67950 = -40					; size = 4
_flusher$67948 = -32					; size = 8
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_inStream$ = 8						; size = 4
_outStream$ = 12					; size = 4
_progress$ = 16						; size = 4
?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z PROC ; NCompress::NBZip2::CDecoder::CodeReal
; _this$ = ecx
; Line 646
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28744], 0
; Line 648
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+28745], 0
; Line 649
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+28746], 0
; Line 652
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 654
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z ; NBitm::CDecoder<CInBuffer>::Create
	mov	BYTE PTR tv163[ebp], al
	movzx	eax, BYTE PTR tv163[ebp]
	test	eax, eax
	jne	SHORT $LN5@CodeReal
; Line 655
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN7@CodeReal
$LN5@CodeReal:
; Line 656
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@CodeReal
; Line 657
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN7@CodeReal
$LN4@CodeReal:
; Line 659
	cmp	DWORD PTR _inStream$[ebp], 0
	je	SHORT $LN3@CodeReal
; Line 660
	mov	edx, DWORD PTR _inStream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z ; NBitm::CDecoder<CInBuffer>::SetStream
$LN3@CodeReal:
; Line 662
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR _flusher$67948[ebp]
	call	??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z ; NCompress::NBZip2::CDecoder::CDecoderFlusher::CDecoderFlusher
	mov	DWORD PTR tv164[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 664
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+28664]
	test	edx, edx
	je	SHORT $LN2@CodeReal
; Line 666
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::Init
; Line 667
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28664], 0
$LN2@CodeReal:
; Line 669
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ ; NBitm::CDecoder<CInBuffer>::GetProcessedSize
	mov	DWORD PTR tv165[ebp], eax
	mov	DWORD PTR tv165[ebp+4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv165[ebp]
	mov	DWORD PTR [ecx+28656], edx
	mov	eax, DWORD PTR tv165[ebp+4]
	mov	DWORD PTR [ecx+28660], eax
; Line 671
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::AlignToByte
; Line 673
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Line 674
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Init@COutBuffer@@QAEXXZ		; COutBuffer::Init
; Line 676
	mov	edx, DWORD PTR _progress$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DecodeFile@CDecoder@NBZip2@NCompress@@AAEJPAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::DecodeFile
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	mov	DWORD PTR ___result__$67950[ebp], eax
	cmp	DWORD PTR ___result__$67950[ebp], 0
	je	SHORT $LN1@CodeReal
	mov	ecx, DWORD PTR ___result__$67950[ebp]
	mov	DWORD PTR $T68670[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _flusher$67948[ebp]
	call	??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CDecoder::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T68670[ebp]
	jmp	$LN7@CodeReal
$LN1@CodeReal:
; Line 677
	mov	BYTE PTR _flusher$67948[ebp+4], 0
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ ; NCompress::NBZip2::CDecoder::Flush
	mov	DWORD PTR tv167[ebp], eax
	mov	edx, DWORD PTR tv167[ebp]
	mov	DWORD PTR $T68671[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _flusher$67948[ebp]
	call	??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CDecoder::CDecoderFlusher::~CDecoderFlusher
	mov	eax, DWORD PTR $T68671[ebp]
	jmp	SHORT $LN7@CodeReal
__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$0:
; Line 681
	mov	eax, DWORD PTR _e$67954[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T68672[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN15@CodeReal
	ret	0
	mov	eax, __tryend$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$1:
; Line 682
	mov	edx, DWORD PTR _e$67957[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T68673[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN17@CodeReal
	ret	0
	mov	eax, __tryend$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$2:
; Line 683
	mov	DWORD PTR $T68674[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN19@CodeReal
	ret	0
	mov	eax, __tryend$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$3
	ret	0
__tryend$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN18@CodeReal
$LN19@CodeReal:
	mov	eax, DWORD PTR $T68674[ebp]
	jmp	SHORT $LN7@CodeReal
$LN18@CodeReal:
	jmp	SHORT $LN16@CodeReal
$LN17@CodeReal:
; Line 682
	mov	eax, DWORD PTR $T68673[ebp]
	jmp	SHORT $LN7@CodeReal
$LN16@CodeReal:
	jmp	SHORT $LN7@CodeReal
$LN15@CodeReal:
; Line 681
	mov	eax, DWORD PTR $T68672[ebp]
$LN7@CodeReal:
; Line 684
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN28@CodeReal:
	DD	3
	DD	$LN27@CodeReal
$LN27@CodeReal:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN23@CodeReal
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN24@CodeReal
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN25@CodeReal
$LN25@CodeReal:
	DB	101					; 00000065H
	DB	0
$LN24@CodeReal:
	DB	101					; 00000065H
	DB	0
$LN23@CodeReal:
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z$4:
	lea	ecx, DWORD PTR _flusher$67948[ebp]
	jmp	??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ ; NCompress::NBZip2::CDecoder::CDecoderFlusher::~CDecoderFlusher
__ehhandler$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ENDP ; NCompress::NBZip2::CDecoder::CodeReal
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_decoder$ = 8						; size = 4
??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z PROC ; NCompress::NBZip2::CDecoder::CDecoderFlusher::CDecoderFlusher, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.h
; Line 126
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _decoder$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@PAV123@@Z ENDP ; NCompress::NBZip2::CDecoder::CDecoderFlusher::CDecoderFlusher
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ PROC ; NCompress::NBZip2::CDecoder::CDecoderFlusher::~CDecoderFlusher, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@CDecoderFl
; Line 130
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ ; NCompress::NBZip2::CDecoder::Flush
$LN2@CDecoderFl:
; Line 131
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDecoderFlusher@CDecoder@NBZip2@NCompress@@QAE@XZ ENDP ; NCompress::NBZip2::CDecoder::CDecoderFlusher::~CDecoderFlusher
_TEXT	ENDS
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ PROC		; NCompress::NBZip2::CDecoder::Flush, COMDAT
; _this$ = ecx
; Line 174
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@CDecoder@NBZip2@NCompress@@QAEJXZ ENDP		; NCompress::NBZip2::CDecoder::Flush
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NBZip2::CDecoder::Code
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 688
	push	ebp
	mov	ebp, esp
; Line 689
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+28664], 1
; Line 690
	mov	ecx, DWORD PTR _progress$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::CodeReal
; Line 691
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?Code@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NBZip2::CDecoder::Code
_TEXT	ENDS
PUBLIC	?CodeResume@CDecoder@NBZip2@NCompress@@QAEJPAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::CodeResume
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_outStream$ = 8						; size = 4
_progress$ = 12						; size = 4
?CodeResume@CDecoder@NBZip2@NCompress@@QAEJPAUISequentialOutStream@@PAUICompressProgressInfo@@@Z PROC ; NCompress::NBZip2::CDecoder::CodeResume
; _this$ = ecx
; Line 694
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 695
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outStream$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CDecoder@NBZip2@NCompress@@AAEJPAUISequentialInStream@@PAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ; NCompress::NBZip2::CDecoder::CodeReal
; Line 696
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CodeResume@CDecoder@NBZip2@NCompress@@QAEJPAUISequentialOutStream@@PAUICompressProgressInfo@@@Z ENDP ; NCompress::NBZip2::CDecoder::CodeResume
_TEXT	ENDS
PUBLIC	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
?SetInStream@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z PROC ; NCompress::NBZip2::CDecoder::SetInStream
; Line 699
	push	ebp
	mov	ebp, esp
; Line 700
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 701
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 320				; 00000140H
	call	?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z ; NBitm::CDecoder<CInBuffer>::SetStream
; Line 702
	xor	eax, eax
; Line 703
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetInStream@CDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z ENDP ; NCompress::NBZip2::CDecoder::SetInStream
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReleaseInStream@CDecoder@NBZip2@NCompress@@UAGJXZ PROC	; NCompress::NBZip2::CDecoder::ReleaseInStream
; Line 706
	push	ebp
	mov	ebp, esp
; Line 707
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 312				; 00000138H
	call	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Line 708
	xor	eax, eax
; Line 709
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?ReleaseInStream@CDecoder@NBZip2@NCompress@@UAGJXZ ENDP	; NCompress::NBZip2::CDecoder::ReleaseInStream
_TEXT	ENDS
PUBLIC	?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z	; NWindows::CThread::Create
PUBLIC	?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::CreateIfNotCreated
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
___result_$67998 = -20					; size = 4
___result_$67996 = -16					; size = 4
___result_$67994 = -12					; size = 4
___result_$67992 = -8					; size = 4
_this$ = -4						; size = 4
?Create@CState@NBZip2@NCompress@@QAEJXZ PROC		; NCompress::NBZip2::CState::Create
; _this$ = ecx
; Line 716
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 717
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67992[ebp], eax
	cmp	DWORD PTR ___result_$67992[ebp], 0
	je	SHORT $LN4@Create@2
	mov	eax, DWORD PTR ___result_$67992[ebp]
	jmp	SHORT $LN5@Create@2
$LN4@Create@2:
; Line 718
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67994[ebp], eax
	cmp	DWORD PTR ___result_$67994[ebp], 0
	je	SHORT $LN3@Create@2
	mov	eax, DWORD PTR ___result_$67994[ebp]
	jmp	SHORT $LN5@Create@2
$LN3@Create@2:
; Line 719
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CAutoResetEvent::CreateIfNotCreated
	mov	DWORD PTR ___result_$67996[ebp], eax
	cmp	DWORD PTR ___result_$67996[ebp], 0
	je	SHORT $LN2@Create@2
	mov	eax, DWORD PTR ___result_$67996[ebp]
	jmp	SHORT $LN5@Create@2
$LN2@Create@2:
; Line 720
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ?MFThread@NBZip2@NCompress@@YGIPAX@Z ; NCompress::NBZip2::MFThread
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z ; NWindows::CThread::Create
	mov	DWORD PTR ___result_$67998[ebp], eax
	cmp	DWORD PTR ___result_$67998[ebp], 0
	je	SHORT $LN1@Create@2
	mov	eax, DWORD PTR ___result_$67998[ebp]
	jmp	SHORT $LN5@Create@2
$LN1@Create@2:
; Line 721
	xor	eax, eax
$LN5@Create@2:
; Line 722
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Create@CState@NBZip2@NCompress@@QAEJXZ ENDP		; NCompress::NBZip2::CState::Create
_TEXT	ENDS
EXTRN	_AutoResetEvent_CreateNotSignaled@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ PROC ; NWindows::NSynchronization::CAutoResetEvent::CreateIfNotCreated, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 79
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsCreated@CBaseEvent@NSynchronization@NWindows@@QAE_NXZ ; NWindows::NSynchronization::CBaseEvent::IsCreated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@CreateIfNo@2
; Line 81
	xor	eax, eax
	jmp	SHORT $LN2@CreateIfNo@2
$LN1@CreateIfNo@2:
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_AutoResetEvent_CreateNotSignaled@4
$LN2@CreateIfNo@2:
; Line 83
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateIfNotCreated@CAutoResetEvent@NSynchronization@NWindows@@QAEIXZ ENDP ; NWindows::NSynchronization::CAutoResetEvent::CreateIfNotCreated
_TEXT	ENDS
EXTRN	_Thread_Create@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_startAddress$ = 8					; size = 4
_parameter$ = 12					; size = 4
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z PROC		; NWindows::CThread::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\thread.h
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _parameter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startAddress$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	_Thread_Create@12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Create@CThread@NWindows@@QAEIP6GIPAX@Z0@Z ENDP		; NWindows::CThread::Create
_TEXT	ENDS
PUBLIC	?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CState::ThreadFunc
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = 8							; size = 4
?MFThread@NBZip2@NCompress@@YGIPAX@Z PROC		; NCompress::NBZip2::MFThread
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 713
	push	ebp
	mov	ebp, esp
	mov	ecx, DWORD PTR _p$[ebp]
	call	?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CState::ThreadFunc
	xor	eax, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?MFThread@NBZip2@NCompress@@YGIPAX@Z ENDP		; NCompress::NBZip2::MFThread
_TEXT	ENDS
PUBLIC	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
PUBLIC	?FinishStream@CState@NBZip2@NCompress@@QAEXXZ	; NCompress::NBZip2::CState::FinishStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FinishStream@CState@NBZip2@NCompress@@QAEXXZ PROC	; NCompress::NBZip2::CState::FinishStream
; _this$ = ecx
; Line 725
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+28725], 1
; Line 727
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 728
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, 28688				; 00007010H
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Line 729
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 28728				; 00007038H
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
; Line 730
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 731
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FinishStream@CState@NBZip2@NCompress@@QAEXXZ ENDP	; NCompress::NBZip2::CState::FinishStream
_TEXT	ENDS
EXTRN	__imp__LeaveCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Leave, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 150
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__LeaveCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Leave
_TEXT	ENDS
PUBLIC	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
xdata$x	SEGMENT
__catchsym$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$7 DD 09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffa0H
	DD	FLAT:__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$3
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$4
__catchsym$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$6 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffb0H
	DD	FLAT:__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$1
__unwindtable$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ
	DD	02H
	DD	FLAT:__tryblocktable$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$6
	DD	02H
	DD	02H
	DD	03H
	DD	02H
	DD	FLAT:__catchsym$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$7
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv252 = -124						; size = 4
tv251 = -120						; size = 4
tv250 = -116						; size = 8
tv249 = -108						; size = 4
tv248 = -104						; size = 4
_e$68039 = -96						; size = 4
_needFinish$68033 = -85					; size = 1
_e$68026 = -80						; size = 4
_props$68019 = -68					; size = 12
_packSize$68018 = -52					; size = 8
_crc$68017 = -40					; size = 4
_nextBlockIndex$68015 = -32				; size = 4
_blockIndex$68014 = -28					; size = 4
_res$68012 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ PROC	; NCompress::NBZip2::CState::ThreadFunc
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 734
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 108				; 0000006cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
$LN19@ThreadFunc:
; Line 737
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 28684				; 0000700cH
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
; Line 738
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 28688				; 00007010H
	call	?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Enter
; Line 739
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	movzx	ecx, BYTE PTR [eax+28724]
	test	ecx, ecx
	je	SHORT $LN17@ThreadFunc
; Line 741
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, 28688				; 00007010H
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Line 742
	jmp	$LN20@ThreadFunc
$LN17@ThreadFunc:
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, BYTE PTR [ecx+28725]
	test	edx, edx
	je	SHORT $LN16@ThreadFunc
; Line 746
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CState@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CState::FinishStream
; Line 747
	jmp	SHORT $LN19@ThreadFunc
$LN16@ThreadFunc:
; Line 749
	mov	DWORD PTR _res$68012[ebp], 0
; Line 751
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+28720]
	mov	DWORD PTR _blockIndex$68014[ebp], edx
; Line 752
	mov	eax, DWORD PTR _blockIndex$68014[ebp]
	add	eax, 1
	mov	DWORD PTR _nextBlockIndex$68015[ebp], eax
; Line 753
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _nextBlockIndex$68015[ebp]
	cmp	eax, DWORD PTR [edx+28712]
	jne	SHORT $LN15@ThreadFunc
; Line 754
	mov	DWORD PTR _nextBlockIndex$68015[ebp], 0
$LN15@ThreadFunc:
; Line 755
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _nextBlockIndex$68015[ebp]
	mov	DWORD PTR [edx+28720], eax
; Line 757
	mov	DWORD PTR _packSize$68018[ebp], 0
	mov	DWORD PTR _packSize$68018[ebp+4], 0
; Line 758
	lea	ecx, DWORD PTR _props$68019[ebp]
	call	??0CBlockProps@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CBlockProps::CBlockProps
; Line 761
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 762
	lea	ecx, DWORD PTR _crc$68017[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?ReadSignature@CDecoder@NBZip2@NCompress@@QAEJAAI@Z ; NCompress::NBZip2::CDecoder::ReadSignature
	mov	DWORD PTR tv248[ebp], eax
	mov	eax, DWORD PTR tv248[ebp]
	mov	DWORD PTR _res$68012[ebp], eax
; Line 763
	cmp	DWORD PTR _res$68012[ebp], 0
	je	SHORT $LN13@ThreadFunc
; Line 765
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _res$68012[ebp]
	mov	DWORD PTR [edx+28732], eax
; Line 766
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CState@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CState::FinishStream
; Line 827
	mov	DWORD PTR __$EHRec$[ebp+12], -1
; Line 767
	jmp	$LN19@ThreadFunc
$LN13@ThreadFunc:
; Line 769
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movzx	eax, BYTE PTR [edx+28745]
	test	eax, eax
	je	SHORT $LN12@ThreadFunc
; Line 771
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _res$68012[ebp]
	mov	DWORD PTR [edx+28732], eax
; Line 772
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CState@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CState::FinishStream
; Line 827
	mov	DWORD PTR __$EHRec$[ebp+12], -1
; Line 773
	jmp	$LN19@ThreadFunc
$LN12@ThreadFunc:
; Line 776
	mov	BYTE PTR _props$68019[ebp+8], 1
; Line 777
	lea	ecx, DWORD PTR _props$68019[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+28740]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 312				; 00000138H
	call	?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z ; NCompress::NBZip2::CBase::ReadBlock
	mov	DWORD PTR tv249[ebp], eax
	mov	edx, DWORD PTR tv249[ebp]
	mov	DWORD PTR _res$68012[ebp], edx
; Line 778
	cmp	DWORD PTR _res$68012[ebp], 0
	je	SHORT $LN11@ThreadFunc
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _res$68012[ebp]
	mov	DWORD PTR [ecx+28732], edx
; Line 781
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CState@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CState::FinishStream
; Line 827
	mov	DWORD PTR __$EHRec$[ebp+12], -1
; Line 782
	jmp	$LN19@ThreadFunc
$LN11@ThreadFunc:
; Line 784
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 320				; 00000140H
	call	?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ ; NBitm::CDecoder<CInBuffer>::GetProcessedSize
	mov	DWORD PTR tv250[ebp], eax
	mov	DWORD PTR tv250[ebp+4], edx
	mov	ecx, DWORD PTR tv250[ebp]
	mov	DWORD PTR _packSize$68018[ebp], ecx
	mov	edx, DWORD PTR tv250[ebp+4]
	mov	DWORD PTR _packSize$68018[ebp+4], edx
; Line 785
	jmp	SHORT $LN22@ThreadFunc
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$0:
; Line 786
	mov	eax, DWORD PTR _e$68026[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$68012[ebp], ecx
	cmp	DWORD PTR _res$68012[ebp], 0
	je	SHORT $LN10@ThreadFunc
	mov	DWORD PTR _res$68012[ebp], -2147467259	; 80004005H
$LN10@ThreadFunc:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$2
	ret	0
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$1:
; Line 787
	mov	DWORD PTR _res$68012[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$2
	ret	0
$LN22@ThreadFunc:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$2:
; Line 788
	cmp	DWORD PTR _res$68012[ebp], 0
	je	SHORT $LN9@ThreadFunc
; Line 790
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _res$68012[ebp]
	mov	DWORD PTR [eax+28732], ecx
; Line 791
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FinishStream@CState@NBZip2@NCompress@@QAEXXZ ; NCompress::NBZip2::CState::FinishStream
; Line 792
	jmp	$LN19@ThreadFunc
$LN9@ThreadFunc:
; Line 795
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, 28688				; 00007010H
	call	?Leave@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ; NWindows::NSynchronization::CCriticalSection::Leave
; Line 797
	mov	eax, DWORD PTR _props$68019[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z ; NCompress::NBZip2::DecodeBlock1
; Line 799
	mov	BYTE PTR _needFinish$68033[ebp], 1
; Line 801
	mov	DWORD PTR __$EHRec$[ebp+12], 2
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _blockIndex$68014[ebp]
	imul	edx, 284				; 0000011cH
	mov	eax, DWORD PTR [ecx+28676]
	lea	ecx, DWORD PTR [eax+edx+24]
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
; Line 803
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	al, BYTE PTR [edx+28726]
	mov	BYTE PTR _needFinish$68033[ebp], al
; Line 804
	movzx	ecx, BYTE PTR _needFinish$68033[ebp]
	test	ecx, ecx
	jne	SHORT $LN7@ThreadFunc
; Line 806
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1024				; 00000400H
	push	edx
	lea	eax, DWORD PTR _props$68019[ebp]
	push	eax
	call	?DecodeBlock@NBZip2@NCompress@@YGIABUCBlockProps@12@PAIAAVCOutBuffer@@@Z ; NCompress::NBZip2::DecodeBlock
	mov	DWORD PTR tv251[ebp], eax
	mov	ecx, DWORD PTR tv251[ebp]
	cmp	ecx, DWORD PTR _crc$68017[ebp]
	jne	SHORT $LN6@ThreadFunc
; Line 807
	mov	edx, DWORD PTR _packSize$68018[ebp+4]
	push	edx
	mov	eax, DWORD PTR _packSize$68018[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z ; NCompress::NBZip2::CDecoder::SetRatioProgress
	mov	DWORD PTR tv252[ebp], eax
	mov	edx, DWORD PTR tv252[ebp]
	mov	DWORD PTR _res$68012[ebp], edx
; Line 808
	jmp	SHORT $LN7@ThreadFunc
$LN6@ThreadFunc:
; Line 809
	mov	DWORD PTR _res$68012[ebp], 1
$LN7@ThreadFunc:
; Line 811
	jmp	SHORT $LN25@ThreadFunc
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$3:
; Line 812
	mov	eax, DWORD PTR _e$68039[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$68012[ebp], ecx
	cmp	DWORD PTR _res$68012[ebp], 0
	je	SHORT $LN4@ThreadFunc
	mov	DWORD PTR _res$68012[ebp], -2147467259	; 80004005H
$LN4@ThreadFunc:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$5
	ret	0
__catch$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$4:
; Line 813
	mov	DWORD PTR _res$68012[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$5
	ret	0
$LN25@ThreadFunc:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ$5:
; Line 814
	cmp	DWORD PTR _res$68012[ebp], 0
	je	SHORT $LN3@ThreadFunc
; Line 816
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _res$68012[ebp]
	mov	DWORD PTR [eax+28736], ecx
; Line 817
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+28726], 1
$LN3@ThreadFunc:
; Line 819
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _nextBlockIndex$68015[ebp]
	imul	eax, 284				; 0000011cH
	mov	ecx, DWORD PTR [edx+28676]
	lea	ecx, DWORD PTR [ecx+eax+24]
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 820
	cmp	DWORD PTR _res$68012[ebp], 0
	jne	SHORT $LN1@ThreadFunc
	movzx	edx, BYTE PTR _needFinish$68033[ebp]
	test	edx, edx
	je	SHORT $LN2@ThreadFunc
$LN1@ThreadFunc:
; Line 822
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
; Line 823
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 28728				; 00007038H
	call	?Lock@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Lock
; Line 824
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?Set@CBaseEvent@NSynchronization@NWindows@@QAEIXZ ; NWindows::NSynchronization::CBaseEvent::Set
$LN2@ThreadFunc:
; Line 826
	jmp	$LN19@ThreadFunc
$LN20@ThreadFunc:
; Line 827
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN49@ThreadFunc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN49@ThreadFunc:
	DD	4
	DD	$LN48@ThreadFunc
$LN48@ThreadFunc:
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN43@ThreadFunc
	DD	-68					; ffffffbcH
	DD	12					; 0000000cH
	DD	$LN44@ThreadFunc
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN45@ThreadFunc
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN46@ThreadFunc
$LN46@ThreadFunc:
	DB	101					; 00000065H
	DB	0
$LN45@ThreadFunc:
	DB	101					; 00000065H
	DB	0
$LN44@ThreadFunc:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN43@ThreadFunc:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ThreadFunc@CState@NBZip2@NCompress@@QAEXXZ ENDP	; NCompress::NBZip2::CState::ThreadFunc
EXTRN	__imp__EnterCriticalSection@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ PROC ; NWindows::NSynchronization::CCriticalSection::Enter, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\synchronization.h
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp__EnterCriticalSection@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Enter@CCriticalSection@NSynchronization@NWindows@@QAEXXZ ENDP ; NWindows::NSynchronization::CCriticalSection::Enter
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_numThreads$ = 12					; size = 4
?SetNumberOfThreads@CDecoder@NBZip2@NCompress@@UAGJI@Z PROC ; NCompress::NBZip2::CDecoder::SetNumberOfThreads
; File c:\workspace\7z1505-src\cpp\7zip\compress\bzip2decoder.cpp
; Line 830
	push	ebp
	mov	ebp, esp
; Line 831
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numThreads$[ebp]
	mov	DWORD PTR [eax+28708], ecx
; Line 832
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28708], 1
	jae	SHORT $LN2@SetNumberO
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28708], 1
$LN2@SetNumberO:
; Line 834
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28708], 4
	jbe	SHORT $LN1@SetNumberO
; Line 835
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28708], 4
$LN1@SetNumberO:
; Line 836
	xor	eax, eax
; Line 837
	pop	ebp
	ret	8
?SetNumberOfThreads@CDecoder@NBZip2@NCompress@@UAGJI@Z ENDP ; NCompress::NBZip2::CDecoder::SetNumberOfThreads
_TEXT	ENDS
EXTRN	?GetProcessedSize@COutBuffer@@QBE_KXZ:PROC	; COutBuffer::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_unpackSize$ = -16					; size = 8
_this$ = -4						; size = 4
_packSize$ = 8						; size = 8
?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z PROC ; NCompress::NBZip2::CDecoder::SetRatioProgress
; _this$ = ecx
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 843
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28672], 0
	jne	SHORT $LN1@SetRatioPr
; Line 844
	xor	eax, eax
	jmp	SHORT $LN2@SetRatioPr
$LN1@SetRatioPr:
; Line 845
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _packSize$[ebp]
	sub	edx, DWORD PTR [ecx+28656]
	mov	eax, DWORD PTR _packSize$[ebp+4]
	sbb	eax, DWORD PTR [ecx+28660]
	mov	DWORD PTR _packSize$[ebp], edx
	mov	DWORD PTR _packSize$[ebp+4], eax
; Line 846
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	DWORD PTR _unpackSize$[ebp], eax
	mov	DWORD PTR _unpackSize$[ebp+4], edx
; Line 847
	mov	esi, esp
	lea	ecx, DWORD PTR _unpackSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _packSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28672]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28672]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@SetRatioPr:
; Line 848
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetRatioPr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@SetRatioPr:
	DD	1
	DD	$LN5@SetRatioPr
$LN5@SetRatioPr:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN4@SetRatioPr
$LN4@SetRatioPr:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
?SetRatioProgress@CDecoder@NBZip2@NCompress@@QAEJ_K@Z ENDP ; NCompress::NBZip2::CDecoder::SetRatioProgress
_TEXT	ENDS
PUBLIC	?SetInStream@CNsisDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z ; NCompress::NBZip2::CNsisDecoder::SetInStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
?SetInStream@CNsisDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z PROC ; NCompress::NBZip2::CNsisDecoder::SetInStream
; Line 863
	push	ebp
	mov	ebp, esp
; Line 864
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 865
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z ; NBitm::CDecoder<CInBuffer>::SetStream
; Line 866
	xor	eax, eax
; Line 867
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetInStream@CNsisDecoder@NBZip2@NCompress@@UAGJPAUISequentialInStream@@@Z ENDP ; NCompress::NBZip2::CNsisDecoder::SetInStream
_TEXT	ENDS
PUBLIC	?ReleaseInStream@CNsisDecoder@NBZip2@NCompress@@UAGJXZ ; NCompress::NBZip2::CNsisDecoder::ReleaseInStream
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReleaseInStream@CNsisDecoder@NBZip2@NCompress@@UAGJXZ PROC ; NCompress::NBZip2::CNsisDecoder::ReleaseInStream
; Line 869
	push	ebp
	mov	ebp, esp
; Line 870
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Line 871
	xor	eax, eax
; Line 872
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?ReleaseInStream@CNsisDecoder@NBZip2@NCompress@@UAGJXZ ENDP ; NCompress::NBZip2::CNsisDecoder::ReleaseInStream
_TEXT	ENDS
PUBLIC	?SetOutStreamSize@CNsisDecoder@NBZip2@NCompress@@UAGJPB_K@Z ; NCompress::NBZip2::CNsisDecoder::SetOutStreamSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetOutStreamSize@CNsisDecoder@NBZip2@NCompress@@UAGJPB_K@Z PROC ; NCompress::NBZip2::CNsisDecoder::SetOutStreamSize
; Line 875
	push	ebp
	mov	ebp, esp
; Line 876
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28636], 0
; Line 877
	xor	eax, eax
; Line 878
	pop	ebp
	ret	8
?SetOutStreamSize@CNsisDecoder@NBZip2@NCompress@@UAGJPB_K@Z ENDP ; NCompress::NBZip2::CNsisDecoder::SetOutStreamSize
_TEXT	ENDS
PUBLIC	?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z ; NCompress::NBZip2::CNsisDecoder::Read
xdata$x	SEGMENT
__unwindtable$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z DD 00H
	DD	00H
	DD	01H
	DD	02H
	DD	FLAT:__catchsym$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$3
__catchsym$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$3 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffacH
	DD	FLAT:__catch$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$0
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$1
__ehfuncinfo$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv208 = -108						; size = 4
tv206 = -104						; size = 4
tv205 = -98						; size = 1
tv204 = -97						; size = 1
$T68768 = -96						; size = 4
$T68767 = -92						; size = 4
_e$68148 = -84						; size = 4
_b$68132 = -76						; size = 4
_tt$68118 = -72						; size = 4
_blockSize$68117 = -68					; size = 4
_numReps$68116 = -64					; size = 4
_prevByte$68115 = -60					; size = 4
_tPos$68114 = -56					; size = 4
_tt$68112 = -52						; size = 4
___result__$68110 = -48					; size = 4
_props$68109 = -40					; size = 12
_b$68103 = -21						; size = 1
_state$68096 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z PROC	; NCompress::NBZip2::CNsisDecoder::Read
; Line 881
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 92					; 0000005cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 882
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 884
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
; Line 885
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28644], 3
	jne	SHORT $LN23@Read
; Line 886
	xor	eax, eax
	jmp	$LN25@Read
$LN23@Read:
; Line 887
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28644], 4
	jne	SHORT $LN22@Read
; Line 888
	mov	eax, 1
	jmp	$LN25@Read
$LN22@Read:
; Line 889
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN21@Read
; Line 890
	xor	eax, eax
	jmp	$LN25@Read
$LN21@Read:
; Line 892
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 28360				; 00006ec8H
	mov	DWORD PTR _state$68096[ebp], eax
; Line 894
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28644], 0
	jne	SHORT $LN20@Read
; Line 896
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z ; NBitm::CDecoder<CInBuffer>::Create
	mov	BYTE PTR tv204[ebp], al
	movzx	edx, BYTE PTR tv204[ebp]
	test	edx, edx
	jne	SHORT $LN19@Read
; Line 897
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN25@Read
$LN19@Read:
; Line 898
	mov	ecx, DWORD PTR _state$68096[ebp]
	call	?Alloc@CState@NBZip2@NCompress@@QAE_NXZ	; NCompress::NBZip2::CState::Alloc
	mov	BYTE PTR tv205[ebp], al
	movzx	eax, BYTE PTR tv205[ebp]
	test	eax, eax
	jne	SHORT $LN18@Read
; Line 899
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN25@Read
$LN18@Read:
; Line 900
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::Init
; Line 901
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28644], 1
$LN20@Read:
; Line 904
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28644], 1
	jne	$LN17@Read
; Line 906
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ReadBits@CBase@NBZip2@NCompress@@QAEII@Z ; NCompress::NBZip2::CBase::ReadBits
	mov	DWORD PTR tv206[ebp], eax
	mov	al, BYTE PTR tv206[ebp]
	mov	BYTE PTR _b$68103[ebp], al
; Line 907
	movzx	ecx, BYTE PTR _b$68103[ebp]
	cmp	ecx, 23					; 00000017H
	jne	SHORT $LN16@Read
; Line 909
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28644], 3
; Line 910
	xor	eax, eax
	jmp	$LN25@Read
$LN16@Read:
; Line 912
	movzx	eax, BYTE PTR _b$68103[ebp]
	cmp	eax, 49					; 00000031H
	je	SHORT $LN15@Read
; Line 914
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28644], 4
; Line 915
	mov	eax, 1
	jmp	$LN25@Read
$LN15@Read:
; Line 917
	lea	ecx, DWORD PTR _props$68109[ebp]
	call	??0CBlockProps@NBZip2@NCompress@@QAE@XZ	; NCompress::NBZip2::CBlockProps::CBlockProps
; Line 918
	mov	BYTE PTR _props$68109[ebp+8], 0
; Line 919
	lea	edx, DWORD PTR _props$68109[ebp]
	push	edx
	push	900000					; 000dbba0H
	mov	eax, DWORD PTR _state$68096[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?ReadBlock@CBase@NBZip2@NCompress@@QAEJPAIIPAUCBlockProps@23@@Z ; NCompress::NBZip2::CBase::ReadBlock
	mov	DWORD PTR tv208[ebp], eax
	mov	edx, DWORD PTR tv208[ebp]
	mov	DWORD PTR ___result__$68110[ebp], edx
	cmp	DWORD PTR ___result__$68110[ebp], 0
	je	SHORT $LN14@Read
	mov	eax, DWORD PTR ___result__$68110[ebp]
	jmp	$LN25@Read
$LN14@Read:
; Line 920
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _props$68109[ebp]
	mov	DWORD PTR [eax+28664], ecx
; Line 921
	mov	edx, DWORD PTR _props$68109[ebp]
	push	edx
	mov	eax, DWORD PTR _state$68096[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?DecodeBlock1@NBZip2@NCompress@@YGXPAII@Z ; NCompress::NBZip2::DecodeBlock1
; Line 922
	mov	edx, DWORD PTR _state$68096[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _tt$68112[ebp], eax
; Line 923
	mov	ecx, DWORD PTR _props$68109[ebp+4]
	mov	edx, DWORD PTR _tt$68112[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	shr	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _tt$68112[ebp]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR [ecx+28648], eax
; Line 924
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28648]
	and	edx, 255				; 000000ffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28652], edx
; Line 925
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28660], 0
; Line 926
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28656], 0
; Line 927
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28644], 2
$LN17@Read:
; Line 930
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28648]
	mov	DWORD PTR _tPos$68114[ebp], edx
; Line 931
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28652]
	mov	DWORD PTR _prevByte$68115[ebp], ecx
; Line 932
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28660]
	mov	DWORD PTR _numReps$68116[ebp], eax
; Line 933
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28664]
	mov	DWORD PTR _blockSize$68117[ebp], edx
; Line 934
	mov	eax, DWORD PTR _state$68096[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1024				; 00000400H
	mov	DWORD PTR _tt$68118[ebp], ecx
$LN13@Read:
; Line 936
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28656], 0
	je	SHORT $LN12@Read
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28656]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28656], ecx
; Line 939
	mov	eax, DWORD PTR _data$[ebp]
	mov	cl, BYTE PTR _prevByte$68115[ebp]
	mov	BYTE PTR [eax], cl
; Line 940
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 1
	mov	DWORD PTR _data$[ebp], edx
; Line 941
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 942
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _size$[ebp], eax
	jne	SHORT $LN11@Read
; Line 943
	xor	eax, eax
	jmp	$LN25@Read
$LN11@Read:
; Line 944
	jmp	SHORT $LN13@Read
$LN12@Read:
; Line 946
	cmp	DWORD PTR _blockSize$68117[ebp], 0
	jne	SHORT $LN9@Read
; Line 948
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28644], 1
; Line 949
	xor	eax, eax
	jmp	$LN25@Read
$LN9@Read:
; Line 954
	mov	edx, DWORD PTR _tPos$68114[ebp]
	and	edx, 255				; 000000ffH
	mov	DWORD PTR _b$68132[ebp], edx
; Line 955
	mov	eax, DWORD PTR _tPos$68114[ebp]
	shr	eax, 8
	mov	ecx, DWORD PTR _tt$68118[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _tPos$68114[ebp], edx
; Line 956
	mov	eax, DWORD PTR _blockSize$68117[ebp]
	sub	eax, 1
	mov	DWORD PTR _blockSize$68117[ebp], eax
; Line 958
	cmp	DWORD PTR _numReps$68116[ebp], 4
	jne	SHORT $LN6@Read
; Line 960
	mov	DWORD PTR _numReps$68116[ebp], 0
$LN5@Read:
; Line 961
	cmp	DWORD PTR _b$68132[ebp], 0
	je	SHORT $LN4@Read
; Line 963
	mov	ecx, DWORD PTR _b$68132[ebp]
	sub	ecx, 1
	mov	DWORD PTR _b$68132[ebp], ecx
; Line 964
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR _prevByte$68115[ebp]
	mov	BYTE PTR [edx], al
; Line 965
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx
; Line 966
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 967
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 1
	mov	DWORD PTR _size$[ebp], edx
	jne	SHORT $LN3@Read
; Line 968
	jmp	SHORT $LN4@Read
$LN3@Read:
; Line 969
	jmp	SHORT $LN5@Read
$LN4@Read:
; Line 970
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _b$68132[ebp]
	mov	DWORD PTR [eax+28656], ecx
; Line 971
	jmp	SHORT $LN8@Read
$LN6@Read:
; Line 973
	mov	edx, DWORD PTR _b$68132[ebp]
	cmp	edx, DWORD PTR _prevByte$68115[ebp]
	je	SHORT $LN2@Read
; Line 974
	mov	DWORD PTR _numReps$68116[ebp], 0
$LN2@Read:
; Line 975
	mov	eax, DWORD PTR _numReps$68116[ebp]
	add	eax, 1
	mov	DWORD PTR _numReps$68116[ebp], eax
; Line 976
	mov	ecx, DWORD PTR _b$68132[ebp]
	mov	DWORD PTR _prevByte$68115[ebp], ecx
; Line 977
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR _b$68132[ebp]
	mov	BYTE PTR [edx], al
; Line 978
	mov	ecx, DWORD PTR _data$[ebp]
	add	ecx, 1
	mov	DWORD PTR _data$[ebp], ecx
; Line 979
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 980
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 1
	mov	DWORD PTR _size$[ebp], edx
$LN8@Read:
; Line 982
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN7@Read
	cmp	DWORD PTR _blockSize$68117[ebp], 0
	jne	$LN9@Read
$LN7@Read:
; Line 983
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tPos$68114[ebp]
	mov	DWORD PTR [eax+28648], ecx
; Line 984
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _prevByte$68115[ebp]
	mov	DWORD PTR [edx+28652], eax
; Line 985
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _numReps$68116[ebp]
	mov	DWORD PTR [ecx+28660], edx
; Line 986
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _blockSize$68117[ebp]
	mov	DWORD PTR [eax+28664], ecx
; Line 987
	xor	eax, eax
	jmp	SHORT $LN25@Read
__catch$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$0:
; Line 990
	mov	edx, DWORD PTR _e$68148[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR $T68767[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN31@Read
	ret	0
	mov	eax, __tryend$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$2
	ret	0
__catch$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$1:
; Line 991
	mov	DWORD PTR $T68768[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN33@Read
	ret	0
	mov	eax, __tryend$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$2
	ret	0
__tryend$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z$2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN32@Read
$LN33@Read:
	mov	eax, DWORD PTR $T68768[ebp]
	jmp	SHORT $LN25@Read
$LN32@Read:
	jmp	SHORT $LN25@Read
$LN31@Read:
; Line 990
	mov	eax, DWORD PTR $T68767[ebp]
$LN25@Read:
; Line 992
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN40@Read:
	DD	2
	DD	$LN39@Read
$LN39@Read:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN36@Read
	DD	-84					; ffffffacH
	DD	4
	DD	$LN37@Read
$LN37@Read:
	DB	101					; 00000065H
	DB	0
$LN36@Read:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-112]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Read@CNsisDecoder@NBZip2@NCompress@@UAGJPAXIPAI@Z ENDP	; NCompress::NBZip2::CNsisDecoder::Read
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialInStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialInStream>::operator=
_TEXT	ENDS
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z PROC	; NBitm::CDecoder<CInBuffer>::Create, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmdecoder.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@?$CDecoder@VCInBuffer@@@NBitm@@QAE_NI@Z ENDP	; NBitm::CDecoder<CInBuffer>::Create
_TEXT	ENDS
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z PROC ; NBitm::CDecoder<CInBuffer>::SetStream, COMDAT
; _this$ = ecx
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@?$CDecoder@VCInBuffer@@@NBitm@@QAEXPAUISequentialInStream@@@Z ENDP ; NBitm::CDecoder<CInBuffer>::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
_TEXT	ENDS
PUBLIC	?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::Normalize
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ PROC	; NBitm::CDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmdecoder.h
; Line 30
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 32			; 00000020H
; Line 33
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::Normalize
; Line 35
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ENDP	; NBitm::CDecoder<CInBuffer>::Init
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ PROC ; NBitm::CDecoder<CInBuffer>::GetProcessedSize, COMDAT
; _this$ = ecx
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 32					; 00000020H
	sub	esi, DWORD PTR [ecx]
	shr	esi, 3
	xor	ecx, ecx
	sub	eax, esi
	sbb	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@?$CDecoder@VCInBuffer@@@NBitm@@QBE_KXZ ENDP ; NBitm::CDecoder<CInBuffer>::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ PROC ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmdecoder.h
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 4
	ja	SHORT $LN3@ExtraBitsW
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	shl	ecx, 3
	cmp	edx, ecx
	jb	SHORT $LN3@ExtraBitsW
	mov	DWORD PTR tv80[ebp], 0
	jmp	SHORT $LN4@ExtraBitsW
$LN3@ExtraBitsW:
	mov	DWORD PTR tv80[ebp], 1
$LN4@ExtraBitsW:
	mov	al, BYTE PTR tv80[ebp]
; Line 43
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtraBitsWereRead@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ENDP ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ PROC ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead_Fast, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 4
	cmp	ecx, DWORD PTR [eax+40]
	sbb	eax, eax
	neg	eax
; Line 48
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtraBitsWereRead_Fast@?$CDecoder@VCInBuffer@@@NBitm@@QBE_NXZ ENDP ; NBitm::CDecoder<CInBuffer>::ExtraBitsWereRead_Fast
_TEXT	ENDS
PUBLIC	?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z	; NBitm::CDecoder<CInBuffer>::MovePos
PUBLIC	?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z ; NBitm::CDecoder<CInBuffer>::GetValue
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z PROC	; NBitm::CDecoder<CInBuffer>::ReadBits, COMDAT
; _this$ = ecx
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z ; NBitm::CDecoder<CInBuffer>::GetValue
	mov	DWORD PTR _res$[ebp], eax
; Line 71
	mov	ecx, DWORD PTR _numBits$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z ; NBitm::CDecoder<CInBuffer>::MovePos
; Line 72
	mov	eax, DWORD PTR _res$[ebp]
; Line 73
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@?$CDecoder@VCInBuffer@@@NBitm@@QAEII@Z ENDP	; NBitm::CDecoder<CInBuffer>::ReadBits
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ PROC	; NBitm::CDecoder<CInBuffer>::AlignToByte, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR [eax]
	and	ecx, 7
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z ; NBitm::CDecoder<CInBuffer>::MovePos
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ENDP	; NBitm::CDecoder<CInBuffer>::AlignToByte
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -228						; size = 4
_len$68213 = -224					; size = 4
_limit$68205 = -220					; size = 4
_kMaxValue$ = -216					; size = 4
_index$ = -212						; size = 4
_startPos$ = -208					; size = 4
_len$68195 = -204					; size = 4
_symbol$ = -200						; size = 4
_i$ = -196						; size = 4
_tmpPositions$ = -188					; size = 84
_lenCounts$ = -96					; size = 84
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<20,258>::SetCodeLengths, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen
$LN18@SetCodeLen:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen:
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	ja	SHORT $LN17@SetCodeLen
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen
$LN17@SetCodeLen:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen
$LN15@SetCodeLen:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen:
	cmp	DWORD PTR _symbol$[ebp], 258		; 00000102H
	jae	SHORT $LN14@SetCodeLen
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$68195[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$68195[ebp], 20		; 00000014H
	jbe	SHORT $LN13@SetCodeLen
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen
$LN13@SetCodeLen:
; Line 37
	mov	edx, DWORD PTR _len$68195[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$68195[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+168], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen
$LN14@SetCodeLen:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 1048576	; 00100000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen
$LN11@SetCodeLen:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen:
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	ja	$LN10@SetCodeLen
; Line 49
	mov	ecx, 20					; 00000014H
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 1048576	; 00100000H
	jbe	SHORT $LN9@SetCodeLen
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen
$LN9@SetCodeLen:
; Line 52
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jne	SHORT $LN22@SetCodeLen
	mov	DWORD PTR tv128[ebp], 1048576		; 00100000H
	jmp	SHORT $LN23@SetCodeLen
$LN22@SetCodeLen:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+80]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+84], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+84]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 11					; 0000000bH
	mov	DWORD PTR _limit$68205[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen
$LN6@SetCodeLen:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$68205[ebp]
	jae	SHORT $LN8@SetCodeLen
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+1200], dl
	jmp	SHORT $LN6@SetCodeLen
$LN8@SetCodeLen:
; Line 61
	jmp	$LN11@SetCodeLen
$LN10@SetCodeLen:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen
$LN3@SetCodeLen:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen:
	cmp	DWORD PTR _symbol$[ebp], 258		; 00000102H
	jae	SHORT $LN2@SetCodeLen
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$68213[ebp], edx
; Line 66
	cmp	DWORD PTR _len$68213[ebp], 0
	je	SHORT $LN1@SetCodeLen
; Line 67
	mov	eax, DWORD PTR _len$68213[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+168], eax
	mov	ecx, DWORD PTR _len$68213[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$68213[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen:
; Line 68
	jmp	SHORT $LN3@SetCodeLen
$LN2@SetCodeLen:
; Line 70
	mov	al, 1
$LN20@SetCodeLen:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN27@SetCodeLen:
	DD	2
	DD	$LN26@SetCodeLen
$LN26@SetCodeLen:
	DD	-96					; ffffffa0H
	DD	84					; 00000054H
	DD	$LN24@SetCodeLen
	DD	-188					; ffffff44H
	DD	84					; 00000054H
	DD	$LN25@SetCodeLen
$LN25@SetCodeLen:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<20,258>::SetCodeLengths
_TEXT	ENDS
PUBLIC	?ReadByte@CInBufferBase@@QAEEXZ			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ PROC	; NBitm::CDecoder<CInBuffer>::Normalize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmdecoder.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	jmp	SHORT $LN3@Normalize
$LN2@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN3@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 8
	jb	SHORT $LN4@Normalize
; Line 53
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+4]
	shl	esi, 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	movzx	edx, al
	or	esi, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], esi
	jmp	SHORT $LN2@Normalize
$LN4@Normalize:
; Line 54
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ENDP	; NBitm::CDecoder<CInBuffer>::Normalize
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAEEXZ
_TEXT	SEGMENT
tv70 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte@CInBufferBase@@QAEEXZ PROC			; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv70[ebp], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	al, BYTE PTR tv70[ebp]
$LN2@ReadByte:
; Line 76
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CInBufferBase@@QAEEXZ ENDP			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z PROC	; NBitm::CDecoder<CInBuffer>::GetValue, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitmdecoder.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 8
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shr	eax, cl
	and	eax, 16777215				; 00ffffffH
	mov	ecx, 24					; 00000018H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
; Line 60
	mov	esp, ebp
	pop	ebp
	ret	4
?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z ENDP	; NBitm::CDecoder<CInBuffer>::GetValue
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z PROC	; NBitm::CDecoder<CInBuffer>::MovePos, COMDAT
; _this$ = ecx
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 65
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Normalize@?$CDecoder@VCInBuffer@@@NBitm@@QAEXXZ ; NBitm::CDecoder<CInBuffer>::Normalize
; Line 66
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z ENDP	; NBitm::CDecoder<CInBuffer>::MovePos
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z PROC ; NCompress::NHuffman::CDecoder<20,258>::DecodeSymbol<NBitm::CDecoder<CInBuffer> >, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	20					; 00000014H
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@?$CDecoder@VCInBuffer@@@NBitm@@QBEII@Z ; NBitm::CDecoder<CInBuffer>::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 11					; 0000000bH
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+1200]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb
$LN6@DecodeSymb:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb
$LN3@DecodeSymb:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb
	jmp	SHORT $LN3@DecodeSymb
$LN5@DecodeSymb:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitm@@QAEXI@Z ; NBitm::CDecoder<CInBuffer>::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 20					; 00000014H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+84]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 258		; 00000102H
	jb	SHORT $LN1@DecodeSymb
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb
$LN1@DecodeSymb:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+168]
$LN7@DecodeSymb:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitm@@@?$CDecoder@$0BE@$0BAC@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitm@@@Z ENDP ; NCompress::NHuffman::CDecoder<20,258>::DecodeSymbol<NBitm::CDecoder<CInBuffer> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDecoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CDecoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NBZip2::CDecoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CDecoder@NBZip2@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NBZip2::CDecoder::QueryInterface
?QueryInterface@CDecoder@NBZip2@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NBZip2::CDecoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDecoder@NBZip2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CDecoder@NBZip2@NCompress@@W3AGKXZ PROC	; [thunk]:NCompress::NBZip2::CDecoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CDecoder@NBZip2@NCompress@@UAGKXZ ; NCompress::NBZip2::CDecoder::Release
?Release@CDecoder@NBZip2@NCompress@@W3AGKXZ ENDP	; [thunk]:NCompress::NBZip2::CDecoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDecoder@NBZip2@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CDecoder@NBZip2@NCompress@@W3AGKXZ PROC		; [thunk]:NCompress::NBZip2::CDecoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CDecoder@NBZip2@NCompress@@UAGKXZ ; NCompress::NBZip2::CDecoder::AddRef
?AddRef@CDecoder@NBZip2@NCompress@@W3AGKXZ ENDP		; [thunk]:NCompress::NBZip2::CDecoder::AddRef`adjustor{4}'
_TEXT	ENDS
END

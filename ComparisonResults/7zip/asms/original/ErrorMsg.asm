; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\ErrorMsg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG67193 DB	'Error #', 00H
CONST	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?DeleteFrom@UString@@QAEXI@Z			; UString::DeleteFrom
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	__$ArrayPad$
PUBLIC	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
EXTRN	?AddAscii@UString@@QAEXPBD@Z:PROC		; UString::AddAscii
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
xdata$x	SEGMENT
__unwindtable$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z$0
__ehfuncinfo$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\errormsg.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
tv86 = -76						; size = 4
$T67231 = -72						; size = 4
_t$67191 = -68						; size = 4
_i$67187 = -64						; size = 4
_s$67186 = -56						; size = 16
_m$ = -32						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_errorCode$ = 12					; size = 4
?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z PROC ; NWindows::NError::MyFormatMessage
; Line 44
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T67231[ebp], 0
; Line 45
	lea	ecx, DWORD PTR _m$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 46
	lea	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	call	?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z ; NWindows::NError::MyFormatMessage
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@MyFormatMe
	lea	ecx, DWORD PTR _m$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@MyFormatMe
$LN6@MyFormatMe:
; Line 49
	mov	DWORD PTR _i$67187[ebp], 0
	jmp	SHORT $LN5@MyFormatMe
$LN4@MyFormatMe:
	mov	ecx, DWORD PTR _i$67187[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$67187[ebp], ecx
$LN5@MyFormatMe:
	cmp	DWORD PTR _i$67187[ebp], 8
	jge	SHORT $LN3@MyFormatMe
; Line 51
	mov	edx, DWORD PTR _errorCode$[ebp]
	and	edx, 15					; 0000000fH
	mov	DWORD PTR _t$67191[ebp], edx
; Line 52
	mov	eax, DWORD PTR _errorCode$[ebp]
	shr	eax, 4
	mov	DWORD PTR _errorCode$[ebp], eax
; Line 53
	cmp	DWORD PTR _t$67191[ebp], 10		; 0000000aH
	jae	SHORT $LN10@MyFormatMe
	mov	ecx, DWORD PTR _t$67191[ebp]
	add	ecx, 48					; 00000030H
	mov	DWORD PTR tv86[ebp], ecx
	jmp	SHORT $LN11@MyFormatMe
$LN10@MyFormatMe:
	mov	edx, DWORD PTR _t$67191[ebp]
	add	edx, 55					; 00000037H
	mov	DWORD PTR tv86[ebp], edx
$LN11@MyFormatMe:
	mov	eax, 7
	sub	eax, DWORD PTR _i$67187[ebp]
	mov	cl, BYTE PTR tv86[ebp]
	mov	BYTE PTR _s$67186[ebp+eax], cl
; Line 54
	jmp	SHORT $LN4@MyFormatMe
$LN3@MyFormatMe:
; Line 55
	mov	BYTE PTR _s$67186[ebp+8], 0
; Line 56
	push	OFFSET $SG67193
	lea	ecx, DWORD PTR _m$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 57
	lea	edx, DWORD PTR _s$67186[ebp]
	push	edx
	lea	ecx, DWORD PTR _m$[ebp]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 59
	jmp	SHORT $LN2@MyFormatMe
$LN7@MyFormatMe:
; Line 61
	lea	ecx, DWORD PTR _m$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	eax, 2
	jb	SHORT $LN2@MyFormatMe
	lea	ecx, DWORD PTR _m$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	esi, eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	movzx	eax, WORD PTR [esi+eax*2-2]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN2@MyFormatMe
	lea	ecx, DWORD PTR _m$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	esi, eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	movzx	ecx, WORD PTR [esi+eax*2-4]
	cmp	ecx, 13					; 0000000dH
	jne	SHORT $LN2@MyFormatMe
; Line 62
	lea	ecx, DWORD PTR _m$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	sub	eax, 2
	push	eax
	lea	ecx, DWORD PTR _m$[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
$LN2@MyFormatMe:
; Line 63
	lea	edx, DWORD PTR _m$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	eax, DWORD PTR $T67231[ebp]
	or	eax, 1
	mov	DWORD PTR $T67231[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _m$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 64
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@MyFormatMe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN19@MyFormatMe:
	DD	2
	DD	$LN18@MyFormatMe
$LN18@MyFormatMe:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN15@MyFormatMe
	DD	-56					; ffffffc8H
	DD	16					; 00000010H
	DD	$LN16@MyFormatMe
$LN16@MyFormatMe:
	DB	115					; 00000073H
	DB	0
$LN15@MyFormatMe:
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z$0:
	lea	ecx, DWORD PTR _m$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z$1:
	mov	eax, DWORD PTR $T67231[ebp]
	and	eax, 1
	je	$LN14@MyFormatMe
	and	DWORD PTR $T67231[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
$LN14@MyFormatMe:
	ret	0
__ehhandler$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ENDP ; NWindows::NError::MyFormatMessage
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67249 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67249[ebp], ecx
	mov	edx, DWORD PTR $T67249[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteFrom@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@UString@@QAEXI@Z PROC			; UString::DeleteFrom, COMDAT
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@DeleteFrom
; Line 607
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@DeleteFrom:
; Line 610
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@UString@@QAEXI@Z ENDP			; UString::DeleteFrom
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z	; GetUnicodeString
EXTRN	__imp__LocalFree@4:PROC
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
EXTRN	__imp__FormatMessageW@28:PROC
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	??0AString@@QAE@PBD@Z:PROC			; AString::AString
EXTRN	__imp__FormatMessageA@28:PROC
EXTRN	?g_IsNT@@3_NA:BYTE				; g_IsNT
xdata$x	SEGMENT
__unwindtable$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z$1
__ehfuncinfo$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv132 = -56						; size = 4
tv79 = -52						; size = 4
$T67261 = -48						; size = 12
$T67260 = -36						; size = 12
_msgBuf$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
_message$ = 12						; size = 4
?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z PROC ; NWindows::NError::MyFormatMessage
; File c:\workspace\7z1505-src\cpp\windows\errormsg.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 22
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	$LN4@MyFormatMe@2
; Line 26
	mov	esi, esp
	push	0
	push	0
	lea	ecx, DWORD PTR _msgBuf$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _errorCode$[ebp]
	push	edx
	push	0
	push	4864					; 00001300H
	call	DWORD PTR __imp__FormatMessageA@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@MyFormatMe@2
; Line 27
	xor	al, al
	jmp	$LN5@MyFormatMe@2
$LN3@MyFormatMe@2:
; Line 28
	mov	eax, DWORD PTR _msgBuf$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67260[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T67260[ebp]
	push	ecx
	lea	edx, DWORD PTR $T67261[ebp]
	push	edx
	call	?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z ; GetUnicodeString
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv132[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv132[ebp]
	push	ecx
	mov	ecx, DWORD PTR _message$[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T67261[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67260[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 30
	jmp	SHORT $LN2@MyFormatMe@2
$LN4@MyFormatMe@2:
; Line 35
	mov	esi, esp
	push	0
	push	0
	lea	edx, DWORD PTR _msgBuf$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	4864					; 00001300H
	call	DWORD PTR __imp__FormatMessageW@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@MyFormatMe@2
; Line 36
	xor	al, al
	jmp	SHORT $LN5@MyFormatMe@2
$LN1@MyFormatMe@2:
; Line 37
	mov	ecx, DWORD PTR _msgBuf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _message$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN2@MyFormatMe@2:
; Line 39
	mov	esi, esp
	mov	edx, DWORD PTR _msgBuf$[ebp]
	push	edx
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	al, 1
$LN5@MyFormatMe@2:
; Line 41
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@MyFormatMe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN12@MyFormatMe@2:
	DD	1
	DD	$LN11@MyFormatMe@2
$LN11@MyFormatMe@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@MyFormatMe@2
$LN9@MyFormatMe@2:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z$0:
	lea	ecx, DWORD PTR $T67260[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z$1:
	lea	ecx, DWORD PTR $T67261[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MyFormatMessage@NError@NWindows@@YG_NKAAVUString@@@Z ENDP ; NWindows::NError::MyFormatMessage
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67272 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67272[ebp], ecx
	mov	edx, DWORD PTR $T67272[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
_TEXT	ENDS
EXTRN	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z:PROC ; MultiByteToUnicodeString
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z
_TEXT	SEGMENT
$T67276 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_ansiString$ = 12					; size = 4
?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z PROC	; GetUnicodeString, COMDAT
; File c:\workspace\7z1505-src\cpp\common\stringconvert.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T67276[ebp], 0
	push	0
	mov	eax, DWORD PTR _ansiString$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	?MultiByteToUnicodeString@@YG?AVUString@@ABVAString@@I@Z ; MultiByteToUnicodeString
	mov	edx, DWORD PTR $T67276[ebp]
	or	edx, 1
	mov	DWORD PTR $T67276[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetUnicodeString@@YG?AVUString@@ABVAString@@@Z ENDP	; GetUnicodeString
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\List.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kListing DD	FLAT:$SG72602
_kString_Files DD FLAT:$SG72604
_kString_Dirs DD FLAT:$SG72606
_kString_AltStreams DD FLAT:$SG72608
_kString_Streams DD FLAT:$SG72610
_kError	DD	FLAT:$SG72612
_g_Spaces DD	FLAT:$SG72665
_DATA	ENDS
CONST	SEGMENT
$SG72505 DB	'0', 00H
$SG73168 DB	00H
	ORG $+1
$SG72506 DB	'1', 00H
	ORG $+2
$SG72507 DB	'2', 00H
	ORG $+2
$SG72508 DB	'Path', 00H
	ORG $+3
$SG72509 DB	'Name', 00H
	ORG $+3
$SG72510 DB	'Extension', 00H
	ORG $+2
$SG72511 DB	'Folder', 00H
	ORG $+1
$SG72512 DB	'Size', 00H
	ORG $+3
$SG72513 DB	'Packed Size', 00H
$SG72514 DB	'Attributes', 00H
	ORG $+1
$SG72515 DB	'Created', 00H
$SG72516 DB	'Accessed', 00H
	ORG $+3
$SG72517 DB	'Modified', 00H
	ORG $+3
$SG72518 DB	'Solid', 00H
	ORG $+2
$SG72519 DB	'Commented', 00H
	ORG $+2
$SG72520 DB	'Encrypted', 00H
	ORG $+2
$SG72521 DB	'Split Before', 00H
	ORG $+3
$SG72522 DB	'Split After', 00H
$SG72523 DB	'Dictionary Size', 00H
$SG72524 DB	'CRC', 00H
$SG72525 DB	'Type', 00H
	ORG $+3
$SG72526 DB	'Anti', 00H
	ORG $+3
$SG72527 DB	'Method', 00H
	ORG $+1
$SG72528 DB	'Host OS', 00H
$SG72529 DB	'File System', 00H
$SG72530 DB	'User', 00H
	ORG $+3
$SG72531 DB	'Group', 00H
	ORG $+2
$SG72532 DB	'Block', 00H
	ORG $+2
$SG72533 DB	'Comment', 00H
$SG72534 DB	'Position', 00H
	ORG $+3
$SG72535 DB	'Path Prefix', 00H
$SG72536 DB	'Folders', 00H
$SG72537 DB	'Files', 00H
	ORG $+2
$SG72538 DB	'Version', 00H
$SG72539 DB	'Volume', 00H
	ORG $+1
$SG72540 DB	'Multivolume', 00H
$SG72541 DB	'Offset', 00H
	ORG $+1
$SG72542 DB	'Links', 00H
	ORG $+2
$SG72543 DB	'Blocks', 00H
	ORG $+1
$SG72544 DB	'Volumes', 00H
$SG72545 DB	'Time Type', 00H
	ORG $+2
$SG72546 DB	'64-bit', 00H
	ORG $+1
$SG72547 DB	'Big-endian', 00H
	ORG $+1
$SG72548 DB	'CPU', 00H
$SG72549 DB	'Physical Size', 00H
	ORG $+2
$SG72550 DB	'Headers Size', 00H
	ORG $+3
$SG72551 DB	'Checksum', 00H
	ORG $+3
$SG72552 DB	'Characteristics', 00H
$SG72553 DB	'Virtual Address', 00H
$SG72554 DB	'ID', 00H
	ORG $+1
$SG72555 DB	'Short Name', 00H
	ORG $+1
$SG72556 DB	'Creator Application', 00H
$SG72557 DB	'Sector Size', 00H
$SG72558 DB	'Mode', 00H
	ORG $+3
$SG72559 DB	'Symbolic Link', 00H
	ORG $+2
$SG72560 DB	'Error', 00H
	ORG $+2
$SG72561 DB	'Total Size', 00H
	ORG $+1
$SG72562 DB	'Free Space', 00H
	ORG $+1
$SG72563 DB	'Cluster Size', 00H
	ORG $+3
$SG72564 DB	'Label', 00H
	ORG $+2
$SG72565 DB	'Local Name', 00H
	ORG $+1
$SG72566 DB	'Provider', 00H
	ORG $+3
$SG72567 DB	'NT Security', 00H
$SG72568 DB	'Alternate Stream', 00H
	ORG $+3
$SG72569 DB	'Aux', 00H
$SG72570 DB	'Deleted', 00H
$SG72571 DB	'Tree', 00H
	ORG $+3
$SG72572 DB	'SHA-1', 00H
	ORG $+2
$SG72573 DB	'SHA-256', 00H
$SG72574 DB	'Error Type', 00H
	ORG $+1
$SG72575 DB	'Errors', 00H
	ORG $+1
$SG72576 DB	'Errors', 00H
	ORG $+1
$SG72577 DB	'Warnings', 00H
	ORG $+3
$SG72578 DB	'Warning', 00H
$SG72579 DB	'Streams', 00H
$SG72580 DB	'Alternate Streams', 00H
	ORG $+2
$SG72581 DB	'Alternate Streams Size', 00H
	ORG $+1
$SG72582 DB	'Virtual Size', 00H
	ORG $+3
$SG72583 DB	'Unpack Size', 00H
$SG72584 DB	'Total Physical Size', 00H
$SG72585 DB	'Volume Index', 00H
	ORG $+3
$SG72586 DB	'SubType', 00H
$SG72587 DB	'Short Comment', 00H
	ORG $+2
$SG72588 DB	'Code Page', 00H
	ORG $+2
$SG72589 DB	'Is not archive type', 00H
$SG72590 DB	'Physical Size can''t be detected', 00H
$SG72591 DB	'Zeros Tail Is Allowed', 00H
	ORG $+2
$SG72592 DB	'Tail Size', 00H
	ORG $+2
$SG72593 DB	'Embedded Stub Size', 00H
	ORG $+1
$SG72594 DB	'Link', 00H
	ORG $+3
$SG72595 DB	'Hard Link', 00H
	ORG $+2
$SG72596 DB	'iNode', 00H
	ORG $+2
$SG72597 DB	'Stream ID', 00H
	ORG $+2
$SG72598 DB	'Read-only', 00H
	ORG $+2
$SG72599 DB	'Out Name', 00H
	ORG $+3
_kPropIdToName DD FLAT:$SG72505
	DD	FLAT:$SG72506
	DD	FLAT:$SG72507
	DD	FLAT:$SG72508
	DD	FLAT:$SG72509
	DD	FLAT:$SG72510
	DD	FLAT:$SG72511
	DD	FLAT:$SG72512
	DD	FLAT:$SG72513
	DD	FLAT:$SG72514
	DD	FLAT:$SG72515
	DD	FLAT:$SG72516
	DD	FLAT:$SG72517
	DD	FLAT:$SG72518
	DD	FLAT:$SG72519
	DD	FLAT:$SG72520
	DD	FLAT:$SG72521
	DD	FLAT:$SG72522
	DD	FLAT:$SG72523
	DD	FLAT:$SG72524
	DD	FLAT:$SG72525
	DD	FLAT:$SG72526
	DD	FLAT:$SG72527
	DD	FLAT:$SG72528
	DD	FLAT:$SG72529
	DD	FLAT:$SG72530
	DD	FLAT:$SG72531
	DD	FLAT:$SG72532
	DD	FLAT:$SG72533
	DD	FLAT:$SG72534
	DD	FLAT:$SG72535
	DD	FLAT:$SG72536
	DD	FLAT:$SG72537
	DD	FLAT:$SG72538
	DD	FLAT:$SG72539
	DD	FLAT:$SG72540
	DD	FLAT:$SG72541
	DD	FLAT:$SG72542
	DD	FLAT:$SG72543
	DD	FLAT:$SG72544
	DD	FLAT:$SG72545
	DD	FLAT:$SG72546
	DD	FLAT:$SG72547
	DD	FLAT:$SG72548
	DD	FLAT:$SG72549
	DD	FLAT:$SG72550
	DD	FLAT:$SG72551
	DD	FLAT:$SG72552
	DD	FLAT:$SG72553
	DD	FLAT:$SG72554
	DD	FLAT:$SG72555
	DD	FLAT:$SG72556
	DD	FLAT:$SG72557
	DD	FLAT:$SG72558
	DD	FLAT:$SG72559
	DD	FLAT:$SG72560
	DD	FLAT:$SG72561
	DD	FLAT:$SG72562
	DD	FLAT:$SG72563
	DD	FLAT:$SG72564
	DD	FLAT:$SG72565
	DD	FLAT:$SG72566
	DD	FLAT:$SG72567
	DD	FLAT:$SG72568
	DD	FLAT:$SG72569
	DD	FLAT:$SG72570
	DD	FLAT:$SG72571
	DD	FLAT:$SG72572
	DD	FLAT:$SG72573
	DD	FLAT:$SG72574
	DD	FLAT:$SG72575
	DD	FLAT:$SG72576
	DD	FLAT:$SG72577
	DD	FLAT:$SG72578
	DD	FLAT:$SG72579
	DD	FLAT:$SG72580
	DD	FLAT:$SG72581
	DD	FLAT:$SG72582
	DD	FLAT:$SG72583
	DD	FLAT:$SG72584
	DD	FLAT:$SG72585
	DD	FLAT:$SG72586
	DD	FLAT:$SG72587
	DD	FLAT:$SG72588
	DD	FLAT:$SG72589
	DD	FLAT:$SG72590
	DD	FLAT:$SG72591
	DD	FLAT:$SG72592
	DD	FLAT:$SG72593
	DD	FLAT:$SG72594
	DD	FLAT:$SG72595
	DD	FLAT:$SG72596
	DD	FLAT:$SG72597
	DD	FLAT:$SG72598
	DD	FLAT:$SG72599
$SG72602 DB	'Listing archive: ', 00H
	ORG $+2
$SG72604 DB	'files', 00H
	ORG $+2
$SG72606 DB	'folders', 00H
$SG72608 DB	'alternate streams', 00H
	ORG $+2
$SG72610 DB	'streams', 00H
$SG72612 DB	'ERROR: ', 00H
$SG72658 DB	'   Date      Time', 00H
	ORG $+2
$SG72659 DB	'Attr', 00H
	ORG $+3
$SG72660 DB	'Size', 00H
	ORG $+3
$SG72661 DB	'Compressed', 00H
	ORG $+1
$SG72662 DB	'Name', 00H
	ORG $+3
$SG72665 DB	'                                ', 00H
	ORG $+3
_kStandardFieldTable DD 0cH
	DD	FLAT:$SG72658
	DD	00H
	DD	00H
	DD	00H
	DD	013H
	DD	09H
	DD	FLAT:$SG72659
	DD	02H
	DD	01H
	DD	01H
	DD	05H
	DD	07H
	DD	FLAT:$SG72660
	DD	02H
	DD	02H
	DD	01H
	DD	0cH
	DD	08H
	DD	FLAT:$SG72661
	DD	02H
	DD	02H
	DD	01H
	DD	0cH
	DD	03H
	DD	FLAT:$SG72662
	DD	00H
	DD	00H
	DD	02H
	DD	018H
$SG72957 DB	' = ', 00H
$SG72959 DB	' = ', 00H
$SG73088 DB	'data:', 00H
	ORG $+2
$SG73166 DB	', ', 00H
	ORG $+1
$SG73208 DB	': ', 00H
	ORG $+1
$SG73217 DB	' = ', 00H
$SG73234 DB	' = ', 00H
$SG73247 DB	' = ', 00H
$SG73265 DB	'Open ', 00H
	ORG $+2
$SG73266 DB	'WARNING', 00H
$SG73267 DB	'ERROR', 00H
	ORG $+2
$SG73268 DB	': Can not open the file as [', 00H
	ORG $+3
$SG73269 DB	'] archive', 00H
	ORG $+2
$SG73281 DB	'ERRORS:', 00H
$SG73283 DB	'ERROR', 00H
	ORG $+2
$SG73284 DB	'WARNINGS:', 00H
	ORG $+2
$SG73286 DB	'WARNING', 00H
$SG73298 DB	'--', 0aH, 00H
$SG73299 DB	'Path', 00H
	ORG $+3
$SG73302 DB	'Warning: The archive is open with offset', 00H
	ORG $+3
$SG73305 DB	'Type', 00H
	ORG $+3
$SG73330 DB	'----', 0aH, 00H
	ORG $+2
$SG73355 DB	'Can not open encrypted archive. Wrong password?', 00H
$SG73359 DB	'Can not open the file as archive', 00H
	ORG $+3
$SG73429 DB	' is not a file', 00H
	ORG $+1
$SG73599 DB	' : ', 00H
$SG73603 DB	'opening : ', 00H
	ORG $+1
$SG73606 DB	'Can''t allocate required memory', 00H
	ORG $+1
$SG73634 DB	'----------', 0aH, 00H
$SG73713 DB	'----------', 0aH, 00H
$SG73714 DB	'Path', 00H
	ORG $+3
$SG73717 DB	'Archives', 00H
	ORG $+3
$SG73718 DB	'Volumes', 00H
$SG73719 DB	'Total archives size', 00H
CONST	ENDS
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
PUBLIC	?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ ; CObjectVector<CFieldInfo>::AddNew
PUBLIC	?Clear@CFieldPrinter@@QAEXXZ			; CFieldPrinter::Clear
PUBLIC	?Init@CFieldPrinter@@QAEXPBUCFieldInfoInit@@I@Z	; CFieldPrinter::Init
EXTRN	?Add_Space@AString@@QAEXXZ:PROC			; AString::Add_Space
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_k$72933 = -20						; size = 4
_fii$72932 = -16					; size = 4
_f$72931 = -12						; size = 4
_i$72927 = -8						; size = 4
_this$ = -4						; size = 4
_standardFieldTable$ = 8				; size = 4
_numItems$ = 12						; size = 4
?Init@CFieldPrinter@@QAEXPBUCFieldInfoInit@@I@Z PROC	; CFieldPrinter::Init
; _this$ = ecx
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 387
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CFieldPrinter@@QAEXXZ		; CFieldPrinter::Clear
; Line 388
	mov	DWORD PTR _i$72927[ebp], 0
	jmp	SHORT $LN9@Init
$LN8@Init:
	mov	eax, DWORD PTR _i$72927[ebp]
	add	eax, 1
	mov	DWORD PTR _i$72927[ebp], eax
$LN9@Init:
	mov	ecx, DWORD PTR _i$72927[ebp]
	cmp	ecx, DWORD PTR _numItems$[ebp]
	jae	$LN10@Init
; Line 390
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ ; CObjectVector<CFieldInfo>::AddNew
	mov	DWORD PTR _f$72931[ebp], eax
; Line 391
	mov	edx, DWORD PTR _i$72927[ebp]
	imul	edx, 24					; 00000018H
	add	edx, DWORD PTR _standardFieldTable$[ebp]
	mov	DWORD PTR _fii$72932[ebp], edx
; Line 392
	mov	eax, DWORD PTR _f$72931[ebp]
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 393
	mov	eax, DWORD PTR _f$72931[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 394
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _f$72931[ebp]
	add	ecx, 20					; 00000014H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 395
	mov	eax, DWORD PTR _f$72931[ebp]
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+32], edx
; Line 396
	mov	eax, DWORD PTR _f$72931[ebp]
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+36], edx
; Line 397
	mov	eax, DWORD PTR _f$72931[ebp]
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+40], edx
; Line 398
	mov	eax, DWORD PTR _f$72931[ebp]
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+44], edx
; Line 401
	mov	DWORD PTR _k$72933[ebp], 0
	jmp	SHORT $LN6@Init
$LN5@Init:
	mov	eax, DWORD PTR _k$72933[ebp]
	add	eax, 1
	mov	DWORD PTR _k$72933[ebp], eax
$LN6@Init:
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR _k$72933[ebp]
	cmp	edx, DWORD PTR [ecx+16]
	jae	SHORT $LN4@Init
; Line 402
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
	jmp	SHORT $LN5@Init
$LN4@Init:
; Line 403
	mov	DWORD PTR _k$72933[ebp], 0
	jmp	SHORT $LN3@Init
$LN2@Init:
	mov	eax, DWORD PTR _k$72933[ebp]
	add	eax, 1
	mov	DWORD PTR _k$72933[ebp], eax
$LN3@Init:
	mov	ecx, DWORD PTR _fii$72932[ebp]
	mov	edx, DWORD PTR _k$72933[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	jae	SHORT $LN1@Init
; Line 404
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
	jmp	SHORT $LN2@Init
$LN1@Init:
; Line 405
	jmp	$LN8@Init
$LN10@Init:
; Line 406
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Init@CFieldPrinter@@QAEXPBUCFieldInfoInit@@I@Z ENDP	; CFieldPrinter::Init
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
_TEXT	ENDS
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	?Clear@?$CObjectVector@UCFieldInfo@@@@QAEXXZ	; CObjectVector<CFieldInfo>::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@CFieldPrinter@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CFieldPrinter@@QAEXXZ PROC			; CFieldPrinter::Clear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 372
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CObjectVector@UCFieldInfo@@@@QAEXXZ ; CObjectVector<CFieldInfo>::Clear
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	?Empty@AString@@QAEXXZ			; AString::Empty
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@CFieldPrinter@@QAEXXZ ENDP			; CFieldPrinter::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
_TEXT	ENDS
PUBLIC	??1CFieldInfo@@QAE@XZ				; CFieldInfo::~CFieldInfo
PUBLIC	?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z ; CObjectVector<CFieldInfo>::Add
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?Len@UString@@QBEIXZ				; UString::Len
PUBLIC	?IsEmpty@AString@@QBE_NXZ			; AString::IsEmpty
PUBLIC	??0CFieldInfo@@QAE@XZ				; CFieldInfo::CFieldInfo
PUBLIC	?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z		; CFieldPrinter::AddProp
EXTRN	??4AString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator=
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
EXTRN	?AddAscii@UString@@QAEXPBD@Z:PROC		; UString::AddAscii
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z$1
__ehfuncinfo$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_c$72967 = -104						; size = 2
_i$72963 = -100						; size = 4
_sA$72962 = -92						; size = 12
_s$72961 = -76						; size = 4
_f$ = -68						; size = 48
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_propID$ = 12						; size = 4
_isRawProp$ = 16					; size = 1
?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z PROC		; CFieldPrinter::AddProp
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 426
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 427
	lea	ecx, DWORD PTR _f$[ebp]
	call	??0CFieldInfo@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 428
	mov	eax, DWORD PTR _propID$[ebp]
	mov	DWORD PTR _f$[ebp], eax
; Line 429
	mov	cl, BYTE PTR _isRawProp$[ebp]
	mov	BYTE PTR _f$[ebp+4], cl
; Line 430
	lea	edx, DWORD PTR _f$[ebp+8]
	push	edx
	lea	eax, DWORD PTR _f$[ebp+20]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _propID$[ebp]
	push	edx
	call	?GetPropName@@YGXKPB_WAAVAString@@AAVUString@@@Z ; GetPropName
; Line 431
	push	OFFSET $SG72957
	lea	ecx, DWORD PTR _f$[ebp+8]
	call	?AddAscii@UString@@QAEXPBD@Z		; UString::AddAscii
; Line 432
	lea	ecx, DWORD PTR _f$[ebp+20]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@AddProp
; Line 433
	push	OFFSET $SG72959
	lea	ecx, DWORD PTR _f$[ebp+20]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 434
	jmp	$LN6@AddProp
$LN7@AddProp:
; Line 436
	lea	ecx, DWORD PTR _f$[ebp+8]
	mov	DWORD PTR _s$72961[ebp], ecx
; Line 437
	lea	ecx, DWORD PTR _sA$72962[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 439
	mov	DWORD PTR _i$72963[ebp], 0
	jmp	SHORT $LN5@AddProp
$LN4@AddProp:
	mov	edx, DWORD PTR _i$72963[ebp]
	add	edx, 1
	mov	DWORD PTR _i$72963[ebp], edx
$LN5@AddProp:
	mov	ecx, DWORD PTR _s$72961[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _i$72963[ebp], eax
	jae	SHORT $LN3@AddProp
; Line 441
	mov	ecx, DWORD PTR _s$72961[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$72963[ebp]
	mov	dx, WORD PTR [eax+ecx*2]
	mov	WORD PTR _c$72967[ebp], dx
; Line 442
	movzx	eax, WORD PTR _c$72967[ebp]
	cmp	eax, 128				; 00000080H
	jl	SHORT $LN2@AddProp
; Line 443
	jmp	SHORT $LN3@AddProp
$LN2@AddProp:
; Line 444
	movzx	ecx, BYTE PTR _c$72967[ebp]
	push	ecx
	lea	ecx, DWORD PTR _sA$72962[ebp]
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
; Line 445
	jmp	SHORT $LN4@AddProp
$LN3@AddProp:
; Line 446
	mov	ecx, DWORD PTR _s$72961[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _i$72963[ebp], eax
	jne	SHORT $LN1@AddProp
; Line 447
	lea	edx, DWORD PTR _sA$72962[ebp]
	push	edx
	lea	ecx, DWORD PTR _f$[ebp+20]
	call	??4AString@@QAEAAV0@ABV0@@Z		; AString::operator=
$LN1@AddProp:
; Line 448
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _sA$72962[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN6@AddProp:
; Line 449
	lea	eax, DWORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z ; CObjectVector<CFieldInfo>::Add
; Line 450
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _f$[ebp]
	call	??1CFieldInfo@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@AddProp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN16@AddProp:
	DD	2
	DD	$LN15@AddProp
$LN15@AddProp:
	DD	-68					; ffffffbcH
	DD	48					; 00000030H
	DD	$LN12@AddProp
	DD	-92					; ffffffa4H
	DD	12					; 0000000cH
	DD	$LN13@AddProp
$LN13@AddProp:
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	0
$LN12@AddProp:
	DB	102					; 00000066H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z$0:
	lea	ecx, DWORD PTR _f$[ebp]
	jmp	??1CFieldInfo@@QAE@XZ
__unwindfunclet$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z$1:
	lea	ecx, DWORD PTR _sA$72962[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z ENDP		; CFieldPrinter::AddProp
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T74486 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74486[ebp], ecx
	mov	edx, DWORD PTR $T74486[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@AString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@AString@@QBE_NXZ PROC				; AString::IsEmpty, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@AString@@QBE_NXZ ENDP				; AString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@UString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@UString@@QBEIXZ PROC				; UString::Len, COMDAT
; _this$ = ecx
; Line 472
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@UString@@QBEIXZ ENDP				; UString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?ConvertUInt32ToString@@YGXIPAD@Z:PROC		; ConvertUInt32ToString
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$72949 = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_propID$ = 8						; size = 4
_name$ = 12						; size = 4
_nameA$ = 16						; size = 4
_nameU$ = 20						; size = 4
?GetPropName@@YGXKPB_WAAVAString@@AAVUString@@@Z PROC	; GetPropName
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 410
	cmp	DWORD PTR _propID$[ebp], 95		; 0000005fH
	jae	SHORT $LN3@GetPropNam
; Line 412
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR _kPropIdToName[eax*4]
	push	ecx
	mov	ecx, DWORD PTR _nameA$[ebp]
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
; Line 413
	jmp	SHORT $LN4@GetPropNam
$LN3@GetPropNam:
; Line 415
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN2@GetPropNam
; Line 416
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _nameU$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 417
	jmp	SHORT $LN4@GetPropNam
$LN2@GetPropNam:
; Line 420
	lea	eax, DWORD PTR _s$72949[ebp]
	push	eax
	mov	ecx, DWORD PTR _propID$[ebp]
	push	ecx
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 421
	lea	edx, DWORD PTR _s$72949[ebp]
	push	edx
	mov	ecx, DWORD PTR _nameA$[ebp]
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
$LN4@GetPropNam:
; Line 423
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetPropNam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN8@GetPropNam:
	DD	1
	DD	$LN7@GetPropNam
$LN7@GetPropNam:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN6@GetPropNam
$LN6@GetPropNam:
	DB	115					; 00000073H
	DB	0
?GetPropName@@YGXKPB_WAAVAString@@AAVUString@@@Z ENDP	; GetPropName
_TEXT	ENDS
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFieldInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFieldInfo@@QAE@XZ$0
__ehfuncinfo$??0CFieldInfo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CFieldInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CFieldInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFieldInfo@@QAE@XZ PROC				; CFieldInfo::CFieldInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CFieldInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFieldInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CFieldInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CFieldInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CFieldInfo@@QAE@XZ ENDP				; CFieldInfo::CFieldInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T74510 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T74510[ebp], ecx
	mov	edx, DWORD PTR $T74510[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CFieldInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFieldInfo@@QAE@XZ$0
__ehfuncinfo$??1CFieldInfo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CFieldInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CFieldInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CFieldInfo@@QAE@XZ PROC				; CFieldInfo::~CFieldInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFieldInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFieldInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CFieldInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CFieldInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CFieldInfo@@QAE@XZ ENDP				; CFieldInfo::~CFieldInfo
PUBLIC	??BCMyComBSTR@@QBEPB_WXZ			; CMyComBSTR::operator wchar_t const *
PUBLIC	??1CMyComBSTR@@QAE@XZ				; CMyComBSTR::~CMyComBSTR
PUBLIC	??ICMyComBSTR@@QAEPAPA_WXZ			; CMyComBSTR::operator&
PUBLIC	??0CMyComBSTR@@QAE@XZ				; CMyComBSTR::CMyComBSTR
PUBLIC	?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z ; CFieldPrinter::AddMainProps
xdata$x	SEGMENT
__unwindtable$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z$0
__ehfuncinfo$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74523 = -80						; size = 4
___result__$72989 = -76					; size = 4
_vt$72988 = -68						; size = 2
_propID$72987 = -56					; size = 4
_name$72986 = -44					; size = 4
_i$72982 = -36						; size = 4
___result__$72980 = -32					; size = 4
_numProps$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_archive$ = 8						; size = 4
?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z PROC	; CFieldPrinter::AddMainProps
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 453
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 455
	mov	esi, esp
	lea	eax, DWORD PTR _numProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _archive$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _archive$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$72980[ebp], eax
	cmp	DWORD PTR ___result__$72980[ebp], 0
	je	SHORT $LN5@AddMainPro
	mov	eax, DWORD PTR ___result__$72980[ebp]
	jmp	$LN6@AddMainPro
$LN5@AddMainPro:
; Line 456
	mov	DWORD PTR _i$72982[ebp], 0
	jmp	SHORT $LN4@AddMainPro
$LN3@AddMainPro:
	mov	edx, DWORD PTR _i$72982[ebp]
	add	edx, 1
	mov	DWORD PTR _i$72982[ebp], edx
$LN4@AddMainPro:
	mov	eax, DWORD PTR _i$72982[ebp]
	cmp	eax, DWORD PTR _numProps$[ebp]
	jae	$LN2@AddMainPro
; Line 458
	lea	ecx, DWORD PTR _name$72986[ebp]
	call	??0CMyComBSTR@@QAE@XZ			; CMyComBSTR::CMyComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 461
	mov	esi, esp
	lea	ecx, DWORD PTR _vt$72988[ebp]
	push	ecx
	lea	edx, DWORD PTR _propID$72987[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$72986[ebp]
	call	??ICMyComBSTR@@QAEPAPA_WXZ		; CMyComBSTR::operator&
	push	eax
	mov	eax, DWORD PTR _i$72982[ebp]
	push	eax
	mov	ecx, DWORD PTR _archive$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _archive$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$72989[ebp], eax
	cmp	DWORD PTR ___result__$72989[ebp], 0
	je	SHORT $LN1@AddMainPro
	mov	edx, DWORD PTR ___result__$72989[ebp]
	mov	DWORD PTR $T74523[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$72986[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	mov	eax, DWORD PTR $T74523[ebp]
	jmp	SHORT $LN6@AddMainPro
$LN1@AddMainPro:
; Line 462
	push	0
	mov	eax, DWORD PTR _propID$72987[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$72986[ebp]
	call	??BCMyComBSTR@@QBEPB_WXZ		; CMyComBSTR::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z	; CFieldPrinter::AddProp
; Line 463
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$72986[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	jmp	$LN3@AddMainPro
$LN2@AddMainPro:
; Line 464
	xor	eax, eax
$LN6@AddMainPro:
; Line 465
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@AddMainPro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN15@AddMainPro:
	DD	4
	DD	$LN14@AddMainPro
$LN14@AddMainPro:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@AddMainPro
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@AddMainPro
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN11@AddMainPro
	DD	-68					; ffffffbcH
	DD	2
	DD	$LN12@AddMainPro
$LN12@AddMainPro:
	DB	118					; 00000076H
	DB	116					; 00000074H
	DB	0
$LN11@AddMainPro:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN10@AddMainPro:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN9@AddMainPro:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z$0:
	lea	ecx, DWORD PTR _name$72986[ebp]
	jmp	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
__ehhandler$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z ENDP	; CFieldPrinter::AddMainProps
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyComBSTR@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyComBSTR@@QAE@XZ PROC				; CMyComBSTR::CMyComBSTR, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyComBSTR@@QAE@XZ ENDP				; CMyComBSTR::CMyComBSTR
_TEXT	ENDS
EXTRN	__imp__SysFreeString@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CMyComBSTR@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CMyComBSTR@@QAE@XZ PROC				; CMyComBSTR::~CMyComBSTR, COMDAT
; _this$ = ecx
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SysFreeString@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CMyComBSTR@@QAE@XZ ENDP				; CMyComBSTR::~CMyComBSTR
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??ICMyComBSTR@@QAEPAPA_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??ICMyComBSTR@@QAEPAPA_WXZ PROC				; CMyComBSTR::operator&, COMDAT
; _this$ = ecx
; Line 89
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??ICMyComBSTR@@QAEPAPA_WXZ ENDP				; CMyComBSTR::operator&
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BCMyComBSTR@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCMyComBSTR@@QBEPB_WXZ PROC				; CMyComBSTR::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 90
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BCMyComBSTR@@QBEPB_WXZ ENDP				; CMyComBSTR::operator wchar_t const *
_TEXT	ENDS
PUBLIC	?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z ; CFieldPrinter::AddRawProps
xdata$x	SEGMENT
__unwindtable$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z$0
__ehfuncinfo$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74544 = -68						; size = 4
___result__$73006 = -64					; size = 4
_propID$73005 = -56					; size = 4
_name$73004 = -44					; size = 4
_i$73000 = -36						; size = 4
___result__$72998 = -32					; size = 4
_numProps$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_getRawProps$ = 8					; size = 4
?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z PROC ; CFieldPrinter::AddRawProps
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 468
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 14					; 0000000eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 470
	mov	esi, esp
	lea	eax, DWORD PTR _numProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _getRawProps$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _getRawProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$72998[ebp], eax
	cmp	DWORD PTR ___result__$72998[ebp], 0
	je	SHORT $LN5@AddRawProp
	mov	eax, DWORD PTR ___result__$72998[ebp]
	jmp	$LN6@AddRawProp
$LN5@AddRawProp:
; Line 471
	mov	DWORD PTR _i$73000[ebp], 0
	jmp	SHORT $LN4@AddRawProp
$LN3@AddRawProp:
	mov	edx, DWORD PTR _i$73000[ebp]
	add	edx, 1
	mov	DWORD PTR _i$73000[ebp], edx
$LN4@AddRawProp:
	mov	eax, DWORD PTR _i$73000[ebp]
	cmp	eax, DWORD PTR _numProps$[ebp]
	jae	$LN2@AddRawProp
; Line 473
	lea	ecx, DWORD PTR _name$73004[ebp]
	call	??0CMyComBSTR@@QAE@XZ			; CMyComBSTR::CMyComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 475
	mov	esi, esp
	lea	ecx, DWORD PTR _propID$73005[ebp]
	push	ecx
	lea	ecx, DWORD PTR _name$73004[ebp]
	call	??ICMyComBSTR@@QAEPAPA_WXZ		; CMyComBSTR::operator&
	push	eax
	mov	edx, DWORD PTR _i$73000[ebp]
	push	edx
	mov	eax, DWORD PTR _getRawProps$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _getRawProps$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73006[ebp], eax
	cmp	DWORD PTR ___result__$73006[ebp], 0
	je	SHORT $LN1@AddRawProp
	mov	ecx, DWORD PTR ___result__$73006[ebp]
	mov	DWORD PTR $T74544[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73004[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	mov	eax, DWORD PTR $T74544[ebp]
	jmp	SHORT $LN6@AddRawProp
$LN1@AddRawProp:
; Line 476
	push	1
	mov	edx, DWORD PTR _propID$73005[ebp]
	push	edx
	lea	ecx, DWORD PTR _name$73004[ebp]
	call	??BCMyComBSTR@@QBEPB_WXZ		; CMyComBSTR::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddProp@CFieldPrinter@@AAEXPB_WK_N@Z	; CFieldPrinter::AddProp
; Line 477
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73004[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	jmp	$LN3@AddRawProp
$LN2@AddRawProp:
; Line 478
	xor	eax, eax
$LN6@AddRawProp:
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@AddRawProp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN14@AddRawProp:
	DD	3
	DD	$LN13@AddRawProp
$LN13@AddRawProp:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@AddRawProp
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@AddRawProp
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN11@AddRawProp
$LN11@AddRawProp:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN10@AddRawProp:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN9@AddRawProp:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z$0:
	lea	ecx, DWORD PTR _name$73004[ebp]
	jmp	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
__ehhandler$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z ENDP ; CFieldPrinter::AddRawProps
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z ; CObjectVector<CFieldInfo>::operator[]
PUBLIC	?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ	; CObjectVector<CFieldInfo>::Size
PUBLIC	?PrintTitle@CFieldPrinter@@QAEXXZ		; CFieldPrinter::PrintTitle
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -16						; size = 4
_f$73017 = -12						; size = 4
_i$73013 = -8						; size = 4
_this$ = -4						; size = 4
?PrintTitle@CFieldPrinter@@QAEXXZ PROC			; CFieldPrinter::PrintTitle
; _this$ = ecx
; Line 482
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 483
	mov	DWORD PTR _i$73013[ebp], 0
	jmp	SHORT $LN3@PrintTitle
$LN2@PrintTitle:
	mov	eax, DWORD PTR _i$73013[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73013[ebp], eax
$LN3@PrintTitle:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ ; CObjectVector<CFieldInfo>::Size
	cmp	DWORD PTR _i$73013[ebp], eax
	jae	SHORT $LN4@PrintTitle
; Line 485
	mov	ecx, DWORD PTR _i$73013[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z ; CObjectVector<CFieldInfo>::operator[]
	mov	DWORD PTR _f$73017[ebp], eax
; Line 486
	mov	edx, DWORD PTR _f$73017[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	?PrintSpaces@@YGXI@Z			; PrintSpaces
; Line 487
	mov	ecx, DWORD PTR _f$73017[ebp]
	cmp	DWORD PTR [ecx], 3
	jne	SHORT $LN6@PrintTitle
	mov	DWORD PTR tv79[ebp], 0
	jmp	SHORT $LN7@PrintTitle
$LN6@PrintTitle:
	mov	edx, DWORD PTR _f$73017[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR tv79[ebp], eax
$LN7@PrintTitle:
	mov	ecx, DWORD PTR _f$73017[ebp]
	add	ecx, 20					; 00000014H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$73017[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	?PrintString@@YGXW4EAdjustment@@IPBD@Z	; PrintString
; Line 488
	jmp	SHORT $LN2@PrintTitle
$LN4@PrintTitle:
; Line 489
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PrintTitle@CFieldPrinter@@QAEXXZ ENDP			; CFieldPrinter::PrintTitle
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
EXTRN	?g_StdOut@@3VCStdOutStream@@A:QWORD		; g_StdOut
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_numSpaces$ = 8						; size = 4
?PrintSpaces@@YGXI@Z PROC				; PrintSpaces
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 199
	push	ebp
	mov	ebp, esp
; Line 200
	cmp	DWORD PTR _numSpaces$[ebp], 0
	jbe	SHORT $LN2@PrintSpace
	cmp	DWORD PTR _numSpaces$[ebp], 32		; 00000020H
	ja	SHORT $LN2@PrintSpace
; Line 201
	mov	eax, 32					; 00000020H
	sub	eax, DWORD PTR _numSpaces$[ebp]
	add	eax, DWORD PTR _g_Spaces
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN2@PrintSpace:
; Line 202
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?PrintSpaces@@YGXI@Z ENDP				; PrintSpaces
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -16						; size = 4
_numLeftSpaces$72703 = -12				; size = 4
_len$ = -8						; size = 4
_numSpaces$ = -4					; size = 4
_adj$ = 8						; size = 4
_width$ = 12						; size = 4
_s$ = 16						; size = 4
?PrintString@@YGXW4EAdjustment@@IPBD@Z PROC		; PrintString
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 249
	mov	DWORD PTR _numSpaces$[ebp], 0
; Line 250
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 252
	mov	ecx, DWORD PTR _width$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jbe	SHORT $LN6@PrintStrin
; Line 254
	mov	edx, DWORD PTR _width$[ebp]
	sub	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _numSpaces$[ebp], edx
; Line 255
	mov	DWORD PTR _numLeftSpaces$72703[ebp], 0
; Line 256
	mov	eax, DWORD PTR _adj$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@PrintStrin
	cmp	DWORD PTR tv68[ebp], 1
	je	SHORT $LN2@PrintStrin
	cmp	DWORD PTR tv68[ebp], 2
	je	SHORT $LN1@PrintStrin
	jmp	SHORT $LN4@PrintStrin
$LN3@PrintStrin:
; Line 258
	mov	DWORD PTR _numLeftSpaces$72703[ebp], 0
	jmp	SHORT $LN4@PrintStrin
$LN2@PrintStrin:
; Line 259
	mov	ecx, DWORD PTR _numSpaces$[ebp]
	shr	ecx, 1
	mov	DWORD PTR _numLeftSpaces$72703[ebp], ecx
	jmp	SHORT $LN4@PrintStrin
$LN1@PrintStrin:
; Line 260
	mov	edx, DWORD PTR _numSpaces$[ebp]
	mov	DWORD PTR _numLeftSpaces$72703[ebp], edx
$LN4@PrintStrin:
; Line 262
	mov	eax, DWORD PTR _numLeftSpaces$72703[ebp]
	push	eax
	call	?PrintSpaces@@YGXI@Z			; PrintSpaces
; Line 263
	mov	ecx, DWORD PTR _numSpaces$[ebp]
	sub	ecx, DWORD PTR _numLeftSpaces$72703[ebp]
	mov	DWORD PTR _numSpaces$[ebp], ecx
$LN6@PrintStrin:
; Line 266
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 267
	mov	eax, DWORD PTR _numSpaces$[ebp]
	push	eax
	call	?PrintSpaces@@YGXI@Z			; PrintSpaces
; Line 268
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PrintString@@YGXW4EAdjustment@@IPBD@Z ENDP		; PrintString
_TEXT	ENDS
PUBLIC	?PrintTitleLines@CFieldPrinter@@QAEXXZ		; CFieldPrinter::PrintTitleLines
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?PrintTitleLines@CFieldPrinter@@QAEXXZ PROC		; CFieldPrinter::PrintTitleLines
; _this$ = ecx
; Line 492
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 493
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 494
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PrintTitleLines@CFieldPrinter@@QAEXXZ ENDP		; CFieldPrinter::PrintTitleLines
_TEXT	ENDS
PUBLIC	??1CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::~CPropVariant
PUBLIC	??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator->
PUBLIC	??0CPropVariant@NCOM@NWindows@@QAE@XZ		; NWindows::NCOM::CPropVariant::CPropVariant
PUBLIC	??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator->
PUBLIC	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z	; CStdOutStream::operator<<
PUBLIC	__$ArrayPad$
PUBLIC	?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z ; CFieldPrinter::PrintItemInfo
EXTRN	?ConvertPropertyToShortString@@YGXPADABUtagPROPVARIANT@@K_N@Z:PROC ; ConvertPropertyToShortString
EXTRN	?SetFromBstr@UString@@QAEXPA_W@Z:PROC		; UString::SetFromBstr
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z:PROC ; NWindows::NCOM::CPropVariant::operator=
EXTRN	??6CStdOutStream@@QAEAAV0@I@Z:PROC		; CStdOutStream::operator<<
EXTRN	?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z:PROC ; ConvertNtReparseToString
EXTRN	?ConvertNtSecureToString@@YGXPBEIAAVAString@@@Z:PROC ; ConvertNtSecureToString
EXTRN	?endl@@YGAAVCStdOutStream@@AAV1@@Z:PROC		; endl
EXTRN	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z:PROC ; CStdOutStream::PrintUString
EXTRN	??6CStdOutStream@@QAEAAV0@PB_W@Z:PROC		; CStdOutStream::operator<<
xdata$x	SEGMENT
__unwindtable$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z$1
__ehfuncinfo$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv277 = -508						; size = 4
tv230 = -504						; size = 4
tv204 = -500						; size = 4
tv152 = -496						; size = 4
$T74567 = -492						; size = 4
_s$73128 = -484						; size = 64
_len$73119 = -416					; size = 4
___result__$73105 = -412				; size = 4
_prop$73093 = -404					; size = 16
_hexStr$73090 = -380					; size = 132
_kMaxDataSize$73086 = -244				; size = 4
_s$73080 = -236						; size = 12
_needPrint$73073 = -217					; size = 1
___result__$73070 = -216				; size = 4
_propType$73069 = -208					; size = 4
_dataSize$73068 = -196					; size = 4
_data$73067 = -184					; size = 4
_width$73065 = -176					; size = 4
_f$73057 = -172						; size = 4
_i$73053 = -168						; size = 4
_techMode$ = -161					; size = 1
_tempPos$ = -160					; size = 4
_temp$ = -152						; size = 128
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_index$ = 8						; size = 4
_st$ = 12						; size = 4
?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z PROC ; CFieldPrinter::PrintItemInfo
; _this$ = ecx
; Line 531
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 496				; 000001f0H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	DWORD PTR _tempPos$[ebp], 0
; Line 535
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+16]
	mov	BYTE PTR _techMode$[ebp], cl
; Line 544
	mov	DWORD PTR _i$73053[ebp], 0
	jmp	SHORT $LN53@PrintItemI
$LN52@PrintItemI:
	mov	edx, DWORD PTR _i$73053[ebp]
	add	edx, 1
	mov	DWORD PTR _i$73053[ebp], edx
$LN53@PrintItemI:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ ; CObjectVector<CFieldInfo>::Size
	cmp	DWORD PTR _i$73053[ebp], eax
	jae	$LN51@PrintItemI
; Line 546
	mov	eax, DWORD PTR _i$73053[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z ; CObjectVector<CFieldInfo>::operator[]
	mov	DWORD PTR _f$73057[ebp], eax
; Line 548
	movzx	ecx, BYTE PTR _techMode$[ebp]
	test	ecx, ecx
	jne	SHORT $LN50@PrintItemI
; Line 550
	mov	edx, DWORD PTR _f$73057[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _tempPos$[ebp]
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	call	?PrintSpacesToString@@YGXPADI@Z		; PrintSpacesToString
; Line 551
	mov	eax, DWORD PTR _f$73057[ebp]
	mov	ecx, DWORD PTR _tempPos$[ebp]
	add	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _tempPos$[ebp], ecx
$LN50@PrintItemI:
; Line 554
	movzx	edx, BYTE PTR _techMode$[ebp]
	test	edx, edx
	je	SHORT $LN49@PrintItemI
; Line 556
	mov	ecx, DWORD PTR _f$73057[ebp]
	add	ecx, 20					; 00000014H
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN48@PrintItemI
; Line 557
	mov	ecx, DWORD PTR _f$73057[ebp]
	add	ecx, 20					; 00000014H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 558
	jmp	SHORT $LN49@PrintItemI
$LN48@PrintItemI:
; Line 559
	mov	ecx, DWORD PTR _f$73057[ebp]
	add	ecx, 8
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
$LN49@PrintItemI:
; Line 562
	mov	ecx, DWORD PTR _f$73057[ebp]
	cmp	DWORD PTR [ecx], 3
	jne	SHORT $LN46@PrintItemI
; Line 564
	movzx	edx, BYTE PTR _techMode$[ebp]
	test	edx, edx
	jne	SHORT $LN45@PrintItemI
; Line 565
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN45@PrintItemI:
; Line 566
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Line 567
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	je	SHORT $LN44@PrintItemI
; Line 568
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN44@PrintItemI:
; Line 569
	jmp	$LN52@PrintItemI
$LN46@PrintItemI:
; Line 572
	mov	ecx, DWORD PTR _f$73057[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR _width$73065[ebp], edx
; Line 574
	mov	eax, DWORD PTR _f$73057[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	$LN43@PrintItemI
; Line 581
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	add	ecx, 8
	call	??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator->
	mov	DWORD PTR tv152[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _propType$73069[ebp]
	push	eax
	lea	ecx, DWORD PTR _dataSize$73068[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$73067[ebp]
	push	edx
	mov	eax, DWORD PTR _f$73057[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _index$[ebp]
	push	edx
	mov	eax, DWORD PTR tv152[ebp]
	push	eax
	mov	ecx, DWORD PTR tv152[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73070[ebp], eax
	cmp	DWORD PTR ___result__$73070[ebp], 0
	je	SHORT $LN42@PrintItemI
	mov	eax, DWORD PTR ___result__$73070[ebp]
	jmp	$LN54@PrintItemI
$LN42@PrintItemI:
; Line 583
	cmp	DWORD PTR _dataSize$73068[ebp], 0
	je	$LN41@PrintItemI
; Line 585
	mov	BYTE PTR _needPrint$73073[ebp], 1
; Line 587
	mov	ecx, DWORD PTR _f$73057[ebp]
	cmp	DWORD PTR [ecx], 62			; 0000003eH
	jne	SHORT $LN40@PrintItemI
; Line 589
	cmp	DWORD PTR _propType$73069[ebp], 1
	je	SHORT $LN39@PrintItemI
; Line 590
	mov	eax, -2147467259			; 80004005H
	jmp	$LN54@PrintItemI
$LN39@PrintItemI:
; Line 592
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _dataSize$73068[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$73067[ebp]
	push	ecx
	call	?ConvertNtSecureToString@@YGXPBEIAAVAString@@@Z ; ConvertNtSecureToString
; Line 593
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 594
	mov	BYTE PTR _needPrint$73073[ebp], 0
	jmp	SHORT $LN38@PrintItemI
$LN40@PrintItemI:
; Line 597
	mov	edx, DWORD PTR _f$73057[ebp]
	cmp	DWORD PTR [edx], 89			; 00000059H
	jne	SHORT $LN38@PrintItemI
; Line 599
	lea	ecx, DWORD PTR _s$73080[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 600
	lea	eax, DWORD PTR _s$73080[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataSize$73068[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$73067[ebp]
	push	edx
	call	?ConvertNtReparseToString@@YG_NPBEIAAVUString@@@Z ; ConvertNtReparseToString
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN36@PrintItemI
; Line 602
	mov	BYTE PTR _needPrint$73073[ebp], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR _s$73080[ebp]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
$LN36@PrintItemI:
; Line 605
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$73080[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN38@PrintItemI:
; Line 607
	movzx	eax, BYTE PTR _needPrint$73073[ebp]
	test	eax, eax
	je	SHORT $LN41@PrintItemI
; Line 609
	cmp	DWORD PTR _propType$73069[ebp], 1
	je	SHORT $LN34@PrintItemI
; Line 610
	mov	eax, -2147467259			; 80004005H
	jmp	$LN54@PrintItemI
$LN34@PrintItemI:
; Line 612
	mov	DWORD PTR _kMaxDataSize$73086[ebp], 64	; 00000040H
; Line 614
	cmp	DWORD PTR _dataSize$73068[ebp], 64	; 00000040H
	jbe	SHORT $LN33@PrintItemI
; Line 616
	push	OFFSET $SG73088
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 617
	mov	ecx, DWORD PTR _dataSize$73068[ebp]
	push	ecx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@I@Z		; CStdOutStream::operator<<
; Line 619
	jmp	SHORT $LN41@PrintItemI
$LN33@PrintItemI:
; Line 622
	mov	edx, DWORD PTR _dataSize$73068[ebp]
	push	edx
	mov	eax, DWORD PTR _data$73067[ebp]
	push	eax
	lea	ecx, DWORD PTR _hexStr$73090[ebp]
	push	ecx
	call	?HexToString@@YGXPADPBEI@Z		; HexToString
; Line 623
	lea	edx, DWORD PTR _hexStr$73090[ebp]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN41@PrintItemI:
; Line 630
	jmp	$LN31@PrintItemI
$LN43@PrintItemI:
; Line 632
	lea	ecx, DWORD PTR _prop$73093[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 633
	mov	eax, DWORD PTR _f$73057[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv204[ebp], ecx
	cmp	DWORD PTR tv204[ebp], 7
	je	SHORT $LN28@PrintItemI
	cmp	DWORD PTR tv204[ebp], 8
	je	SHORT $LN26@PrintItemI
	cmp	DWORD PTR tv204[ebp], 12		; 0000000cH
	je	SHORT $LN24@PrintItemI
	jmp	SHORT $LN22@PrintItemI
$LN28@PrintItemI:
; Line 635
	mov	edx, DWORD PTR _st$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	test	eax, eax
	je	SHORT $LN27@PrintItemI
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR [ecx]
	push	eax
	lea	ecx, DWORD PTR _prop$73093[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN27@PrintItemI:
	jmp	$LN29@PrintItemI
$LN26@PrintItemI:
; Line 636
	mov	ecx, DWORD PTR _st$[ebp]
	movzx	edx, BYTE PTR [ecx+24]
	test	edx, edx
	je	SHORT $LN25@PrintItemI
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	lea	ecx, DWORD PTR _prop$73093[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@_K@Z ; NWindows::NCOM::CPropVariant::operator=
$LN25@PrintItemI:
	jmp	$LN29@PrintItemI
$LN24@PrintItemI:
; Line 637
	mov	eax, DWORD PTR _st$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	test	ecx, ecx
	je	SHORT $LN23@PrintItemI
	mov	edx, DWORD PTR _st$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	lea	ecx, DWORD PTR _prop$73093[ebp]
	call	??4CPropVariant@NCOM@NWindows@@QAEAAV012@ABU_FILETIME@@@Z ; NWindows::NCOM::CPropVariant::operator=
$LN23@PrintItemI:
	jmp	SHORT $LN29@PrintItemI
$LN22@PrintItemI:
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	call	??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator->
	mov	DWORD PTR tv230[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$73093[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$73057[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv230[ebp]
	push	edx
	mov	eax, DWORD PTR tv230[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73105[ebp], eax
	cmp	DWORD PTR ___result__$73105[ebp], 0
	je	SHORT $LN29@PrintItemI
	mov	eax, DWORD PTR ___result__$73105[ebp]
	mov	DWORD PTR $T74567[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$73093[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74567[ebp]
	jmp	$LN54@PrintItemI
$LN29@PrintItemI:
; Line 641
	mov	ecx, DWORD PTR _f$73057[ebp]
	cmp	DWORD PTR [ecx], 9
	jne	$LN20@PrintItemI
	movzx	edx, WORD PTR _prop$73093[ebp]
	test	edx, edx
	je	SHORT $LN19@PrintItemI
	movzx	eax, WORD PTR _prop$73093[ebp]
	cmp	eax, 19					; 00000013H
	jne	$LN20@PrintItemI
$LN19@PrintItemI:
; Line 643
	movzx	ecx, WORD PTR _prop$73093[ebp]
	test	ecx, ecx
	jne	SHORT $LN56@PrintItemI
	mov	DWORD PTR tv277[ebp], 0
	jmp	SHORT $LN57@PrintItemI
$LN56@PrintItemI:
	mov	edx, DWORD PTR _prop$73093[ebp+8]
	mov	DWORD PTR tv277[ebp], edx
$LN57@PrintItemI:
	mov	eax, DWORD PTR _tempPos$[ebp]
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	movzx	edx, BYTE PTR _techMode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR tv277[ebp]
	push	edx
	call	?GetAttribString@@YGXI_N0PAD@Z		; GetAttribString
; Line 644
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	je	SHORT $LN18@PrintItemI
; Line 645
	mov	ecx, DWORD PTR _tempPos$[ebp]
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 646
	jmp	SHORT $LN17@PrintItemI
$LN18@PrintItemI:
; Line 647
	mov	eax, DWORD PTR _tempPos$[ebp]
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _tempPos$[ebp]
	mov	DWORD PTR _tempPos$[ebp], eax
$LN17@PrintItemI:
	jmp	$LN16@PrintItemI
$LN20@PrintItemI:
; Line 649
	movzx	edx, WORD PTR _prop$73093[ebp]
	test	edx, edx
	jne	SHORT $LN15@PrintItemI
; Line 651
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	jne	SHORT $LN14@PrintItemI
; Line 653
	mov	ecx, DWORD PTR _width$73065[ebp]
	push	ecx
	mov	edx, DWORD PTR _tempPos$[ebp]
	lea	eax, DWORD PTR _temp$[ebp+edx]
	push	eax
	call	?PrintSpacesToString@@YGXPADI@Z		; PrintSpacesToString
; Line 654
	mov	ecx, DWORD PTR _tempPos$[ebp]
	add	ecx, DWORD PTR _width$73065[ebp]
	mov	DWORD PTR _tempPos$[ebp], ecx
$LN14@PrintItemI:
; Line 656
	jmp	$LN16@PrintItemI
$LN15@PrintItemI:
; Line 657
	movzx	edx, WORD PTR _prop$73093[ebp]
	cmp	edx, 64					; 00000040H
	jne	$LN12@PrintItemI
; Line 659
	lea	eax, DWORD PTR _prop$73093[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _tempPos$[ebp]
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	call	?PrintTime@@YGXPADPBU_FILETIME@@@Z	; PrintTime
; Line 660
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	je	SHORT $LN11@PrintItemI
; Line 661
	mov	ecx, DWORD PTR _tempPos$[ebp]
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 662
	jmp	$LN10@PrintItemI
$LN11@PrintItemI:
; Line 664
	mov	eax, DWORD PTR _tempPos$[ebp]
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$73119[ebp], eax
; Line 665
	mov	edx, DWORD PTR _tempPos$[ebp]
	add	edx, DWORD PTR _len$73119[ebp]
	mov	DWORD PTR _tempPos$[ebp], edx
; Line 666
	mov	eax, DWORD PTR _f$73057[ebp]
	mov	ecx, DWORD PTR _len$73119[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	SHORT $LN10@PrintItemI
; Line 668
	mov	edx, DWORD PTR _f$73057[ebp]
	mov	eax, DWORD PTR [edx+44]
	sub	eax, DWORD PTR _len$73119[ebp]
	mov	DWORD PTR _len$73119[ebp], eax
; Line 669
	mov	ecx, DWORD PTR _len$73119[ebp]
	push	ecx
	mov	edx, DWORD PTR _tempPos$[ebp]
	lea	eax, DWORD PTR _temp$[ebp+edx]
	push	eax
	call	?PrintSpacesToString@@YGXPADI@Z		; PrintSpacesToString
; Line 670
	mov	ecx, DWORD PTR _tempPos$[ebp]
	add	ecx, DWORD PTR _len$73119[ebp]
	mov	DWORD PTR _tempPos$[ebp], ecx
$LN10@PrintItemI:
; Line 672
	jmp	$LN16@PrintItemI
$LN12@PrintItemI:
; Line 674
	movzx	edx, WORD PTR _prop$73093[ebp]
	cmp	edx, 8
	jne	SHORT $LN7@PrintItemI
; Line 676
	mov	eax, DWORD PTR _prop$73093[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?SetFromBstr@UString@@QAEXPA_W@Z	; UString::SetFromBstr
; Line 677
	movzx	ecx, BYTE PTR _techMode$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@PrintItemI
; Line 680
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Line 682
	jmp	SHORT $LN5@PrintItemI
$LN6@PrintItemI:
; Line 683
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	push	edx
	mov	eax, DWORD PTR _width$73065[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$73057[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	call	?PrintUString@@YGXW4EAdjustment@@IABVUString@@AAVAString@@@Z ; PrintUString
$LN5@PrintItemI:
; Line 685
	jmp	$LN16@PrintItemI
$LN7@PrintItemI:
; Line 688
	push	1
	mov	eax, DWORD PTR _f$73057[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _prop$73093[ebp]
	push	edx
	lea	eax, DWORD PTR _s$73128[ebp]
	push	eax
	call	?ConvertPropertyToShortString@@YGXPADABUtagPROPVARIANT@@K_N@Z ; ConvertPropertyToShortString
; Line 689
	movzx	ecx, BYTE PTR _techMode$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@PrintItemI
; Line 690
	lea	edx, DWORD PTR _s$73128[ebp]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 691
	jmp	SHORT $LN16@PrintItemI
$LN3@PrintItemI:
; Line 693
	lea	eax, DWORD PTR _s$73128[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$73065[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$73057[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _tempPos$[ebp]
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	call	?PrintStringToString@@YGXPADW4EAdjustment@@IPBD@Z ; PrintStringToString
; Line 694
	mov	eax, DWORD PTR _tempPos$[ebp]
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _tempPos$[ebp]
	mov	DWORD PTR _tempPos$[ebp], eax
$LN16@PrintItemI:
; Line 697
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$73093[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
$LN31@PrintItemI:
; Line 698
	movzx	edx, BYTE PTR _techMode$[ebp]
	test	edx, edx
	je	SHORT $LN1@PrintItemI
; Line 699
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN1@PrintItemI:
; Line 700
	jmp	$LN52@PrintItemI
$LN51@PrintItemI:
; Line 701
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 702
	xor	eax, eax
$LN54@PrintItemI:
; Line 703
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN70@PrintItemI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN70@PrintItemI:
	DD	8
	DD	$LN69@PrintItemI
$LN69@PrintItemI:
	DD	-152					; ffffff68H
	DD	128					; 00000080H
	DD	$LN60@PrintItemI
	DD	-184					; ffffff48H
	DD	4
	DD	$LN61@PrintItemI
	DD	-196					; ffffff3cH
	DD	4
	DD	$LN62@PrintItemI
	DD	-208					; ffffff30H
	DD	4
	DD	$LN63@PrintItemI
	DD	-236					; ffffff14H
	DD	12					; 0000000cH
	DD	$LN64@PrintItemI
	DD	-380					; fffffe84H
	DD	132					; 00000084H
	DD	$LN65@PrintItemI
	DD	-404					; fffffe6cH
	DD	16					; 00000010H
	DD	$LN66@PrintItemI
	DD	-484					; fffffe1cH
	DD	64					; 00000040H
	DD	$LN67@PrintItemI
$LN67@PrintItemI:
	DB	115					; 00000073H
	DB	0
$LN66@PrintItemI:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN65@PrintItemI:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN64@PrintItemI:
	DB	115					; 00000073H
	DB	0
$LN63@PrintItemI:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN62@PrintItemI:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN61@PrintItemI:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN60@PrintItemI:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z$0:
	lea	ecx, DWORD PTR _s$73080[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z$1:
	lea	ecx, DWORD PTR _prop$73093[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-508]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z ENDP ; CFieldPrinter::PrintItemInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z PROC	; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ENDP	; CStdOutStream::operator<<
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::CPropVariant, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\propvariant.h
; Line 47
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx], ax
; Line 50
	xor	edx, edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	WORD PTR [eax+2], dx
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::CPropVariant
_TEXT	ENDS
EXTRN	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ:PROC	; NWindows::NCOM::CPropVariant::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPropVariant@NCOM@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPropVariant@NCOM@NWindows@@QAE@XZ PROC		; NWindows::NCOM::CPropVariant::~CPropVariant, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@CPropVariant@NCOM@NWindows@@QAEJXZ ; NWindows::NCOM::CPropVariant::Clear
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPropVariant@NCOM@NWindows@@QAE@XZ ENDP		; NWindows::NCOM::CPropVariant::~CPropVariant
_TEXT	ENDS
EXTRN	?ConvertWinAttribToString@@YGXPADI@Z:PROC	; ConvertWinAttribToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_wa$ = 8						; size = 4
_isDir$ = 12						; size = 1
_allAttribs$ = 16					; size = 1
_s$ = 20						; size = 4
?GetAttribString@@YGXI_N0PAD@Z PROC			; GetAttribString
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	movzx	eax, BYTE PTR _isDir$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetAttribS
; Line 142
	mov	ecx, DWORD PTR _wa$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR _wa$[ebp], ecx
$LN2@GetAttribS:
; Line 143
	movzx	edx, BYTE PTR _allAttribs$[ebp]
	test	edx, edx
	je	SHORT $LN1@GetAttribS
; Line 145
	mov	eax, DWORD PTR _wa$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?ConvertWinAttribToString@@YGXPADI@Z	; ConvertWinAttribToString
; Line 146
	jmp	SHORT $LN3@GetAttribS
$LN1@GetAttribS:
; Line 148
	mov	edx, DWORD PTR _wa$[ebp]
	and	edx, 16					; 00000010H
	neg	edx
	sbb	dl, dl
	and	dl, 22					; 00000016H
	add	dl, 46					; 0000002eH
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], dl
; Line 149
	mov	ecx, DWORD PTR _wa$[ebp]
	and	ecx, 1
	neg	ecx
	sbb	cl, cl
	and	cl, 36					; 00000024H
	add	cl, 46					; 0000002eH
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+1], cl
; Line 150
	mov	eax, DWORD PTR _wa$[ebp]
	and	eax, 2
	neg	eax
	sbb	al, al
	and	al, 26					; 0000001aH
	add	al, 46					; 0000002eH
	mov	ecx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [ecx+2], al
; Line 151
	mov	edx, DWORD PTR _wa$[ebp]
	and	edx, 4
	neg	edx
	sbb	dl, dl
	and	dl, 37					; 00000025H
	add	dl, 46					; 0000002eH
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+3], dl
; Line 152
	mov	ecx, DWORD PTR _wa$[ebp]
	and	ecx, 32					; 00000020H
	neg	ecx
	sbb	cl, cl
	and	cl, 19					; 00000013H
	add	cl, 46					; 0000002eH
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+4], cl
; Line 153
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax+5], 0
$LN3@GetAttribS:
; Line 154
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetAttribString@@YGXI_N0PAD@Z ENDP			; GetAttribString
; Function compile flags: /Odtp /RTCsu
_i$ = -4						; size = 4
_dest$ = 8						; size = 4
_numSpaces$ = 12					; size = 4
?PrintSpacesToString@@YGXPADI@Z PROC			; PrintSpacesToString
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 207
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@PrintSpace@2
$LN2@PrintSpace@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@PrintSpace@2:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _numSpaces$[ebp]
	jae	SHORT $LN1@PrintSpace@2
; Line 208
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], 32			; 00000020H
	jmp	SHORT $LN2@PrintSpace@2
$LN1@PrintSpace@2:
; Line 209
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 0
; Line 210
	mov	esp, ebp
	pop	ebp
	ret	8
?PrintSpacesToString@@YGXPADI@Z ENDP			; PrintSpacesToString
; Function compile flags: /Odtp /RTCsu
tv70 = -12						; size = 4
_numLeftSpaces$72686 = -8				; size = 4
_numSpaces$ = -4					; size = 4
_adj$ = 8						; size = 4
_width$ = 12						; size = 4
_s$ = 16						; size = 4
_temp$ = 20						; size = 4
?PrintUString@@YGXW4EAdjustment@@IABVUString@@AAVAString@@@Z PROC ; PrintUString
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 227
	mov	DWORD PTR _numSpaces$[ebp], 0
; Line 229
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	cmp	DWORD PTR _width$[ebp], eax
	jbe	SHORT $LN6@PrintUStri
; Line 231
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Len@UString@@QBEIXZ			; UString::Len
	mov	ecx, DWORD PTR _width$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _numSpaces$[ebp], ecx
; Line 232
	mov	DWORD PTR _numLeftSpaces$72686[ebp], 0
; Line 233
	mov	edx, DWORD PTR _adj$[ebp]
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN3@PrintUStri
	cmp	DWORD PTR tv70[ebp], 1
	je	SHORT $LN2@PrintUStri
	cmp	DWORD PTR tv70[ebp], 2
	je	SHORT $LN1@PrintUStri
	jmp	SHORT $LN4@PrintUStri
$LN3@PrintUStri:
; Line 235
	mov	DWORD PTR _numLeftSpaces$72686[ebp], 0
	jmp	SHORT $LN4@PrintUStri
$LN2@PrintUStri:
; Line 236
	mov	eax, DWORD PTR _numSpaces$[ebp]
	shr	eax, 1
	mov	DWORD PTR _numLeftSpaces$72686[ebp], eax
	jmp	SHORT $LN4@PrintUStri
$LN1@PrintUStri:
; Line 237
	mov	ecx, DWORD PTR _numSpaces$[ebp]
	mov	DWORD PTR _numLeftSpaces$72686[ebp], ecx
$LN4@PrintUStri:
; Line 239
	mov	edx, DWORD PTR _numLeftSpaces$72686[ebp]
	push	edx
	call	?PrintSpaces@@YGXI@Z			; PrintSpaces
; Line 240
	mov	eax, DWORD PTR _numSpaces$[ebp]
	sub	eax, DWORD PTR _numLeftSpaces$72686[ebp]
	mov	DWORD PTR _numSpaces$[ebp], eax
$LN6@PrintUStri:
; Line 243
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?PrintUString@CStdOutStream@@QAEXABVUString@@AAVAString@@@Z ; CStdOutStream::PrintUString
; Line 244
	mov	eax, DWORD PTR _numSpaces$[ebp]
	push	eax
	call	?PrintSpaces@@YGXI@Z			; PrintSpaces
; Line 245
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?PrintUString@@YGXW4EAdjustment@@IABVUString@@AAVAString@@@Z ENDP ; PrintUString
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv68 = -16						; size = 4
_numLeftSpaces$72721 = -12				; size = 4
_len$ = -8						; size = 4
_numSpaces$ = -4					; size = 4
_dest$ = 8						; size = 4
_adj$ = 12						; size = 4
_width$ = 16						; size = 4
_textString$ = 20					; size = 4
?PrintStringToString@@YGXPADW4EAdjustment@@IPBD@Z PROC	; PrintStringToString
; Line 271
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 272
	mov	DWORD PTR _numSpaces$[ebp], 0
; Line 273
	mov	eax, DWORD PTR _textString$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 275
	mov	ecx, DWORD PTR _width$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jbe	SHORT $LN6@PrintStrin@2
; Line 277
	mov	edx, DWORD PTR _width$[ebp]
	sub	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _numSpaces$[ebp], edx
; Line 278
	mov	DWORD PTR _numLeftSpaces$72721[ebp], 0
; Line 279
	mov	eax, DWORD PTR _adj$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@PrintStrin@2
	cmp	DWORD PTR tv68[ebp], 1
	je	SHORT $LN2@PrintStrin@2
	cmp	DWORD PTR tv68[ebp], 2
	je	SHORT $LN1@PrintStrin@2
	jmp	SHORT $LN4@PrintStrin@2
$LN3@PrintStrin@2:
; Line 281
	mov	DWORD PTR _numLeftSpaces$72721[ebp], 0
	jmp	SHORT $LN4@PrintStrin@2
$LN2@PrintStrin@2:
; Line 282
	mov	ecx, DWORD PTR _numSpaces$[ebp]
	shr	ecx, 1
	mov	DWORD PTR _numLeftSpaces$72721[ebp], ecx
	jmp	SHORT $LN4@PrintStrin@2
$LN1@PrintStrin@2:
; Line 283
	mov	edx, DWORD PTR _numSpaces$[ebp]
	mov	DWORD PTR _numLeftSpaces$72721[ebp], edx
$LN4@PrintStrin@2:
; Line 285
	mov	eax, DWORD PTR _numLeftSpaces$72721[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	?PrintSpacesToString@@YGXPADI@Z		; PrintSpacesToString
; Line 286
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, DWORD PTR _numLeftSpaces$72721[ebp]
	mov	DWORD PTR _dest$[ebp], edx
; Line 287
	mov	eax, DWORD PTR _numSpaces$[ebp]
	sub	eax, DWORD PTR _numLeftSpaces$72721[ebp]
	mov	DWORD PTR _numSpaces$[ebp], eax
$LN6@PrintStrin@2:
; Line 290
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _textString$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 291
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _dest$[ebp], ecx
; Line 292
	mov	edx, DWORD PTR _numSpaces$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	?PrintSpacesToString@@YGXPADI@Z		; PrintSpacesToString
; Line 293
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?PrintStringToString@@YGXPADW4EAdjustment@@IPBD@Z ENDP	; PrintStringToString
_TEXT	ENDS
PUBLIC	__TI1H
PUBLIC	__CTA1H
PUBLIC	__CT??_R0H@84
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
EXTRN	?ConvertFileTimeToString@@YG_NABU_FILETIME@@PAD_N2@Z:PROC ; ConvertFileTimeToString
EXTRN	__imp__FileTimeToLocalFileTime@8:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R0H@8
_DATA	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
_DATA	ENDS
;	COMDAT __CT??_R0H@84
xdata$x	SEGMENT
__CT??_R0H@84 DD 01H
	DD	FLAT:??_R0H@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1H
xdata$x	SEGMENT
__CTA1H	DD	01H
	DD	FLAT:__CT??_R0H@84
xdata$x	ENDS
;	COMDAT __TI1H
xdata$x	SEGMENT
__TI1H	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74597 = -20						; size = 4
_locTime$ = -12						; size = 8
_dest$ = 8						; size = 4
_ft$ = 12						; size = 4
?PrintTime@@YGXPADPBU_FILETIME@@@Z PROC			; PrintTime
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 498
	mov	eax, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 499
	mov	ecx, DWORD PTR _ft$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN2@PrintTime
	mov	edx, DWORD PTR _ft$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN2@PrintTime
; Line 500
	jmp	SHORT $LN4@PrintTime
$LN2@PrintTime:
; Line 502
	mov	esi, esp
	lea	eax, DWORD PTR _locTime$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ft$[ebp]
	push	ecx
	call	DWORD PTR __imp__FileTimeToLocalFileTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@PrintTime
; Line 503
	mov	DWORD PTR $T74597[ebp], 20121211	; 0133067bH
	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T74597[ebp]
	push	edx
	call	__CxxThrowException@8
$LN1@PrintTime:
; Line 504
	push	1
	push	1
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR _locTime$[ebp]
	push	ecx
	call	?ConvertFileTimeToString@@YG_NABU_FILETIME@@PAD_N2@Z ; ConvertFileTimeToString
$LN4@PrintTime:
; Line 505
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@PrintTime
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN7@PrintTime:
	DD	1
	DD	$LN6@PrintTime
$LN6@PrintTime:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@PrintTime
$LN5@PrintTime:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?PrintTime@@YGXPADPBU_FILETIME@@@Z ENDP			; PrintTime
; Function compile flags: /Odtp /RTCsu
_b$73042 = -5						; size = 1
_i$73038 = -4						; size = 4
_dest$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
?HexToString@@YGXPADPBEI@Z PROC				; HexToString
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 516
	mov	DWORD PTR _i$73038[ebp], 0
	jmp	SHORT $LN3@HexToStrin
$LN2@HexToStrin:
	mov	eax, DWORD PTR _i$73038[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73038[ebp], eax
$LN3@HexToStrin:
	mov	ecx, DWORD PTR _i$73038[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jae	SHORT $LN1@HexToStrin
; Line 518
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$73038[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _b$73042[ebp], al
; Line 519
	movzx	ecx, BYTE PTR _b$73042[ebp]
	sar	ecx, 4
	and	ecx, 15					; 0000000fH
	push	ecx
	call	?GetHex@@YGDE@Z				; GetHex
	mov	edx, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [edx], al
; Line 520
	movzx	eax, BYTE PTR _b$73042[ebp]
	and	eax, 15					; 0000000fH
	push	eax
	call	?GetHex@@YGDE@Z				; GetHex
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [ecx+1], al
; Line 521
	mov	edx, DWORD PTR _dest$[ebp]
	add	edx, 2
	mov	DWORD PTR _dest$[ebp], edx
; Line 522
	jmp	SHORT $LN2@HexToStrin
$LN1@HexToStrin:
; Line 523
	mov	eax, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 524
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?HexToString@@YGXPADPBEI@Z ENDP				; HexToString
; Function compile flags: /Odtp /RTCsu
tv71 = -4						; size = 4
_value$ = 8						; size = 1
?GetHex@@YGDE@Z PROC					; GetHex
; Line 510
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 511
	movzx	eax, BYTE PTR _value$[ebp]
	cmp	eax, 10					; 0000000aH
	jge	SHORT $LN3@GetHex
	movzx	ecx, BYTE PTR _value$[ebp]
	add	ecx, 48					; 00000030H
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN4@GetHex
$LN3@GetHex:
	movzx	edx, BYTE PTR _value$[ebp]
	add	edx, 55					; 00000037H
	mov	DWORD PTR tv71[ebp], edx
$LN4@GetHex:
	mov	al, BYTE PTR tv71[ebp]
; Line 512
	mov	esp, ebp
	pop	ebp
	ret	4
?GetHex@@YGDE@Z ENDP					; GetHex
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z ; CFieldPrinter::PrintSum
EXTRN	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z:PROC ; Print_UInt64_and_String
xdata$x	SEGMENT
__unwindtable$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z$0
__ehfuncinfo$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$73164 = -116						; size = 12
_s$73160 = -96						; size = 64
_f$73154 = -28						; size = 4
_i$73150 = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_st$ = 8						; size = 4
_numDirs$ = 12						; size = 8
_str$ = 20						; size = 4
?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z PROC	; CFieldPrinter::PrintSum
; _this$ = ecx
; Line 717
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-120]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 718
	mov	DWORD PTR _i$73150[ebp], 0
	jmp	SHORT $LN13@PrintSum
$LN12@PrintSum:
	mov	eax, DWORD PTR _i$73150[ebp]
	add	eax, 1
	mov	DWORD PTR _i$73150[ebp], eax
$LN13@PrintSum:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ ; CObjectVector<CFieldInfo>::Size
	cmp	DWORD PTR _i$73150[ebp], eax
	jae	$LN11@PrintSum
; Line 720
	mov	ecx, DWORD PTR _i$73150[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z ; CObjectVector<CFieldInfo>::operator[]
	mov	DWORD PTR _f$73154[ebp], eax
; Line 721
	mov	edx, DWORD PTR _f$73154[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	call	?PrintSpaces@@YGXI@Z			; PrintSpaces
; Line 722
	mov	ecx, DWORD PTR _f$73154[ebp]
	cmp	DWORD PTR [ecx], 7
	jne	SHORT $LN10@PrintSum
; Line 723
	mov	edx, DWORD PTR _st$[ebp]
	push	edx
	mov	eax, DWORD PTR _f$73154[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _f$73154[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	call	?PrintNumber@@YGXW4EAdjustment@@IABUCListUInt64Def@@@Z ; PrintNumber
	jmp	$LN9@PrintSum
$LN10@PrintSum:
; Line 724
	mov	ecx, DWORD PTR _f$73154[ebp]
	cmp	DWORD PTR [ecx], 8
	jne	SHORT $LN8@PrintSum
; Line 725
	mov	edx, DWORD PTR _st$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _f$73154[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _f$73154[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	call	?PrintNumber@@YGXW4EAdjustment@@IABUCListUInt64Def@@@Z ; PrintNumber
	jmp	$LN9@PrintSum
$LN8@PrintSum:
; Line 726
	mov	ecx, DWORD PTR _f$73154[ebp]
	cmp	DWORD PTR [ecx], 12			; 0000000cH
	jne	SHORT $LN6@PrintSum
; Line 729
	mov	BYTE PTR _s$73160[ebp], 0
; Line 730
	mov	edx, DWORD PTR _st$[ebp]
	movzx	eax, BYTE PTR [edx+40]
	test	eax, eax
	je	SHORT $LN5@PrintSum
; Line 731
	mov	ecx, DWORD PTR _st$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	lea	edx, DWORD PTR _s$73160[ebp]
	push	edx
	call	?PrintTime@@YGXPADPBU_FILETIME@@@Z	; PrintTime
$LN5@PrintSum:
; Line 732
	lea	eax, DWORD PTR _s$73160[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$73154[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	mov	eax, DWORD PTR _f$73154[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	?PrintString@@YGXW4EAdjustment@@IPBD@Z	; PrintString
	jmp	$LN9@PrintSum
$LN6@PrintSum:
; Line 734
	mov	edx, DWORD PTR _f$73154[ebp]
	cmp	DWORD PTR [edx], 3
	jne	SHORT $LN3@PrintSum
; Line 736
	lea	ecx, DWORD PTR _s$73164[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 737
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR [ecx+48]
	push	eax
	lea	ecx, DWORD PTR _s$73164[ebp]
	push	ecx
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
; Line 738
	mov	edx, DWORD PTR _numDirs$[ebp]
	or	edx, DWORD PTR _numDirs$[ebp+4]
	je	SHORT $LN2@PrintSum
; Line 740
	push	OFFSET $SG73166
	lea	ecx, DWORD PTR _s$73164[ebp]
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 741
	mov	eax, DWORD PTR _kString_Dirs
	push	eax
	mov	ecx, DWORD PTR _numDirs$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _numDirs$[ebp]
	push	edx
	lea	eax, DWORD PTR _s$73164[ebp]
	push	eax
	call	?Print_UInt64_and_String@@YGXAAVAString@@_KPBD@Z ; Print_UInt64_and_String
$LN2@PrintSum:
; Line 743
	lea	ecx, DWORD PTR _s$73164[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	push	0
	mov	ecx, DWORD PTR _f$73154[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	call	?PrintString@@YGXW4EAdjustment@@IPBD@Z	; PrintString
; Line 744
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$73164[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 745
	jmp	SHORT $LN9@PrintSum
$LN3@PrintSum:
; Line 746
	push	OFFSET $SG73168
	mov	eax, DWORD PTR _f$73154[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _f$73154[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	call	?PrintString@@YGXW4EAdjustment@@IPBD@Z	; PrintString
$LN9@PrintSum:
; Line 747
	jmp	$LN12@PrintSum
$LN11@PrintSum:
; Line 748
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 749
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@PrintSum
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 120				; 00000078H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN21@PrintSum:
	DD	2
	DD	$LN20@PrintSum
$LN20@PrintSum:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN17@PrintSum
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN18@PrintSum
$LN18@PrintSum:
	DB	115					; 00000073H
	DB	0
$LN17@PrintSum:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z$0:
	lea	ecx, DWORD PTR _s$73164[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z ENDP	; CFieldPrinter::PrintSum
PUBLIC	__$ArrayPad$
EXTRN	?ConvertUInt64ToString@@YGX_KPAD@Z:PROC		; ConvertUInt64ToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -40						; size = 32
__$ArrayPad$ = -4					; size = 4
_adj$ = 8						; size = 4
_width$ = 12						; size = 4
_value$ = 16						; size = 4
?PrintNumber@@YGXW4EAdjustment@@IABUCListUInt64Def@@@Z PROC ; PrintNumber
; Line 706
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 708
	mov	BYTE PTR _s$[ebp], 0
; Line 709
	mov	eax, DWORD PTR _value$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN1@PrintNumbe
; Line 710
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
$LN1@PrintNumbe:
; Line 711
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _adj$[ebp]
	push	edx
	call	?PrintString@@YGXW4EAdjustment@@IPBD@Z	; PrintString
; Line 712
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@PrintNumbe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN6@PrintNumbe:
	DD	1
	DD	$LN5@PrintNumbe
$LN5@PrintNumbe:
	DD	-40					; ffffffd8H
	DD	32					; 00000020H
	DD	$LN4@PrintNumbe
$LN4@PrintNumbe:
	DB	115					; 00000073H
	DB	0
?PrintNumber@@YGXW4EAdjustment@@IABUCListUInt64Def@@@Z ENDP ; PrintNumber
_TEXT	ENDS
PUBLIC	?Update@CListStat@@QAEXABU1@@Z			; CListStat::Update
PUBLIC	?PrintSum@CFieldPrinter@@QAEXABUCListStat2@@@Z	; CFieldPrinter::PrintSum
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv94 = -72						; size = 4
_st$73174 = -64						; size = 56
_this$ = -4						; size = 4
_stat2$ = 8						; size = 4
?PrintSum@CFieldPrinter@@QAEXABUCListStat2@@@Z PROC	; CFieldPrinter::PrintSum
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 753
	mov	eax, DWORD PTR _kString_Files
	push	eax
	mov	ecx, DWORD PTR _stat2$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	mov	eax, DWORD PTR [ecx+112]
	push	eax
	mov	ecx, DWORD PTR _stat2$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z ; CFieldPrinter::PrintSum
; Line 754
	mov	edx, DWORD PTR _stat2$[ebp]
	mov	DWORD PTR tv94[ebp], edx
	mov	eax, DWORD PTR tv94[ebp]
	mov	ecx, DWORD PTR tv94[ebp]
	mov	edx, DWORD PTR [eax+104]
	or	edx, DWORD PTR [ecx+108]
	je	SHORT $LN2@PrintSum@2
; Line 756
	mov	eax, DWORD PTR _kString_AltStreams
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _stat2$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z ; CFieldPrinter::PrintSum
; Line 757
	mov	esi, DWORD PTR _stat2$[ebp]
	mov	ecx, 14					; 0000000eH
	lea	edi, DWORD PTR _st$73174[ebp]
	rep movsd
; Line 758
	mov	edx, DWORD PTR _stat2$[ebp]
	add	edx, 56					; 00000038H
	push	edx
	lea	ecx, DWORD PTR _st$73174[ebp]
	call	?Update@CListStat@@QAEXABU1@@Z		; CListStat::Update
; Line 759
	mov	eax, DWORD PTR _kString_Streams
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _st$73174[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintSum@CFieldPrinter@@QAEXABUCListStat@@_KPBD@Z ; CFieldPrinter::PrintSum
$LN2@PrintSum@2:
; Line 761
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@PrintSum@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN6@PrintSum@2:
	DD	1
	DD	$LN5@PrintSum@2
$LN5@PrintSum@2:
	DD	-64					; ffffffc0H
	DD	56					; 00000038H
	DD	$LN4@PrintSum@2
$LN4@PrintSum@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?PrintSum@CFieldPrinter@@QAEXABUCListStat2@@@Z ENDP	; CFieldPrinter::PrintSum
_TEXT	ENDS
PUBLIC	?Update@CListFileTimeDef@@QAEXABU1@@Z		; CListFileTimeDef::Update
PUBLIC	?Add@CListUInt64Def@@QAEXABU1@@Z		; CListUInt64Def::Add
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CListStat@@QAEXABU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_st$ = 8						; size = 4
?Update@CListStat@@QAEXABU1@@Z PROC			; CListStat::Update, COMDAT
; _this$ = ecx
; Line 330
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 331
	mov	eax, DWORD PTR _st$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CListUInt64Def@@QAEXABU1@@Z	; CListUInt64Def::Add
; Line 332
	mov	ecx, DWORD PTR _st$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Add@CListUInt64Def@@QAEXABU1@@Z	; CListUInt64Def::Add
; Line 333
	mov	edx, DWORD PTR _st$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?Update@CListFileTimeDef@@QAEXABU1@@Z	; CListFileTimeDef::Update
; Line 334
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR [eax+48]
	add	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [eax+52]
	adc	eax, DWORD PTR [ecx+52]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], edx
	mov	DWORD PTR [ecx+52], eax
; Line 335
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CListStat@@QAEXABU1@@Z ENDP			; CListStat::Update
_TEXT	ENDS
PUBLIC	?Add@CListUInt64Def@@QAEX_K@Z			; CListUInt64Def::Add
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@CListUInt64Def@@QAEXABU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
?Add@CListUInt64Def@@QAEXABU1@@Z PROC			; CListUInt64Def::Add, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _v$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@Add
	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@CListUInt64Def@@QAEX_K@Z		; CListUInt64Def::Add
$LN2@Add:
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@CListUInt64Def@@QAEXABU1@@Z ENDP			; CListUInt64Def::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Add@CListUInt64Def@@QAEX_K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 8
?Add@CListUInt64Def@@QAEX_K@Z PROC			; CListUInt64Def::Add, COMDAT
; _this$ = ecx
; Line 301
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [eax+4]
	adc	edx, DWORD PTR _v$[ebp+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 1
	mov	esp, ebp
	pop	ebp
	ret	8
?Add@CListUInt64Def@@QAEX_K@Z ENDP			; CListUInt64Def::Add
_TEXT	ENDS
EXTRN	__imp__CompareFileTime@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Update@CListFileTimeDef@@QAEXABU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Update@CListFileTimeDef@@QAEXABU1@@Z PROC		; CListFileTimeDef::Update, COMDAT
; _this$ = ecx
; Line 312
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 313
	mov	eax, DWORD PTR _t$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN3@Update
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	test	eax, eax
	je	SHORT $LN1@Update
	mov	esi, esp
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	DWORD PTR __imp__CompareFileTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN3@Update
$LN1@Update:
; Line 315
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 1
$LN3@Update:
; Line 318
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CListFileTimeDef@@QAEXABU1@@Z ENDP		; CListFileTimeDef::Update
_TEXT	ENDS
PUBLIC	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
PUBLIC	?GetGlobalOffset@CArc@@QBE_JXZ			; CArc::GetGlobalOffset
PUBLIC	?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z		; CCodecs::GetFormatNamePtr
PUBLIC	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z	; CObjectVector<CArc>::operator[]
PUBLIC	?Size@?$CObjectVector@VCArc@@@@QBEIXZ		; CObjectVector<CArc>::Size
PUBLIC	?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Props
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
xdata$x	SEGMENT
__unwindtable$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$3
__ehfuncinfo$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv331 = -224						; size = 4
$T74639 = -220						; size = 4
$T74638 = -216						; size = 4
$T74637 = -212						; size = 4
$T74636 = -208						; size = 4
$T74635 = -204						; size = 12
___result__$73345 = -192				; size = 4
_prop$73344 = -184					; size = 16
___result__$73341 = -164				; size = 4
_vt$73340 = -156					; size = 2
_propID$73339 = -144					; size = 4
_name$73338 = -132					; size = 4
_j$73334 = -124						; size = 4
_mainIndex$73333 = -120					; size = 4
_numProps$73329 = -112					; size = 4
___result__$73325 = -104				; size = 4
___result__$73322 = -100				; size = 4
_vt$73321 = -92						; size = 2
_propID$73320 = -80					; size = 4
_name$73319 = -68					; size = 4
_j$73315 = -60						; size = 4
___result__$73313 = -56					; size = 4
_numProps$73312 = -48					; size = 4
___result__$73309 = -40					; size = 4
_archive$73308 = -36					; size = 4
_offset$73306 = -32					; size = 8
_er$73297 = -24						; size = 4
_arc$73296 = -20					; size = 4
_r$73292 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_so$ = 8						; size = 4
_codecs$ = 12						; size = 4
_arcLink$ = 16						; size = 4
?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z PROC ; Print_OpenArchive_Props
; Line 876
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 877
	mov	DWORD PTR _r$73292[ebp], 0
	jmp	SHORT $LN22@Print_Open
$LN21@Print_Open:
	mov	eax, DWORD PTR _r$73292[ebp]
	add	eax, 1
	mov	DWORD PTR _r$73292[ebp], eax
$LN22@Print_Open:
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	?Size@?$CObjectVector@VCArc@@@@QBEIXZ	; CObjectVector<CArc>::Size
	cmp	DWORD PTR _r$73292[ebp], eax
	jae	$LN20@Print_Open
; Line 879
	mov	ecx, DWORD PTR _r$73292[ebp]
	push	ecx
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ; CObjectVector<CArc>::operator[]
	mov	DWORD PTR _arc$73296[ebp], eax
; Line 880
	mov	edx, DWORD PTR _arc$73296[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _er$73297[ebp], edx
; Line 882
	push	OFFSET $SG73298
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 883
	mov	ecx, DWORD PTR _arc$73296[ebp]
	add	ecx, 112				; 00000070H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG73299
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ; PrintPropPair
; Line 884
	mov	ecx, DWORD PTR _er$73297[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jl	SHORT $LN19@Print_Open
; Line 886
	mov	edx, DWORD PTR _er$73297[ebp]
	mov	eax, DWORD PTR _arc$73296[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+148]
	jne	SHORT $LN18@Print_Open
; Line 887
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG73302
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 888
	jmp	SHORT $LN19@Print_Open
$LN18@Print_Open:
; Line 889
	mov	edx, DWORD PTR _er$73297[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	call	?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z	; CCodecs::GetFormatNamePtr
	push	eax
	lea	ecx, DWORD PTR $T74635[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	1
	lea	ecx, DWORD PTR $T74635[ebp]
	push	ecx
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintArcTypeError@@YGXAAVCStdOutStream@@ABVUString@@_N@Z ; PrintArcTypeError
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T74635[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN19@Print_Open:
; Line 891
	mov	eax, DWORD PTR _arc$73296[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	mov	ecx, DWORD PTR _codecs$[ebp]
	call	?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z	; CCodecs::GetFormatNamePtr
	push	eax
	push	OFFSET $SG73305
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ; PrintPropPair
; Line 893
	mov	eax, DWORD PTR _er$73297[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	push	ecx
	call	?ErrorInfo_Print@@YGXAAVCStdOutStream@@ABUCArcErrorInfo@@@Z ; ErrorInfo_Print
; Line 895
	mov	ecx, DWORD PTR _arc$73296[ebp]
	call	?GetGlobalOffset@CArc@@QBE_JXZ		; CArc::GetGlobalOffset
	mov	DWORD PTR _offset$73306[ebp], eax
	mov	DWORD PTR _offset$73306[ebp+4], edx
; Line 896
	mov	edx, DWORD PTR _offset$73306[ebp]
	or	edx, DWORD PTR _offset$73306[ebp+4]
	je	SHORT $LN16@Print_Open
; Line 897
	mov	eax, DWORD PTR _offset$73306[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _offset$73306[ebp]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintPropNameAndNumber_Signed@@YGXAAVCStdOutStream@@K_J@Z ; PrintPropNameAndNumber_Signed
$LN16@Print_Open:
; Line 898
	mov	ecx, DWORD PTR _arc$73296[ebp]
	call	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
	mov	DWORD PTR _archive$73308[ebp], eax
; Line 899
	push	0
	push	44					; 0000002cH
	mov	eax, DWORD PTR _archive$73308[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	push	ecx
	call	?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z ; PrintArcProp
	mov	DWORD PTR ___result__$73309[ebp], eax
	cmp	DWORD PTR ___result__$73309[ebp], 0
	je	SHORT $LN15@Print_Open
	mov	eax, DWORD PTR ___result__$73309[ebp]
	jmp	$LN23@Print_Open
$LN15@Print_Open:
; Line 900
	mov	edx, DWORD PTR _er$73297[ebp]
	mov	DWORD PTR tv331[ebp], edx
	mov	eax, DWORD PTR tv331[ebp]
	mov	ecx, DWORD PTR tv331[ebp]
	mov	edx, DWORD PTR [eax+16]
	or	edx, DWORD PTR [ecx+20]
	je	SHORT $LN14@Print_Open
; Line 901
	mov	eax, DWORD PTR _er$73297[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	push	edx
	push	87					; 00000057H
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@K_K@Z ; PrintPropNameAndNumber
$LN14@Print_Open:
; Line 903
	mov	esi, esp
	lea	ecx, DWORD PTR _numProps$73312[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73308[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$73308[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73313[ebp], eax
	cmp	DWORD PTR ___result__$73313[ebp], 0
	je	SHORT $LN13@Print_Open
	mov	eax, DWORD PTR ___result__$73313[ebp]
	jmp	$LN23@Print_Open
$LN13@Print_Open:
; Line 906
	mov	DWORD PTR _j$73315[ebp], 0
	jmp	SHORT $LN12@Print_Open
$LN11@Print_Open:
	mov	eax, DWORD PTR _j$73315[ebp]
	add	eax, 1
	mov	DWORD PTR _j$73315[ebp], eax
$LN12@Print_Open:
	mov	ecx, DWORD PTR _j$73315[ebp]
	cmp	ecx, DWORD PTR _numProps$73312[ebp]
	jae	$LN10@Print_Open
; Line 908
	lea	ecx, DWORD PTR _name$73319[ebp]
	call	??0CMyComBSTR@@QAE@XZ			; CMyComBSTR::CMyComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 911
	mov	esi, esp
	lea	edx, DWORD PTR _vt$73321[ebp]
	push	edx
	lea	eax, DWORD PTR _propID$73320[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$73319[ebp]
	call	??ICMyComBSTR@@QAEPAPA_WXZ		; CMyComBSTR::operator&
	push	eax
	mov	ecx, DWORD PTR _j$73315[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73308[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$73308[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73322[ebp], eax
	cmp	DWORD PTR ___result__$73322[ebp], 0
	je	SHORT $LN9@Print_Open
	mov	eax, DWORD PTR ___result__$73322[ebp]
	mov	DWORD PTR $T74636[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73319[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	mov	eax, DWORD PTR $T74636[ebp]
	jmp	$LN23@Print_Open
$LN9@Print_Open:
; Line 912
	lea	ecx, DWORD PTR _name$73319[ebp]
	call	??BCMyComBSTR@@QBEPB_WXZ		; CMyComBSTR::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _propID$73320[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73308[ebp]
	push	edx
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z ; PrintArcProp
	mov	DWORD PTR ___result__$73325[ebp], eax
	cmp	DWORD PTR ___result__$73325[ebp], 0
	je	SHORT $LN8@Print_Open
	mov	ecx, DWORD PTR ___result__$73325[ebp]
	mov	DWORD PTR $T74637[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73319[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	mov	eax, DWORD PTR $T74637[ebp]
	jmp	$LN23@Print_Open
$LN8@Print_Open:
; Line 913
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73319[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	jmp	$LN11@Print_Open
$LN10@Print_Open:
; Line 916
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	?Size@?$CObjectVector@VCArc@@@@QBEIXZ	; CObjectVector<CArc>::Size
	sub	eax, 1
	cmp	DWORD PTR _r$73292[ebp], eax
	je	$LN7@Print_Open
; Line 919
	push	OFFSET $SG73330
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 920
	mov	esi, esp
	lea	edx, DWORD PTR _numProps$73329[ebp]
	push	edx
	mov	eax, DWORD PTR _archive$73308[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _archive$73308[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN7@Print_Open
; Line 922
	mov	ecx, DWORD PTR _r$73292[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _arcLink$[ebp]
	call	??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ; CObjectVector<CArc>::operator[]
	mov	edx, DWORD PTR [eax+152]
	mov	DWORD PTR _mainIndex$73333[ebp], edx
; Line 923
	mov	DWORD PTR _j$73334[ebp], 0
	jmp	SHORT $LN5@Print_Open
$LN4@Print_Open:
	mov	eax, DWORD PTR _j$73334[ebp]
	add	eax, 1
	mov	DWORD PTR _j$73334[ebp], eax
$LN5@Print_Open:
	mov	ecx, DWORD PTR _j$73334[ebp]
	cmp	ecx, DWORD PTR _numProps$73329[ebp]
	jae	$LN7@Print_Open
; Line 925
	lea	ecx, DWORD PTR _name$73338[ebp]
	call	??0CMyComBSTR@@QAE@XZ			; CMyComBSTR::CMyComBSTR
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 928
	mov	esi, esp
	lea	edx, DWORD PTR _vt$73340[ebp]
	push	edx
	lea	eax, DWORD PTR _propID$73339[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$73338[ebp]
	call	??ICMyComBSTR@@QAEPAPA_WXZ		; CMyComBSTR::operator&
	push	eax
	mov	ecx, DWORD PTR _j$73334[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73308[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$73308[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73341[ebp], eax
	cmp	DWORD PTR ___result__$73341[ebp], 0
	je	SHORT $LN2@Print_Open
	mov	eax, DWORD PTR ___result__$73341[ebp]
	mov	DWORD PTR $T74638[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73338[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	mov	eax, DWORD PTR $T74638[ebp]
	jmp	$LN23@Print_Open
$LN2@Print_Open:
; Line 929
	lea	ecx, DWORD PTR _prop$73344[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 930
	mov	esi, esp
	lea	ecx, DWORD PTR _prop$73344[ebp]
	push	ecx
	mov	edx, DWORD PTR _propID$73339[ebp]
	push	edx
	mov	eax, DWORD PTR _mainIndex$73333[ebp]
	push	eax
	mov	ecx, DWORD PTR _archive$73308[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _archive$73308[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73345[ebp], eax
	cmp	DWORD PTR ___result__$73345[ebp], 0
	je	SHORT $LN1@Print_Open
	mov	edx, DWORD PTR ___result__$73345[ebp]
	mov	DWORD PTR $T74639[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _prop$73344[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73338[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	mov	eax, DWORD PTR $T74639[ebp]
	jmp	SHORT $LN23@Print_Open
$LN1@Print_Open:
; Line 931
	lea	eax, DWORD PTR _prop$73344[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$73338[ebp]
	call	??BCMyComBSTR@@QBEPB_WXZ		; CMyComBSTR::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _propID$73339[ebp]
	push	ecx
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z ; PrintPropertyPair2
; Line 932
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _prop$73344[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _name$73338[ebp]
	call	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
	jmp	$LN4@Print_Open
$LN7@Print_Open:
; Line 935
	jmp	$LN21@Print_Open
$LN20@Print_Open:
; Line 936
	xor	eax, eax
$LN23@Print_Open:
; Line 937
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@Print_Open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN40@Print_Open:
	DD	9
	DD	$LN39@Print_Open
$LN39@Print_Open:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN29@Print_Open
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN30@Print_Open
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN31@Print_Open
	DD	-92					; ffffffa4H
	DD	2
	DD	$LN32@Print_Open
	DD	-112					; ffffff90H
	DD	4
	DD	$LN33@Print_Open
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN34@Print_Open
	DD	-144					; ffffff70H
	DD	4
	DD	$LN35@Print_Open
	DD	-156					; ffffff64H
	DD	2
	DD	$LN36@Print_Open
	DD	-184					; ffffff48H
	DD	16					; 00000010H
	DD	$LN37@Print_Open
$LN37@Print_Open:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN36@Print_Open:
	DB	118					; 00000076H
	DB	116					; 00000074H
	DB	0
$LN35@Print_Open:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN34@Print_Open:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN33@Print_Open:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN32@Print_Open:
	DB	118					; 00000076H
	DB	116					; 00000074H
	DB	0
$LN31@Print_Open:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN30@Print_Open:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN29@Print_Open:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$0:
	lea	ecx, DWORD PTR $T74635[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$1:
	lea	ecx, DWORD PTR _name$73319[ebp]
	jmp	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$2:
	lea	ecx, DWORD PTR _name$73338[ebp]
	jmp	??1CMyComBSTR@@QAE@XZ			; CMyComBSTR::~CMyComBSTR
__unwindfunclet$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z$3:
	lea	ecx, DWORD PTR _prop$73344[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ENDP ; Print_OpenArchive_Props
PUBLIC	??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
PUBLIC	??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@		; `string'
;	COMDAT ??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\loadcodecs.h
CONST	SEGMENT
??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@ DB '#', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_formatIndex$ = 8					; size = 4
?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z PROC		; CCodecs::GetFormatNamePtr, COMDAT
; _this$ = ecx
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 309
	cmp	DWORD PTR _formatIndex$[ebp], 0
	jge	SHORT $LN3@GetFormatN
	mov	DWORD PTR tv72[ebp], OFFSET ??_C@_13GMDMCADD@?$AA?$CD?$AA?$AA@
	jmp	SHORT $LN4@GetFormatN
$LN3@GetFormatN:
	mov	eax, DWORD PTR _formatIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
	add	eax, 12					; 0000000cH
	mov	ecx, eax
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	DWORD PTR tv72[ebp], eax
$LN4@GetFormatN:
	mov	eax, DWORD PTR tv72[ebp]
; Line 310
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetFormatNamePtr@CCodecs@@QBEPB_WH@Z ENDP		; CCodecs::GetFormatNamePtr
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetGlobalOffset@CArc@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetGlobalOffset@CArc@@QBE_JXZ PROC			; CArc::GetGlobalOffset, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\openarchive.h
; Line 303
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+208]
	add	edx, DWORD PTR [ecx+168]
	mov	esi, DWORD PTR [eax+212]
	adc	esi, DWORD PTR [ecx+172]
	mov	eax, edx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGlobalOffset@CArc@@QBE_JXZ ENDP			; CArc::GetGlobalOffset
_TEXT	ENDS
EXTRN	??6CStdOutStream@@QAEAAV0@_K@Z:PROC		; CStdOutStream::operator<<
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_so$ = 8						; size = 4
_propID$ = 12						; size = 4
_val$ = 16						; size = 8
?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@K_K@Z PROC ; PrintPropNameAndNumber
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 810
	push	ebp
	mov	ebp, esp
; Line 811
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	push	ecx
	call	?PrintPropName_and_Eq@@YGXAAVCStdOutStream@@K@Z ; PrintPropName_and_Eq
; Line 812
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _val$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@_K@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 813
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@K_K@Z ENDP ; PrintPropNameAndNumber
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_temp$ = -28						; size = 16
_s$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_so$ = 8						; size = 4
_propID$ = 12						; size = 4
?PrintPropName_and_Eq@@YGXAAVCStdOutStream@@K@Z PROC	; PrintPropName_and_Eq
; Line 796
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 799
	cmp	DWORD PTR _propID$[ebp], 95		; 0000005fH
	jae	SHORT $LN2@PrintPropN
; Line 800
	mov	eax, DWORD PTR _propID$[ebp]
	mov	ecx, DWORD PTR _kPropIdToName[eax*4]
	mov	DWORD PTR _s$[ebp], ecx
; Line 801
	jmp	SHORT $LN1@PrintPropN
$LN2@PrintPropN:
; Line 803
	lea	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	call	?ConvertUInt32ToString@@YGXIPAD@Z	; ConvertUInt32ToString
; Line 804
	lea	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _s$[ebp], ecx
$LN1@PrintPropN:
; Line 806
	push	OFFSET $SG73217
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 807
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@PrintPropN
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@PrintPropN:
	DD	1
	DD	$LN6@PrintPropN
$LN6@PrintPropN:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN5@PrintPropN
$LN5@PrintPropN:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?PrintPropName_and_Eq@@YGXAAVCStdOutStream@@K@Z ENDP	; PrintPropName_and_Eq
_TEXT	ENDS
EXTRN	??6CStdOutStream@@QAEAAV0@_J@Z:PROC		; CStdOutStream::operator<<
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_so$ = 8						; size = 4
_propID$ = 12						; size = 4
_val$ = 16						; size = 8
?PrintPropNameAndNumber_Signed@@YGXAAVCStdOutStream@@K_J@Z PROC ; PrintPropNameAndNumber_Signed
; Line 816
	push	ebp
	mov	ebp, esp
; Line 817
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	push	ecx
	call	?PrintPropName_and_Eq@@YGXAAVCStdOutStream@@K@Z ; PrintPropName_and_Eq
; Line 818
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _val$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@_J@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 819
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?PrintPropNameAndNumber_Signed@@YGXAAVCStdOutStream@@K_J@Z ENDP ; PrintPropNameAndNumber_Signed
; Function compile flags: /Odtp /RTCsu
_so$ = 8						; size = 4
_name$ = 12						; size = 4
_val$ = 16						; size = 4
?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z PROC	; PrintPropPair
; Line 822
	push	ebp
	mov	ebp, esp
; Line 823
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	push	OFFSET $SG73234
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 824
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ENDP	; PrintPropPair
_TEXT	ENDS
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
EXTRN	?ConvertPropertyToString@@YGXAAVUString@@ABUtagPROPVARIANT@@K_N@Z:PROC ; ConvertPropertyToString
xdata$x	SEGMENT
__unwindtable$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z$2
__ehfuncinfo$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_nameU$73244 = -68					; size = 12
_nameA$73243 = -48					; size = 12
_s$ = -28						; size = 12
__$EHRec$ = -12						; size = 12
_so$ = 8						; size = 4
_propID$ = 12						; size = 4
_name$ = 16						; size = 4
_prop$ = 20						; size = 4
?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z PROC ; PrintPropertyPair2
; Line 828
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	edi
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 829
	lea	ecx, DWORD PTR _s$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 830
	push	1
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?ConvertPropertyToString@@YGXAAVUString@@ABUtagPROPVARIANT@@K_N@Z ; ConvertPropertyToString
; Line 831
	lea	ecx, DWORD PTR _s$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	$LN3@PrintPrope
; Line 833
	lea	ecx, DWORD PTR _nameA$73243[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 834
	lea	ecx, DWORD PTR _nameU$73244[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 835
	lea	ecx, DWORD PTR _nameU$73244[ebp]
	push	ecx
	lea	edx, DWORD PTR _nameA$73243[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _propID$[ebp]
	push	ecx
	call	?GetPropName@@YGXKPB_WAAVAString@@AAVUString@@@Z ; GetPropName
; Line 836
	lea	ecx, DWORD PTR _nameA$73243[ebp]
	call	?IsEmpty@AString@@QBE_NXZ		; AString::IsEmpty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@PrintPrope
; Line 837
	lea	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _nameA$73243[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ; PrintPropPair
; Line 838
	jmp	SHORT $LN1@PrintPrope
$LN2@PrintPrope:
; Line 839
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG73247
	lea	ecx, DWORD PTR _nameU$73244[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN1@PrintPrope:
; Line 840
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _nameU$73244[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _nameA$73243[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN3@PrintPrope:
; Line 841
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@PrintPrope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN14@PrintPrope:
	DD	3
	DD	$LN13@PrintPrope
$LN13@PrintPrope:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN9@PrintPrope
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN10@PrintPrope
	DD	-68					; ffffffbcH
	DD	12					; 0000000cH
	DD	$LN11@PrintPrope
$LN11@PrintPrope:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	85					; 00000055H
	DB	0
$LN10@PrintPrope:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	65					; 00000041H
	DB	0
$LN9@PrintPrope:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z$1:
	lea	ecx, DWORD PTR _nameA$73243[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z$2:
	lea	ecx, DWORD PTR _nameU$73244[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z ENDP ; PrintPropertyPair2
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
_TEXT	ENDS
xdata$x	SEGMENT
__unwindtable$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z$0
__ehfuncinfo$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74690 = -48						; size = 4
$T74689 = -44						; size = 4
___result__$73255 = -40					; size = 4
_prop$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_so$ = 8						; size = 4
_archive$ = 12						; size = 4
_propID$ = 16						; size = 4
_name$ = 20						; size = 4
?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z PROC ; PrintArcProp
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 844
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 845
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 846
	mov	esi, esp
	lea	eax, DWORD PTR _prop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _propID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73255[ebp], eax
	cmp	DWORD PTR ___result__$73255[ebp], 0
	je	SHORT $LN1@PrintArcPr
	mov	eax, DWORD PTR ___result__$73255[ebp]
	mov	DWORD PTR $T74689[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74689[ebp]
	jmp	SHORT $LN2@PrintArcPr
$LN1@PrintArcPr:
; Line 847
	lea	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	push	ecx
	call	?PrintPropertyPair2@@YGXAAVCStdOutStream@@KPB_WABVCPropVariant@NCOM@NWindows@@@Z ; PrintPropertyPair2
; Line 848
	mov	DWORD PTR $T74690[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74690[ebp]
$LN2@PrintArcPr:
; Line 849
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@PrintArcPr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN8@PrintArcPr:
	DD	1
	DD	$LN7@PrintArcPr
$LN7@PrintArcPr:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN5@PrintArcPr
$LN5@PrintArcPr:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z$0:
	lea	ecx, DWORD PTR _prop$[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintArcProp@@YGJAAVCStdOutStream@@PAUIInArchive@@KPB_W@Z ENDP ; PrintArcProp
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -4						; size = 4
_so$ = 8						; size = 4
_type$ = 12						; size = 4
_isWarning$ = 16					; size = 1
?PrintArcTypeError@@YGXAAVCStdOutStream@@ABVUString@@_N@Z PROC ; PrintArcTypeError
; Line 852
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 857
	movzx	eax, BYTE PTR _isWarning$[ebp]
	test	eax, eax
	je	SHORT $LN3@PrintArcTy
	mov	DWORD PTR tv71[ebp], OFFSET $SG73266
	jmp	SHORT $LN4@PrintArcTy
$LN3@PrintArcTy:
	mov	DWORD PTR tv71[ebp], OFFSET $SG73267
$LN4@PrintArcTy:
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG73269
	mov	ecx, DWORD PTR _type$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG73268
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	push	OFFSET $SG73265
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 858
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PrintArcTypeError@@YGXAAVCStdOutStream@@ABVUString@@_N@Z ENDP ; PrintArcTypeError
_TEXT	ENDS
PUBLIC	?GetWarningFlags@CArcErrorInfo@@QBEIXZ		; CArcErrorInfo::GetWarningFlags
PUBLIC	?GetErrorFlags@CArcErrorInfo@@QBEIXZ		; CArcErrorInfo::GetErrorFlags
EXTRN	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z:PROC ; PrintErrorFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_so$ = 8						; size = 4
_er$ = 12						; size = 4
?ErrorInfo_Print@@YGXAAVCStdOutStream@@ABUCArcErrorInfo@@@Z PROC ; ErrorInfo_Print
; Line 865
	push	ebp
	mov	ebp, esp
; Line 866
	mov	ecx, DWORD PTR _er$[ebp]
	call	?GetErrorFlags@CArcErrorInfo@@QBEIXZ	; CArcErrorInfo::GetErrorFlags
	push	eax
	push	OFFSET $SG73281
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ; PrintErrorFlags
; Line 867
	mov	ecx, DWORD PTR _er$[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@ErrorInfo_
; Line 868
	mov	ecx, DWORD PTR _er$[ebp]
	add	ecx, 24					; 00000018H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG73283
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ; PrintPropPair
$LN2@ErrorInfo_:
; Line 870
	mov	ecx, DWORD PTR _er$[ebp]
	call	?GetWarningFlags@CArcErrorInfo@@QBEIXZ	; CArcErrorInfo::GetWarningFlags
	push	eax
	push	OFFSET $SG73284
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintErrorFlags@@YGXAAVCStdOutStream@@PBDI@Z ; PrintErrorFlags
; Line 871
	mov	ecx, DWORD PTR _er$[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@ErrorInfo_
; Line 872
	mov	ecx, DWORD PTR _er$[ebp]
	add	ecx, 36					; 00000024H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG73286
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ; PrintPropPair
$LN3@ErrorInfo_:
; Line 873
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?ErrorInfo_Print@@YGXAAVCStdOutStream@@ABUCArcErrorInfo@@@Z ENDP ; ErrorInfo_Print
_TEXT	ENDS
PUBLIC	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ		; CArcErrorInfo::NeedTailWarning
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetWarningFlags@CArcErrorInfo@@QBEIXZ
_TEXT	SEGMENT
_a$ = -8						; size = 4
_this$ = -4						; size = 4
?GetWarningFlags@CArcErrorInfo@@QBEIXZ PROC		; CArcErrorInfo::GetWarningFlags, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\openarchive.h
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _a$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ	; CArcErrorInfo::NeedTailWarning
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@GetWarning
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 64					; 00000040H
	jne	SHORT $LN1@GetWarning
; Line 212
	mov	edx, DWORD PTR _a$[ebp]
	or	edx, 64					; 00000040H
	mov	DWORD PTR _a$[ebp], edx
$LN1@GetWarning:
; Line 213
	mov	eax, DWORD PTR _a$[ebp]
; Line 214
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetWarningFlags@CArcErrorInfo@@QBEIXZ ENDP		; CArcErrorInfo::GetWarningFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedTailWarning@CArcErrorInfo@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?NeedTailWarning@CArcErrorInfo@@QBE_NXZ PROC		; CArcErrorInfo::NeedTailWarning, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	test	ecx, ecx
	jne	SHORT $LN3@NeedTailWa
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN3@NeedTailWa
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@NeedTailWa
$LN3@NeedTailWa:
	mov	DWORD PTR tv69[ebp], 0
$LN4@NeedTailWa:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedTailWarning@CArcErrorInfo@@QBE_NXZ ENDP		; CArcErrorInfo::NeedTailWarning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetErrorFlags@CArcErrorInfo@@QBEIXZ
_TEXT	SEGMENT
_a$ = -8						; size = 4
_this$ = -4						; size = 4
?GetErrorFlags@CArcErrorInfo@@QBEIXZ PROC		; CArcErrorInfo::GetErrorFlags, COMDAT
; _this$ = ecx
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _a$[ebp], ecx
; Line 219
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1]
	test	eax, eax
	je	SHORT $LN1@GetErrorFl
; Line 220
	mov	ecx, DWORD PTR _a$[ebp]
	or	ecx, 32					; 00000020H
	mov	DWORD PTR _a$[ebp], ecx
$LN1@GetErrorFl:
; Line 221
	mov	eax, DWORD PTR _a$[ebp]
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	0
?GetErrorFlags@CArcErrorInfo@@QBEIXZ ENDP		; CArcErrorInfo::GetErrorFlags
_TEXT	ENDS
PUBLIC	?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Error
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_so$ = 8						; size = 4
_codecs$ = 12						; size = 4
_arcLink$ = 16						; size = 4
?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z PROC ; Print_OpenArchive_Error
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 940
	push	ebp
	mov	ebp, esp
; Line 942
	mov	eax, DWORD PTR _arcLink$[ebp]
	movzx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	SHORT $LN4@Print_Open@2
; Line 943
	push	OFFSET $SG73355
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 944
	jmp	SHORT $LN3@Print_Open@2
$LN4@Print_Open@2:
; Line 947
	mov	edx, DWORD PTR _arcLink$[ebp]
	cmp	DWORD PTR [edx+60], 0
	jl	SHORT $LN2@Print_Open@2
; Line 949
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arcLink$[ebp]
	add	ecx, 36					; 00000024H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 950
	push	0
	mov	eax, DWORD PTR _arcLink$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR _codecs$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
	add	eax, 12					; 0000000cH
	push	eax
	mov	edx, DWORD PTR _so$[ebp]
	push	edx
	call	?PrintArcTypeError@@YGXAAVCStdOutStream@@ABVUString@@_N@Z ; PrintArcTypeError
; Line 952
	jmp	SHORT $LN3@Print_Open@2
$LN2@Print_Open@2:
; Line 953
	push	OFFSET $SG73359
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN3@Print_Open@2:
; Line 956
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 957
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 958
	mov	eax, DWORD PTR _arcLink$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	push	ecx
	call	?ErrorInfo_Print@@YGXAAVCStdOutStream@@ABUCArcErrorInfo@@@Z ; ErrorInfo_Print
; Line 960
	xor	eax, eax
; Line 961
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ENDP ; Print_OpenArchive_Error
_TEXT	ENDS
PUBLIC	?Update@CListStat2@@QAEXABU1@@Z			; CListStat2::Update
PUBLIC	??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
PUBLIC	?SetSizeDefIfNoFiles@CListStat@@QAEXXZ		; CListStat::SetSizeDefIfNoFiles
PUBLIC	?GetNumStreams@CListStat2@@QBE?B_KXZ		; CListStat2::GetNumStreams
PUBLIC	?GetStat@CListStat2@@QAEAAUCListStat@@_N@Z	; CListStat2::GetStat
PUBLIC	??0CListStat@@QAE@XZ				; CListStat::CListStat
PUBLIC	??1CReadArcItem@@QAE@XZ				; CReadArcItem::~CReadArcItem
PUBLIC	??1?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	?TestBreakSignal@NConsoleClose@@YG_NXZ		; NConsoleClose::TestBreakSignal
PUBLIC	??0?$CObjectVector@VUString@@@@QAE@XZ		; CObjectVector<UString>::CObjectVector<UString>
PUBLIC	??0CReadArcItem@@QAE@XZ				; CReadArcItem::CReadArcItem
PUBLIC	??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
PUBLIC	?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ	; CObjectVector<CArc>::Back
PUBLIC	?AreThereErrors@CArcErrorInfo@@QBE_NXZ		; CArcErrorInfo::AreThereErrors
PUBLIC	?AreThereWarnings@CArcErrorInfo@@QBE_NXZ	; CArcErrorInfo::AreThereWarnings
PUBLIC	??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z	; CObjectVector<CArc>::operator[]
PUBLIC	??1CFieldPrinter@@QAE@XZ			; CFieldPrinter::~CFieldPrinter
PUBLIC	??1?$CObjArray@_N@@QAE@XZ			; CObjArray<bool>::~CObjArray<bool>
PUBLIC	??1CArchiveLink@@QAE@XZ				; CArchiveLink::~CArchiveLink
PUBLIC	??1COpenCallbackConsole@@QAE@XZ			; COpenCallbackConsole::~COpenCallbackConsole
PUBLIC	??1COpenOptions@@QAE@XZ				; COpenOptions::~COpenOptions
PUBLIC	??0COpenOptions@@QAE@XZ				; COpenOptions::COpenOptions
PUBLIC	?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z ; COpenCallbackConsole::Init
PUBLIC	??0COpenCallbackConsole@@QAE@XZ			; COpenCallbackConsole::COpenCallbackConsole
PUBLIC	??0CArchiveLink@@QAE@XZ				; CArchiveLink::CArchiveLink
PUBLIC	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
PUBLIC	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::~CFileInfo
PUBLIC	_HRESULT_FROM_WIN32@4
PUBLIC	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfo::CFileInfo
PUBLIC	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
PUBLIC	??B?$CObjArray@_N@@QAEPA_NXZ			; CObjArray<bool>::operator bool *
PUBLIC	??0?$CObjArray@_N@@QAE@I@Z			; CObjArray<bool>::CObjArray<bool>
PUBLIC	?Size@?$CObjectVector@VUString@@@@QBEIXZ	; CObjectVector<UString>::Size
PUBLIC	??0CListStat2@@QAE@XZ				; CListStat2::CListStat2
PUBLIC	??0CFieldPrinter@@QAE@XZ			; CFieldPrinter::CFieldPrinter
PUBLIC	?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z ; ListArchives
EXTRN	?CheckPathVect@CCensorNode@NWildcard@@QBE_NABV?$CObjectVector@VUString@@@@_NAA_N@Z:PROC ; NWildcard::CCensorNode::CheckPathVect
EXTRN	?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z:PROC ; SplitPathToParts
EXTRN	?CensorNode_CheckPath@@YG_NABVCCensorNode@NWildcard@@ABUCReadArcItem@@@Z:PROC ; CensorNode_CheckPath
EXTRN	?GetItem@CArc@@QBEJIAAUCReadArcItem@@@Z:PROC	; CArc::GetItem
EXTRN	?Archive_IsItem_Dir@@YGJPAUIInArchive@@IAA_N@Z:PROC ; Archive_IsItem_Dir
EXTRN	?Archive_IsItem_AltStream@@YGJPAUIInArchive@@IAA_N@Z:PROC ; Archive_IsItem_AltStream
EXTRN	?Archive_IsItem_Aux@@YGJPAUIInArchive@@IAA_N@Z:PROC ; Archive_IsItem_Aux
EXTRN	?GetItemPath2@CArc@@QBEJIAAVUString@@@Z:PROC	; CArc::GetItemPath2
EXTRN	?Find_FileName_InSortedVector@@YGHABV?$CObjectVector@VUString@@@@ABVUString@@@Z:PROC ; Find_FileName_InSortedVector
EXTRN	?Open3@CArchiveLink@@QAEJAAUCOpenOptions@@PAUIOpenCallbackUI@@@Z:PROC ; CArchiveLink::Open3
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	?g_ErrStream@@3PAVCStdOutStream@@A:DWORD	; g_ErrStream
EXTRN	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z:PROC ; NWindows::NError::MyFormatMessage
EXTRN	?Flush@CStdOutStream@@QAE_NXZ:PROC		; CStdOutStream::Flush
EXTRN	__imp__GetLastError@0:PROC
EXTRN	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z:PROC ; NWindows::NFile::NFind::CFileInfo::Find
EXTRN	?AreAllAllowed@CCensorNode@NWildcard@@QBE_NXZ:PROC ; NWildcard::CCensorNode::AreAllAllowed
xdata$x	SEGMENT
__ehfuncinfo$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$9
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv1188 = -1312						; size = 4
tv624 = -1308						; size = 8
tv702 = -1300						; size = 4
tv259 = -1296						; size = 4
tv690 = -1292						; size = 4
tv135 = -1288						; size = 4
$T74733 = -1284						; size = 4
$T74732 = -1280						; size = 4
$T74729 = -1276						; size = 4
$T74728 = -1272						; size = 4
$T74727 = -1268						; size = 4
$T74726 = -1264						; size = 4
$T74725 = -1260						; size = 4
$T74724 = -1256						; size = 4
$T74723 = -1252						; size = 4
$T74722 = -1248						; size = 4
$T74721 = -1244						; size = 4
$T74720 = -1240						; size = 4
$T74719 = -1236						; size = 4
$T74718 = -1232						; size = 4
$T74717 = -1228						; size = 4
$T74716 = -1224						; size = 4
$T74715 = -1220						; size = 12
$T74714 = -1208						; size = 4
$T74713 = -1204						; size = 12
_numStreams$73707 = -1192				; size = 8
___result__$73704 = -1184				; size = 4
___result__$73698 = -1180				; size = 4
___result__$73695 = -1176				; size = 4
___result__$73692 = -1172				; size = 4
_st$73691 = -1164					; size = 56
_include$73688 = -1097					; size = 1
___result__$73683 = -1092				; size = 4
___result__$73678 = -1088				; size = 4
___result__$73674 = -1084				; size = 4
_isAltStream$73672 = -1073				; size = 1
___result__$73668 = -1068				; size = 4
_isAux$73667 = -1057					; size = 1
___result__$73663 = -1052				; size = 4
_res$73660 = -1048					; size = 4
_i$73653 = -1044					; size = 4
_pathParts$73652 = -1036				; size = 12
_item$73651 = -1016					; size = 64
___result__$73648 = -948				; size = 4
_numItems$73647 = -940					; size = 4
_stat2$73646 = -928					; size = 120
___result__$73643 = -804				; size = 4
___result__$73639 = -800				; size = 4
_archive$73637 = -796					; size = 4
_arc$73636 = -792					; size = 4
___result__$73630 = -788				; size = 4
_index$73625 = -784					; size = 4
_v$73621 = -780						; size = 4
_arc$73614 = -776					; size = 4
_r$73610 = -772						; size = 4
_result$73593 = -768					; size = 4
_options$73432 = -760					; size = 88
_openCallback$73431 = -664				; size = 208
_arcLink$73430 = -448					; size = 96
_errorCode$73425 = -348					; size = 4
_fi$73423 = -340					; size = 56
_arcPackSize$73421 = -280				; size = 8
_arcPath$73420 = -272					; size = 4
_lastError$ = -268					; size = 4
_totalArcSizes$ = -264					; size = 8
_numArcs$ = -256					; size = 8
_numVolumes$ = -248					; size = 8
_arcIndex$ = -240					; size = 4
_skipArcs$ = -232					; size = 4
_stat2total$ = -220					; size = 120
_fp$ = -92						; size = 72
_allFilesAreAllowed$ = -13				; size = 1
__$EHRec$ = -12						; size = 12
_codecs$ = 8						; size = 4
_types$ = 12						; size = 4
_excludedFormats$ = 16					; size = 4
_stdInMode$ = 20					; size = 1
_arcPaths$ = 24						; size = 4
_arcPathsFull$ = 28					; size = 4
_processAltStreams$ = 32				; size = 1
_showAltStreams$ = 36					; size = 1
_wildcardCensor$ = 40					; size = 4
_enableHeaders$ = 44					; size = 1
_techMode$ = 48						; size = 1
_passwordEnabled$ = 52					; size = 4
_password$ = 56						; size = 4
_props$ = 60						; size = 4
_numErrors$ = 64					; size = 4
_numWarnings$ = 68					; size = 4
?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z PROC ; ListArchives
; Line 981
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1300				; 00000514H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1312]
	mov	ecx, 325				; 00000145H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 982
	mov	ecx, DWORD PTR _wildcardCensor$[ebp]
	call	?AreAllAllowed@CCensorNode@NWildcard@@QBE_NXZ ; NWildcard::CCensorNode::AreAllAllowed
	mov	BYTE PTR _allFilesAreAllowed$[ebp], al
; Line 984
	mov	eax, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 985
	mov	ecx, DWORD PTR _numWarnings$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+4], 0
; Line 987
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??0CFieldPrinter@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 988
	movzx	edx, BYTE PTR _techMode$[ebp]
	test	edx, edx
	jne	SHORT $LN77@ListArchiv
; Line 989
	push	5
	push	OFFSET _kStandardFieldTable
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?Init@CFieldPrinter@@QAEXPBUCFieldInfoInit@@I@Z ; CFieldPrinter::Init
$LN77@ListArchiv:
; Line 991
	lea	ecx, DWORD PTR _stat2total$[ebp]
	call	??0CListStat2@@QAE@XZ			; CListStat2::CListStat2
; Line 993
	mov	ecx, DWORD PTR _arcPaths$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	push	eax
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??0?$CObjArray@_N@@QAE@I@Z		; CObjArray<bool>::CObjArray<bool>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 995
	mov	DWORD PTR _arcIndex$[ebp], 0
	jmp	SHORT $LN76@ListArchiv
$LN75@ListArchiv:
	mov	eax, DWORD PTR _arcIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _arcIndex$[ebp], eax
$LN76@ListArchiv:
	mov	ecx, DWORD PTR _arcPaths$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _arcIndex$[ebp], eax
	jae	SHORT $LN74@ListArchiv
; Line 996
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??B?$CObjArray@_N@@QAEPA_NXZ		; CObjArray<bool>::operator bool *
	mov	ecx, DWORD PTR _arcIndex$[ebp]
	mov	BYTE PTR [eax+ecx], 0
	jmp	SHORT $LN75@ListArchiv
$LN74@ListArchiv:
; Line 997
	mov	DWORD PTR _numVolumes$[ebp], 0
	mov	DWORD PTR _numVolumes$[ebp+4], 0
; Line 998
	mov	DWORD PTR _numArcs$[ebp], 0
	mov	DWORD PTR _numArcs$[ebp+4], 0
; Line 999
	mov	DWORD PTR _totalArcSizes$[ebp], 0
	mov	DWORD PTR _totalArcSizes$[ebp+4], 0
; Line 1001
	mov	DWORD PTR _lastError$[ebp], 0
; Line 1003
	mov	DWORD PTR _arcIndex$[ebp], 0
	jmp	SHORT $LN73@ListArchiv
$LN72@ListArchiv:
	mov	edx, DWORD PTR _arcIndex$[ebp]
	add	edx, 1
	mov	DWORD PTR _arcIndex$[ebp], edx
$LN73@ListArchiv:
	mov	ecx, DWORD PTR _arcPaths$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _arcIndex$[ebp], eax
	jae	$LN71@ListArchiv
; Line 1005
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??B?$CObjArray@_N@@QAEPA_NXZ		; CObjArray<bool>::operator bool *
	mov	ecx, DWORD PTR _arcIndex$[ebp]
	movzx	edx, BYTE PTR [eax+ecx]
	test	edx, edx
	je	SHORT $LN70@ListArchiv
; Line 1006
	jmp	SHORT $LN72@ListArchiv
$LN70@ListArchiv:
; Line 1007
	mov	eax, DWORD PTR _arcIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _arcPaths$[ebp]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	mov	DWORD PTR _arcPath$73420[ebp], eax
; Line 1008
	mov	DWORD PTR _arcPackSize$73421[ebp], 0
	mov	DWORD PTR _arcPackSize$73421[ebp+4], 0
; Line 1010
	movzx	ecx, BYTE PTR _stdInMode$[ebp]
	test	ecx, ecx
	jne	$LN69@ListArchiv
; Line 1012
	lea	ecx, DWORD PTR _fi$73423[ebp]
	call	??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1013
	mov	ecx, DWORD PTR _arcPath$73420[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	lea	ecx, DWORD PTR _fi$73423[ebp]
	call	?Find@CFileInfo@NFind@NFile@NWindows@@QAE_NPB_W@Z ; NWindows::NFile::NFind::CFileInfo::Find
	movzx	edx, al
	test	edx, edx
	jne	$LN68@ListArchiv
; Line 1015
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _errorCode$73425[ebp], eax
; Line 1016
	cmp	DWORD PTR _errorCode$73425[ebp], 0
	jne	SHORT $LN67@ListArchiv
; Line 1017
	mov	DWORD PTR _errorCode$73425[ebp], 2
$LN67@ListArchiv:
; Line 1018
	mov	eax, DWORD PTR _lastError$[ebp]
	push	eax
	call	_HRESULT_FROM_WIN32@4
	mov	DWORD PTR _lastError$[ebp], eax
; Line 1019
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
; Line 1021
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arcPath$73420[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _errorCode$73425[ebp]
	push	ecx
	lea	edx, DWORD PTR $T74713[ebp]
	push	edx
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv690[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv690[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _kError
	push	ecx
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T74713[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
; Line 1022
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+4]
	adc	ecx, 0
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
; Line 1023
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73423[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN72@ListArchiv
$LN68@ListArchiv:
; Line 1025
	lea	ecx, DWORD PTR _fi$73423[ebp]
	call	?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ; NWindows::NFile::NFind::CFileInfoBase::IsDir
	movzx	eax, al
	test	eax, eax
	je	$LN66@ListArchiv
; Line 1027
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
; Line 1028
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET $SG73429
	mov	ecx, DWORD PTR _arcPath$73420[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _kError
	push	ecx
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1029
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+4]
	adc	ecx, 0
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
; Line 1030
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73423[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
	jmp	$LN72@ListArchiv
$LN66@ListArchiv:
; Line 1032
	mov	eax, DWORD PTR _fi$73423[ebp]
	mov	DWORD PTR _arcPackSize$73421[ebp], eax
	mov	ecx, DWORD PTR _fi$73423[ebp+4]
	mov	DWORD PTR _arcPackSize$73421[ebp+4], ecx
; Line 1033
	mov	edx, DWORD PTR _totalArcSizes$[ebp]
	add	edx, DWORD PTR _arcPackSize$73421[ebp]
	mov	eax, DWORD PTR _totalArcSizes$[ebp+4]
	adc	eax, DWORD PTR _arcPackSize$73421[ebp+4]
	mov	DWORD PTR _totalArcSizes$[ebp], edx
	mov	DWORD PTR _totalArcSizes$[ebp+4], eax
; Line 1034
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _fi$73423[ebp]
	call	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
$LN69@ListArchiv:
; Line 1036
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??0CArchiveLink@@QAE@XZ			; CArchiveLink::CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1038
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??0COpenCallbackConsole@@QAE@XZ		; COpenCallbackConsole::COpenCallbackConsole
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1039
	push	0
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	push	ecx
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z ; COpenCallbackConsole::Init
; Line 1043
	mov	edx, DWORD PTR _passwordEnabled$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _openCallback$73431[ebp+195], al
; Line 1044
	mov	ecx, DWORD PTR _password$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _openCallback$73431[ebp+196]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 1054
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??0COpenOptions@@QAE@XZ			; COpenOptions::COpenOptions
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1056
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR _options$73432[ebp+64], edx
; Line 1058
	mov	eax, DWORD PTR _codecs$[ebp]
	mov	DWORD PTR _options$73432[ebp], eax
; Line 1059
	mov	ecx, DWORD PTR _types$[ebp]
	mov	DWORD PTR _options$73432[ebp+40], ecx
; Line 1060
	mov	edx, DWORD PTR _excludedFormats$[ebp]
	mov	DWORD PTR _options$73432[ebp+44], edx
; Line 1061
	mov	al, BYTE PTR _stdInMode$[ebp]
	mov	BYTE PTR _options$73432[ebp+68], al
; Line 1062
	mov	DWORD PTR _options$73432[ebp+48], 0
; Line 1063
	mov	ecx, DWORD PTR _arcPath$73420[ebp]
	push	ecx
	lea	ecx, DWORD PTR _options$73432[ebp+72]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 1065
	movzx	edx, BYTE PTR _enableHeaders$[ebp]
	test	edx, edx
	je	SHORT $LN65@ListArchiv
; Line 1067
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _arcPath$73420[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	eax, DWORD PTR _kListing
	push	eax
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN65@ListArchiv:
; Line 1070
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	push	ecx
	lea	edx, DWORD PTR _options$73432[ebp]
	push	edx
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	?Open3@CArchiveLink@@QAEJAAUCOpenOptions@@PAUIOpenCallbackUI@@@Z ; CArchiveLink::Open3
	mov	DWORD PTR _result$73593[ebp], eax
; Line 1072
	cmp	DWORD PTR _result$73593[ebp], 0
	je	$LN64@ListArchiv
; Line 1074
	cmp	DWORD PTR _result$73593[ebp], -2147467260 ; 80004004H
	jne	SHORT $LN63@ListArchiv
; Line 1075
	mov	eax, DWORD PTR _result$73593[ebp]
	mov	DWORD PTR $T74714[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74714[ebp]
	jmp	$LN78@ListArchiv
$LN63@ListArchiv:
; Line 1076
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
; Line 1077
	push	OFFSET $SG73599
	mov	ecx, DWORD PTR _arcPath$73420[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _kError
	push	ecx
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 1078
	cmp	DWORD PTR _result$73593[ebp], 1
	jne	SHORT $LN62@ListArchiv
; Line 1080
	lea	edx, DWORD PTR _arcLink$73430[ebp]
	push	edx
	mov	eax, DWORD PTR _codecs$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	push	ecx
	call	?Print_OpenArchive_Error@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Error
; Line 1082
	jmp	$LN61@ListArchiv
$LN62@ListArchiv:
; Line 1084
	mov	edx, DWORD PTR _result$73593[ebp]
	mov	DWORD PTR _lastError$[ebp], edx
; Line 1085
	push	OFFSET $SG73603
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 1086
	cmp	DWORD PTR _result$73593[ebp], -2147024882 ; 8007000eH
	jne	SHORT $LN60@ListArchiv
; Line 1087
	push	OFFSET $SG73606
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 1088
	jmp	SHORT $LN61@ListArchiv
$LN60@ListArchiv:
; Line 1089
	mov	eax, DWORD PTR _result$73593[ebp]
	push	eax
	lea	ecx, DWORD PTR $T74715[ebp]
	push	ecx
	call	?MyFormatMessage@NError@NWindows@@YG?AVUString@@K@Z ; NWindows::NError::MyFormatMessage
	mov	DWORD PTR tv259[ebp], eax
	mov	edx, DWORD PTR tv259[ebp]
	mov	DWORD PTR tv702[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv702[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T74715[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
$LN61@ListArchiv:
; Line 1091
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR ?g_ErrStream@@3PAVCStdOutStream@@A ; g_ErrStream
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1092
	mov	eax, DWORD PTR _numErrors$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+4]
	adc	edx, 0
	mov	eax, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 1093
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	jmp	$LN72@ListArchiv
$LN64@ListArchiv:
; Line 1097
	cmp	DWORD PTR _arcLink$73430[ebp+60], 0
	jl	SHORT $LN58@ListArchiv
; Line 1098
	mov	ecx, DWORD PTR _numErrors$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+4]
	adc	eax, 0
	mov	ecx, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
$LN58@ListArchiv:
; Line 1100
	mov	DWORD PTR _r$73610[ebp], 0
	jmp	SHORT $LN57@ListArchiv
$LN56@ListArchiv:
	mov	edx, DWORD PTR _r$73610[ebp]
	add	edx, 1
	mov	DWORD PTR _r$73610[ebp], edx
$LN57@ListArchiv:
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	?Size@?$CObjectVector@VCArc@@@@QBEIXZ	; CObjectVector<CArc>::Size
	cmp	DWORD PTR _r$73610[ebp], eax
	jae	$LN55@ListArchiv
; Line 1102
	mov	eax, DWORD PTR _r$73610[ebp]
	push	eax
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z ; CObjectVector<CArc>::operator[]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _arc$73614[ebp], eax
; Line 1103
	mov	ecx, DWORD PTR _arc$73614[ebp]
	add	ecx, 36					; 00000024H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN54@ListArchiv
; Line 1104
	mov	edx, DWORD PTR _numWarnings$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+4]
	adc	ecx, 0
	mov	edx, DWORD PTR _numWarnings$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
$LN54@ListArchiv:
; Line 1105
	mov	ecx, DWORD PTR _arc$73614[ebp]
	call	?AreThereWarnings@CArcErrorInfo@@QBE_NXZ ; CArcErrorInfo::AreThereWarnings
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN53@ListArchiv
; Line 1106
	mov	ecx, DWORD PTR _numWarnings$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+4]
	adc	eax, 0
	mov	ecx, DWORD PTR _numWarnings$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
$LN53@ListArchiv:
; Line 1107
	mov	edx, DWORD PTR _arc$73614[ebp]
	cmp	DWORD PTR [edx+12], 0
	jl	SHORT $LN52@ListArchiv
; Line 1108
	mov	eax, DWORD PTR _numWarnings$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR [eax+4]
	adc	edx, 0
	mov	eax, DWORD PTR _numWarnings$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
$LN52@ListArchiv:
; Line 1109
	mov	ecx, DWORD PTR _arc$73614[ebp]
	call	?AreThereErrors@CArcErrorInfo@@QBE_NXZ	; CArcErrorInfo::AreThereErrors
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN51@ListArchiv
; Line 1111
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR [edx+4]
	adc	ecx, 0
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
$LN51@ListArchiv:
; Line 1114
	mov	ecx, DWORD PTR _arc$73614[ebp]
	add	ecx, 24					; 00000018H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN50@ListArchiv
; Line 1115
	mov	ecx, DWORD PTR _numErrors$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+4]
	adc	eax, 0
	mov	ecx, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
$LN50@ListArchiv:
; Line 1116
	jmp	$LN56@ListArchiv
$LN55@ListArchiv:
; Line 1119
	mov	edx, DWORD PTR _numArcs$[ebp]
	add	edx, 1
	mov	eax, DWORD PTR _numArcs$[ebp+4]
	adc	eax, 0
	mov	DWORD PTR _numArcs$[ebp], edx
	mov	DWORD PTR _numArcs$[ebp+4], eax
; Line 1120
	mov	ecx, DWORD PTR _numVolumes$[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _numVolumes$[ebp+4]
	adc	edx, 0
	mov	DWORD PTR _numVolumes$[ebp], ecx
	mov	DWORD PTR _numVolumes$[ebp+4], edx
; Line 1122
	movzx	eax, BYTE PTR _stdInMode$[ebp]
	test	eax, eax
	jne	$LN49@ListArchiv
; Line 1124
	lea	ecx, DWORD PTR _arcLink$73430[ebp+12]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	xor	ecx, ecx
	add	eax, DWORD PTR _numVolumes$[ebp]
	adc	ecx, DWORD PTR _numVolumes$[ebp+4]
	mov	DWORD PTR _numVolumes$[ebp], eax
	mov	DWORD PTR _numVolumes$[ebp+4], ecx
; Line 1125
	mov	edx, DWORD PTR _totalArcSizes$[ebp]
	add	edx, DWORD PTR _arcLink$73430[ebp+24]
	mov	eax, DWORD PTR _totalArcSizes$[ebp+4]
	adc	eax, DWORD PTR _arcLink$73430[ebp+28]
	mov	DWORD PTR _totalArcSizes$[ebp], edx
	mov	DWORD PTR _totalArcSizes$[ebp+4], eax
; Line 1126
	mov	DWORD PTR _v$73621[ebp], 0
	jmp	SHORT $LN48@ListArchiv
$LN47@ListArchiv:
	mov	ecx, DWORD PTR _v$73621[ebp]
	add	ecx, 1
	mov	DWORD PTR _v$73621[ebp], ecx
$LN48@ListArchiv:
	lea	ecx, DWORD PTR _arcLink$73430[ebp+12]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	DWORD PTR _v$73621[ebp], eax
	jae	SHORT $LN49@ListArchiv
; Line 1128
	mov	edx, DWORD PTR _v$73621[ebp]
	push	edx
	lea	ecx, DWORD PTR _arcLink$73430[ebp+12]
	call	??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ; CObjectVector<UString>::operator[]
	push	eax
	mov	eax, DWORD PTR _arcPathsFull$[ebp]
	push	eax
	call	?Find_FileName_InSortedVector@@YGHABV?$CObjectVector@VUString@@@@ABVUString@@@Z ; Find_FileName_InSortedVector
	mov	DWORD PTR _index$73625[ebp], eax
; Line 1129
	cmp	DWORD PTR _index$73625[ebp], 0
	jl	SHORT $LN45@ListArchiv
	mov	ecx, DWORD PTR _index$73625[ebp]
	cmp	ecx, DWORD PTR _arcIndex$[ebp]
	jbe	SHORT $LN45@ListArchiv
; Line 1130
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??B?$CObjArray@_N@@QAEPA_NXZ		; CObjArray<bool>::operator bool *
	mov	edx, DWORD PTR _index$73625[ebp]
	mov	BYTE PTR [eax+edx], 1
$LN45@ListArchiv:
; Line 1131
	jmp	SHORT $LN47@ListArchiv
$LN49@ListArchiv:
; Line 1135
	movzx	eax, BYTE PTR _enableHeaders$[ebp]
	test	eax, eax
	je	$LN44@ListArchiv
; Line 1137
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	push	ecx
	mov	edx, DWORD PTR _codecs$[ebp]
	push	edx
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	call	?Print_OpenArchive_Props@@YGJAAVCStdOutStream@@PBVCCodecs@@ABUCArchiveLink@@@Z ; Print_OpenArchive_Props
	mov	DWORD PTR ___result__$73630[ebp], eax
	cmp	DWORD PTR ___result__$73630[ebp], 0
	je	SHORT $LN43@ListArchiv
	mov	eax, DWORD PTR ___result__$73630[ebp]
	mov	DWORD PTR $T74716[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74716[ebp]
	jmp	$LN78@ListArchiv
$LN43@ListArchiv:
; Line 1139
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1140
	movzx	ecx, BYTE PTR _techMode$[ebp]
	test	ecx, ecx
	je	SHORT $LN44@ListArchiv
; Line 1141
	push	OFFSET $SG73634
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
$LN44@ListArchiv:
; Line 1144
	movzx	edx, BYTE PTR _enableHeaders$[ebp]
	test	edx, edx
	je	SHORT $LN41@ListArchiv
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	jne	SHORT $LN41@ListArchiv
; Line 1146
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintTitle@CFieldPrinter@@QAEXXZ	; CFieldPrinter::PrintTitle
; Line 1147
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1148
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintTitleLines@CFieldPrinter@@QAEXXZ	; CFieldPrinter::PrintTitleLines
; Line 1149
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN41@ListArchiv:
; Line 1152
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ ; CObjectVector<CArc>::Back
	mov	DWORD PTR _arc$73636[ebp], eax
; Line 1153
	mov	ecx, DWORD PTR _arc$73636[ebp]
	mov	DWORD PTR _fp$[ebp+12], ecx
; Line 1154
	mov	dl, BYTE PTR _techMode$[ebp]
	mov	BYTE PTR _fp$[ebp+16], dl
; Line 1155
	mov	ecx, DWORD PTR _arc$73636[ebp]
	call	??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ; CMyComPtr<IInArchive>::operator IInArchive *
	mov	DWORD PTR _archive$73637[ebp], eax
; Line 1156
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	je	$LN40@ListArchiv
; Line 1158
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?Clear@CFieldPrinter@@QAEXXZ		; CFieldPrinter::Clear
; Line 1159
	mov	ecx, DWORD PTR _archive$73637[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?AddMainProps@CFieldPrinter@@QAEJPAUIInArchive@@@Z ; CFieldPrinter::AddMainProps
	mov	DWORD PTR ___result__$73639[ebp], eax
	cmp	DWORD PTR ___result__$73639[ebp], 0
	je	SHORT $LN39@ListArchiv
	mov	edx, DWORD PTR ___result__$73639[ebp]
	mov	DWORD PTR $T74717[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74717[ebp]
	jmp	$LN78@ListArchiv
$LN39@ListArchiv:
; Line 1160
	mov	ecx, DWORD PTR _arc$73636[ebp]
	add	ecx, 8
	call	??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
	test	eax, eax
	je	$LN40@ListArchiv
; Line 1162
	mov	ecx, DWORD PTR _arc$73636[ebp]
	add	ecx, 8
	call	??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
	push	eax
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?AddRawProps@CFieldPrinter@@QAEJPAUIArchiveGetRawProps@@@Z ; CFieldPrinter::AddRawProps
	mov	DWORD PTR ___result__$73643[ebp], eax
	cmp	DWORD PTR ___result__$73643[ebp], 0
	je	SHORT $LN40@ListArchiv
	mov	eax, DWORD PTR ___result__$73643[ebp]
	mov	DWORD PTR $T74718[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74718[ebp]
	jmp	$LN78@ListArchiv
$LN40@ListArchiv:
; Line 1166
	lea	ecx, DWORD PTR _stat2$73646[ebp]
	call	??0CListStat2@@QAE@XZ			; CListStat2::CListStat2
; Line 1169
	mov	esi, esp
	lea	ecx, DWORD PTR _numItems$73647[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73637[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$73637[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73648[ebp], eax
	cmp	DWORD PTR ___result__$73648[ebp], 0
	je	SHORT $LN36@ListArchiv
	mov	eax, DWORD PTR ___result__$73648[ebp]
	mov	DWORD PTR $T74719[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74719[ebp]
	jmp	$LN78@ListArchiv
$LN36@ListArchiv:
; Line 1171
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??0CReadArcItem@@QAE@XZ			; CReadArcItem::CReadArcItem
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 1172
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 1174
	mov	DWORD PTR _i$73653[ebp], 0
	jmp	SHORT $LN35@ListArchiv
$LN34@ListArchiv:
	mov	ecx, DWORD PTR _i$73653[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$73653[ebp], ecx
$LN35@ListArchiv:
	mov	edx, DWORD PTR _i$73653[ebp]
	cmp	edx, DWORD PTR _numItems$73647[ebp]
	jae	$LN33@ListArchiv
; Line 1176
	call	?TestBreakSignal@NConsoleClose@@YG_NXZ	; NConsoleClose::TestBreakSignal
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN32@ListArchiv
; Line 1177
	mov	DWORD PTR $T74720[ebp], -2147467260	; 80004004H
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74720[ebp]
	jmp	$LN78@ListArchiv
$LN32@ListArchiv:
; Line 1179
	lea	ecx, DWORD PTR _fp$[ebp+20]
	push	ecx
	mov	edx, DWORD PTR _i$73653[ebp]
	push	edx
	mov	ecx, DWORD PTR _arc$73636[ebp]
	call	?GetItemPath2@CArc@@QBEJIAAVUString@@@Z	; CArc::GetItemPath2
	mov	DWORD PTR _res$73660[ebp], eax
; Line 1181
	movzx	eax, BYTE PTR _stdInMode$[ebp]
	test	eax, eax
	je	SHORT $LN31@ListArchiv
	cmp	DWORD PTR _res$73660[ebp], -2147024809	; 80070057H
	jne	SHORT $LN31@ListArchiv
; Line 1182
	jmp	$LN33@ListArchiv
$LN31@ListArchiv:
; Line 1183
	mov	ecx, DWORD PTR _res$73660[ebp]
	mov	DWORD PTR ___result__$73663[ebp], ecx
	cmp	DWORD PTR ___result__$73663[ebp], 0
	je	$LN30@ListArchiv
	mov	edx, DWORD PTR ___result__$73663[ebp]
	mov	DWORD PTR $T74721[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74721[ebp]
	jmp	$LN78@ListArchiv
$LN30@ListArchiv:
; Line 1185
	mov	eax, DWORD PTR _arc$73636[ebp]
	movzx	ecx, BYTE PTR [eax+221]
	test	ecx, ecx
	je	$LN29@ListArchiv
; Line 1188
	lea	edx, DWORD PTR _isAux$73667[ebp]
	push	edx
	mov	eax, DWORD PTR _i$73653[ebp]
	push	eax
	mov	ecx, DWORD PTR _archive$73637[ebp]
	push	ecx
	call	?Archive_IsItem_Aux@@YGJPAUIInArchive@@IAA_N@Z ; Archive_IsItem_Aux
	mov	DWORD PTR ___result__$73668[ebp], eax
	cmp	DWORD PTR ___result__$73668[ebp], 0
	je	$LN28@ListArchiv
	mov	edx, DWORD PTR ___result__$73668[ebp]
	mov	DWORD PTR $T74722[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74722[ebp]
	jmp	$LN78@ListArchiv
$LN28@ListArchiv:
; Line 1189
	movzx	eax, BYTE PTR _isAux$73667[ebp]
	test	eax, eax
	je	SHORT $LN29@ListArchiv
; Line 1190
	jmp	$LN34@ListArchiv
$LN29@ListArchiv:
; Line 1193
	mov	BYTE PTR _isAltStream$73672[ebp], 0
; Line 1194
	mov	ecx, DWORD PTR _arc$73636[ebp]
	movzx	edx, BYTE PTR [ecx+220]
	test	edx, edx
	je	$LN26@ListArchiv
; Line 1196
	lea	eax, DWORD PTR _isAltStream$73672[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$73653[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73637[ebp]
	push	edx
	call	?Archive_IsItem_AltStream@@YGJPAUIInArchive@@IAA_N@Z ; Archive_IsItem_AltStream
	mov	DWORD PTR ___result__$73674[ebp], eax
	cmp	DWORD PTR ___result__$73674[ebp], 0
	je	$LN25@ListArchiv
	mov	eax, DWORD PTR ___result__$73674[ebp]
	mov	DWORD PTR $T74723[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74723[ebp]
	jmp	$LN78@ListArchiv
$LN25@ListArchiv:
; Line 1197
	movzx	ecx, BYTE PTR _isAltStream$73672[ebp]
	test	ecx, ecx
	je	SHORT $LN26@ListArchiv
	movzx	edx, BYTE PTR _processAltStreams$[ebp]
	test	edx, edx
	jne	SHORT $LN26@ListArchiv
; Line 1198
	jmp	$LN34@ListArchiv
$LN26@ListArchiv:
; Line 1201
	lea	eax, DWORD PTR _fp$[ebp+56]
	push	eax
	mov	ecx, DWORD PTR _i$73653[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73637[ebp]
	push	edx
	call	?Archive_IsItem_Dir@@YGJPAUIInArchive@@IAA_N@Z ; Archive_IsItem_Dir
	mov	DWORD PTR ___result__$73678[ebp], eax
	cmp	DWORD PTR ___result__$73678[ebp], 0
	je	$LN23@ListArchiv
	mov	eax, DWORD PTR ___result__$73678[ebp]
	mov	DWORD PTR $T74724[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74724[ebp]
	jmp	$LN78@ListArchiv
$LN23@ListArchiv:
; Line 1203
	movzx	ecx, BYTE PTR _allFilesAreAllowed$[ebp]
	test	ecx, ecx
	jne	$LN22@ListArchiv
; Line 1205
	movzx	edx, BYTE PTR _isAltStream$73672[ebp]
	test	edx, edx
	je	$LN21@ListArchiv
; Line 1207
	lea	eax, DWORD PTR _item$73651[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$73653[ebp]
	push	ecx
	mov	ecx, DWORD PTR _arc$73636[ebp]
	call	?GetItem@CArc@@QBEJIAAUCReadArcItem@@@Z	; CArc::GetItem
	mov	DWORD PTR ___result__$73683[ebp], eax
	cmp	DWORD PTR ___result__$73683[ebp], 0
	je	$LN20@ListArchiv
	mov	edx, DWORD PTR ___result__$73683[ebp]
	mov	DWORD PTR $T74725[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74725[ebp]
	jmp	$LN78@ListArchiv
$LN20@ListArchiv:
; Line 1208
	lea	eax, DWORD PTR _item$73651[ebp]
	push	eax
	mov	ecx, DWORD PTR _wildcardCensor$[ebp]
	push	ecx
	call	?CensorNode_CheckPath@@YG_NABVCCensorNode@NWildcard@@ABUCReadArcItem@@@Z ; CensorNode_CheckPath
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN19@ListArchiv
; Line 1209
	jmp	$LN34@ListArchiv
$LN19@ListArchiv:
; Line 1211
	jmp	SHORT $LN22@ListArchiv
$LN21@ListArchiv:
; Line 1213
	lea	eax, DWORD PTR _pathParts$73652[ebp]
	push	eax
	lea	ecx, DWORD PTR _fp$[ebp+20]
	push	ecx
	call	?SplitPathToParts@@YGXABVUString@@AAV?$CObjectVector@VUString@@@@@Z ; SplitPathToParts
; Line 1215
	lea	edx, DWORD PTR _include$73688[ebp]
	push	edx
	movzx	eax, BYTE PTR _fp$[ebp+56]
	test	eax, eax
	sete	cl
	movzx	edx, cl
	push	edx
	lea	eax, DWORD PTR _pathParts$73652[ebp]
	push	eax
	mov	ecx, DWORD PTR _wildcardCensor$[ebp]
	call	?CheckPathVect@CCensorNode@NWildcard@@QBE_NABV?$CObjectVector@VUString@@@@_NAA_N@Z ; NWildcard::CCensorNode::CheckPathVect
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN17@ListArchiv
; Line 1216
	jmp	$LN34@ListArchiv
$LN17@ListArchiv:
; Line 1217
	movzx	edx, BYTE PTR _include$73688[ebp]
	test	edx, edx
	jne	SHORT $LN22@ListArchiv
; Line 1218
	jmp	$LN34@ListArchiv
$LN22@ListArchiv:
; Line 1222
	lea	ecx, DWORD PTR _st$73691[ebp]
	call	??0CListStat@@QAE@XZ			; CListStat::CListStat
; Line 1224
	lea	eax, DWORD PTR _st$73691[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _i$73653[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$73637[ebp]
	push	edx
	call	?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z ; GetUInt64Value
	mov	DWORD PTR ___result__$73692[ebp], eax
	cmp	DWORD PTR ___result__$73692[ebp], 0
	je	$LN15@ListArchiv
	mov	eax, DWORD PTR ___result__$73692[ebp]
	mov	DWORD PTR $T74726[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74726[ebp]
	jmp	$LN78@ListArchiv
$LN15@ListArchiv:
; Line 1225
	lea	ecx, DWORD PTR _st$73691[ebp+16]
	push	ecx
	push	8
	mov	edx, DWORD PTR _i$73653[ebp]
	push	edx
	mov	eax, DWORD PTR _archive$73637[ebp]
	push	eax
	call	?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z ; GetUInt64Value
	mov	DWORD PTR ___result__$73695[ebp], eax
	cmp	DWORD PTR ___result__$73695[ebp], 0
	je	$LN14@ListArchiv
	mov	ecx, DWORD PTR ___result__$73695[ebp]
	mov	DWORD PTR $T74727[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74727[ebp]
	jmp	$LN78@ListArchiv
$LN14@ListArchiv:
; Line 1226
	lea	edx, DWORD PTR _st$73691[ebp+32]
	push	edx
	mov	eax, DWORD PTR _i$73653[ebp]
	push	eax
	mov	ecx, DWORD PTR _archive$73637[ebp]
	push	ecx
	call	?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z ; GetItemMTime
	mov	DWORD PTR ___result__$73698[ebp], eax
	cmp	DWORD PTR ___result__$73698[ebp], 0
	je	$LN13@ListArchiv
	mov	edx, DWORD PTR ___result__$73698[ebp]
	mov	DWORD PTR $T74728[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74728[ebp]
	jmp	$LN78@ListArchiv
$LN13@ListArchiv:
; Line 1228
	movzx	eax, BYTE PTR _fp$[ebp+56]
	test	eax, eax
	je	SHORT $LN12@ListArchiv
; Line 1229
	mov	ecx, DWORD PTR _stat2$73646[ebp+112]
	add	ecx, 1
	mov	edx, DWORD PTR _stat2$73646[ebp+116]
	adc	edx, 0
	mov	DWORD PTR _stat2$73646[ebp+112], ecx
	mov	DWORD PTR _stat2$73646[ebp+116], edx
; Line 1230
	jmp	SHORT $LN11@ListArchiv
$LN12@ListArchiv:
; Line 1231
	mov	DWORD PTR _st$73691[ebp+48], 1
	mov	DWORD PTR _st$73691[ebp+52], 0
$LN11@ListArchiv:
; Line 1232
	lea	eax, DWORD PTR _st$73691[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isAltStream$73672[ebp]
	push	ecx
	lea	ecx, DWORD PTR _stat2$73646[ebp]
	call	?GetStat@CListStat2@@QAEAAUCListStat@@_N@Z ; CListStat2::GetStat
	mov	ecx, eax
	call	?Update@CListStat@@QAEXABU1@@Z		; CListStat::Update
; Line 1234
	movzx	edx, BYTE PTR _isAltStream$73672[ebp]
	test	edx, edx
	je	SHORT $LN10@ListArchiv
	movzx	eax, BYTE PTR _showAltStreams$[ebp]
	test	eax, eax
	jne	SHORT $LN10@ListArchiv
; Line 1235
	jmp	$LN34@ListArchiv
$LN10@ListArchiv:
; Line 1236
	lea	ecx, DWORD PTR _st$73691[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$73653[ebp]
	push	edx
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintItemInfo@CFieldPrinter@@QAEJIABUCListStat@@@Z ; CFieldPrinter::PrintItemInfo
	mov	DWORD PTR ___result__$73704[ebp], eax
	cmp	DWORD PTR ___result__$73704[ebp], 0
	je	$LN9@ListArchiv
	mov	eax, DWORD PTR ___result__$73704[ebp]
	mov	DWORD PTR $T74729[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74729[ebp]
	jmp	$LN78@ListArchiv
$LN9@ListArchiv:
; Line 1237
	jmp	$LN34@ListArchiv
$LN33@ListArchiv:
; Line 1239
	lea	ecx, DWORD PTR _stat2$73646[ebp]
	call	?GetNumStreams@CListStat2@@QBE?B_KXZ	; CListStat2::GetNumStreams
	mov	DWORD PTR _numStreams$73707[ebp], eax
	mov	DWORD PTR _numStreams$73707[ebp+4], edx
; Line 1242
	movzx	ecx, BYTE PTR _stdInMode$[ebp]
	test	ecx, ecx
	jne	$LN8@ListArchiv
	movzx	edx, BYTE PTR _stat2$73646[ebp+24]
	test	edx, edx
	jne	$LN8@ListArchiv
	movzx	eax, BYTE PTR _stat2$73646[ebp+80]
	test	eax, eax
	jne	$LN8@ListArchiv
; Line 1244
	lea	ecx, DWORD PTR _arcLink$73430[ebp+12]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	test	eax, eax
	je	SHORT $LN7@ListArchiv
; Line 1245
	mov	ecx, DWORD PTR _arcPackSize$73421[ebp]
	add	ecx, DWORD PTR _arcLink$73430[ebp+24]
	mov	edx, DWORD PTR _arcPackSize$73421[ebp+4]
	adc	edx, DWORD PTR _arcLink$73430[ebp+28]
	mov	DWORD PTR _arcPackSize$73421[ebp], ecx
	mov	DWORD PTR _arcPackSize$73421[ebp+4], edx
$LN7@ListArchiv:
; Line 1246
	mov	eax, DWORD PTR _numStreams$73707[ebp]
	or	eax, DWORD PTR _numStreams$73707[ebp+4]
	jne	SHORT $LN80@ListArchiv
	mov	DWORD PTR tv624[ebp], 0
	mov	DWORD PTR tv624[ebp+4], 0
	jmp	SHORT $LN81@ListArchiv
$LN80@ListArchiv:
	mov	ecx, DWORD PTR _arcPackSize$73421[ebp]
	mov	DWORD PTR tv624[ebp], ecx
	mov	edx, DWORD PTR _arcPackSize$73421[ebp+4]
	mov	DWORD PTR tv624[ebp+4], edx
$LN81@ListArchiv:
	mov	eax, DWORD PTR tv624[ebp+4]
	push	eax
	mov	ecx, DWORD PTR tv624[ebp]
	push	ecx
	lea	ecx, DWORD PTR _stat2$73646[ebp+16]
	call	?Add@CListUInt64Def@@QAEX_K@Z		; CListUInt64Def::Add
$LN8@ListArchiv:
; Line 1249
	lea	ecx, DWORD PTR _stat2$73646[ebp]
	call	?SetSizeDefIfNoFiles@CListStat@@QAEXXZ	; CListStat::SetSizeDefIfNoFiles
; Line 1250
	lea	ecx, DWORD PTR _stat2$73646[ebp+56]
	call	?SetSizeDefIfNoFiles@CListStat@@QAEXXZ	; CListStat::SetSizeDefIfNoFiles
; Line 1252
	movzx	edx, BYTE PTR _enableHeaders$[ebp]
	test	edx, edx
	je	SHORT $LN6@ListArchiv
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	jne	SHORT $LN6@ListArchiv
; Line 1254
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintTitleLines@CFieldPrinter@@QAEXXZ	; CFieldPrinter::PrintTitleLines
; Line 1255
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1256
	lea	ecx, DWORD PTR _stat2$73646[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintSum@CFieldPrinter@@QAEXABUCListStat2@@@Z ; CFieldPrinter::PrintSum
$LN6@ListArchiv:
; Line 1259
	movzx	edx, BYTE PTR _enableHeaders$[ebp]
	test	edx, edx
	je	SHORT $LN5@ListArchiv
; Line 1261
	cmp	DWORD PTR _arcLink$73430[ebp+60], 0
	jl	SHORT $LN5@ListArchiv
; Line 1263
	push	OFFSET $SG73713
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 1264
	lea	ecx, DWORD PTR _arcLink$73430[ebp+36]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	push	OFFSET $SG73714
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	call	?PrintPropPair@@YGXAAVCStdOutStream@@PBDPB_W@Z ; PrintPropPair
; Line 1265
	push	0
	mov	eax, DWORD PTR _arcLink$73430[ebp+60]
	push	eax
	mov	ecx, DWORD PTR _codecs$[ebp]
	add	ecx, 8
	call	??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z ; CObjectVector<CArcInfoEx>::operator[]
	add	eax, 12					; 0000000cH
	push	eax
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	call	?PrintArcTypeError@@YGXAAVCStdOutStream@@ABVUString@@_N@Z ; PrintArcTypeError
$LN5@ListArchiv:
; Line 1269
	lea	ecx, DWORD PTR _stat2$73646[ebp]
	push	ecx
	lea	ecx, DWORD PTR _stat2total$[ebp]
	call	?Update@CListStat2@@QAEXABU1@@Z		; CListStat2::Update
; Line 1271
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	?Flush@CStdOutStream@@QAE_NXZ		; CStdOutStream::Flush
; Line 1272
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _item$73651[ebp]
	call	??1CReadArcItem@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _options$73432[ebp]
	call	??1COpenOptions@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	call	??1COpenCallbackConsole@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	call	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
	jmp	$LN72@ListArchiv
$LN71@ListArchiv:
; Line 1274
	movzx	edx, BYTE PTR _enableHeaders$[ebp]
	test	edx, edx
	je	$LN3@ListArchiv
	movzx	eax, BYTE PTR _techMode$[ebp]
	test	eax, eax
	jne	$LN3@ListArchiv
	mov	ecx, DWORD PTR _arcPaths$[ebp]
	call	?Size@?$CObjectVector@VUString@@@@QBEIXZ ; CObjectVector<UString>::Size
	cmp	eax, 1
	ja	SHORT $LN2@ListArchiv
	cmp	DWORD PTR _numVolumes$[ebp+4], 0
	ja	SHORT $LN2@ListArchiv
	cmp	DWORD PTR _numVolumes$[ebp], 1
	jbe	$LN3@ListArchiv
$LN2@ListArchiv:
; Line 1276
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1277
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintTitleLines@CFieldPrinter@@QAEXXZ	; CFieldPrinter::PrintTitleLines
; Line 1278
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1279
	lea	ecx, DWORD PTR _stat2total$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fp$[ebp]
	call	?PrintSum@CFieldPrinter@@QAEXABUCListStat2@@@Z ; CFieldPrinter::PrintSum
; Line 1280
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, OFFSET ?g_StdOut@@3VCStdOutStream@@A ; g_StdOut
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 1281
	mov	edx, DWORD PTR _numArcs$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _numArcs$[ebp]
	push	eax
	push	OFFSET $SG73717
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	call	?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@PBD_K@Z ; PrintPropNameAndNumber
; Line 1282
	mov	ecx, DWORD PTR _numVolumes$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _numVolumes$[ebp]
	push	edx
	push	OFFSET $SG73718
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	call	?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@PBD_K@Z ; PrintPropNameAndNumber
; Line 1283
	mov	eax, DWORD PTR _totalArcSizes$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _totalArcSizes$[ebp]
	push	ecx
	push	OFFSET $SG73719
	push	OFFSET ?g_StdOut@@3VCStdOutStream@@A	; g_StdOut
	call	?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@PBD_K@Z ; PrintPropNameAndNumber
$LN3@ListArchiv:
; Line 1286
	mov	edx, DWORD PTR _numErrors$[ebp]
	mov	DWORD PTR tv1188[ebp], edx
	mov	eax, DWORD PTR tv1188[ebp]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN1@ListArchiv
	mov	ecx, DWORD PTR tv1188[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN1@ListArchiv
	cmp	DWORD PTR _lastError$[ebp], 0
	je	SHORT $LN1@ListArchiv
; Line 1287
	mov	edx, DWORD PTR _lastError$[ebp]
	mov	DWORD PTR $T74732[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74732[ebp]
	jmp	SHORT $LN78@ListArchiv
$LN1@ListArchiv:
; Line 1289
	mov	DWORD PTR $T74733[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	call	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fp$[ebp]
	call	??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR $T74733[ebp]
$LN78@ListArchiv:
; Line 1290
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN110@ListArchiv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 1312				; 00000520H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
	npad	1
$LN110@ListArchiv:
	DD	15					; 0000000fH
	DD	$LN109@ListArchiv
$LN109@ListArchiv:
	DD	-92					; ffffffa4H
	DD	72					; 00000048H
	DD	$LN93@ListArchiv
	DD	-220					; ffffff24H
	DD	120					; 00000078H
	DD	$LN94@ListArchiv
	DD	-232					; ffffff18H
	DD	4
	DD	$LN95@ListArchiv
	DD	-340					; fffffeacH
	DD	56					; 00000038H
	DD	$LN96@ListArchiv
	DD	-448					; fffffe40H
	DD	96					; 00000060H
	DD	$LN97@ListArchiv
	DD	-664					; fffffd68H
	DD	208					; 000000d0H
	DD	$LN98@ListArchiv
	DD	-760					; fffffd08H
	DD	88					; 00000058H
	DD	$LN99@ListArchiv
	DD	-928					; fffffc60H
	DD	120					; 00000078H
	DD	$LN100@ListArchiv
	DD	-940					; fffffc54H
	DD	4
	DD	$LN101@ListArchiv
	DD	-1016					; fffffc08H
	DD	64					; 00000040H
	DD	$LN102@ListArchiv
	DD	-1036					; fffffbf4H
	DD	12					; 0000000cH
	DD	$LN103@ListArchiv
	DD	-1057					; fffffbdfH
	DD	1
	DD	$LN104@ListArchiv
	DD	-1073					; fffffbcfH
	DD	1
	DD	$LN105@ListArchiv
	DD	-1097					; fffffbb7H
	DD	1
	DD	$LN106@ListArchiv
	DD	-1164					; fffffb74H
	DD	56					; 00000038H
	DD	$LN107@ListArchiv
$LN107@ListArchiv:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN106@ListArchiv:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN105@ListArchiv:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN104@ListArchiv:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	117					; 00000075H
	DB	120					; 00000078H
	DB	0
$LN103@ListArchiv:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN102@ListArchiv:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN101@ListArchiv:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	0
$LN100@ListArchiv:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN99@ListArchiv:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN98@ListArchiv:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN97@ListArchiv:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN96@ListArchiv:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	0
$LN95@ListArchiv:
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	0
$LN94@ListArchiv:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN93@ListArchiv:
	DB	102					; 00000066H
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$0:
	lea	ecx, DWORD PTR _fp$[ebp]
	jmp	??1CFieldPrinter@@QAE@XZ
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$1:
	lea	ecx, DWORD PTR _skipArcs$[ebp]
	jmp	??1?$CObjArray@_N@@QAE@XZ		; CObjArray<bool>::~CObjArray<bool>
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$2:
	lea	ecx, DWORD PTR _fi$73423[ebp]
	jmp	??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$3:
	lea	ecx, DWORD PTR $T74713[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$4:
	lea	ecx, DWORD PTR _arcLink$73430[ebp]
	jmp	??1CArchiveLink@@QAE@XZ			; CArchiveLink::~CArchiveLink
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$5:
	lea	ecx, DWORD PTR _openCallback$73431[ebp]
	jmp	??1COpenCallbackConsole@@QAE@XZ
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$6:
	lea	ecx, DWORD PTR _options$73432[ebp]
	jmp	??1COpenOptions@@QAE@XZ
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$7:
	lea	ecx, DWORD PTR $T74715[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$8:
	lea	ecx, DWORD PTR _item$73651[ebp]
	jmp	??1CReadArcItem@@QAE@XZ
__unwindfunclet$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z$9:
	lea	ecx, DWORD PTR _pathParts$73652[ebp]
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__ehhandler$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ListArchives@@YGJPAVCCodecs@@ABV?$CObjectVector@UCOpenType@@@@ABV?$CRecordVector@H@@_NAAV?$CObjectVector@VUString@@@@433ABVCCensorNode@NWildcard@@33AA_NAAVUString@@PBV?$CObjectVector@UCProperty@@@@AA_K9@Z ENDP ; ListArchives
; Function compile flags: /Odtp /RTCsu
;	COMDAT _HRESULT_FROM_WIN32@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32@4 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
_HRESULT_FROM_WIN32@4 ENDP
_TEXT	ENDS
PUBLIC	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ PROC	; NWindows::NFile::NFind::CFileInfoBase::IsDir, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\windows\filefind.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDir@CFileInfoBase@NFind@NFile@NWindows@@QBE_NXZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::IsDir
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mask$ = 8						; size = 4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z PROC ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	and	eax, DWORD PTR _mask$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?MatchesMask@CFileInfoBase@NFind@NFile@NWindows@@ABE_NI@Z ENDP ; NWindows::NFile::NFind::CFileInfoBase::MatchesMask
_TEXT	ENDS
PUBLIC	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::CFileInfo
_TEXT	ENDS
EXTRN	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ:PROC ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ PROC	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearBase@CFileInfoBase@NFind@NFile@NWindows@@QAEXXZ ; NWindows::NFile::NFind::CFileInfoBase::ClearBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CFileInfoBase@NFind@NFile@NWindows@@QAE@XZ ENDP	; NWindows::NFile::NFind::CFileInfoBase::CFileInfoBase
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ PROC		; NWindows::NFile::NFind::CFileInfo::~CFileInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CFileInfo@NFind@NFile@NWindows@@QAE@XZ ENDP		; NWindows::NFile::NFind::CFileInfo::~CFileInfo
_TEXT	ENDS
PUBLIC	??0COpenType@@QAE@XZ				; COpenType::COpenType
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0COpenOptions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COpenOptions@@QAE@XZ PROC				; COpenOptions::COpenOptions, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\openarchive.h
; Line 140
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0COpenType@@QAE@XZ			; COpenType::COpenType
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+52], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+68], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COpenOptions@@QAE@XZ ENDP				; COpenOptions::COpenOptions
_TEXT	ENDS
PUBLIC	??0COpenSpecFlags@@QAE@XZ			; COpenSpecFlags::COpenSpecFlags
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0COpenType@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COpenType@@QAE@XZ PROC				; COpenType::COpenType, COMDAT
; _this$ = ecx
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0COpenSpecFlags@@QAE@XZ		; COpenSpecFlags::COpenSpecFlags
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 7
	call	??0COpenSpecFlags@@QAE@XZ		; COpenSpecFlags::COpenSpecFlags
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 10					; 0000000aH
	call	??0COpenSpecFlags@@QAE@XZ		; COpenSpecFlags::COpenSpecFlags
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 13					; 0000000dH
	call	??0COpenSpecFlags@@QAE@XZ		; COpenSpecFlags::COpenSpecFlags
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+16], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+17], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+18], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+19], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+21], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 1
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+6], 1
; Line 104
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+7], 1
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+14], 1
; Line 107
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+15], 1
; Line 108
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+13], 1
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COpenType@@QAE@XZ ENDP				; COpenType::COpenType
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COpenSpecFlags@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COpenSpecFlags@@QAE@XZ PROC				; COpenSpecFlags::COpenSpecFlags, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+2], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COpenSpecFlags@@QAE@XZ ENDP				; COpenSpecFlags::COpenSpecFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AreThereErrors@CArcErrorInfo@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?AreThereErrors@CArcErrorInfo@@QBE_NXZ PROC		; CArcErrorInfo::AreThereErrors, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN3@AreThereEr
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	test	edx, edx
	jne	SHORT $LN3@AreThereEr
	mov	DWORD PTR tv69[ebp], 0
	jmp	SHORT $LN4@AreThereEr
$LN3@AreThereEr:
	mov	DWORD PTR tv69[ebp], 1
$LN4@AreThereEr:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?AreThereErrors@CArcErrorInfo@@QBE_NXZ ENDP		; CArcErrorInfo::AreThereErrors
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AreThereWarnings@CArcErrorInfo@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?AreThereWarnings@CArcErrorInfo@@QBE_NXZ PROC		; CArcErrorInfo::AreThereWarnings, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@AreThereWa
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedTailWarning@CArcErrorInfo@@QBE_NXZ	; CArcErrorInfo::NeedTailWarning
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@AreThereWa
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@AreThereWa
$LN3@AreThereWa:
	mov	DWORD PTR tv70[ebp], 1
$LN4@AreThereWa:
	mov	al, BYTE PTR tv70[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AreThereWarnings@CArcErrorInfo@@QBE_NXZ ENDP		; CArcErrorInfo::AreThereWarnings
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CReadArcItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CReadArcItem@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CReadArcItem@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CReadArcItem@@QAE@XZ$2
__ehfuncinfo$??0CReadArcItem@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CReadArcItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CReadArcItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CReadArcItem@@QAE@XZ PROC				; CReadArcItem::CReadArcItem, COMDAT
; _this$ = ecx
; Line 248
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CReadArcItem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0UString@@QAE@XZ			; UString::UString
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+49], 0
; Line 255
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+56], 0
; Line 256
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], -1
; Line 258
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CReadArcItem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CReadArcItem@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??0CReadArcItem@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CReadArcItem@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CReadArcItem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CReadArcItem@@QAE@XZ ENDP				; CReadArcItem::CReadArcItem
PUBLIC	??1?$CObjectVector@VCArc@@@@QAE@XZ		; CObjectVector<CArc>::~CObjectVector<CArc>
PUBLIC	??0CArcErrorInfo@@QAE@XZ			; CArcErrorInfo::CArcErrorInfo
PUBLIC	??0?$CObjectVector@VCArc@@@@QAE@XZ		; CObjectVector<CArc>::CObjectVector<CArc>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CArchiveLink@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CArchiveLink@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CArchiveLink@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CArchiveLink@@QAE@XZ$2
__ehfuncinfo$??0CArchiveLink@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CArchiveLink@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CArchiveLink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CArchiveLink@@QAE@XZ PROC				; CArchiveLink::CArchiveLink, COMDAT
; _this$ = ecx
; Line 386
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CArchiveLink@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@VCArc@@@@QAE@XZ	; CObjectVector<CArc>::CObjectVector<CArc>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::CObjectVector<UString>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+32], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+33], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0CArcErrorInfo@@QAE@XZ		; CArcErrorInfo::CArcErrorInfo
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CArchiveLink@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@VCArc@@@@QAE@XZ	; CObjectVector<CArc>::~CObjectVector<CArc>
__unwindfunclet$??0CArchiveLink@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??0CArchiveLink@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CArchiveLink@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CArchiveLink@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CArchiveLink@@QAE@XZ ENDP				; CArchiveLink::CArchiveLink
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CArcErrorInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CArcErrorInfo@@QAE@XZ$0
__ehfuncinfo$??0CArcErrorInfo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CArcErrorInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CArcErrorInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CArcErrorInfo@@QAE@XZ PROC				; CArcErrorInfo::CArcErrorInfo, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CArcErrorInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+1], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+2], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+3], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CArcErrorInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CArcErrorInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CArcErrorInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CArcErrorInfo@@QAE@XZ ENDP				; CArcErrorInfo::CArcErrorInfo
PUBLIC	??1CArcErrorInfo@@QAE@XZ			; CArcErrorInfo::~CArcErrorInfo
EXTRN	?Release@CArchiveLink@@QAEXXZ:PROC		; CArchiveLink::Release
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CArchiveLink@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CArchiveLink@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CArchiveLink@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CArchiveLink@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CArchiveLink@@QAE@XZ$3
__ehfuncinfo$??1CArchiveLink@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CArchiveLink@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CArchiveLink@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CArchiveLink@@QAE@XZ PROC				; CArchiveLink::~CArchiveLink, COMDAT
; _this$ = ecx
; Line 391
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CArchiveLink@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Release@CArchiveLink@@QAEXXZ		; CArchiveLink::Release
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1CArcErrorInfo@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CObjectVector@VCArc@@@@QAE@XZ	; CObjectVector<CArc>::~CObjectVector<CArc>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CArchiveLink@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@VCArc@@@@QAE@XZ	; CObjectVector<CArc>::~CObjectVector<CArc>
__unwindfunclet$??1CArchiveLink@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??1CArchiveLink@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CArchiveLink@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1CArcErrorInfo@@QAE@XZ
__ehhandler$??1CArchiveLink@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CArchiveLink@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CArchiveLink@@QAE@XZ ENDP				; CArchiveLink::~CArchiveLink
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CArcErrorInfo@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CArcErrorInfo@@QAE@XZ$0
__ehfuncinfo$??1CArcErrorInfo@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CArcErrorInfo@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CArcErrorInfo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CArcErrorInfo@@QAE@XZ PROC				; CArcErrorInfo::~CArcErrorInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CArcErrorInfo@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CArcErrorInfo@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CArcErrorInfo@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CArcErrorInfo@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CArcErrorInfo@@QAE@XZ ENDP				; CArcErrorInfo::~CArcErrorInfo
EXTRN	?g_BreakCounter@NConsoleClose@@3IA:DWORD	; NConsoleClose::g_BreakCounter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?TestBreakSignal@NConsoleClose@@YG_NXZ
_TEXT	SEGMENT
?TestBreakSignal@NConsoleClose@@YG_NXZ PROC		; NConsoleClose::TestBreakSignal, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\consoleclose.h
; Line 11
	push	ebp
	mov	ebp, esp
; Line 15
	xor	eax, eax
	cmp	DWORD PTR ?g_BreakCounter@NConsoleClose@@3IA, 0 ; NConsoleClose::g_BreakCounter
	setne	al
; Line 17
	pop	ebp
	ret	0
?TestBreakSignal@NConsoleClose@@YG_NXZ ENDP		; NConsoleClose::TestBreakSignal
_TEXT	ENDS
PUBLIC	??0CPercentPrinter@@QAE@I@Z			; CPercentPrinter::CPercentPrinter
PUBLIC	??_7COpenCallbackConsole@@6B@			; COpenCallbackConsole::`vftable'
PUBLIC	??0IOpenCallbackUI@@QAE@XZ			; IOpenCallbackUI::IOpenCallbackUI
PUBLIC	??_R4COpenCallbackConsole@@6B@			; COpenCallbackConsole::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCOpenCallbackConsole@@@8		; COpenCallbackConsole `RTTI Type Descriptor'
PUBLIC	??_R3COpenCallbackConsole@@8			; COpenCallbackConsole::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2COpenCallbackConsole@@8			; COpenCallbackConsole::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@COpenCallbackConsole@@8		; COpenCallbackConsole::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IOpenCallbackUI@@8		; IOpenCallbackUI::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIOpenCallbackUI@@@8			; IOpenCallbackUI `RTTI Type Descriptor'
PUBLIC	??_R3IOpenCallbackUI@@8				; IOpenCallbackUI::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IOpenCallbackUI@@8				; IOpenCallbackUI::`RTTI Base Class Array'
EXTRN	??1CPercentPrinter@@QAE@XZ:PROC			; CPercentPrinter::~CPercentPrinter
EXTRN	?Open_CheckBreak@COpenCallbackConsole@@UAEJXZ:PROC ; COpenCallbackConsole::Open_CheckBreak
EXTRN	?Open_SetTotal@COpenCallbackConsole@@UAEJPB_K0@Z:PROC ; COpenCallbackConsole::Open_SetTotal
EXTRN	?Open_SetCompleted@COpenCallbackConsole@@UAEJPB_K0@Z:PROC ; COpenCallbackConsole::Open_SetCompleted
EXTRN	?Open_Finished@COpenCallbackConsole@@UAEJXZ:PROC ; COpenCallbackConsole::Open_Finished
EXTRN	?Open_CryptoGetTextPassword@COpenCallbackConsole@@UAEJPAPA_W@Z:PROC ; COpenCallbackConsole::Open_CryptoGetTextPassword
;	COMDAT ??_R2IOpenCallbackUI@@8
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\opencallbackconsole.h
rdata$r	SEGMENT
??_R2IOpenCallbackUI@@8 DD FLAT:??_R1A@?0A@EA@IOpenCallbackUI@@8 ; IOpenCallbackUI::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IOpenCallbackUI@@8
rdata$r	SEGMENT
??_R3IOpenCallbackUI@@8 DD 00H				; IOpenCallbackUI::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IOpenCallbackUI@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIOpenCallbackUI@@@8
_DATA	SEGMENT
??_R0?AUIOpenCallbackUI@@@8 DD FLAT:??_7type_info@@6B@	; IOpenCallbackUI `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIOpenCallbackUI@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IOpenCallbackUI@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IOpenCallbackUI@@8 DD FLAT:??_R0?AUIOpenCallbackUI@@@8 ; IOpenCallbackUI::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IOpenCallbackUI@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@COpenCallbackConsole@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@COpenCallbackConsole@@8 DD FLAT:??_R0?AVCOpenCallbackConsole@@@8 ; COpenCallbackConsole::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3COpenCallbackConsole@@8
rdata$r	ENDS
;	COMDAT ??_R2COpenCallbackConsole@@8
rdata$r	SEGMENT
??_R2COpenCallbackConsole@@8 DD FLAT:??_R1A@?0A@EA@COpenCallbackConsole@@8 ; COpenCallbackConsole::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IOpenCallbackUI@@8
rdata$r	ENDS
;	COMDAT ??_R3COpenCallbackConsole@@8
rdata$r	SEGMENT
??_R3COpenCallbackConsole@@8 DD 00H			; COpenCallbackConsole::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2COpenCallbackConsole@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCOpenCallbackConsole@@@8
_DATA	SEGMENT
??_R0?AVCOpenCallbackConsole@@@8 DD FLAT:??_7type_info@@6B@ ; COpenCallbackConsole `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCOpenCallbackConsole@@', 00H
_DATA	ENDS
;	COMDAT ??_R4COpenCallbackConsole@@6B@
rdata$r	SEGMENT
??_R4COpenCallbackConsole@@6B@ DD 00H			; COpenCallbackConsole::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCOpenCallbackConsole@@@8
	DD	FLAT:??_R3COpenCallbackConsole@@8
rdata$r	ENDS
;	COMDAT ??_7COpenCallbackConsole@@6B@
CONST	SEGMENT
??_7COpenCallbackConsole@@6B@ DD FLAT:??_R4COpenCallbackConsole@@6B@ ; COpenCallbackConsole::`vftable'
	DD	FLAT:?Open_CheckBreak@COpenCallbackConsole@@UAEJXZ
	DD	FLAT:?Open_SetTotal@COpenCallbackConsole@@UAEJPB_K0@Z
	DD	FLAT:?Open_SetCompleted@COpenCallbackConsole@@UAEJPB_K0@Z
	DD	FLAT:?Open_Finished@COpenCallbackConsole@@UAEJXZ
	DD	FLAT:?Open_CryptoGetTextPassword@COpenCallbackConsole@@UAEJPAPA_W@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0COpenCallbackConsole@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0COpenCallbackConsole@@QAE@XZ$0
__ehfuncinfo$??0COpenCallbackConsole@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0COpenCallbackConsole@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0COpenCallbackConsole@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0COpenCallbackConsole@@QAE@XZ PROC			; COpenCallbackConsole::COpenCallbackConsole, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0COpenCallbackConsole@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IOpenCallbackUI@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7COpenCallbackConsole@@6B@
	push	200					; 000000c8H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CPercentPrinter@@QAE@I@Z		; CPercentPrinter::CPercentPrinter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+192], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+193], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+194], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+195], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0COpenCallbackConsole@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CPercentPrinter@@QAE@XZ		; CPercentPrinter::~CPercentPrinter
__ehhandler$??0COpenCallbackConsole@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0COpenCallbackConsole@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0COpenCallbackConsole@@QAE@XZ ENDP			; COpenCallbackConsole::COpenCallbackConsole
PUBLIC	??1CPercentPrinterState@@QAE@XZ			; CPercentPrinterState::~CPercentPrinterState
PUBLIC	??0CPercentPrinterState@@QAE@XZ			; CPercentPrinterState::CPercentPrinterState
;	COMDAT xdata$x
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\percentprinter.h
xdata$x	SEGMENT
__ehfuncinfo$??0CPercentPrinter@@QAE@I@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0CPercentPrinter@@QAE@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CPercentPrinter@@QAE@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$5
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CPercentPrinter@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_tickStep$ = 8						; size = 4
??0CPercentPrinter@@QAE@I@Z PROC			; CPercentPrinter::CPercentPrinter, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CPercentPrinter@@QAE@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CPercentPrinterState@@QAE@XZ		; CPercentPrinterState::CPercentPrinterState
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tickStep$[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0CPercentPrinterState@@QAE@XZ		; CPercentPrinterState::CPercentPrinterState
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 152				; 00000098H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+168], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+172], 79			; 0000004fH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CPercentPrinterState@@QAE@XZ
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CPercentPrinter@@QAE@I@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	jmp	??1CPercentPrinterState@@QAE@XZ
__ehhandler$??0CPercentPrinter@@QAE@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CPercentPrinter@@QAE@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CPercentPrinter@@QAE@I@Z ENDP			; CPercentPrinter::CPercentPrinter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CPercentPrinterState@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CPercentPrinterState@@QAE@XZ$0
__ehfuncinfo$??0CPercentPrinterState@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CPercentPrinterState@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CPercentPrinterState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CPercentPrinterState@@QAE@XZ PROC			; CPercentPrinterState::CPercentPrinterState, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CPercentPrinterState@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], -1
	mov	DWORD PTR [ecx+12], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	DWORD PTR [edx+20], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CPercentPrinterState@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??0CPercentPrinterState@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CPercentPrinterState@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CPercentPrinterState@@QAE@XZ ENDP			; CPercentPrinterState::CPercentPrinterState
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CPercentPrinterState@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CPercentPrinterState@@QAE@XZ$0
__ehfuncinfo$??1CPercentPrinterState@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CPercentPrinterState@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CPercentPrinterState@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CPercentPrinterState@@QAE@XZ PROC			; CPercentPrinterState::~CPercentPrinterState, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CPercentPrinterState@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CPercentPrinterState@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$??1CPercentPrinterState@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CPercentPrinterState@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CPercentPrinterState@@QAE@XZ ENDP			; CPercentPrinterState::~CPercentPrinterState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_outStream$ = 8						; size = 4
_errorStream$ = 12					; size = 4
_percentStream$ = 16					; size = 4
?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z PROC ; COpenCallbackConsole::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\opencallbackconsole.h
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _outStream$[ebp]
	mov	DWORD PTR [eax+184], ecx
; Line 52
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _errorStream$[ebp]
	mov	DWORD PTR [edx+188], eax
; Line 53
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _percentStream$[ebp]
	mov	DWORD PTR [ecx+172], edx
; Line 54
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Init@COpenCallbackConsole@@QAEXPAVCStdOutStream@@00@Z ENDP ; COpenCallbackConsole::Init
_TEXT	ENDS
PUBLIC	??_7IOpenCallbackUI@@6B@			; IOpenCallbackUI::`vftable'
PUBLIC	??_R4IOpenCallbackUI@@6B@			; IOpenCallbackUI::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4IOpenCallbackUI@@6B@
rdata$r	SEGMENT
??_R4IOpenCallbackUI@@6B@ DD 00H			; IOpenCallbackUI::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUIOpenCallbackUI@@@8
	DD	FLAT:??_R3IOpenCallbackUI@@8
rdata$r	ENDS
;	COMDAT ??_7IOpenCallbackUI@@6B@
CONST	SEGMENT
??_7IOpenCallbackUI@@6B@ DD FLAT:??_R4IOpenCallbackUI@@6B@ ; IOpenCallbackUI::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0IOpenCallbackUI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IOpenCallbackUI@@QAE@XZ PROC				; IOpenCallbackUI::IOpenCallbackUI, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IOpenCallbackUI@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IOpenCallbackUI@@QAE@XZ ENDP				; IOpenCallbackUI::IOpenCallbackUI
_TEXT	ENDS
PUBLIC	??0CListFileTimeDef@@QAE@XZ			; CListFileTimeDef::CListFileTimeDef
PUBLIC	??0CListUInt64Def@@QAE@XZ			; CListUInt64Def::CListUInt64Def
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CListStat@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CListStat@@QAE@XZ PROC				; CListStat::CListStat, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 328
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CListUInt64Def@@QAE@XZ		; CListUInt64Def::CListUInt64Def
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CListUInt64Def@@QAE@XZ		; CListUInt64Def::CListUInt64Def
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0CListFileTimeDef@@QAE@XZ		; CListFileTimeDef::CListFileTimeDef
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CListStat@@QAE@XZ ENDP				; CListStat::CListStat
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CListUInt64Def@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CListUInt64Def@@QAE@XZ PROC				; CListUInt64Def::CListUInt64Def, COMDAT
; _this$ = ecx
; Line 300
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CListUInt64Def@@QAE@XZ ENDP				; CListUInt64Def::CListUInt64Def
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CListFileTimeDef@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CListFileTimeDef@@QAE@XZ PROC			; CListFileTimeDef::CListFileTimeDef, COMDAT
; _this$ = ecx
; Line 310
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CListFileTimeDef@@QAE@XZ ENDP			; CListFileTimeDef::CListFileTimeDef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetSizeDefIfNoFiles@CListStat@@QAEXXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?SetSizeDefIfNoFiles@CListStat@@QAEXXZ PROC		; CListStat::SetSizeDefIfNoFiles, COMDAT
; _this$ = ecx
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [ecx+48]
	or	eax, DWORD PTR [edx+52]
	jne	SHORT $LN2@SetSizeDef
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+8], 1
$LN2@SetSizeDef:
	mov	esp, ebp
	pop	ebp
	ret	0
?SetSizeDefIfNoFiles@CListStat@@QAEXXZ ENDP		; CListStat::SetSizeDefIfNoFiles
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CListStat2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CListStat2@@QAE@XZ PROC				; CListStat2::CListStat2, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CListStat@@QAE@XZ			; CListStat::CListStat
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0CListStat@@QAE@XZ			; CListStat::CListStat
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
	mov	DWORD PTR [eax+116], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CListStat2@@QAE@XZ ENDP				; CListStat2::CListStat2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Update@CListStat2@@QAEXABU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_st$ = 8						; size = 4
?Update@CListStat2@@QAEXABU1@@Z PROC			; CListStat2::Update, COMDAT
; _this$ = ecx
; Line 348
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 349
	mov	eax, DWORD PTR _st$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Update@CListStat@@QAEXABU1@@Z		; CListStat::Update
; Line 350
	mov	ecx, DWORD PTR _st$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Update@CListStat@@QAEXABU1@@Z		; CListStat::Update
; Line 351
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _st$[ebp]
	mov	ecx, DWORD PTR [edx+112]
	add	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR [edx+116]
	adc	edx, DWORD PTR [eax+116]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], ecx
	mov	DWORD PTR [eax+116], edx
; Line 352
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Update@CListStat2@@QAEXABU1@@Z ENDP			; CListStat2::Update
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetNumStreams@CListStat2@@QBE?B_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumStreams@CListStat2@@QBE?B_KXZ PROC		; CListStat2::GetNumStreams, COMDAT
; _this$ = ecx
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	add	edx, DWORD PTR [ecx+104]
	mov	esi, DWORD PTR [eax+52]
	adc	esi, DWORD PTR [ecx+108]
	mov	eax, edx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumStreams@CListStat2@@QBE?B_KXZ ENDP		; CListStat2::GetNumStreams
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetStat@CListStat2@@QAEAAUCListStat@@_N@Z
_TEXT	SEGMENT
tv67 = -12						; size = 4
$T74919 = -8						; size = 4
_this$ = -4						; size = 4
_altStreamsMode$ = 8					; size = 1
?GetStat@CListStat2@@QAEAAUCListStat@@_N@Z PROC		; CListStat2::GetStat, COMDAT
; _this$ = ecx
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _altStreamsMode$[ebp]
	test	eax, eax
	je	SHORT $LN3@GetStat
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	mov	DWORD PTR tv67[ebp], ecx
	jmp	SHORT $LN4@GetStat
$LN3@GetStat:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv67[ebp], edx
$LN4@GetStat:
	mov	eax, DWORD PTR tv67[ebp]
	mov	DWORD PTR $T74919[ebp], eax
	mov	eax, DWORD PTR $T74919[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetStat@CListStat2@@QAEAAUCListStat@@_N@Z ENDP		; CListStat2::GetStat
_TEXT	ENDS
PUBLIC	?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z ; ConvertPropVariantToUInt64
xdata$x	SEGMENT
__unwindtable$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z$0
__ehfuncinfo$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74925 = -48						; size = 4
$T74924 = -44						; size = 4
___result__$73182 = -40					; size = 4
_prop$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_archive$ = 8						; size = 4
_index$ = 12						; size = 4
_propID$ = 16						; size = 4
_value$ = 20						; size = 4
?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z PROC ; GetUInt64Value
; Line 764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 765
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 766
	mov	ecx, DWORD PTR _value$[ebp]
	mov	BYTE PTR [ecx+8], 0
; Line 767
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 768
	mov	esi, esp
	lea	edx, DWORD PTR _prop$[ebp]
	push	edx
	mov	eax, DWORD PTR _propID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73182[ebp], eax
	cmp	DWORD PTR ___result__$73182[ebp], 0
	je	SHORT $LN1@GetUInt64V
	mov	eax, DWORD PTR ___result__$73182[ebp]
	mov	DWORD PTR $T74924[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74924[ebp]
	jmp	SHORT $LN2@GetUInt64V
$LN1@GetUInt64V:
; Line 769
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prop$[ebp]
	push	edx
	call	?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z ; ConvertPropVariantToUInt64
	mov	ecx, DWORD PTR _value$[ebp]
	mov	BYTE PTR [ecx+8], al
; Line 770
	mov	DWORD PTR $T74925[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74925[ebp]
$LN2@GetUInt64V:
; Line 771
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetUInt64V
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN8@GetUInt64V:
	DD	1
	DD	$LN7@GetUInt64V
$LN7@GetUInt64V:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN5@GetUInt64V
$LN5@GetUInt64V:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z$0:
	lea	ecx, DWORD PTR _prop$[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUInt64Value@@YGJPAUIInArchive@@IKAAUCListUInt64Def@@@Z ENDP ; GetUInt64Value
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T74935 = -4						; size = 4
_prop$ = 8						; size = 4
_value$ = 12						; size = 4
?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z PROC ; ConvertPropVariantToUInt64, COMDAT
; File c:\workspace\7z1505-src\cpp\windows\propvariantconv.h
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 19
	mov	eax, DWORD PTR _prop$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 21			; 00000015H
	ja	SHORT $LN1@ConvertPro
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN11@ConvertPro[edx]
	jmp	DWORD PTR $LN12@ConvertPro[eax*4]
$LN6@ConvertPro:
; Line 21
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+4], edx
	mov	al, 1
	jmp	SHORT $LN10@ConvertPro
$LN5@ConvertPro:
; Line 22
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	xor	edx, edx
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	al, 1
	jmp	SHORT $LN10@ConvertPro
$LN4@ConvertPro:
; Line 23
	mov	ecx, DWORD PTR _prop$[ebp]
	movzx	eax, WORD PTR [ecx+8]
	cdq
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	mov	al, 1
	jmp	SHORT $LN10@ConvertPro
$LN3@ConvertPro:
; Line 24
	mov	edx, DWORD PTR _prop$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	cdq
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	mov	al, 1
	jmp	SHORT $LN10@ConvertPro
$LN2@ConvertPro:
; Line 25
	xor	al, al
	jmp	SHORT $LN10@ConvertPro
$LN1@ConvertPro:
; Line 26
	mov	DWORD PTR $T74935[ebp], 151199		; 00024e9fH
	push	OFFSET __TI1H
	lea	edx, DWORD PTR $T74935[ebp]
	push	edx
	call	__CxxThrowException@8
$LN10@ConvertPro:
; Line 28
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN12@ConvertPro:
	DD	$LN2@ConvertPro
	DD	$LN3@ConvertPro
	DD	$LN4@ConvertPro
	DD	$LN5@ConvertPro
	DD	$LN6@ConvertPro
	DD	$LN1@ConvertPro
$LN11@ConvertPro:
	DB	0
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	1
	DB	2
	DB	3
	DB	5
	DB	4
?ConvertPropVariantToUInt64@@YG_NABUtagPROPVARIANT@@AA_K@Z ENDP ; ConvertPropVariantToUInt64
_TEXT	ENDS
xdata$x	SEGMENT
__unwindtable$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z$0
__ehfuncinfo$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T74942 = -52						; size = 4
$T74941 = -48						; size = 4
$T74940 = -44						; size = 4
___result__$73193 = -40					; size = 4
_prop$ = -32						; size = 16
__$EHRec$ = -12						; size = 12
_archive$ = 8						; size = 4
_index$ = 12						; size = 4
_t$ = 16						; size = 4
?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z PROC ; GetItemMTime
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\list.cpp
; Line 774
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 775
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], 0
; Line 776
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 777
	mov	edx, DWORD PTR _t$[ebp]
	mov	BYTE PTR [edx+8], 0
; Line 778
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??0CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::CPropVariant
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 779
	mov	esi, esp
	lea	eax, DWORD PTR _prop$[ebp]
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _archive$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _archive$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ___result__$73193[ebp], eax
	cmp	DWORD PTR ___result__$73193[ebp], 0
	je	SHORT $LN4@GetItemMTi
	mov	eax, DWORD PTR ___result__$73193[ebp]
	mov	DWORD PTR $T74940[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74940[ebp]
	jmp	SHORT $LN5@GetItemMTi
$LN4@GetItemMTi:
; Line 780
	movzx	ecx, WORD PTR _prop$[ebp]
	cmp	ecx, 64					; 00000040H
	jne	SHORT $LN3@GetItemMTi
; Line 782
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _prop$[ebp+8]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _prop$[ebp+12]
	mov	DWORD PTR [edx+4], ecx
; Line 783
	mov	edx, DWORD PTR _t$[ebp]
	mov	BYTE PTR [edx+8], 1
	jmp	SHORT $LN2@GetItemMTi
$LN3@GetItemMTi:
; Line 785
	movzx	eax, WORD PTR _prop$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetItemMTi
; Line 786
	mov	DWORD PTR $T74941[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74941[ebp]
	jmp	SHORT $LN5@GetItemMTi
$LN2@GetItemMTi:
; Line 787
	mov	DWORD PTR $T74942[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _prop$[ebp]
	call	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
	mov	eax, DWORD PTR $T74942[ebp]
$LN5@GetItemMTi:
; Line 788
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GetItemMTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN11@GetItemMTi:
	DD	1
	DD	$LN10@GetItemMTi
$LN10@GetItemMTi:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN8@GetItemMTi
$LN8@GetItemMTi:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z$0:
	lea	ecx, DWORD PTR _prop$[ebp]
	jmp	??1CPropVariant@NCOM@NWindows@@QAE@XZ	; NWindows::NCOM::CPropVariant::~CPropVariant
__ehhandler$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetItemMTime@@YGJPAUIInArchive@@IAAUCListFileTimeDef@@@Z ENDP ; GetItemMTime
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_so$ = 8						; size = 4
_name$ = 12						; size = 4
_val$ = 16						; size = 8
?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@PBD_K@Z PROC ; PrintPropNameAndNumber
; Line 791
	push	ebp
	mov	ebp, esp
; Line 792
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _val$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _val$[ebp]
	push	ecx
	push	OFFSET $SG73208
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@_K@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 793
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?PrintPropNameAndNumber@@YGXAAVCStdOutStream@@PBD_K@Z ENDP ; PrintPropNameAndNumber
_TEXT	ENDS
PUBLIC	??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ	; CObjectVector<CFieldInfo>::~CObjectVector<CFieldInfo>
PUBLIC	??0?$CObjectVector@UCFieldInfo@@@@QAE@XZ	; CObjectVector<CFieldInfo>::CObjectVector<CFieldInfo>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFieldPrinter@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFieldPrinter@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CFieldPrinter@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CFieldPrinter@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CFieldPrinter@@QAE@XZ$3
__ehfuncinfo$??0CFieldPrinter@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CFieldPrinter@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CFieldPrinter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFieldPrinter@@QAE@XZ PROC				; CFieldPrinter::CFieldPrinter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CObjectVector@UCFieldInfo@@@@QAE@XZ ; CObjectVector<CFieldInfo>::CObjectVector<CFieldInfo>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0AString@@QAE@XZ			; AString::AString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFieldPrinter@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ ; CObjectVector<CFieldInfo>::~CObjectVector<CFieldInfo>
__unwindfunclet$??0CFieldPrinter@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??0CFieldPrinter@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??0CFieldPrinter@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CFieldPrinter@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CFieldPrinter@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CFieldPrinter@@QAE@XZ ENDP				; CFieldPrinter::CFieldPrinter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CFieldPrinter@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CFieldPrinter@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CFieldPrinter@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CFieldPrinter@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CFieldPrinter@@QAE@XZ$3
__ehfuncinfo$??1CFieldPrinter@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CFieldPrinter@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CFieldPrinter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CFieldPrinter@@QAE@XZ PROC				; CFieldPrinter::~CFieldPrinter, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CFieldPrinter@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1AString@@QAE@XZ			; AString::~AString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ ; CObjectVector<CFieldInfo>::~CObjectVector<CFieldInfo>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CFieldPrinter@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ ; CObjectVector<CFieldInfo>::~CObjectVector<CFieldInfo>
__unwindfunclet$??1CFieldPrinter@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CFieldPrinter@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$??1CFieldPrinter@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CFieldPrinter@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CFieldPrinter@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CFieldPrinter@@QAE@XZ ENDP				; CFieldPrinter::~CFieldPrinter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1COpenCallbackConsole@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1COpenCallbackConsole@@QAE@XZ$0
__ehfuncinfo$??1COpenCallbackConsole@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1COpenCallbackConsole@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1COpenCallbackConsole@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1COpenCallbackConsole@@QAE@XZ PROC			; COpenCallbackConsole::~COpenCallbackConsole, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1COpenCallbackConsole@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CPercentPrinter@@QAE@XZ		; CPercentPrinter::~CPercentPrinter
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1COpenCallbackConsole@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CPercentPrinter@@QAE@XZ		; CPercentPrinter::~CPercentPrinter
__ehhandler$??1COpenCallbackConsole@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1COpenCallbackConsole@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1COpenCallbackConsole@@QAE@XZ ENDP			; COpenCallbackConsole::~COpenCallbackConsole
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COpenOptions@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COpenOptions@@QAE@XZ PROC				; COpenOptions::~COpenOptions, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1UString@@QAE@XZ			; UString::~UString
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COpenOptions@@QAE@XZ ENDP				; COpenOptions::~COpenOptions
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CReadArcItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CReadArcItem@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CReadArcItem@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CReadArcItem@@QAE@XZ$2
__ehfuncinfo$??1CReadArcItem@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CReadArcItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CReadArcItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CReadArcItem@@QAE@XZ PROC				; CReadArcItem::~CReadArcItem, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CReadArcItem@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CReadArcItem@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CReadArcItem@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CObjectVector@VUString@@@@QAE@XZ	; CObjectVector<UString>::~CObjectVector<UString>
__unwindfunclet$??1CReadArcItem@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CReadArcItem@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CReadArcItem@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CReadArcItem@@QAE@XZ ENDP				; CReadArcItem::~CReadArcItem
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@VUString@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VUString@@@@QBEIXZ PROC		; CObjectVector<UString>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VUString@@@@QBEIXZ ENDP		; CObjectVector<UString>::Size
_TEXT	ENDS
PUBLIC	??0?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::CObjectVector<UString>
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QAEAAPAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z PROC	; CObjectVector<UString>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VUString@@@@QAEAAVUString@@I@Z ENDP	; CObjectVector<UString>::operator[]
_TEXT	ENDS
PUBLIC	??1?$CRecordVector@PAX@@QAE@XZ			; CRecordVector<void *>::~CRecordVector<void *>
PUBLIC	??_GUString@@QAEPAXI@Z				; UString::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VUString@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VUString@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T75012 = -28						; size = 4
$T75011 = -24						; size = 4
_i$73746 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VUString@@@@QAE@XZ PROC		; CObjectVector<UString>::~CObjectVector<UString>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73746[ebp], eax
$LN2@CObjectVec:
	cmp	DWORD PTR _i$73746[ebp], 0
	je	SHORT $LN3@CObjectVec
; Line 489
	mov	eax, DWORD PTR _i$73746[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73746[ebp], eax
	mov	ecx, DWORD PTR _i$73746[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T75012[ebp], edx
	mov	eax, DWORD PTR $T75012[ebp]
	mov	DWORD PTR $T75011[ebp], eax
	cmp	DWORD PTR $T75011[ebp], 0
	je	SHORT $LN5@CObjectVec
	push	1
	mov	ecx, DWORD PTR $T75011[ebp]
	call	??_GUString@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec
$LN5@CObjectVec:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec:
	jmp	SHORT $LN2@CObjectVec
$LN3@CObjectVec:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VUString@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VUString@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VUString@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VUString@@@@QAE@XZ ENDP		; CObjectVector<UString>::~CObjectVector<UString>
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z PROC ; CObjectVector<CArcInfoEx>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCArcInfoEx@@@@QBEABUCArcInfoEx@@I@Z ENDP ; CObjectVector<CArcInfoEx>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z PROC ; CObjectVector<CArcInfoEx>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCArcInfoEx@@@@QAEAAUCArcInfoEx@@I@Z ENDP ; CObjectVector<CArcInfoEx>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ PROC	; CMyComPtr<IInArchive>::operator IInArchive *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ENDP	; CMyComPtr<IInArchive>::operator IInArchive *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ PROC	; CMyComPtr<IInArchive>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIInArchive@@@@QBEPAUIInArchive@@XZ ENDP	; CMyComPtr<IInArchive>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ PROC ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ENDP ; CMyComPtr<IArchiveGetRawProps>::operator IArchiveGetRawProps *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ PROC ; CMyComPtr<IArchiveGetRawProps>::operator->, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$CMyComPtr@UIArchiveGetRawProps@@@@QBEPAUIArchiveGetRawProps@@XZ ENDP ; CMyComPtr<IArchiveGetRawProps>::operator->
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CObjectVector@VCArc@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@VCArc@@@@QBEIXZ PROC		; CObjectVector<CArc>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@VCArc@@@@QBEIXZ ENDP		; CObjectVector<CArc>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjectVector@VCArc@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@VCArc@@@@QAE@XZ PROC			; CObjectVector<CArc>::CObjectVector<CArc>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@VCArc@@@@QAE@XZ ENDP			; CObjectVector<CArc>::CObjectVector<CArc>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z PROC	; CObjectVector<CArc>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCArc@@@@QBEABVCArc@@I@Z ENDP	; CObjectVector<CArc>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z PROC	; CObjectVector<CArc>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z ENDP	; CObjectVector<CArc>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ PROC	; CObjectVector<CArc>::Back, COMDAT
; _this$ = ecx
; Line 455
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CObjectVector@VCArc@@@@QAEAAVCArc@@I@Z ; CObjectVector<CArc>::operator[]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@?$CObjectVector@VCArc@@@@QAEAAVCArc@@XZ ENDP	; CObjectVector<CArc>::Back
_TEXT	ENDS
PUBLIC	??_GCArc@@QAEPAXI@Z				; CArc::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@VCArc@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@VCArc@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@VCArc@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@VCArc@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@VCArc@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T75048 = -28						; size = 4
$T75047 = -24						; size = 4
_i$73916 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@VCArc@@@@QAE@XZ PROC			; CObjectVector<CArc>::~CObjectVector<CArc>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@VCArc@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73916[ebp], eax
$LN2@CObjectVec@2:
	cmp	DWORD PTR _i$73916[ebp], 0
	je	SHORT $LN3@CObjectVec@2
; Line 489
	mov	eax, DWORD PTR _i$73916[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73916[ebp], eax
	mov	ecx, DWORD PTR _i$73916[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T75048[ebp], edx
	mov	eax, DWORD PTR $T75048[ebp]
	mov	DWORD PTR $T75047[ebp], eax
	cmp	DWORD PTR $T75047[ebp], 0
	je	SHORT $LN5@CObjectVec@2
	push	1
	mov	ecx, DWORD PTR $T75047[ebp]
	call	??_GCArc@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@2
$LN5@CObjectVec@2:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@2:
	jmp	SHORT $LN2@CObjectVec@2
$LN3@CObjectVec@2:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@VCArc@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@VCArc@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@VCArc@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@VCArc@@@@QAE@XZ ENDP			; CObjectVector<CArc>::~CObjectVector<CArc>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ PROC	; CObjectVector<CFieldInfo>::Size, COMDAT
; _this$ = ecx
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCFieldInfo@@@@QBEIXZ ENDP	; CObjectVector<CFieldInfo>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjectVector@UCFieldInfo@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CObjectVector@UCFieldInfo@@@@QAE@XZ PROC		; CObjectVector<CFieldInfo>::CObjectVector<CFieldInfo>, COMDAT
; _this$ = ecx
; Line 421
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::CRecordVector<void *>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CObjectVector@UCFieldInfo@@@@QAE@XZ ENDP		; CObjectVector<CFieldInfo>::CObjectVector<CFieldInfo>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z PROC ; CObjectVector<CFieldInfo>::operator[], COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@I@Z ENDP ; CObjectVector<CFieldInfo>::operator[]
_TEXT	ENDS
PUBLIC	?Add@?$CRecordVector@PAX@@QAEIQAX@Z		; CRecordVector<void *>::Add
PUBLIC	??0CFieldInfo@@QAE@ABU0@@Z			; CFieldInfo::CFieldInfo
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z$0
__ehfuncinfo$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T75068 = -24						; size = 4
$T75067 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_item$ = 8						; size = 4
?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z PROC ; CObjectVector<CFieldInfo>::Add, COMDAT
; _this$ = ecx
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T75068[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T75068[ebp], 0
	je	SHORT $LN3@Add@2
	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T75068[ebp]
	call	??0CFieldInfo@@QAE@ABU0@@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Add@2
$LN3@Add@2:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Add@2:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T75067[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T75067[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z$0:
	mov	eax, DWORD PTR $T75068[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Add@?$CObjectVector@UCFieldInfo@@@@QAEIABUCFieldInfo@@@Z ENDP ; CObjectVector<CFieldInfo>::Add
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ$0
__ehfuncinfo$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ
_TEXT	SEGMENT
tv71 = -32						; size = 4
$T75081 = -28						; size = 4
$T75080 = -24						; size = 4
_p$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ PROC ; CObjectVector<CFieldInfo>::AddNew, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T75081[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T75081[ebp], 0
	je	SHORT $LN3@AddNew
	mov	ecx, DWORD PTR $T75081[ebp]
	call	??0CFieldInfo@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@AddNew
$LN3@AddNew:
	mov	DWORD PTR tv71[ebp], 0
$LN4@AddNew:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T75080[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T75080[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 466
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Add@?$CRecordVector@PAX@@QAEIQAX@Z	; CRecordVector<void *>::Add
; Line 467
	mov	eax, DWORD PTR _p$[ebp]
; Line 468
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ$0:
	mov	eax, DWORD PTR $T75081[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddNew@?$CObjectVector@UCFieldInfo@@@@QAEAAUCFieldInfo@@XZ ENDP ; CObjectVector<CFieldInfo>::AddNew
PUBLIC	??_GCFieldInfo@@QAEPAXI@Z			; CFieldInfo::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ$0
__ehfuncinfo$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ
_TEXT	SEGMENT
tv76 = -32						; size = 4
$T75094 = -28						; size = 4
$T75093 = -24						; size = 4
_i$73971 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ PROC		; CObjectVector<CFieldInfo>::~CObjectVector<CFieldInfo>, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73971[ebp], eax
$LN2@CObjectVec@3:
	cmp	DWORD PTR _i$73971[ebp], 0
	je	SHORT $LN3@CObjectVec@3
; Line 489
	mov	eax, DWORD PTR _i$73971[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73971[ebp], eax
	mov	ecx, DWORD PTR _i$73971[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T75094[ebp], edx
	mov	eax, DWORD PTR $T75094[ebp]
	mov	DWORD PTR $T75093[ebp], eax
	cmp	DWORD PTR $T75093[ebp], 0
	je	SHORT $LN5@CObjectVec@3
	push	1
	mov	ecx, DWORD PTR $T75093[ebp]
	call	??_GCFieldInfo@@QAEPAXI@Z
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@CObjectVec@3
$LN5@CObjectVec@3:
	mov	DWORD PTR tv76[ebp], 0
$LN6@CObjectVec@3:
	jmp	SHORT $LN2@CObjectVec@3
$LN3@CObjectVec@3:
; Line 490
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CRecordVector@PAX@@QAE@XZ		; CRecordVector<void *>::~CRecordVector<void *>
__ehhandler$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CObjectVector@UCFieldInfo@@@@QAE@XZ ENDP		; CObjectVector<CFieldInfo>::~CObjectVector<CFieldInfo>
PUBLIC	?Clear@?$CRecordVector@PAX@@QAEXXZ		; CRecordVector<void *>::Clear
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Clear@?$CObjectVector@UCFieldInfo@@@@QAEXXZ
_TEXT	SEGMENT
tv75 = -20						; size = 4
$T75107 = -16						; size = 4
$T75106 = -12						; size = 4
_i$73980 = -8						; size = 4
_this$ = -4						; size = 4
?Clear@?$CObjectVector@UCFieldInfo@@@@QAEXXZ PROC	; CObjectVector<CFieldInfo>::Clear, COMDAT
; _this$ = ecx
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	mov	DWORD PTR _i$73980[ebp], eax
$LN2@Clear:
	cmp	DWORD PTR _i$73980[ebp], 0
	je	SHORT $LN1@Clear
; Line 501
	mov	eax, DWORD PTR _i$73980[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$73980[ebp], eax
	mov	ecx, DWORD PTR _i$73980[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QAEAAPAXI@Z	; CRecordVector<void *>::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T75107[ebp], edx
	mov	eax, DWORD PTR $T75107[ebp]
	mov	DWORD PTR $T75106[ebp], eax
	cmp	DWORD PTR $T75106[ebp], 0
	je	SHORT $LN5@Clear
	push	1
	mov	ecx, DWORD PTR $T75106[ebp]
	call	??_GCFieldInfo@@QAEPAXI@Z
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv75[ebp], 0
$LN6@Clear:
	jmp	SHORT $LN2@Clear
$LN1@Clear:
; Line 502
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@?$CRecordVector@PAX@@QAEXXZ	; CRecordVector<void *>::Clear
; Line 503
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CObjectVector@UCFieldInfo@@@@QAEXXZ ENDP	; CObjectVector<CFieldInfo>::Clear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CObjArray@_N@@QAE@I@Z
_TEXT	SEGMENT
$T75112 = -8						; size = 4
_this$ = -4						; size = 4
_size$ = 8						; size = 4
??0?$CObjArray@_N@@QAE@I@Z PROC				; CObjArray<bool>::CObjArray<bool>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mybuffer.h
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR _size$[ebp], 0
	je	SHORT $LN2@CObjArray
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T75112[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T75112[ebp]
	mov	DWORD PTR [edx], eax
$LN2@CObjArray:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CObjArray@_N@@QAE@I@Z ENDP				; CObjArray<bool>::CObjArray<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CObjArray@_N@@QAE@XZ
_TEXT	SEGMENT
$T75115 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CObjArray@_N@@QAE@XZ PROC				; CObjArray<bool>::~CObjArray<bool>, COMDAT
; _this$ = ecx
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T75115[ebp], ecx
	mov	edx, DWORD PTR $T75115[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CObjArray@_N@@QAE@XZ ENDP				; CObjArray<bool>::~CObjArray<bool>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??B?$CObjArray@_N@@QAEPA_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$CObjArray@_N@@QAEPA_NXZ PROC			; CObjArray<bool>::operator bool *, COMDAT
; _this$ = ecx
; Line 143
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$CObjArray@_N@@QAEPA_NXZ ENDP			; CObjArray<bool>::operator bool *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GUString@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GUString@@QAEPAXI@Z PROC				; UString::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUString@@QAEPAXI@Z ENDP				; UString::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CArc@@QAE@XZ					; CArc::~CArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCArc@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCArc@@QAEPAXI@Z PROC				; CArc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CArc@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCArc@@QAEPAXI@Z ENDP				; CArc::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??0AString@@QAE@ABV0@@Z:PROC			; AString::AString
EXTRN	??0UString@@QAE@ABV0@@Z:PROC			; UString::UString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFieldInfo@@QAE@ABU0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFieldInfo@@QAE@ABU0@@Z$0
__ehfuncinfo$??0CFieldInfo@@QAE@ABU0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CFieldInfo@@QAE@ABU0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CFieldInfo@@QAE@ABU0@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0CFieldInfo@@QAE@ABU0@@Z PROC				; CFieldInfo::CFieldInfo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CFieldInfo@@QAE@ABU0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+4], dl
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UString@@QAE@ABV0@@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0AString@@QAE@ABV0@@Z			; AString::AString
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [edx+32], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR [edx+36], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR [edx+40], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ___that$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR [edx+44], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFieldInfo@@QAE@ABU0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??0CFieldInfo@@QAE@ABU0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CFieldInfo@@QAE@ABU0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CFieldInfo@@QAE@ABU0@@Z ENDP				; CFieldInfo::CFieldInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCFieldInfo@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFieldInfo@@QAEPAXI@Z PROC				; CFieldInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CFieldInfo@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCFieldInfo@@QAEPAXI@Z ENDP				; CFieldInfo::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UIInArchive@@@@QAE@XZ		; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
PUBLIC	??1?$CMyComPtr@UIInStream@@@@QAE@XZ		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
PUBLIC	??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ	; CMyComPtr<IArchiveGetRawProps>::~CMyComPtr<IArchiveGetRawProps>
PUBLIC	??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ	; CMyComPtr<IArchiveGetRootProps>::~CMyComPtr<IArchiveGetRootProps>
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CArc@@QAE@XZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??1CArc@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CArc@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1CArc@@QAE@XZ$7
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CArc@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CArc@@QAE@XZ PROC					; CArc::~CArc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CArc@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1CArcErrorInfo@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CArcErrorInfo@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ ; CMyComPtr<IArchiveGetRootProps>::~CMyComPtr<IArchiveGetRootProps>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ ; CMyComPtr<IArchiveGetRawProps>::~CMyComPtr<IArchiveGetRawProps>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CMyComPtr@UIInArchive@@@@QAE@XZ	; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CArc@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CMyComPtr@UIInArchive@@@@QAE@XZ	; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
__unwindfunclet$??1CArc@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$CMyComPtr@UIInStream@@@@QAE@XZ	; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
__unwindfunclet$??1CArc@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ ; CMyComPtr<IArchiveGetRawProps>::~CMyComPtr<IArchiveGetRawProps>
__unwindfunclet$??1CArc@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ ; CMyComPtr<IArchiveGetRootProps>::~CMyComPtr<IArchiveGetRootProps>
__unwindfunclet$??1CArc@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CArcErrorInfo@@QAE@XZ
__unwindfunclet$??1CArc@@QAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1CArcErrorInfo@@QAE@XZ
__unwindfunclet$??1CArc@@QAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$??1CArc@@QAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$??1CArc@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CArc@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CArc@@QAE@XZ ENDP					; CArc::~CArc
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CMyComPtr@UIInArchive@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ PROC		; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInArchive@@@@QAE@XZ ENDP		; CMyComPtr<IInArchive>::~CMyComPtr<IInArchive>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIInStream@@@@QAE@XZ PROC		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIInStream@@@@QAE@XZ ENDP		; CMyComPtr<IInStream>::~CMyComPtr<IInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ PROC	; CMyComPtr<IArchiveGetRawProps>::~CMyComPtr<IArchiveGetRawProps>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@3:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveGetRawProps@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveGetRawProps>::~CMyComPtr<IArchiveGetRawProps>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ PROC	; CMyComPtr<IArchiveGetRootProps>::~CMyComPtr<IArchiveGetRootProps>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr@4:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UIArchiveGetRootProps@@@@QAE@XZ ENDP	; CMyComPtr<IArchiveGetRootProps>::~CMyComPtr<IArchiveGetRootProps>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::CRecordVector<void *>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CRecordVector@PAX@@QAE@XZ
_TEXT	SEGMENT
$T75165 = -8						; size = 4
_this$ = -4						; size = 4
??1?$CRecordVector@PAX@@QAE@XZ PROC			; CRecordVector<void *>::~CRecordVector<void *>, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T75165[ebp], ecx
	mov	edx, DWORD PTR $T75165[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CRecordVector@PAX@@QAE@XZ ENDP			; CRecordVector<void *>::~CRecordVector<void *>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Clear@?$CRecordVector@PAX@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@?$CRecordVector@PAX@@QAEXXZ PROC			; CRecordVector<void *>::Clear, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@?$CRecordVector@PAX@@QAEXXZ ENDP			; CRecordVector<void *>::Clear
_TEXT	ENDS
PUBLIC	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ	; CRecordVector<void *>::ReserveOnePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add@?$CRecordVector@PAX@@QAEIQAX@Z
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_item$ = 8						; size = 4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z PROC		; CRecordVector<void *>::Add, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ; CRecordVector<void *>::ReserveOnePosition
; Line 200
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _item$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR tv72[ebp]
; Line 202
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@?$CRecordVector@PAX@@QAEIQAX@Z ENDP		; CRecordVector<void *>::Add
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QAEAAPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QAEAAPAXI@Z ENDP		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ
_TEXT	SEGMENT
$T75177 = -20						; size = 4
$T75176 = -16						; size = 4
_p$74067 = -12						; size = 4
_newCapacity$74066 = -8					; size = 4
_this$ = -4						; size = 4
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ PROC	; CRecordVector<void *>::ReserveOnePosition, COMDAT
; _this$ = ecx
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	$LN3@ReserveOne
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _newCapacity$74066[ebp], ecx
; Line 23
	xor	ecx, ecx
	mov	eax, DWORD PTR _newCapacity$74066[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T75176[ebp], eax
	mov	eax, DWORD PTR $T75176[ebp]
	mov	DWORD PTR _p$74067[ebp], eax
; Line 24
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@ReserveOne
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p$74067[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@ReserveOne:
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR $T75177[ebp], edx
	mov	eax, DWORD PTR $T75177[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _p$74067[ebp]
	mov	DWORD PTR [ecx], edx
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newCapacity$74066[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN3@ReserveOne:
; Line 30
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReserveOnePosition@?$CRecordVector@PAX@@AAEXXZ ENDP	; CRecordVector<void *>::ReserveOnePosition
_TEXT	ENDS
END

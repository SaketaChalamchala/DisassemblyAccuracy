; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\UI\Console\HashCon.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_kEmptyFileAlias DD FLAT:$SG74916
_kScanningMessage DD FLAT:$SG74918
_k_DigestTitles DD FLAT:$SG75089
	DD	FLAT:$SG75090
	DD	FLAT:$SG75091
	DD	FLAT:$SG75092
_DATA	ENDS
CONST	SEGMENT
$SG74916 DB	'[', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ']', 00H, 00H, 00H
$SG74918 DB	'Scanning', 00H
	ORG $+3
$SG74931 DB	'Scan', 00H
	ORG $+3
$SG75026 DB	'Size', 00H
	ORG $+3
$SG75030 DB	'Name', 00H
	ORG $+3
$SG75089 DB	' : ', 00H
$SG75090 DB	' for data:              ', 00H
	ORG $+3
$SG75091 DB	' for data and names:    ', 00H
	ORG $+3
$SG75092 DB	' for streams and names: ', 00H
	ORG $+3
$SG75127 DB	'Folders', 00H
$SG75128 DB	'Files', 00H
	ORG $+2
$SG75129 DB	'Size', 00H
	ORG $+3
$SG75131 DB	'Alternate streams', 00H
	ORG $+2
$SG75132 DB	'Alternate streams size', 00H
CONST	ENDS
PUBLIC	?CheckBreak@CHashCallbackConsole@@UAEJXZ	; CHashCallbackConsole::CheckBreak
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckBreak@CHashCallbackConsole@@UAEJXZ PROC		; CHashCallbackConsole::CheckBreak
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 22
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckBreak@CHashCallbackConsole@@UAEJXZ ENDP		; CHashCallbackConsole::CheckBreak
_TEXT	ENDS
PUBLIC	?TestBreakSignal@NConsoleClose@@YG_NXZ		; NConsoleClose::TestBreakSignal
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
?CheckBreak2@@YGJXZ PROC				; CheckBreak2
; Line 15
	push	ebp
	mov	ebp, esp
; Line 16
	call	?TestBreakSignal@NConsoleClose@@YG_NXZ	; NConsoleClose::TestBreakSignal
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	and	eax, -2147467260			; 80004004H
; Line 17
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?CheckBreak2@@YGJXZ ENDP				; CheckBreak2
_TEXT	ENDS
EXTRN	?g_BreakCounter@NConsoleClose@@3IA:DWORD	; NConsoleClose::g_BreakCounter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?TestBreakSignal@NConsoleClose@@YG_NXZ
_TEXT	SEGMENT
?TestBreakSignal@NConsoleClose@@YG_NXZ PROC		; NConsoleClose::TestBreakSignal, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\consoleclose.h
; Line 11
	push	ebp
	mov	ebp, esp
; Line 15
	xor	eax, eax
	cmp	DWORD PTR ?g_BreakCounter@NConsoleClose@@3IA, 0 ; NConsoleClose::g_BreakCounter
	setne	al
; Line 17
	pop	ebp
	ret	0
?TestBreakSignal@NConsoleClose@@YG_NXZ ENDP		; NConsoleClose::TestBreakSignal
_TEXT	ENDS
PUBLIC	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ	; CCallbackConsoleBase::NeedPercents
PUBLIC	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z	; CStdOutStream::operator<<
PUBLIC	??6CStdOutStream@@QAEAAV0@PBD@Z			; CStdOutStream::operator<<
PUBLIC	?StartScanning@CHashCallbackConsole@@UAEJXZ	; CHashCallbackConsole::StartScanning
EXTRN	??4AString@@QAEAAV0@PBD@Z:PROC			; AString::operator=
EXTRN	?ClearCurState@CPercentPrinterState@@QAEXXZ:PROC ; CPercentPrinterState::ClearCurState
EXTRN	?endl@@YGAAVCStdOutStream@@AAV1@@Z:PROC		; endl
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartScanning@CHashCallbackConsole@@UAEJXZ PROC	; CHashCallbackConsole::StartScanning
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+305]
	test	ecx, ecx
	je	SHORT $LN2@StartScann
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+184], 0
	je	SHORT $LN2@StartScann
; Line 27
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _kScanningMessage
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN2@StartScann:
; Line 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@StartScann
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClearCurState@CPercentPrinterState@@QAEXXZ ; CPercentPrinterState::ClearCurState
; Line 31
	push	OFFSET $SG74931
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4AString@@QAEAAV0@PBD@Z		; AString::operator=
$LN1@StartScann:
; Line 33
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 34
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartScanning@CHashCallbackConsole@@UAEJXZ ENDP	; CHashCallbackConsole::StartScanning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_func$ = 8						; size = 4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z PROC	; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\stdoutstream.h
; Line 29
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR _func$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ENDP	; CStdOutStream::operator<<
_TEXT	ENDS
EXTRN	__imp__fputs:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6CStdOutStream@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??6CStdOutStream@@QAEAAV0@PBD@Z PROC			; CStdOutStream::operator<<, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
; Line 38
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6CStdOutStream@@QAEAAV0@PBD@Z ENDP			; CStdOutStream::operator<<
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NeedPercents@CCallbackConsoleBase@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NeedPercents@CCallbackConsoleBase@@QBE_NXZ PROC	; CCallbackConsoleBase::NeedPercents, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+164], 0
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ENDP	; CCallbackConsoleBase::NeedPercents
_TEXT	ENDS
PUBLIC	?GetTotalBytes@CDirItemsStat@@QBE_KXZ		; CDirItemsStat::GetTotalBytes
PUBLIC	?ScanProgress@CHashCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z ; CHashCallbackConsole::ScanProgress
EXTRN	?Print@CPercentPrinter@@QAEXXZ:PROC		; CPercentPrinter::Print
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_st$ = 8						; size = 4
_path$ = 12						; size = 4
___formal$ = 16						; size = 1
?ScanProgress@CHashCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z PROC ; CHashCallbackConsole::ScanProgress
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 38
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@ScanProgre
; Line 40
	mov	ecx, DWORD PTR _st$[ebp]
	mov	edx, DWORD PTR _st$[ebp]
	mov	eax, DWORD PTR [ecx]
	add	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx+4]
	adc	ecx, DWORD PTR [edx+12]
	mov	edx, DWORD PTR _st$[ebp]
	add	eax, DWORD PTR [edx+16]
	adc	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	DWORD PTR [edx+28], ecx
; Line 41
	mov	ecx, DWORD PTR _st$[ebp]
	call	?GetTotalBytes@CDirItemsStat@@QBE_KXZ	; CDirItemsStat::GetTotalBytes
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx
; Line 42
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@ScanProgre:
; Line 45
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 46
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ScanProgress@CHashCallbackConsole@@UAEJABUCDirItemsStat@@ABVUString@@_N@Z ENDP ; CHashCallbackConsole::ScanProgress
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTotalBytes@CDirItemsStat@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTotalBytes@CDirItemsStat@@QBE_KXZ PROC		; CDirItemsStat::GetTotalBytes, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\common\diritem.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	add	edx, DWORD PTR [ecx+32]
	mov	esi, DWORD PTR [eax+28]
	adc	esi, DWORD PTR [ecx+36]
	mov	eax, edx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTotalBytes@CDirItemsStat@@QBE_KXZ ENDP		; CDirItemsStat::GetTotalBytes
_TEXT	ENDS
PUBLIC	?ScanError@CHashCallbackConsole@@UAEJABVUString@@K@Z ; CHashCallbackConsole::ScanError
EXTRN	?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z:PROC ; CCallbackConsoleBase::ScanError_Base
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?ScanError@CHashCallbackConsole@@UAEJABVUString@@K@Z PROC ; CHashCallbackConsole::ScanError
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ScanError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::ScanError_Base
; Line 51
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ScanError@CHashCallbackConsole@@UAEJABVUString@@K@Z ENDP ; CHashCallbackConsole::ScanError
_TEXT	ENDS
PUBLIC	??BAString@@QBEPBDXZ				; AString::operator char const *
PUBLIC	?FinishScanning@CHashCallbackConsole@@UAEJABUCDirItemsStat@@@Z ; CHashCallbackConsole::FinishScanning
EXTRN	?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z:PROC ; Print_DirItemsStat
EXTRN	?ClosePrint@CPercentPrinter@@QAEX_N@Z:PROC	; CPercentPrinter::ClosePrint
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_st$ = 8						; size = 4
?FinishScanning@CHashCallbackConsole@@UAEJABUCDirItemsStat@@@Z PROC ; CHashCallbackConsole::FinishScanning
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@FinishScan
; Line 59
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClearCurState@CPercentPrinterState@@QAEXXZ ; CPercentPrinterState::ClearCurState
$LN2@FinishScan:
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+305]
	test	edx, edx
	je	SHORT $LN1@FinishScan
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN1@FinishScan
; Line 64
	mov	ecx, DWORD PTR _st$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 292				; 00000124H
	push	edx
	call	?Print_DirItemsStat@@YGXAAVAString@@ABUCDirItemsStat@@@Z ; Print_DirItemsStat
; Line 65
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN1@FinishScan:
; Line 67
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 68
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FinishScanning@CHashCallbackConsole@@UAEJABUCDirItemsStat@@@Z ENDP ; CHashCallbackConsole::FinishScanning
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BAString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BAString@@QBEPBDXZ PROC				; AString::operator char const *, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 238
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BAString@@QBEPBDXZ ENDP				; AString::operator char const *
_TEXT	ENDS
PUBLIC	?SetNumFiles@CHashCallbackConsole@@UAEJ_K@Z	; CHashCallbackConsole::SetNumFiles
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 8
?SetNumFiles@CHashCallbackConsole@@UAEJ_K@Z PROC	; CHashCallbackConsole::SetNumFiles
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 73
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetNumFiles@CHashCallbackConsole@@UAEJ_K@Z ENDP	; CHashCallbackConsole::SetNumFiles
_TEXT	ENDS
PUBLIC	?SetTotal@CHashCallbackConsole@@UAEJ_K@Z	; CHashCallbackConsole::SetTotal
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_size$ = 8						; size = 8
?SetTotal@CHashCallbackConsole@@UAEJ_K@Z PROC		; CHashCallbackConsole::SetTotal
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@SetTotal
; Line 79
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _size$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@SetTotal:
; Line 82
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 83
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetTotal@CHashCallbackConsole@@UAEJ_K@Z ENDP		; CHashCallbackConsole::SetTotal
_TEXT	ENDS
PUBLIC	?SetCompleted@CHashCallbackConsole@@UAEJPB_K@Z	; CHashCallbackConsole::SetCompleted
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_completeValue$ = 8					; size = 4
?SetCompleted@CHashCallbackConsole@@UAEJPB_K@Z PROC	; CHashCallbackConsole::SetCompleted
; _this$ = ecx
; Line 86
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	cmp	DWORD PTR _completeValue$[ebp], 0
	je	SHORT $LN1@SetComplet
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@SetComplet
; Line 89
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _completeValue$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], edx
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@SetComplet:
; Line 92
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 93
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetCompleted@CHashCallbackConsole@@UAEJPB_K@Z ENDP	; CHashCallbackConsole::SetCompleted
_TEXT	ENDS
PUBLIC	?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ ; CHashCallbackConsole::AddSpacesBeforeName
PUBLIC	??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z ; CObjectVector<CHasherState>::operator[]
PUBLIC	?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ	; CObjectVector<CHasherState>::Size
PUBLIC	?Empty@AString@@QAEXXZ				; AString::Empty
PUBLIC	?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z ; CHashCallbackConsole::PrintSeparatorLine
EXTRN	?Add_Space@AString@@QAEXXZ:PROC			; AString::Add_Space
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_h$75008 = -12						; size = 4
_i$75003 = -8						; size = 4
_this$ = -4						; size = 4
_hashers$ = 8						; size = 4
?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z PROC ; CHashCallbackConsole::PrintSeparatorLine
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 127
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 129
	mov	DWORD PTR _i$75003[ebp], 0
	jmp	SHORT $LN6@PrintSepar
$LN5@PrintSepar:
	mov	eax, DWORD PTR _i$75003[ebp]
	add	eax, 1
	mov	DWORD PTR _i$75003[ebp], eax
$LN6@PrintSepar:
	mov	ecx, DWORD PTR _hashers$[ebp]
	call	?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ ; CObjectVector<CHasherState>::Size
	cmp	DWORD PTR _i$75003[ebp], eax
	jae	SHORT $LN4@PrintSepar
; Line 131
	cmp	DWORD PTR _i$75003[ebp], 0
	je	SHORT $LN3@PrintSepar
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
$LN3@PrintSepar:
; Line 133
	mov	ecx, DWORD PTR _i$75003[ebp]
	push	ecx
	mov	ecx, DWORD PTR _hashers$[ebp]
	call	??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z ; CObjectVector<CHasherState>::operator[]
	mov	DWORD PTR _h$75008[ebp], eax
; Line 134
	mov	edx, DWORD PTR _h$75008[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	?GetColumnWidth@@YGII@Z			; GetColumnWidth
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	push	ecx
	call	?AddMinuses@@YGXAAVAString@@I@Z		; AddMinuses
; Line 135
	jmp	SHORT $LN5@PrintSepar
$LN4@PrintSepar:
; Line 137
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+306]
	test	eax, eax
	je	SHORT $LN2@PrintSepar
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 140
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	push	ecx
	call	?AddMinuses@@YGXAAVAString@@I@Z		; AddMinuses
$LN2@PrintSepar:
; Line 143
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+307]
	test	eax, eax
	je	SHORT $LN1@PrintSepar
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ ; CHashCallbackConsole::AddSpacesBeforeName
; Line 146
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	push	ecx
	call	?AddMinuses@@YGXAAVAString@@I@Z		; AddMinuses
$LN1@PrintSepar:
; Line 149
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 150
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z ENDP ; CHashCallbackConsole::PrintSeparatorLine
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@AString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@AString@@QAEXXZ PROC				; AString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	BYTE PTR [edx], 0
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@AString@@QAEXXZ ENDP				; AString::Empty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ PROC	; CHashCallbackConsole::AddSpacesBeforeName, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.h
; Line 16
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 17
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 18
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 19
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ ENDP	; CHashCallbackConsole::AddSpacesBeforeName
_TEXT	ENDS
PUBLIC	??YAString@@QAEAAV0@D@Z				; AString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$74971 = -4						; size = 4
_s$ = 8							; size = 4
_num$ = 12						; size = 4
?AddMinuses@@YGXAAVAString@@I@Z PROC			; AddMinuses
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 96
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 97
	mov	DWORD PTR _i$74971[ebp], 0
	jmp	SHORT $LN3@AddMinuses
$LN2@AddMinuses:
	mov	eax, DWORD PTR _i$74971[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74971[ebp], eax
$LN3@AddMinuses:
	mov	ecx, DWORD PTR _i$74971[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN4@AddMinuses
; Line 98
	push	45					; 0000002dH
	mov	ecx, DWORD PTR _s$[ebp]
	call	??YAString@@QAEAAV0@D@Z			; AString::operator+=
	jmp	SHORT $LN2@AddMinuses
$LN4@AddMinuses:
; Line 99
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddMinuses@@YGXAAVAString@@I@Z ENDP			; AddMinuses
_TEXT	ENDS
EXTRN	?Grow_1@AString@@AAEXXZ:PROC			; AString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YAString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 1
??YAString@@QAEAAV0@D@Z PROC				; AString::operator+=, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 283
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@AString@@AAEXXZ			; AString::Grow_1
$LN1@operator:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 285
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 286
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	dl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 287
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 288
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
; Line 290
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YAString@@QAEAAV0@D@Z ENDP				; AString::operator+=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
tv66 = -8						; size = 4
_width$ = -4						; size = 4
_digestSize$ = 8					; size = 4
?GetColumnWidth@@YGII@Z PROC				; GetColumnWidth
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 121
	mov	eax, DWORD PTR _digestSize$[ebp]
	shl	eax, 1
	mov	DWORD PTR _width$[ebp], eax
; Line 122
	cmp	DWORD PTR _width$[ebp], 8
	jae	SHORT $LN3@GetColumnW
	mov	DWORD PTR tv66[ebp], 8
	jmp	SHORT $LN4@GetColumnW
$LN3@GetColumnW:
	mov	ecx, DWORD PTR _width$[ebp]
	mov	DWORD PTR tv66[ebp], ecx
$LN4@GetColumnW:
	mov	eax, DWORD PTR tv66[ebp]
; Line 123
	mov	esp, ebp
	pop	ebp
	ret	4
?GetColumnWidth@@YGII@Z ENDP				; GetColumnWidth
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?Len@AString@@QBEIXZ				; AString::Len
PUBLIC	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
PUBLIC	?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z ; CHashCallbackConsole::BeforeFirstFile
EXTRN	??YAString@@QAEAAV0@PBD@Z:PROC			; AString::operator+=
EXTRN	??0AString@@QAE@PBD@Z:PROC			; AString::AString
EXTRN	??YAString@@QAEAAV0@ABV0@@Z:PROC		; AString::operator+=
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z$0
__ehfuncinfo$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s2$75025 = -40						; size = 12
_h$75021 = -24						; size = 4
_i$75016 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_hb$ = 8						; size = 4
?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z PROC ; CHashCallbackConsole::BeforeFirstFile
; _this$ = ecx
; Line 153
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+305]
	test	ecx, ecx
	je	$LN7@BeforeFirs
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+184], 0
	je	$LN7@BeforeFirs
; Line 156
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
; Line 159
	mov	DWORD PTR _i$75016[ebp], 0
	jmp	SHORT $LN6@BeforeFirs
$LN5@BeforeFirs:
	mov	eax, DWORD PTR _i$75016[ebp]
	add	eax, 1
	mov	DWORD PTR _i$75016[ebp], eax
$LN6@BeforeFirs:
	mov	ecx, DWORD PTR _hb$[ebp]
	add	ecx, 4
	call	?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ ; CObjectVector<CHasherState>::Size
	cmp	DWORD PTR _i$75016[ebp], eax
	jae	SHORT $LN4@BeforeFirs
; Line 161
	cmp	DWORD PTR _i$75016[ebp], 0
	je	SHORT $LN3@BeforeFirs
; Line 162
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
$LN3@BeforeFirs:
; Line 163
	mov	ecx, DWORD PTR _i$75016[ebp]
	push	ecx
	mov	ecx, DWORD PTR _hb$[ebp]
	add	ecx, 4
	call	??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z ; CObjectVector<CHasherState>::operator[]
	mov	DWORD PTR _h$75021[ebp], eax
; Line 164
	mov	edx, DWORD PTR _h$75021[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??YAString@@QAEAAV0@ABV0@@Z		; AString::operator+=
; Line 165
	mov	eax, DWORD PTR _h$75021[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?GetColumnWidth@@YGII@Z			; GetColumnWidth
	mov	esi, eax
	mov	ecx, DWORD PTR _h$75021[ebp]
	add	ecx, 4
	call	?Len@AString@@QBEIXZ			; AString::Len
	sub	esi, eax
	push	esi
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 292				; 00000124H
	push	edx
	call	?AddSpaces_if_Positive@@YGXAAVAString@@H@Z ; AddSpaces_if_Positive
; Line 166
	jmp	$LN5@BeforeFirs
$LN4@BeforeFirs:
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+306]
	test	ecx, ecx
	je	SHORT $LN2@BeforeFirs
; Line 170
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 171
	push	OFFSET $SG75026
	lea	ecx, DWORD PTR _s2$75025[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 172
	lea	ecx, DWORD PTR _s2$75025[ebp]
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	edx, 13					; 0000000dH
	sub	edx, eax
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 292				; 00000124H
	push	eax
	call	?AddSpaces_if_Positive@@YGXAAVAString@@H@Z ; AddSpaces_if_Positive
; Line 173
	lea	ecx, DWORD PTR _s2$75025[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??YAString@@QAEAAV0@ABV0@@Z		; AString::operator+=
; Line 174
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s2$75025[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
$LN2@BeforeFirs:
; Line 176
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+307]
	test	eax, eax
	je	SHORT $LN1@BeforeFirs
; Line 178
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ ; CHashCallbackConsole::AddSpacesBeforeName
; Line 179
	push	OFFSET $SG75030
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
$LN1@BeforeFirs:
; Line 182
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 183
	mov	edx, DWORD PTR _hb$[ebp]
	add	edx, 4
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z ; CHashCallbackConsole::PrintSeparatorLine
$LN7@BeforeFirs:
; Line 186
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 187
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@BeforeFirs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@BeforeFirs:
	DD	1
	DD	$LN13@BeforeFirs
$LN13@BeforeFirs:
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN11@BeforeFirs
$LN11@BeforeFirs:
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z$0:
	lea	ecx, DWORD PTR _s2$75025[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BeforeFirstFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z ENDP ; CHashCallbackConsole::BeforeFirstFile
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T76114 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T76114[ebp], ecx
	mov	edx, DWORD PTR $T76114[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Len@AString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Len@AString@@QBEIXZ PROC				; AString::Len, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Len@AString@@QBEIXZ ENDP				; AString::Len
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ PROC	; CCallbackConsoleBase::ClosePercents_for_so, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.h
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+176]
	cmp	eax, DWORD PTR [edx+164]
	jne	SHORT $LN2@ClosePerce
; Line 82
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce:
; Line 83
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ENDP	; CCallbackConsoleBase::ClosePercents_for_so
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_i$74979 = -4						; size = 4
_s$ = 8							; size = 4
_num$ = 12						; size = 4
?AddSpaces_if_Positive@@YGXAAVAString@@H@Z PROC		; AddSpaces_if_Positive
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 103
	mov	DWORD PTR _i$74979[ebp], 0
	jmp	SHORT $LN3@AddSpaces_
$LN2@AddSpaces_:
	mov	eax, DWORD PTR _i$74979[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74979[ebp], eax
$LN3@AddSpaces_:
	mov	ecx, DWORD PTR _i$74979[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jge	SHORT $LN4@AddSpaces_
; Line 104
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
	jmp	SHORT $LN2@AddSpaces_
$LN4@AddSpaces_:
; Line 105
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddSpaces_if_Positive@@YGXAAVAString@@H@Z ENDP		; AddSpaces_if_Positive
_TEXT	ENDS
PUBLIC	?OpenFileError@CHashCallbackConsole@@UAEJABVUString@@K@Z ; CHashCallbackConsole::OpenFileError
EXTRN	?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z:PROC ; CCallbackConsoleBase::OpenFileError_Base
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_path$ = 8						; size = 4
_systemError$ = 12					; size = 4
?OpenFileError@CHashCallbackConsole@@UAEJABVUString@@K@Z PROC ; CHashCallbackConsole::OpenFileError
; _this$ = ecx
; Line 190
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _systemError$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?OpenFileError_Base@CCallbackConsoleBase@@IAEJABVUString@@K@Z ; CCallbackConsoleBase::OpenFileError_Base
; Line 192
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OpenFileError@CHashCallbackConsole@@UAEJABVUString@@K@Z ENDP ; CHashCallbackConsole::OpenFileError
_TEXT	ENDS
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	?GetStream@CHashCallbackConsole@@UAEJPB_W_N@Z	; CHashCallbackConsole::GetStream
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_name$ = 8						; size = 4
___formal$ = 12						; size = 1
?GetStream@CHashCallbackConsole@@UAEJPB_W_N@Z PROC	; CHashCallbackConsole::GetStream
; _this$ = ecx
; Line 195
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 196
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 198
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetStream
; Line 200
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+304]
	test	eax, eax
	je	SHORT $LN2@GetStream
; Line 202
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 203
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN2@GetStream
; Line 204
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN2@GetStream:
; Line 206
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN3@GetStream:
; Line 208
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 209
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetStream@CHashCallbackConsole@@UAEJPB_W_N@Z ENDP	; CHashCallbackConsole::GetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z ; CHashCallbackConsole::PrintResultLine
EXTRN	?ConvertUInt64ToString@@YGX_KPAD@Z:PROC		; ConvertUInt64ToString
EXTRN	_strlen:PROC
EXTRN	?AddHashHexToString@@YGXPADPBEI@Z:PROC		; AddHashHexToString
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$75070 = -284						; size = 4
_numSpaces$75066 = -280					; size = 4
_p$75064 = -276						; size = 4
_s$75063 = -268						; size = 45
_s$75057 = -212						; size = 192
_h$75056 = -16						; size = 4
_i$75052 = -12						; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_fileSize$ = 8						; size = 8
_hashers$ = 16						; size = 4
_digestIndex$ = 20					; size = 4
_showHash$ = 24						; size = 1
?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z PROC ; CHashCallbackConsole::PrintResultLine
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 214
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents_for_so@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents_for_so
; Line 216
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Empty@AString@@QAEXXZ			; AString::Empty
; Line 218
	mov	DWORD PTR _i$75052[ebp], 0
	jmp	SHORT $LN13@PrintResul
$LN12@PrintResul:
	mov	eax, DWORD PTR _i$75052[ebp]
	add	eax, 1
	mov	DWORD PTR _i$75052[ebp], eax
$LN13@PrintResul:
	mov	ecx, DWORD PTR _hashers$[ebp]
	call	?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ ; CObjectVector<CHasherState>::Size
	cmp	DWORD PTR _i$75052[ebp], eax
	jae	$LN11@PrintResul
; Line 220
	mov	ecx, DWORD PTR _i$75052[ebp]
	push	ecx
	mov	ecx, DWORD PTR _hashers$[ebp]
	call	??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z ; CObjectVector<CHasherState>::operator[]
	mov	DWORD PTR _h$75056[ebp], eax
; Line 222
	mov	BYTE PTR _s$75057[ebp], 0
; Line 223
	movzx	edx, BYTE PTR _showHash$[ebp]
	test	edx, edx
	je	SHORT $LN10@PrintResul
; Line 224
	mov	eax, DWORD PTR _h$75056[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _digestIndex$[ebp]
	shl	edx, 6
	mov	eax, DWORD PTR _h$75056[ebp]
	lea	ecx, DWORD PTR [eax+edx+20]
	push	ecx
	lea	edx, DWORD PTR _s$75057[ebp]
	push	edx
	call	?AddHashHexToString@@YGXPADPBEI@Z	; AddHashHexToString
$LN10@PrintResul:
; Line 225
	mov	eax, DWORD PTR _h$75056[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	?GetColumnWidth@@YGII@Z			; GetColumnWidth
	mov	esi, eax
	lea	edx, DWORD PTR _s$75057[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	sub	esi, eax
	push	esi
	lea	eax, DWORD PTR _s$75057[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	lea	ecx, DWORD PTR _s$75057[ebp+eax]
	push	ecx
	call	?SetSpacesAndNul@@YGXPADI@Z		; SetSpacesAndNul
; Line 226
	cmp	DWORD PTR _i$75052[ebp], 0
	je	SHORT $LN9@PrintResul
; Line 227
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
$LN9@PrintResul:
; Line 228
	lea	edx, DWORD PTR _s$75057[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
; Line 229
	jmp	$LN12@PrintResul
$LN11@PrintResul:
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+306]
	test	ecx, ecx
	je	$LN8@PrintResul
; Line 233
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	?Add_Space@AString@@QAEXXZ		; AString::Add_Space
; Line 236
	lea	edx, DWORD PTR _s$75063[ebp]
	mov	DWORD PTR _p$75064[ebp], edx
; Line 238
	movzx	eax, BYTE PTR _showHash$[ebp]
	test	eax, eax
	je	$LN7@PrintResul
; Line 240
	lea	ecx, DWORD PTR _s$75063[ebp+13]
	mov	DWORD PTR _p$75064[ebp], ecx
; Line 241
	mov	edx, DWORD PTR _p$75064[ebp]
	push	edx
	mov	eax, DWORD PTR _fileSize$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _fileSize$[ebp]
	push	ecx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 242
	mov	edx, DWORD PTR _p$75064[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	ecx, 13					; 0000000dH
	sub	ecx, eax
	mov	DWORD PTR _numSpaces$75066[ebp], ecx
; Line 243
	cmp	DWORD PTR _numSpaces$75066[ebp], 0
	jle	SHORT $LN6@PrintResul
; Line 245
	mov	edx, DWORD PTR _p$75064[ebp]
	sub	edx, DWORD PTR _numSpaces$75066[ebp]
	mov	DWORD PTR _p$75064[ebp], edx
; Line 246
	mov	DWORD PTR _i$75070[ebp], 0
	jmp	SHORT $LN5@PrintResul
$LN4@PrintResul:
	mov	eax, DWORD PTR _i$75070[ebp]
	add	eax, 1
	mov	DWORD PTR _i$75070[ebp], eax
$LN5@PrintResul:
	mov	ecx, DWORD PTR _i$75070[ebp]
	cmp	ecx, DWORD PTR _numSpaces$75066[ebp]
	jae	SHORT $LN6@PrintResul
; Line 247
	mov	edx, DWORD PTR _p$75064[ebp]
	add	edx, DWORD PTR _i$75070[ebp]
	mov	BYTE PTR [edx], 32			; 00000020H
	jmp	SHORT $LN4@PrintResul
$LN6@PrintResul:
; Line 250
	jmp	SHORT $LN2@PrintResul
$LN7@PrintResul:
; Line 251
	push	13					; 0000000dH
	lea	eax, DWORD PTR _s$75063[ebp]
	push	eax
	call	?SetSpacesAndNul@@YGXPADI@Z		; SetSpacesAndNul
$LN2@PrintResul:
; Line 253
	mov	ecx, DWORD PTR _p$75064[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??YAString@@QAEAAV0@PBD@Z		; AString::operator+=
$LN8@PrintResul:
; Line 256
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+307]
	test	eax, eax
	je	SHORT $LN1@PrintResul
; Line 257
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddSpacesBeforeName@CHashCallbackConsole@@AAEXXZ ; CHashCallbackConsole::AddSpacesBeforeName
$LN1@PrintResul:
; Line 259
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 292				; 00000124H
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 260
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@PrintResul
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN19@PrintResul:
	DD	2
	DD	$LN18@PrintResul
$LN18@PrintResul:
	DD	-212					; ffffff2cH
	DD	192					; 000000c0H
	DD	$LN16@PrintResul
	DD	-268					; fffffef4H
	DD	45					; 0000002dH
	DD	$LN17@PrintResul
$LN17@PrintResul:
	DB	115					; 00000073H
	DB	0
$LN16@PrintResul:
	DB	115					; 00000073H
	DB	0
?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z ENDP ; CHashCallbackConsole::PrintResultLine
; Function compile flags: /Odtp /RTCsu
_i$74987 = -4						; size = 4
_s$ = 8							; size = 4
_num$ = 12						; size = 4
?SetSpacesAndNul@@YGXPADI@Z PROC			; SetSpacesAndNul
; Line 108
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 109
	mov	DWORD PTR _i$74987[ebp], 0
	jmp	SHORT $LN3@SetSpacesA
$LN2@SetSpacesA:
	mov	eax, DWORD PTR _i$74987[ebp]
	add	eax, 1
	mov	DWORD PTR _i$74987[ebp], eax
$LN3@SetSpacesA:
	mov	ecx, DWORD PTR _i$74987[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN1@SetSpacesA
; Line 110
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR _i$74987[ebp]
	mov	BYTE PTR [edx], 32			; 00000020H
	jmp	SHORT $LN2@SetSpacesA
$LN1@SetSpacesA:
; Line 111
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _num$[ebp]
	mov	BYTE PTR [eax], 0
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	8
?SetSpacesAndNul@@YGXPADI@Z ENDP			; SetSpacesAndNul
_TEXT	ENDS
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?SetOperationResult@CHashCallbackConsole@@UAEJ_KABUCHashBundle@@_N@Z ; CHashCallbackConsole::SetOperationResult
EXTRN	??6CStdOutStream@@QAEAAV0@PB_W@Z:PROC		; CStdOutStream::operator<<
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fileSize$ = 8						; size = 8
_hb$ = 16						; size = 4
_showHash$ = 20						; size = 1
?SetOperationResult@CHashCallbackConsole@@UAEJ_KABUCHashBundle@@_N@Z PROC ; CHashCallbackConsole::SetOperationResult
; _this$ = ecx
; Line 263
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 264
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	$LN5@SetOperati
; Line 266
	movzx	ecx, BYTE PTR _showHash$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hb$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _fileSize$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _fileSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z ; CHashCallbackConsole::PrintResultLine
; Line 267
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+307]
	test	eax, eax
	je	SHORT $LN4@SetOperati
; Line 269
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@SetOperati
; Line 270
	mov	edx, DWORD PTR _kEmptyFileAlias
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
; Line 271
	jmp	SHORT $LN4@SetOperati
$LN3@SetOperati:
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+184]
	call	??6CStdOutStream@@QAEAAV0@PB_W@Z	; CStdOutStream::operator<<
$LN4@SetOperati:
; Line 274
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
$LN5@SetOperati:
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@SetOperati
; Line 279
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 1
	mov	eax, DWORD PTR [ecx+28]
	adc	eax, 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], edx
	mov	DWORD PTR [ecx+28], eax
; Line 280
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Print@CPercentPrinter@@QAEXXZ		; CPercentPrinter::Print
$LN1@SetOperati:
; Line 283
	call	?CheckBreak2@@YGJXZ			; CheckBreak2
; Line 284
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetOperationResult@CHashCallbackConsole@@UAEJ_KABUCHashBundle@@_N@Z ENDP ; CHashCallbackConsole::SetOperationResult
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
_TEXT	ENDS
PUBLIC	?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z ; PrintHashStat
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv145 = -20						; size = 4
tv136 = -16						; size = 4
tv131 = -12						; size = 4
_h$75109 = -8						; size = 4
_i$75105 = -4						; size = 4
_so$ = 8						; size = 4
_hb$ = 12						; size = 4
?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z PROC ; PrintHashStat
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\hashcon.cpp
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 314
	mov	DWORD PTR _i$75105[ebp], 0
	jmp	SHORT $LN6@PrintHashS
$LN5@PrintHashS:
	mov	eax, DWORD PTR _i$75105[ebp]
	add	eax, 1
	mov	DWORD PTR _i$75105[ebp], eax
$LN6@PrintHashS:
	mov	ecx, DWORD PTR _hb$[ebp]
	add	ecx, 4
	call	?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ ; CObjectVector<CHasherState>::Size
	cmp	DWORD PTR _i$75105[ebp], eax
	jae	$LN7@PrintHashS
; Line 316
	mov	ecx, DWORD PTR _i$75105[ebp]
	push	ecx
	mov	ecx, DWORD PTR _hb$[ebp]
	add	ecx, 4
	call	??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z ; CObjectVector<CHasherState>::operator[]
	mov	DWORD PTR _h$75109[ebp], eax
; Line 317
	push	1
	mov	edx, DWORD PTR _h$75109[ebp]
	push	edx
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z ; PrintSum
; Line 318
	mov	ecx, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv131[ebp], ecx
	mov	edx, DWORD PTR tv131[ebp]
	cmp	DWORD PTR [edx+24], 1
	jne	SHORT $LN2@PrintHashS
	mov	eax, DWORD PTR tv131[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN2@PrintHashS
	mov	ecx, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	edx, DWORD PTR tv136[ebp]
	mov	eax, DWORD PTR tv136[ebp]
	mov	ecx, DWORD PTR [edx+16]
	or	ecx, DWORD PTR [eax+20]
	je	SHORT $LN3@PrintHashS
$LN2@PrintHashS:
; Line 319
	push	2
	mov	edx, DWORD PTR _h$75109[ebp]
	push	edx
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z ; PrintSum
$LN3@PrintHashS:
; Line 320
	mov	ecx, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv145[ebp], ecx
	mov	edx, DWORD PTR tv145[ebp]
	mov	eax, DWORD PTR tv145[ebp]
	mov	ecx, DWORD PTR [edx+32]
	or	ecx, DWORD PTR [eax+36]
	je	SHORT $LN1@PrintHashS
; Line 321
	push	3
	mov	edx, DWORD PTR _h$75109[ebp]
	push	edx
	mov	eax, DWORD PTR _so$[ebp]
	push	eax
	call	?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z ; PrintSum
$LN1@PrintHashS:
; Line 322
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 323
	jmp	$LN5@PrintHashS
$LN7@PrintHashS:
; Line 324
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z ENDP ; PrintHashStat
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	??0AString@@QAE@XZ:PROC				; AString::AString
xdata$x	SEGMENT
__unwindtable$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z$0
__ehfuncinfo$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
_s$ = -232						; size = 192
_temp$75098 = -32					; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_so$ = 8						; size = 4
_h$ = 12						; size = 4
_digestIndex$ = 16					; size = 4
?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z PROC ; PrintSum
; Line 295
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 296
	mov	ecx, DWORD PTR _h$[ebp]
	add	ecx, 4
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 299
	lea	ecx, DWORD PTR _temp$75098[ebp]
	call	??0AString@@QAE@XZ			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 300
	mov	ecx, DWORD PTR _h$[ebp]
	add	ecx, 4
	call	?Len@AString@@QBEIXZ			; AString::Len
	mov	ecx, 6
	sub	ecx, eax
	push	ecx
	lea	edx, DWORD PTR _temp$75098[ebp]
	push	edx
	call	?AddSpaces_if_Positive@@YGXAAVAString@@H@Z ; AddSpaces_if_Positive
; Line 301
	lea	ecx, DWORD PTR _temp$75098[ebp]
	call	??BAString@@QBEPBDXZ			; AString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 302
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _temp$75098[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 304
	mov	eax, DWORD PTR _digestIndex$[ebp]
	mov	ecx, DWORD PTR _k_DigestTitles[eax*4]
	push	ecx
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
; Line 307
	mov	BYTE PTR _s$[ebp], 0
; Line 308
	mov	edx, DWORD PTR _h$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _digestIndex$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _h$[ebp]
	lea	eax, DWORD PTR [edx+ecx+20]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?AddHashHexToString@@YGXPADPBEI@Z	; AddHashHexToString
; Line 309
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	ecx, DWORD PTR _so$[ebp]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 310
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@PrintSum
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN8@PrintSum:
	DD	2
	DD	$LN7@PrintSum
$LN7@PrintSum:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN4@PrintSum
	DD	-232					; ffffff18H
	DD	192					; 000000c0H
	DD	$LN5@PrintSum
$LN5@PrintSum:
	DB	115					; 00000073H
	DB	0
$LN4@PrintSum:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z$0:
	lea	ecx, DWORD PTR _temp$75098[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__ehhandler$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintSum@@YGXAAVCStdOutStream@@ABUCHasherState@@I@Z ENDP ; PrintSum
PUBLIC	__$ArrayPad$
PUBLIC	?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ; CHashCallbackConsole::PrintProperty
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = -44						; size = 32
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 8
?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z PROC	; CHashCallbackConsole::PrintProperty
; _this$ = ecx
; Line 327
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 329
	mov	BYTE PTR _s$[ebp], 58			; 0000003aH
; Line 330
	mov	BYTE PTR _s$[ebp+1], 32			; 00000020H
; Line 331
	lea	eax, DWORD PTR _s$[ebp+2]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?ConvertUInt64ToString@@YGX_KPAD@Z	; ConvertUInt64ToString
; Line 332
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@PBD@Z		; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 333
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PrintPrope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@PrintPrope:
	DD	1
	DD	$LN4@PrintPrope
$LN4@PrintPrope:
	DD	-44					; ffffffd4H
	DD	32					; 00000020H
	DD	$LN3@PrintPrope
$LN3@PrintPrope:
	DB	115					; 00000073H
	DB	0
?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ENDP	; CHashCallbackConsole::PrintProperty
_TEXT	ENDS
PUBLIC	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ	; CCallbackConsoleBase::ClosePercents2
PUBLIC	?AfterLastFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z ; CHashCallbackConsole::AfterLastFile
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv223 = -20						; size = 4
tv198 = -16						; size = 4
tv191 = -12						; size = 4
tv186 = -8						; size = 4
_this$ = -4						; size = 4
_hb$ = 8						; size = 4
?AfterLastFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z PROC ; CHashCallbackConsole::AfterLastFile
; _this$ = ecx
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 337
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ; CCallbackConsoleBase::ClosePercents2
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+305]
	test	ecx, ecx
	je	$LN5@AfterLastF
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+184], 0
	je	$LN5@AfterLastF
; Line 341
	mov	eax, DWORD PTR _hb$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintSeparatorLine@CHashCallbackConsole@@AAEXABV?$CObjectVector@UCHasherState@@@@@Z ; CHashCallbackConsole::PrintSeparatorLine
; Line 343
	push	1
	push	1
	mov	ecx, DWORD PTR _hb$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _hb$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintResultLine@CHashCallbackConsole@@AAEX_KABV?$CObjectVector@UCHasherState@@@@I_N@Z ; CHashCallbackConsole::PrintResultLine
; Line 345
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
	mov	ecx, eax
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 347
	mov	eax, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv186[ebp], eax
	mov	ecx, DWORD PTR tv186[ebp]
	cmp	DWORD PTR [ecx+24], 1
	jne	SHORT $LN3@AfterLastF
	mov	edx, DWORD PTR tv186[ebp]
	cmp	DWORD PTR [edx+28], 0
	jne	SHORT $LN3@AfterLastF
	mov	eax, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	mov	edx, DWORD PTR tv191[ebp]
	mov	eax, DWORD PTR [ecx+16]
	or	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@AfterLastF
$LN3@AfterLastF:
; Line 349
	mov	ecx, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv198[ebp], ecx
	mov	edx, DWORD PTR tv198[ebp]
	mov	eax, DWORD PTR tv198[ebp]
	mov	ecx, DWORD PTR [edx+16]
	or	ecx, DWORD PTR [eax+20]
	je	SHORT $LN2@AfterLastF
; Line 350
	mov	edx, DWORD PTR _hb$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	push	ecx
	push	OFFSET $SG75127
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ; CHashCallbackConsole::PrintProperty
$LN2@AfterLastF:
; Line 351
	mov	edx, DWORD PTR _hb$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	push	ecx
	push	OFFSET $SG75128
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ; CHashCallbackConsole::PrintProperty
$LN4@AfterLastF:
; Line 354
	mov	edx, DWORD PTR _hb$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	push	ecx
	push	OFFSET $SG75129
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ; CHashCallbackConsole::PrintProperty
; Line 356
	mov	edx, DWORD PTR _hb$[ebp]
	mov	DWORD PTR tv223[ebp], edx
	mov	eax, DWORD PTR tv223[ebp]
	mov	ecx, DWORD PTR tv223[ebp]
	mov	edx, DWORD PTR [eax+32]
	or	edx, DWORD PTR [ecx+36]
	je	SHORT $LN1@AfterLastF
; Line 358
	mov	eax, DWORD PTR _hb$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	push	edx
	push	OFFSET $SG75131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ; CHashCallbackConsole::PrintProperty
; Line 359
	mov	eax, DWORD PTR _hb$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	push	edx
	push	OFFSET $SG75132
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PrintProperty@CHashCallbackConsole@@AAEXPBD_K@Z ; CHashCallbackConsole::PrintProperty
$LN1@AfterLastF:
; Line 362
	push	OFFSET ?endl@@YGAAVCStdOutStream@@AAV1@@Z ; endl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	call	??6CStdOutStream@@QAEAAV0@P6GAAV0@AAV0@@Z@Z ; CStdOutStream::operator<<
; Line 363
	mov	ecx, DWORD PTR _hb$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	?PrintHashStat@@YGXAAVCStdOutStream@@ABUCHashBundle@@@Z ; PrintHashStat
$LN5@AfterLastF:
; Line 366
	xor	eax, eax
; Line 367
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AfterLastFile@CHashCallbackConsole@@UAEJABUCHashBundle@@@Z ENDP ; CHashCallbackConsole::AfterLastFile
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ClosePercents2@CCallbackConsoleBase@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ClosePercents2@CCallbackConsoleBase@@QAEXXZ PROC	; CCallbackConsoleBase::ClosePercents2, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\ui\console\updatecallbackconsole.h
; Line 74
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NeedPercents@CCallbackConsoleBase@@QBE_NXZ ; CCallbackConsoleBase::NeedPercents
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@ClosePerce@2
; Line 76
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClosePrint@CPercentPrinter@@QAEX_N@Z	; CPercentPrinter::ClosePrint
$LN2@ClosePerce@2:
; Line 77
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClosePercents2@CCallbackConsoleBase@@QAEXXZ ENDP	; CCallbackConsoleBase::ClosePercents2
_TEXT	ENDS
PUBLIC	?Size@?$CRecordVector@PAX@@QBEIXZ		; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ PROC	; CObjectVector<CHasherState>::Size, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\myvector.h
; Line 415
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Size@?$CRecordVector@PAX@@QBEIXZ	; CRecordVector<void *>::Size
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CObjectVector@UCHasherState@@@@QBEIXZ ENDP	; CObjectVector<CHasherState>::Size
_TEXT	ENDS
PUBLIC	??A?$CRecordVector@PAX@@QBEABQAXI@Z		; CRecordVector<void *>::operator[]
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z PROC ; CObjectVector<CHasherState>::operator[], COMDAT
; _this$ = ecx
; Line 450
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CRecordVector@PAX@@QBEABQAXI@Z	; CRecordVector<void *>::operator[]
	mov	eax, DWORD PTR [eax]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CObjectVector@UCHasherState@@@@QBEABUCHasherState@@I@Z ENDP ; CObjectVector<CHasherState>::operator[]
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Size@?$CRecordVector@PAX@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@?$CRecordVector@PAX@@QBEIXZ PROC			; CRecordVector<void *>::Size, COMDAT
; _this$ = ecx
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Size@?$CRecordVector@PAX@@QBEIXZ ENDP			; CRecordVector<void *>::Size
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??A?$CRecordVector@PAX@@QBEABQAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
??A?$CRecordVector@PAX@@QBEABQAXI@Z PROC		; CRecordVector<void *>::operator[], COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CRecordVector@PAX@@QBEABQAXI@Z ENDP		; CRecordVector<void *>::operator[]
_TEXT	ENDS
END

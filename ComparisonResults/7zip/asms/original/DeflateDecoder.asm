; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\7zip\Compress\DeflateDecoder.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_kLenStart32 DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	014H
	DB	018H
	DB	01cH
	DB	020H
	DB	028H
	DB	030H
	DB	038H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	080H
	DB	0a0H
	DB	0c0H
	DB	0e0H
	DB	0ffH
	DB	00H
	DB	00H
	ORG $+1
_kLenStart64 DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	014H
	DB	018H
	DB	01cH
	DB	020H
	DB	028H
	DB	030H
	DB	038H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	080H
	DB	0a0H
	DB	0c0H
	DB	0e0H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
_kLenDirectBits32 DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
_kLenDirectBits64 DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	010H
	DB	00H
	DB	00H
	ORG $+1
_kDistStart DD	00H
	DD	01H
	DD	02H
	DD	03H
	DD	04H
	DD	06H
	DD	08H
	DD	0cH
	DD	010H
	DD	018H
	DD	020H
	DD	030H
	DD	040H
	DD	060H
	DD	080H
	DD	0c0H
	DD	0100H
	DD	0180H
	DD	0200H
	DD	0300H
	DD	0400H
	DD	0600H
	DD	0800H
	DD	0c00H
	DD	01000H
	DD	01800H
	DD	02000H
	DD	03000H
	DD	04000H
	DD	06000H
	DD	08000H
	DD	0c000H
_kDistDirectBits DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	02H
	DB	03H
	DB	03H
	DB	04H
	DB	04H
	DB	05H
	DB	05H
	DB	06H
	DB	06H
	DB	07H
	DB	07H
	DB	08H
	DB	08H
	DB	09H
	DB	09H
	DB	0aH
	DB	0aH
	DB	0bH
	DB	0bH
	DB	0cH
	DB	0cH
	DB	0dH
	DB	0dH
	DB	0eH
	DB	0eH
_kCodeLengthAlphabetOrder DB 010H
	DB	011H
	DB	012H
	DB	00H
	DB	08H
	DB	07H
	DB	09H
	DB	06H
	DB	0aH
	DB	05H
	DB	0bH
	DB	04H
	DB	0cH
	DB	03H
	DB	0dH
	DB	02H
	DB	0eH
	DB	01H
	DB	0fH
CONST	ENDS
PUBLIC	??1CLzOutWindow@@QAE@XZ				; CLzOutWindow::~CLzOutWindow
PUBLIC	??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CDecoder<CInBuffer>::CDecoder<CInBuffer>
PUBLIC	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
PUBLIC	??0CLzOutWindow@@QAE@XZ				; CLzOutWindow::CLzOutWindow
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
PUBLIC	??0CMyUnknownImp@@QAE@XZ			; CMyUnknownImp::CMyUnknownImp
PUBLIC	??0ISequentialInStream@@QAE@XZ			; ISequentialInStream::ISequentialInStream
PUBLIC	??0ICompressSetOutStreamSize@@QAE@XZ		; ICompressSetOutStreamSize::ICompressSetOutStreamSize
PUBLIC	??0ICompressSetInStream@@QAE@XZ			; ICompressSetInStream::ICompressSetInStream
PUBLIC	??0ICompressGetInStreamProcessedSize@@QAE@XZ	; ICompressGetInStreamProcessedSize::ICompressGetInStreamProcessedSize
PUBLIC	??0ICompressCoder@@QAE@XZ			; ICompressCoder::ICompressCoder
PUBLIC	??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z ; NCompress::NDeflate::NDecoder::CCoder::CCoder
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8	; NCompress::NDeflate::NDecoder::CCoder `RTTI Type Descriptor'
PUBLIC	??_R3CCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCoder@NDecoder@NDeflate@NCompress@@8	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICompressCoder@@8			; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICompressCoder@@@8			; ICompressCoder `RTTI Type Descriptor'
PUBLIC	??_R3ICompressCoder@@8				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressCoder@@8				; ICompressCoder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AUICompressGetInStreamProcessedSize@@@8	; ICompressGetInStreamProcessedSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressGetInStreamProcessedSize@@8	; ICompressGetInStreamProcessedSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressGetInStreamProcessedSize@@8	; ICompressGetInStreamProcessedSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AUICompressSetInStream@@@8		; ICompressSetInStream `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetInStream@@8			; ICompressSetInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetInStream@@8		; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R1M@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUICompressSetOutStreamSize@@@8		; ICompressSetOutStreamSize `RTTI Type Descriptor'
PUBLIC	??_R3ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICompressSetOutStreamSize@@8		; ICompressSetOutStreamSize::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICompressSetOutStreamSize@@8	; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
PUBLIC	??_R1BA@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUISequentialInStream@@@8			; ISequentialInStream `RTTI Type Descriptor'
PUBLIC	??_R3ISequentialInStream@@8			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISequentialInStream@@8			; ISequentialInStream::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISequentialInStream@@8		; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R0?AVCMyUnknownImp@@@8			; CMyUnknownImp `RTTI Type Descriptor'
PUBLIC	??_R3CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMyUnknownImp@@8				; CMyUnknownImp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMyUnknownImp@@8			; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
PUBLIC	?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NDecoder::CCoder::Code
PUBLIC	?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeResume
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}'
PUBLIC	?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z ; NCompress::NDeflate::NDecoder::CCoder::GetInStreamProcessedSize
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}'
PUBLIC	?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z ; NCompress::NDeflate::NDecoder::CCoder::SetInStream
PUBLIC	?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ ; NCompress::NDeflate::NDecoder::CCoder::ReleaseInStream
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}'
PUBLIC	?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z ; NCompress::NDeflate::NDecoder::CCoder::SetOutStreamSize
PUBLIC	??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}'
PUBLIC	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}'
PUBLIC	?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}'
PUBLIC	?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z ; NCompress::NDeflate::NDecoder::CCoder::Read
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z:PROC ; NCompress::NDeflate::NDecoder::CCoder::`vector deleting destructor'
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.cpp
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	0cH
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R2CMyUnknownImp@@8
rdata$r	SEGMENT
??_R2CMyUnknownImp@@8 DD FLAT:??_R1A@?0A@EA@CMyUnknownImp@@8 ; CMyUnknownImp::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMyUnknownImp@@8
rdata$r	SEGMENT
??_R3CMyUnknownImp@@8 DD 00H				; CMyUnknownImp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMyUnknownImp@@@8
_DATA	SEGMENT
??_R0?AVCMyUnknownImp@@@8 DD FLAT:??_7type_info@@6B@	; CMyUnknownImp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMyUnknownImp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@CMyUnknownImp@@8 DD FLAT:??_R0?AVCMyUnknownImp@@@8 ; CMyUnknownImp::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ISequentialInStream@@8
rdata$r	SEGMENT
??_R2ISequentialInStream@@8 DD FLAT:??_R1A@?0A@EA@ISequentialInStream@@8 ; ISequentialInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ISequentialInStream@@8
rdata$r	SEGMENT
??_R3ISequentialInStream@@8 DD 00H			; ISequentialInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUISequentialInStream@@@8
_DATA	SEGMENT
??_R0?AUISequentialInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ISequentialInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUISequentialInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@ISequentialInStream@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@ISequentialInStream@@8 DD FLAT:??_R0?AUISequentialInStream@@@8 ; ISequentialInStream::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1M@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (12,-1,0,66)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R2ICompressSetOutStreamSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetOutStreamSize@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R3ICompressSetOutStreamSize@@8 DD 00H		; ICompressSetOutStreamSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetOutStreamSize@@@8
_DATA	SEGMENT
??_R0?AUICompressSetOutStreamSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetOutStreamSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetOutStreamSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@ICompressSetOutStreamSize@@8 DD FLAT:??_R0?AUICompressSetOutStreamSize@@@8 ; ICompressSetOutStreamSize::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	01H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressSetInStream@@8
rdata$r	SEGMENT
??_R2ICompressSetInStream@@8 DD FLAT:??_R1A@?0A@EA@ICompressSetInStream@@8 ; ICompressSetInStream::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressSetInStream@@8
rdata$r	SEGMENT
??_R3ICompressSetInStream@@8 DD 00H			; ICompressSetInStream::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressSetInStream@@@8
_DATA	SEGMENT
??_R0?AUICompressSetInStream@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressSetInStream `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressSetInStream@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EA@ICompressSetInStream@@8
rdata$r	SEGMENT
??_R17?0A@EA@ICompressSetInStream@@8 DD FLAT:??_R0?AUICompressSetInStream@@@8 ; ICompressSetInStream::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R2ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R1A@?0A@EA@ICompressGetInStreamProcessedSize@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R3ICompressGetInStreamProcessedSize@@8 DD 00H	; ICompressGetInStreamProcessedSize::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressGetInStreamProcessedSize@@@8
_DATA	SEGMENT
??_R0?AUICompressGetInStreamProcessedSize@@@8 DD FLAT:??_7type_info@@6B@ ; ICompressGetInStreamProcessedSize `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressGetInStreamProcessedSize@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
rdata$r	SEGMENT
??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8 DD FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8 ; ICompressGetInStreamProcessedSize::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2ICompressCoder@@8
rdata$r	SEGMENT
??_R2ICompressCoder@@8 DD FLAT:??_R1A@?0A@EA@ICompressCoder@@8 ; ICompressCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICompressCoder@@8
rdata$r	SEGMENT
??_R3ICompressCoder@@8 DD 00H				; ICompressCoder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICompressCoder@@@8
_DATA	SEGMENT
??_R0?AUICompressCoder@@@8 DD FLAT:??_7type_info@@6B@	; ICompressCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICompressCoder@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICompressCoder@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICompressCoder@@8 DD FLAT:??_R0?AUICompressCoder@@@8 ; ICompressCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R2CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R2CCoder@NDecoder@NDeflate@NCompress@@8 DD FLAT:??_R1A@?0A@EA@CCoder@NDecoder@NDeflate@NCompress@@8 ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICompressCoder@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@ICompressGetInStreamProcessedSize@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@ICompressSetInStream@@8
	DD	FLAT:??_R17?0A@EC@IUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@ICompressSetOutStreamSize@@8
	DD	FLAT:??_R1M@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BA@?0A@EA@ISequentialInStream@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@CMyUnknownImp@@8
rdata$r	ENDS
;	COMDAT ??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	SEGMENT
??_R3CCoder@NDecoder@NDeflate@NCompress@@8 DD 00H	; NCompress::NDeflate::NDecoder::CCoder::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0cH
	DD	FLAT:??_R2CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
_DATA	SEGMENT
??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8 DD FLAT:??_7type_info@@6B@ ; NCompress::NDeflate::NDecoder::CCoder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCoder@NDecoder@NDeflate@NCompress@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
rdata$r	SEGMENT
??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD 00H ; NCompress::NDeflate::NDecoder::CCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCCoder@NDecoder@NDeflate@NCompress@@@8
	DD	FLAT:??_R3CCoder@NDecoder@NDeflate@NCompress@@8
rdata$r	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
	DD	FLAT:?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
	DD	FLAT:?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
	DD	FLAT:?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z
	DD	FLAT:?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
	DD	FLAT:?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z
CONST	ENDS
;	COMDAT ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
CONST	SEGMENT
??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ DD FLAT:??_R4CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@ ; NCompress::NDeflate::NDecoder::CCoder::`vftable'
	DD	FLAT:?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
	DD	FLAT:?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z
	DD	FLAT:??_ECCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
	DD	FLAT:?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z$0
__ehfuncinfo$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_deflate64Mode$ = 8					; size = 1
_deflateNSIS$ = 12					; size = 1
??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z PROC	; NCompress::NDeflate::NDecoder::CCoder::CCoder
; _this$ = ecx
; Line 17
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ICompressCoder@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0ICompressGetInStreamProcessedSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0ICompressSetInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0ICompressSetOutStreamSize@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0ISequentialInStream@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CMyUnknownImp@@QAE@XZ		; CMyUnknownImp::CMyUnknownImp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0CLzOutWindow@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _deflateNSIS$[ebp]
	mov	BYTE PTR [edx+3414], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _deflate64Mode$[ebp]
	mov	BYTE PTR [ecx+3415], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+3416], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+3417], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3418], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+3428], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CLzOutWindow@@QAE@XZ
__ehhandler$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCoder@NDecoder@NDeflate@NCompress@@QAE@_N0@Z ENDP	; NCompress::NDeflate::NDecoder::CCoder::CCoder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CMyUnknownImp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMyUnknownImp@@QAE@XZ PROC				; CMyUnknownImp::CMyUnknownImp, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CMyUnknownImp@@QAE@XZ ENDP				; CMyUnknownImp::CMyUnknownImp
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	_IID_ISequentialInStream:BYTE
EXTRN	_IID_ICompressSetOutStreamSize:BYTE
EXTRN	_IID_ICompressSetInStream:BYTE
EXTRN	_IID_ICompressGetInStreamProcessedSize:BYTE
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv148 = -20						; size = 4
tv138 = -16						; size = 4
tv128 = -12						; size = 4
tv86 = -8						; size = 4
tv75 = -4						; size = 4
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_outObject$ = 16					; size = 4
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	DWORD PTR [eax], 0
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN10@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN13@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN14@QueryInter
$LN13@QueryInter:
	mov	DWORD PTR tv75[ebp], 0
$LN14@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	$LN9@QueryInter
$LN10@QueryInter:
	push	OFFSET _IID_ICompressGetInStreamProcessedSize
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN8@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN15@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN16@QueryInter
$LN15@QueryInter:
	mov	DWORD PTR tv86[ebp], 0
$LN16@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	$LN9@QueryInter
$LN8@QueryInter:
	push	OFFSET _IID_ICompressSetInStream
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN6@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN17@QueryInter
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	DWORD PTR tv128[ebp], ecx
	jmp	SHORT $LN18@QueryInter
$LN17@QueryInter:
	mov	DWORD PTR tv128[ebp], 0
$LN18@QueryInter:
	mov	edx, DWORD PTR _outObject$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN9@QueryInter
$LN6@QueryInter:
	push	OFFSET _IID_ICompressSetOutStreamSize
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN19@QueryInter
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR tv138[ebp], edx
	jmp	SHORT $LN20@QueryInter
$LN19@QueryInter:
	mov	DWORD PTR tv138[ebp], 0
$LN20@QueryInter:
	mov	eax, DWORD PTR _outObject$[ebp]
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN9@QueryInter
$LN4@QueryInter:
	push	OFFSET _IID_ISequentialInStream
	mov	edx, DWORD PTR _iid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@QueryInter
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN21@QueryInter
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv148[ebp], eax
	jmp	SHORT $LN22@QueryInter
$LN21@QueryInter:
	mov	DWORD PTR tv148[ebp], 0
$LN22@QueryInter:
	mov	ecx, DWORD PTR _outObject$[ebp]
	mov	edx, DWORD PTR tv148[ebp]
	mov	DWORD PTR [ecx], edx
	jmp	SHORT $LN9@QueryInter
$LN2@QueryInter:
	mov	eax, -2147467262			; 80004002H
	jmp	SHORT $LN11@QueryInter
$LN9@QueryInter:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
	xor	eax, eax
$LN11@QueryInter:
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv70 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ PROC	; NCompress::NDeflate::NDecoder::CCoder::AddRef, COMDAT
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+20], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ
_TEXT	SEGMENT
tv83 = -16						; size = 4
tv70 = -12						; size = 4
$T67972 = -8						; size = 4
$T67971 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::Release, COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR [edx+20], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN1@Release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	jmp	SHORT $LN2@Release
$LN1@Release:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T67972[ebp], edx
	mov	eax, DWORD PTR $T67972[ebp]
	mov	DWORD PTR $T67971[ebp], eax
	cmp	DWORD PTR $T67971[ebp], 0
	je	SHORT $LN4@Release
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T67971[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T67971[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN5@Release
$LN4@Release:
	mov	DWORD PTR tv83[ebp], 0
$LN5@Release:
	xor	eax, eax
$LN2@Release:
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::Release
_TEXT	ENDS
PUBLIC	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ	; NCompress::NDeflate::NDecoder::CCoder::~CCoder
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z PROC	; NCompress::NDeflate::NDecoder::CCoder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::~CCoder
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCCoder@NDecoder@NDeflate@NCompress@@UAEPAXI@Z ENDP	; NCompress::NDeflate::NDecoder::CCoder::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
PUBLIC	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1
__ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ PROC	; NCompress::NDeflate::NDecoder::CCoder::~CCoder, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressCoder@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressGetInStreamProcessedSize@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetInStream@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BICompressSetOutStreamSize@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CCoder@NDecoder@NDeflate@NCompress@@6BISequentialInStream@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1CLzOutWindow@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1CLzOutWindow@@QAE@XZ
__unwindfunclet$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
__ehhandler$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CCoder@NDecoder@NDeflate@NCompress@@UAE@XZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::~CCoder
PUBLIC	??1COutBuffer@@QAE@XZ				; COutBuffer::~COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::~CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1COutBuffer@@QAE@XZ			; COutBuffer::~COutBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::~CLzOutWindow
_TEXT	ENDS
EXTRN	?Free@COutBuffer@@QAEXXZ:PROC			; COutBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1COutBuffer@@QAE@XZ PROC				; COutBuffer::~COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 37
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@COutBuffer@@QAEXXZ		; COutBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1COutBuffer@@QAE@XZ ENDP				; COutBuffer::~COutBuffer
_TEXT	ENDS
PUBLIC	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP		; NBitl::CDecoder<CInBuffer>::~CDecoder<CInBuffer>
_TEXT	ENDS
PUBLIC	??1CInBuffer@@QAE@XZ				; CInBuffer::~CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CInBuffer@@QAE@XZ			; CInBuffer::~CInBuffer
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::~CBaseDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	?Free@CInBuffer@@QAEXXZ:PROC			; CInBuffer::Free
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CInBuffer@@QAE@XZ PROC				; CInBuffer::~CInBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 85
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Free@CInBuffer@@QAEXXZ			; CInBuffer::Free
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CInBuffer@@QAE@XZ ENDP				; CInBuffer::~CInBuffer
_TEXT	ENDS
PUBLIC	??_7ICompressCoder@@6B@				; ICompressCoder::`vftable'
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
PUBLIC	??_R4ICompressCoder@@6B@			; ICompressCoder::`RTTI Complete Object Locator'
EXTRN	__purecall:PROC
;	COMDAT ??_R4ICompressCoder@@6B@
rdata$r	SEGMENT
??_R4ICompressCoder@@6B@ DD 00H				; ICompressCoder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressCoder@@@8
	DD	FLAT:??_R3ICompressCoder@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressCoder@@6B@
CONST	SEGMENT
??_7ICompressCoder@@6B@ DD FLAT:??_R4ICompressCoder@@6B@ ; ICompressCoder::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressCoder@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressCoder@@QAE@XZ PROC				; ICompressCoder::ICompressCoder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressCoder@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressCoder@@QAE@XZ ENDP				; ICompressCoder::ICompressCoder
_TEXT	ENDS
PUBLIC	??_7ICompressGetInStreamProcessedSize@@6B@	; ICompressGetInStreamProcessedSize::`vftable'
PUBLIC	??_R4ICompressGetInStreamProcessedSize@@6B@	; ICompressGetInStreamProcessedSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressGetInStreamProcessedSize@@6B@
rdata$r	SEGMENT
??_R4ICompressGetInStreamProcessedSize@@6B@ DD 00H	; ICompressGetInStreamProcessedSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressGetInStreamProcessedSize@@@8
	DD	FLAT:??_R3ICompressGetInStreamProcessedSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressGetInStreamProcessedSize@@6B@
CONST	SEGMENT
??_7ICompressGetInStreamProcessedSize@@6B@ DD FLAT:??_R4ICompressGetInStreamProcessedSize@@6B@ ; ICompressGetInStreamProcessedSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressGetInStreamProcessedSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressGetInStreamProcessedSize@@QAE@XZ PROC	; ICompressGetInStreamProcessedSize::ICompressGetInStreamProcessedSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressGetInStreamProcessedSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressGetInStreamProcessedSize@@QAE@XZ ENDP	; ICompressGetInStreamProcessedSize::ICompressGetInStreamProcessedSize
_TEXT	ENDS
PUBLIC	??_7ICompressSetInStream@@6B@			; ICompressSetInStream::`vftable'
PUBLIC	??_R4ICompressSetInStream@@6B@			; ICompressSetInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetInStream@@6B@
rdata$r	SEGMENT
??_R4ICompressSetInStream@@6B@ DD 00H			; ICompressSetInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetInStream@@@8
	DD	FLAT:??_R3ICompressSetInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetInStream@@6B@
CONST	SEGMENT
??_7ICompressSetInStream@@6B@ DD FLAT:??_R4ICompressSetInStream@@6B@ ; ICompressSetInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetInStream@@QAE@XZ PROC			; ICompressSetInStream::ICompressSetInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetInStream@@QAE@XZ ENDP			; ICompressSetInStream::ICompressSetInStream
_TEXT	ENDS
PUBLIC	??_7ICompressSetOutStreamSize@@6B@		; ICompressSetOutStreamSize::`vftable'
PUBLIC	??_R4ICompressSetOutStreamSize@@6B@		; ICompressSetOutStreamSize::`RTTI Complete Object Locator'
;	COMDAT ??_R4ICompressSetOutStreamSize@@6B@
rdata$r	SEGMENT
??_R4ICompressSetOutStreamSize@@6B@ DD 00H		; ICompressSetOutStreamSize::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUICompressSetOutStreamSize@@@8
	DD	FLAT:??_R3ICompressSetOutStreamSize@@8
rdata$r	ENDS
;	COMDAT ??_7ICompressSetOutStreamSize@@6B@
CONST	SEGMENT
??_7ICompressSetOutStreamSize@@6B@ DD FLAT:??_R4ICompressSetOutStreamSize@@6B@ ; ICompressSetOutStreamSize::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ICompressSetOutStreamSize@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ICompressSetOutStreamSize@@QAE@XZ PROC		; ICompressSetOutStreamSize::ICompressSetOutStreamSize, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ICompressSetOutStreamSize@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ICompressSetOutStreamSize@@QAE@XZ ENDP		; ICompressSetOutStreamSize::ICompressSetOutStreamSize
_TEXT	ENDS
PUBLIC	??_7ISequentialInStream@@6B@			; ISequentialInStream::`vftable'
PUBLIC	??_R4ISequentialInStream@@6B@			; ISequentialInStream::`RTTI Complete Object Locator'
;	COMDAT ??_R4ISequentialInStream@@6B@
rdata$r	SEGMENT
??_R4ISequentialInStream@@6B@ DD 00H			; ISequentialInStream::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUISequentialInStream@@@8
	DD	FLAT:??_R3ISequentialInStream@@8
rdata$r	ENDS
;	COMDAT ??_7ISequentialInStream@@6B@
CONST	SEGMENT
??_7ISequentialInStream@@6B@ DD FLAT:??_R4ISequentialInStream@@6B@ ; ISequentialInStream::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0ISequentialInStream@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ISequentialInStream@@QAE@XZ PROC			; ISequentialInStream::ISequentialInStream, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ISequentialInStream@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0ISequentialInStream@@QAE@XZ ENDP			; ISequentialInStream::ISequentialInStream
_TEXT	ENDS
PUBLIC	??0COutBuffer@@QAE@XZ				; COutBuffer::COutBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CLzOutWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CLzOutWindow@@QAE@XZ PROC				; CLzOutWindow::CLzOutWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0COutBuffer@@QAE@XZ			; COutBuffer::COutBuffer
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CLzOutWindow@@QAE@XZ ENDP				; CLzOutWindow::CLzOutWindow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COutBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COutBuffer@@QAE@XZ PROC				; COutBuffer::COutBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0COutBuffer@@QAE@XZ ENDP				; COutBuffer::COutBuffer
_TEXT	ENDS
PUBLIC	??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ	; NBitl::CBaseDecoder<CInBuffer>::CBaseDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC		; NBitl::CDecoder<CInBuffer>::CDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP		; NBitl::CDecoder<CInBuffer>::CDecoder<CInBuffer>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??0CInBuffer@@QAE@XZ				; CInBuffer::CInBuffer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ PROC	; NBitl::CBaseDecoder<CInBuffer>::CBaseDecoder<CInBuffer>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CInBuffer@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE@XZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::CBaseDecoder<CInBuffer>
_TEXT	ENDS
EXTRN	??0CInBufferBase@@QAE@XZ:PROC			; CInBufferBase::CInBufferBase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CInBuffer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CInBuffer@@QAE@XZ PROC				; CInBuffer::CInBuffer, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CInBufferBase@@QAE@XZ		; CInBufferBase::CInBufferBase
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CInBuffer@@QAE@XZ ENDP				; CInBuffer::CInBuffer
_TEXT	ENDS
PUBLIC	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
PUBLIC	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.cpp
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 21
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
; Line 22
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
_TEXT	ENDS
PUBLIC	?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ; NBitl::CDecoder<CInBuffer>::ReadAlignedByte
PUBLIC	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
; _this$ = ecx
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 26
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ; NBitl::CDecoder<CInBuffer>::ReadAlignedByte
; Line 27
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
_TEXT	ENDS
PUBLIC	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,19>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
PUBLIC	?DeCodeLevelTable@CCoder@NDecoder@NDeflate@NCompress@@AAE_NPAEI@Z ; NCompress::NDeflate::NDecoder::CCoder::DeCodeLevelTable
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_num$67227 = -20					; size = 4
_num$67222 = -16					; size = 4
_number$67212 = -12					; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
_values$ = 8						; size = 4
_numSymbols$ = 12					; size = 4
?DeCodeLevelTable@CCoder@NDecoder@NDeflate@NCompress@@AAE_NPAEI@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::DeCodeLevelTable
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	DWORD PTR _i$[ebp], 0
$LN18@DeCodeLeve:
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2688				; 00000a80H
	call	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,19>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
	mov	DWORD PTR _number$67212[ebp], eax
; Line 35
	cmp	DWORD PTR _number$67212[ebp], 16	; 00000010H
	jae	SHORT $LN15@DeCodeLeve
; Line 36
	mov	ecx, DWORD PTR _values$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	dl, BYTE PTR _number$67212[ebp]
	mov	BYTE PTR [ecx], dl
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	$LN17@DeCodeLeve
$LN15@DeCodeLeve:
; Line 37
	cmp	DWORD PTR _number$67212[ebp], 19	; 00000013H
	jae	$LN13@DeCodeLeve
; Line 39
	cmp	DWORD PTR _number$67212[ebp], 16	; 00000010H
	jne	SHORT $LN12@DeCodeLeve
; Line 41
	cmp	DWORD PTR _i$[ebp], 0
	jne	SHORT $LN11@DeCodeLeve
; Line 42
	xor	al, al
	jmp	$LN19@DeCodeLeve
$LN11@DeCodeLeve:
; Line 43
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	add	eax, 3
	mov	DWORD PTR _num$67222[ebp], eax
; Line 44
	jmp	SHORT $LN10@DeCodeLeve
$LN9@DeCodeLeve:
	mov	ecx, DWORD PTR _num$67222[ebp]
	sub	ecx, 1
	mov	DWORD PTR _num$67222[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN10@DeCodeLeve:
	cmp	DWORD PTR _num$67222[ebp], 0
	jbe	SHORT $LN8@DeCodeLeve
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numSymbols$[ebp]
	jae	SHORT $LN8@DeCodeLeve
; Line 45
	mov	ecx, DWORD PTR _values$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _values$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	al, BYTE PTR [edx-1]
	mov	BYTE PTR [ecx], al
	jmp	SHORT $LN9@DeCodeLeve
$LN8@DeCodeLeve:
; Line 47
	jmp	SHORT $LN7@DeCodeLeve
$LN12@DeCodeLeve:
; Line 50
	cmp	DWORD PTR _number$67212[ebp], 17	; 00000011H
	jne	SHORT $LN6@DeCodeLeve
; Line 51
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	add	eax, 3
	mov	DWORD PTR _num$67227[ebp], eax
; Line 52
	jmp	SHORT $LN5@DeCodeLeve
$LN6@DeCodeLeve:
; Line 53
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	add	eax, 11					; 0000000bH
	mov	DWORD PTR _num$67227[ebp], eax
$LN5@DeCodeLeve:
; Line 54
	jmp	SHORT $LN4@DeCodeLeve
$LN3@DeCodeLeve:
	mov	ecx, DWORD PTR _num$67227[ebp]
	sub	ecx, 1
	mov	DWORD PTR _num$67227[ebp], ecx
$LN4@DeCodeLeve:
	cmp	DWORD PTR _num$67227[ebp], 0
	jbe	SHORT $LN7@DeCodeLeve
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _numSymbols$[ebp]
	jae	SHORT $LN7@DeCodeLeve
; Line 55
	mov	eax, DWORD PTR _values$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN3@DeCodeLeve
$LN7@DeCodeLeve:
; Line 58
	jmp	SHORT $LN17@DeCodeLeve
$LN13@DeCodeLeve:
; Line 59
	xor	al, al
	jmp	SHORT $LN19@DeCodeLeve
$LN17@DeCodeLeve:
; Line 61
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _numSymbols$[ebp]
	jb	$LN18@DeCodeLeve
; Line 62
	mov	al, 1
$LN19@DeCodeLeve:
; Line 63
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeCodeLevelTable@CCoder@NDecoder@NDeflate@NCompress@@AAE_NPAEI@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::DeCodeLevelTable
_TEXT	ENDS
PUBLIC	?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<15,32>::SetCodeLengths
PUBLIC	?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<15,288>::SetCodeLengths
PUBLIC	?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ	; NCompress::NDeflate::CLevels::SubClear
PUBLIC	?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<15,19>::SetCodeLengths
PUBLIC	?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::CLevels::SetFixedLevels
PUBLIC	?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAligned_UInt16
PUBLIC	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::AlignToByte
PUBLIC	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
PUBLIC	__$ArrayPad$
PUBLIC	?ReadTables@CCoder@NDecoder@NDeflate@NCompress@@AAE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadTables
EXTRN	_memcpy:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_tmpLevels$67263 = -708					; size = 320
_position$67257 = -384					; size = 4
_i$67253 = -380						; size = 4
_levelLevels$67252 = -372				; size = 19
_numLevelCodes$67249 = -348				; size = 4
_numLitLenLevels$67248 = -344				; size = 4
_levels$ = -336						; size = 320
_blockType$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?ReadTables@CCoder@NDecoder@NDeflate@NCompress@@AAE_NXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::ReadTables
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 712				; 000002c8H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-712]
	mov	ecx, 178				; 000000b2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	sub	eax, 1
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+3412], al
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN19@ReadTables
; Line 71
	xor	al, al
	jmp	$LN20@ReadTables
$LN19@ReadTables:
; Line 72
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	mov	DWORD PTR _blockType$[ebp], eax
; Line 73
	cmp	DWORD PTR _blockType$[ebp], 2
	jbe	SHORT $LN18@ReadTables
; Line 74
	xor	al, al
	jmp	$LN20@ReadTables
$LN18@ReadTables:
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN17@ReadTables
; Line 76
	xor	al, al
	jmp	$LN20@ReadTables
$LN17@ReadTables:
; Line 78
	cmp	DWORD PTR _blockType$[ebp], 0
	jne	SHORT $LN16@ReadTables
; Line 80
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+3413], 1
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::AlignToByte
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAligned_UInt16
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+3404], eax
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+3414]
	test	ecx, ecx
	je	SHORT $LN15@ReadTables
; Line 84
	mov	al, 1
	jmp	$LN20@ReadTables
$LN15@ReadTables:
; Line 85
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAligned_UInt16
	not	eax
	movzx	edx, ax
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+3404], edx
	sete	cl
	mov	al, cl
	jmp	$LN20@ReadTables
$LN16@ReadTables:
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3413], 0
; Line 91
	cmp	DWORD PTR _blockType$[ebp], 1
	jne	SHORT $LN14@ReadTables
; Line 93
	lea	ecx, DWORD PTR _levels$[ebp]
	call	?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::CLevels::SetFixedLevels
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+3415]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2
	add	ecx, 30					; 0000001eH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+3408], ecx
; Line 96
	jmp	$LN13@ReadTables
$LN14@ReadTables:
; Line 98
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	add	eax, 257				; 00000101H
	mov	DWORD PTR _numLitLenLevels$67248[ebp], eax
; Line 99
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3408], eax
; Line 100
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	add	eax, 4
	mov	DWORD PTR _numLevelCodes$67249[ebp], eax
; Line 102
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3415]
	test	eax, eax
	jne	SHORT $LN12@ReadTables
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+3408], 30		; 0000001eH
	jbe	SHORT $LN12@ReadTables
; Line 104
	xor	al, al
	jmp	$LN20@ReadTables
$LN12@ReadTables:
; Line 107
	mov	DWORD PTR _i$67253[ebp], 0
	jmp	SHORT $LN10@ReadTables
$LN9@ReadTables:
	mov	edx, DWORD PTR _i$67253[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67253[ebp], edx
$LN10@ReadTables:
	cmp	DWORD PTR _i$67253[ebp], 19		; 00000013H
	jae	SHORT $LN8@ReadTables
; Line 109
	mov	eax, DWORD PTR _i$67253[ebp]
	movzx	ecx, BYTE PTR _kCodeLengthAlphabetOrder[eax]
	mov	DWORD PTR _position$67257[ebp], ecx
; Line 110
	mov	edx, DWORD PTR _i$67253[ebp]
	cmp	edx, DWORD PTR _numLevelCodes$67249[ebp]
	jae	SHORT $LN7@ReadTables
; Line 111
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@CCoder@NDecoder@NDeflate@NCompress@@AAEII@Z ; NCompress::NDeflate::NDecoder::CCoder::ReadBits
	mov	ecx, DWORD PTR _position$67257[ebp]
	mov	BYTE PTR _levelLevels$67252[ebp+ecx], al
; Line 112
	jmp	SHORT $LN6@ReadTables
$LN7@ReadTables:
; Line 113
	mov	edx, DWORD PTR _position$67257[ebp]
	mov	BYTE PTR _levelLevels$67252[ebp+edx], 0
$LN6@ReadTables:
; Line 114
	jmp	SHORT $LN9@ReadTables
$LN8@ReadTables:
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@ReadTables
; Line 117
	xor	al, al
	jmp	$LN20@ReadTables
$LN5@ReadTables:
; Line 119
	lea	ecx, DWORD PTR _levelLevels$67252[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2688				; 00000a80H
	call	?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<15,19>::SetCodeLengths
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@ReadTables
	xor	al, al
	jmp	$LN20@ReadTables
$LN4@ReadTables:
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _numLitLenLevels$67248[ebp]
	add	ecx, DWORD PTR [eax+3408]
	push	ecx
	lea	edx, DWORD PTR _tmpLevels$67263[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeCodeLevelTable@CCoder@NDecoder@NDeflate@NCompress@@AAE_NPAEI@Z ; NCompress::NDeflate::NDecoder::CCoder::DeCodeLevelTable
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@ReadTables
; Line 123
	xor	al, al
	jmp	$LN20@ReadTables
$LN3@ReadTables:
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ReadTables
; Line 126
	xor	al, al
	jmp	SHORT $LN20@ReadTables
$LN2@ReadTables:
; Line 128
	lea	ecx, DWORD PTR _levels$[ebp]
	call	?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ ; NCompress::NDeflate::CLevels::SubClear
; Line 129
	mov	edx, DWORD PTR _numLitLenLevels$67248[ebp]
	push	edx
	lea	eax, DWORD PTR _tmpLevels$67263[ebp]
	push	eax
	lea	ecx, DWORD PTR _levels$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 130
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3408]
	push	eax
	mov	ecx, DWORD PTR _numLitLenLevels$67248[ebp]
	lea	edx, DWORD PTR _tmpLevels$67263[ebp+ecx]
	push	edx
	lea	eax, DWORD PTR _levels$[ebp+288]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN13@ReadTables:
; Line 132
	lea	ecx, DWORD PTR _levels$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<15,288>::SetCodeLengths
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@ReadTables
	xor	al, al
	jmp	SHORT $LN20@ReadTables
$LN1@ReadTables:
; Line 133
	lea	eax, DWORD PTR _levels$[ebp+288]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1920				; 00000780H
	call	?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z ; NCompress::NHuffman::CDecoder<15,32>::SetCodeLengths
$LN20@ReadTables:
; Line 134
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@ReadTables
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 712				; 000002c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN26@ReadTables:
	DD	3
	DD	$LN25@ReadTables
$LN25@ReadTables:
	DD	-336					; fffffeb0H
	DD	320					; 00000140H
	DD	$LN22@ReadTables
	DD	-372					; fffffe8cH
	DD	19					; 00000013H
	DD	$LN23@ReadTables
	DD	-708					; fffffd3cH
	DD	320					; 00000140H
	DD	$LN24@ReadTables
$LN24@ReadTables:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN23@ReadTables:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
$LN22@ReadTables:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	115					; 00000073H
	DB	0
?ReadTables@CCoder@NDecoder@NDeflate@NCompress@@AAE_NXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::ReadTables
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ PROC	; NCompress::NDeflate::CLevels::SubClear, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflateconst.h
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 109
	mov	DWORD PTR _i$[ebp], 257			; 00000101H
	jmp	SHORT $LN6@SubClear
$LN5@SubClear:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@SubClear:
	cmp	DWORD PTR _i$[ebp], 288			; 00000120H
	jae	SHORT $LN4@SubClear
; Line 110
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], 0
	jmp	SHORT $LN5@SubClear
$LN4@SubClear:
; Line 111
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SubClear
$LN2@SubClear:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@SubClear:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jae	SHORT $LN7@SubClear
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax+288], 0
	jmp	SHORT $LN2@SubClear
$LN7@SubClear:
; Line 113
	mov	esp, ebp
	pop	ebp
	ret	0
?SubClear@CLevels@NDeflate@NCompress@@QAEXXZ ENDP	; NCompress::NDeflate::CLevels::SubClear
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ
_TEXT	SEGMENT
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ PROC	; NCompress::NDeflate::CLevels::SetFixedLevels, COMDAT
; _this$ = ecx
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@SetFixedLe
$LN14@SetFixedLe:
; Line 119
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 144			; 00000090H
	jae	SHORT $LN13@SetFixedLe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], 8
	jmp	SHORT $LN14@SetFixedLe
$LN13@SetFixedLe:
; Line 120
	jmp	SHORT $LN12@SetFixedLe
$LN11@SetFixedLe:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN12@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 256			; 00000100H
	jae	SHORT $LN10@SetFixedLe
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 9
	jmp	SHORT $LN11@SetFixedLe
$LN10@SetFixedLe:
; Line 121
	jmp	SHORT $LN9@SetFixedLe
$LN8@SetFixedLe:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN9@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 280			; 00000118H
	jae	SHORT $LN7@SetFixedLe
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], 7
	jmp	SHORT $LN8@SetFixedLe
$LN7@SetFixedLe:
; Line 122
	jmp	SHORT $LN6@SetFixedLe
$LN5@SetFixedLe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 288			; 00000120H
	jae	SHORT $LN4@SetFixedLe
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [ecx], 8
	jmp	SHORT $LN5@SetFixedLe
$LN4@SetFixedLe:
; Line 124
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@SetFixedLe
$LN2@SetFixedLe:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@SetFixedLe:
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jae	SHORT $LN16@SetFixedLe
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax+288], 5
	jmp	SHORT $LN2@SetFixedLe
$LN16@SetFixedLe:
; Line 126
	mov	esp, ebp
	pop	ebp
	ret	0
?SetFixedLevels@CLevels@NDeflate@NCompress@@QAEXXZ ENDP	; NCompress::NDeflate::CLevels::SetFixedLevels
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ
_TEXT	SEGMENT
_v$ = -8						; size = 4
_this$ = -4						; size = 4
?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::ReadAligned_UInt16, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ; NBitl::CDecoder<CInBuffer>::ReadAlignedByte
	movzx	eax, al
	mov	DWORD PTR _v$[ebp], eax
; Line 136
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ; NBitl::CDecoder<CInBuffer>::ReadAlignedByte
	movzx	eax, al
	shl	eax, 8
	or	eax, DWORD PTR _v$[ebp]
; Line 137
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadAligned_UInt16@CCoder@NDecoder@NDeflate@NCompress@@QAEIXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::ReadAligned_UInt16
_TEXT	ENDS
PUBLIC	?CopyBlock@CLzOutWindow@@QAE_NII@Z		; CLzOutWindow::CopyBlock
PUBLIC	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,32>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
PUBLIC	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,288>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
PUBLIC	?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead_Fast
PUBLIC	?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ; NBitl::CDecoder<CInBuffer>::ReadDirectByte
PUBLIC	?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ThereAreDataInBitsBuffer
PUBLIC	?PutByte@CLzOutWindow@@QAEXE@Z			; CLzOutWindow::PutByte
PUBLIC	?GetByte@CLzOutWindow@@QBEEI@Z			; CLzOutWindow::GetByte
PUBLIC	?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
PUBLIC	?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeSpec
EXTRN	?Init@CLzOutWindow@@QAEX_N@Z:PROC		; CLzOutWindow::Init
EXTRN	?Create@COutBuffer@@QAE_NI@Z:PROC		; COutBuffer::Create
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_distance$67333 = -32					; size = 4
_locLen$67325 = -28					; size = 4
_numBits$67322 = -24					; size = 4
_len$67321 = -20					; size = 4
_number$67311 = -16					; size = 4
_b$67284 = -9						; size = 1
___result_$67278 = -8					; size = 4
_this$ = -4						; size = 4
_curSize$ = 8						; size = 4
_finishInputStream$ = 12				; size = 1
?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::CodeSpec
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.cpp
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+3420], -1
	jne	SHORT $LN41@CodeSpec
; Line 139
	xor	eax, eax
	jmp	$LN42@CodeSpec
$LN41@CodeSpec:
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+3420], -2		; fffffffeH
	jne	$LN36@CodeSpec
; Line 142
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3416]
	test	eax, eax
	jne	SHORT $LN39@CodeSpec
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+3415]
	neg	edx
	sbb	edx, edx
	and	edx, 32768				; 00008000H
	add	edx, 32768				; 00008000H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Create@COutBuffer@@QAE_NI@Z		; COutBuffer::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN39@CodeSpec
; Line 144
	mov	eax, -2147024882			; 8007000eH
	jmp	$LN42@CodeSpec
$LN39@CodeSpec:
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+3418]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
	mov	DWORD PTR ___result_$67278[ebp], eax
	cmp	DWORD PTR ___result_$67278[ebp], 0
	je	SHORT $LN37@CodeSpec
	mov	eax, DWORD PTR ___result_$67278[ebp]
	jmp	$LN42@CodeSpec
$LN37@CodeSpec:
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+3416]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Init@CLzOutWindow@@QAEX_N@Z		; CLzOutWindow::Init
; Line 147
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3412], 0
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+3420], 0
; Line 149
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+3419], 1
$LN36@CodeSpec:
; Line 152
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+3420], 0
	jle	SHORT $LN34@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	SHORT $LN34@CodeSpec
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+3420]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+3420], ecx
; Line 155
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+3424]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?GetByte@CLzOutWindow@@QBEEI@Z		; CLzOutWindow::GetByte
	mov	BYTE PTR _b$67284[ebp], al
; Line 156
	movzx	edx, BYTE PTR _b$67284[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 157
	mov	eax, DWORD PTR _curSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _curSize$[ebp], eax
; Line 158
	jmp	SHORT $LN36@CodeSpec
$LN34@CodeSpec:
; Line 160
	cmp	DWORD PTR _curSize$[ebp], 0
	ja	SHORT $LN32@CodeSpec
	movzx	ecx, BYTE PTR _finishInputStream$[ebp]
	test	ecx, ecx
	je	$LN33@CodeSpec
$LN32@CodeSpec:
; Line 162
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN31@CodeSpec
; Line 163
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN31@CodeSpec:
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+3419]
	test	ecx, ecx
	je	SHORT $LN30@CodeSpec
; Line 166
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3412]
	test	eax, eax
	je	SHORT $LN29@CodeSpec
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3420], -1
; Line 169
	jmp	$LN33@CodeSpec
$LN29@CodeSpec:
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadTables@CCoder@NDecoder@NDeflate@NCompress@@AAE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadTables
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN28@CodeSpec
; Line 172
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN28@CodeSpec:
; Line 173
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN27@CodeSpec
; Line 174
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN27@CodeSpec:
; Line 175
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+3419], 0
$LN30@CodeSpec:
; Line 178
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3413]
	test	eax, eax
	je	$LN18@CodeSpec
; Line 180
	movzx	ecx, BYTE PTR _finishInputStream$[ebp]
	test	ecx, ecx
	je	SHORT $LN25@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jne	SHORT $LN25@CodeSpec
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+3404], 0
	je	SHORT $LN25@CodeSpec
; Line 181
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN25@CodeSpec:
; Line 184
	jmp	SHORT $LN24@CodeSpec
$LN23@CodeSpec:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+3404]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+3404], ecx
	mov	eax, DWORD PTR _curSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _curSize$[ebp], eax
$LN24@CodeSpec:
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+3404], 0
	jbe	SHORT $LN22@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	SHORT $LN22@CodeSpec
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ThereAreDataInBitsBuffer
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@CodeSpec
; Line 185
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
	jmp	SHORT $LN23@CodeSpec
$LN22@CodeSpec:
; Line 186
	jmp	SHORT $LN21@CodeSpec
$LN20@CodeSpec:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+3404]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+3404], edx
	mov	ecx, DWORD PTR _curSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _curSize$[ebp], ecx
$LN21@CodeSpec:
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+3404], 0
	jbe	SHORT $LN19@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	SHORT $LN19@CodeSpec
; Line 187
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ; NBitl::CDecoder<CInBuffer>::ReadDirectByte
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
	jmp	SHORT $LN20@CodeSpec
$LN19@CodeSpec:
; Line 188
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+3404], 0
	sete	dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+3419], dl
; Line 189
	jmp	$LN34@CodeSpec
$LN18@CodeSpec:
; Line 192
	cmp	DWORD PTR _curSize$[ebp], 0
	jbe	$LN17@CodeSpec
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead_Fast
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@CodeSpec
; Line 195
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN16@CodeSpec:
; Line 197
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,288>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
	mov	DWORD PTR _number$67311[ebp], eax
; Line 198
	cmp	DWORD PTR _number$67311[ebp], 256	; 00000100H
	jae	SHORT $LN15@CodeSpec
; Line 200
	movzx	eax, BYTE PTR _number$67311[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?PutByte@CLzOutWindow@@QAEXE@Z		; CLzOutWindow::PutByte
; Line 201
	mov	ecx, DWORD PTR _curSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _curSize$[ebp], ecx
; Line 202
	jmp	SHORT $LN18@CodeSpec
	jmp	$LN14@CodeSpec
$LN15@CodeSpec:
; Line 204
	cmp	DWORD PTR _number$67311[ebp], 256	; 00000100H
	jne	SHORT $LN13@CodeSpec
; Line 206
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3419], 1
; Line 207
	jmp	$LN17@CodeSpec
	jmp	$LN14@CodeSpec
$LN13@CodeSpec:
; Line 209
	cmp	DWORD PTR _number$67311[ebp], 286	; 0000011eH
	jae	$LN11@CodeSpec
; Line 211
	mov	eax, DWORD PTR _number$67311[ebp]
	sub	eax, 257				; 00000101H
	mov	DWORD PTR _number$67311[ebp], eax
; Line 215
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+3415]
	test	edx, edx
	je	SHORT $LN10@CodeSpec
; Line 217
	mov	eax, DWORD PTR _number$67311[ebp]
	movzx	ecx, BYTE PTR _kLenStart64[eax]
	mov	DWORD PTR _len$67321[ebp], ecx
; Line 218
	mov	edx, DWORD PTR _number$67311[ebp]
	movzx	eax, BYTE PTR _kLenDirectBits64[edx]
	mov	DWORD PTR _numBits$67322[ebp], eax
; Line 220
	jmp	SHORT $LN9@CodeSpec
$LN10@CodeSpec:
; Line 222
	mov	ecx, DWORD PTR _number$67311[ebp]
	movzx	edx, BYTE PTR _kLenStart32[ecx]
	mov	DWORD PTR _len$67321[ebp], edx
; Line 223
	mov	eax, DWORD PTR _number$67311[ebp]
	movzx	ecx, BYTE PTR _kLenDirectBits32[eax]
	mov	DWORD PTR _numBits$67322[ebp], ecx
$LN9@CodeSpec:
; Line 225
	mov	edx, DWORD PTR _numBits$67322[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	mov	ecx, DWORD PTR _len$67321[ebp]
	lea	edx, DWORD PTR [ecx+eax+3]
	mov	DWORD PTR _len$67321[ebp], edx
; Line 227
	mov	eax, DWORD PTR _len$67321[ebp]
	mov	DWORD PTR _locLen$67325[ebp], eax
; Line 228
	mov	ecx, DWORD PTR _locLen$67325[ebp]
	cmp	ecx, DWORD PTR _curSize$[ebp]
	jbe	SHORT $LN8@CodeSpec
; Line 229
	mov	edx, DWORD PTR _curSize$[ebp]
	mov	DWORD PTR _locLen$67325[ebp], edx
$LN8@CodeSpec:
; Line 230
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1920				; 00000780H
	call	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,32>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
	mov	DWORD PTR _number$67311[ebp], eax
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _number$67311[ebp]
	cmp	edx, DWORD PTR [ecx+3408]
	jb	SHORT $LN7@CodeSpec
; Line 232
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN7@CodeSpec:
; Line 233
	mov	eax, DWORD PTR _number$67311[ebp]
	movzx	ecx, BYTE PTR _kDistDirectBits[eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::ReadBits
	mov	edx, DWORD PTR _number$67311[ebp]
	add	eax, DWORD PTR _kDistStart[edx*4]
	mov	DWORD PTR _distance$67333[ebp], eax
; Line 234
	mov	eax, DWORD PTR _locLen$67325[ebp]
	push	eax
	mov	ecx, DWORD PTR _distance$67333[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?CopyBlock@CLzOutWindow@@QAE_NII@Z	; CLzOutWindow::CopyBlock
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@CodeSpec
; Line 235
	mov	eax, 1
	jmp	$LN42@CodeSpec
$LN6@CodeSpec:
; Line 236
	mov	eax, DWORD PTR _curSize$[ebp]
	sub	eax, DWORD PTR _locLen$67325[ebp]
	mov	DWORD PTR _curSize$[ebp], eax
; Line 237
	mov	ecx, DWORD PTR _len$67321[ebp]
	sub	ecx, DWORD PTR _locLen$67325[ebp]
	mov	DWORD PTR _len$67321[ebp], ecx
; Line 238
	je	SHORT $LN5@CodeSpec
; Line 240
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$67321[ebp]
	mov	DWORD PTR [edx+3420], eax
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _distance$67333[ebp]
	mov	DWORD PTR [ecx+3424], edx
; Line 242
	jmp	SHORT $LN17@CodeSpec
$LN5@CodeSpec:
; Line 245
	jmp	SHORT $LN14@CodeSpec
$LN11@CodeSpec:
; Line 246
	mov	eax, 1
	jmp	SHORT $LN42@CodeSpec
$LN14@CodeSpec:
; Line 247
	jmp	$LN18@CodeSpec
$LN17@CodeSpec:
; Line 249
	movzx	eax, BYTE PTR _finishInputStream$[ebp]
	test	eax, eax
	je	SHORT $LN3@CodeSpec
	cmp	DWORD PTR _curSize$[ebp], 0
	jne	SHORT $LN3@CodeSpec
; Line 251
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ; NCompress::NHuffman::CDecoder<15,288>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
	cmp	eax, 256				; 00000100H
	je	SHORT $LN2@CodeSpec
; Line 252
	mov	eax, 1
	jmp	SHORT $LN42@CodeSpec
$LN2@CodeSpec:
; Line 253
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3419], 1
$LN3@CodeSpec:
; Line 255
	jmp	$LN34@CodeSpec
$LN33@CodeSpec:
; Line 257
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@CodeSpec
; Line 258
	mov	eax, 1
	jmp	SHORT $LN42@CodeSpec
$LN1@CodeSpec:
; Line 260
	xor	eax, eax
$LN42@CodeSpec:
; Line 261
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::CodeSpec
_TEXT	ENDS
EXTRN	?FlushWithCheck@COutBuffer@@QAEXXZ:PROC		; COutBuffer::FlushWithCheck
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyBlock@CLzOutWindow@@QAE_NII@Z
_TEXT	SEGMENT
_pos2$66738 = -20					; size = 4
_dest$66730 = -16					; size = 4
_src$66729 = -12					; size = 4
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
_len$ = 12						; size = 4
?CopyBlock@CLzOutWindow@@QAE_NII@Z PROC			; CLzOutWindow::CopyBlock, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\lzoutwindow.h
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 21
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN13@CopyBlock
; Line 23
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+36]
	test	edx, edx
	je	SHORT $LN11@CopyBlock
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _distance$[ebp]
	cmp	ecx, DWORD PTR [eax+16]
	jb	SHORT $LN12@CopyBlock
$LN11@CopyBlock:
; Line 24
	xor	al, al
	jmp	$LN14@CopyBlock
$LN12@CopyBlock:
; Line 25
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _pos$[ebp], eax
$LN13@CopyBlock:
; Line 27
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR _pos$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jbe	SHORT $LN5@CopyBlock
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _src$66729[ebp], ecx
; Line 30
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _dest$66730[ebp], eax
; Line 31
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN9@CopyBlock:
; Line 33
	mov	edx, DWORD PTR _dest$66730[ebp]
	mov	eax, DWORD PTR _src$66729[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _dest$66730[ebp]
	add	edx, 1
	mov	DWORD PTR _dest$66730[ebp], edx
	mov	eax, DWORD PTR _src$66729[ebp]
	add	eax, 1
	mov	DWORD PTR _src$66729[ebp], eax
; Line 34
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	jne	SHORT $LN9@CopyBlock
; Line 36
	jmp	SHORT $LN6@CopyBlock
$LN5@CopyBlock:
; Line 39
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jne	SHORT $LN2@CopyBlock
; Line 40
	mov	DWORD PTR _pos$[ebp], 0
$LN2@CopyBlock:
; Line 41
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pos2$66738[ebp], edx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _pos2$66738[ebp]
	mov	esi, DWORD PTR _pos$[ebp]
	mov	cl, BYTE PTR [ecx+esi]
	mov	BYTE PTR [eax+edx], cl
	mov	edx, DWORD PTR _pos2$66738[ebp]
	add	edx, 1
	mov	DWORD PTR _pos2$66738[ebp], edx
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos2$66738[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos2$66738[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN4@CopyBlock
; Line 45
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN4@CopyBlock:
; Line 47
	mov	edx, DWORD PTR _len$[ebp]
	sub	edx, 1
	mov	DWORD PTR _len$[ebp], edx
	jne	SHORT $LN5@CopyBlock
$LN6@CopyBlock:
; Line 48
	mov	al, 1
$LN14@CopyBlock:
; Line 49
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CopyBlock@CLzOutWindow@@QAE_NII@Z ENDP			; CLzOutWindow::CopyBlock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PutByte@CLzOutWindow@@QAEXE@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_b$ = 8							; size = 1
?PutByte@CLzOutWindow@@QAEXE@Z PROC			; CLzOutWindow::PutByte, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pos$[ebp], ecx
; Line 54
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	dl, BYTE PTR _b$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN2@PutByte
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FlushWithCheck@COutBuffer@@QAEXXZ	; COutBuffer::FlushWithCheck
$LN2@PutByte:
; Line 58
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PutByte@CLzOutWindow@@QAEXE@Z ENDP			; CLzOutWindow::PutByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetByte@CLzOutWindow@@QBEEI@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_distance$ = 8						; size = 4
?GetByte@CLzOutWindow@@QBEEI@Z PROC			; CLzOutWindow::GetByte, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _distance$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _pos$[ebp], ecx
; Line 63
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _distance$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN1@GetByte
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	add	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pos$[ebp], edx
$LN1@GetByte:
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	al, BYTE PTR [ecx+edx]
; Line 66
	mov	esp, ebp
	pop	ebp
	ret	4
?GetByte@CLzOutWindow@@QBEEI@Z ENDP			; CLzOutWindow::GetByte
_TEXT	ENDS
PUBLIC	?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ	; NBitl::CDecoder<CInBuffer>::Init
PUBLIC	?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ; NBitl::CBaseDecoder<CInBuffer>::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_needInit$ = 8						; size = 1
?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::InitInStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 120
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	push	131072					; 00020000H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ; NBitl::CBaseDecoder<CInBuffer>::Create
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@InitInStre
; Line 122
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN3@InitInStre
$LN2@InitInStre:
; Line 123
	movzx	ecx, BYTE PTR _needInit$[ebp]
	test	ecx, ecx
	je	SHORT $LN1@InitInStre
; Line 125
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Init
; Line 126
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+3418], 0
$LN1@InitInStre:
; Line 128
	xor	eax, eax
$LN3@InitInStre:
; Line 129
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?InitInStream@CCoder@NDecoder@NDeflate@NCompress@@QAEJ_N@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::InitInStream
_TEXT	ENDS
PUBLIC	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
PUBLIC	?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ ; NCompress::NDeflate::NDecoder::CCoder::Flush
PUBLIC	??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
PUBLIC	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
PUBLIC	??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::CCoderReleaser
PUBLIC	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
PUBLIC	?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeReal
PUBLIC	??_R0?AUCInBufferException@@@8			; CInBufferException `RTTI Type Descriptor'
PUBLIC	??_R0?AUCOutBufferException@@@8			; COutBufferException `RTTI Type Descriptor'
EXTRN	?GetProcessedSize@COutBuffer@@QBE_KXZ:PROC	; COutBuffer::GetProcessedSize
;	COMDAT ??_R0?AUCOutBufferException@@@8
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.cpp
_DATA	SEGMENT
??_R0?AUCOutBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; COutBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCOutBufferException@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUCInBufferException@@@8
_DATA	SEGMENT
??_R0?AUCInBufferException@@@8 DD FLAT:??_7type_info@@6B@ ; CInBufferException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCInBufferException@@', 00H
_DATA	ENDS
xdata$x	SEGMENT
__tryblocktable$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z DD 00H
	DD	01H
	DD	02H
	DD	03H
	DD	FLAT:__catchsym$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$5
__unwindtable$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$4
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$5 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffff84H
	DD	FLAT:__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$0
	DD	09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffff78H
	DD	FLAT:__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$2
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv224 = -205						; size = 1
tv223 = -204						; size = 4
tv222 = -197						; size = 1
tv221 = -196						; size = 4
tv220 = -192						; size = 8
tv219 = -184						; size = 4
tv271 = -180						; size = 8
tv218 = -172						; size = 8
tv85 = -164						; size = 8
tv217 = -156						; size = 4
$T68058 = -152						; size = 4
$T68057 = -148						; size = 4
$T68056 = -144						; size = 4
_e$67392 = -136						; size = 4
_e$67390 = -124						; size = 4
_i$67382 = -116						; size = 4
___result_$67377 = -112					; size = 4
_nowPos64$67376 = -104					; size = 8
_inSize$67375 = -88					; size = 8
___result_$67369 = -76					; size = 4
_rem$67363 = -72					; size = 8
_finishInputStream$67361 = -61				; size = 1
_curSize$67360 = -60					; size = 4
_start$67356 = -56					; size = 8
_inStart$67355 = -48					; size = 8
_flusher$67354 = -36					; size = 8
_res$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_outStream$ = 8						; size = 4
_outSize$ = 12						; size = 4
_progress$ = 16						; size = 4
?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::CodeReal
; _this$ = ecx
; Line 280
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 282
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 283
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ; COutBuffer::SetStream
; Line 284
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _flusher$67354[ebp]
	call	??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::CCoderReleaser
	mov	DWORD PTR tv217[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 286
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3418]
	test	eax, eax
	je	SHORT $LN20@CodeReal
	mov	DWORD PTR tv85[ebp], 0
	mov	DWORD PTR tv85[ebp+4], 0
	jmp	SHORT $LN21@CodeReal
$LN20@CodeReal:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
	mov	DWORD PTR tv218[ebp], eax
	mov	DWORD PTR tv218[ebp+4], edx
	mov	ecx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv85[ebp], ecx
	mov	edx, DWORD PTR tv218[ebp+4]
	mov	DWORD PTR tv85[ebp+4], edx
$LN21@CodeReal:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR _inStart$67355[ebp], eax
	mov	ecx, DWORD PTR tv85[ebp+4]
	mov	DWORD PTR _inStart$67355[ebp+4], ecx
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	DWORD PTR _start$67356[ebp], eax
	mov	DWORD PTR _start$67356[ebp+4], edx
$LN16@CodeReal:
; Line 290
	mov	DWORD PTR _curSize$67360[ebp], 262144	; 00040000H
; Line 291
	mov	BYTE PTR _finishInputStream$67361[ebp], 0
; Line 292
	cmp	DWORD PTR _outSize$[ebp], 0
	je	SHORT $LN14@CodeReal
; Line 294
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _start$67356[ebp]
	sbb	edx, DWORD PTR _start$67356[ebp+4]
	mov	ecx, DWORD PTR _outSize$[ebp]
	mov	esi, DWORD PTR [ecx]
	sub	esi, eax
	mov	eax, DWORD PTR [ecx+4]
	sbb	eax, edx
	mov	DWORD PTR _rem$67363[ebp], esi
	mov	DWORD PTR _rem$67363[ebp+4], eax
; Line 295
	mov	ecx, DWORD PTR _curSize$67360[ebp]
	xor	edx, edx
	mov	DWORD PTR tv271[ebp], ecx
	mov	DWORD PTR tv271[ebp+4], edx
	mov	eax, DWORD PTR tv271[ebp+4]
	cmp	eax, DWORD PTR _rem$67363[ebp+4]
	jb	SHORT $LN14@CodeReal
	ja	SHORT $LN36@CodeReal
	mov	ecx, DWORD PTR tv271[ebp]
	cmp	ecx, DWORD PTR _rem$67363[ebp]
	jb	SHORT $LN14@CodeReal
$LN36@CodeReal:
; Line 297
	mov	edx, DWORD PTR _rem$67363[ebp]
	mov	DWORD PTR _curSize$67360[ebp], edx
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+3428]
	test	ecx, ecx
	jne	SHORT $LN11@CodeReal
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3417]
	test	eax, eax
	je	SHORT $LN14@CodeReal
$LN11@CodeReal:
; Line 299
	mov	BYTE PTR _finishInputStream$67361[ebp], 1
$LN14@CodeReal:
; Line 302
	movzx	ecx, BYTE PTR _finishInputStream$67361[ebp]
	test	ecx, ecx
	jne	SHORT $LN10@CodeReal
	cmp	DWORD PTR _curSize$67360[ebp], 0
	jne	SHORT $LN10@CodeReal
; Line 303
	jmp	$LN15@CodeReal
$LN10@CodeReal:
; Line 304
	movzx	edx, BYTE PTR _finishInputStream$67361[ebp]
	push	edx
	mov	eax, DWORD PTR _curSize$67360[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeSpec
	mov	DWORD PTR tv219[ebp], eax
	mov	ecx, DWORD PTR tv219[ebp]
	mov	DWORD PTR ___result_$67369[ebp], ecx
	cmp	DWORD PTR ___result_$67369[ebp], 0
	je	SHORT $LN9@CodeReal
	mov	edx, DWORD PTR ___result_$67369[ebp]
	mov	DWORD PTR $T68056[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _flusher$67354[ebp]
	call	??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
	mov	eax, DWORD PTR $T68056[ebp]
	jmp	$LN18@CodeReal
$LN9@CodeReal:
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+3420], -1
	jne	SHORT $LN8@CodeReal
; Line 306
	jmp	$LN15@CodeReal
$LN8@CodeReal:
; Line 307
	cmp	DWORD PTR _progress$[ebp], 0
	je	$LN7@CodeReal
; Line 309
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
	mov	DWORD PTR tv220[ebp], eax
	mov	DWORD PTR tv220[ebp+4], edx
	mov	ecx, DWORD PTR tv220[ebp]
	sub	ecx, DWORD PTR _inStart$67355[ebp]
	mov	edx, DWORD PTR tv220[ebp+4]
	sbb	edx, DWORD PTR _inStart$67355[ebp+4]
	mov	DWORD PTR _inSize$67375[ebp], ecx
	mov	DWORD PTR _inSize$67375[ebp+4], edx
; Line 310
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _start$67356[ebp]
	sbb	edx, DWORD PTR _start$67356[ebp+4]
	mov	DWORD PTR _nowPos64$67376[ebp], eax
	mov	DWORD PTR _nowPos64$67376[ebp+4], edx
; Line 311
	mov	esi, esp
	lea	eax, DWORD PTR _nowPos64$67376[ebp]
	push	eax
	lea	ecx, DWORD PTR _inSize$67375[ebp]
	push	ecx
	mov	edx, DWORD PTR _progress$[ebp]
	push	edx
	mov	eax, DWORD PTR _progress$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv221[ebp], eax
	mov	eax, DWORD PTR tv221[ebp]
	mov	DWORD PTR ___result_$67377[ebp], eax
	cmp	DWORD PTR ___result_$67377[ebp], 0
	je	SHORT $LN7@CodeReal
	mov	ecx, DWORD PTR ___result_$67377[ebp]
	mov	DWORD PTR $T68057[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _flusher$67354[ebp]
	call	??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
	mov	eax, DWORD PTR $T68057[ebp]
	jmp	$LN18@CodeReal
$LN7@CodeReal:
; Line 313
	jmp	$LN16@CodeReal
$LN15@CodeReal:
; Line 314
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+3420], -1
	jne	SHORT $LN5@CodeReal
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+3428]
	test	ecx, ecx
	je	SHORT $LN5@CodeReal
; Line 316
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::AlignToByte
; Line 317
	mov	DWORD PTR _i$67382[ebp], 0
	jmp	SHORT $LN4@CodeReal
$LN3@CodeReal:
	mov	edx, DWORD PTR _i$67382[ebp]
	add	edx, 1
	mov	DWORD PTR _i$67382[ebp], edx
$LN4@CodeReal:
	cmp	DWORD PTR _i$67382[ebp], 4
	jae	SHORT $LN5@CodeReal
; Line 318
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadAlignedByte@CCoder@NDecoder@NDeflate@NCompress@@QAEEXZ ; NCompress::NDeflate::NDecoder::CCoder::ReadAlignedByte
	mov	BYTE PTR tv222[ebp], al
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _i$67382[ebp]
	mov	cl, BYTE PTR tv222[ebp]
	mov	BYTE PTR [eax+3429], cl
	jmp	SHORT $LN3@CodeReal
$LN5@CodeReal:
; Line 320
	mov	BYTE PTR _flusher$67354[ebp+4], 0
; Line 321
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ ; NCompress::NDeflate::NDecoder::CCoder::Flush
	mov	DWORD PTR tv223[ebp], eax
	mov	edx, DWORD PTR tv223[ebp]
	mov	DWORD PTR _res$[ebp], edx
; Line 322
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN1@CodeReal
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+3420], -2		; fffffffeH
	je	SHORT $LN1@CodeReal
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
	mov	BYTE PTR tv224[ebp], al
	movzx	ecx, BYTE PTR tv224[ebp]
	test	ecx, ecx
	je	SHORT $LN1@CodeReal
; Line 323
	mov	DWORD PTR $T68058[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _flusher$67354[ebp]
	call	??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
	mov	eax, DWORD PTR $T68058[ebp]
	jmp	SHORT $LN18@CodeReal
$LN1@CodeReal:
; Line 324
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _flusher$67354[ebp]
	call	??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
	jmp	SHORT $LN22@CodeReal
__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$0:
	mov	edx, DWORD PTR _e$67390[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _res$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$1:
	mov	ecx, DWORD PTR _e$67392[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _res$[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3
	ret	0
__catch$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$2:
	mov	DWORD PTR _res$[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3
	ret	0
$LN22@CodeReal:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$3:
; Line 325
	mov	eax, DWORD PTR _res$[ebp]
$LN18@CodeReal:
; Line 326
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@CodeReal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN44@CodeReal:
	DD	5
	DD	$LN43@CodeReal
$LN43@CodeReal:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN37@CodeReal
	DD	-88					; ffffffa8H
	DD	8
	DD	$LN38@CodeReal
	DD	-104					; ffffff98H
	DD	8
	DD	$LN39@CodeReal
	DD	-124					; ffffff84H
	DD	4
	DD	$LN40@CodeReal
	DD	-136					; ffffff78H
	DD	4
	DD	$LN41@CodeReal
$LN41@CodeReal:
	DB	101					; 00000065H
	DB	0
$LN40@CodeReal:
	DB	101					; 00000065H
	DB	0
$LN39@CodeReal:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
$LN38@CodeReal:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN37@CodeReal:
	DB	102					; 00000066H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z$4:
	lea	ecx, DWORD PTR _flusher$67354[ebp]
	jmp	??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
__ehhandler$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::CodeReal
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z PROC ; COutBuffer::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@COutBuffer@@QAEXPAUISequentialOutStream@@@Z ENDP ; COutBuffer::SetStream
_TEXT	ENDS
EXTRN	?Flush@COutBuffer@@QAEJXZ:PROC			; COutBuffer::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ PROC	; NCompress::NDeflate::NDecoder::CCoder::Flush, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.h
; Line 62
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Flush@COutBuffer@@QAEJXZ		; COutBuffer::Flush
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ ENDP	; NCompress::NDeflate::NDecoder::CCoder::Flush
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_coder$ = 8						; size = 4
??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::CCoderReleaser, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _coder$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+4], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@PAV1234@@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::CCoderReleaser
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ PROC ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN2@CCoderRele
; Line 72
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ ; NCompress::NDeflate::NDecoder::CCoder::Flush
$LN2@CCoderRele:
; Line 73
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CCoderReleaser@CCoder@NDecoder@NDeflate@NCompress@@QAE@XZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::CCoderReleaser::~CCoderReleaser
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::InputEofError, COMDAT
; _this$ = ecx
; Line 138
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InputEofError@CCoder@NDecoder@NDeflate@NCompress@@QBE_NXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::InputEofError
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_res$ = -4						; size = 4
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
_outStream$ = 16					; size = 4
___formal$ = 20						; size = 4
_outSize$ = 24						; size = 4
_progress$ = 28						; size = 4
?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::Code
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.cpp
; Line 330
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 331
	mov	esi, esp
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	ecx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 332
	mov	esi, esp
	mov	edx, DWORD PTR _outSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 333
	mov	ecx, DWORD PTR _progress$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _outStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeReal
	mov	DWORD PTR _res$[ebp], eax
; Line 334
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 335
	mov	eax, DWORD PTR _res$[ebp]
; Line 336
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Code@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@PAUISequentialOutStream@@PB_K2PAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::Code
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
_value$ = 12						; size = 4
?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::GetInStreamProcessedSize
; Line 339
	push	ebp
	mov	ebp, esp
; Line 340
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN1@GetInStrea
; Line 341
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN2@GetInStrea
$LN1@GetInStrea:
; Line 342
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 343
	xor	eax, eax
$LN2@GetInStrea:
; Line 344
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetInStreamProcessedSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPA_K@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::GetInStreamProcessedSize
_TEXT	ENDS
PUBLIC	?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z ; NBitl::CBaseDecoder<CInBuffer>::SetStream
PUBLIC	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
_inStream$ = 12						; size = 4
?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::SetInStream
; Line 347
	push	ebp
	mov	ebp, esp
; Line 348
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ; CMyComPtr<ISequentialInStream>::operator=
; Line 349
	mov	ecx, DWORD PTR _inStream$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z ; NBitl::CBaseDecoder<CInBuffer>::SetStream
; Line 350
	xor	eax, eax
; Line 351
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialInStream@@@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::SetInStream
_TEXT	ENDS
PUBLIC	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = 8						; size = 4
?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ PROC ; NCompress::NDeflate::NDecoder::CCoder::ReleaseInStream
; Line 354
	push	ebp
	mov	ebp, esp
; Line 355
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ; CMyComPtr<ISequentialInStream>::Release
; Line 356
	xor	eax, eax
; Line 357
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?ReleaseInStream@CCoder@NDecoder@NDeflate@NCompress@@UAGJXZ ENDP ; NCompress::NDeflate::NDecoder::CCoder::ReleaseInStream
; Function compile flags: /Odtp /RTCsu
_this$ = 8						; size = 4
___formal$ = 12						; size = 4
?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::SetOutStreamSize
; Line 360
	push	ebp
	mov	ebp, esp
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+3408], -2		; fffffffeH
; Line 362
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+3406], 1
; Line 363
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+3404]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Init@CLzOutWindow@@QAEX_N@Z		; CLzOutWindow::Init
; Line 364
	xor	eax, eax
; Line 365
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetOutStreamSize@CCoder@NDecoder@NDeflate@NCompress@@UAGJPB_K@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::SetOutStreamSize
_TEXT	ENDS
PUBLIC	?SetMemStream@COutBuffer@@QAEXPAE@Z		; COutBuffer::SetMemStream
xdata$x	SEGMENT
__unwindtable$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z DD 00H
	DD	00H
	DD	01H
	DD	03H
	DD	FLAT:__catchsym$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$4
__ehfuncinfo$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$4 DD 09H
	DD	FLAT:??_R0?AUCInBufferException@@@8
	DD	0ffffffdcH
	DD	FLAT:__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$0
	DD	09H
	DD	FLAT:??_R0?AUCOutBufferException@@@8
	DD	0ffffffd0H
	DD	FLAT:__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$2
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv155 = -60						; size = 4
tv154 = -56						; size = 4
_e$67442 = -48						; size = 4
_e$67441 = -36						; size = 4
_startPos$67435 = -28					; size = 8
_res$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
_this$ = 8						; size = 4
_data$ = 12						; size = 4
_size$ = 16						; size = 4
_processedSize$ = 20					; size = 4
?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::Read
; Line 370
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 372
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 373
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN3@Read
; Line 374
	mov	eax, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@Read:
; Line 375
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	mov	DWORD PTR _startPos$67435[ebp], eax
	mov	DWORD PTR _startPos$67435[ebp+4], edx
; Line 376
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetMemStream@COutBuffer@@QAEXPAE@Z	; COutBuffer::SetMemStream
; Line 377
	push	0
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?CodeSpec@CCoder@NDecoder@NDeflate@NCompress@@AAEJI_N@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeSpec
	mov	DWORD PTR tv154[ebp], eax
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR _res$[ebp], eax
; Line 378
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN2@Read
; Line 380
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?Flush@CCoder@NDecoder@NDeflate@NCompress@@AAEJXZ ; NCompress::NDeflate::NDecoder::CCoder::Flush
	mov	DWORD PTR tv155[ebp], eax
	mov	ecx, DWORD PTR tv155[ebp]
	mov	DWORD PTR _res$[ebp], ecx
; Line 381
	cmp	DWORD PTR _processedSize$[ebp], 0
	je	SHORT $LN2@Read
; Line 382
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@COutBuffer@@QBE_KXZ	; COutBuffer::GetProcessedSize
	sub	eax, DWORD PTR _startPos$67435[ebp]
	sbb	edx, DWORD PTR _startPos$67435[ebp+4]
	mov	edx, DWORD PTR _processedSize$[ebp]
	mov	DWORD PTR [edx], eax
$LN2@Read:
	jmp	SHORT $LN7@Read
__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$0:
; Line 384
	mov	eax, DWORD PTR _e$67441[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3
	ret	0
__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$1:
	mov	edx, DWORD PTR _e$67442[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _res$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3
	ret	0
__catch$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$2:
	mov	DWORD PTR _res$[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3
	ret	0
$LN7@Read:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z$3:
; Line 385
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetMemStream@COutBuffer@@QAEXPAE@Z	; COutBuffer::SetMemStream
; Line 386
	mov	eax, DWORD PTR _res$[ebp]
; Line 387
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN24@Read:
	DD	2
	DD	$LN23@Read
$LN23@Read:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN20@Read
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN21@Read
$LN21@Read:
	DB	101					; 00000065H
	DB	0
$LN20@Read:
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Read@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAXIPAI@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::Read
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMemStream@COutBuffer@@QAEXPAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_buf$ = 8						; size = 4
?SetMemStream@COutBuffer@@QAEXPAE@Z PROC		; COutBuffer::SetMemStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\outbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMemStream@COutBuffer@@QAEXPAE@Z ENDP		; COutBuffer::SetMemStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
_TEXT	SEGMENT
_this$ = 8						; size = 4
_outStream$ = 12					; size = 4
_outSize$ = 16						; size = 4
_progress$ = 20						; size = 4
?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z PROC ; NCompress::NDeflate::NDecoder::CCoder::CodeResume
; File c:\workspace\7z1505-src\cpp\7zip\compress\deflatedecoder.cpp
; Line 392
	push	ebp
	mov	ebp, esp
; Line 393
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+3420], -2		; fffffffeH
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+3416]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?Init@CLzOutWindow@@QAEX_N@Z		; CLzOutWindow::Init
; Line 395
	mov	eax, DWORD PTR _progress$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outStream$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CodeReal@CCoder@NDecoder@NDeflate@NCompress@@QAEJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z ; NCompress::NDeflate::NDecoder::CCoder::CodeReal
; Line 396
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?CodeResume@CCoder@NDecoder@NDeflate@NCompress@@UAGJPAUISequentialOutStream@@PB_KPAUICompressProgressInfo@@@Z ENDP ; NCompress::NDeflate::NDecoder::CCoder::CodeResume
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mycom.h
; Line 18
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ PROC	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CMyComPtr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CMyComPtr:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CMyComPtr@UISequentialInStream@@@@QAE@XZ ENDP	; CMyComPtr<ISequentialInStream>::~CMyComPtr<ISequentialInStream>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ PROC ; CMyComPtr<ISequentialInStream>::Release, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Release@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@Release@2:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$CMyComPtr@UISequentialInStream@@@@QAEXXZ ENDP ; CMyComPtr<ISequentialInStream>::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z PROC ; CMyComPtr<ISequentialInStream>::operator=, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@operator
; Line 30
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN1@operator
; Line 32
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 33
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax
; Line 34
	mov	eax, DWORD PTR _p$[ebp]
; Line 35
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$CMyComPtr@UISequentialInStream@@@@QAEPAUISequentialInStream@@PAU1@@Z ENDP ; CMyComPtr<ISequentialInStream>::operator=
_TEXT	ENDS
PUBLIC	?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ	; NBitl::CBaseDecoder<CInBuffer>::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CBaseDecoder<CInBuffer>::Init
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
; Line 90
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::Init
_TEXT	ENDS
PUBLIC	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z	; NBitl::CDecoder<CInBuffer>::MovePos
PUBLIC	?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Normalize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z PROC	; NBitl::CDecoder<CInBuffer>::ReadBits, COMDAT
; _this$ = ecx
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Normalize
; Line 117
	mov	eax, 1
	mov	ecx, DWORD PTR _numBits$[ebp]
	shl	eax, cl
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR _res$[ebp], eax
; Line 118
	mov	edx, DWORD PTR _numBits$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
; Line 119
	mov	eax, DWORD PTR _res$[ebp]
; Line 120
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ReadBits@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ENDP	; NBitl::CDecoder<CInBuffer>::ReadBits
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::AlignToByte, COMDAT
; _this$ = ecx
; Line 122
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR [eax]
	and	ecx, 7
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AlignToByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::AlignToByte
_TEXT	ENDS
PUBLIC	?ReadByte@CInBufferBase@@QAEEXZ			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ PROC ; NBitl::CDecoder<CInBuffer>::ReadDirectByte, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadDirectByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ENDP ; NBitl::CDecoder<CInBuffer>::ReadDirectByte
_TEXT	ENDS
EXTRN	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ:PROC ; CInBufferBase::ReadByte_FromNewBlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReadByte@CInBufferBase@@QAEEXZ
_TEXT	SEGMENT
tv70 = -5						; size = 1
_this$ = -4						; size = 4
?ReadByte@CInBufferBase@@QAEEXZ PROC			; CInBufferBase::ReadByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+4]
	jb	SHORT $LN1@ReadByte
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadByte_FromNewBlock@CInBufferBase@@IAEEXZ ; CInBufferBase::ReadByte_FromNewBlock
	jmp	SHORT $LN2@ReadByte
$LN1@ReadByte:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv70[ebp], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	al, BYTE PTR tv70[ebp]
$LN2@ReadByte:
; Line 76
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadByte@CInBufferBase@@QAEEXZ ENDP			; CInBufferBase::ReadByte
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ
_TEXT	SEGMENT
_b$ = -5						; size = 1
_this$ = -4						; size = 4
?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ PROC ; NBitl::CDecoder<CInBuffer>::ReadAlignedByte, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 32			; 00000020H
	jne	SHORT $LN1@ReadAligne
; Line 129
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	jmp	SHORT $LN2@ReadAligne
$LN1@ReadAligne:
; Line 130
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	and	edx, 255				; 000000ffH
	mov	BYTE PTR _b$[ebp], dl
; Line 131
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
; Line 132
	mov	al, BYTE PTR _b$[ebp]
$LN2@ReadAligne:
; Line 133
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ReadAlignedByte@?$CDecoder@VCInBuffer@@@NBitl@@QAEEXZ ENDP ; NBitl::CDecoder<CInBuffer>::ReadAlignedByte
_TEXT	ENDS
EXTRN	?Create@CInBuffer@@QAE_NI@Z:PROC		; CInBuffer::Create
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bufSize$ = 8						; size = 4
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z PROC ; NBitl::CBaseDecoder<CInBuffer>::Create, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Create@CInBuffer@@QAE_NI@Z		; CInBuffer::Create
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Create@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAE_NI@Z ENDP ; NBitl::CBaseDecoder<CInBuffer>::Create
_TEXT	ENDS
PUBLIC	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_inStream$ = 8						; size = 4
?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z PROC ; NBitl::CBaseDecoder<CInBuffer>::SetStream, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _inStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ; CInBufferBase::SetStream
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXPAUISequentialInStream@@@Z ENDP ; NBitl::CBaseDecoder<CInBuffer>::SetStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_stream$ = 8						; size = 4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z PROC ; CInBufferBase::SetStream, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 45
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStream@CInBufferBase@@QAEXPAUISequentialInStream@@@Z ENDP ; CInBufferBase::SetStream
_TEXT	ENDS
PUBLIC	?GetProcessedSize@CInBufferBase@@QBE_KXZ	; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetProcessedSize@CInBufferBase@@QBE_KXZ ; CInBufferBase::GetProcessedSize
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, 32					; 00000020H
	sub	esi, DWORD PTR [ecx]
	shr	esi, 3
	xor	ecx, ecx
	sub	eax, esi
	sbb	edx, ecx
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_KXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetProcessedSize@CInBufferBase@@QBE_KXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetProcessedSize@CInBufferBase@@QBE_KXZ PROC		; CInBufferBase::GetProcessedSize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\common\inbuffer.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	xor	esi, esi
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+16]
	adc	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [edx+8]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	eax, ecx
	mov	edx, esi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?GetProcessedSize@CInBufferBase@@QBE_KXZ ENDP		; CInBufferBase::GetProcessedSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::ThereAreDataInBitsBuffer, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 32			; 00000020H
	setne	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?ThereAreDataInBitsBuffer@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::ThereAreDataInBitsBuffer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ
_TEXT	SEGMENT
tv80 = -8						; size = 4
_this$ = -4						; size = 4
?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead, COMDAT
; _this$ = ecx
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 4
	ja	SHORT $LN3@ExtraBitsW
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, 32					; 00000020H
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	shl	ecx, 3
	cmp	edx, ecx
	jb	SHORT $LN3@ExtraBitsW
	mov	DWORD PTR tv80[ebp], 0
	jmp	SHORT $LN4@ExtraBitsW
$LN3@ExtraBitsW:
	mov	DWORD PTR tv80[ebp], 1
$LN4@ExtraBitsW:
	mov	al, BYTE PTR tv80[ebp]
; Line 64
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtraBitsWereRead@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ PROC ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead_Fast, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 4
	cmp	ecx, DWORD PTR [eax+40]
	sbb	eax, eax
	neg	eax
; Line 74
	mov	esp, ebp
	pop	ebp
	ret	0
?ExtraBitsWereRead_Fast@?$CBaseDecoder@VCInBuffer@@@NBitl@@QBE_NXZ ENDP ; NBitl::CBaseDecoder<CInBuffer>::ExtraBitsWereRead_Fast
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -188						; size = 4
_len$67521 = -184					; size = 4
_limit$67513 = -180					; size = 4
_kMaxValue$ = -176					; size = 4
_index$ = -172						; size = 4
_startPos$ = -168					; size = 4
_len$67503 = -164					; size = 4
_symbol$ = -160						; size = 4
_i$ = -156						; size = 4
_tmpPositions$ = -148					; size = 64
_lenCounts$ = -76					; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<15,288>::SetCodeLengths, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 188				; 000000bcH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-188]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen
$LN18@SetCodeLen:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	ja	SHORT $LN17@SetCodeLen
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen
$LN17@SetCodeLen:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen
$LN15@SetCodeLen:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen:
	cmp	DWORD PTR _symbol$[ebp], 288		; 00000120H
	jae	SHORT $LN14@SetCodeLen
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67503[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67503[ebp], 15		; 0000000fH
	jbe	SHORT $LN13@SetCodeLen
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen
$LN13@SetCodeLen:
; Line 37
	mov	edx, DWORD PTR _len$67503[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67503[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+128], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen
$LN14@SetCodeLen:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 32768	; 00008000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen
$LN11@SetCodeLen:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	ja	$LN10@SetCodeLen
; Line 49
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 32768	; 00008000H
	jbe	SHORT $LN9@SetCodeLen
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen
$LN9@SetCodeLen:
; Line 52
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	jne	SHORT $LN22@SetCodeLen
	mov	DWORD PTR tv128[ebp], 32768		; 00008000H
	jmp	SHORT $LN23@SetCodeLen
$LN22@SetCodeLen:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+60]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+64], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+64]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 6
	mov	DWORD PTR _limit$67513[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen
$LN6@SetCodeLen:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67513[ebp]
	jae	SHORT $LN8@SetCodeLen
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+1280], dl
	jmp	SHORT $LN6@SetCodeLen
$LN8@SetCodeLen:
; Line 61
	jmp	$LN11@SetCodeLen
$LN10@SetCodeLen:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen
$LN3@SetCodeLen:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen:
	cmp	DWORD PTR _symbol$[ebp], 288		; 00000120H
	jae	SHORT $LN2@SetCodeLen
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67521[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67521[ebp], 0
	je	SHORT $LN1@SetCodeLen
; Line 67
	mov	eax, DWORD PTR _len$67521[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
	mov	ecx, DWORD PTR _len$67521[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67521[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen:
; Line 68
	jmp	SHORT $LN3@SetCodeLen
$LN2@SetCodeLen:
; Line 70
	mov	al, 1
$LN20@SetCodeLen:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN27@SetCodeLen:
	DD	2
	DD	$LN26@SetCodeLen
$LN26@SetCodeLen:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$LN24@SetCodeLen
	DD	-148					; ffffff6cH
	DD	64					; 00000040H
	DD	$LN25@SetCodeLen
$LN25@SetCodeLen:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<15,288>::SetCodeLengths
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -188						; size = 4
_len$67553 = -184					; size = 4
_limit$67545 = -180					; size = 4
_kMaxValue$ = -176					; size = 4
_index$ = -172						; size = 4
_startPos$ = -168					; size = 4
_len$67535 = -164					; size = 4
_symbol$ = -160						; size = 4
_i$ = -156						; size = 4
_tmpPositions$ = -148					; size = 64
_lenCounts$ = -76					; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<15,32>::SetCodeLengths, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 188				; 000000bcH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-188]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen@2
$LN18@SetCodeLen@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen@2:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	ja	SHORT $LN17@SetCodeLen@2
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen@2
$LN17@SetCodeLen@2:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen@2
$LN15@SetCodeLen@2:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen@2:
	cmp	DWORD PTR _symbol$[ebp], 32		; 00000020H
	jae	SHORT $LN14@SetCodeLen@2
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67535[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67535[ebp], 15		; 0000000fH
	jbe	SHORT $LN13@SetCodeLen@2
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen@2
$LN13@SetCodeLen@2:
; Line 37
	mov	edx, DWORD PTR _len$67535[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67535[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+128], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen@2
$LN14@SetCodeLen@2:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 32768	; 00008000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen@2
$LN11@SetCodeLen@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen@2:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	ja	$LN10@SetCodeLen@2
; Line 49
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 32768	; 00008000H
	jbe	SHORT $LN9@SetCodeLen@2
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen@2
$LN9@SetCodeLen@2:
; Line 52
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	jne	SHORT $LN22@SetCodeLen@2
	mov	DWORD PTR tv128[ebp], 32768		; 00008000H
	jmp	SHORT $LN23@SetCodeLen@2
$LN22@SetCodeLen@2:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen@2:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+60]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+64], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+64]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen@2
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 6
	mov	DWORD PTR _limit$67545[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen@2
$LN6@SetCodeLen@2:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen@2:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67545[ebp]
	jae	SHORT $LN8@SetCodeLen@2
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+256], dl
	jmp	SHORT $LN6@SetCodeLen@2
$LN8@SetCodeLen@2:
; Line 61
	jmp	$LN11@SetCodeLen@2
$LN10@SetCodeLen@2:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen@2
$LN3@SetCodeLen@2:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen@2:
	cmp	DWORD PTR _symbol$[ebp], 32		; 00000020H
	jae	SHORT $LN2@SetCodeLen@2
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67553[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67553[ebp], 0
	je	SHORT $LN1@SetCodeLen@2
; Line 67
	mov	eax, DWORD PTR _len$67553[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
	mov	ecx, DWORD PTR _len$67553[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67553[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen@2:
; Line 68
	jmp	SHORT $LN3@SetCodeLen@2
$LN2@SetCodeLen@2:
; Line 70
	mov	al, 1
$LN20@SetCodeLen@2:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN27@SetCodeLen@2:
	DD	2
	DD	$LN26@SetCodeLen@2
$LN26@SetCodeLen@2:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$LN24@SetCodeLen@2
	DD	-148					; ffffff6cH
	DD	64					; 00000040H
	DD	$LN25@SetCodeLen@2
$LN25@SetCodeLen@2:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen@2:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<15,32>::SetCodeLengths
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z
_TEXT	SEGMENT
tv128 = -188						; size = 4
_len$67585 = -184					; size = 4
_limit$67577 = -180					; size = 4
_kMaxValue$ = -176					; size = 4
_index$ = -172						; size = 4
_startPos$ = -168					; size = 4
_len$67567 = -164					; size = 4
_symbol$ = -160						; size = 4
_i$ = -156						; size = 4
_tmpPositions$ = -148					; size = 64
_lenCounts$ = -76					; size = 64
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_lens$ = 8						; size = 4
?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z PROC ; NCompress::NHuffman::CDecoder<15,19>::SetCodeLengths, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	sub	esp, 188				; 000000bcH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-188]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 28
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN19@SetCodeLen@3
$LN18@SetCodeLen@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN19@SetCodeLen@3:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	ja	SHORT $LN17@SetCodeLen@3
; Line 29
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], 0
	jmp	SHORT $LN18@SetCodeLen@3
$LN17@SetCodeLen@3:
; Line 32
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN16@SetCodeLen@3
$LN15@SetCodeLen@3:
	mov	edx, DWORD PTR _symbol$[ebp]
	add	edx, 1
	mov	DWORD PTR _symbol$[ebp], edx
$LN16@SetCodeLen@3:
	cmp	DWORD PTR _symbol$[ebp], 19		; 00000013H
	jae	SHORT $LN14@SetCodeLen@3
; Line 34
	mov	eax, DWORD PTR _lens$[ebp]
	add	eax, DWORD PTR _symbol$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _len$67567[ebp], ecx
; Line 35
	cmp	DWORD PTR _len$67567[ebp], 15		; 0000000fH
	jbe	SHORT $LN13@SetCodeLen@3
; Line 36
	xor	al, al
	jmp	$LN20@SetCodeLen@3
$LN13@SetCodeLen@3:
; Line 37
	mov	edx, DWORD PTR _len$67567[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	add	eax, 1
	mov	ecx, DWORD PTR _len$67567[ebp]
	mov	DWORD PTR _lenCounts$[ebp+ecx*4], eax
; Line 38
	mov	edx, DWORD PTR _symbol$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx*4+128], -1
; Line 39
	jmp	SHORT $LN15@SetCodeLen@3
$LN14@SetCodeLen@3:
; Line 41
	mov	DWORD PTR _lenCounts$[ebp], 0
; Line 42
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], 0
; Line 43
	mov	DWORD PTR _startPos$[ebp], 0
; Line 44
	mov	DWORD PTR _index$[ebp], 0
; Line 45
	mov	DWORD PTR _kMaxValue$[ebp], 32768	; 00008000H
; Line 47
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@SetCodeLen@3
$LN11@SetCodeLen@3:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetCodeLen@3:
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	ja	$LN10@SetCodeLen@3
; Line 49
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _lenCounts$[ebp+edx*4]
	shl	eax, cl
	add	eax, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR _startPos$[ebp], eax
; Line 50
	cmp	DWORD PTR _startPos$[ebp], 32768	; 00008000H
	jbe	SHORT $LN9@SetCodeLen@3
; Line 51
	xor	al, al
	jmp	$LN20@SetCodeLen@3
$LN9@SetCodeLen@3:
; Line 52
	cmp	DWORD PTR _i$[ebp], 15			; 0000000fH
	jne	SHORT $LN22@SetCodeLen@3
	mov	DWORD PTR tv128[ebp], 32768		; 00008000H
	jmp	SHORT $LN23@SetCodeLen@3
$LN22@SetCodeLen@3:
	mov	ecx, DWORD PTR _startPos$[ebp]
	mov	DWORD PTR tv128[ebp], ecx
$LN23@SetCodeLen@3:
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 53
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4+60]
	mov	edx, DWORD PTR _i$[ebp]
	add	ecx, DWORD PTR _lenCounts$[ebp+edx*4-4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+eax*4+64], ecx
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+64]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], ecx
; Line 55
	cmp	DWORD PTR _i$[ebp], 9
	ja	SHORT $LN8@SetCodeLen@3
; Line 57
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	shr	ecx, 6
	mov	DWORD PTR _limit$67577[ebp], ecx
; Line 58
	jmp	SHORT $LN7@SetCodeLen@3
$LN6@SetCodeLen@3:
	mov	edx, DWORD PTR _index$[ebp]
	add	edx, 1
	mov	DWORD PTR _index$[ebp], edx
$LN7@SetCodeLen@3:
	mov	eax, DWORD PTR _index$[ebp]
	cmp	eax, DWORD PTR _limit$67577[ebp]
	jae	SHORT $LN8@SetCodeLen@3
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR _index$[ebp]
	mov	dl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [ecx+204], dl
	jmp	SHORT $LN6@SetCodeLen@3
$LN8@SetCodeLen@3:
; Line 61
	jmp	$LN11@SetCodeLen@3
$LN10@SetCodeLen@3:
; Line 63
	mov	DWORD PTR _symbol$[ebp], 0
	jmp	SHORT $LN4@SetCodeLen@3
$LN3@SetCodeLen@3:
	mov	eax, DWORD PTR _symbol$[ebp]
	add	eax, 1
	mov	DWORD PTR _symbol$[ebp], eax
$LN4@SetCodeLen@3:
	cmp	DWORD PTR _symbol$[ebp], 19		; 00000013H
	jae	SHORT $LN2@SetCodeLen@3
; Line 65
	mov	ecx, DWORD PTR _lens$[ebp]
	add	ecx, DWORD PTR _symbol$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _len$67585[ebp], edx
; Line 66
	cmp	DWORD PTR _len$67585[ebp], 0
	je	SHORT $LN1@SetCodeLen@3
; Line 67
	mov	eax, DWORD PTR _len$67585[ebp]
	mov	ecx, DWORD PTR _tmpPositions$[ebp+eax*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _symbol$[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax
	mov	ecx, DWORD PTR _len$67585[ebp]
	mov	edx, DWORD PTR _tmpPositions$[ebp+ecx*4]
	add	edx, 1
	mov	eax, DWORD PTR _len$67585[ebp]
	mov	DWORD PTR _tmpPositions$[ebp+eax*4], edx
$LN1@SetCodeLen@3:
; Line 68
	jmp	SHORT $LN3@SetCodeLen@3
$LN2@SetCodeLen@3:
; Line 70
	mov	al, 1
$LN20@SetCodeLen@3:
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@SetCodeLen@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN27@SetCodeLen@3:
	DD	2
	DD	$LN26@SetCodeLen@3
$LN26@SetCodeLen@3:
	DD	-76					; ffffffb4H
	DD	64					; 00000040H
	DD	$LN24@SetCodeLen@3
	DD	-148					; ffffff6cH
	DD	64					; 00000040H
	DD	$LN25@SetCodeLen@3
$LN25@SetCodeLen@3:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN24@SetCodeLen@3:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?SetCodeLengths@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAE_NPBE@Z ENDP ; NCompress::NHuffman::CDecoder<15,19>::SetCodeLengths
_TEXT	ENDS
EXTRN	?kInvertTable@NBitl@@3PAEA:BYTE			; NBitl::kInvertTable
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_b$67592 = -5						; size = 1
_this$ = -4						; size = 4
?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CDecoder<CInBuffer>::Normalize, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	jmp	SHORT $LN3@Normalize
$LN2@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
$LN3@Normalize:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 8
	jb	SHORT $LN4@Normalize
; Line 96
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?ReadByte@CInBufferBase@@QAEEXZ		; CInBufferBase::ReadByte
	mov	BYTE PTR _b$67592[ebp], al
; Line 97
	movzx	edx, BYTE PTR _b$67592[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 32					; 00000020H
	sub	ecx, DWORD PTR [eax]
	shl	edx, cl
	mov	ecx, DWORD PTR _this$[ebp]
	or	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], edx
; Line 98
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 8
	movzx	eax, BYTE PTR _b$67592[ebp]
	movzx	ecx, BYTE PTR ?kInvertTable@NBitl@@3PAEA[eax]
	or	edx, ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 99
	jmp	SHORT $LN2@Normalize
$LN4@Normalize:
; Line 100
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CDecoder<CInBuffer>::Normalize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z PROC	; NBitl::CDecoder<CInBuffer>::MovePos, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 111
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+48]
	mov	ecx, DWORD PTR _numBits$[ebp]
	shr	edx, cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], edx
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	4
?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ENDP	; NBitl::CDecoder<CInBuffer>::MovePos
_TEXT	ENDS
EXTRN	?Init@CInBufferBase@@QAEXXZ:PROC		; CInBufferBase::Init
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ PROC	; NBitl::CBaseDecoder<CInBuffer>::Init, COMDAT
; _this$ = ecx
; Line 35
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 36
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Init@CInBufferBase@@QAEXXZ		; CInBufferBase::Init
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 32			; 00000020H
; Line 38
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 39
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Init@?$CBaseDecoder@VCInBuffer@@@NBitl@@QAEXXZ ENDP	; NBitl::CBaseDecoder<CInBuffer>::Init
_TEXT	ENDS
PUBLIC	?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::GetValue
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z PROC ; NCompress::NHuffman::CDecoder<15,19>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\huffmandecoder.h
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 6
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+204]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb
$LN6@DecodeSymb:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb
$LN3@DecodeSymb:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb
	jmp	SHORT $LN3@DecodeSymb
$LN5@DecodeSymb:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+64]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 19		; 00000013H
	jb	SHORT $LN1@DecodeSymb
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb
$LN1@DecodeSymb:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN7@DecodeSymb:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BD@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ENDP ; NCompress::NHuffman::CDecoder<15,19>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z PROC ; NCompress::NHuffman::CDecoder<15,288>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb@2
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 6
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+1280]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb@2
$LN6@DecodeSymb@2:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb@2
$LN3@DecodeSymb@2:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb@2:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb@2
	jmp	SHORT $LN3@DecodeSymb@2
$LN5@DecodeSymb@2:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+64]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 288		; 00000120H
	jb	SHORT $LN1@DecodeSymb@2
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb@2
$LN1@DecodeSymb@2:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN7@DecodeSymb@2:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0BCA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ENDP ; NCompress::NHuffman::CDecoder<15,288>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z
_TEXT	SEGMENT
_index$ = -16						; size = 4
_value$ = -12						; size = 4
_numBits$ = -8						; size = 4
_this$ = -4						; size = 4
_bitStream$ = 8						; size = 4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z PROC ; NCompress::NHuffman::CDecoder<15,32>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	push	15					; 0000000fH
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ; NBitl::CDecoder<CInBuffer>::GetValue
	mov	DWORD PTR _value$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax+36]
	jae	SHORT $LN6@DecodeSymb@3
; Line 79
	mov	edx, DWORD PTR _value$[ebp]
	shr	edx, 6
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+edx+256]
	mov	DWORD PTR _numBits$[ebp], ecx
; Line 80
	jmp	SHORT $LN5@DecodeSymb@3
$LN6@DecodeSymb@3:
; Line 81
	mov	DWORD PTR _numBits$[ebp], 10		; 0000000aH
	jmp	SHORT $LN4@DecodeSymb@3
$LN3@DecodeSymb@3:
	mov	edx, DWORD PTR _numBits$[ebp]
	add	edx, 1
	mov	DWORD PTR _numBits$[ebp], edx
$LN4@DecodeSymb@3:
	mov	eax, DWORD PTR _numBits$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jb	SHORT $LN5@DecodeSymb@3
	jmp	SHORT $LN3@DecodeSymb@3
$LN5@DecodeSymb@3:
; Line 82
	mov	eax, DWORD PTR _numBits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?MovePos@?$CDecoder@VCInBuffer@@@NBitl@@QAEXI@Z ; NBitl::CDecoder<CInBuffer>::MovePos
; Line 84
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	sub	eax, DWORD PTR [edx+ecx*4-4]
	mov	ecx, 15					; 0000000fH
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
	mov	ecx, DWORD PTR _numBits$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+ecx*4+64]
	mov	DWORD PTR _index$[ebp], eax
; Line 85
	cmp	DWORD PTR _index$[ebp], 32		; 00000020H
	jb	SHORT $LN1@DecodeSymb@3
; Line 87
	or	eax, -1
	jmp	SHORT $LN7@DecodeSymb@3
$LN1@DecodeSymb@3:
; Line 88
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+128]
$LN7@DecodeSymb@3:
; Line 89
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$DecodeSymbol@V?$CDecoder@VCInBuffer@@@NBitl@@@?$CDecoder@$0P@$0CA@@NHuffman@NCompress@@QAEIPAV?$CDecoder@VCInBuffer@@@NBitl@@@Z ENDP ; NCompress::NHuffman::CDecoder<15,32>::DecodeSymbol<NBitl::CDecoder<CInBuffer> >
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_numBits$ = 8						; size = 4
?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z PROC	; NBitl::CDecoder<CInBuffer>::GetValue, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\7zip\compress\bitldecoder.h
; Line 103
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Normalize@?$CDecoder@VCInBuffer@@@NBitl@@QAEXXZ ; NBitl::CDecoder<CInBuffer>::Normalize
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, 8
	sub	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shr	eax, cl
	and	eax, 16777215				; 00ffffffH
	mov	ecx, 24					; 00000018H
	sub	ecx, DWORD PTR _numBits$[ebp]
	shr	eax, cl
; Line 106
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetValue@?$CDecoder@VCInBuffer@@@NBitl@@QAEII@Z ENDP	; NBitl::CDecoder<CInBuffer>::GetValue
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WM@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ
_TEXT	SEGMENT
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?AddRef@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::AddRef
?AddRef@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::AddRef`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@W7AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{8}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}', COMDAT
	sub	DWORD PTR [esp+4], 12			; 0000000cH
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WM@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{12}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}', COMDAT
	sub	DWORD PTR [esp+4], 16			; 00000010H
	jmp	?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@UAGJABU_GUID@@PAPAX@Z ; NCompress::NDeflate::NDecoder::CCoder::QueryInterface
?QueryInterface@CCoder@NDecoder@NDeflate@NCompress@@WBA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::QueryInterface`adjustor{16}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@W3AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ
_TEXT	SEGMENT
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ PROC ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}', COMDAT
	sub	DWORD PTR [esp+4], 8
	jmp	?Release@CCoder@NDecoder@NDeflate@NCompress@@UAGKXZ ; NCompress::NDeflate::NDecoder::CCoder::Release
?Release@CCoder@NDecoder@NDeflate@NCompress@@W7AGKXZ ENDP ; [thunk]:NCompress::NDeflate::NDecoder::CCoder::Release`adjustor{8}'
_TEXT	ENDS
END

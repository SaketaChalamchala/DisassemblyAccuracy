; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\workspace\7z1505-src\CPP\Windows\FileName.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?kSuperPathPrefix@NName@NFile@NWindows@@3PB_WB	; NWindows::NFile::NName::kSuperPathPrefix
_DATA	SEGMENT
?kSuperPathPrefix@NName@NFile@NWindows@@3PB_WB DD FLAT:$SG67131 ; NWindows::NFile::NName::kSuperPathPrefix
_kSuperUncPrefix DD FLAT:$SG67133
_DATA	ENDS
CONST	SEGMENT
$SG67131 DB	'\', 00H, '\', 00H, '?', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG67133 DB	'\', 00H, '\', 00H, '?', 00H, '\', 00H, 'U', 00H, 'N', 00H
	DB	'C', 00H, '\', 00H, 00H, 00H
	ORG $+2
$SG67146 DB	'P', 00H, 'h', 00H, 'y', 00H, 's', 00H, 'i', 00H, 'c', 00H
	DB	'a', 00H, 'l', 00H, 'D', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'e'
	DB	00H, 00H, 00H
CONST	ENDS
PUBLIC	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z	; NWindows::NFile::NName::FindSepar
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\workspace\7z1505-src\cpp\windows\filename.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
_c$67109 = -8						; size = 2
_p$67105 = -4						; size = 4
_s$ = 8							; size = 4
?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z PROC		; NWindows::NFile::NName::FindSepar
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 19
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _p$67105[ebp], eax
	jmp	SHORT $LN6@FindSepar
$LN5@FindSepar:
	mov	ecx, DWORD PTR _p$67105[ebp]
	add	ecx, 2
	mov	DWORD PTR _p$67105[ebp], ecx
$LN6@FindSepar:
; Line 21
	mov	edx, DWORD PTR _p$67105[ebp]
	mov	ax, WORD PTR [edx]
	mov	WORD PTR _c$67109[ebp], ax
; Line 22
	movzx	ecx, WORD PTR _c$67109[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@FindSepar
; Line 23
	mov	eax, -1
	jmp	SHORT $LN7@FindSepar
$LN3@FindSepar:
; Line 24
	movzx	edx, WORD PTR _c$67109[ebp]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN1@FindSepar
	movzx	eax, WORD PTR _c$67109[ebp]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN2@FindSepar
$LN1@FindSepar:
; Line 25
	mov	eax, DWORD PTR _p$67105[ebp]
	sub	eax, DWORD PTR _s$[ebp]
	sar	eax, 1
	jmp	SHORT $LN7@FindSepar
$LN2@FindSepar:
; Line 26
	jmp	SHORT $LN5@FindSepar
$LN7@FindSepar:
; Line 27
	mov	esp, ebp
	pop	ebp
	ret	4
?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ENDP		; NWindows::NFile::NName::FindSepar
_TEXT	ENDS
PUBLIC	?Add_PathSepar@UString@@QAEXXZ			; UString::Add_PathSepar
PUBLIC	?IsPathSepar@@YG_N_W@Z				; IsPathSepar
PUBLIC	?Back@UString@@QBE_WXZ				; UString::Back
PUBLIC	?IsEmpty@UString@@QBE_NXZ			; UString::IsEmpty
PUBLIC	?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z ; NWindows::NFile::NName::NormalizeDirPathPrefix
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_dirPath$ = 8						; size = 4
?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z PROC ; NWindows::NFile::NName::NormalizeDirPathPrefix
; Line 54
	push	ebp
	mov	ebp, esp
; Line 55
	mov	ecx, DWORD PTR _dirPath$[ebp]
	call	?IsEmpty@UString@@QBE_NXZ		; UString::IsEmpty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@NormalizeD
; Line 56
	jmp	SHORT $LN3@NormalizeD
$LN2@NormalizeD:
; Line 57
	mov	ecx, DWORD PTR _dirPath$[ebp]
	call	?Back@UString@@QBE_WXZ			; UString::Back
	movzx	ecx, ax
	push	ecx
	call	?IsPathSepar@@YG_N_W@Z			; IsPathSepar
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@NormalizeD
; Line 58
	mov	ecx, DWORD PTR _dirPath$[ebp]
	call	?Add_PathSepar@UString@@QAEXXZ		; UString::Add_PathSepar
$LN3@NormalizeD:
; Line 59
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z ENDP ; NWindows::NFile::NName::NormalizeDirPathPrefix
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsPathSepar@@YG_N_W@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_c$ = 8							; size = 2
?IsPathSepar@@YG_N_W@Z PROC				; IsPathSepar, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN3@IsPathSepa@2
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN3@IsPathSepa@2
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@IsPathSepa@2
$LN3@IsPathSepa@2:
	mov	DWORD PTR tv68[ebp], 1
$LN4@IsPathSepa@2:
	mov	al, BYTE PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsPathSepar@@YG_N_W@Z ENDP				; IsPathSepar
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEmpty@UString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEmpty@UString@@QBE_NXZ PROC				; UString::IsEmpty, COMDAT
; _this$ = ecx
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	al, cl
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@UString@@QBE_NXZ ENDP				; UString::IsEmpty
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Back@UString@@QBE_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Back@UString@@QBE_WXZ PROC				; UString::Back, COMDAT
; _this$ = ecx
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ax, WORD PTR [eax+ecx*2-2]
	mov	esp, ebp
	pop	ebp
	ret	0
?Back@UString@@QBE_WXZ ENDP				; UString::Back
_TEXT	ENDS
PUBLIC	??YUString@@QAEAAV0@_W@Z			; UString::operator+=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Add_PathSepar@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Add_PathSepar@UString@@QAEXXZ PROC			; UString::Add_PathSepar, COMDAT
; _this$ = ecx
; Line 529
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	92					; 0000005cH
	mov	ecx, DWORD PTR _this$[ebp]
	call	??YUString@@QAEAAV0@_W@Z		; UString::operator+=
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Add_PathSepar@UString@@QAEXXZ ENDP			; UString::Add_PathSepar
_TEXT	ENDS
EXTRN	?Grow_1@UString@@AAEXXZ:PROC			; UString::Grow_1
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??YUString@@QAEAAV0@_W@Z
_TEXT	SEGMENT
_chars$ = -12						; size = 4
_len$ = -8						; size = 4
_this$ = -4						; size = 4
_c$ = 8							; size = 2
??YUString@@QAEAAV0@_W@Z PROC				; UString::operator+=, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN1@operator
; Line 517
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Grow_1@UString@@AAEXXZ			; UString::Grow_1
$LN1@operator:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _len$[ebp], ecx
; Line 519
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _chars$[ebp], eax
; Line 520
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _chars$[ebp]
	mov	ax, WORD PTR _c$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	ecx, DWORD PTR _len$[ebp]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
; Line 521
	xor	edx, edx
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _chars$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 522
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
; Line 524
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YUString@@QAEAAV0@_W@Z ENDP				; UString::operator+=
_TEXT	ENDS
PUBLIC	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NName::IsDrivePath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv81 = -4						; size = 4
_s$ = 8							; size = 4
?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsDrivePath
; File c:\workspace\7z1505-src\cpp\windows\filename.cpp
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 97					; 00000061H
	jl	SHORT $LN3@IsDrivePat
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN5@IsDrivePat
$LN3@IsDrivePat:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 65					; 00000041H
	jl	SHORT $LN4@IsDrivePat
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 90					; 0000005aH
	jg	SHORT $LN4@IsDrivePat
$LN5@IsDrivePat:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+2]
	cmp	eax, 58					; 0000003aH
	jne	SHORT $LN4@IsDrivePat
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN6@IsDrivePat
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN4@IsDrivePat
$LN6@IsDrivePat:
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN7@IsDrivePat
$LN4@IsDrivePat:
	mov	DWORD PTR tv81[ebp], 0
$LN7@IsDrivePat:
	mov	al, BYTE PTR tv81[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsDrivePath
_TEXT	ENDS
PUBLIC	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NName::IsDrivePath2
PUBLIC	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NName::IsSuperPath
PUBLIC	?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NName::IsDevicePath
PUBLIC	?MyStringLen@@YGIPB_W@Z				; MyStringLen
PUBLIC	?IsAltPathPrefix@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsAltPathPrefix
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_len$ = -4						; size = 4
_s$ = 8							; size = 4
?IsAltPathPrefix@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsAltPathPrefix
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 67
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?MyStringLen@@YGIPB_W@Z			; MyStringLen
	mov	DWORD PTR _len$[ebp], eax
; Line 68
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN5@IsAltPathP
; Line 69
	xor	al, al
	jmp	SHORT $LN6@IsAltPathP
$LN5@IsAltPathP:
; Line 70
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2-2]
	cmp	eax, 58					; 0000003aH
	je	SHORT $LN4@IsAltPathP
; Line 71
	xor	al, al
	jmp	SHORT $LN6@IsAltPathP
$LN4@IsAltPathP:
; Line 74
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDevicePath
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@IsAltPathP
; Line 75
	xor	al, al
	jmp	SHORT $LN6@IsAltPathP
$LN3@IsAltPathP:
; Line 76
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperPath
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@IsAltPathP
; Line 78
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 8
	mov	DWORD PTR _s$[ebp], edx
; Line 79
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 4
	mov	DWORD PTR _len$[ebp], eax
$LN2@IsAltPathP:
; Line 81
	cmp	DWORD PTR _len$[ebp], 2
	jne	SHORT $LN1@IsAltPathP
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath2
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@IsAltPathP
; Line 82
	xor	al, al
	jmp	SHORT $LN6@IsAltPathP
$LN1@IsAltPathP:
; Line 85
	mov	al, 1
$LN6@IsAltPathP:
; Line 86
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsAltPathPrefix@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsAltPathPrefix
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?MyStringLen@@YGIPB_W@Z
_TEXT	SEGMENT
_i$ = -4						; size = 4
_s$ = 8							; size = 4
?MyStringLen@@YGIPB_W@Z PROC				; MyStringLen, COMDAT
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 51
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 53
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MyStringLe
$LN2@MyStringLe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@MyStringLe:
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2]
	test	eax, eax
	je	SHORT $LN1@MyStringLe
	jmp	SHORT $LN2@MyStringLe
$LN1@MyStringLe:
; Line 54
	mov	eax, DWORD PTR _i$[ebp]
; Line 55
	mov	esp, ebp
	pop	ebp
	ret	4
?MyStringLen@@YGIPB_W@Z ENDP				; MyStringLen
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$67147 = -8						; size = 4
_len$ = -4						; size = 4
_s$ = 8							; size = 4
?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsDevicePath
; File c:\workspace\7z1505-src\cpp\windows\filename.cpp
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 121
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN10@IsDevicePa
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN11@IsDevicePa
$LN10@IsDevicePa:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN9@IsDevicePa
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN11@IsDevicePa
$LN9@IsDevicePa:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+4]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN11@IsDevicePa
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN12@IsDevicePa
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN12@IsDevicePa
$LN11@IsDevicePa:
; Line 122
	xor	al, al
	jmp	$LN13@IsDevicePa
$LN12@IsDevicePa:
; Line 123
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?MyStringLen@@YGIPB_W@Z			; MyStringLen
	mov	DWORD PTR _len$[ebp], eax
; Line 124
	cmp	DWORD PTR _len$[ebp], 6
	jne	SHORT $LN8@IsDevicePa
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 58					; 0000003aH
	jne	SHORT $LN8@IsDevicePa
; Line 125
	mov	al, 1
	jmp	SHORT $LN13@IsDevicePa
$LN8@IsDevicePa:
; Line 126
	cmp	DWORD PTR _len$[ebp], 18		; 00000012H
	jb	SHORT $LN6@IsDevicePa
	cmp	DWORD PTR _len$[ebp], 22		; 00000016H
	ja	SHORT $LN6@IsDevicePa
	push	26					; 0000001aH
	push	OFFSET $SG67146
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 8
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@IsDevicePa
$LN6@IsDevicePa:
; Line 127
	xor	al, al
	jmp	SHORT $LN13@IsDevicePa
$LN7@IsDevicePa:
; Line 128
	mov	DWORD PTR _i$67147[ebp], 17		; 00000011H
	jmp	SHORT $LN5@IsDevicePa
$LN4@IsDevicePa:
	mov	eax, DWORD PTR _i$67147[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67147[ebp], eax
$LN5@IsDevicePa:
	mov	ecx, DWORD PTR _i$67147[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jae	SHORT $LN3@IsDevicePa
; Line 129
	mov	edx, DWORD PTR _i$67147[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN1@IsDevicePa
	mov	edx, DWORD PTR _i$67147[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+edx*2]
	cmp	ecx, 57					; 00000039H
	jle	SHORT $LN2@IsDevicePa
$LN1@IsDevicePa:
; Line 130
	xor	al, al
	jmp	SHORT $LN13@IsDevicePa
$LN2@IsDevicePa:
; Line 131
	jmp	SHORT $LN4@IsDevicePa
$LN3@IsDevicePa:
	mov	al, 1
$LN13@IsDevicePa:
; Line 134
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsDevicePath
_TEXT	ENDS
PUBLIC	?IsSuperUncPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperUncPath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv147 = -4						; size = 4
_s$ = 8							; size = 4
?IsSuperUncPath@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsSuperUncPath
; Line 136
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@IsSuperUnc
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	$LN9@IsSuperUnc
$LN3@IsSuperUnc:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN4@IsSuperUnc
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	jne	$LN9@IsSuperUnc
$LN4@IsSuperUnc:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+4]
	cmp	eax, 63					; 0000003fH
	jne	$LN9@IsSuperUnc
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN6@IsSuperUnc
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN9@IsSuperUnc
$LN6@IsSuperUnc:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+8]
	cmp	eax, 85					; 00000055H
	je	SHORT $LN7@IsSuperUnc
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+8]
	cmp	edx, 117				; 00000075H
	jne	SHORT $LN9@IsSuperUnc
$LN7@IsSuperUnc:
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 78					; 0000004eH
	je	SHORT $LN8@IsSuperUnc
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+10]
	cmp	eax, 110				; 0000006eH
	jne	SHORT $LN9@IsSuperUnc
$LN8@IsSuperUnc:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	edx, 67					; 00000043H
	je	SHORT $LN10@IsSuperUnc
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	cmp	ecx, 99					; 00000063H
	jne	SHORT $LN9@IsSuperUnc
$LN10@IsSuperUnc:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+14]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN11@IsSuperUnc
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+14]
	cmp	edx, 47					; 0000002fH
	jne	SHORT $LN9@IsSuperUnc
$LN11@IsSuperUnc:
	mov	DWORD PTR tv147[ebp], 1
	jmp	SHORT $LN12@IsSuperUnc
$LN9@IsSuperUnc:
	mov	DWORD PTR tv147[ebp], 0
$LN12@IsSuperUnc:
	mov	al, BYTE PTR tv147[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSuperUncPath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsSuperUncPath
_TEXT	ENDS
PUBLIC	?IsNetworkPath@NName@NFile@NWindows@@YG_NPB_W@Z	; NWindows::NFile::NName::IsNetworkPath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -8						; size = 4
_c$ = -4						; size = 2
_s$ = 8							; size = 4
?IsNetworkPath@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsNetworkPath
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 139
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN2@IsNetworkP
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN3@IsNetworkP
$LN2@IsNetworkP:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN4@IsNetworkP
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN4@IsNetworkP
$LN3@IsNetworkP:
; Line 140
	xor	al, al
	jmp	SHORT $LN5@IsNetworkP
$LN4@IsNetworkP:
; Line 141
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?IsSuperUncPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperUncPath
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@IsNetworkP
; Line 142
	mov	al, 1
	jmp	SHORT $LN5@IsNetworkP
$LN1@IsNetworkP:
; Line 143
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR _c$[ebp], dx
; Line 144
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN7@IsNetworkP
	movzx	ecx, WORD PTR _c$[ebp]
	cmp	ecx, 63					; 0000003fH
	je	SHORT $LN7@IsNetworkP
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN8@IsNetworkP
$LN7@IsNetworkP:
	mov	DWORD PTR tv83[ebp], 0
$LN8@IsNetworkP:
	mov	al, BYTE PTR tv83[ebp]
$LN5@IsNetworkP:
; Line 145
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsNetworkPath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsNetworkPath
_TEXT	ENDS
PUBLIC	?GetNetworkServerPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetNetworkServerPrefixSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pos$ = -12						; size = 4
_c$67173 = -8						; size = 2
_prefixSize$ = -4					; size = 4
_s$ = 8							; size = 4
?GetNetworkServerPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z PROC ; NWindows::NFile::NName::GetNetworkServerPrefixSize
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 149
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN6@GetNetwork
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN7@GetNetwork
$LN6@GetNetwork:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN8@GetNetwork
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN8@GetNetwork
$LN7@GetNetwork:
; Line 150
	xor	eax, eax
	jmp	SHORT $LN9@GetNetwork
$LN8@GetNetwork:
; Line 151
	mov	DWORD PTR _prefixSize$[ebp], 2
; Line 152
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?IsSuperUncPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperUncPath
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@GetNetwork
; Line 153
	mov	DWORD PTR _prefixSize$[ebp], 8
; Line 154
	jmp	SHORT $LN4@GetNetwork
$LN5@GetNetwork:
; Line 156
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR _c$67173[ebp], dx
; Line 157
	movzx	eax, WORD PTR _c$67173[ebp]
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN2@GetNetwork
	movzx	ecx, WORD PTR _c$67173[ebp]
	cmp	ecx, 63					; 0000003fH
	jne	SHORT $LN4@GetNetwork
$LN2@GetNetwork:
; Line 158
	xor	eax, eax
	jmp	SHORT $LN9@GetNetwork
$LN4@GetNetwork:
; Line 160
	mov	edx, DWORD PTR _prefixSize$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar
	mov	DWORD PTR _pos$[ebp], eax
; Line 161
	cmp	DWORD PTR _pos$[ebp], 0
	jge	SHORT $LN1@GetNetwork
; Line 162
	xor	eax, eax
	jmp	SHORT $LN9@GetNetwork
$LN1@GetNetwork:
; Line 163
	mov	edx, DWORD PTR _pos$[ebp]
	mov	eax, DWORD PTR _prefixSize$[ebp]
	lea	eax, DWORD PTR [eax+edx+1]
$LN9@GetNetwork:
; Line 164
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNetworkServerPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ENDP ; NWindows::NFile::NName::GetNetworkServerPrefixSize
_TEXT	ENDS
PUBLIC	?IsNetworkShareRootPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsNetworkShareRootPath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_prefixSize$ = -4					; size = 4
_s$ = 8							; size = 4
?IsNetworkShareRootPath@NName@NFile@NWindows@@YG_NPB_W@Z PROC ; NWindows::NFile::NName::IsNetworkShareRootPath
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 168
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?GetNetworkServerPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetNetworkServerPrefixSize
	mov	DWORD PTR _prefixSize$[ebp], eax
; Line 169
	cmp	DWORD PTR _prefixSize$[ebp], 0
	jne	SHORT $LN2@IsNetworkS
; Line 170
	xor	al, al
	jmp	SHORT $LN3@IsNetworkS
$LN2@IsNetworkS:
; Line 171
	mov	ecx, DWORD PTR _prefixSize$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	DWORD PTR _s$[ebp], eax
; Line 172
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar
	mov	DWORD PTR _pos$[ebp], eax
; Line 173
	cmp	DWORD PTR _pos$[ebp], 0
	jge	SHORT $LN1@IsNetworkS
; Line 174
	mov	al, 1
	jmp	SHORT $LN3@IsNetworkS
$LN1@IsNetworkS:
; Line 175
	mov	edx, DWORD PTR _pos$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [eax+edx*2+2]
	neg	eax
	sbb	eax, eax
	add	eax, 1
$LN3@IsNetworkS:
; Line 176
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsNetworkShareRootPath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP ; NWindows::NFile::NName::IsNetworkShareRootPath
; Function compile flags: /Odtp /RTCsu
tv75 = -4						; size = 4
_s$ = 8							; size = 4
?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsDrivePath2
; Line 180
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 97					; 00000061H
	jl	SHORT $LN3@IsDrivePat@2
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 122				; 0000007aH
	jle	SHORT $LN5@IsDrivePat@2
$LN3@IsDrivePat@2:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 65					; 00000041H
	jl	SHORT $LN4@IsDrivePat@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 90					; 0000005aH
	jg	SHORT $LN4@IsDrivePat@2
$LN5@IsDrivePat@2:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+2]
	cmp	eax, 58					; 0000003aH
	jne	SHORT $LN4@IsDrivePat@2
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN6@IsDrivePat@2
$LN4@IsDrivePat@2:
	mov	DWORD PTR tv75[ebp], 0
$LN6@IsDrivePat@2:
	mov	al, BYTE PTR tv75[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsDrivePath2
; Function compile flags: /Odtp /RTCsu
tv83 = -4						; size = 4
_s$ = 8							; size = 4
?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsSuperPath
; Line 182
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@IsSuperPat
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN5@IsSuperPat
$LN3@IsSuperPat:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN4@IsSuperPat
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN5@IsSuperPat
$LN4@IsSuperPat:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+4]
	cmp	eax, 63					; 0000003fH
	jne	SHORT $LN5@IsSuperPat
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN6@IsSuperPat
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN5@IsSuperPat
$LN6@IsSuperPat:
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN7@IsSuperPat
$LN5@IsSuperPat:
	mov	DWORD PTR tv83[ebp], 0
$LN7@IsSuperPat:
	mov	al, BYTE PTR tv83[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsSuperPath
_TEXT	ENDS
PUBLIC	?IsSuperOrDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperOrDevicePath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv86 = -4						; size = 4
_s$ = 8							; size = 4
?IsSuperOrDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z PROC ; NWindows::NFile::NName::IsSuperOrDevicePath
; Line 183
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@IsSuperOrD
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN5@IsSuperOrD
$LN3@IsSuperOrD:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN4@IsSuperOrD
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN5@IsSuperOrD
$LN4@IsSuperOrD:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+4]
	cmp	eax, 63					; 0000003fH
	je	SHORT $LN6@IsSuperOrD
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+4]
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN5@IsSuperOrD
$LN6@IsSuperOrD:
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN7@IsSuperOrD
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+6]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN5@IsSuperOrD
$LN7@IsSuperOrD:
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN8@IsSuperOrD
$LN5@IsSuperOrD:
	mov	DWORD PTR tv86[ebp], 0
$LN8@IsSuperOrD:
	mov	al, BYTE PTR tv86[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?IsSuperOrDevicePath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP ; NWindows::NFile::NName::IsSuperOrDevicePath
_TEXT	ENDS
PUBLIC	?IsDriveRootPath_SuperAllowed@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDriveRootPath_SuperAllowed
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -4						; size = 4
_s$ = 8							; size = 4
?IsDriveRootPath_SuperAllowed@NName@NFile@NWindows@@YG_NPB_W@Z PROC ; NWindows::NFile::NName::IsDriveRootPath_SuperAllowed
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 205
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperPath
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@IsDriveRoo
; Line 206
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 8
	mov	DWORD PTR _s$[ebp], edx
$LN1@IsDriveRoo:
; Line 207
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@IsDriveRoo
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+6]
	test	eax, eax
	jne	SHORT $LN4@IsDriveRoo
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN5@IsDriveRoo
$LN4@IsDriveRoo:
	mov	DWORD PTR tv76[ebp], 0
$LN5@IsDriveRoo:
	mov	al, BYTE PTR tv76[ebp]
; Line 208
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsDriveRootPath_SuperAllowed@NName@NFile@NWindows@@YG_NPB_W@Z ENDP ; NWindows::NFile::NName::IsDriveRootPath_SuperAllowed
_TEXT	ENDS
PUBLIC	?IsAbsolutePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsAbsolutePath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -4						; size = 4
_s$ = 8							; size = 4
?IsAbsolutePath@NName@NFile@NWindows@@YG_NPB_W@Z PROC	; NWindows::NFile::NName::IsAbsolutePath
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 212
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@IsAbsolute
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN3@IsAbsolute
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath2
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@IsAbsolute
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN4@IsAbsolute
$LN3@IsAbsolute:
	mov	DWORD PTR tv72[ebp], 1
$LN4@IsAbsolute:
	mov	al, BYTE PTR tv72[ebp]
; Line 213
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IsAbsolutePath@NName@NFile@NWindows@@YG_NPB_W@Z ENDP	; NWindows::NFile::NName::IsAbsolutePath
_TEXT	ENDS
PUBLIC	?FindAltStreamColon@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindAltStreamColon
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c$67212 = -12						; size = 2
_colonPos$ = -8						; size = 4
_i$ = -4						; size = 4
_path$ = 8						; size = 4
?FindAltStreamColon@NName@NFile@NWindows@@YGHPB_W@Z PROC ; NWindows::NFile::NName::FindAltStreamColon
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 217
	mov	DWORD PTR _i$[ebp], 0
; Line 218
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?IsDrivePath2@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath2
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@FindAltStr
; Line 219
	mov	DWORD PTR _i$[ebp], 2
$LN9@FindAltStr:
; Line 220
	mov	DWORD PTR _colonPos$[ebp], -1
	jmp	SHORT $LN8@FindAltStr
$LN7@FindAltStr:
; Line 221
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN8@FindAltStr:
; Line 223
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _path$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _c$67212[ebp], dx
; Line 224
	movzx	eax, WORD PTR _c$67212[ebp]
	test	eax, eax
	jne	SHORT $LN5@FindAltStr
; Line 225
	mov	eax, DWORD PTR _colonPos$[ebp]
	jmp	SHORT $LN10@FindAltStr
$LN5@FindAltStr:
; Line 226
	movzx	ecx, WORD PTR _c$67212[ebp]
	cmp	ecx, 58					; 0000003aH
	jne	SHORT $LN4@FindAltStr
; Line 228
	cmp	DWORD PTR _colonPos$[ebp], 0
	jge	SHORT $LN3@FindAltStr
; Line 229
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _colonPos$[ebp], edx
$LN3@FindAltStr:
; Line 230
	jmp	SHORT $LN7@FindAltStr
$LN4@FindAltStr:
; Line 232
	movzx	eax, WORD PTR _c$67212[ebp]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN1@FindAltStr
	movzx	ecx, WORD PTR _c$67212[ebp]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN2@FindAltStr
$LN1@FindAltStr:
; Line 233
	mov	DWORD PTR _colonPos$[ebp], -1
$LN2@FindAltStr:
; Line 234
	jmp	SHORT $LN7@FindAltStr
$LN10@FindAltStr:
; Line 235
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FindAltStreamColon@NName@NFile@NWindows@@YGHPB_W@Z ENDP ; NWindows::NFile::NName::FindAltStreamColon
_TEXT	ENDS
PUBLIC	?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_s$ = 8							; size = 4
?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z PROC	; NWindows::NFile::NName::GetRootPrefixSize
; Line 327
	push	ebp
	mov	ebp, esp
; Line 328
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN4@GetRootPre
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN5@GetRootPre
$LN4@GetRootPre:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN3@GetRootPre
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN5@GetRootPre
$LN3@GetRootPre:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+4]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN5@GetRootPre
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN2@GetRootPre
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN5@GetRootPre
$LN2@GetRootPre:
; Line 329
	mov	eax, 4
	jmp	SHORT $LN6@GetRootPre
$LN5@GetRootPre:
; Line 330
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperPath
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@GetRootPre
; Line 331
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?GetRootPrefixSize_Of_SuperPath@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize_Of_SuperPath
	jmp	SHORT $LN6@GetRootPre
$LN1@GetRootPre:
; Line 332
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	?GetRootPrefixSize_Of_SimplePath@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize_Of_SimplePath
$LN6@GetRootPre:
; Line 333
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	4
?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ENDP	; NWindows::NFile::NName::GetRootPrefixSize
; Function compile flags: /Odtp /RTCsu
tv86 = -8						; size = 4
_size$ = -4						; size = 4
_s$ = 8							; size = 4
?GetRootPrefixSize_Of_SimplePath@NName@NFile@NWindows@@YGIPB_W@Z PROC ; NWindows::NFile::NName::GetRootPrefixSize_Of_SimplePath
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 302
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@GetRootPre@2
; Line 303
	mov	eax, 3
	jmp	SHORT $LN5@GetRootPre@2
$LN4@GetRootPre@2:
; Line 304
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN3@GetRootPre@2
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN3@GetRootPre@2
; Line 305
	xor	eax, eax
	jmp	SHORT $LN5@GetRootPre@2
$LN3@GetRootPre@2:
; Line 306
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	test	ecx, ecx
	je	SHORT $LN1@GetRootPre@2
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+2]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN2@GetRootPre@2
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN2@GetRootPre@2
$LN1@GetRootPre@2:
; Line 307
	mov	eax, 1
	jmp	SHORT $LN5@GetRootPre@2
$LN2@GetRootPre@2:
; Line 308
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 4
	push	eax
	call	?GetRootPrefixSize_Of_NetworkPath@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize_Of_NetworkPath
	mov	DWORD PTR _size$[ebp], eax
; Line 309
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN7@GetRootPre@2
	mov	DWORD PTR tv86[ebp], 0
	jmp	SHORT $LN8@GetRootPre@2
$LN7@GetRootPre@2:
	mov	ecx, DWORD PTR _size$[ebp]
	add	ecx, 2
	mov	DWORD PTR tv86[ebp], ecx
$LN8@GetRootPre@2:
	mov	eax, DWORD PTR tv86[ebp]
$LN5@GetRootPre@2:
; Line 310
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRootPrefixSize_Of_SimplePath@NName@NFile@NWindows@@YGIPB_W@Z ENDP ; NWindows::NFile::NName::GetRootPrefixSize_Of_SimplePath
; Function compile flags: /Odtp /RTCsu
_pos2$ = -8						; size = 4
_pos$ = -4						; size = 4
_s$ = 8							; size = 4
?GetRootPrefixSize_Of_NetworkPath@NName@NFile@NWindows@@YGIPB_W@Z PROC ; NWindows::NFile::NName::GetRootPrefixSize_Of_NetworkPath
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 291
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar
	mov	DWORD PTR _pos$[ebp], eax
; Line 292
	cmp	DWORD PTR _pos$[ebp], 0
	jge	SHORT $LN2@GetRootPre@3
; Line 293
	xor	eax, eax
	jmp	SHORT $LN3@GetRootPre@3
$LN2@GetRootPre@3:
; Line 294
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+2]
	push	eax
	call	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar
	mov	DWORD PTR _pos2$[ebp], eax
; Line 295
	cmp	DWORD PTR _pos2$[ebp], 0
	jge	SHORT $LN1@GetRootPre@3
; Line 296
	xor	eax, eax
	jmp	SHORT $LN3@GetRootPre@3
$LN1@GetRootPre@3:
; Line 297
	mov	ecx, DWORD PTR _pos2$[ebp]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [edx+ecx+2]
$LN3@GetRootPre@3:
; Line 298
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRootPrefixSize_Of_NetworkPath@NName@NFile@NWindows@@YGIPB_W@Z ENDP ; NWindows::NFile::NName::GetRootPrefixSize_Of_NetworkPath
; Function compile flags: /Odtp /RTCsu
tv133 = -12						; size = 4
_pos$ = -8						; size = 4
_size$67242 = -4					; size = 4
_s$ = 8							; size = 4
?GetRootPrefixSize_Of_SuperPath@NName@NFile@NWindows@@YGIPB_W@Z PROC ; NWindows::NFile::NName::GetRootPrefixSize_Of_SuperPath
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 314
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	ecx, 85					; 00000055H
	je	SHORT $LN5@GetRootPre@4
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+8]
	cmp	eax, 117				; 00000075H
	jne	SHORT $LN6@GetRootPre@4
$LN5@GetRootPre@4:
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+10]
	cmp	edx, 78					; 0000004eH
	je	SHORT $LN4@GetRootPre@4
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 110				; 0000006eH
	jne	SHORT $LN6@GetRootPre@4
$LN4@GetRootPre@4:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+12]
	cmp	eax, 67					; 00000043H
	je	SHORT $LN3@GetRootPre@4
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	cmp	edx, 99					; 00000063H
	jne	SHORT $LN6@GetRootPre@4
$LN3@GetRootPre@4:
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN2@GetRootPre@4
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+14]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN6@GetRootPre@4
$LN2@GetRootPre@4:
; Line 316
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	?GetRootPrefixSize_Of_NetworkPath@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize_Of_NetworkPath
	mov	DWORD PTR _size$67242[ebp], eax
; Line 317
	cmp	DWORD PTR _size$67242[ebp], 0
	jne	SHORT $LN9@GetRootPre@4
	mov	DWORD PTR tv133[ebp], 0
	jmp	SHORT $LN10@GetRootPre@4
$LN9@GetRootPre@4:
	mov	edx, DWORD PTR _size$67242[ebp]
	add	edx, 8
	mov	DWORD PTR tv133[ebp], edx
$LN10@GetRootPre@4:
	mov	eax, DWORD PTR tv133[ebp]
	jmp	SHORT $LN7@GetRootPre@4
$LN6@GetRootPre@4:
; Line 320
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 8
	push	eax
	call	?FindSepar@NName@NFile@NWindows@@YGHPB_W@Z ; NWindows::NFile::NName::FindSepar
	mov	DWORD PTR _pos$[ebp], eax
; Line 321
	cmp	DWORD PTR _pos$[ebp], 0
	jge	SHORT $LN1@GetRootPre@4
; Line 322
	xor	eax, eax
	jmp	SHORT $LN7@GetRootPre@4
$LN1@GetRootPre@4:
; Line 323
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 5
$LN7@GetRootPre@4:
; Line 324
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetRootPrefixSize_Of_SuperPath@NName@NFile@NWindows@@YGIPB_W@Z ENDP ; NWindows::NFile::NName::GetRootPrefixSize_Of_SuperPath
_TEXT	ENDS
PUBLIC	?Ptr@UString@@QBEPB_WI@Z			; UString::Ptr
PUBLIC	??BUString@@QBEPB_WXZ				; UString::operator wchar_t const *
PUBLIC	?DeleteFrom@UString@@QAEXI@Z			; UString::DeleteFrom
PUBLIC	??1UString@@QAE@XZ				; UString::~UString
PUBLIC	?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z ; NWindows::NFile::NName::GetFullPath
EXTRN	??4UString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator=
EXTRN	??YUString@@QAEAAV0@PB_W@Z:PROC			; UString::operator+=
EXTRN	??0UString@@QAE@XZ:PROC				; UString::UString
EXTRN	??YUString@@QAEAAV0@ABV0@@Z:PROC		; UString::operator+=
EXTRN	??0UString@@QAE@PB_W@Z:PROC			; UString::UString
EXTRN	??4UString@@QAEAAV0@PB_W@Z:PROC			; UString::operator=
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
xdata$x	SEGMENT
__unwindtable$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z$2
__ehfuncinfo$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
$T67470 = -88						; size = 1
$T67469 = -87						; size = 1
$T67468 = -86						; size = 1
$T67467 = -85						; size = 1
$T67466 = -84						; size = 1
$T67465 = -83						; size = 1
$T67464 = -82						; size = 1
$T67463 = -81						; size = 1
_temp$ = -76						; size = 12
_fixedSize$ = -60					; size = 4
_curDir$ = -52						; size = 12
_rem$67324 = -32					; size = 12
_prefixSize$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_dirPrefix$ = 8						; size = 4
_s$ = 12						; size = 4
_res$ = 16						; size = 4
?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z PROC ; NWindows::NFile::NName::GetFullPath
; Line 725
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	push	edi
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 726
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 740
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	?GetRootPrefixSize@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize
	mov	DWORD PTR _prefixSize$[ebp], eax
; Line 741
	cmp	DWORD PTR _prefixSize$[ebp], 0
	je	$LN18@GetFullPat
; Line 743
	mov	edx, DWORD PTR _prefixSize$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	call	?AreThereDotsFolders@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::AreThereDotsFolders
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN17@GetFullPat
; Line 744
	mov	al, 1
	jmp	$LN19@GetFullPat
$LN17@GetFullPat:
; Line 746
	mov	eax, DWORD PTR _prefixSize$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	lea	ecx, DWORD PTR _rem$67324[ebp]
	call	??0UString@@QAE@PB_W@Z			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 747
	lea	eax, DWORD PTR _rem$67324[ebp]
	push	eax
	call	?ResolveDotsFolders@NName@NFile@NWindows@@YG_NAAVUString@@@Z ; NWindows::NFile::NName::ResolveDotsFolders
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN16@GetFullPat
; Line 748
	mov	BYTE PTR $T67463[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rem$67324[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67463[ebp]
	jmp	$LN19@GetFullPat
$LN16@GetFullPat:
; Line 749
	mov	edx, DWORD PTR _prefixSize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
; Line 750
	lea	eax, DWORD PTR _rem$67324[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 751
	mov	BYTE PTR $T67464[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rem$67324[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67464[ebp]
	jmp	$LN19@GetFullPat
$LN18@GetFullPat:
; Line 766
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 767
	cmp	DWORD PTR _dirPrefix$[ebp], 0
	je	SHORT $LN15@GetFullPat
; Line 768
	mov	ecx, DWORD PTR _dirPrefix$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 769
	jmp	SHORT $LN14@GetFullPat
$LN15@GetFullPat:
; Line 771
	lea	edx, DWORD PTR _curDir$[ebp]
	push	edx
	call	?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z ; NWindows::NFile::NName::GetCurDir
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@GetFullPat
; Line 772
	mov	BYTE PTR $T67465[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67465[ebp]
	jmp	$LN19@GetFullPat
$LN14@GetFullPat:
; Line 774
	lea	ecx, DWORD PTR _curDir$[ebp]
	push	ecx
	call	?NormalizeDirPathPrefix@NName@NFile@NWindows@@YGXAAVUString@@@Z ; NWindows::NFile::NName::NormalizeDirPathPrefix
; Line 776
	mov	DWORD PTR _fixedSize$[ebp], 0
; Line 780
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsSuperPath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsSuperPath
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@GetFullPat
; Line 782
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?GetRootPrefixSize_Of_SuperPath@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize_Of_SuperPath
	mov	DWORD PTR _fixedSize$[ebp], eax
; Line 783
	cmp	DWORD PTR _fixedSize$[ebp], 0
	jne	SHORT $LN11@GetFullPat
; Line 784
	mov	BYTE PTR $T67466[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67466[ebp]
	jmp	$LN19@GetFullPat
$LN11@GetFullPat:
; Line 786
	jmp	$LN10@GetFullPat
$LN12@GetFullPat:
; Line 788
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	push	eax
	call	?IsDrivePath@NName@NFile@NWindows@@YG_NPB_W@Z ; NWindows::NFile::NName::IsDrivePath
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@GetFullPat
; Line 789
	mov	DWORD PTR _fixedSize$[ebp], 3
; Line 790
	jmp	$LN10@GetFullPat
$LN9@GetFullPat:
; Line 792
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?IsPathSepar@@YG_N_W@Z			; IsPathSepar
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@GetFullPat
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	movzx	eax, WORD PTR [eax+2]
	push	eax
	call	?IsPathSepar@@YG_N_W@Z			; IsPathSepar
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@GetFullPat
$LN6@GetFullPat:
; Line 793
	mov	BYTE PTR $T67467[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67467[ebp]
	jmp	$LN19@GetFullPat
$LN7@GetFullPat:
; Line 794
	push	2
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	call	?GetRootPrefixSize_Of_NetworkPath@NName@NFile@NWindows@@YGIPB_W@Z ; NWindows::NFile::NName::GetRootPrefixSize_Of_NetworkPath
	mov	DWORD PTR _fixedSize$[ebp], eax
; Line 795
	cmp	DWORD PTR _fixedSize$[ebp], 0
	jne	SHORT $LN5@GetFullPat
; Line 796
	mov	BYTE PTR $T67468[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67468[ebp]
	jmp	$LN19@GetFullPat
$LN5@GetFullPat:
; Line 797
	mov	edx, DWORD PTR _fixedSize$[ebp]
	add	edx, 2
	mov	DWORD PTR _fixedSize$[ebp], edx
$LN10@GetFullPat:
; Line 803
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??0UString@@QAE@XZ			; UString::UString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 804
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@GetFullPat
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN4@GetFullPat
$LN3@GetFullPat:
; Line 806
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
; Line 808
	jmp	SHORT $LN2@GetFullPat
$LN4@GetFullPat:
; Line 810
	mov	edx, DWORD PTR _fixedSize$[ebp]
	push	edx
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	?Ptr@UString@@QBEPB_WI@Z		; UString::Ptr
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??YUString@@QAEAAV0@PB_W@Z		; UString::operator+=
; Line 811
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??YUString@@QAEAAV0@PB_W@Z		; UString::operator+=
$LN2@GetFullPat:
; Line 813
	lea	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	call	?ResolveDotsFolders@NName@NFile@NWindows@@YG_NAAVUString@@@Z ; NWindows::NFile::NName::ResolveDotsFolders
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@GetFullPat
; Line 814
	mov	BYTE PTR $T67469[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67469[ebp]
	jmp	SHORT $LN19@GetFullPat
$LN1@GetFullPat:
; Line 815
	mov	eax, DWORD PTR _fixedSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	?DeleteFrom@UString@@QAEXI@Z		; UString::DeleteFrom
; Line 816
	lea	ecx, DWORD PTR _curDir$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _res$[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
; Line 817
	lea	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	ecx, DWORD PTR _res$[ebp]
	call	??YUString@@QAEAAV0@ABV0@@Z		; UString::operator+=
; Line 821
	mov	BYTE PTR $T67470[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _temp$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _curDir$[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	al, BYTE PTR $T67470[ebp]
$LN19@GetFullPat:
; Line 822
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@GetFullPat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN29@GetFullPat:
	DD	3
	DD	$LN28@GetFullPat
$LN28@GetFullPat:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN24@GetFullPat
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN25@GetFullPat
	DD	-76					; ffffffb4H
	DD	12					; 0000000cH
	DD	$LN26@GetFullPat
$LN26@GetFullPat:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN25@GetFullPat:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$LN24@GetFullPat:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z$0:
	lea	ecx, DWORD PTR _rem$67324[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z$1:
	lea	ecx, DWORD PTR _curDir$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__unwindfunclet$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z$2:
	lea	ecx, DWORD PTR _temp$[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z ENDP ; NWindows::NFile::NName::GetFullPath
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UString@@QAE@XZ
_TEXT	SEGMENT
$T67490 = -8						; size = 4
_this$ = -4						; size = 4
??1UString@@QAE@XZ PROC					; UString::~UString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67490[ebp], ecx
	mov	edx, DWORD PTR $T67490[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UString@@QAE@XZ ENDP					; UString::~UString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BUString@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BUString@@QBEPB_WXZ PROC				; UString::operator wchar_t const *, COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BUString@@QBEPB_WXZ ENDP				; UString::operator wchar_t const *
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Ptr@UString@@QBEPB_WI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Ptr@UString@@QBEPB_WI@Z PROC				; UString::Ptr, COMDAT
; _this$ = ecx
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	esp, ebp
	pop	ebp
	ret	4
?Ptr@UString@@QBEPB_WI@Z ENDP				; UString::Ptr
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeleteFrom@UString@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
?DeleteFrom@UString@@QAEXI@Z PROC			; UString::DeleteFrom, COMDAT
; _this$ = ecx
; Line 604
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 605
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN2@DeleteFrom
; Line 607
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
$LN2@DeleteFrom:
; Line 610
	mov	esp, ebp
	pop	ebp
	ret	4
?DeleteFrom@UString@@QAEXI@Z ENDP			; UString::DeleteFrom
_TEXT	ENDS
PUBLIC	??1AString@@QAE@XZ				; AString::~AString
PUBLIC	?Empty@UString@@QAEXXZ				; UString::Empty
PUBLIC	__$ArrayPad$
EXTRN	__imp__GetCurrentDirectoryW@8:PROC
EXTRN	?fas2fs@@YG?AVUString@@ABVAString@@@Z:PROC	; fas2fs
EXTRN	??0AString@@QAE@PBD@Z:PROC			; AString::AString
EXTRN	__imp__GetCurrentDirectoryA@8:PROC
EXTRN	?g_IsNT@@3_NA:BYTE				; g_IsNT
xdata$x	SEGMENT
__unwindtable$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z$1
__ehfuncinfo$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
_TEXT	SEGMENT
tv88 = -860						; size = 4
tv92 = -856						; size = 4
tv74 = -852						; size = 4
$T67501 = -848						; size = 12
$T67500 = -836						; size = 12
_s$67262 = -820						; size = 524
_s$67258 = -288						; size = 262
_needLength$ = -20					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z PROC ; NWindows::NFile::NName::GetCurDir
; File c:\workspace\7z1505-src\cpp\windows\filename.cpp
; Line 350
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 848				; 00000350H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-860]
	mov	ecx, 212				; 000000d4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 351
	mov	ecx, DWORD PTR _path$[ebp]
	call	?Empty@UString@@QAEXXZ			; UString::Empty
; Line 354
	movzx	eax, BYTE PTR ?g_IsNT@@3_NA		; g_IsNT
	test	eax, eax
	jne	$LN2@GetCurDir
; Line 357
	mov	BYTE PTR _s$67258[ebp], 0
; Line 358
	mov	esi, esp
	lea	ecx, DWORD PTR _s$67258[ebp]
	push	ecx
	push	261					; 00000105H
	call	DWORD PTR __imp__GetCurrentDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _needLength$[ebp], eax
; Line 359
	lea	edx, DWORD PTR _s$67258[ebp]
	push	edx
	lea	ecx, DWORD PTR $T67500[ebp]
	call	??0AString@@QAE@PBD@Z			; AString::AString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T67500[ebp]
	push	eax
	lea	ecx, DWORD PTR $T67501[ebp]
	push	ecx
	call	?fas2fs@@YG?AVUString@@ABVAString@@@Z	; fas2fs
	mov	DWORD PTR tv74[ebp], eax
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR tv92[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv92[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	call	??4UString@@QAEAAV0@ABV0@@Z		; UString::operator=
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T67501[ebp]
	call	??1UString@@QAE@XZ			; UString::~UString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T67500[ebp]
	call	??1AString@@QAE@XZ			; AString::~AString
; Line 361
	jmp	SHORT $LN1@GetCurDir
$LN2@GetCurDir:
; Line 365
	xor	ecx, ecx
	mov	WORD PTR _s$67262[ebp], cx
; Line 366
	mov	esi, esp
	lea	edx, DWORD PTR _s$67262[ebp]
	push	edx
	push	261					; 00000105H
	call	DWORD PTR __imp__GetCurrentDirectoryW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _needLength$[ebp], eax
; Line 367
	lea	eax, DWORD PTR _s$67262[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	call	??4UString@@QAEAAV0@PB_W@Z		; UString::operator=
$LN1@GetCurDir:
; Line 369
	cmp	DWORD PTR _needLength$[ebp], 0
	jbe	SHORT $LN5@GetCurDir
	cmp	DWORD PTR _needLength$[ebp], 260	; 00000104H
	ja	SHORT $LN5@GetCurDir
	mov	DWORD PTR tv88[ebp], 1
	jmp	SHORT $LN6@GetCurDir
$LN5@GetCurDir:
	mov	DWORD PTR tv88[ebp], 0
$LN6@GetCurDir:
	mov	al, BYTE PTR tv88[ebp]
; Line 370
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GetCurDir
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 860				; 0000035cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN13@GetCurDir:
	DD	2
	DD	$LN12@GetCurDir
$LN12@GetCurDir:
	DD	-288					; fffffee0H
	DD	262					; 00000106H
	DD	$LN9@GetCurDir
	DD	-820					; fffffcccH
	DD	524					; 0000020cH
	DD	$LN10@GetCurDir
$LN10@GetCurDir:
	DB	115					; 00000073H
	DB	0
$LN9@GetCurDir:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z$0:
	lea	ecx, DWORD PTR $T67500[ebp]
	jmp	??1AString@@QAE@XZ			; AString::~AString
__unwindfunclet$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z$1:
	lea	ecx, DWORD PTR $T67501[ebp]
	jmp	??1UString@@QAE@XZ			; UString::~UString
__ehhandler$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-860]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCurDir@NName@NFile@NWindows@@YG_NAAVUString@@@Z ENDP ; NWindows::NFile::NName::GetCurDir
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1AString@@QAE@XZ
_TEXT	SEGMENT
$T67515 = -8						; size = 4
_this$ = -4						; size = 4
??1AString@@QAE@XZ PROC					; AString::~AString, COMDAT
; _this$ = ecx
; File c:\workspace\7z1505-src\cpp\common\mystring.h
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T67515[ebp], ecx
	mov	edx, DWORD PTR $T67515[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AString@@QAE@XZ ENDP					; AString::~AString
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Empty@UString@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Empty@UString@@QAEXXZ PROC				; UString::Empty, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	xor	eax, eax
	mov	WORD PTR [edx], ax
	mov	esp, ebp
	pop	ebp
	ret	0
?Empty@UString@@QAEXXZ ENDP				; UString::Empty
_TEXT	ENDS
EXTRN	?Delete@UString@@QAEXII@Z:PROC			; UString::Delete
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv160 = -32						; size = 4
_num$67295 = -28					; size = 4
_num$67289 = -24					; size = 4
_k$67281 = -20						; size = 4
_c2$67277 = -16						; size = 2
_c1$67275 = -12						; size = 2
_c$67270 = -8						; size = 2
_i$67266 = -4						; size = 4
_s$ = 8							; size = 4
?ResolveDotsFolders@NName@NFile@NWindows@@YG_NAAVUString@@@Z PROC ; NWindows::NFile::NName::ResolveDotsFolders
; File c:\workspace\7z1505-src\cpp\windows\filename.cpp
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 377
	mov	DWORD PTR _i$67266[ebp], 0
$LN23@ResolveDot:
; Line 379
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$67266[ebp]
	mov	dx, WORD PTR [eax+ecx*2]
	mov	WORD PTR _c$67270[ebp], dx
; Line 380
	movzx	eax, WORD PTR _c$67270[ebp]
	test	eax, eax
	jne	SHORT $LN21@ResolveDot
; Line 381
	mov	al, 1
	jmp	$LN24@ResolveDot
$LN21@ResolveDot:
; Line 382
	movzx	ecx, WORD PTR _c$67270[ebp]
	cmp	ecx, 46					; 0000002eH
	jne	$LN20@ResolveDot
	cmp	DWORD PTR _i$67266[ebp], 0
	je	SHORT $LN19@ResolveDot
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	edx, DWORD PTR _i$67266[ebp]
	movzx	eax, WORD PTR [eax+edx*2-2]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN19@ResolveDot
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$67266[ebp]
	movzx	edx, WORD PTR [eax+ecx*2-2]
	cmp	edx, 47					; 0000002fH
	jne	$LN20@ResolveDot
$LN19@ResolveDot:
; Line 384
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$67266[ebp]
	mov	dx, WORD PTR [eax+ecx*2+2]
	mov	WORD PTR _c1$67275[ebp], dx
; Line 385
	movzx	eax, WORD PTR _c1$67275[ebp]
	cmp	eax, 46					; 0000002eH
	jne	$LN17@ResolveDot
; Line 387
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _i$67266[ebp]
	mov	dx, WORD PTR [eax+ecx*2+4]
	mov	WORD PTR _c2$67277[ebp], dx
; Line 388
	movzx	eax, WORD PTR _c2$67277[ebp]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN15@ResolveDot
	movzx	ecx, WORD PTR _c2$67277[ebp]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN15@ResolveDot
	movzx	edx, WORD PTR _c2$67277[ebp]
	test	edx, edx
	jne	$LN16@ResolveDot
$LN15@ResolveDot:
; Line 390
	cmp	DWORD PTR _i$67266[ebp], 0
	jne	SHORT $LN14@ResolveDot
; Line 391
	xor	al, al
	jmp	$LN24@ResolveDot
$LN14@ResolveDot:
; Line 392
	mov	eax, DWORD PTR _i$67266[ebp]
	sub	eax, 2
	mov	DWORD PTR _k$67281[ebp], eax
; Line 393
	jmp	SHORT $LN13@ResolveDot
$LN12@ResolveDot:
	mov	ecx, DWORD PTR _k$67281[ebp]
	sub	ecx, 1
	mov	DWORD PTR _k$67281[ebp], ecx
$LN13@ResolveDot:
	cmp	DWORD PTR _k$67281[ebp], 0
	jl	SHORT $LN11@ResolveDot
; Line 394
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	edx, DWORD PTR _k$67281[ebp]
	movzx	eax, WORD PTR [eax+edx*2]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN9@ResolveDot
	mov	ecx, DWORD PTR _s$[ebp]
	call	??BUString@@QBEPB_WXZ			; UString::operator wchar_t const *
	mov	ecx, DWORD PTR _k$67281[ebp]
	movzx	edx, WORD PTR [eax+ecx*2]
	cmp	edx, 47					; 0000002fH
	jne	SHORT $LN10@ResolveDot
$LN9@ResolveDot:
; Line 395
	jmp	SHORT $LN11@ResolveDot
$LN10@ResolveDot:
; Line 396
	jmp	SHORT $LN12@ResolveDot
$LN11@ResolveDot:
; Line 397
	cmp	DWORD PTR _k$67281[ebp], 0
	jl	SHORT $LN8@ResolveDot
; Line 399
	mov	eax, DWORD PTR _i$67266[ebp]
	add	eax, 2
	sub	eax, DWORD PTR _k$67281[ebp]
	mov	DWORD PTR _num$67289[ebp], eax
; Line 400
	mov	ecx, DWORD PTR _k$67281[ebp]
	mov	DWORD PTR _i$67266[ebp], ecx
; Line 402
	jmp	SHORT $LN7@ResolveDot
$LN8@ResolveDot:
; Line 404
	movzx	edx, WORD PTR _c2$67277[ebp]
	test	edx, edx
	jne	SHORT $LN26@ResolveDot
	mov	eax, DWORD PTR _i$67266[ebp]
	add	eax, 2
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN27@ResolveDot
$LN26@ResolveDot:
	mov	ecx, DWORD PTR _i$67266[ebp]
	add	ecx, 3
	mov	DWORD PTR tv160[ebp], ecx
$LN27@ResolveDot:
	mov	edx, DWORD PTR tv160[ebp]
	mov	DWORD PTR _num$67289[ebp], edx
; Line 405
	mov	DWORD PTR _i$67266[ebp], 0
$LN7@ResolveDot:
; Line 407
	mov	eax, DWORD PTR _num$67289[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$67266[ebp]
	push	ecx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Delete@UString@@QAEXII@Z		; UString::Delete
; Line 408
	jmp	$LN23@ResolveDot
$LN16@ResolveDot:
; Line 411
	jmp	SHORT $LN20@ResolveDot
$LN17@ResolveDot:
; Line 413
	movzx	edx, WORD PTR _c1$67275[ebp]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN4@ResolveDot
	movzx	eax, WORD PTR _c1$67275[ebp]
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN4@ResolveDot
	movzx	ecx, WORD PTR _c1$67275[ebp]
	test	ecx, ecx
	jne	SHORT $LN20@ResolveDot
$LN4@ResolveDot:
; Line 415
	mov	DWORD PTR _num$67295[ebp], 2
; Line 416
	cmp	DWORD PTR _i$67266[ebp], 0
	je	SHORT $LN3@ResolveDot
; Line 417
	mov	edx, DWORD PTR _i$67266[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$67266[ebp], edx
	jmp	SHORT $LN2@ResolveDot
$LN3@ResolveDot:
; Line 418
	movzx	eax, WORD PTR _c1$67275[ebp]
	test	eax, eax
	jne	SHORT $LN2@ResolveDot
; Line 419
	mov	DWORD PTR _num$67295[ebp], 1
$LN2@ResolveDot:
; Line 420
	mov	ecx, DWORD PTR _num$67295[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$67266[ebp]
	push	edx
	mov	ecx, DWORD PTR _s$[ebp]
	call	?Delete@UString@@QAEXII@Z		; UString::Delete
; Line 421
	jmp	$LN23@ResolveDot
$LN20@ResolveDot:
; Line 425
	mov	eax, DWORD PTR _i$67266[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67266[ebp], eax
; Line 426
	jmp	$LN23@ResolveDot
$LN24@ResolveDot:
; Line 427
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ResolveDotsFolders@NName@NFile@NWindows@@YG_NAAVUString@@@Z ENDP ; NWindows::NFile::NName::ResolveDotsFolders
; Function compile flags: /Odtp /RTCsu
_c1$67311 = -12					; size = 2
_c$67306 = -8						; size = 2
_i$67302 = -4						; size = 4
_s$ = 8							; size = 4
?AreThereDotsFolders@NName@NFile@NWindows@@YG_NPB_W@Z PROC ; NWindows::NFile::NName::AreThereDotsFolders
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 444
	mov	DWORD PTR _i$67302[ebp], 0
	jmp	SHORT $LN11@AreThereDo
$LN10@AreThereDo:
	mov	eax, DWORD PTR _i$67302[ebp]
	add	eax, 1
	mov	DWORD PTR _i$67302[ebp], eax
$LN11@AreThereDo:
; Line 446
	mov	ecx, DWORD PTR _i$67302[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	ax, WORD PTR [edx+ecx*2]
	mov	WORD PTR _c$67306[ebp], ax
; Line 447
	movzx	ecx, WORD PTR _c$67306[ebp]
	test	ecx, ecx
	jne	SHORT $LN8@AreThereDo
; Line 448
	xor	al, al
	jmp	$LN12@AreThereDo
$LN8@AreThereDo:
; Line 449
	movzx	edx, WORD PTR _c$67306[ebp]
	cmp	edx, 46					; 0000002eH
	jne	$LN7@AreThereDo
	cmp	DWORD PTR _i$67302[ebp], 0
	je	SHORT $LN6@AreThereDo
	mov	eax, DWORD PTR _i$67302[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN6@AreThereDo
	mov	eax, DWORD PTR _i$67302[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 47					; 0000002fH
	jne	SHORT $LN7@AreThereDo
$LN6@AreThereDo:
; Line 451
	mov	eax, DWORD PTR _i$67302[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2+2]
	mov	WORD PTR _c1$67311[ebp], dx
; Line 453
	movzx	eax, WORD PTR _c1$67311[ebp]
	test	eax, eax
	je	SHORT $LN3@AreThereDo
	movzx	ecx, WORD PTR _c1$67311[ebp]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@AreThereDo
	movzx	edx, WORD PTR _c1$67311[ebp]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN3@AreThereDo
	movzx	eax, WORD PTR _c1$67311[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN7@AreThereDo
	mov	ecx, DWORD PTR _i$67302[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+4]
	test	eax, eax
	je	SHORT $LN3@AreThereDo
	mov	ecx, DWORD PTR _i$67302[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+4]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN3@AreThereDo
	mov	ecx, DWORD PTR _i$67302[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, WORD PTR [edx+ecx*2+4]
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN7@AreThereDo
$LN3@AreThereDo:
; Line 454
	mov	al, 1
	jmp	SHORT $LN12@AreThereDo
$LN7@AreThereDo:
; Line 456
	jmp	$LN10@AreThereDo
$LN12@AreThereDo:
; Line 457
	mov	esp, ebp
	pop	ebp
	ret	4
?AreThereDotsFolders@NName@NFile@NWindows@@YG_NPB_W@Z ENDP ; NWindows::NFile::NName::AreThereDotsFolders
_TEXT	ENDS
PUBLIC	?GetFullPath@NName@NFile@NWindows@@YG_NPB_WAAVUString@@@Z ; NWindows::NFile::NName::GetFullPath
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_path$ = 8						; size = 4
_fullPath$ = 12						; size = 4
?GetFullPath@NName@NFile@NWindows@@YG_NPB_WAAVUString@@@Z PROC ; NWindows::NFile::NName::GetFullPath
; Line 825
	push	ebp
	mov	ebp, esp
; Line 826
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	push	0
	call	?GetFullPath@NName@NFile@NWindows@@YG_NPB_W0AAVUString@@@Z ; NWindows::NFile::NName::GetFullPath
; Line 827
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetFullPath@NName@NFile@NWindows@@YG_NPB_WAAVUString@@@Z ENDP ; NWindows::NFile::NName::GetFullPath
_TEXT	ENDS
END
